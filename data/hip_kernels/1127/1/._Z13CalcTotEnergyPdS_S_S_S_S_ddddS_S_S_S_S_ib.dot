digraph "CFG for '_Z13CalcTotEnergyPdS_S_S_S_S_ddddS_S_S_S_S_ib' function" {
	label="CFG for '_Z13CalcTotEnergyPdS_S_S_S_S_ddddS_S_S_S_S_ib' function";

	Node0x5c15a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %18, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %24, %25\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 16\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 8, !tbaa !7\l  %30 = getelementptr i8, i8 addrspace(4)* %19, i64 6\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 2, !range !4, !invariant.load !5\l  %33 = zext i16 %32 to i32\l  %34 = udiv i32 %29, %33\l  %35 = mul i32 %34, %33\l  %36 = icmp ugt i32 %29, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %40 = icmp slt i32 %26, %15\l  br i1 %40, label %41, label %1317\l|{<s0>T|<s1>F}}"];
	Node0x5c15a70:s0 -> Node0x5c19d20;
	Node0x5c15a70:s1 -> Node0x5c19db0;
	Node0x5c19d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%41:\l41:                                               \l  %42 = fsub contract double %7, %8\l  %43 = add nsw i32 %39, 1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %11, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %47 = fadd contract double %46, %9\l  %48 = sext i32 %39 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %11, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %51 = fadd contract double %50, %9\l  %52 = sext i32 %26 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %13, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !16\l  br i1 %16, label %55, label %563\l|{<s0>T|<s1>F}}"];
	Node0x5c19d20:s0 -> Node0x5c1ade0;
	Node0x5c19d20:s1 -> Node0x5c1ae70;
	Node0x5c1ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = tail call double @llvm.fabs.f64(double %9)\l  %57 = tail call double @llvm.amdgcn.frexp.mant.f64(double %56)\l  %58 = fcmp olt double %57, 0x3FE5555555555555\l  %59 = zext i1 %58 to i32\l  %60 = tail call double @llvm.amdgcn.ldexp.f64(double %57, i32 %59)\l  %61 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %56)\l  %62 = sub nsw i32 %61, %59\l  %63 = fadd double %60, -1.000000e+00\l  %64 = fadd double %60, 1.000000e+00\l  %65 = fadd double %64, -1.000000e+00\l  %66 = fsub double %60, %65\l  %67 = tail call double @llvm.amdgcn.rcp.f64(double %64)\l  %68 = fneg double %64\l  %69 = tail call double @llvm.fma.f64(double %68, double %67, double\l... 1.000000e+00)\l  %70 = tail call double @llvm.fma.f64(double %69, double %67, double %67)\l  %71 = tail call double @llvm.fma.f64(double %68, double %70, double\l... 1.000000e+00)\l  %72 = tail call double @llvm.fma.f64(double %71, double %70, double %70)\l  %73 = fmul double %63, %72\l  %74 = fmul double %64, %73\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %73, double %64, double %75)\l  %77 = tail call double @llvm.fma.f64(double %73, double %66, double %76)\l  %78 = fadd double %74, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %77, %79\l  %81 = fsub double %63, %78\l  %82 = fsub double %63, %81\l  %83 = fsub double %82, %78\l  %84 = fsub double %83, %80\l  %85 = fadd double %81, %84\l  %86 = fmul double %72, %85\l  %87 = fadd double %73, %86\l  %88 = fsub double %87, %73\l  %89 = fsub double %86, %88\l  %90 = fmul double %87, %87\l  %91 = fneg double %90\l  %92 = tail call double @llvm.fma.f64(double %87, double %87, double %91)\l  %93 = fmul double %89, 2.000000e+00\l  %94 = tail call double @llvm.fma.f64(double %87, double %93, double %92)\l  %95 = fadd double %90, %94\l  %96 = fsub double %95, %90\l  %97 = fsub double %94, %96\l  %98 = tail call double @llvm.fma.f64(double %95, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %99 = tail call double @llvm.fma.f64(double %95, double %98, double\l... 0x3FBE25E43ABE935A)\l  %100 = tail call double @llvm.fma.f64(double %95, double %99, double\l... 0x3FC110EF47E6C9C2)\l  %101 = tail call double @llvm.fma.f64(double %95, double %100, double\l... 0x3FC3B13BCFA74449)\l  %102 = tail call double @llvm.fma.f64(double %95, double %101, double\l... 0x3FC745D171BF3C30)\l  %103 = tail call double @llvm.fma.f64(double %95, double %102, double\l... 0x3FCC71C71C7792CE)\l  %104 = tail call double @llvm.fma.f64(double %95, double %103, double\l... 0x3FD24924924920DA)\l  %105 = tail call double @llvm.fma.f64(double %95, double %104, double\l... 0x3FD999999999999C)\l  %106 = sitofp i32 %62 to double\l  %107 = fmul double %106, 0x3FE62E42FEFA39EF\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %106, double\l... 0x3FE62E42FEFA39EF, double %108)\l  %110 = tail call double @llvm.fma.f64(double %106, double\l... 0x3C7ABC9E3B39803F, double %109)\l  %111 = fadd double %107, %110\l  %112 = fsub double %111, %107\l  %113 = fsub double %110, %112\l  %114 = tail call double @llvm.amdgcn.ldexp.f64(double %87, i32 1)\l  %115 = tail call double @llvm.amdgcn.ldexp.f64(double %89, i32 1)\l  %116 = fmul double %87, %95\l  %117 = fneg double %116\l  %118 = tail call double @llvm.fma.f64(double %95, double %87, double %117)\l  %119 = tail call double @llvm.fma.f64(double %95, double %89, double %118)\l  %120 = tail call double @llvm.fma.f64(double %97, double %87, double %119)\l  %121 = fadd double %116, %120\l  %122 = fsub double %121, %116\l  %123 = fsub double %120, %122\l  %124 = fmul double %95, %105\l  %125 = fneg double %124\l  %126 = tail call double @llvm.fma.f64(double %95, double %105, double %125)\l  %127 = tail call double @llvm.fma.f64(double %97, double %105, double %126)\l  %128 = fadd double %124, %127\l  %129 = fsub double %128, %124\l  %130 = fsub double %127, %129\l  %131 = fadd double %128, 0x3FE5555555555555\l  %132 = fadd double %131, 0xBFE5555555555555\l  %133 = fsub double %128, %132\l  %134 = fadd double %130, 0x3C8543B0D5DF274D\l  %135 = fadd double %134, %133\l  %136 = fadd double %131, %135\l  %137 = fsub double %136, %131\l  %138 = fsub double %135, %137\l  %139 = fmul double %121, %136\l  %140 = fneg double %139\l  %141 = tail call double @llvm.fma.f64(double %121, double %136, double %140)\l  %142 = tail call double @llvm.fma.f64(double %121, double %138, double %141)\l  %143 = tail call double @llvm.fma.f64(double %123, double %136, double %142)\l  %144 = fadd double %139, %143\l  %145 = fsub double %144, %139\l  %146 = fsub double %143, %145\l  %147 = fadd double %114, %144\l  %148 = fsub double %147, %114\l  %149 = fsub double %144, %148\l  %150 = fadd double %115, %146\l  %151 = fadd double %150, %149\l  %152 = fadd double %147, %151\l  %153 = fsub double %152, %147\l  %154 = fsub double %151, %153\l  %155 = fadd double %111, %152\l  %156 = fsub double %155, %111\l  %157 = fsub double %155, %156\l  %158 = fsub double %111, %157\l  %159 = fsub double %152, %156\l  %160 = fadd double %159, %158\l  %161 = fadd double %113, %154\l  %162 = fsub double %161, %113\l  %163 = fsub double %161, %162\l  %164 = fsub double %113, %163\l  %165 = fsub double %154, %162\l  %166 = fadd double %165, %164\l  %167 = fadd double %161, %160\l  %168 = fadd double %155, %167\l  %169 = fsub double %168, %155\l  %170 = fsub double %167, %169\l  %171 = fadd double %166, %170\l  %172 = fadd double %168, %171\l  %173 = fsub double %172, %168\l  %174 = fsub double %171, %173\l  %175 = fmul double %172, 2.000000e+00\l  %176 = fneg double %175\l  %177 = tail call double @llvm.fma.f64(double %172, double 2.000000e+00,\l... double %176)\l  %178 = tail call double @llvm.fma.f64(double %174, double 2.000000e+00,\l... double %177)\l  %179 = fadd double %175, %178\l  %180 = fsub double %179, %175\l  %181 = fsub double %178, %180\l  %182 = tail call double @llvm.fabs.f64(double %175) #3\l  %183 = fcmp oeq double %182, 0x7FF0000000000000\l  %184 = select i1 %183, double %175, double %179\l  %185 = tail call double @llvm.fabs.f64(double %184) #3\l  %186 = fcmp oeq double %185, 0x7FF0000000000000\l  %187 = select i1 %186, double 0.000000e+00, double %181\l  %188 = fmul double %184, 0x3FF71547652B82FE\l  %189 = tail call double @llvm.rint.f64(double %188)\l  %190 = fneg double %189\l  %191 = tail call double @llvm.fma.f64(double %190, double\l... 0x3FE62E42FEFA39EF, double %184)\l  %192 = tail call double @llvm.fma.f64(double %190, double\l... 0x3C7ABC9E3B39803F, double %191)\l  %193 = tail call double @llvm.fma.f64(double %192, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %194 = tail call double @llvm.fma.f64(double %192, double %193, double\l... 0x3EC71DEE623FDE64)\l  %195 = tail call double @llvm.fma.f64(double %192, double %194, double\l... 0x3EFA01997C89E6B0)\l  %196 = tail call double @llvm.fma.f64(double %192, double %195, double\l... 0x3F2A01A014761F6E)\l  %197 = tail call double @llvm.fma.f64(double %192, double %196, double\l... 0x3F56C16C1852B7B0)\l  %198 = tail call double @llvm.fma.f64(double %192, double %197, double\l... 0x3F81111111122322)\l  %199 = tail call double @llvm.fma.f64(double %192, double %198, double\l... 0x3FA55555555502A1)\l  %200 = tail call double @llvm.fma.f64(double %192, double %199, double\l... 0x3FC5555555555511)\l  %201 = tail call double @llvm.fma.f64(double %192, double %200, double\l... 0x3FE000000000000B)\l  %202 = tail call double @llvm.fma.f64(double %192, double %201, double\l... 1.000000e+00)\l  %203 = tail call double @llvm.fma.f64(double %192, double %202, double\l... 1.000000e+00)\l  %204 = fptosi double %189 to i32\l  %205 = tail call double @llvm.amdgcn.ldexp.f64(double %203, i32 %204)\l  %206 = fcmp ogt double %184, 1.024000e+03\l  %207 = select i1 %206, double 0x7FF0000000000000, double %205\l  %208 = fcmp olt double %184, -1.075000e+03\l  %209 = select i1 %208, double 0.000000e+00, double %207\l  %210 = tail call double @llvm.fma.f64(double %209, double %187, double %209)\l  %211 = tail call double @llvm.fabs.f64(double %209) #3\l  %212 = fcmp oeq double %211, 0x7FF0000000000000\l  %213 = select i1 %212, double %209, double %210\l  %214 = tail call double @llvm.fabs.f64(double %213)\l  %215 = fcmp oeq double %56, 0x7FF0000000000000\l  %216 = fcmp oeq double %9, 0.000000e+00\l  %217 = select i1 %215, double 0x7FF0000000000000, double %214\l  %218 = select i1 %216, double 0.000000e+00, double %217\l  %219 = fcmp uno double %9, 0.000000e+00\l  %220 = select i1 %219, double 0x7FF8000000000000, double %218\l  %221 = fdiv contract double %54, %220\l  %222 = tail call double @llvm.fabs.f64(double %47)\l  %223 = tail call double @llvm.amdgcn.frexp.mant.f64(double %222)\l  %224 = fcmp olt double %223, 0x3FE5555555555555\l  %225 = zext i1 %224 to i32\l  %226 = tail call double @llvm.amdgcn.ldexp.f64(double %223, i32 %225)\l  %227 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %222)\l  %228 = sub nsw i32 %227, %225\l  %229 = fadd double %226, -1.000000e+00\l  %230 = fadd double %226, 1.000000e+00\l  %231 = fadd double %230, -1.000000e+00\l  %232 = fsub double %226, %231\l  %233 = tail call double @llvm.amdgcn.rcp.f64(double %230)\l  %234 = fneg double %230\l  %235 = tail call double @llvm.fma.f64(double %234, double %233, double\l... 1.000000e+00)\l  %236 = tail call double @llvm.fma.f64(double %235, double %233, double %233)\l  %237 = tail call double @llvm.fma.f64(double %234, double %236, double\l... 1.000000e+00)\l  %238 = tail call double @llvm.fma.f64(double %237, double %236, double %236)\l  %239 = fmul double %229, %238\l  %240 = fmul double %230, %239\l  %241 = fneg double %240\l  %242 = tail call double @llvm.fma.f64(double %239, double %230, double %241)\l  %243 = tail call double @llvm.fma.f64(double %239, double %232, double %242)\l  %244 = fadd double %240, %243\l  %245 = fsub double %244, %240\l  %246 = fsub double %243, %245\l  %247 = fsub double %229, %244\l  %248 = fsub double %229, %247\l  %249 = fsub double %248, %244\l  %250 = fsub double %249, %246\l  %251 = fadd double %247, %250\l  %252 = fmul double %238, %251\l  %253 = fadd double %239, %252\l  %254 = fsub double %253, %239\l  %255 = fsub double %252, %254\l  %256 = fmul double %253, %253\l  %257 = fneg double %256\l  %258 = tail call double @llvm.fma.f64(double %253, double %253, double %257)\l  %259 = fmul double %255, 2.000000e+00\l  %260 = tail call double @llvm.fma.f64(double %253, double %259, double %258)\l  %261 = fadd double %256, %260\l  %262 = fsub double %261, %256\l  %263 = fsub double %260, %262\l  %264 = tail call double @llvm.fma.f64(double %261, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %265 = tail call double @llvm.fma.f64(double %261, double %264, double\l... 0x3FBE25E43ABE935A)\l  %266 = tail call double @llvm.fma.f64(double %261, double %265, double\l... 0x3FC110EF47E6C9C2)\l  %267 = tail call double @llvm.fma.f64(double %261, double %266, double\l... 0x3FC3B13BCFA74449)\l  %268 = tail call double @llvm.fma.f64(double %261, double %267, double\l... 0x3FC745D171BF3C30)\l  %269 = tail call double @llvm.fma.f64(double %261, double %268, double\l... 0x3FCC71C71C7792CE)\l  %270 = tail call double @llvm.fma.f64(double %261, double %269, double\l... 0x3FD24924924920DA)\l  %271 = tail call double @llvm.fma.f64(double %261, double %270, double\l... 0x3FD999999999999C)\l  %272 = sitofp i32 %228 to double\l  %273 = fmul double %272, 0x3FE62E42FEFA39EF\l  %274 = fneg double %273\l  %275 = tail call double @llvm.fma.f64(double %272, double\l... 0x3FE62E42FEFA39EF, double %274)\l  %276 = tail call double @llvm.fma.f64(double %272, double\l... 0x3C7ABC9E3B39803F, double %275)\l  %277 = fadd double %273, %276\l  %278 = fsub double %277, %273\l  %279 = fsub double %276, %278\l  %280 = tail call double @llvm.amdgcn.ldexp.f64(double %253, i32 1)\l  %281 = tail call double @llvm.amdgcn.ldexp.f64(double %255, i32 1)\l  %282 = fmul double %253, %261\l  %283 = fneg double %282\l  %284 = tail call double @llvm.fma.f64(double %261, double %253, double %283)\l  %285 = tail call double @llvm.fma.f64(double %261, double %255, double %284)\l  %286 = tail call double @llvm.fma.f64(double %263, double %253, double %285)\l  %287 = fadd double %282, %286\l  %288 = fsub double %287, %282\l  %289 = fsub double %286, %288\l  %290 = fmul double %261, %271\l  %291 = fneg double %290\l  %292 = tail call double @llvm.fma.f64(double %261, double %271, double %291)\l  %293 = tail call double @llvm.fma.f64(double %263, double %271, double %292)\l  %294 = fadd double %290, %293\l  %295 = fsub double %294, %290\l  %296 = fsub double %293, %295\l  %297 = fadd double %294, 0x3FE5555555555555\l  %298 = fadd double %297, 0xBFE5555555555555\l  %299 = fsub double %294, %298\l  %300 = fadd double %296, 0x3C8543B0D5DF274D\l  %301 = fadd double %300, %299\l  %302 = fadd double %297, %301\l  %303 = fsub double %302, %297\l  %304 = fsub double %301, %303\l  %305 = fmul double %287, %302\l  %306 = fneg double %305\l  %307 = tail call double @llvm.fma.f64(double %287, double %302, double %306)\l  %308 = tail call double @llvm.fma.f64(double %287, double %304, double %307)\l  %309 = tail call double @llvm.fma.f64(double %289, double %302, double %308)\l  %310 = fadd double %305, %309\l  %311 = fsub double %310, %305\l  %312 = fsub double %309, %311\l  %313 = fadd double %280, %310\l  %314 = fsub double %313, %280\l  %315 = fsub double %310, %314\l  %316 = fadd double %281, %312\l  %317 = fadd double %316, %315\l  %318 = fadd double %313, %317\l  %319 = fsub double %318, %313\l  %320 = fsub double %317, %319\l  %321 = fadd double %277, %318\l  %322 = fsub double %321, %277\l  %323 = fsub double %321, %322\l  %324 = fsub double %277, %323\l  %325 = fsub double %318, %322\l  %326 = fadd double %325, %324\l  %327 = fadd double %279, %320\l  %328 = fsub double %327, %279\l  %329 = fsub double %327, %328\l  %330 = fsub double %279, %329\l  %331 = fsub double %320, %328\l  %332 = fadd double %331, %330\l  %333 = fadd double %327, %326\l  %334 = fadd double %321, %333\l  %335 = fsub double %334, %321\l  %336 = fsub double %333, %335\l  %337 = fadd double %332, %336\l  %338 = fadd double %334, %337\l  %339 = fsub double %338, %334\l  %340 = fsub double %337, %339\l  %341 = fmul double %338, 3.000000e+00\l  %342 = fneg double %341\l  %343 = tail call double @llvm.fma.f64(double %338, double 3.000000e+00,\l... double %342)\l  %344 = tail call double @llvm.fma.f64(double %340, double 3.000000e+00,\l... double %343)\l  %345 = fadd double %341, %344\l  %346 = fsub double %345, %341\l  %347 = fsub double %344, %346\l  %348 = tail call double @llvm.fabs.f64(double %341) #3\l  %349 = fcmp oeq double %348, 0x7FF0000000000000\l  %350 = select i1 %349, double %341, double %345\l  %351 = tail call double @llvm.fabs.f64(double %350) #3\l  %352 = fcmp oeq double %351, 0x7FF0000000000000\l  %353 = select i1 %352, double 0.000000e+00, double %347\l  %354 = fmul double %350, 0x3FF71547652B82FE\l  %355 = tail call double @llvm.rint.f64(double %354)\l  %356 = fneg double %355\l  %357 = tail call double @llvm.fma.f64(double %356, double\l... 0x3FE62E42FEFA39EF, double %350)\l  %358 = tail call double @llvm.fma.f64(double %356, double\l... 0x3C7ABC9E3B39803F, double %357)\l  %359 = tail call double @llvm.fma.f64(double %358, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %360 = tail call double @llvm.fma.f64(double %358, double %359, double\l... 0x3EC71DEE623FDE64)\l  %361 = tail call double @llvm.fma.f64(double %358, double %360, double\l... 0x3EFA01997C89E6B0)\l  %362 = tail call double @llvm.fma.f64(double %358, double %361, double\l... 0x3F2A01A014761F6E)\l  %363 = tail call double @llvm.fma.f64(double %358, double %362, double\l... 0x3F56C16C1852B7B0)\l  %364 = tail call double @llvm.fma.f64(double %358, double %363, double\l... 0x3F81111111122322)\l  %365 = tail call double @llvm.fma.f64(double %358, double %364, double\l... 0x3FA55555555502A1)\l  %366 = tail call double @llvm.fma.f64(double %358, double %365, double\l... 0x3FC5555555555511)\l  %367 = tail call double @llvm.fma.f64(double %358, double %366, double\l... 0x3FE000000000000B)\l  %368 = tail call double @llvm.fma.f64(double %358, double %367, double\l... 1.000000e+00)\l  %369 = tail call double @llvm.fma.f64(double %358, double %368, double\l... 1.000000e+00)\l  %370 = fptosi double %355 to i32\l  %371 = tail call double @llvm.amdgcn.ldexp.f64(double %369, i32 %370)\l  %372 = fcmp ogt double %350, 1.024000e+03\l  %373 = select i1 %372, double 0x7FF0000000000000, double %371\l  %374 = fcmp olt double %350, -1.075000e+03\l  %375 = select i1 %374, double 0.000000e+00, double %373\l  %376 = tail call double @llvm.fma.f64(double %375, double %353, double %375)\l  %377 = tail call double @llvm.fabs.f64(double %375) #3\l  %378 = fcmp oeq double %377, 0x7FF0000000000000\l  %379 = select i1 %378, double %375, double %376\l  %380 = fcmp uge double %47, 0.000000e+00\l  %381 = select i1 %380, double 0.000000e+00, double -0.000000e+00\l  %382 = tail call double @llvm.copysign.f64(double %379, double %381)\l  %383 = fcmp oeq double %222, 0x7FF0000000000000\l  %384 = fcmp oeq double %47, 0.000000e+00\l  %385 = or i1 %384, %383\l  %386 = select i1 %384, double 0.000000e+00, double 0x7FF0000000000000\l  %387 = tail call double @llvm.copysign.f64(double %386, double %47)\l  %388 = select i1 %385, double %387, double %382\l  %389 = fcmp uno double %47, 0.000000e+00\l  %390 = select i1 %389, double 0x7FF8000000000000, double %388\l  %391 = tail call double @llvm.fabs.f64(double %51)\l  %392 = tail call double @llvm.amdgcn.frexp.mant.f64(double %391)\l  %393 = fcmp olt double %392, 0x3FE5555555555555\l  %394 = zext i1 %393 to i32\l  %395 = tail call double @llvm.amdgcn.ldexp.f64(double %392, i32 %394)\l  %396 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %391)\l  %397 = sub nsw i32 %396, %394\l  %398 = fadd double %395, -1.000000e+00\l  %399 = fadd double %395, 1.000000e+00\l  %400 = fadd double %399, -1.000000e+00\l  %401 = fsub double %395, %400\l  %402 = tail call double @llvm.amdgcn.rcp.f64(double %399)\l  %403 = fneg double %399\l  %404 = tail call double @llvm.fma.f64(double %403, double %402, double\l... 1.000000e+00)\l  %405 = tail call double @llvm.fma.f64(double %404, double %402, double %402)\l  %406 = tail call double @llvm.fma.f64(double %403, double %405, double\l... 1.000000e+00)\l  %407 = tail call double @llvm.fma.f64(double %406, double %405, double %405)\l  %408 = fmul double %398, %407\l  %409 = fmul double %399, %408\l  %410 = fneg double %409\l  %411 = tail call double @llvm.fma.f64(double %408, double %399, double %410)\l  %412 = tail call double @llvm.fma.f64(double %408, double %401, double %411)\l  %413 = fadd double %409, %412\l  %414 = fsub double %413, %409\l  %415 = fsub double %412, %414\l  %416 = fsub double %398, %413\l  %417 = fsub double %398, %416\l  %418 = fsub double %417, %413\l  %419 = fsub double %418, %415\l  %420 = fadd double %416, %419\l  %421 = fmul double %407, %420\l  %422 = fadd double %408, %421\l  %423 = fsub double %422, %408\l  %424 = fsub double %421, %423\l  %425 = fmul double %422, %422\l  %426 = fneg double %425\l  %427 = tail call double @llvm.fma.f64(double %422, double %422, double %426)\l  %428 = fmul double %424, 2.000000e+00\l  %429 = tail call double @llvm.fma.f64(double %422, double %428, double %427)\l  %430 = fadd double %425, %429\l  %431 = fsub double %430, %425\l  %432 = fsub double %429, %431\l  %433 = tail call double @llvm.fma.f64(double %430, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %434 = tail call double @llvm.fma.f64(double %430, double %433, double\l... 0x3FBE25E43ABE935A)\l  %435 = tail call double @llvm.fma.f64(double %430, double %434, double\l... 0x3FC110EF47E6C9C2)\l  %436 = tail call double @llvm.fma.f64(double %430, double %435, double\l... 0x3FC3B13BCFA74449)\l  %437 = tail call double @llvm.fma.f64(double %430, double %436, double\l... 0x3FC745D171BF3C30)\l  %438 = tail call double @llvm.fma.f64(double %430, double %437, double\l... 0x3FCC71C71C7792CE)\l  %439 = tail call double @llvm.fma.f64(double %430, double %438, double\l... 0x3FD24924924920DA)\l  %440 = tail call double @llvm.fma.f64(double %430, double %439, double\l... 0x3FD999999999999C)\l  %441 = sitofp i32 %397 to double\l  %442 = fmul double %441, 0x3FE62E42FEFA39EF\l  %443 = fneg double %442\l  %444 = tail call double @llvm.fma.f64(double %441, double\l... 0x3FE62E42FEFA39EF, double %443)\l  %445 = tail call double @llvm.fma.f64(double %441, double\l... 0x3C7ABC9E3B39803F, double %444)\l  %446 = fadd double %442, %445\l  %447 = fsub double %446, %442\l  %448 = fsub double %445, %447\l  %449 = tail call double @llvm.amdgcn.ldexp.f64(double %422, i32 1)\l  %450 = tail call double @llvm.amdgcn.ldexp.f64(double %424, i32 1)\l  %451 = fmul double %422, %430\l  %452 = fneg double %451\l  %453 = tail call double @llvm.fma.f64(double %430, double %422, double %452)\l  %454 = tail call double @llvm.fma.f64(double %430, double %424, double %453)\l  %455 = tail call double @llvm.fma.f64(double %432, double %422, double %454)\l  %456 = fadd double %451, %455\l  %457 = fsub double %456, %451\l  %458 = fsub double %455, %457\l  %459 = fmul double %430, %440\l  %460 = fneg double %459\l  %461 = tail call double @llvm.fma.f64(double %430, double %440, double %460)\l  %462 = tail call double @llvm.fma.f64(double %432, double %440, double %461)\l  %463 = fadd double %459, %462\l  %464 = fsub double %463, %459\l  %465 = fsub double %462, %464\l  %466 = fadd double %463, 0x3FE5555555555555\l  %467 = fadd double %466, 0xBFE5555555555555\l  %468 = fsub double %463, %467\l  %469 = fadd double %465, 0x3C8543B0D5DF274D\l  %470 = fadd double %469, %468\l  %471 = fadd double %466, %470\l  %472 = fsub double %471, %466\l  %473 = fsub double %470, %472\l  %474 = fmul double %456, %471\l  %475 = fneg double %474\l  %476 = tail call double @llvm.fma.f64(double %456, double %471, double %475)\l  %477 = tail call double @llvm.fma.f64(double %456, double %473, double %476)\l  %478 = tail call double @llvm.fma.f64(double %458, double %471, double %477)\l  %479 = fadd double %474, %478\l  %480 = fsub double %479, %474\l  %481 = fsub double %478, %480\l  %482 = fadd double %449, %479\l  %483 = fsub double %482, %449\l  %484 = fsub double %479, %483\l  %485 = fadd double %450, %481\l  %486 = fadd double %485, %484\l  %487 = fadd double %482, %486\l  %488 = fsub double %487, %482\l  %489 = fsub double %486, %488\l  %490 = fadd double %446, %487\l  %491 = fsub double %490, %446\l  %492 = fsub double %490, %491\l  %493 = fsub double %446, %492\l  %494 = fsub double %487, %491\l  %495 = fadd double %494, %493\l  %496 = fadd double %448, %489\l  %497 = fsub double %496, %448\l  %498 = fsub double %496, %497\l  %499 = fsub double %448, %498\l  %500 = fsub double %489, %497\l  %501 = fadd double %500, %499\l  %502 = fadd double %496, %495\l  %503 = fadd double %490, %502\l  %504 = fsub double %503, %490\l  %505 = fsub double %502, %504\l  %506 = fadd double %501, %505\l  %507 = fadd double %503, %506\l  %508 = fsub double %507, %503\l  %509 = fsub double %506, %508\l  %510 = fmul double %507, 3.000000e+00\l  %511 = fneg double %510\l  %512 = tail call double @llvm.fma.f64(double %507, double 3.000000e+00,\l... double %511)\l  %513 = tail call double @llvm.fma.f64(double %509, double 3.000000e+00,\l... double %512)\l  %514 = fadd double %510, %513\l  %515 = fsub double %514, %510\l  %516 = fsub double %513, %515\l  %517 = tail call double @llvm.fabs.f64(double %510) #3\l  %518 = fcmp oeq double %517, 0x7FF0000000000000\l  %519 = select i1 %518, double %510, double %514\l  %520 = tail call double @llvm.fabs.f64(double %519) #3\l  %521 = fcmp oeq double %520, 0x7FF0000000000000\l  %522 = select i1 %521, double 0.000000e+00, double %516\l  %523 = fmul double %519, 0x3FF71547652B82FE\l  %524 = tail call double @llvm.rint.f64(double %523)\l  %525 = fneg double %524\l  %526 = tail call double @llvm.fma.f64(double %525, double\l... 0x3FE62E42FEFA39EF, double %519)\l  %527 = tail call double @llvm.fma.f64(double %525, double\l... 0x3C7ABC9E3B39803F, double %526)\l  %528 = tail call double @llvm.fma.f64(double %527, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %529 = tail call double @llvm.fma.f64(double %527, double %528, double\l... 0x3EC71DEE623FDE64)\l  %530 = tail call double @llvm.fma.f64(double %527, double %529, double\l... 0x3EFA01997C89E6B0)\l  %531 = tail call double @llvm.fma.f64(double %527, double %530, double\l... 0x3F2A01A014761F6E)\l  %532 = tail call double @llvm.fma.f64(double %527, double %531, double\l... 0x3F56C16C1852B7B0)\l  %533 = tail call double @llvm.fma.f64(double %527, double %532, double\l... 0x3F81111111122322)\l  %534 = tail call double @llvm.fma.f64(double %527, double %533, double\l... 0x3FA55555555502A1)\l  %535 = tail call double @llvm.fma.f64(double %527, double %534, double\l... 0x3FC5555555555511)\l  %536 = tail call double @llvm.fma.f64(double %527, double %535, double\l... 0x3FE000000000000B)\l  %537 = tail call double @llvm.fma.f64(double %527, double %536, double\l... 1.000000e+00)\l  %538 = tail call double @llvm.fma.f64(double %527, double %537, double\l... 1.000000e+00)\l  %539 = fptosi double %524 to i32\l  %540 = tail call double @llvm.amdgcn.ldexp.f64(double %538, i32 %539)\l  %541 = fcmp ogt double %519, 1.024000e+03\l  %542 = select i1 %541, double 0x7FF0000000000000, double %540\l  %543 = fcmp olt double %519, -1.075000e+03\l  %544 = select i1 %543, double 0.000000e+00, double %542\l  %545 = tail call double @llvm.fma.f64(double %544, double %522, double %544)\l  %546 = tail call double @llvm.fabs.f64(double %544) #3\l  %547 = fcmp oeq double %546, 0x7FF0000000000000\l  %548 = select i1 %547, double %544, double %545\l  %549 = fcmp uge double %51, 0.000000e+00\l  %550 = select i1 %549, double 0.000000e+00, double -0.000000e+00\l  %551 = tail call double @llvm.copysign.f64(double %548, double %550)\l  %552 = fcmp oeq double %391, 0x7FF0000000000000\l  %553 = fcmp oeq double %51, 0.000000e+00\l  %554 = or i1 %553, %552\l  %555 = select i1 %553, double 0.000000e+00, double 0x7FF0000000000000\l  %556 = tail call double @llvm.copysign.f64(double %555, double %51)\l  %557 = select i1 %554, double %556, double %551\l  %558 = fcmp uno double %51, 0.000000e+00\l  %559 = select i1 %558, double 0x7FF8000000000000, double %557\l  %560 = fsub contract double %390, %559\l  %561 = fmul contract double %560, %221\l  %562 = fdiv contract double %561, 3.000000e+00\l  br label %566\l}"];
	Node0x5c1ade0 -> Node0x5c36830;
	Node0x5c1ae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%563:\l563:                                              \l  %564 = fsub contract double %47, %51\l  %565 = fmul contract double %564, %54\l  br label %566\l}"];
	Node0x5c1ae70 -> Node0x5c36830;
	Node0x5c36830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%566:\l566:                                              \l  %567 = phi double [ %562, %55 ], [ %565, %563 ]\l  %568 = mul i32 %38, %26\l  %569 = add i32 %568, %39\l  %570 = sext i32 %569 to i64\l  %571 = getelementptr inbounds double, double addrspace(1)* %3, i64 %570\l  %572 = load double, double addrspace(1)* %571, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %573 = shl nsw i32 %26, 1\l  %574 = add nuw nsw i32 %573, 1\l  %575 = sext i32 %574 to i64\l  %576 = getelementptr inbounds double, double addrspace(1)* %12, i64 %575\l  %577 = load double, double addrspace(1)* %576, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %578 = tail call double @llvm.fabs.f64(double %577)\l  %579 = fcmp olt double %578, 0x41D0000000000000\l  br i1 %579, label %580, label %599\l|{<s0>T|<s1>F}}"];
	Node0x5c36830:s0 -> Node0x5c37230;
	Node0x5c36830:s1 -> Node0x5c372c0;
	Node0x5c37230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%580:\l580:                                              \l  %581 = fmul double %578, 0x3FE45F306DC9C883\l  %582 = tail call double @llvm.rint.f64(double %581)\l  %583 = tail call double @llvm.fma.f64(double %582, double\l... 0xBFF921FB54442D18, double %578)\l  %584 = tail call double @llvm.fma.f64(double %582, double\l... 0xBC91A62633145C00, double %583)\l  %585 = fmul double %582, 0x3C91A62633145C00\l  %586 = fneg double %585\l  %587 = tail call double @llvm.fma.f64(double %582, double\l... 0x3C91A62633145C00, double %586)\l  %588 = fsub double %583, %585\l  %589 = fsub double %583, %588\l  %590 = fsub double %589, %585\l  %591 = fsub double %588, %584\l  %592 = fadd double %591, %590\l  %593 = fsub double %592, %587\l  %594 = tail call double @llvm.fma.f64(double %582, double\l... 0xB97B839A252049C0, double %593)\l  %595 = fadd double %584, %594\l  %596 = fsub double %595, %584\l  %597 = fsub double %594, %596\l  %598 = fptosi double %582 to i32\l  br label %675\l}"];
	Node0x5c37230 -> Node0x5c381c0;
	Node0x5c372c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%599:\l599:                                              \l  %600 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 0)\l  %601 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 1)\l  %602 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 2)\l  %603 = fcmp oge double %578, 0x7B00000000000000\l  %604 = tail call double @llvm.amdgcn.ldexp.f64(double %578, i32 -128)\l  %605 = select i1 %603, double %604, double %578\l  %606 = fmul double %602, %605\l  %607 = fneg double %606\l  %608 = tail call double @llvm.fma.f64(double %602, double %605, double %607)\l  %609 = fmul double %601, %605\l  %610 = fneg double %609\l  %611 = tail call double @llvm.fma.f64(double %601, double %605, double %610)\l  %612 = fmul double %600, %605\l  %613 = fneg double %612\l  %614 = tail call double @llvm.fma.f64(double %600, double %605, double %613)\l  %615 = fadd double %609, %614\l  %616 = fsub double %615, %609\l  %617 = fsub double %615, %616\l  %618 = fsub double %614, %616\l  %619 = fsub double %609, %617\l  %620 = fadd double %618, %619\l  %621 = fadd double %606, %611\l  %622 = fsub double %621, %606\l  %623 = fsub double %621, %622\l  %624 = fsub double %611, %622\l  %625 = fsub double %606, %623\l  %626 = fadd double %624, %625\l  %627 = fadd double %621, %620\l  %628 = fsub double %627, %621\l  %629 = fsub double %627, %628\l  %630 = fsub double %620, %628\l  %631 = fsub double %621, %629\l  %632 = fadd double %630, %631\l  %633 = fadd double %626, %632\l  %634 = fadd double %608, %633\l  %635 = fadd double %612, %615\l  %636 = fsub double %635, %612\l  %637 = fsub double %615, %636\l  %638 = fadd double %637, %627\l  %639 = fsub double %638, %637\l  %640 = fsub double %627, %639\l  %641 = fadd double %640, %634\l  %642 = tail call double @llvm.amdgcn.ldexp.f64(double %635, i32 -2)\l  %643 = tail call double @llvm.amdgcn.fract.f64(double %642)\l  %644 = tail call i1 @llvm.amdgcn.class.f64(double %642, i32 516)\l  %645 = select i1 %644, double 0.000000e+00, double %643\l  %646 = tail call double @llvm.amdgcn.ldexp.f64(double %645, i32 2)\l  %647 = fadd double %646, %638\l  %648 = fcmp olt double %647, 0.000000e+00\l  %649 = select i1 %648, double 4.000000e+00, double 0.000000e+00\l  %650 = fadd double %646, %649\l  %651 = fadd double %638, %650\l  %652 = fptosi double %651 to i32\l  %653 = sitofp i32 %652 to double\l  %654 = fsub double %650, %653\l  %655 = fadd double %638, %654\l  %656 = fsub double %655, %654\l  %657 = fsub double %638, %656\l  %658 = fadd double %641, %657\l  %659 = fcmp oge double %655, 5.000000e-01\l  %660 = zext i1 %659 to i32\l  %661 = add nsw i32 %660, %652\l  %662 = select i1 %659, double 1.000000e+00, double 0.000000e+00\l  %663 = fsub double %655, %662\l  %664 = fadd double %663, %658\l  %665 = fsub double %664, %663\l  %666 = fsub double %658, %665\l  %667 = fmul double %664, 0x3FF921FB54442D18\l  %668 = fneg double %667\l  %669 = tail call double @llvm.fma.f64(double %664, double\l... 0x3FF921FB54442D18, double %668)\l  %670 = tail call double @llvm.fma.f64(double %664, double\l... 0x3C91A62633145C07, double %669)\l  %671 = tail call double @llvm.fma.f64(double %666, double\l... 0x3FF921FB54442D18, double %670)\l  %672 = fadd double %667, %671\l  %673 = fsub double %672, %667\l  %674 = fsub double %671, %673\l  br label %675\l}"];
	Node0x5c372c0 -> Node0x5c381c0;
	Node0x5c381c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%675:\l675:                                              \l  %676 = phi double [ %597, %580 ], [ %674, %599 ]\l  %677 = phi double [ %595, %580 ], [ %672, %599 ]\l  %678 = phi i32 [ %598, %580 ], [ %661, %599 ]\l  %679 = fmul double %677, %677\l  %680 = fmul double %679, 5.000000e-01\l  %681 = fsub double 1.000000e+00, %680\l  %682 = fsub double 1.000000e+00, %681\l  %683 = fsub double %682, %680\l  %684 = fmul double %679, %679\l  %685 = tail call double @llvm.fma.f64(double %679, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %686 = tail call double @llvm.fma.f64(double %679, double %685, double\l... 0xBE927E4FA17F65F6)\l  %687 = tail call double @llvm.fma.f64(double %679, double %686, double\l... 0x3EFA01A019F4EC90)\l  %688 = tail call double @llvm.fma.f64(double %679, double %687, double\l... 0xBF56C16C16C16967)\l  %689 = tail call double @llvm.fma.f64(double %679, double %688, double\l... 0x3FA5555555555555)\l  %690 = fneg double %676\l  %691 = tail call double @llvm.fma.f64(double %677, double %690, double %683)\l  %692 = tail call double @llvm.fma.f64(double %684, double %689, double %691)\l  %693 = fadd double %681, %692\l  %694 = tail call double @llvm.fma.f64(double %679, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %695 = tail call double @llvm.fma.f64(double %679, double %694, double\l... 0x3EC71DE3796CDE01)\l  %696 = tail call double @llvm.fma.f64(double %679, double %695, double\l... 0xBF2A01A019E83E5C)\l  %697 = tail call double @llvm.fma.f64(double %679, double %696, double\l... 0x3F81111111110BB3)\l  %698 = fneg double %679\l  %699 = fmul double %677, %698\l  %700 = fmul double %676, 5.000000e-01\l  %701 = tail call double @llvm.fma.f64(double %699, double %697, double %700)\l  %702 = tail call double @llvm.fma.f64(double %679, double %701, double %690)\l  %703 = tail call double @llvm.fma.f64(double %699, double\l... 0xBFC5555555555555, double %702)\l  %704 = fsub double %677, %703\l  %705 = fneg double %704\l  %706 = and i32 %678, 1\l  %707 = icmp eq i32 %706, 0\l  %708 = select i1 %707, double %693, double %705\l  %709 = bitcast double %708 to \<2 x i32\>\l  %710 = shl i32 %678, 30\l  %711 = and i32 %710, -2147483648\l  %712 = extractelement \<2 x i32\> %709, i64 1\l  %713 = xor i32 %712, %711\l  %714 = insertelement \<2 x i32\> %709, i32 %713, i64 1\l  %715 = tail call i1 @llvm.amdgcn.class.f64(double %578, i32 504)\l  %716 = select i1 %715, \<2 x i32\> %714, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %717 = bitcast \<2 x i32\> %716 to double\l  %718 = fmul contract double %572, %717\l  %719 = sext i32 %573 to i64\l  %720 = getelementptr inbounds double, double addrspace(1)* %12, i64 %719\l  %721 = load double, double addrspace(1)* %720, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %722 = tail call double @llvm.fabs.f64(double %721)\l  %723 = fcmp olt double %722, 0x41D0000000000000\l  br i1 %723, label %724, label %743\l|{<s0>T|<s1>F}}"];
	Node0x5c381c0:s0 -> Node0x5c3f410;
	Node0x5c381c0:s1 -> Node0x5c3f4a0;
	Node0x5c3f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%724:\l724:                                              \l  %725 = fmul double %722, 0x3FE45F306DC9C883\l  %726 = tail call double @llvm.rint.f64(double %725)\l  %727 = tail call double @llvm.fma.f64(double %726, double\l... 0xBFF921FB54442D18, double %722)\l  %728 = tail call double @llvm.fma.f64(double %726, double\l... 0xBC91A62633145C00, double %727)\l  %729 = fmul double %726, 0x3C91A62633145C00\l  %730 = fneg double %729\l  %731 = tail call double @llvm.fma.f64(double %726, double\l... 0x3C91A62633145C00, double %730)\l  %732 = fsub double %727, %729\l  %733 = fsub double %727, %732\l  %734 = fsub double %733, %729\l  %735 = fsub double %732, %728\l  %736 = fadd double %735, %734\l  %737 = fsub double %736, %731\l  %738 = tail call double @llvm.fma.f64(double %726, double\l... 0xB97B839A252049C0, double %737)\l  %739 = fadd double %728, %738\l  %740 = fsub double %739, %728\l  %741 = fsub double %738, %740\l  %742 = fptosi double %726 to i32\l  br label %819\l}"];
	Node0x5c3f410 -> Node0x5c402a0;
	Node0x5c3f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%743:\l743:                                              \l  %744 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 0)\l  %745 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 1)\l  %746 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 2)\l  %747 = fcmp oge double %722, 0x7B00000000000000\l  %748 = tail call double @llvm.amdgcn.ldexp.f64(double %722, i32 -128)\l  %749 = select i1 %747, double %748, double %722\l  %750 = fmul double %746, %749\l  %751 = fneg double %750\l  %752 = tail call double @llvm.fma.f64(double %746, double %749, double %751)\l  %753 = fmul double %745, %749\l  %754 = fneg double %753\l  %755 = tail call double @llvm.fma.f64(double %745, double %749, double %754)\l  %756 = fmul double %744, %749\l  %757 = fneg double %756\l  %758 = tail call double @llvm.fma.f64(double %744, double %749, double %757)\l  %759 = fadd double %753, %758\l  %760 = fsub double %759, %753\l  %761 = fsub double %759, %760\l  %762 = fsub double %758, %760\l  %763 = fsub double %753, %761\l  %764 = fadd double %762, %763\l  %765 = fadd double %750, %755\l  %766 = fsub double %765, %750\l  %767 = fsub double %765, %766\l  %768 = fsub double %755, %766\l  %769 = fsub double %750, %767\l  %770 = fadd double %768, %769\l  %771 = fadd double %765, %764\l  %772 = fsub double %771, %765\l  %773 = fsub double %771, %772\l  %774 = fsub double %764, %772\l  %775 = fsub double %765, %773\l  %776 = fadd double %774, %775\l  %777 = fadd double %770, %776\l  %778 = fadd double %752, %777\l  %779 = fadd double %756, %759\l  %780 = fsub double %779, %756\l  %781 = fsub double %759, %780\l  %782 = fadd double %781, %771\l  %783 = fsub double %782, %781\l  %784 = fsub double %771, %783\l  %785 = fadd double %784, %778\l  %786 = tail call double @llvm.amdgcn.ldexp.f64(double %779, i32 -2)\l  %787 = tail call double @llvm.amdgcn.fract.f64(double %786)\l  %788 = tail call i1 @llvm.amdgcn.class.f64(double %786, i32 516)\l  %789 = select i1 %788, double 0.000000e+00, double %787\l  %790 = tail call double @llvm.amdgcn.ldexp.f64(double %789, i32 2)\l  %791 = fadd double %790, %782\l  %792 = fcmp olt double %791, 0.000000e+00\l  %793 = select i1 %792, double 4.000000e+00, double 0.000000e+00\l  %794 = fadd double %790, %793\l  %795 = fadd double %782, %794\l  %796 = fptosi double %795 to i32\l  %797 = sitofp i32 %796 to double\l  %798 = fsub double %794, %797\l  %799 = fadd double %782, %798\l  %800 = fsub double %799, %798\l  %801 = fsub double %782, %800\l  %802 = fadd double %785, %801\l  %803 = fcmp oge double %799, 5.000000e-01\l  %804 = zext i1 %803 to i32\l  %805 = add nsw i32 %804, %796\l  %806 = select i1 %803, double 1.000000e+00, double 0.000000e+00\l  %807 = fsub double %799, %806\l  %808 = fadd double %807, %802\l  %809 = fsub double %808, %807\l  %810 = fsub double %802, %809\l  %811 = fmul double %808, 0x3FF921FB54442D18\l  %812 = fneg double %811\l  %813 = tail call double @llvm.fma.f64(double %808, double\l... 0x3FF921FB54442D18, double %812)\l  %814 = tail call double @llvm.fma.f64(double %808, double\l... 0x3C91A62633145C07, double %813)\l  %815 = tail call double @llvm.fma.f64(double %810, double\l... 0x3FF921FB54442D18, double %814)\l  %816 = fadd double %811, %815\l  %817 = fsub double %816, %811\l  %818 = fsub double %815, %817\l  br label %819\l}"];
	Node0x5c3f4a0 -> Node0x5c402a0;
	Node0x5c402a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%819:\l819:                                              \l  %820 = phi double [ %741, %724 ], [ %818, %743 ]\l  %821 = phi double [ %739, %724 ], [ %816, %743 ]\l  %822 = phi i32 [ %742, %724 ], [ %805, %743 ]\l  %823 = fmul double %821, %821\l  %824 = fmul double %823, 5.000000e-01\l  %825 = fsub double 1.000000e+00, %824\l  %826 = fsub double 1.000000e+00, %825\l  %827 = fsub double %826, %824\l  %828 = fmul double %823, %823\l  %829 = tail call double @llvm.fma.f64(double %823, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %830 = tail call double @llvm.fma.f64(double %823, double %829, double\l... 0xBE927E4FA17F65F6)\l  %831 = tail call double @llvm.fma.f64(double %823, double %830, double\l... 0x3EFA01A019F4EC90)\l  %832 = tail call double @llvm.fma.f64(double %823, double %831, double\l... 0xBF56C16C16C16967)\l  %833 = tail call double @llvm.fma.f64(double %823, double %832, double\l... 0x3FA5555555555555)\l  %834 = fneg double %820\l  %835 = tail call double @llvm.fma.f64(double %821, double %834, double %827)\l  %836 = tail call double @llvm.fma.f64(double %828, double %833, double %835)\l  %837 = fadd double %825, %836\l  %838 = tail call double @llvm.fma.f64(double %823, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %839 = tail call double @llvm.fma.f64(double %823, double %838, double\l... 0x3EC71DE3796CDE01)\l  %840 = tail call double @llvm.fma.f64(double %823, double %839, double\l... 0xBF2A01A019E83E5C)\l  %841 = tail call double @llvm.fma.f64(double %823, double %840, double\l... 0x3F81111111110BB3)\l  %842 = fneg double %823\l  %843 = fmul double %821, %842\l  %844 = fmul double %820, 5.000000e-01\l  %845 = tail call double @llvm.fma.f64(double %843, double %841, double %844)\l  %846 = tail call double @llvm.fma.f64(double %823, double %845, double %834)\l  %847 = tail call double @llvm.fma.f64(double %843, double\l... 0xBFC5555555555555, double %846)\l  %848 = fsub double %821, %847\l  %849 = fneg double %848\l  %850 = and i32 %822, 1\l  %851 = icmp eq i32 %850, 0\l  %852 = select i1 %851, double %837, double %849\l  %853 = bitcast double %852 to \<2 x i32\>\l  %854 = shl i32 %822, 30\l  %855 = and i32 %854, -2147483648\l  %856 = extractelement \<2 x i32\> %853, i64 1\l  %857 = xor i32 %856, %855\l  %858 = insertelement \<2 x i32\> %853, i32 %857, i64 1\l  %859 = tail call i1 @llvm.amdgcn.class.f64(double %722, i32 504)\l  %860 = select i1 %859, \<2 x i32\> %858, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %861 = bitcast \<2 x i32\> %860 to double\l  %862 = fmul contract double %718, %861\l  br i1 %579, label %863, label %882\l|{<s0>T|<s1>F}}"];
	Node0x5c402a0:s0 -> Node0x5c45720;
	Node0x5c402a0:s1 -> Node0x5c45770;
	Node0x5c45720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%863:\l863:                                              \l  %864 = fmul double %578, 0x3FE45F306DC9C883\l  %865 = tail call double @llvm.rint.f64(double %864)\l  %866 = tail call double @llvm.fma.f64(double %865, double\l... 0xBFF921FB54442D18, double %578)\l  %867 = tail call double @llvm.fma.f64(double %865, double\l... 0xBC91A62633145C00, double %866)\l  %868 = fmul double %865, 0x3C91A62633145C00\l  %869 = fneg double %868\l  %870 = tail call double @llvm.fma.f64(double %865, double\l... 0x3C91A62633145C00, double %869)\l  %871 = fsub double %866, %868\l  %872 = fsub double %866, %871\l  %873 = fsub double %872, %868\l  %874 = fsub double %871, %867\l  %875 = fadd double %874, %873\l  %876 = fsub double %875, %870\l  %877 = tail call double @llvm.fma.f64(double %865, double\l... 0xB97B839A252049C0, double %876)\l  %878 = fadd double %867, %877\l  %879 = fsub double %878, %867\l  %880 = fsub double %877, %879\l  %881 = fptosi double %865 to i32\l  br label %958\l}"];
	Node0x5c45720 -> Node0x5c46530;
	Node0x5c45770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%882:\l882:                                              \l  %883 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 0)\l  %884 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 1)\l  %885 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 2)\l  %886 = fcmp oge double %578, 0x7B00000000000000\l  %887 = tail call double @llvm.amdgcn.ldexp.f64(double %578, i32 -128)\l  %888 = select i1 %886, double %887, double %578\l  %889 = fmul double %885, %888\l  %890 = fneg double %889\l  %891 = tail call double @llvm.fma.f64(double %885, double %888, double %890)\l  %892 = fmul double %884, %888\l  %893 = fneg double %892\l  %894 = tail call double @llvm.fma.f64(double %884, double %888, double %893)\l  %895 = fmul double %883, %888\l  %896 = fneg double %895\l  %897 = tail call double @llvm.fma.f64(double %883, double %888, double %896)\l  %898 = fadd double %892, %897\l  %899 = fsub double %898, %892\l  %900 = fsub double %898, %899\l  %901 = fsub double %897, %899\l  %902 = fsub double %892, %900\l  %903 = fadd double %901, %902\l  %904 = fadd double %889, %894\l  %905 = fsub double %904, %889\l  %906 = fsub double %904, %905\l  %907 = fsub double %894, %905\l  %908 = fsub double %889, %906\l  %909 = fadd double %907, %908\l  %910 = fadd double %904, %903\l  %911 = fsub double %910, %904\l  %912 = fsub double %910, %911\l  %913 = fsub double %903, %911\l  %914 = fsub double %904, %912\l  %915 = fadd double %913, %914\l  %916 = fadd double %909, %915\l  %917 = fadd double %891, %916\l  %918 = fadd double %895, %898\l  %919 = fsub double %918, %895\l  %920 = fsub double %898, %919\l  %921 = fadd double %920, %910\l  %922 = fsub double %921, %920\l  %923 = fsub double %910, %922\l  %924 = fadd double %923, %917\l  %925 = tail call double @llvm.amdgcn.ldexp.f64(double %918, i32 -2)\l  %926 = tail call double @llvm.amdgcn.fract.f64(double %925)\l  %927 = tail call i1 @llvm.amdgcn.class.f64(double %925, i32 516)\l  %928 = select i1 %927, double 0.000000e+00, double %926\l  %929 = tail call double @llvm.amdgcn.ldexp.f64(double %928, i32 2)\l  %930 = fadd double %929, %921\l  %931 = fcmp olt double %930, 0.000000e+00\l  %932 = select i1 %931, double 4.000000e+00, double 0.000000e+00\l  %933 = fadd double %929, %932\l  %934 = fadd double %921, %933\l  %935 = fptosi double %934 to i32\l  %936 = sitofp i32 %935 to double\l  %937 = fsub double %933, %936\l  %938 = fadd double %921, %937\l  %939 = fsub double %938, %937\l  %940 = fsub double %921, %939\l  %941 = fadd double %924, %940\l  %942 = fcmp oge double %938, 5.000000e-01\l  %943 = zext i1 %942 to i32\l  %944 = add nsw i32 %943, %935\l  %945 = select i1 %942, double 1.000000e+00, double 0.000000e+00\l  %946 = fsub double %938, %945\l  %947 = fadd double %946, %941\l  %948 = fsub double %947, %946\l  %949 = fsub double %941, %948\l  %950 = fmul double %947, 0x3FF921FB54442D18\l  %951 = fneg double %950\l  %952 = tail call double @llvm.fma.f64(double %947, double\l... 0x3FF921FB54442D18, double %951)\l  %953 = tail call double @llvm.fma.f64(double %947, double\l... 0x3C91A62633145C07, double %952)\l  %954 = tail call double @llvm.fma.f64(double %949, double\l... 0x3FF921FB54442D18, double %953)\l  %955 = fadd double %950, %954\l  %956 = fsub double %955, %950\l  %957 = fsub double %954, %956\l  br label %958\l}"];
	Node0x5c45770 -> Node0x5c46530;
	Node0x5c46530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%958:\l958:                                              \l  %959 = phi double [ %880, %863 ], [ %957, %882 ]\l  %960 = phi double [ %878, %863 ], [ %955, %882 ]\l  %961 = phi i32 [ %881, %863 ], [ %944, %882 ]\l  %962 = fmul double %960, %960\l  %963 = fmul double %962, 5.000000e-01\l  %964 = fsub double 1.000000e+00, %963\l  %965 = fsub double 1.000000e+00, %964\l  %966 = fsub double %965, %963\l  %967 = fmul double %962, %962\l  %968 = tail call double @llvm.fma.f64(double %962, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %969 = tail call double @llvm.fma.f64(double %962, double %968, double\l... 0xBE927E4FA17F65F6)\l  %970 = tail call double @llvm.fma.f64(double %962, double %969, double\l... 0x3EFA01A019F4EC90)\l  %971 = tail call double @llvm.fma.f64(double %962, double %970, double\l... 0xBF56C16C16C16967)\l  %972 = tail call double @llvm.fma.f64(double %962, double %971, double\l... 0x3FA5555555555555)\l  %973 = fneg double %959\l  %974 = tail call double @llvm.fma.f64(double %960, double %973, double %966)\l  %975 = tail call double @llvm.fma.f64(double %967, double %972, double %974)\l  %976 = fadd double %964, %975\l  %977 = tail call double @llvm.fma.f64(double %962, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %978 = tail call double @llvm.fma.f64(double %962, double %977, double\l... 0x3EC71DE3796CDE01)\l  %979 = tail call double @llvm.fma.f64(double %962, double %978, double\l... 0xBF2A01A019E83E5C)\l  %980 = tail call double @llvm.fma.f64(double %962, double %979, double\l... 0x3F81111111110BB3)\l  %981 = fneg double %962\l  %982 = fmul double %960, %981\l  %983 = fmul double %959, 5.000000e-01\l  %984 = tail call double @llvm.fma.f64(double %982, double %980, double %983)\l  %985 = tail call double @llvm.fma.f64(double %962, double %984, double %973)\l  %986 = tail call double @llvm.fma.f64(double %982, double\l... 0xBFC5555555555555, double %985)\l  %987 = fsub double %960, %986\l  %988 = fneg double %987\l  %989 = and i32 %961, 1\l  %990 = icmp eq i32 %989, 0\l  %991 = select i1 %990, double %976, double %988\l  %992 = bitcast double %991 to \<2 x i32\>\l  %993 = shl i32 %961, 30\l  %994 = and i32 %993, -2147483648\l  %995 = extractelement \<2 x i32\> %992, i64 1\l  %996 = xor i32 %995, %994\l  %997 = insertelement \<2 x i32\> %992, i32 %996, i64 1\l  %998 = select i1 %715, \<2 x i32\> %997, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %999 = bitcast \<2 x i32\> %998 to double\l  %1000 = fmul contract double %572, %999\l  br i1 %723, label %1001, label %1020\l|{<s0>T|<s1>F}}"];
	Node0x5c46530:s0 -> Node0x5c4b850;
	Node0x5c46530:s1 -> Node0x5c4b8a0;
	Node0x5c4b850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1001:\l1001:                                             \l  %1002 = fmul double %722, 0x3FE45F306DC9C883\l  %1003 = tail call double @llvm.rint.f64(double %1002)\l  %1004 = tail call double @llvm.fma.f64(double %1003, double\l... 0xBFF921FB54442D18, double %722)\l  %1005 = tail call double @llvm.fma.f64(double %1003, double\l... 0xBC91A62633145C00, double %1004)\l  %1006 = fmul double %1003, 0x3C91A62633145C00\l  %1007 = fneg double %1006\l  %1008 = tail call double @llvm.fma.f64(double %1003, double\l... 0x3C91A62633145C00, double %1007)\l  %1009 = fsub double %1004, %1006\l  %1010 = fsub double %1004, %1009\l  %1011 = fsub double %1010, %1006\l  %1012 = fsub double %1009, %1005\l  %1013 = fadd double %1012, %1011\l  %1014 = fsub double %1013, %1008\l  %1015 = tail call double @llvm.fma.f64(double %1003, double\l... 0xB97B839A252049C0, double %1014)\l  %1016 = fadd double %1005, %1015\l  %1017 = fsub double %1016, %1005\l  %1018 = fsub double %1015, %1017\l  %1019 = fptosi double %1003 to i32\l  br label %1096\l}"];
	Node0x5c4b850 -> Node0x5c4c660;
	Node0x5c4b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1020:\l1020:                                             \l  %1021 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 0)\l  %1022 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 1)\l  %1023 = tail call double @llvm.amdgcn.trig.preop.f64(double %722, i32 2)\l  %1024 = fcmp oge double %722, 0x7B00000000000000\l  %1025 = tail call double @llvm.amdgcn.ldexp.f64(double %722, i32 -128)\l  %1026 = select i1 %1024, double %1025, double %722\l  %1027 = fmul double %1023, %1026\l  %1028 = fneg double %1027\l  %1029 = tail call double @llvm.fma.f64(double %1023, double %1026, double\l... %1028)\l  %1030 = fmul double %1022, %1026\l  %1031 = fneg double %1030\l  %1032 = tail call double @llvm.fma.f64(double %1022, double %1026, double\l... %1031)\l  %1033 = fmul double %1021, %1026\l  %1034 = fneg double %1033\l  %1035 = tail call double @llvm.fma.f64(double %1021, double %1026, double\l... %1034)\l  %1036 = fadd double %1030, %1035\l  %1037 = fsub double %1036, %1030\l  %1038 = fsub double %1036, %1037\l  %1039 = fsub double %1035, %1037\l  %1040 = fsub double %1030, %1038\l  %1041 = fadd double %1039, %1040\l  %1042 = fadd double %1027, %1032\l  %1043 = fsub double %1042, %1027\l  %1044 = fsub double %1042, %1043\l  %1045 = fsub double %1032, %1043\l  %1046 = fsub double %1027, %1044\l  %1047 = fadd double %1045, %1046\l  %1048 = fadd double %1042, %1041\l  %1049 = fsub double %1048, %1042\l  %1050 = fsub double %1048, %1049\l  %1051 = fsub double %1041, %1049\l  %1052 = fsub double %1042, %1050\l  %1053 = fadd double %1051, %1052\l  %1054 = fadd double %1047, %1053\l  %1055 = fadd double %1029, %1054\l  %1056 = fadd double %1033, %1036\l  %1057 = fsub double %1056, %1033\l  %1058 = fsub double %1036, %1057\l  %1059 = fadd double %1058, %1048\l  %1060 = fsub double %1059, %1058\l  %1061 = fsub double %1048, %1060\l  %1062 = fadd double %1061, %1055\l  %1063 = tail call double @llvm.amdgcn.ldexp.f64(double %1056, i32 -2)\l  %1064 = tail call double @llvm.amdgcn.fract.f64(double %1063)\l  %1065 = tail call i1 @llvm.amdgcn.class.f64(double %1063, i32 516)\l  %1066 = select i1 %1065, double 0.000000e+00, double %1064\l  %1067 = tail call double @llvm.amdgcn.ldexp.f64(double %1066, i32 2)\l  %1068 = fadd double %1067, %1059\l  %1069 = fcmp olt double %1068, 0.000000e+00\l  %1070 = select i1 %1069, double 4.000000e+00, double 0.000000e+00\l  %1071 = fadd double %1067, %1070\l  %1072 = fadd double %1059, %1071\l  %1073 = fptosi double %1072 to i32\l  %1074 = sitofp i32 %1073 to double\l  %1075 = fsub double %1071, %1074\l  %1076 = fadd double %1059, %1075\l  %1077 = fsub double %1076, %1075\l  %1078 = fsub double %1059, %1077\l  %1079 = fadd double %1062, %1078\l  %1080 = fcmp oge double %1076, 5.000000e-01\l  %1081 = zext i1 %1080 to i32\l  %1082 = add nsw i32 %1081, %1073\l  %1083 = select i1 %1080, double 1.000000e+00, double 0.000000e+00\l  %1084 = fsub double %1076, %1083\l  %1085 = fadd double %1084, %1079\l  %1086 = fsub double %1085, %1084\l  %1087 = fsub double %1079, %1086\l  %1088 = fmul double %1085, 0x3FF921FB54442D18\l  %1089 = fneg double %1088\l  %1090 = tail call double @llvm.fma.f64(double %1085, double\l... 0x3FF921FB54442D18, double %1089)\l  %1091 = tail call double @llvm.fma.f64(double %1085, double\l... 0x3C91A62633145C07, double %1090)\l  %1092 = tail call double @llvm.fma.f64(double %1087, double\l... 0x3FF921FB54442D18, double %1091)\l  %1093 = fadd double %1088, %1092\l  %1094 = fsub double %1093, %1088\l  %1095 = fsub double %1092, %1094\l  br label %1096\l}"];
	Node0x5c4b8a0 -> Node0x5c4c660;
	Node0x5c4c660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%1096:\l1096:                                             \l  %1097 = phi double [ %1018, %1001 ], [ %1095, %1020 ]\l  %1098 = phi double [ %1016, %1001 ], [ %1093, %1020 ]\l  %1099 = phi i32 [ %1019, %1001 ], [ %1082, %1020 ]\l  %1100 = fmul double %1098, %1098\l  %1101 = fmul double %1100, 5.000000e-01\l  %1102 = fsub double 1.000000e+00, %1101\l  %1103 = fsub double 1.000000e+00, %1102\l  %1104 = fsub double %1103, %1101\l  %1105 = fmul double %1100, %1100\l  %1106 = tail call double @llvm.fma.f64(double %1100, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1107 = tail call double @llvm.fma.f64(double %1100, double %1106, double\l... 0xBE927E4FA17F65F6)\l  %1108 = tail call double @llvm.fma.f64(double %1100, double %1107, double\l... 0x3EFA01A019F4EC90)\l  %1109 = tail call double @llvm.fma.f64(double %1100, double %1108, double\l... 0xBF56C16C16C16967)\l  %1110 = tail call double @llvm.fma.f64(double %1100, double %1109, double\l... 0x3FA5555555555555)\l  %1111 = fneg double %1097\l  %1112 = tail call double @llvm.fma.f64(double %1098, double %1111, double\l... %1104)\l  %1113 = tail call double @llvm.fma.f64(double %1105, double %1110, double\l... %1112)\l  %1114 = fadd double %1102, %1113\l  %1115 = tail call double @llvm.fma.f64(double %1100, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1116 = tail call double @llvm.fma.f64(double %1100, double %1115, double\l... 0x3EC71DE3796CDE01)\l  %1117 = tail call double @llvm.fma.f64(double %1100, double %1116, double\l... 0xBF2A01A019E83E5C)\l  %1118 = tail call double @llvm.fma.f64(double %1100, double %1117, double\l... 0x3F81111111110BB3)\l  %1119 = fneg double %1100\l  %1120 = fmul double %1098, %1119\l  %1121 = fmul double %1097, 5.000000e-01\l  %1122 = tail call double @llvm.fma.f64(double %1120, double %1118, double\l... %1121)\l  %1123 = tail call double @llvm.fma.f64(double %1100, double %1122, double\l... %1111)\l  %1124 = tail call double @llvm.fma.f64(double %1120, double\l... 0xBFC5555555555555, double %1123)\l  %1125 = fsub double %1098, %1124\l  %1126 = and i32 %1099, 1\l  %1127 = icmp eq i32 %1126, 0\l  %1128 = select i1 %1127, double %1125, double %1114\l  %1129 = bitcast double %1128 to \<2 x i32\>\l  %1130 = shl i32 %1099, 30\l  %1131 = bitcast double %721 to \<2 x i32\>\l  %1132 = extractelement \<2 x i32\> %1131, i64 1\l  %1133 = xor i32 %1130, %1132\l  %1134 = and i32 %1133, -2147483648\l  %1135 = extractelement \<2 x i32\> %1129, i64 1\l  %1136 = xor i32 %1135, %1134\l  %1137 = insertelement \<2 x i32\> %1129, i32 %1136, i64 1\l  %1138 = select i1 %859, \<2 x i32\> %1137, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1139 = bitcast \<2 x i32\> %1138 to double\l  %1140 = fmul contract double %1000, %1139\l  br i1 %579, label %1141, label %1160\l|{<s0>T|<s1>F}}"];
	Node0x5c4c660:s0 -> Node0x5c53ab0;
	Node0x5c4c660:s1 -> Node0x5c53b00;
	Node0x5c53ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1141:\l1141:                                             \l  %1142 = fmul double %578, 0x3FE45F306DC9C883\l  %1143 = tail call double @llvm.rint.f64(double %1142)\l  %1144 = tail call double @llvm.fma.f64(double %1143, double\l... 0xBFF921FB54442D18, double %578)\l  %1145 = tail call double @llvm.fma.f64(double %1143, double\l... 0xBC91A62633145C00, double %1144)\l  %1146 = fmul double %1143, 0x3C91A62633145C00\l  %1147 = fneg double %1146\l  %1148 = tail call double @llvm.fma.f64(double %1143, double\l... 0x3C91A62633145C00, double %1147)\l  %1149 = fsub double %1144, %1146\l  %1150 = fsub double %1144, %1149\l  %1151 = fsub double %1150, %1146\l  %1152 = fsub double %1149, %1145\l  %1153 = fadd double %1152, %1151\l  %1154 = fsub double %1153, %1148\l  %1155 = tail call double @llvm.fma.f64(double %1143, double\l... 0xB97B839A252049C0, double %1154)\l  %1156 = fadd double %1145, %1155\l  %1157 = fsub double %1156, %1145\l  %1158 = fsub double %1155, %1157\l  %1159 = fptosi double %1143 to i32\l  br label %1236\l}"];
	Node0x5c53ab0 -> Node0x5c548c0;
	Node0x5c53b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1160:\l1160:                                             \l  %1161 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 0)\l  %1162 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 1)\l  %1163 = tail call double @llvm.amdgcn.trig.preop.f64(double %578, i32 2)\l  %1164 = fcmp oge double %578, 0x7B00000000000000\l  %1165 = tail call double @llvm.amdgcn.ldexp.f64(double %578, i32 -128)\l  %1166 = select i1 %1164, double %1165, double %578\l  %1167 = fmul double %1163, %1166\l  %1168 = fneg double %1167\l  %1169 = tail call double @llvm.fma.f64(double %1163, double %1166, double\l... %1168)\l  %1170 = fmul double %1162, %1166\l  %1171 = fneg double %1170\l  %1172 = tail call double @llvm.fma.f64(double %1162, double %1166, double\l... %1171)\l  %1173 = fmul double %1161, %1166\l  %1174 = fneg double %1173\l  %1175 = tail call double @llvm.fma.f64(double %1161, double %1166, double\l... %1174)\l  %1176 = fadd double %1170, %1175\l  %1177 = fsub double %1176, %1170\l  %1178 = fsub double %1176, %1177\l  %1179 = fsub double %1175, %1177\l  %1180 = fsub double %1170, %1178\l  %1181 = fadd double %1179, %1180\l  %1182 = fadd double %1167, %1172\l  %1183 = fsub double %1182, %1167\l  %1184 = fsub double %1182, %1183\l  %1185 = fsub double %1172, %1183\l  %1186 = fsub double %1167, %1184\l  %1187 = fadd double %1185, %1186\l  %1188 = fadd double %1182, %1181\l  %1189 = fsub double %1188, %1182\l  %1190 = fsub double %1188, %1189\l  %1191 = fsub double %1181, %1189\l  %1192 = fsub double %1182, %1190\l  %1193 = fadd double %1191, %1192\l  %1194 = fadd double %1187, %1193\l  %1195 = fadd double %1169, %1194\l  %1196 = fadd double %1173, %1176\l  %1197 = fsub double %1196, %1173\l  %1198 = fsub double %1176, %1197\l  %1199 = fadd double %1198, %1188\l  %1200 = fsub double %1199, %1198\l  %1201 = fsub double %1188, %1200\l  %1202 = fadd double %1201, %1195\l  %1203 = tail call double @llvm.amdgcn.ldexp.f64(double %1196, i32 -2)\l  %1204 = tail call double @llvm.amdgcn.fract.f64(double %1203)\l  %1205 = tail call i1 @llvm.amdgcn.class.f64(double %1203, i32 516)\l  %1206 = select i1 %1205, double 0.000000e+00, double %1204\l  %1207 = tail call double @llvm.amdgcn.ldexp.f64(double %1206, i32 2)\l  %1208 = fadd double %1207, %1199\l  %1209 = fcmp olt double %1208, 0.000000e+00\l  %1210 = select i1 %1209, double 4.000000e+00, double 0.000000e+00\l  %1211 = fadd double %1207, %1210\l  %1212 = fadd double %1199, %1211\l  %1213 = fptosi double %1212 to i32\l  %1214 = sitofp i32 %1213 to double\l  %1215 = fsub double %1211, %1214\l  %1216 = fadd double %1199, %1215\l  %1217 = fsub double %1216, %1215\l  %1218 = fsub double %1199, %1217\l  %1219 = fadd double %1202, %1218\l  %1220 = fcmp oge double %1216, 5.000000e-01\l  %1221 = zext i1 %1220 to i32\l  %1222 = add nsw i32 %1221, %1213\l  %1223 = select i1 %1220, double 1.000000e+00, double 0.000000e+00\l  %1224 = fsub double %1216, %1223\l  %1225 = fadd double %1224, %1219\l  %1226 = fsub double %1225, %1224\l  %1227 = fsub double %1219, %1226\l  %1228 = fmul double %1225, 0x3FF921FB54442D18\l  %1229 = fneg double %1228\l  %1230 = tail call double @llvm.fma.f64(double %1225, double\l... 0x3FF921FB54442D18, double %1229)\l  %1231 = tail call double @llvm.fma.f64(double %1225, double\l... 0x3C91A62633145C07, double %1230)\l  %1232 = tail call double @llvm.fma.f64(double %1227, double\l... 0x3FF921FB54442D18, double %1231)\l  %1233 = fadd double %1228, %1232\l  %1234 = fsub double %1233, %1228\l  %1235 = fsub double %1232, %1234\l  br label %1236\l}"];
	Node0x5c53b00 -> Node0x5c548c0;
	Node0x5c548c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%1236:\l1236:                                             \l  %1237 = phi double [ %1158, %1141 ], [ %1235, %1160 ]\l  %1238 = phi double [ %1156, %1141 ], [ %1233, %1160 ]\l  %1239 = phi i32 [ %1159, %1141 ], [ %1222, %1160 ]\l  %1240 = fmul double %1238, %1238\l  %1241 = fmul double %1240, 5.000000e-01\l  %1242 = fsub double 1.000000e+00, %1241\l  %1243 = fsub double 1.000000e+00, %1242\l  %1244 = fsub double %1243, %1241\l  %1245 = fmul double %1240, %1240\l  %1246 = tail call double @llvm.fma.f64(double %1240, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1247 = tail call double @llvm.fma.f64(double %1240, double %1246, double\l... 0xBE927E4FA17F65F6)\l  %1248 = tail call double @llvm.fma.f64(double %1240, double %1247, double\l... 0x3EFA01A019F4EC90)\l  %1249 = tail call double @llvm.fma.f64(double %1240, double %1248, double\l... 0xBF56C16C16C16967)\l  %1250 = tail call double @llvm.fma.f64(double %1240, double %1249, double\l... 0x3FA5555555555555)\l  %1251 = fneg double %1237\l  %1252 = tail call double @llvm.fma.f64(double %1238, double %1251, double\l... %1244)\l  %1253 = tail call double @llvm.fma.f64(double %1245, double %1250, double\l... %1252)\l  %1254 = fadd double %1242, %1253\l  %1255 = tail call double @llvm.fma.f64(double %1240, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1256 = tail call double @llvm.fma.f64(double %1240, double %1255, double\l... 0x3EC71DE3796CDE01)\l  %1257 = tail call double @llvm.fma.f64(double %1240, double %1256, double\l... 0xBF2A01A019E83E5C)\l  %1258 = tail call double @llvm.fma.f64(double %1240, double %1257, double\l... 0x3F81111111110BB3)\l  %1259 = fneg double %1240\l  %1260 = fmul double %1238, %1259\l  %1261 = fmul double %1237, 5.000000e-01\l  %1262 = tail call double @llvm.fma.f64(double %1260, double %1258, double\l... %1261)\l  %1263 = tail call double @llvm.fma.f64(double %1240, double %1262, double\l... %1251)\l  %1264 = tail call double @llvm.fma.f64(double %1260, double\l... 0xBFC5555555555555, double %1263)\l  %1265 = fsub double %1238, %1264\l  %1266 = and i32 %1239, 1\l  %1267 = icmp eq i32 %1266, 0\l  %1268 = select i1 %1267, double %1265, double %1254\l  %1269 = bitcast double %1268 to \<2 x i32\>\l  %1270 = shl i32 %1239, 30\l  %1271 = bitcast double %577 to \<2 x i32\>\l  %1272 = extractelement \<2 x i32\> %1271, i64 1\l  %1273 = xor i32 %1270, %1272\l  %1274 = and i32 %1273, -2147483648\l  %1275 = extractelement \<2 x i32\> %1269, i64 1\l  %1276 = xor i32 %1275, %1274\l  %1277 = insertelement \<2 x i32\> %1269, i32 %1276, i64 1\l  %1278 = select i1 %715, \<2 x i32\> %1277, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1279 = bitcast \<2 x i32\> %1278 to double\l  %1280 = fmul contract double %572, %1279\l  %1281 = mul i32 %569, 3\l  %1282 = sext i32 %1281 to i64\l  %1283 = getelementptr inbounds double, double addrspace(1)* %2, i64 %1282\l  %1284 = load double, double addrspace(1)* %1283, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1285 = fadd contract double %862, %1284\l  %1286 = fmul contract double %1285, %1285\l  %1287 = add nsw i32 %1281, 1\l  %1288 = sext i32 %1287 to i64\l  %1289 = getelementptr inbounds double, double addrspace(1)* %2, i64 %1288\l  %1290 = load double, double addrspace(1)* %1289, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1291 = fadd contract double %1140, %1290\l  %1292 = fmul contract double %1291, %1291\l  %1293 = fadd contract double %1286, %1292\l  %1294 = add nsw i32 %1281, 2\l  %1295 = sext i32 %1294 to i64\l  %1296 = getelementptr inbounds double, double addrspace(1)* %2, i64 %1295\l  %1297 = load double, double addrspace(1)* %1296, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1298 = fadd contract double %1297, %1280\l  %1299 = fmul contract double %1298, %1298\l  %1300 = fadd contract double %1293, %1299\l  %1301 = fmul contract double %1300, 5.000000e-01\l  %1302 = getelementptr inbounds double, double addrspace(1)* %4, i64 %570\l  %1303 = load double, double addrspace(1)* %1302, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1304 = fdiv contract double %1301, %1303\l  %1305 = getelementptr inbounds double, double addrspace(1)* %5, i64 %570\l  %1306 = load double, double addrspace(1)* %1305, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1307 = fmul contract double %42, %1306\l  %1308 = fmul contract double %1303, %1307\l  %1309 = fmul contract double %1303, %6\l  %1310 = getelementptr inbounds double, double addrspace(1)* %10, i64 %48\l  %1311 = load double, double addrspace(1)* %1310, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %1312 = fmul contract double %1309, %1311\l  %1313 = fadd contract double %1308, %1304\l  %1314 = fadd contract double %1312, %1313\l  %1315 = fmul contract double %567, %1314\l  %1316 = getelementptr inbounds double, double addrspace(1)* %0, i64 %570\l  store double %1315, double addrspace(1)* %1316, align 8, !tbaa !16\l  br label %1317\l}"];
	Node0x5c548c0 -> Node0x5c19db0;
	Node0x5c19db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1317:\l1317:                                             \l  ret void\l}"];
}
