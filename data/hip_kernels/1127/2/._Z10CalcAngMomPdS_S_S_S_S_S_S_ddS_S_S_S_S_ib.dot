digraph "CFG for '_Z10CalcAngMomPdS_S_S_S_S_S_S_ddS_S_S_S_S_ib' function" {
	label="CFG for '_Z10CalcAngMomPdS_S_S_S_S_S_S_ddS_S_S_S_S_ib' function";

	Node0x644ba70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %18, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %24, %25\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 16\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 8, !tbaa !7\l  %30 = getelementptr i8, i8 addrspace(4)* %19, i64 6\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 2, !range !4, !invariant.load !5\l  %33 = zext i16 %32 to i32\l  %34 = udiv i32 %29, %33\l  %35 = mul i32 %34, %33\l  %36 = icmp ugt i32 %29, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %40 = icmp slt i32 %26, %15\l  br i1 %40, label %41, label %1360\l|{<s0>T|<s1>F}}"];
	Node0x644ba70:s0 -> Node0x644fd20;
	Node0x644ba70:s1 -> Node0x644fdb0;
	Node0x644fd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%41:\l41:                                               \l  %42 = add nsw i32 %39, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %11, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %46 = fadd contract double %45, %8\l  %47 = sext i32 %39 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %11, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %50 = fadd contract double %49, %8\l  %51 = sext i32 %26 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %13, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16\l  br i1 %16, label %54, label %562\l|{<s0>T|<s1>F}}"];
	Node0x644fd20:s0 -> Node0x6450d50;
	Node0x644fd20:s1 -> Node0x6450de0;
	Node0x6450d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%54:\l54:                                               \l  %55 = tail call double @llvm.fabs.f64(double %8)\l  %56 = tail call double @llvm.amdgcn.frexp.mant.f64(double %55)\l  %57 = fcmp olt double %56, 0x3FE5555555555555\l  %58 = zext i1 %57 to i32\l  %59 = tail call double @llvm.amdgcn.ldexp.f64(double %56, i32 %58)\l  %60 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %55)\l  %61 = sub nsw i32 %60, %58\l  %62 = fadd double %59, -1.000000e+00\l  %63 = fadd double %59, 1.000000e+00\l  %64 = fadd double %63, -1.000000e+00\l  %65 = fsub double %59, %64\l  %66 = tail call double @llvm.amdgcn.rcp.f64(double %63)\l  %67 = fneg double %63\l  %68 = tail call double @llvm.fma.f64(double %67, double %66, double\l... 1.000000e+00)\l  %69 = tail call double @llvm.fma.f64(double %68, double %66, double %66)\l  %70 = tail call double @llvm.fma.f64(double %67, double %69, double\l... 1.000000e+00)\l  %71 = tail call double @llvm.fma.f64(double %70, double %69, double %69)\l  %72 = fmul double %62, %71\l  %73 = fmul double %63, %72\l  %74 = fneg double %73\l  %75 = tail call double @llvm.fma.f64(double %72, double %63, double %74)\l  %76 = tail call double @llvm.fma.f64(double %72, double %65, double %75)\l  %77 = fadd double %73, %76\l  %78 = fsub double %77, %73\l  %79 = fsub double %76, %78\l  %80 = fsub double %62, %77\l  %81 = fsub double %62, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %82, %79\l  %84 = fadd double %80, %83\l  %85 = fmul double %71, %84\l  %86 = fadd double %72, %85\l  %87 = fsub double %86, %72\l  %88 = fsub double %85, %87\l  %89 = fmul double %86, %86\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %86, double %86, double %90)\l  %92 = fmul double %88, 2.000000e+00\l  %93 = tail call double @llvm.fma.f64(double %86, double %92, double %91)\l  %94 = fadd double %89, %93\l  %95 = fsub double %94, %89\l  %96 = fsub double %93, %95\l  %97 = tail call double @llvm.fma.f64(double %94, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %98 = tail call double @llvm.fma.f64(double %94, double %97, double\l... 0x3FBE25E43ABE935A)\l  %99 = tail call double @llvm.fma.f64(double %94, double %98, double\l... 0x3FC110EF47E6C9C2)\l  %100 = tail call double @llvm.fma.f64(double %94, double %99, double\l... 0x3FC3B13BCFA74449)\l  %101 = tail call double @llvm.fma.f64(double %94, double %100, double\l... 0x3FC745D171BF3C30)\l  %102 = tail call double @llvm.fma.f64(double %94, double %101, double\l... 0x3FCC71C71C7792CE)\l  %103 = tail call double @llvm.fma.f64(double %94, double %102, double\l... 0x3FD24924924920DA)\l  %104 = tail call double @llvm.fma.f64(double %94, double %103, double\l... 0x3FD999999999999C)\l  %105 = sitofp i32 %61 to double\l  %106 = fmul double %105, 0x3FE62E42FEFA39EF\l  %107 = fneg double %106\l  %108 = tail call double @llvm.fma.f64(double %105, double\l... 0x3FE62E42FEFA39EF, double %107)\l  %109 = tail call double @llvm.fma.f64(double %105, double\l... 0x3C7ABC9E3B39803F, double %108)\l  %110 = fadd double %106, %109\l  %111 = fsub double %110, %106\l  %112 = fsub double %109, %111\l  %113 = tail call double @llvm.amdgcn.ldexp.f64(double %86, i32 1)\l  %114 = tail call double @llvm.amdgcn.ldexp.f64(double %88, i32 1)\l  %115 = fmul double %86, %94\l  %116 = fneg double %115\l  %117 = tail call double @llvm.fma.f64(double %94, double %86, double %116)\l  %118 = tail call double @llvm.fma.f64(double %94, double %88, double %117)\l  %119 = tail call double @llvm.fma.f64(double %96, double %86, double %118)\l  %120 = fadd double %115, %119\l  %121 = fsub double %120, %115\l  %122 = fsub double %119, %121\l  %123 = fmul double %94, %104\l  %124 = fneg double %123\l  %125 = tail call double @llvm.fma.f64(double %94, double %104, double %124)\l  %126 = tail call double @llvm.fma.f64(double %96, double %104, double %125)\l  %127 = fadd double %123, %126\l  %128 = fsub double %127, %123\l  %129 = fsub double %126, %128\l  %130 = fadd double %127, 0x3FE5555555555555\l  %131 = fadd double %130, 0xBFE5555555555555\l  %132 = fsub double %127, %131\l  %133 = fadd double %129, 0x3C8543B0D5DF274D\l  %134 = fadd double %133, %132\l  %135 = fadd double %130, %134\l  %136 = fsub double %135, %130\l  %137 = fsub double %134, %136\l  %138 = fmul double %120, %135\l  %139 = fneg double %138\l  %140 = tail call double @llvm.fma.f64(double %120, double %135, double %139)\l  %141 = tail call double @llvm.fma.f64(double %120, double %137, double %140)\l  %142 = tail call double @llvm.fma.f64(double %122, double %135, double %141)\l  %143 = fadd double %138, %142\l  %144 = fsub double %143, %138\l  %145 = fsub double %142, %144\l  %146 = fadd double %113, %143\l  %147 = fsub double %146, %113\l  %148 = fsub double %143, %147\l  %149 = fadd double %114, %145\l  %150 = fadd double %149, %148\l  %151 = fadd double %146, %150\l  %152 = fsub double %151, %146\l  %153 = fsub double %150, %152\l  %154 = fadd double %110, %151\l  %155 = fsub double %154, %110\l  %156 = fsub double %154, %155\l  %157 = fsub double %110, %156\l  %158 = fsub double %151, %155\l  %159 = fadd double %158, %157\l  %160 = fadd double %112, %153\l  %161 = fsub double %160, %112\l  %162 = fsub double %160, %161\l  %163 = fsub double %112, %162\l  %164 = fsub double %153, %161\l  %165 = fadd double %164, %163\l  %166 = fadd double %160, %159\l  %167 = fadd double %154, %166\l  %168 = fsub double %167, %154\l  %169 = fsub double %166, %168\l  %170 = fadd double %165, %169\l  %171 = fadd double %167, %170\l  %172 = fsub double %171, %167\l  %173 = fsub double %170, %172\l  %174 = fmul double %171, 2.000000e+00\l  %175 = fneg double %174\l  %176 = tail call double @llvm.fma.f64(double %171, double 2.000000e+00,\l... double %175)\l  %177 = tail call double @llvm.fma.f64(double %173, double 2.000000e+00,\l... double %176)\l  %178 = fadd double %174, %177\l  %179 = fsub double %178, %174\l  %180 = fsub double %177, %179\l  %181 = tail call double @llvm.fabs.f64(double %174) #3\l  %182 = fcmp oeq double %181, 0x7FF0000000000000\l  %183 = select i1 %182, double %174, double %178\l  %184 = tail call double @llvm.fabs.f64(double %183) #3\l  %185 = fcmp oeq double %184, 0x7FF0000000000000\l  %186 = select i1 %185, double 0.000000e+00, double %180\l  %187 = fmul double %183, 0x3FF71547652B82FE\l  %188 = tail call double @llvm.rint.f64(double %187)\l  %189 = fneg double %188\l  %190 = tail call double @llvm.fma.f64(double %189, double\l... 0x3FE62E42FEFA39EF, double %183)\l  %191 = tail call double @llvm.fma.f64(double %189, double\l... 0x3C7ABC9E3B39803F, double %190)\l  %192 = tail call double @llvm.fma.f64(double %191, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %193 = tail call double @llvm.fma.f64(double %191, double %192, double\l... 0x3EC71DEE623FDE64)\l  %194 = tail call double @llvm.fma.f64(double %191, double %193, double\l... 0x3EFA01997C89E6B0)\l  %195 = tail call double @llvm.fma.f64(double %191, double %194, double\l... 0x3F2A01A014761F6E)\l  %196 = tail call double @llvm.fma.f64(double %191, double %195, double\l... 0x3F56C16C1852B7B0)\l  %197 = tail call double @llvm.fma.f64(double %191, double %196, double\l... 0x3F81111111122322)\l  %198 = tail call double @llvm.fma.f64(double %191, double %197, double\l... 0x3FA55555555502A1)\l  %199 = tail call double @llvm.fma.f64(double %191, double %198, double\l... 0x3FC5555555555511)\l  %200 = tail call double @llvm.fma.f64(double %191, double %199, double\l... 0x3FE000000000000B)\l  %201 = tail call double @llvm.fma.f64(double %191, double %200, double\l... 1.000000e+00)\l  %202 = tail call double @llvm.fma.f64(double %191, double %201, double\l... 1.000000e+00)\l  %203 = fptosi double %188 to i32\l  %204 = tail call double @llvm.amdgcn.ldexp.f64(double %202, i32 %203)\l  %205 = fcmp ogt double %183, 1.024000e+03\l  %206 = select i1 %205, double 0x7FF0000000000000, double %204\l  %207 = fcmp olt double %183, -1.075000e+03\l  %208 = select i1 %207, double 0.000000e+00, double %206\l  %209 = tail call double @llvm.fma.f64(double %208, double %186, double %208)\l  %210 = tail call double @llvm.fabs.f64(double %208) #3\l  %211 = fcmp oeq double %210, 0x7FF0000000000000\l  %212 = select i1 %211, double %208, double %209\l  %213 = tail call double @llvm.fabs.f64(double %212)\l  %214 = fcmp oeq double %55, 0x7FF0000000000000\l  %215 = fcmp oeq double %8, 0.000000e+00\l  %216 = select i1 %214, double 0x7FF0000000000000, double %213\l  %217 = select i1 %215, double 0.000000e+00, double %216\l  %218 = fcmp uno double %8, 0.000000e+00\l  %219 = select i1 %218, double 0x7FF8000000000000, double %217\l  %220 = fdiv contract double %53, %219\l  %221 = tail call double @llvm.fabs.f64(double %46)\l  %222 = tail call double @llvm.amdgcn.frexp.mant.f64(double %221)\l  %223 = fcmp olt double %222, 0x3FE5555555555555\l  %224 = zext i1 %223 to i32\l  %225 = tail call double @llvm.amdgcn.ldexp.f64(double %222, i32 %224)\l  %226 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %221)\l  %227 = sub nsw i32 %226, %224\l  %228 = fadd double %225, -1.000000e+00\l  %229 = fadd double %225, 1.000000e+00\l  %230 = fadd double %229, -1.000000e+00\l  %231 = fsub double %225, %230\l  %232 = tail call double @llvm.amdgcn.rcp.f64(double %229)\l  %233 = fneg double %229\l  %234 = tail call double @llvm.fma.f64(double %233, double %232, double\l... 1.000000e+00)\l  %235 = tail call double @llvm.fma.f64(double %234, double %232, double %232)\l  %236 = tail call double @llvm.fma.f64(double %233, double %235, double\l... 1.000000e+00)\l  %237 = tail call double @llvm.fma.f64(double %236, double %235, double %235)\l  %238 = fmul double %228, %237\l  %239 = fmul double %229, %238\l  %240 = fneg double %239\l  %241 = tail call double @llvm.fma.f64(double %238, double %229, double %240)\l  %242 = tail call double @llvm.fma.f64(double %238, double %231, double %241)\l  %243 = fadd double %239, %242\l  %244 = fsub double %243, %239\l  %245 = fsub double %242, %244\l  %246 = fsub double %228, %243\l  %247 = fsub double %228, %246\l  %248 = fsub double %247, %243\l  %249 = fsub double %248, %245\l  %250 = fadd double %246, %249\l  %251 = fmul double %237, %250\l  %252 = fadd double %238, %251\l  %253 = fsub double %252, %238\l  %254 = fsub double %251, %253\l  %255 = fmul double %252, %252\l  %256 = fneg double %255\l  %257 = tail call double @llvm.fma.f64(double %252, double %252, double %256)\l  %258 = fmul double %254, 2.000000e+00\l  %259 = tail call double @llvm.fma.f64(double %252, double %258, double %257)\l  %260 = fadd double %255, %259\l  %261 = fsub double %260, %255\l  %262 = fsub double %259, %261\l  %263 = tail call double @llvm.fma.f64(double %260, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %264 = tail call double @llvm.fma.f64(double %260, double %263, double\l... 0x3FBE25E43ABE935A)\l  %265 = tail call double @llvm.fma.f64(double %260, double %264, double\l... 0x3FC110EF47E6C9C2)\l  %266 = tail call double @llvm.fma.f64(double %260, double %265, double\l... 0x3FC3B13BCFA74449)\l  %267 = tail call double @llvm.fma.f64(double %260, double %266, double\l... 0x3FC745D171BF3C30)\l  %268 = tail call double @llvm.fma.f64(double %260, double %267, double\l... 0x3FCC71C71C7792CE)\l  %269 = tail call double @llvm.fma.f64(double %260, double %268, double\l... 0x3FD24924924920DA)\l  %270 = tail call double @llvm.fma.f64(double %260, double %269, double\l... 0x3FD999999999999C)\l  %271 = sitofp i32 %227 to double\l  %272 = fmul double %271, 0x3FE62E42FEFA39EF\l  %273 = fneg double %272\l  %274 = tail call double @llvm.fma.f64(double %271, double\l... 0x3FE62E42FEFA39EF, double %273)\l  %275 = tail call double @llvm.fma.f64(double %271, double\l... 0x3C7ABC9E3B39803F, double %274)\l  %276 = fadd double %272, %275\l  %277 = fsub double %276, %272\l  %278 = fsub double %275, %277\l  %279 = tail call double @llvm.amdgcn.ldexp.f64(double %252, i32 1)\l  %280 = tail call double @llvm.amdgcn.ldexp.f64(double %254, i32 1)\l  %281 = fmul double %252, %260\l  %282 = fneg double %281\l  %283 = tail call double @llvm.fma.f64(double %260, double %252, double %282)\l  %284 = tail call double @llvm.fma.f64(double %260, double %254, double %283)\l  %285 = tail call double @llvm.fma.f64(double %262, double %252, double %284)\l  %286 = fadd double %281, %285\l  %287 = fsub double %286, %281\l  %288 = fsub double %285, %287\l  %289 = fmul double %260, %270\l  %290 = fneg double %289\l  %291 = tail call double @llvm.fma.f64(double %260, double %270, double %290)\l  %292 = tail call double @llvm.fma.f64(double %262, double %270, double %291)\l  %293 = fadd double %289, %292\l  %294 = fsub double %293, %289\l  %295 = fsub double %292, %294\l  %296 = fadd double %293, 0x3FE5555555555555\l  %297 = fadd double %296, 0xBFE5555555555555\l  %298 = fsub double %293, %297\l  %299 = fadd double %295, 0x3C8543B0D5DF274D\l  %300 = fadd double %299, %298\l  %301 = fadd double %296, %300\l  %302 = fsub double %301, %296\l  %303 = fsub double %300, %302\l  %304 = fmul double %286, %301\l  %305 = fneg double %304\l  %306 = tail call double @llvm.fma.f64(double %286, double %301, double %305)\l  %307 = tail call double @llvm.fma.f64(double %286, double %303, double %306)\l  %308 = tail call double @llvm.fma.f64(double %288, double %301, double %307)\l  %309 = fadd double %304, %308\l  %310 = fsub double %309, %304\l  %311 = fsub double %308, %310\l  %312 = fadd double %279, %309\l  %313 = fsub double %312, %279\l  %314 = fsub double %309, %313\l  %315 = fadd double %280, %311\l  %316 = fadd double %315, %314\l  %317 = fadd double %312, %316\l  %318 = fsub double %317, %312\l  %319 = fsub double %316, %318\l  %320 = fadd double %276, %317\l  %321 = fsub double %320, %276\l  %322 = fsub double %320, %321\l  %323 = fsub double %276, %322\l  %324 = fsub double %317, %321\l  %325 = fadd double %324, %323\l  %326 = fadd double %278, %319\l  %327 = fsub double %326, %278\l  %328 = fsub double %326, %327\l  %329 = fsub double %278, %328\l  %330 = fsub double %319, %327\l  %331 = fadd double %330, %329\l  %332 = fadd double %326, %325\l  %333 = fadd double %320, %332\l  %334 = fsub double %333, %320\l  %335 = fsub double %332, %334\l  %336 = fadd double %331, %335\l  %337 = fadd double %333, %336\l  %338 = fsub double %337, %333\l  %339 = fsub double %336, %338\l  %340 = fmul double %337, 3.000000e+00\l  %341 = fneg double %340\l  %342 = tail call double @llvm.fma.f64(double %337, double 3.000000e+00,\l... double %341)\l  %343 = tail call double @llvm.fma.f64(double %339, double 3.000000e+00,\l... double %342)\l  %344 = fadd double %340, %343\l  %345 = fsub double %344, %340\l  %346 = fsub double %343, %345\l  %347 = tail call double @llvm.fabs.f64(double %340) #3\l  %348 = fcmp oeq double %347, 0x7FF0000000000000\l  %349 = select i1 %348, double %340, double %344\l  %350 = tail call double @llvm.fabs.f64(double %349) #3\l  %351 = fcmp oeq double %350, 0x7FF0000000000000\l  %352 = select i1 %351, double 0.000000e+00, double %346\l  %353 = fmul double %349, 0x3FF71547652B82FE\l  %354 = tail call double @llvm.rint.f64(double %353)\l  %355 = fneg double %354\l  %356 = tail call double @llvm.fma.f64(double %355, double\l... 0x3FE62E42FEFA39EF, double %349)\l  %357 = tail call double @llvm.fma.f64(double %355, double\l... 0x3C7ABC9E3B39803F, double %356)\l  %358 = tail call double @llvm.fma.f64(double %357, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %359 = tail call double @llvm.fma.f64(double %357, double %358, double\l... 0x3EC71DEE623FDE64)\l  %360 = tail call double @llvm.fma.f64(double %357, double %359, double\l... 0x3EFA01997C89E6B0)\l  %361 = tail call double @llvm.fma.f64(double %357, double %360, double\l... 0x3F2A01A014761F6E)\l  %362 = tail call double @llvm.fma.f64(double %357, double %361, double\l... 0x3F56C16C1852B7B0)\l  %363 = tail call double @llvm.fma.f64(double %357, double %362, double\l... 0x3F81111111122322)\l  %364 = tail call double @llvm.fma.f64(double %357, double %363, double\l... 0x3FA55555555502A1)\l  %365 = tail call double @llvm.fma.f64(double %357, double %364, double\l... 0x3FC5555555555511)\l  %366 = tail call double @llvm.fma.f64(double %357, double %365, double\l... 0x3FE000000000000B)\l  %367 = tail call double @llvm.fma.f64(double %357, double %366, double\l... 1.000000e+00)\l  %368 = tail call double @llvm.fma.f64(double %357, double %367, double\l... 1.000000e+00)\l  %369 = fptosi double %354 to i32\l  %370 = tail call double @llvm.amdgcn.ldexp.f64(double %368, i32 %369)\l  %371 = fcmp ogt double %349, 1.024000e+03\l  %372 = select i1 %371, double 0x7FF0000000000000, double %370\l  %373 = fcmp olt double %349, -1.075000e+03\l  %374 = select i1 %373, double 0.000000e+00, double %372\l  %375 = tail call double @llvm.fma.f64(double %374, double %352, double %374)\l  %376 = tail call double @llvm.fabs.f64(double %374) #3\l  %377 = fcmp oeq double %376, 0x7FF0000000000000\l  %378 = select i1 %377, double %374, double %375\l  %379 = fcmp uge double %46, 0.000000e+00\l  %380 = select i1 %379, double 0.000000e+00, double -0.000000e+00\l  %381 = tail call double @llvm.copysign.f64(double %378, double %380)\l  %382 = fcmp oeq double %221, 0x7FF0000000000000\l  %383 = fcmp oeq double %46, 0.000000e+00\l  %384 = or i1 %383, %382\l  %385 = select i1 %383, double 0.000000e+00, double 0x7FF0000000000000\l  %386 = tail call double @llvm.copysign.f64(double %385, double %46)\l  %387 = select i1 %384, double %386, double %381\l  %388 = fcmp uno double %46, 0.000000e+00\l  %389 = select i1 %388, double 0x7FF8000000000000, double %387\l  %390 = tail call double @llvm.fabs.f64(double %50)\l  %391 = tail call double @llvm.amdgcn.frexp.mant.f64(double %390)\l  %392 = fcmp olt double %391, 0x3FE5555555555555\l  %393 = zext i1 %392 to i32\l  %394 = tail call double @llvm.amdgcn.ldexp.f64(double %391, i32 %393)\l  %395 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %390)\l  %396 = sub nsw i32 %395, %393\l  %397 = fadd double %394, -1.000000e+00\l  %398 = fadd double %394, 1.000000e+00\l  %399 = fadd double %398, -1.000000e+00\l  %400 = fsub double %394, %399\l  %401 = tail call double @llvm.amdgcn.rcp.f64(double %398)\l  %402 = fneg double %398\l  %403 = tail call double @llvm.fma.f64(double %402, double %401, double\l... 1.000000e+00)\l  %404 = tail call double @llvm.fma.f64(double %403, double %401, double %401)\l  %405 = tail call double @llvm.fma.f64(double %402, double %404, double\l... 1.000000e+00)\l  %406 = tail call double @llvm.fma.f64(double %405, double %404, double %404)\l  %407 = fmul double %397, %406\l  %408 = fmul double %398, %407\l  %409 = fneg double %408\l  %410 = tail call double @llvm.fma.f64(double %407, double %398, double %409)\l  %411 = tail call double @llvm.fma.f64(double %407, double %400, double %410)\l  %412 = fadd double %408, %411\l  %413 = fsub double %412, %408\l  %414 = fsub double %411, %413\l  %415 = fsub double %397, %412\l  %416 = fsub double %397, %415\l  %417 = fsub double %416, %412\l  %418 = fsub double %417, %414\l  %419 = fadd double %415, %418\l  %420 = fmul double %406, %419\l  %421 = fadd double %407, %420\l  %422 = fsub double %421, %407\l  %423 = fsub double %420, %422\l  %424 = fmul double %421, %421\l  %425 = fneg double %424\l  %426 = tail call double @llvm.fma.f64(double %421, double %421, double %425)\l  %427 = fmul double %423, 2.000000e+00\l  %428 = tail call double @llvm.fma.f64(double %421, double %427, double %426)\l  %429 = fadd double %424, %428\l  %430 = fsub double %429, %424\l  %431 = fsub double %428, %430\l  %432 = tail call double @llvm.fma.f64(double %429, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %433 = tail call double @llvm.fma.f64(double %429, double %432, double\l... 0x3FBE25E43ABE935A)\l  %434 = tail call double @llvm.fma.f64(double %429, double %433, double\l... 0x3FC110EF47E6C9C2)\l  %435 = tail call double @llvm.fma.f64(double %429, double %434, double\l... 0x3FC3B13BCFA74449)\l  %436 = tail call double @llvm.fma.f64(double %429, double %435, double\l... 0x3FC745D171BF3C30)\l  %437 = tail call double @llvm.fma.f64(double %429, double %436, double\l... 0x3FCC71C71C7792CE)\l  %438 = tail call double @llvm.fma.f64(double %429, double %437, double\l... 0x3FD24924924920DA)\l  %439 = tail call double @llvm.fma.f64(double %429, double %438, double\l... 0x3FD999999999999C)\l  %440 = sitofp i32 %396 to double\l  %441 = fmul double %440, 0x3FE62E42FEFA39EF\l  %442 = fneg double %441\l  %443 = tail call double @llvm.fma.f64(double %440, double\l... 0x3FE62E42FEFA39EF, double %442)\l  %444 = tail call double @llvm.fma.f64(double %440, double\l... 0x3C7ABC9E3B39803F, double %443)\l  %445 = fadd double %441, %444\l  %446 = fsub double %445, %441\l  %447 = fsub double %444, %446\l  %448 = tail call double @llvm.amdgcn.ldexp.f64(double %421, i32 1)\l  %449 = tail call double @llvm.amdgcn.ldexp.f64(double %423, i32 1)\l  %450 = fmul double %421, %429\l  %451 = fneg double %450\l  %452 = tail call double @llvm.fma.f64(double %429, double %421, double %451)\l  %453 = tail call double @llvm.fma.f64(double %429, double %423, double %452)\l  %454 = tail call double @llvm.fma.f64(double %431, double %421, double %453)\l  %455 = fadd double %450, %454\l  %456 = fsub double %455, %450\l  %457 = fsub double %454, %456\l  %458 = fmul double %429, %439\l  %459 = fneg double %458\l  %460 = tail call double @llvm.fma.f64(double %429, double %439, double %459)\l  %461 = tail call double @llvm.fma.f64(double %431, double %439, double %460)\l  %462 = fadd double %458, %461\l  %463 = fsub double %462, %458\l  %464 = fsub double %461, %463\l  %465 = fadd double %462, 0x3FE5555555555555\l  %466 = fadd double %465, 0xBFE5555555555555\l  %467 = fsub double %462, %466\l  %468 = fadd double %464, 0x3C8543B0D5DF274D\l  %469 = fadd double %468, %467\l  %470 = fadd double %465, %469\l  %471 = fsub double %470, %465\l  %472 = fsub double %469, %471\l  %473 = fmul double %455, %470\l  %474 = fneg double %473\l  %475 = tail call double @llvm.fma.f64(double %455, double %470, double %474)\l  %476 = tail call double @llvm.fma.f64(double %455, double %472, double %475)\l  %477 = tail call double @llvm.fma.f64(double %457, double %470, double %476)\l  %478 = fadd double %473, %477\l  %479 = fsub double %478, %473\l  %480 = fsub double %477, %479\l  %481 = fadd double %448, %478\l  %482 = fsub double %481, %448\l  %483 = fsub double %478, %482\l  %484 = fadd double %449, %480\l  %485 = fadd double %484, %483\l  %486 = fadd double %481, %485\l  %487 = fsub double %486, %481\l  %488 = fsub double %485, %487\l  %489 = fadd double %445, %486\l  %490 = fsub double %489, %445\l  %491 = fsub double %489, %490\l  %492 = fsub double %445, %491\l  %493 = fsub double %486, %490\l  %494 = fadd double %493, %492\l  %495 = fadd double %447, %488\l  %496 = fsub double %495, %447\l  %497 = fsub double %495, %496\l  %498 = fsub double %447, %497\l  %499 = fsub double %488, %496\l  %500 = fadd double %499, %498\l  %501 = fadd double %495, %494\l  %502 = fadd double %489, %501\l  %503 = fsub double %502, %489\l  %504 = fsub double %501, %503\l  %505 = fadd double %500, %504\l  %506 = fadd double %502, %505\l  %507 = fsub double %506, %502\l  %508 = fsub double %505, %507\l  %509 = fmul double %506, 3.000000e+00\l  %510 = fneg double %509\l  %511 = tail call double @llvm.fma.f64(double %506, double 3.000000e+00,\l... double %510)\l  %512 = tail call double @llvm.fma.f64(double %508, double 3.000000e+00,\l... double %511)\l  %513 = fadd double %509, %512\l  %514 = fsub double %513, %509\l  %515 = fsub double %512, %514\l  %516 = tail call double @llvm.fabs.f64(double %509) #3\l  %517 = fcmp oeq double %516, 0x7FF0000000000000\l  %518 = select i1 %517, double %509, double %513\l  %519 = tail call double @llvm.fabs.f64(double %518) #3\l  %520 = fcmp oeq double %519, 0x7FF0000000000000\l  %521 = select i1 %520, double 0.000000e+00, double %515\l  %522 = fmul double %518, 0x3FF71547652B82FE\l  %523 = tail call double @llvm.rint.f64(double %522)\l  %524 = fneg double %523\l  %525 = tail call double @llvm.fma.f64(double %524, double\l... 0x3FE62E42FEFA39EF, double %518)\l  %526 = tail call double @llvm.fma.f64(double %524, double\l... 0x3C7ABC9E3B39803F, double %525)\l  %527 = tail call double @llvm.fma.f64(double %526, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %528 = tail call double @llvm.fma.f64(double %526, double %527, double\l... 0x3EC71DEE623FDE64)\l  %529 = tail call double @llvm.fma.f64(double %526, double %528, double\l... 0x3EFA01997C89E6B0)\l  %530 = tail call double @llvm.fma.f64(double %526, double %529, double\l... 0x3F2A01A014761F6E)\l  %531 = tail call double @llvm.fma.f64(double %526, double %530, double\l... 0x3F56C16C1852B7B0)\l  %532 = tail call double @llvm.fma.f64(double %526, double %531, double\l... 0x3F81111111122322)\l  %533 = tail call double @llvm.fma.f64(double %526, double %532, double\l... 0x3FA55555555502A1)\l  %534 = tail call double @llvm.fma.f64(double %526, double %533, double\l... 0x3FC5555555555511)\l  %535 = tail call double @llvm.fma.f64(double %526, double %534, double\l... 0x3FE000000000000B)\l  %536 = tail call double @llvm.fma.f64(double %526, double %535, double\l... 1.000000e+00)\l  %537 = tail call double @llvm.fma.f64(double %526, double %536, double\l... 1.000000e+00)\l  %538 = fptosi double %523 to i32\l  %539 = tail call double @llvm.amdgcn.ldexp.f64(double %537, i32 %538)\l  %540 = fcmp ogt double %518, 1.024000e+03\l  %541 = select i1 %540, double 0x7FF0000000000000, double %539\l  %542 = fcmp olt double %518, -1.075000e+03\l  %543 = select i1 %542, double 0.000000e+00, double %541\l  %544 = tail call double @llvm.fma.f64(double %543, double %521, double %543)\l  %545 = tail call double @llvm.fabs.f64(double %543) #3\l  %546 = fcmp oeq double %545, 0x7FF0000000000000\l  %547 = select i1 %546, double %543, double %544\l  %548 = fcmp uge double %50, 0.000000e+00\l  %549 = select i1 %548, double 0.000000e+00, double -0.000000e+00\l  %550 = tail call double @llvm.copysign.f64(double %547, double %549)\l  %551 = fcmp oeq double %390, 0x7FF0000000000000\l  %552 = fcmp oeq double %50, 0.000000e+00\l  %553 = or i1 %552, %551\l  %554 = select i1 %552, double 0.000000e+00, double 0x7FF0000000000000\l  %555 = tail call double @llvm.copysign.f64(double %554, double %50)\l  %556 = select i1 %553, double %555, double %550\l  %557 = fcmp uno double %50, 0.000000e+00\l  %558 = select i1 %557, double 0x7FF8000000000000, double %556\l  %559 = fsub contract double %389, %558\l  %560 = fmul contract double %559, %220\l  %561 = fdiv contract double %560, 3.000000e+00\l  br label %565\l}"];
	Node0x6450d50 -> Node0x646c7a0;
	Node0x6450de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%562:\l562:                                              \l  %563 = fsub contract double %46, %50\l  %564 = fmul contract double %563, %53\l  br label %565\l}"];
	Node0x6450de0 -> Node0x646c7a0;
	Node0x646c7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%565:\l565:                                              \l  %566 = phi double [ %561, %54 ], [ %564, %562 ]\l  %567 = getelementptr inbounds double, double addrspace(1)* %10, i64 %47\l  %568 = load double, double addrspace(1)* %567, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %569 = fadd contract double %568, %8\l  %570 = mul nsw i32 %26, 3\l  %571 = sext i32 %570 to i64\l  %572 = getelementptr inbounds double, double addrspace(1)* %14, i64 %571\l  %573 = load double, double addrspace(1)* %572, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %574 = fmul contract double %569, %573\l  %575 = add nsw i32 %570, 1\l  %576 = sext i32 %575 to i64\l  %577 = getelementptr inbounds double, double addrspace(1)* %14, i64 %576\l  %578 = load double, double addrspace(1)* %577, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %579 = fmul contract double %569, %578\l  %580 = add nsw i32 %570, 2\l  %581 = sext i32 %580 to i64\l  %582 = getelementptr inbounds double, double addrspace(1)* %14, i64 %581\l  %583 = load double, double addrspace(1)* %582, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %584 = fmul contract double %569, %583\l  %585 = mul nsw i32 %38, %570\l  %586 = mul nsw i32 %39, 3\l  %587 = add nsw i32 %585, %586\l  %588 = add nsw i32 %587, 2\l  %589 = sext i32 %588 to i64\l  %590 = getelementptr inbounds double, double addrspace(1)* %6, i64 %589\l  %591 = load double, double addrspace(1)* %590, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %592 = fmul contract double %579, %591\l  %593 = add nsw i32 %587, 1\l  %594 = sext i32 %593 to i64\l  %595 = getelementptr inbounds double, double addrspace(1)* %6, i64 %594\l  %596 = load double, double addrspace(1)* %595, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %597 = fmul contract double %584, %596\l  %598 = fsub contract double %592, %597\l  %599 = mul nsw i32 %38, %26\l  %600 = add nsw i32 %599, %39\l  %601 = sext i32 %600 to i64\l  %602 = getelementptr inbounds double, double addrspace(1)* %7, i64 %601\l  %603 = load double, double addrspace(1)* %602, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %604 = fmul contract double %603, %9\l  %605 = fmul contract double %569, %604\l  %606 = fmul contract double %584, %605\l  %607 = shl nsw i32 %26, 1\l  %608 = add nuw nsw i32 %607, 1\l  %609 = sext i32 %608 to i64\l  %610 = getelementptr inbounds double, double addrspace(1)* %12, i64 %609\l  %611 = load double, double addrspace(1)* %610, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %612 = tail call double @llvm.fabs.f64(double %611)\l  %613 = fcmp olt double %612, 0x41D0000000000000\l  br i1 %613, label %614, label %633\l|{<s0>T|<s1>F}}"];
	Node0x646c7a0:s0 -> Node0x646e630;
	Node0x646c7a0:s1 -> Node0x646e6c0;
	Node0x646e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%614:\l614:                                              \l  %615 = fmul double %612, 0x3FE45F306DC9C883\l  %616 = tail call double @llvm.rint.f64(double %615)\l  %617 = tail call double @llvm.fma.f64(double %616, double\l... 0xBFF921FB54442D18, double %612)\l  %618 = tail call double @llvm.fma.f64(double %616, double\l... 0xBC91A62633145C00, double %617)\l  %619 = fmul double %616, 0x3C91A62633145C00\l  %620 = fneg double %619\l  %621 = tail call double @llvm.fma.f64(double %616, double\l... 0x3C91A62633145C00, double %620)\l  %622 = fsub double %617, %619\l  %623 = fsub double %617, %622\l  %624 = fsub double %623, %619\l  %625 = fsub double %622, %618\l  %626 = fadd double %625, %624\l  %627 = fsub double %626, %621\l  %628 = tail call double @llvm.fma.f64(double %616, double\l... 0xB97B839A252049C0, double %627)\l  %629 = fadd double %618, %628\l  %630 = fsub double %629, %618\l  %631 = fsub double %628, %630\l  %632 = fptosi double %616 to i32\l  br label %709\l}"];
	Node0x646e630 -> Node0x646f5c0;
	Node0x646e6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%633:\l633:                                              \l  %634 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 0)\l  %635 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 1)\l  %636 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 2)\l  %637 = fcmp oge double %612, 0x7B00000000000000\l  %638 = tail call double @llvm.amdgcn.ldexp.f64(double %612, i32 -128)\l  %639 = select i1 %637, double %638, double %612\l  %640 = fmul double %636, %639\l  %641 = fneg double %640\l  %642 = tail call double @llvm.fma.f64(double %636, double %639, double %641)\l  %643 = fmul double %635, %639\l  %644 = fneg double %643\l  %645 = tail call double @llvm.fma.f64(double %635, double %639, double %644)\l  %646 = fmul double %634, %639\l  %647 = fneg double %646\l  %648 = tail call double @llvm.fma.f64(double %634, double %639, double %647)\l  %649 = fadd double %643, %648\l  %650 = fsub double %649, %643\l  %651 = fsub double %649, %650\l  %652 = fsub double %648, %650\l  %653 = fsub double %643, %651\l  %654 = fadd double %652, %653\l  %655 = fadd double %640, %645\l  %656 = fsub double %655, %640\l  %657 = fsub double %655, %656\l  %658 = fsub double %645, %656\l  %659 = fsub double %640, %657\l  %660 = fadd double %658, %659\l  %661 = fadd double %655, %654\l  %662 = fsub double %661, %655\l  %663 = fsub double %661, %662\l  %664 = fsub double %654, %662\l  %665 = fsub double %655, %663\l  %666 = fadd double %664, %665\l  %667 = fadd double %660, %666\l  %668 = fadd double %642, %667\l  %669 = fadd double %646, %649\l  %670 = fsub double %669, %646\l  %671 = fsub double %649, %670\l  %672 = fadd double %671, %661\l  %673 = fsub double %672, %671\l  %674 = fsub double %661, %673\l  %675 = fadd double %674, %668\l  %676 = tail call double @llvm.amdgcn.ldexp.f64(double %669, i32 -2)\l  %677 = tail call double @llvm.amdgcn.fract.f64(double %676)\l  %678 = tail call i1 @llvm.amdgcn.class.f64(double %676, i32 516)\l  %679 = select i1 %678, double 0.000000e+00, double %677\l  %680 = tail call double @llvm.amdgcn.ldexp.f64(double %679, i32 2)\l  %681 = fadd double %680, %672\l  %682 = fcmp olt double %681, 0.000000e+00\l  %683 = select i1 %682, double 4.000000e+00, double 0.000000e+00\l  %684 = fadd double %680, %683\l  %685 = fadd double %672, %684\l  %686 = fptosi double %685 to i32\l  %687 = sitofp i32 %686 to double\l  %688 = fsub double %684, %687\l  %689 = fadd double %672, %688\l  %690 = fsub double %689, %688\l  %691 = fsub double %672, %690\l  %692 = fadd double %675, %691\l  %693 = fcmp oge double %689, 5.000000e-01\l  %694 = zext i1 %693 to i32\l  %695 = add nsw i32 %694, %686\l  %696 = select i1 %693, double 1.000000e+00, double 0.000000e+00\l  %697 = fsub double %689, %696\l  %698 = fadd double %697, %692\l  %699 = fsub double %698, %697\l  %700 = fsub double %692, %699\l  %701 = fmul double %698, 0x3FF921FB54442D18\l  %702 = fneg double %701\l  %703 = tail call double @llvm.fma.f64(double %698, double\l... 0x3FF921FB54442D18, double %702)\l  %704 = tail call double @llvm.fma.f64(double %698, double\l... 0x3C91A62633145C07, double %703)\l  %705 = tail call double @llvm.fma.f64(double %700, double\l... 0x3FF921FB54442D18, double %704)\l  %706 = fadd double %701, %705\l  %707 = fsub double %706, %701\l  %708 = fsub double %705, %707\l  br label %709\l}"];
	Node0x646e6c0 -> Node0x646f5c0;
	Node0x646f5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%709:\l709:                                              \l  %710 = phi double [ %631, %614 ], [ %708, %633 ]\l  %711 = phi double [ %629, %614 ], [ %706, %633 ]\l  %712 = phi i32 [ %632, %614 ], [ %695, %633 ]\l  %713 = fmul double %711, %711\l  %714 = fmul double %713, 5.000000e-01\l  %715 = fsub double 1.000000e+00, %714\l  %716 = fsub double 1.000000e+00, %715\l  %717 = fsub double %716, %714\l  %718 = fmul double %713, %713\l  %719 = tail call double @llvm.fma.f64(double %713, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %720 = tail call double @llvm.fma.f64(double %713, double %719, double\l... 0xBE927E4FA17F65F6)\l  %721 = tail call double @llvm.fma.f64(double %713, double %720, double\l... 0x3EFA01A019F4EC90)\l  %722 = tail call double @llvm.fma.f64(double %713, double %721, double\l... 0xBF56C16C16C16967)\l  %723 = tail call double @llvm.fma.f64(double %713, double %722, double\l... 0x3FA5555555555555)\l  %724 = fneg double %710\l  %725 = tail call double @llvm.fma.f64(double %711, double %724, double %717)\l  %726 = tail call double @llvm.fma.f64(double %718, double %723, double %725)\l  %727 = fadd double %715, %726\l  %728 = tail call double @llvm.fma.f64(double %713, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %729 = tail call double @llvm.fma.f64(double %713, double %728, double\l... 0x3EC71DE3796CDE01)\l  %730 = tail call double @llvm.fma.f64(double %713, double %729, double\l... 0xBF2A01A019E83E5C)\l  %731 = tail call double @llvm.fma.f64(double %713, double %730, double\l... 0x3F81111111110BB3)\l  %732 = fneg double %713\l  %733 = fmul double %711, %732\l  %734 = fmul double %710, 5.000000e-01\l  %735 = tail call double @llvm.fma.f64(double %733, double %731, double %734)\l  %736 = tail call double @llvm.fma.f64(double %713, double %735, double %724)\l  %737 = tail call double @llvm.fma.f64(double %733, double\l... 0xBFC5555555555555, double %736)\l  %738 = fsub double %711, %737\l  %739 = fneg double %738\l  %740 = and i32 %712, 1\l  %741 = icmp eq i32 %740, 0\l  %742 = select i1 %741, double %727, double %739\l  %743 = bitcast double %742 to \<2 x i32\>\l  %744 = shl i32 %712, 30\l  %745 = and i32 %744, -2147483648\l  %746 = extractelement \<2 x i32\> %743, i64 1\l  %747 = xor i32 %746, %745\l  %748 = insertelement \<2 x i32\> %743, i32 %747, i64 1\l  %749 = tail call i1 @llvm.amdgcn.class.f64(double %612, i32 504)\l  %750 = select i1 %749, \<2 x i32\> %748, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %751 = bitcast \<2 x i32\> %750 to double\l  %752 = fmul contract double %606, %751\l  %753 = sext i32 %607 to i64\l  %754 = getelementptr inbounds double, double addrspace(1)* %12, i64 %753\l  %755 = load double, double addrspace(1)* %754, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %756 = tail call double @llvm.fabs.f64(double %755)\l  %757 = fcmp olt double %756, 0x41D0000000000000\l  br i1 %757, label %758, label %777\l|{<s0>T|<s1>F}}"];
	Node0x646f5c0:s0 -> Node0x6476810;
	Node0x646f5c0:s1 -> Node0x64768a0;
	Node0x6476810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%758:\l758:                                              \l  %759 = fmul double %756, 0x3FE45F306DC9C883\l  %760 = tail call double @llvm.rint.f64(double %759)\l  %761 = tail call double @llvm.fma.f64(double %760, double\l... 0xBFF921FB54442D18, double %756)\l  %762 = tail call double @llvm.fma.f64(double %760, double\l... 0xBC91A62633145C00, double %761)\l  %763 = fmul double %760, 0x3C91A62633145C00\l  %764 = fneg double %763\l  %765 = tail call double @llvm.fma.f64(double %760, double\l... 0x3C91A62633145C00, double %764)\l  %766 = fsub double %761, %763\l  %767 = fsub double %761, %766\l  %768 = fsub double %767, %763\l  %769 = fsub double %766, %762\l  %770 = fadd double %769, %768\l  %771 = fsub double %770, %765\l  %772 = tail call double @llvm.fma.f64(double %760, double\l... 0xB97B839A252049C0, double %771)\l  %773 = fadd double %762, %772\l  %774 = fsub double %773, %762\l  %775 = fsub double %772, %774\l  %776 = fptosi double %760 to i32\l  br label %853\l}"];
	Node0x6476810 -> Node0x64776a0;
	Node0x64768a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%777:\l777:                                              \l  %778 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 0)\l  %779 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 1)\l  %780 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 2)\l  %781 = fcmp oge double %756, 0x7B00000000000000\l  %782 = tail call double @llvm.amdgcn.ldexp.f64(double %756, i32 -128)\l  %783 = select i1 %781, double %782, double %756\l  %784 = fmul double %780, %783\l  %785 = fneg double %784\l  %786 = tail call double @llvm.fma.f64(double %780, double %783, double %785)\l  %787 = fmul double %779, %783\l  %788 = fneg double %787\l  %789 = tail call double @llvm.fma.f64(double %779, double %783, double %788)\l  %790 = fmul double %778, %783\l  %791 = fneg double %790\l  %792 = tail call double @llvm.fma.f64(double %778, double %783, double %791)\l  %793 = fadd double %787, %792\l  %794 = fsub double %793, %787\l  %795 = fsub double %793, %794\l  %796 = fsub double %792, %794\l  %797 = fsub double %787, %795\l  %798 = fadd double %796, %797\l  %799 = fadd double %784, %789\l  %800 = fsub double %799, %784\l  %801 = fsub double %799, %800\l  %802 = fsub double %789, %800\l  %803 = fsub double %784, %801\l  %804 = fadd double %802, %803\l  %805 = fadd double %799, %798\l  %806 = fsub double %805, %799\l  %807 = fsub double %805, %806\l  %808 = fsub double %798, %806\l  %809 = fsub double %799, %807\l  %810 = fadd double %808, %809\l  %811 = fadd double %804, %810\l  %812 = fadd double %786, %811\l  %813 = fadd double %790, %793\l  %814 = fsub double %813, %790\l  %815 = fsub double %793, %814\l  %816 = fadd double %815, %805\l  %817 = fsub double %816, %815\l  %818 = fsub double %805, %817\l  %819 = fadd double %818, %812\l  %820 = tail call double @llvm.amdgcn.ldexp.f64(double %813, i32 -2)\l  %821 = tail call double @llvm.amdgcn.fract.f64(double %820)\l  %822 = tail call i1 @llvm.amdgcn.class.f64(double %820, i32 516)\l  %823 = select i1 %822, double 0.000000e+00, double %821\l  %824 = tail call double @llvm.amdgcn.ldexp.f64(double %823, i32 2)\l  %825 = fadd double %824, %816\l  %826 = fcmp olt double %825, 0.000000e+00\l  %827 = select i1 %826, double 4.000000e+00, double 0.000000e+00\l  %828 = fadd double %824, %827\l  %829 = fadd double %816, %828\l  %830 = fptosi double %829 to i32\l  %831 = sitofp i32 %830 to double\l  %832 = fsub double %828, %831\l  %833 = fadd double %816, %832\l  %834 = fsub double %833, %832\l  %835 = fsub double %816, %834\l  %836 = fadd double %819, %835\l  %837 = fcmp oge double %833, 5.000000e-01\l  %838 = zext i1 %837 to i32\l  %839 = add nsw i32 %838, %830\l  %840 = select i1 %837, double 1.000000e+00, double 0.000000e+00\l  %841 = fsub double %833, %840\l  %842 = fadd double %841, %836\l  %843 = fsub double %842, %841\l  %844 = fsub double %836, %843\l  %845 = fmul double %842, 0x3FF921FB54442D18\l  %846 = fneg double %845\l  %847 = tail call double @llvm.fma.f64(double %842, double\l... 0x3FF921FB54442D18, double %846)\l  %848 = tail call double @llvm.fma.f64(double %842, double\l... 0x3C91A62633145C07, double %847)\l  %849 = tail call double @llvm.fma.f64(double %844, double\l... 0x3FF921FB54442D18, double %848)\l  %850 = fadd double %845, %849\l  %851 = fsub double %850, %845\l  %852 = fsub double %849, %851\l  br label %853\l}"];
	Node0x64768a0 -> Node0x64776a0;
	Node0x64776a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%853:\l853:                                              \l  %854 = phi double [ %775, %758 ], [ %852, %777 ]\l  %855 = phi double [ %773, %758 ], [ %850, %777 ]\l  %856 = phi i32 [ %776, %758 ], [ %839, %777 ]\l  %857 = fmul double %855, %855\l  %858 = fmul double %857, 5.000000e-01\l  %859 = fsub double 1.000000e+00, %858\l  %860 = fsub double 1.000000e+00, %859\l  %861 = fsub double %860, %858\l  %862 = fmul double %857, %857\l  %863 = tail call double @llvm.fma.f64(double %857, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %864 = tail call double @llvm.fma.f64(double %857, double %863, double\l... 0xBE927E4FA17F65F6)\l  %865 = tail call double @llvm.fma.f64(double %857, double %864, double\l... 0x3EFA01A019F4EC90)\l  %866 = tail call double @llvm.fma.f64(double %857, double %865, double\l... 0xBF56C16C16C16967)\l  %867 = tail call double @llvm.fma.f64(double %857, double %866, double\l... 0x3FA5555555555555)\l  %868 = fneg double %854\l  %869 = tail call double @llvm.fma.f64(double %855, double %868, double %861)\l  %870 = tail call double @llvm.fma.f64(double %862, double %867, double %869)\l  %871 = fadd double %859, %870\l  %872 = tail call double @llvm.fma.f64(double %857, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %873 = tail call double @llvm.fma.f64(double %857, double %872, double\l... 0x3EC71DE3796CDE01)\l  %874 = tail call double @llvm.fma.f64(double %857, double %873, double\l... 0xBF2A01A019E83E5C)\l  %875 = tail call double @llvm.fma.f64(double %857, double %874, double\l... 0x3F81111111110BB3)\l  %876 = fneg double %857\l  %877 = fmul double %855, %876\l  %878 = fmul double %854, 5.000000e-01\l  %879 = tail call double @llvm.fma.f64(double %877, double %875, double %878)\l  %880 = tail call double @llvm.fma.f64(double %857, double %879, double %868)\l  %881 = tail call double @llvm.fma.f64(double %877, double\l... 0xBFC5555555555555, double %880)\l  %882 = fsub double %855, %881\l  %883 = fneg double %882\l  %884 = and i32 %856, 1\l  %885 = icmp eq i32 %884, 0\l  %886 = select i1 %885, double %871, double %883\l  %887 = bitcast double %886 to \<2 x i32\>\l  %888 = shl i32 %856, 30\l  %889 = and i32 %888, -2147483648\l  %890 = extractelement \<2 x i32\> %887, i64 1\l  %891 = xor i32 %890, %889\l  %892 = insertelement \<2 x i32\> %887, i32 %891, i64 1\l  %893 = tail call i1 @llvm.amdgcn.class.f64(double %756, i32 504)\l  %894 = select i1 %893, \<2 x i32\> %892, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %895 = bitcast \<2 x i32\> %894 to double\l  %896 = fmul contract double %752, %895\l  %897 = fsub contract double %598, %896\l  %898 = sext i32 %587 to i64\l  %899 = getelementptr inbounds double, double addrspace(1)* %6, i64 %898\l  %900 = load double, double addrspace(1)* %899, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %901 = fmul contract double %584, %900\l  %902 = fmul contract double %574, %591\l  %903 = fsub contract double %901, %902\l  br i1 %613, label %904, label %923\l|{<s0>T|<s1>F}}"];
	Node0x64776a0:s0 -> Node0x647cee0;
	Node0x64776a0:s1 -> Node0x647cf30;
	Node0x647cee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%904:\l904:                                              \l  %905 = fmul double %612, 0x3FE45F306DC9C883\l  %906 = tail call double @llvm.rint.f64(double %905)\l  %907 = tail call double @llvm.fma.f64(double %906, double\l... 0xBFF921FB54442D18, double %612)\l  %908 = tail call double @llvm.fma.f64(double %906, double\l... 0xBC91A62633145C00, double %907)\l  %909 = fmul double %906, 0x3C91A62633145C00\l  %910 = fneg double %909\l  %911 = tail call double @llvm.fma.f64(double %906, double\l... 0x3C91A62633145C00, double %910)\l  %912 = fsub double %907, %909\l  %913 = fsub double %907, %912\l  %914 = fsub double %913, %909\l  %915 = fsub double %912, %908\l  %916 = fadd double %915, %914\l  %917 = fsub double %916, %911\l  %918 = tail call double @llvm.fma.f64(double %906, double\l... 0xB97B839A252049C0, double %917)\l  %919 = fadd double %908, %918\l  %920 = fsub double %919, %908\l  %921 = fsub double %918, %920\l  %922 = fptosi double %906 to i32\l  br label %999\l}"];
	Node0x647cee0 -> Node0x647dcf0;
	Node0x647cf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%923:\l923:                                              \l  %924 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 0)\l  %925 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 1)\l  %926 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 2)\l  %927 = fcmp oge double %612, 0x7B00000000000000\l  %928 = tail call double @llvm.amdgcn.ldexp.f64(double %612, i32 -128)\l  %929 = select i1 %927, double %928, double %612\l  %930 = fmul double %926, %929\l  %931 = fneg double %930\l  %932 = tail call double @llvm.fma.f64(double %926, double %929, double %931)\l  %933 = fmul double %925, %929\l  %934 = fneg double %933\l  %935 = tail call double @llvm.fma.f64(double %925, double %929, double %934)\l  %936 = fmul double %924, %929\l  %937 = fneg double %936\l  %938 = tail call double @llvm.fma.f64(double %924, double %929, double %937)\l  %939 = fadd double %933, %938\l  %940 = fsub double %939, %933\l  %941 = fsub double %939, %940\l  %942 = fsub double %938, %940\l  %943 = fsub double %933, %941\l  %944 = fadd double %942, %943\l  %945 = fadd double %930, %935\l  %946 = fsub double %945, %930\l  %947 = fsub double %945, %946\l  %948 = fsub double %935, %946\l  %949 = fsub double %930, %947\l  %950 = fadd double %948, %949\l  %951 = fadd double %945, %944\l  %952 = fsub double %951, %945\l  %953 = fsub double %951, %952\l  %954 = fsub double %944, %952\l  %955 = fsub double %945, %953\l  %956 = fadd double %954, %955\l  %957 = fadd double %950, %956\l  %958 = fadd double %932, %957\l  %959 = fadd double %936, %939\l  %960 = fsub double %959, %936\l  %961 = fsub double %939, %960\l  %962 = fadd double %961, %951\l  %963 = fsub double %962, %961\l  %964 = fsub double %951, %963\l  %965 = fadd double %964, %958\l  %966 = tail call double @llvm.amdgcn.ldexp.f64(double %959, i32 -2)\l  %967 = tail call double @llvm.amdgcn.fract.f64(double %966)\l  %968 = tail call i1 @llvm.amdgcn.class.f64(double %966, i32 516)\l  %969 = select i1 %968, double 0.000000e+00, double %967\l  %970 = tail call double @llvm.amdgcn.ldexp.f64(double %969, i32 2)\l  %971 = fadd double %970, %962\l  %972 = fcmp olt double %971, 0.000000e+00\l  %973 = select i1 %972, double 4.000000e+00, double 0.000000e+00\l  %974 = fadd double %970, %973\l  %975 = fadd double %962, %974\l  %976 = fptosi double %975 to i32\l  %977 = sitofp i32 %976 to double\l  %978 = fsub double %974, %977\l  %979 = fadd double %962, %978\l  %980 = fsub double %979, %978\l  %981 = fsub double %962, %980\l  %982 = fadd double %965, %981\l  %983 = fcmp oge double %979, 5.000000e-01\l  %984 = zext i1 %983 to i32\l  %985 = add nsw i32 %984, %976\l  %986 = select i1 %983, double 1.000000e+00, double 0.000000e+00\l  %987 = fsub double %979, %986\l  %988 = fadd double %987, %982\l  %989 = fsub double %988, %987\l  %990 = fsub double %982, %989\l  %991 = fmul double %988, 0x3FF921FB54442D18\l  %992 = fneg double %991\l  %993 = tail call double @llvm.fma.f64(double %988, double\l... 0x3FF921FB54442D18, double %992)\l  %994 = tail call double @llvm.fma.f64(double %988, double\l... 0x3C91A62633145C07, double %993)\l  %995 = tail call double @llvm.fma.f64(double %990, double\l... 0x3FF921FB54442D18, double %994)\l  %996 = fadd double %991, %995\l  %997 = fsub double %996, %991\l  %998 = fsub double %995, %997\l  br label %999\l}"];
	Node0x647cf30 -> Node0x647dcf0;
	Node0x647dcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%999:\l999:                                              \l  %1000 = phi double [ %921, %904 ], [ %998, %923 ]\l  %1001 = phi double [ %919, %904 ], [ %996, %923 ]\l  %1002 = phi i32 [ %922, %904 ], [ %985, %923 ]\l  %1003 = fmul double %1001, %1001\l  %1004 = fmul double %1003, 5.000000e-01\l  %1005 = fsub double 1.000000e+00, %1004\l  %1006 = fsub double 1.000000e+00, %1005\l  %1007 = fsub double %1006, %1004\l  %1008 = fmul double %1003, %1003\l  %1009 = tail call double @llvm.fma.f64(double %1003, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1010 = tail call double @llvm.fma.f64(double %1003, double %1009, double\l... 0xBE927E4FA17F65F6)\l  %1011 = tail call double @llvm.fma.f64(double %1003, double %1010, double\l... 0x3EFA01A019F4EC90)\l  %1012 = tail call double @llvm.fma.f64(double %1003, double %1011, double\l... 0xBF56C16C16C16967)\l  %1013 = tail call double @llvm.fma.f64(double %1003, double %1012, double\l... 0x3FA5555555555555)\l  %1014 = fneg double %1000\l  %1015 = tail call double @llvm.fma.f64(double %1001, double %1014, double\l... %1007)\l  %1016 = tail call double @llvm.fma.f64(double %1008, double %1013, double\l... %1015)\l  %1017 = fadd double %1005, %1016\l  %1018 = tail call double @llvm.fma.f64(double %1003, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1019 = tail call double @llvm.fma.f64(double %1003, double %1018, double\l... 0x3EC71DE3796CDE01)\l  %1020 = tail call double @llvm.fma.f64(double %1003, double %1019, double\l... 0xBF2A01A019E83E5C)\l  %1021 = tail call double @llvm.fma.f64(double %1003, double %1020, double\l... 0x3F81111111110BB3)\l  %1022 = fneg double %1003\l  %1023 = fmul double %1001, %1022\l  %1024 = fmul double %1000, 5.000000e-01\l  %1025 = tail call double @llvm.fma.f64(double %1023, double %1021, double\l... %1024)\l  %1026 = tail call double @llvm.fma.f64(double %1003, double %1025, double\l... %1014)\l  %1027 = tail call double @llvm.fma.f64(double %1023, double\l... 0xBFC5555555555555, double %1026)\l  %1028 = fsub double %1001, %1027\l  %1029 = fneg double %1028\l  %1030 = and i32 %1002, 1\l  %1031 = icmp eq i32 %1030, 0\l  %1032 = select i1 %1031, double %1017, double %1029\l  %1033 = bitcast double %1032 to \<2 x i32\>\l  %1034 = shl i32 %1002, 30\l  %1035 = and i32 %1034, -2147483648\l  %1036 = extractelement \<2 x i32\> %1033, i64 1\l  %1037 = xor i32 %1036, %1035\l  %1038 = insertelement \<2 x i32\> %1033, i32 %1037, i64 1\l  %1039 = select i1 %749, \<2 x i32\> %1038, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1040 = bitcast \<2 x i32\> %1039 to double\l  %1041 = fmul contract double %606, %1040\l  br i1 %757, label %1042, label %1061\l|{<s0>T|<s1>F}}"];
	Node0x647dcf0:s0 -> Node0x6469a30;
	Node0x647dcf0:s1 -> Node0x6469a80;
	Node0x6469a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1042:\l1042:                                             \l  %1043 = fmul double %756, 0x3FE45F306DC9C883\l  %1044 = tail call double @llvm.rint.f64(double %1043)\l  %1045 = tail call double @llvm.fma.f64(double %1044, double\l... 0xBFF921FB54442D18, double %756)\l  %1046 = tail call double @llvm.fma.f64(double %1044, double\l... 0xBC91A62633145C00, double %1045)\l  %1047 = fmul double %1044, 0x3C91A62633145C00\l  %1048 = fneg double %1047\l  %1049 = tail call double @llvm.fma.f64(double %1044, double\l... 0x3C91A62633145C00, double %1048)\l  %1050 = fsub double %1045, %1047\l  %1051 = fsub double %1045, %1050\l  %1052 = fsub double %1051, %1047\l  %1053 = fsub double %1050, %1046\l  %1054 = fadd double %1053, %1052\l  %1055 = fsub double %1054, %1049\l  %1056 = tail call double @llvm.fma.f64(double %1044, double\l... 0xB97B839A252049C0, double %1055)\l  %1057 = fadd double %1046, %1056\l  %1058 = fsub double %1057, %1046\l  %1059 = fsub double %1056, %1058\l  %1060 = fptosi double %1044 to i32\l  br label %1137\l}"];
	Node0x6469a30 -> Node0x646a840;
	Node0x6469a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1061:\l1061:                                             \l  %1062 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 0)\l  %1063 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 1)\l  %1064 = tail call double @llvm.amdgcn.trig.preop.f64(double %756, i32 2)\l  %1065 = fcmp oge double %756, 0x7B00000000000000\l  %1066 = tail call double @llvm.amdgcn.ldexp.f64(double %756, i32 -128)\l  %1067 = select i1 %1065, double %1066, double %756\l  %1068 = fmul double %1064, %1067\l  %1069 = fneg double %1068\l  %1070 = tail call double @llvm.fma.f64(double %1064, double %1067, double\l... %1069)\l  %1071 = fmul double %1063, %1067\l  %1072 = fneg double %1071\l  %1073 = tail call double @llvm.fma.f64(double %1063, double %1067, double\l... %1072)\l  %1074 = fmul double %1062, %1067\l  %1075 = fneg double %1074\l  %1076 = tail call double @llvm.fma.f64(double %1062, double %1067, double\l... %1075)\l  %1077 = fadd double %1071, %1076\l  %1078 = fsub double %1077, %1071\l  %1079 = fsub double %1077, %1078\l  %1080 = fsub double %1076, %1078\l  %1081 = fsub double %1071, %1079\l  %1082 = fadd double %1080, %1081\l  %1083 = fadd double %1068, %1073\l  %1084 = fsub double %1083, %1068\l  %1085 = fsub double %1083, %1084\l  %1086 = fsub double %1073, %1084\l  %1087 = fsub double %1068, %1085\l  %1088 = fadd double %1086, %1087\l  %1089 = fadd double %1083, %1082\l  %1090 = fsub double %1089, %1083\l  %1091 = fsub double %1089, %1090\l  %1092 = fsub double %1082, %1090\l  %1093 = fsub double %1083, %1091\l  %1094 = fadd double %1092, %1093\l  %1095 = fadd double %1088, %1094\l  %1096 = fadd double %1070, %1095\l  %1097 = fadd double %1074, %1077\l  %1098 = fsub double %1097, %1074\l  %1099 = fsub double %1077, %1098\l  %1100 = fadd double %1099, %1089\l  %1101 = fsub double %1100, %1099\l  %1102 = fsub double %1089, %1101\l  %1103 = fadd double %1102, %1096\l  %1104 = tail call double @llvm.amdgcn.ldexp.f64(double %1097, i32 -2)\l  %1105 = tail call double @llvm.amdgcn.fract.f64(double %1104)\l  %1106 = tail call i1 @llvm.amdgcn.class.f64(double %1104, i32 516)\l  %1107 = select i1 %1106, double 0.000000e+00, double %1105\l  %1108 = tail call double @llvm.amdgcn.ldexp.f64(double %1107, i32 2)\l  %1109 = fadd double %1108, %1100\l  %1110 = fcmp olt double %1109, 0.000000e+00\l  %1111 = select i1 %1110, double 4.000000e+00, double 0.000000e+00\l  %1112 = fadd double %1108, %1111\l  %1113 = fadd double %1100, %1112\l  %1114 = fptosi double %1113 to i32\l  %1115 = sitofp i32 %1114 to double\l  %1116 = fsub double %1112, %1115\l  %1117 = fadd double %1100, %1116\l  %1118 = fsub double %1117, %1116\l  %1119 = fsub double %1100, %1118\l  %1120 = fadd double %1103, %1119\l  %1121 = fcmp oge double %1117, 5.000000e-01\l  %1122 = zext i1 %1121 to i32\l  %1123 = add nsw i32 %1122, %1114\l  %1124 = select i1 %1121, double 1.000000e+00, double 0.000000e+00\l  %1125 = fsub double %1117, %1124\l  %1126 = fadd double %1125, %1120\l  %1127 = fsub double %1126, %1125\l  %1128 = fsub double %1120, %1127\l  %1129 = fmul double %1126, 0x3FF921FB54442D18\l  %1130 = fneg double %1129\l  %1131 = tail call double @llvm.fma.f64(double %1126, double\l... 0x3FF921FB54442D18, double %1130)\l  %1132 = tail call double @llvm.fma.f64(double %1126, double\l... 0x3C91A62633145C07, double %1131)\l  %1133 = tail call double @llvm.fma.f64(double %1128, double\l... 0x3FF921FB54442D18, double %1132)\l  %1134 = fadd double %1129, %1133\l  %1135 = fsub double %1134, %1129\l  %1136 = fsub double %1133, %1135\l  br label %1137\l}"];
	Node0x6469a80 -> Node0x646a840;
	Node0x646a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%1137:\l1137:                                             \l  %1138 = phi double [ %1059, %1042 ], [ %1136, %1061 ]\l  %1139 = phi double [ %1057, %1042 ], [ %1134, %1061 ]\l  %1140 = phi i32 [ %1060, %1042 ], [ %1123, %1061 ]\l  %1141 = fmul double %1139, %1139\l  %1142 = fmul double %1141, 5.000000e-01\l  %1143 = fsub double 1.000000e+00, %1142\l  %1144 = fsub double 1.000000e+00, %1143\l  %1145 = fsub double %1144, %1142\l  %1146 = fmul double %1141, %1141\l  %1147 = tail call double @llvm.fma.f64(double %1141, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1148 = tail call double @llvm.fma.f64(double %1141, double %1147, double\l... 0xBE927E4FA17F65F6)\l  %1149 = tail call double @llvm.fma.f64(double %1141, double %1148, double\l... 0x3EFA01A019F4EC90)\l  %1150 = tail call double @llvm.fma.f64(double %1141, double %1149, double\l... 0xBF56C16C16C16967)\l  %1151 = tail call double @llvm.fma.f64(double %1141, double %1150, double\l... 0x3FA5555555555555)\l  %1152 = fneg double %1138\l  %1153 = tail call double @llvm.fma.f64(double %1139, double %1152, double\l... %1145)\l  %1154 = tail call double @llvm.fma.f64(double %1146, double %1151, double\l... %1153)\l  %1155 = fadd double %1143, %1154\l  %1156 = tail call double @llvm.fma.f64(double %1141, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1157 = tail call double @llvm.fma.f64(double %1141, double %1156, double\l... 0x3EC71DE3796CDE01)\l  %1158 = tail call double @llvm.fma.f64(double %1141, double %1157, double\l... 0xBF2A01A019E83E5C)\l  %1159 = tail call double @llvm.fma.f64(double %1141, double %1158, double\l... 0x3F81111111110BB3)\l  %1160 = fneg double %1141\l  %1161 = fmul double %1139, %1160\l  %1162 = fmul double %1138, 5.000000e-01\l  %1163 = tail call double @llvm.fma.f64(double %1161, double %1159, double\l... %1162)\l  %1164 = tail call double @llvm.fma.f64(double %1141, double %1163, double\l... %1152)\l  %1165 = tail call double @llvm.fma.f64(double %1161, double\l... 0xBFC5555555555555, double %1164)\l  %1166 = fsub double %1139, %1165\l  %1167 = and i32 %1140, 1\l  %1168 = icmp eq i32 %1167, 0\l  %1169 = select i1 %1168, double %1166, double %1155\l  %1170 = bitcast double %1169 to \<2 x i32\>\l  %1171 = shl i32 %1140, 30\l  %1172 = bitcast double %755 to \<2 x i32\>\l  %1173 = extractelement \<2 x i32\> %1172, i64 1\l  %1174 = xor i32 %1171, %1173\l  %1175 = and i32 %1174, -2147483648\l  %1176 = extractelement \<2 x i32\> %1170, i64 1\l  %1177 = xor i32 %1176, %1175\l  %1178 = insertelement \<2 x i32\> %1170, i32 %1177, i64 1\l  %1179 = select i1 %893, \<2 x i32\> %1178, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1180 = bitcast \<2 x i32\> %1179 to double\l  %1181 = fmul contract double %1041, %1180\l  %1182 = fsub contract double %903, %1181\l  %1183 = fmul contract double %574, %596\l  %1184 = fmul contract double %579, %900\l  %1185 = fsub contract double %1183, %1184\l  %1186 = fmul contract double %569, %605\l  br i1 %613, label %1187, label %1232\l|{<s0>T|<s1>F}}"];
	Node0x646a840:s0 -> Node0x648b530;
	Node0x646a840:s1 -> Node0x648b580;
	Node0x648b530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1187:\l1187:                                             \l  %1188 = fmul double %612, 0x3FE45F306DC9C883\l  %1189 = tail call double @llvm.rint.f64(double %1188)\l  %1190 = tail call double @llvm.fma.f64(double %1189, double\l... 0xBFF921FB54442D18, double %612)\l  %1191 = tail call double @llvm.fma.f64(double %1189, double\l... 0xBC91A62633145C00, double %1190)\l  %1192 = fmul double %1189, 0x3C91A62633145C00\l  %1193 = fneg double %1192\l  %1194 = tail call double @llvm.fma.f64(double %1189, double\l... 0x3C91A62633145C00, double %1193)\l  %1195 = fsub double %1190, %1192\l  %1196 = fsub double %1190, %1195\l  %1197 = fsub double %1196, %1192\l  %1198 = fsub double %1195, %1191\l  %1199 = fadd double %1198, %1197\l  %1200 = fsub double %1199, %1194\l  %1201 = tail call double @llvm.fma.f64(double %1189, double\l... 0xB97B839A252049C0, double %1200)\l  %1202 = fadd double %1191, %1201\l  %1203 = fsub double %1202, %1191\l  %1204 = fsub double %1201, %1203\l  %1205 = fptosi double %1189 to i32\l  %1206 = fmul double %1202, %1202\l  %1207 = fmul double %1206, 5.000000e-01\l  %1208 = fsub double 1.000000e+00, %1207\l  %1209 = fsub double 1.000000e+00, %1208\l  %1210 = fsub double %1209, %1207\l  %1211 = fmul double %1206, %1206\l  %1212 = tail call double @llvm.fma.f64(double %1206, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1213 = tail call double @llvm.fma.f64(double %1206, double %1212, double\l... 0xBE927E4FA17F65F6)\l  %1214 = tail call double @llvm.fma.f64(double %1206, double %1213, double\l... 0x3EFA01A019F4EC90)\l  %1215 = tail call double @llvm.fma.f64(double %1206, double %1214, double\l... 0xBF56C16C16C16967)\l  %1216 = tail call double @llvm.fma.f64(double %1206, double %1215, double\l... 0x3FA5555555555555)\l  %1217 = fneg double %1204\l  %1218 = tail call double @llvm.fma.f64(double %1202, double %1217, double\l... %1210)\l  %1219 = tail call double @llvm.fma.f64(double %1211, double %1216, double\l... %1218)\l  %1220 = fadd double %1208, %1219\l  %1221 = tail call double @llvm.fma.f64(double %1206, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1222 = tail call double @llvm.fma.f64(double %1206, double %1221, double\l... 0x3EC71DE3796CDE01)\l  %1223 = tail call double @llvm.fma.f64(double %1206, double %1222, double\l... 0xBF2A01A019E83E5C)\l  %1224 = tail call double @llvm.fma.f64(double %1206, double %1223, double\l... 0x3F81111111110BB3)\l  %1225 = fneg double %1206\l  %1226 = fmul double %1202, %1225\l  %1227 = fmul double %1204, 5.000000e-01\l  %1228 = tail call double @llvm.fma.f64(double %1226, double %1224, double\l... %1227)\l  %1229 = tail call double @llvm.fma.f64(double %1206, double %1228, double\l... %1217)\l  %1230 = tail call double @llvm.fma.f64(double %1226, double\l... 0xBFC5555555555555, double %1229)\l  %1231 = fsub double %1202, %1230\l  br label %1334\l}"];
	Node0x648b530 -> Node0x648da60;
	Node0x648b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%1232:\l1232:                                             \l  %1233 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 0)\l  %1234 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 1)\l  %1235 = tail call double @llvm.amdgcn.trig.preop.f64(double %612, i32 2)\l  %1236 = fcmp oge double %612, 0x7B00000000000000\l  %1237 = tail call double @llvm.amdgcn.ldexp.f64(double %612, i32 -128)\l  %1238 = select i1 %1236, double %1237, double %612\l  %1239 = fmul double %1235, %1238\l  %1240 = fneg double %1239\l  %1241 = tail call double @llvm.fma.f64(double %1235, double %1238, double\l... %1240)\l  %1242 = fmul double %1234, %1238\l  %1243 = fneg double %1242\l  %1244 = tail call double @llvm.fma.f64(double %1234, double %1238, double\l... %1243)\l  %1245 = fmul double %1233, %1238\l  %1246 = fneg double %1245\l  %1247 = tail call double @llvm.fma.f64(double %1233, double %1238, double\l... %1246)\l  %1248 = fadd double %1242, %1247\l  %1249 = fsub double %1248, %1242\l  %1250 = fsub double %1248, %1249\l  %1251 = fsub double %1247, %1249\l  %1252 = fsub double %1242, %1250\l  %1253 = fadd double %1251, %1252\l  %1254 = fadd double %1239, %1244\l  %1255 = fsub double %1254, %1239\l  %1256 = fsub double %1254, %1255\l  %1257 = fsub double %1244, %1255\l  %1258 = fsub double %1239, %1256\l  %1259 = fadd double %1257, %1258\l  %1260 = fadd double %1254, %1253\l  %1261 = fsub double %1260, %1254\l  %1262 = fsub double %1260, %1261\l  %1263 = fsub double %1253, %1261\l  %1264 = fsub double %1254, %1262\l  %1265 = fadd double %1263, %1264\l  %1266 = fadd double %1259, %1265\l  %1267 = fadd double %1241, %1266\l  %1268 = fadd double %1245, %1248\l  %1269 = fsub double %1268, %1245\l  %1270 = fsub double %1248, %1269\l  %1271 = fadd double %1270, %1260\l  %1272 = fsub double %1271, %1270\l  %1273 = fsub double %1260, %1272\l  %1274 = fadd double %1273, %1267\l  %1275 = tail call double @llvm.amdgcn.ldexp.f64(double %1268, i32 -2)\l  %1276 = tail call double @llvm.amdgcn.fract.f64(double %1275)\l  %1277 = tail call i1 @llvm.amdgcn.class.f64(double %1275, i32 516)\l  %1278 = select i1 %1277, double 0.000000e+00, double %1276\l  %1279 = tail call double @llvm.amdgcn.ldexp.f64(double %1278, i32 2)\l  %1280 = fadd double %1279, %1271\l  %1281 = fcmp olt double %1280, 0.000000e+00\l  %1282 = select i1 %1281, double 4.000000e+00, double 0.000000e+00\l  %1283 = fadd double %1279, %1282\l  %1284 = fadd double %1271, %1283\l  %1285 = fptosi double %1284 to i32\l  %1286 = sitofp i32 %1285 to double\l  %1287 = fsub double %1283, %1286\l  %1288 = fadd double %1271, %1287\l  %1289 = fsub double %1288, %1287\l  %1290 = fsub double %1271, %1289\l  %1291 = fadd double %1274, %1290\l  %1292 = fcmp oge double %1288, 5.000000e-01\l  %1293 = zext i1 %1292 to i32\l  %1294 = add nsw i32 %1293, %1285\l  %1295 = select i1 %1292, double 1.000000e+00, double 0.000000e+00\l  %1296 = fsub double %1288, %1295\l  %1297 = fadd double %1296, %1291\l  %1298 = fsub double %1297, %1296\l  %1299 = fsub double %1291, %1298\l  %1300 = fmul double %1297, 0x3FF921FB54442D18\l  %1301 = fneg double %1300\l  %1302 = tail call double @llvm.fma.f64(double %1297, double\l... 0x3FF921FB54442D18, double %1301)\l  %1303 = tail call double @llvm.fma.f64(double %1297, double\l... 0x3C91A62633145C07, double %1302)\l  %1304 = tail call double @llvm.fma.f64(double %1299, double\l... 0x3FF921FB54442D18, double %1303)\l  %1305 = fadd double %1300, %1304\l  %1306 = fsub double %1305, %1300\l  %1307 = fsub double %1304, %1306\l  %1308 = fmul double %1305, %1305\l  %1309 = fmul double %1308, 5.000000e-01\l  %1310 = fsub double 1.000000e+00, %1309\l  %1311 = fsub double 1.000000e+00, %1310\l  %1312 = fsub double %1311, %1309\l  %1313 = fmul double %1308, %1308\l  %1314 = tail call double @llvm.fma.f64(double %1308, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1315 = tail call double @llvm.fma.f64(double %1308, double %1314, double\l... 0xBE927E4FA17F65F6)\l  %1316 = tail call double @llvm.fma.f64(double %1308, double %1315, double\l... 0x3EFA01A019F4EC90)\l  %1317 = tail call double @llvm.fma.f64(double %1308, double %1316, double\l... 0xBF56C16C16C16967)\l  %1318 = tail call double @llvm.fma.f64(double %1308, double %1317, double\l... 0x3FA5555555555555)\l  %1319 = fneg double %1307\l  %1320 = tail call double @llvm.fma.f64(double %1305, double %1319, double\l... %1312)\l  %1321 = tail call double @llvm.fma.f64(double %1313, double %1318, double\l... %1320)\l  %1322 = fadd double %1310, %1321\l  %1323 = tail call double @llvm.fma.f64(double %1308, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1324 = tail call double @llvm.fma.f64(double %1308, double %1323, double\l... 0x3EC71DE3796CDE01)\l  %1325 = tail call double @llvm.fma.f64(double %1308, double %1324, double\l... 0xBF2A01A019E83E5C)\l  %1326 = tail call double @llvm.fma.f64(double %1308, double %1325, double\l... 0x3F81111111110BB3)\l  %1327 = fneg double %1308\l  %1328 = fmul double %1305, %1327\l  %1329 = fmul double %1307, 5.000000e-01\l  %1330 = tail call double @llvm.fma.f64(double %1328, double %1326, double\l... %1329)\l  %1331 = tail call double @llvm.fma.f64(double %1308, double %1330, double\l... %1319)\l  %1332 = tail call double @llvm.fma.f64(double %1328, double\l... 0xBFC5555555555555, double %1331)\l  %1333 = fsub double %1305, %1332\l  br label %1334\l}"];
	Node0x648b580 -> Node0x648da60;
	Node0x648da60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%1334:\l1334:                                             \l  %1335 = phi double [ %1231, %1187 ], [ %1333, %1232 ]\l  %1336 = phi i32 [ %1205, %1187 ], [ %1294, %1232 ]\l  %1337 = phi double [ %1220, %1187 ], [ %1322, %1232 ]\l  %1338 = fneg double %1335\l  %1339 = and i32 %1336, 1\l  %1340 = icmp eq i32 %1339, 0\l  %1341 = select i1 %1340, double %1337, double %1338\l  %1342 = bitcast double %1341 to \<2 x i32\>\l  %1343 = shl i32 %1336, 30\l  %1344 = and i32 %1343, -2147483648\l  %1345 = extractelement \<2 x i32\> %1342, i64 1\l  %1346 = xor i32 %1345, %1344\l  %1347 = insertelement \<2 x i32\> %1342, i32 %1346, i64 1\l  %1348 = select i1 %749, \<2 x i32\> %1347, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1349 = bitcast \<2 x i32\> %1348 to double\l  %1350 = fmul contract double %1186, %1349\l  %1351 = bitcast \<2 x i32\> %1348 to double\l  %1352 = fmul contract double %1350, %1351\l  %1353 = fadd contract double %1185, %1352\l  %1354 = fmul contract double %566, %897\l  %1355 = getelementptr inbounds double, double addrspace(1)* %0, i64 %601\l  store double %1354, double addrspace(1)* %1355, align 8, !tbaa !16\l  %1356 = fmul contract double %566, %1182\l  %1357 = getelementptr inbounds double, double addrspace(1)* %1, i64 %601\l  store double %1356, double addrspace(1)* %1357, align 8, !tbaa !16\l  %1358 = fmul contract double %566, %1353\l  %1359 = getelementptr inbounds double, double addrspace(1)* %2, i64 %601\l  store double %1358, double addrspace(1)* %1359, align 8, !tbaa !16\l  br label %1360\l}"];
	Node0x648da60 -> Node0x644fdb0;
	Node0x644fdb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1360:\l1360:                                             \l  ret void\l}"];
}
