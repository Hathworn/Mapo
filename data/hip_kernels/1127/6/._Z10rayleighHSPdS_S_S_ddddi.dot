digraph "CFG for '_Z10rayleighHSPdS_S_S_ddddi' function" {
	label="CFG for '_Z10rayleighHSPdS_S_S_ddddi' function";

	Node0x46074a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 16\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 8, !tbaa !7\l  %22 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = icmp slt i32 %18, %8\l  br i1 %27, label %28, label %81\l|{<s0>T|<s1>F}}"];
	Node0x46074a0:s0 -> Node0x460b150;
	Node0x46074a0:s1 -> Node0x460b1e0;
	Node0x460b150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %30 = mul i32 %26, %25\l  %31 = icmp ugt i32 %21, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %26, %32\l  %34 = mul i32 %33, %18\l  %35 = add nsw i32 %34, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %39 = sext i32 %34 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %2, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %42 = fmul contract double %41, %6\l  %43 = load double, double addrspace(1)* %3, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %44 = fneg contract double %43\l  %45 = getelementptr inbounds double, double addrspace(1)* %3, i64 1\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %47 = fsub contract double %44, %46\l  %48 = fmul contract double %42, %47\l  %49 = fsub contract double %38, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %52 = fadd contract double %51, %49\l  %53 = fmul contract double %52, 5.000000e-01\l  %54 = add i32 %34, %29\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %1, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !16,\l... !amdgpu.noclobber !5\l  %58 = fdiv contract double %57, %53\l  %59 = fsub contract double %58, %5\l  %60 = fsub contract double 1.000000e+00, %5\l  %61 = fdiv contract double %59, %60\l  %62 = tail call double @llvm.maxnum.f64(double %61, double 0.000000e+00)\l  %63 = fmul contract double %62, %4\l  %64 = mul i32 %54, 3\l  %65 = fmul contract double %63, %7\l  %66 = fadd contract double %65, 1.000000e+00\l  %67 = sext i32 %64 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !16\l  %70 = fdiv contract double %69, %66\l  store double %70, double addrspace(1)* %68, align 8, !tbaa !16\l  %71 = add i32 %64, 1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %0, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !16\l  %75 = fdiv contract double %74, %66\l  store double %75, double addrspace(1)* %73, align 8, !tbaa !16\l  %76 = add i32 %64, 2\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %0, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !16\l  %80 = fdiv contract double %79, %66\l  store double %80, double addrspace(1)* %78, align 8, !tbaa !16\l  br label %81\l}"];
	Node0x460b150 -> Node0x460b1e0;
	Node0x460b1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  ret void\l}"];
}
