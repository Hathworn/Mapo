digraph "CFG for '_Z15cuInsertionSortPfiiii' function" {
	label="CFG for '_Z15cuInsertionSortPfiiii' function";

	Node0x608c4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %14, %1\l  br i1 %15, label %16, label %110\l|{<s0>T|<s1>F}}"];
	Node0x608c4e0:s0 -> Node0x608e370;
	Node0x608c4e0:s1 -> Node0x608e400;
	Node0x608e370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = zext i32 %14 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = mul nsw i32 %4, %2\l  %20 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %21 = icmp sgt i32 %19, %2\l  br i1 %21, label %22, label %25\l|{<s0>T|<s1>F}}"];
	Node0x608e370:s0 -> Node0x608e980;
	Node0x608e370:s1 -> Node0x608ea10;
	Node0x608e980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%22:\l22:                                               \l  %23 = sext i32 %2 to i64\l  %24 = sub nsw i64 0, %23\l  br label %37\l}"];
	Node0x608e980 -> Node0x608ec50;
	Node0x608ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = phi float [ %20, %16 ], [ %71, %70 ]\l  %27 = mul nsw i32 %3, %2\l  %28 = icmp slt i32 %19, %27\l  br i1 %28, label %29, label %110\l|{<s0>T|<s1>F}}"];
	Node0x608ea10:s0 -> Node0x608efa0;
	Node0x608ea10:s1 -> Node0x608e400;
	Node0x608efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%29:\l29:                                               \l  %30 = icmp sgt i32 %19, 0\l  %31 = add nsw i32 %4, -1\l  %32 = mul nsw i32 %31, %2\l  %33 = sext i32 %2 to i64\l  %34 = sub nsw i64 0, %33\l  %35 = sext i32 %32 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %18, i64 %35\l  br label %74\l}"];
	Node0x608efa0 -> Node0x608f610;
	Node0x608ec50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%37:\l37:                                               \l  %38 = phi float [ %20, %22 ], [ %71, %70 ]\l  %39 = phi i32 [ %2, %22 ], [ %72, %70 ]\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %18, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = fcmp contract olt float %42, %38\l  br i1 %43, label %44, label %70\l|{<s0>T|<s1>F}}"];
	Node0x608ec50:s0 -> Node0x6090080;
	Node0x608ec50:s1 -> Node0x608ed40;
	Node0x6090080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%44:\l44:                                               \l  %45 = icmp sgt i32 %39, 0\l  br i1 %45, label %46, label %55\l|{<s0>T|<s1>F}}"];
	Node0x6090080:s0 -> Node0x6090250;
	Node0x6090080:s1 -> Node0x60902a0;
	Node0x6090250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%46:\l46:                                               \l  %47 = phi i32 [ %53, %52 ], [ 0, %44 ]\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %18, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = fcmp contract ugt float %50, %42\l  br i1 %51, label %55, label %52\l|{<s0>T|<s1>F}}"];
	Node0x6090250:s0 -> Node0x60902a0;
	Node0x6090250:s1 -> Node0x6090410;
	Node0x6090410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%52:\l52:                                               \l  %53 = add nsw i32 %47, %2\l  %54 = icmp slt i32 %53, %39\l  br i1 %54, label %46, label %55, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x6090410:s0 -> Node0x6090250;
	Node0x6090410:s1 -> Node0x60902a0;
	Node0x60902a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %44 ], [ %47, %46 ], [ %53, %52 ]\l  %57 = icmp sgt i32 %39, %56\l  br i1 %57, label %58, label %66\l|{<s0>T|<s1>F}}"];
	Node0x60902a0:s0 -> Node0x6090c30;
	Node0x60902a0:s1 -> Node0x6090c80;
	Node0x6090c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %64, %58 ], [ %39, %55 ]\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %18, i64 %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %61, i64 %24\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  store float %63, float addrspace(1)* %61, align 4, !tbaa !7\l  %64 = sub nsw i32 %59, %2\l  %65 = icmp sgt i32 %64, %56\l  br i1 %65, label %58, label %66, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6090c30:s0 -> Node0x6090c30;
	Node0x6090c30:s1 -> Node0x6090c80;
	Node0x6090c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%66:\l66:                                               \l  %67 = sext i32 %56 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %18, i64 %67\l  store float %42, float addrspace(1)* %68, align 4, !tbaa !7\l  %69 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x6090c80 -> Node0x608ed40;
	Node0x608ed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%70:\l70:                                               \l  %71 = phi float [ %69, %66 ], [ %42, %37 ]\l  %72 = add nsw i32 %39, %2\l  %73 = icmp slt i32 %72, %19\l  br i1 %73, label %37, label %25, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x608ed40:s0 -> Node0x608ec50;
	Node0x608ed40:s1 -> Node0x608ea10;
	Node0x608f610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%74:\l74:                                               \l  %75 = phi i32 [ %19, %29 ], [ %108, %106 ]\l  %76 = phi float [ %26, %29 ], [ %107, %106 ]\l  %77 = sext i32 %75 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %18, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = fcmp contract olt float %79, %76\l  br i1 %80, label %81, label %106\l|{<s0>T|<s1>F}}"];
	Node0x608f610:s0 -> Node0x6091f70;
	Node0x608f610:s1 -> Node0x6091b70;
	Node0x6091f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%81:\l81:                                               \l  br i1 %30, label %82, label %91\l|{<s0>T|<s1>F}}"];
	Node0x6091f70:s0 -> Node0x60920b0;
	Node0x6091f70:s1 -> Node0x6092100;
	Node0x60920b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%82:\l82:                                               \l  %83 = phi i32 [ %89, %88 ], [ 0, %81 ]\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %18, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fcmp contract ugt float %86, %79\l  br i1 %87, label %91, label %88\l|{<s0>T|<s1>F}}"];
	Node0x60920b0:s0 -> Node0x6092100;
	Node0x60920b0:s1 -> Node0x6092240;
	Node0x6092240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%88:\l88:                                               \l  %89 = add nsw i32 %83, %2\l  %90 = icmp slt i32 %89, %19\l  br i1 %90, label %82, label %91, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6092240:s0 -> Node0x60920b0;
	Node0x6092240:s1 -> Node0x6092100;
	Node0x6092100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%91:\l91:                                               \l  %92 = phi i32 [ 0, %81 ], [ %83, %82 ], [ %89, %88 ]\l  %93 = icmp sgt i32 %32, %92\l  br i1 %93, label %94, label %102\l|{<s0>T|<s1>F}}"];
	Node0x6092100:s0 -> Node0x6092a30;
	Node0x6092100:s1 -> Node0x6092a80;
	Node0x6092a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = phi i32 [ %100, %94 ], [ %32, %91 ]\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %18, i64 %96\l  %98 = getelementptr inbounds float, float addrspace(1)* %97, i64 %34\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  store float %99, float addrspace(1)* %97, align 4, !tbaa !7\l  %100 = sub nsw i32 %95, %2\l  %101 = icmp sgt i32 %100, %92\l  br i1 %101, label %94, label %102, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6092a30:s0 -> Node0x6092a30;
	Node0x6092a30:s1 -> Node0x6092a80;
	Node0x6092a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%102:\l102:                                              \l  %103 = sext i32 %92 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %18, i64 %103\l  store float %79, float addrspace(1)* %104, align 4, !tbaa !7\l  %105 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %106\l}"];
	Node0x6092a80 -> Node0x6091b70;
	Node0x6091b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%106:\l106:                                              \l  %107 = phi float [ %105, %102 ], [ %76, %74 ]\l  %108 = add nsw i32 %75, %2\l  %109 = icmp slt i32 %108, %27\l  br i1 %109, label %74, label %110, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x6091b70:s0 -> Node0x608f610;
	Node0x6091b70:s1 -> Node0x608e400;
	Node0x608e400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%110:\l110:                                              \l  ret void\l}"];
}
