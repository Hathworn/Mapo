digraph "CFG for '_Z17cuAddQNormAndSqrtPfiiS_i' function" {
	label="CFG for '_Z17cuAddQNormAndSqrtPfiiS_i' function";

	Node0x50409f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp ult i32 %14, %1\l  %24 = icmp ult i32 %22, %4\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %57\l|{<s0>T|<s1>F}}"];
	Node0x50409f0:s0 -> Node0x5044460;
	Node0x50409f0:s1 -> Node0x50444f0;
	Node0x5044460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul i32 %22, %2\l  %28 = add i32 %27, %14\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = zext i32 %14 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = fadd contract float %31, %34\l  %36 = fcmp olt float %35, 0x39F0000000000000\l  %37 = select i1 %36, float 0x41F0000000000000, float 1.000000e+00\l  %38 = fmul float %35, %37\l  %39 = tail call float @llvm.sqrt.f32(float %38)\l  %40 = bitcast float %39 to i32\l  %41 = add nsw i32 %40, -1\l  %42 = bitcast i32 %41 to float\l  %43 = add nsw i32 %40, 1\l  %44 = bitcast i32 %43 to float\l  %45 = tail call i1 @llvm.amdgcn.class.f32(float %38, i32 608)\l  %46 = select i1 %36, float 0x3EF0000000000000, float 1.000000e+00\l  %47 = fneg float %44\l  %48 = tail call float @llvm.fma.f32(float %47, float %39, float %38)\l  %49 = fcmp ogt float %48, 0.000000e+00\l  %50 = fneg float %42\l  %51 = tail call float @llvm.fma.f32(float %50, float %39, float %38)\l  %52 = fcmp ole float %51, 0.000000e+00\l  %53 = select i1 %52, float %42, float %39\l  %54 = select i1 %49, float %44, float %53\l  %55 = fmul float %46, %54\l  %56 = select i1 %45, float %38, float %55\l  store float %56, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x5044460 -> Node0x50444f0;
	Node0x50444f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
