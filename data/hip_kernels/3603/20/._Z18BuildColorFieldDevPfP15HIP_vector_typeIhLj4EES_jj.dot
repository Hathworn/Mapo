digraph "CFG for '_Z18BuildColorFieldDevPfP15HIP_vector_typeIhLj4EES_jj' function" {
	label="CFG for '_Z18BuildColorFieldDevPfP15HIP_vector_typeIhLj4EES_jj' function";

	Node0x5f91460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = bitcast float addrspace(1)* %2 to \<2 x float\> addrspace(1)*\l  %7 = load \<2 x float\>, \<2 x float\> addrspace(1)* %6, align 4, !tbaa !4\l  %8 = extractelement \<2 x float\> %7, i64 0\l  %9 = extractelement \<2 x float\> %7, i64 1\l  %10 = fsub contract float %9, %8\l  %11 = fmul contract float %10, 5.000000e-01\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !8\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !9\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !18, !invariant.load\l... !19\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = udiv i32 %26, %4\l  %28 = udiv i32 %27, %4\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %30 = udiv i32 %29, %3\l  %31 = add i32 %30, %28\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !4,\l... !amdgpu.noclobber !19\l  %35 = fcmp contract olt float %34, %11\l  br i1 %35, label %36, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5f91460:s0 -> Node0x5f958e0;
	Node0x5f91460:s1 -> Node0x5f95970;
	Node0x5f958e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = fsub contract float %34, %8\l  %38 = fsub contract float %11, %8\l  %39 = fdiv contract float %37, %38\l  %40 = fsub contract float 1.000000e+00, %39\l  %41 = fmul contract float %40, 2.550000e+02\l  %42 = fptoui float %41 to i8\l  br label %50\l}"];
	Node0x5f958e0 -> Node0x5f95e30;
	Node0x5f95970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%43:\l43:                                               \l  %44 = fsub contract float %34, %11\l  %45 = fsub contract float %9, %11\l  %46 = fdiv contract float %44, %45\l  %47 = fmul contract float %46, 2.550000e+02\l  %48 = fptoui float %47 to i8\l  %49 = fsub contract float 1.000000e+00, %46\l  br label %50\l}"];
	Node0x5f95970 -> Node0x5f95e30;
	Node0x5f95e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i8 [ 0, %36 ], [ %48, %43 ]\l  %52 = phi i8 [ %42, %36 ], [ 0, %43 ]\l  %53 = phi float [ %39, %36 ], [ %49, %43 ]\l  %54 = fmul contract float %53, 2.550000e+02\l  %55 = fptoui float %54 to i8\l  %56 = add i32 %26, %29\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %57, i32 0, i32 0, i32 0, i64 0\l  store i8 %51, i8 addrspace(1)* %58, align 4\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %57, i32 0, i32 0, i32 0, i64 1\l  store i8 %52, i8 addrspace(1)* %59, align 1\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %57, i32 0, i32 0, i32 0, i64 2\l  store i8 %55, i8 addrspace(1)* %60, align 2\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %57, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %61, align 1\l  ret void\l}"];
}
