digraph "CFG for '_Z28PoissonImageCloningIterationPKfS0_S0_Pfii' function" {
	label="CFG for '_Z28PoissonImageCloningIterationPKfS0_S0_Pfii' function";

	Node0x602ded0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %15, %4\l  %25 = add nsw i32 %24, %23\l  %26 = add nsw i32 %15, -1\l  %27 = mul nsw i32 %26, %4\l  %28 = add nsw i32 %27, %23\l  %29 = add nsw i32 %25, -1\l  %30 = add nsw i32 %15, 1\l  %31 = mul nsw i32 %30, %4\l  %32 = add nsw i32 %31, %23\l  %33 = add nsw i32 %25, 1\l  %34 = icmp slt i32 %15, %5\l  %35 = icmp slt i32 %23, %4\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %148\l|{<s0>T|<s1>F}}"];
	Node0x602ded0:s0 -> Node0x602fff0;
	Node0x602ded0:s1 -> Node0x6032120;
	Node0x602fff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %25, 3\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fadd contract float %41, 0.000000e+00\l  %43 = getelementptr inbounds float, float addrspace(1)* %40, i64 1\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fadd contract float %44, 0.000000e+00\l  %46 = getelementptr inbounds float, float addrspace(1)* %40, i64 2\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fadd contract float %47, 0.000000e+00\l  %49 = icmp sgt i32 %15, 0\l  br i1 %49, label %50, label %67\l|{<s0>T|<s1>F}}"];
	Node0x602fff0:s0 -> Node0x6033bf0;
	Node0x602fff0:s1 -> Node0x6033c80;
	Node0x6033bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%50:\l50:                                               \l  %51 = sext i32 %28 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fcmp contract ogt float %53, 1.270000e+02\l  br i1 %54, label %55, label %67\l|{<s0>T|<s1>F}}"];
	Node0x6033bf0:s0 -> Node0x6034040;
	Node0x6033bf0:s1 -> Node0x6033c80;
	Node0x6034040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%55:\l55:                                               \l  %56 = mul nsw i32 %28, 3\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fadd contract float %42, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %58, i64 1\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fadd contract float %45, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %58, i64 2\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fadd contract float %48, %65\l  br label %67\l}"];
	Node0x6034040 -> Node0x6033c80;
	Node0x6033c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%67:\l67:                                               \l  %68 = phi float [ %60, %55 ], [ %42, %50 ], [ %42, %37 ]\l  %69 = phi float [ %63, %55 ], [ %45, %50 ], [ %45, %37 ]\l  %70 = phi float [ %66, %55 ], [ %48, %50 ], [ %48, %37 ]\l  %71 = icmp sgt i32 %23, 0\l  br i1 %71, label %72, label %89\l|{<s0>T|<s1>F}}"];
	Node0x6033c80:s0 -> Node0x6034d60;
	Node0x6033c80:s1 -> Node0x6034db0;
	Node0x6034d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%72:\l72:                                               \l  %73 = sext i32 %29 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fcmp contract ogt float %75, 1.270000e+02\l  br i1 %76, label %77, label %89\l|{<s0>T|<s1>F}}"];
	Node0x6034d60:s0 -> Node0x6035100;
	Node0x6034d60:s1 -> Node0x6034db0;
	Node0x6035100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%77:\l77:                                               \l  %78 = mul nsw i32 %29, 3\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %82 = fadd contract float %68, %81\l  %83 = getelementptr inbounds float, float addrspace(1)* %80, i64 1\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = fadd contract float %69, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %80, i64 2\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fadd contract float %70, %87\l  br label %89\l}"];
	Node0x6035100 -> Node0x6034db0;
	Node0x6034db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%89:\l89:                                               \l  %90 = phi float [ %82, %77 ], [ %68, %72 ], [ %68, %67 ]\l  %91 = phi float [ %85, %77 ], [ %69, %72 ], [ %69, %67 ]\l  %92 = phi float [ %88, %77 ], [ %70, %72 ], [ %70, %67 ]\l  %93 = icmp slt i32 %30, %5\l  br i1 %93, label %94, label %111\l|{<s0>T|<s1>F}}"];
	Node0x6034db0:s0 -> Node0x6035c10;
	Node0x6034db0:s1 -> Node0x6035c60;
	Node0x6035c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%94:\l94:                                               \l  %95 = sext i32 %32 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = fcmp contract ogt float %97, 1.270000e+02\l  br i1 %98, label %99, label %111\l|{<s0>T|<s1>F}}"];
	Node0x6035c10:s0 -> Node0x6035fb0;
	Node0x6035c10:s1 -> Node0x6035c60;
	Node0x6035fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%99:\l99:                                               \l  %100 = mul nsw i32 %32, 3\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fadd contract float %90, %103\l  %105 = getelementptr inbounds float, float addrspace(1)* %102, i64 1\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = fadd contract float %91, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %102, i64 2\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = fadd contract float %92, %109\l  br label %111\l}"];
	Node0x6035fb0 -> Node0x6035c60;
	Node0x6035c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%111:\l111:                                              \l  %112 = phi float [ %104, %99 ], [ %90, %94 ], [ %90, %89 ]\l  %113 = phi float [ %107, %99 ], [ %91, %94 ], [ %91, %89 ]\l  %114 = phi float [ %110, %99 ], [ %92, %94 ], [ %92, %89 ]\l  %115 = add nsw i32 %23, 1\l  %116 = icmp slt i32 %115, %4\l  br i1 %116, label %117, label %134\l|{<s0>T|<s1>F}}"];
	Node0x6035c60:s0 -> Node0x6036b50;
	Node0x6035c60:s1 -> Node0x6036ba0;
	Node0x6036b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%117:\l117:                                              \l  %118 = sext i32 %33 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %1, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %121 = fcmp contract ogt float %120, 1.270000e+02\l  br i1 %121, label %122, label %134\l|{<s0>T|<s1>F}}"];
	Node0x6036b50:s0 -> Node0x6036ef0;
	Node0x6036b50:s1 -> Node0x6036ba0;
	Node0x6036ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%122:\l122:                                              \l  %123 = mul nsw i32 %33, 3\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %2, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fadd contract float %112, %126\l  %128 = getelementptr inbounds float, float addrspace(1)* %125, i64 1\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %130 = fadd contract float %113, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %125, i64 2\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = fadd contract float %114, %132\l  br label %134\l}"];
	Node0x6036ef0 -> Node0x6036ba0;
	Node0x6036ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%134:\l134:                                              \l  %135 = phi float [ %127, %122 ], [ %112, %117 ], [ %112, %111 ]\l  %136 = phi float [ %130, %122 ], [ %113, %117 ], [ %113, %111 ]\l  %137 = phi float [ %133, %122 ], [ %114, %117 ], [ %114, %111 ]\l  %138 = fmul contract float %135, 2.500000e-01\l  %139 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  store float %138, float addrspace(1)* %139, align 4, !tbaa !7\l  %140 = fmul contract float %136, 2.500000e-01\l  %141 = add nsw i32 %38, 1\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %3, i64 %142\l  store float %140, float addrspace(1)* %143, align 4, !tbaa !7\l  %144 = fmul contract float %137, 2.500000e-01\l  %145 = add nsw i32 %38, 2\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %3, i64 %146\l  store float %144, float addrspace(1)* %147, align 4, !tbaa !7\l  br label %148\l}"];
	Node0x6036ba0 -> Node0x6032120;
	Node0x6032120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  ret void\l}"];
}
