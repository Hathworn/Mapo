digraph "CFG for '_Z16boxfilter_kerneliiPhS_ii' function" {
	label="CFG for '_Z16boxfilter_kerneliiPhS_ii' function";

	Node0x5343c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sdiv i32 %5, 2\l  %25 = icmp slt i32 %5, -1\l  br i1 %25, label %38, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5343c50:s0 -> Node0x5347650;
	Node0x5343c50:s1 -> Node0x53476e0;
	Node0x53476e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%26:\l26:                                               \l  %27 = sub nsw i32 0, %24\l  %28 = sdiv i32 %4, 2\l  %29 = sub nsw i32 0, %28\l  %30 = icmp slt i32 %4, -1\l  %31 = tail call i32 @llvm.abs.i32(i32 %28, i1 true)\l  %32 = tail call i32 @llvm.abs.i32(i32 %24, i1 true)\l  %33 = add i32 %28, %31\l  %34 = add i32 %33, 1\l  %35 = and i32 %34, 3\l  %36 = icmp eq i32 %35, 0\l  %37 = icmp ult i32 %33, 3\l  br label %48\l}"];
	Node0x53476e0 -> Node0x5345d30;
	Node0x5347650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %6 ], [ %89, %88 ]\l  %40 = phi float [ 0.000000e+00, %6 ], [ %90, %88 ]\l  %41 = sitofp i32 %39 to float\l  %42 = fdiv contract float %40, %41\l  %43 = fptoui float %42 to i8\l  %44 = mul nsw i32 %23, %0\l  %45 = add nsw i32 %44, %15\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %46\l  store i8 %43, i8 addrspace(1)* %47, align 1, !tbaa !7\l  ret void\l}"];
	Node0x5345d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%48:\l48:                                               \l  %49 = phi i32 [ %27, %26 ], [ %91, %88 ]\l  %50 = phi float [ 0.000000e+00, %26 ], [ %90, %88 ]\l  %51 = phi i32 [ 0, %26 ], [ %89, %88 ]\l  br i1 %30, label %88, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5345d30:s0 -> Node0x5348330;
	Node0x5345d30:s1 -> Node0x53497e0;
	Node0x53497e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%52:\l52:                                               \l  %53 = add nsw i32 %49, %23\l  %54 = icmp sge i32 %53, %1\l  %55 = icmp slt i32 %53, 0\l  %56 = or i1 %54, %55\l  %57 = mul nsw i32 %53, %0\l  br i1 %36, label %82, label %58\l|{<s0>T|<s1>F}}"];
	Node0x53497e0:s0 -> Node0x5349bf0;
	Node0x53497e0:s1 -> Node0x5349c40;
	Node0x5349c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %79, %76 ], [ %29, %52 ]\l  %60 = phi float [ %78, %76 ], [ %50, %52 ]\l  %61 = phi i32 [ %77, %76 ], [ %51, %52 ]\l  %62 = phi i32 [ %80, %76 ], [ 0, %52 ]\l  %63 = add nsw i32 %59, %15\l  %64 = icmp sge i32 %63, %0\l  %65 = icmp slt i32 %63, 0\l  %66 = or i1 %64, %65\l  %67 = select i1 %66, i1 true, i1 %56\l  br i1 %67, label %76, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5349c40:s0 -> Node0x5349db0;
	Node0x5349c40:s1 -> Node0x534a780;
	Node0x534a780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%68:\l68:                                               \l  %69 = add nsw i32 %63, %57\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %73 = uitofp i8 %72 to float\l  %74 = fadd contract float %60, %73\l  %75 = add nsw i32 %61, 1\l  br label %76\l}"];
	Node0x534a780 -> Node0x5349db0;
	Node0x5349db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = phi i32 [ %75, %68 ], [ %61, %58 ]\l  %78 = phi float [ %74, %68 ], [ %60, %58 ]\l  %79 = add i32 %59, 1\l  %80 = add i32 %62, 1\l  %81 = icmp eq i32 %80, %35\l  br i1 %81, label %82, label %58, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5349db0:s0 -> Node0x5349bf0;
	Node0x5349db0:s1 -> Node0x5349c40;
	Node0x5349bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%82:\l82:                                               \l  %83 = phi i32 [ undef, %52 ], [ %77, %76 ]\l  %84 = phi float [ undef, %52 ], [ %78, %76 ]\l  %85 = phi i32 [ %29, %52 ], [ %79, %76 ]\l  %86 = phi float [ %50, %52 ], [ %78, %76 ]\l  %87 = phi i32 [ %51, %52 ], [ %77, %76 ]\l  br i1 %37, label %88, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5349bf0:s0 -> Node0x5348330;
	Node0x5349bf0:s1 -> Node0x534be50;
	Node0x5348330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%88:\l88:                                               \l  %89 = phi i32 [ %51, %48 ], [ %83, %82 ], [ %162, %161 ]\l  %90 = phi float [ %50, %48 ], [ %84, %82 ], [ %163, %161 ]\l  %91 = add i32 %49, 1\l  %92 = icmp eq i32 %49, %32\l  br i1 %92, label %38, label %48, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5348330:s0 -> Node0x5347650;
	Node0x5348330:s1 -> Node0x5345d30;
	Node0x534be50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%93:\l93:                                               \l  %94 = phi i32 [ %164, %161 ], [ %85, %82 ]\l  %95 = phi float [ %163, %161 ], [ %86, %82 ]\l  %96 = phi i32 [ %162, %161 ], [ %87, %82 ]\l  %97 = add nsw i32 %94, %15\l  %98 = icmp sge i32 %97, %0\l  %99 = icmp slt i32 %97, 0\l  %100 = or i1 %98, %99\l  %101 = select i1 %100, i1 true, i1 %56\l  br i1 %101, label %110, label %102\l|{<s0>T|<s1>F}}"];
	Node0x534be50:s0 -> Node0x534c8d0;
	Node0x534be50:s1 -> Node0x534c960;
	Node0x534c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%102:\l102:                                              \l  %103 = add nsw i32 %97, %57\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %104\l  %106 = load i8, i8 addrspace(1)* %105, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %107 = uitofp i8 %106 to float\l  %108 = fadd contract float %95, %107\l  %109 = add nsw i32 %96, 1\l  br label %110\l}"];
	Node0x534c960 -> Node0x534c8d0;
	Node0x534c8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = phi i32 [ %109, %102 ], [ %96, %93 ]\l  %112 = phi float [ %108, %102 ], [ %95, %93 ]\l  %113 = add i32 %94, 1\l  %114 = add nsw i32 %113, %15\l  %115 = icmp sge i32 %114, %0\l  %116 = icmp slt i32 %114, 0\l  %117 = or i1 %115, %116\l  %118 = select i1 %117, i1 true, i1 %56\l  br i1 %118, label %127, label %119\l|{<s0>T|<s1>F}}"];
	Node0x534c8d0:s0 -> Node0x534d390;
	Node0x534c8d0:s1 -> Node0x534d3e0;
	Node0x534d3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%119:\l119:                                              \l  %120 = add nsw i32 %114, %57\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %121\l  %123 = load i8, i8 addrspace(1)* %122, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %124 = uitofp i8 %123 to float\l  %125 = fadd contract float %112, %124\l  %126 = add nsw i32 %111, 1\l  br label %127\l}"];
	Node0x534d3e0 -> Node0x534d390;
	Node0x534d390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%127:\l127:                                              \l  %128 = phi i32 [ %126, %119 ], [ %111, %110 ]\l  %129 = phi float [ %125, %119 ], [ %112, %110 ]\l  %130 = add i32 %94, 2\l  %131 = add nsw i32 %130, %15\l  %132 = icmp sge i32 %131, %0\l  %133 = icmp slt i32 %131, 0\l  %134 = or i1 %132, %133\l  %135 = select i1 %134, i1 true, i1 %56\l  br i1 %135, label %144, label %136\l|{<s0>T|<s1>F}}"];
	Node0x534d390:s0 -> Node0x534a6f0;
	Node0x534d390:s1 -> Node0x534e2a0;
	Node0x534e2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%136:\l136:                                              \l  %137 = add nsw i32 %131, %57\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %138\l  %140 = load i8, i8 addrspace(1)* %139, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %141 = uitofp i8 %140 to float\l  %142 = fadd contract float %129, %141\l  %143 = add nsw i32 %128, 1\l  br label %144\l}"];
	Node0x534e2a0 -> Node0x534a6f0;
	Node0x534a6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%144:\l144:                                              \l  %145 = phi i32 [ %143, %136 ], [ %128, %127 ]\l  %146 = phi float [ %142, %136 ], [ %129, %127 ]\l  %147 = add i32 %94, 3\l  %148 = add nsw i32 %147, %15\l  %149 = icmp sge i32 %148, %0\l  %150 = icmp slt i32 %148, 0\l  %151 = or i1 %149, %150\l  %152 = select i1 %151, i1 true, i1 %56\l  br i1 %152, label %161, label %153\l|{<s0>T|<s1>F}}"];
	Node0x534a6f0:s0 -> Node0x534bf50;
	Node0x534a6f0:s1 -> Node0x534ec90;
	Node0x534ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%153:\l153:                                              \l  %154 = add nsw i32 %148, %57\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %155\l  %157 = load i8, i8 addrspace(1)* %156, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %158 = uitofp i8 %157 to float\l  %159 = fadd contract float %146, %158\l  %160 = add nsw i32 %145, 1\l  br label %161\l}"];
	Node0x534ec90 -> Node0x534bf50;
	Node0x534bf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%161:\l161:                                              \l  %162 = phi i32 [ %160, %153 ], [ %145, %144 ]\l  %163 = phi float [ %159, %153 ], [ %146, %144 ]\l  %164 = add i32 %94, 4\l  %165 = icmp eq i32 %147, %31\l  br i1 %165, label %88, label %93, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x534bf50:s0 -> Node0x5348330;
	Node0x534bf50:s1 -> Node0x534be50;
}
