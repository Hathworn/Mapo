digraph "CFG for '_Z12jacobiKernelPdS_i' function" {
	label="CFG for '_Z12jacobiKernelPdS_i' function";

	Node0x5fa07b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = add i32 %12, 1\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = add i32 %21, 1\l  %23 = icmp sgt i32 %13, %2\l  %24 = icmp sgt i32 %22, %2\l  %25 = select i1 %23, i1 true, i1 %24\l  br i1 %25, label %58, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5fa07b0:s0 -> Node0x5fa4390;
	Node0x5fa07b0:s1 -> Node0x5fa4420;
	Node0x5fa4420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = add nsw i32 %2, 2\l  %28 = mul nsw i32 %22, %27\l  %29 = add i32 %28, %12\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = add i32 %29, 2\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fadd contract double %32, %36\l  %38 = mul nsw i32 %21, %27\l  %39 = add nsw i32 %38, %13\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fadd contract double %37, %42\l  %44 = add i32 %21, 2\l  %45 = mul nsw i32 %44, %27\l  %46 = add nsw i32 %45, %13\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %0, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = fadd contract double %43, %49\l  %51 = add nsw i32 %28, %13\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %0, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fadd contract double %50, %54\l  %56 = fmul contract double %55, 2.000000e-01\l  %57 = getelementptr inbounds double, double addrspace(1)* %1, i64 %52\l  store double %56, double addrspace(1)* %57, align 8, !tbaa !7\l  br label %58\l}"];
	Node0x5fa4420 -> Node0x5fa4390;
	Node0x5fa4390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
