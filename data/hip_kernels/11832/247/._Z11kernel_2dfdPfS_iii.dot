digraph "CFG for '_Z11kernel_2dfdPfS_iii' function" {
	label="CFG for '_Z11kernel_2dfdPfS_iii' function";

	Node0x5f1cdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = mul nsw i32 %3, %2\l  %16 = add i32 %14, %15\l  %17 = shl nsw i32 %2, 2\l  %18 = icmp slt i32 %3, %4\l  br i1 %18, label %19, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5f1cdb0:s0 -> Node0x5f1e890;
	Node0x5f1cdb0:s1 -> Node0x5f1e920;
	Node0x5f1e890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = add nuw nsw i32 %13, 4\l  %21 = shl i32 %2, 2\l  %22 = sub i32 %16, %21\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = insertelement \<9 x float\> undef, float %25, i64 0\l  %27 = mul nsw i32 %2, -3\l  %28 = add i32 %27, %16\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = insertelement \<9 x float\> %26, float %31, i64 1\l  %33 = shl i32 %2, 1\l  %34 = sub i32 %16, %33\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = insertelement \<9 x float\> %32, float %37, i64 2\l  %39 = sub i32 %16, %2\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = insertelement \<9 x float\> %38, float %42, i64 3\l  %44 = zext i32 %16 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = insertelement \<9 x float\> %43, float %46, i64 4\l  %48 = add i32 %16, %2\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = insertelement \<9 x float\> %47, float %51, i64 5\l  %53 = shl nsw i32 %2, 1\l  %54 = add i32 %53, %16\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = insertelement \<9 x float\> %52, float %57, i64 6\l  %59 = mul nsw i32 %2, 3\l  %60 = add i32 %59, %16\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = insertelement \<9 x float\> %58, float %63, i64 7\l  %65 = icmp ult i32 %13, 4\l  %66 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %13\l  %67 = add nuw nsw i32 %13, 20\l  %68 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %67\l  %69 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %20\l  %70 = icmp ugt i32 %14, 3\l  %71 = add nsw i32 %2, -4\l  %72 = icmp ult i32 %14, %71\l  %73 = select i1 %70, i1 %72, i1 false\l  %74 = load float, float addrspace(4)* getelementptr inbounds ([5 x float],\l... [5 x float] addrspace(4)* @coef, i64 0, i64 0), align 16\l  %75 = load float, float addrspace(4)* getelementptr inbounds ([5 x float],\l... [5 x float] addrspace(4)* @coef, i64 0, i64 1), align 4\l  %76 = add nuw nsw i32 %13, 3\l  %77 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %76\l  %78 = add nuw nsw i32 %13, 5\l  %79 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %78\l  %80 = load float, float addrspace(4)* getelementptr inbounds ([5 x float],\l... [5 x float] addrspace(4)* @coef, i64 0, i64 2), align 8\l  %81 = add nuw nsw i32 %13, 2\l  %82 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %81\l  %83 = add nuw nsw i32 %13, 6\l  %84 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %83\l  %85 = load float, float addrspace(4)* getelementptr inbounds ([5 x float],\l... [5 x float] addrspace(4)* @coef, i64 0, i64 3), align 4\l  %86 = add nuw nsw i32 %13, 1\l  %87 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %86\l  %88 = add nuw nsw i32 %13, 7\l  %89 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %88\l  %90 = load float, float addrspace(4)* getelementptr inbounds ([5 x float],\l... [5 x float] addrspace(4)* @coef, i64 0, i64 4), align 16\l  %91 = add nuw nsw i32 %13, 8\l  %92 = getelementptr inbounds [24 x float], [24 x float] addrspace(3)*\l... @_ZZ11kernel_2dfdPfS_iiiE4line, i32 0, i32 %91\l  br label %94\l}"];
	Node0x5f1e890 -> Node0x5f23370;
	Node0x5f1e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%93:\l93:                                               \l  ret void\l}"];
	Node0x5f23370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = phi i32 [ %3, %19 ], [ %178, %165 ]\l  %96 = phi i32 [ %16, %19 ], [ %177, %165 ]\l  %97 = phi \<9 x float\> [ %64, %19 ], [ %176, %165 ]\l  %98 = add i32 %96, %17\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %1, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  br i1 %65, label %102, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5f23370:s0 -> Node0x5f23a30;
	Node0x5f23370:s1 -> Node0x5f23ac0;
	Node0x5f23a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%102:\l102:                                              \l  %103 = add i32 %96, -4\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  store float %106, float addrspace(3)* %66, align 4, !tbaa !7\l  %107 = add i32 %96, 16\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7\l  store float %110, float addrspace(3)* %68, align 4, !tbaa !7\l  br label %111\l}"];
	Node0x5f23a30 -> Node0x5f23ac0;
	Node0x5f23ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = extractelement \<9 x float\> %97, i64 4\l  store float %112, float addrspace(3)* %69, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %73, label %115, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5f23ac0:s0 -> Node0x5f24590;
	Node0x5f23ac0:s1 -> Node0x5f245e0;
	Node0x5f245e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%113:\l113:                                              \l  %114 = extractelement \<9 x float\> %97, i64 1\l  br label %165\l}"];
	Node0x5f245e0 -> Node0x5f234b0;
	Node0x5f24590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%115:\l115:                                              \l  %116 = load float, float addrspace(3)* %69, align 4, !tbaa !7\l  %117 = fmul contract float %74, %116\l  %118 = fmul contract float %117, 2.000000e+00\l  %119 = load float, float addrspace(3)* %77, align 4, !tbaa !7\l  %120 = load float, float addrspace(3)* %79, align 4, !tbaa !7\l  %121 = fadd contract float %119, %120\l  %122 = fmul contract float %75, %121\l  %123 = fadd contract float %118, %122\l  %124 = load float, float addrspace(3)* %82, align 4, !tbaa !7\l  %125 = load float, float addrspace(3)* %84, align 4, !tbaa !7\l  %126 = fadd contract float %124, %125\l  %127 = fmul contract float %80, %126\l  %128 = fadd contract float %123, %127\l  %129 = load float, float addrspace(3)* %87, align 4, !tbaa !7\l  %130 = load float, float addrspace(3)* %89, align 4, !tbaa !7\l  %131 = fadd contract float %129, %130\l  %132 = fmul contract float %85, %131\l  %133 = fadd contract float %128, %132\l  %134 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %135 = load float, float addrspace(3)* %92, align 4, !tbaa !7\l  %136 = fadd contract float %134, %135\l  %137 = fmul contract float %90, %136\l  %138 = fadd contract float %133, %137\l  %139 = extractelement \<9 x float\> %97, i64 3\l  %140 = extractelement \<9 x float\> %97, i64 5\l  %141 = fadd contract float %139, %140\l  %142 = fmul contract float %141, %75\l  %143 = fadd contract float %138, %142\l  %144 = extractelement \<9 x float\> %97, i64 2\l  %145 = extractelement \<9 x float\> %97, i64 6\l  %146 = fadd contract float %144, %145\l  %147 = fmul contract float %146, %80\l  %148 = fadd contract float %143, %147\l  %149 = extractelement \<9 x float\> %97, i64 1\l  %150 = extractelement \<9 x float\> %97, i64 7\l  %151 = fadd contract float %149, %150\l  %152 = fmul contract float %151, %85\l  %153 = fadd contract float %148, %152\l  %154 = extractelement \<9 x float\> %97, i64 0\l  %155 = fadd contract float %154, %101\l  %156 = fmul contract float %155, %90\l  %157 = fadd contract float %153, %156\l  %158 = fadd contract float %112, %112\l  %159 = zext i32 %96 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %0, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !7\l  %162 = fsub contract float %158, %161\l  %163 = fmul contract float %157, 0x3FBEB851E0000000\l  %164 = fadd contract float %163, %162\l  store float %164, float addrspace(1)* %160, align 4, !tbaa !7\l  br label %165\l}"];
	Node0x5f24590 -> Node0x5f234b0;
	Node0x5f234b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi float [ %114, %113 ], [ %149, %115 ]\l  %167 = insertelement \<9 x float\> poison, float %166, i64 0\l  %168 = insertelement \<9 x float\> %167, float %101, i64 8\l  %169 = shufflevector \<9 x float\> %168, \<9 x float\> %97, \<9 x i32\> \<i32 0,\l... i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32\l... 8\>\l  %170 = shufflevector \<9 x float\> %169, \<9 x float\> %97, \<9 x i32\> \<i32 0,\l... i32 1, i32 12, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 8\>\l  %171 = shufflevector \<9 x float\> %170, \<9 x float\> %97, \<9 x i32\> \<i32 0,\l... i32 1, i32 2, i32 13, i32 undef, i32 undef, i32 undef, i32 undef, i32 8\>\l  %172 = shufflevector \<9 x float\> %171, \<9 x float\> %97, \<9 x i32\> \<i32 0,\l... i32 1, i32 2, i32 3, i32 14, i32 undef, i32 undef, i32 undef, i32 8\>\l  %173 = shufflevector \<9 x float\> %172, \<9 x float\> %97, \<9 x i32\> \<i32 0,\l... i32 1, i32 2, i32 3, i32 4, i32 15, i32 undef, i32 undef, i32 8\>\l  %174 = extractelement \<9 x float\> %97, i64 7\l  %175 = insertelement \<9 x float\> %173, float %174, i64 6\l  %176 = insertelement \<9 x float\> %175, float %101, i64 7\l  %177 = add i32 %96, %2\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %178 = add nsw i32 %95, 1\l  %179 = icmp slt i32 %178, %4\l  br i1 %179, label %94, label %93, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f234b0:s0 -> Node0x5f23370;
	Node0x5f234b0:s1 -> Node0x5f1e920;
}
