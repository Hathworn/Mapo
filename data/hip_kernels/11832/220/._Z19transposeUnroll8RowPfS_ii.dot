digraph "CFG for '_Z19transposeUnroll8RowPfS_ii' function" {
	label="CFG for '_Z19transposeUnroll8RowPfS_ii' function";

	Node0x5f7af40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %6, 3\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %2\l  %24 = add i32 %23, %14\l  %25 = mul i32 %14, %3\l  %26 = add i32 %25, %22\l  %27 = mul nuw nsw i32 %10, 7\l  %28 = add i32 %14, %27\l  %29 = icmp ult i32 %28, %2\l  %30 = icmp ult i32 %22, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5f7af40:s0 -> Node0x5f7ee50;
	Node0x5f7af40:s1 -> Node0x5f7eee0;
	Node0x5f7ee50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = zext i32 %24 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = zext i32 %26 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  store float %35, float addrspace(1)* %37, align 4, !tbaa !7\l  %38 = add i32 %24, %10\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = mul i32 %10, %3\l  %43 = add i32 %26, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %41, float addrspace(1)* %45, align 4, !tbaa !7\l  %46 = shl nuw nsw i32 %10, 1\l  %47 = add i32 %24, %46\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = shl i32 %42, 1\l  %52 = add i32 %26, %51\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %50, float addrspace(1)* %54, align 4, !tbaa !7\l  %55 = mul nuw nsw i32 %10, 3\l  %56 = add i32 %24, %55\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = mul i32 %42, 3\l  %61 = add i32 %26, %60\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  store float %59, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = shl nuw nsw i32 %10, 2\l  %65 = add i32 %24, %64\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = shl i32 %42, 2\l  %70 = add i32 %26, %69\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  store float %68, float addrspace(1)* %72, align 4, !tbaa !7\l  %73 = mul nuw nsw i32 %10, 5\l  %74 = add i32 %24, %73\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7\l  %78 = mul i32 %42, 5\l  %79 = add i32 %26, %78\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %77, float addrspace(1)* %81, align 4, !tbaa !7\l  %82 = mul nuw nsw i32 %10, 6\l  %83 = add i32 %24, %82\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = mul i32 %42, 6\l  %88 = add i32 %26, %87\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  store float %86, float addrspace(1)* %90, align 4, !tbaa !7\l  %91 = add i32 %24, %27\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = mul i32 %42, 7\l  %96 = add i32 %26, %95\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  store float %94, float addrspace(1)* %98, align 4, !tbaa !7\l  br label %99\l}"];
	Node0x5f7ee50 -> Node0x5f7eee0;
	Node0x5f7eee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  ret void\l}"];
}
