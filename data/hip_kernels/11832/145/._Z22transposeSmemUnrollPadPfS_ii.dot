digraph "CFG for '_Z22transposeSmemUnrollPadPfS_ii' function" {
	label="CFG for '_Z22transposeSmemUnrollPadPfS_ii' function";

	Node0x63526d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 1\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %2\l  %24 = add i32 %23, %14\l  %25 = mul nuw nsw i32 %21, %11\l  %26 = add nuw nsw i32 %25, %13\l  %27 = freeze i32 %26\l  %28 = freeze i32 %19\l  %29 = udiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = add i32 %20, %31\l  %33 = add i32 %12, %29\l  %34 = mul i32 %33, %3\l  %35 = add i32 %32, %34\l  %36 = add i32 %14, %11\l  %37 = icmp ult i32 %36, %2\l  %38 = icmp ult i32 %22, %3\l  %39 = select i1 %37, i1 %38, i1 false\l  br i1 %39, label %40, label %68\l|{<s0>T|<s1>F}}"];
	Node0x63526d0:s0 -> Node0x6354990;
	Node0x63526d0:s1 -> Node0x6356bc0;
	Node0x6354990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = shl nuw nsw i32 %11, 1\l  %42 = add nuw nsw i32 %41, 2\l  %43 = mul nuw nsw i32 %42, %21\l  %44 = add nuw nsw i32 %43, %13\l  %45 = zext i32 %24 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds [544 x float], [544 x float] addrspace(3)*\l... @_ZZ22transposeSmemUnrollPadPfS_iiE4tile, i32 0, i32 %44\l  store float %47, float addrspace(3)* %48, align 4, !tbaa !7\l  %49 = add i32 %24, 16\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = add nuw nsw i32 %44, 16\l  %54 = getelementptr inbounds [544 x float], [544 x float] addrspace(3)*\l... @_ZZ22transposeSmemUnrollPadPfS_iiE4tile, i32 0, i32 %53\l  store float %52, float addrspace(3)* %54, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = mul nuw nsw i32 %31, %42\l  %56 = add nuw nsw i32 %55, %29\l  %57 = getelementptr inbounds [544 x float], [544 x float] addrspace(3)*\l... @_ZZ22transposeSmemUnrollPadPfS_iiE4tile, i32 0, i32 %56\l  %58 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %59 = zext i32 %35 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  store float %58, float addrspace(1)* %60, align 4, !tbaa !7\l  %61 = add nuw nsw i32 %56, 16\l  %62 = getelementptr inbounds [544 x float], [544 x float] addrspace(3)*\l... @_ZZ22transposeSmemUnrollPadPfS_iiE4tile, i32 0, i32 %61\l  %63 = load float, float addrspace(3)* %62, align 4, !tbaa !7\l  %64 = shl nsw i32 %3, 4\l  %65 = add i32 %35, %64\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  store float %63, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x6354990 -> Node0x6356bc0;
	Node0x6356bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
