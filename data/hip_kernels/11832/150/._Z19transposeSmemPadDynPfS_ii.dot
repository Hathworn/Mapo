digraph "CFG for '_Z19transposeSmemPadDynPfS_ii' function" {
	label="CFG for '_Z19transposeSmemPadDynPfS_ii' function";

	Node0x565de80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %6, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = mul nuw nsw i32 %19, %10\l  %21 = add nuw nsw i32 %20, %12\l  %22 = add nuw nsw i32 %10, 2\l  %23 = freeze i32 %21\l  %24 = freeze i32 %17\l  %25 = udiv i32 %23, %24\l  %26 = mul i32 %25, %24\l  %27 = sub i32 %23, %26\l  %28 = add i32 %18, %27\l  %29 = add i32 %11, %25\l  %30 = icmp ult i32 %28, %2\l  %31 = icmp ult i32 %29, %3\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %52\l|{<s0>T|<s1>F}}"];
	Node0x565de80:s0 -> Node0x5660c90;
	Node0x565de80:s1 -> Node0x5660d20;
	Node0x5660c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = mul i32 %29, %3\l  %35 = add i32 %34, %28\l  %36 = mul nuw nsw i32 %27, %22\l  %37 = add nuw nsw i32 %36, %25\l  %38 = mul nuw nsw i32 %22, %19\l  %39 = add nuw nsw i32 %38, %12\l  %40 = add i32 %18, %19\l  %41 = mul i32 %40, %2\l  %42 = add i32 %11, %12\l  %43 = add i32 %42, %41\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %39\l  store float %46, float addrspace(3)* %47, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @tile,\l... i32 0, i32 %37\l  %49 = load float, float addrspace(3)* %48, align 4, !tbaa !7\l  %50 = zext i32 %35 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %49, float addrspace(1)* %51, align 4, !tbaa !7\l  br label %52\l}"];
	Node0x5660c90 -> Node0x5660d20;
	Node0x5660d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
