digraph "CFG for '_Z27transposeDiagonalColUnroll4PfS_ii' function" {
	label="CFG for '_Z27transposeDiagonalColUnroll4PfS_ii' function";

	Node0x5c0bc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = add i32 %5, %6\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = urem i32 %7, %20\l  %22 = shl nuw nsw i32 %15, 2\l  %23 = mul i32 %22, %21\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %5, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = add i32 %30, %31\l  %33 = icmp ult i32 %25, %2\l  %34 = icmp ult i32 %32, %3\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5c0bc20:s0 -> Node0x5c0dda0;
	Node0x5c0bc20:s1 -> Node0x5c10030;
	Node0x5c0dda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = mul i32 %25, %3\l  %38 = add i32 %32, %37\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %42 = mul i32 %32, %2\l  %43 = add i32 %42, %25\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %41, float addrspace(1)* %45, align 4, !tbaa !16\l  %46 = add i32 %25, %15\l  %47 = mul i32 %46, %3\l  %48 = add i32 %47, %32\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = add i32 %43, %15\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !16\l  %55 = shl nuw nsw i32 %15, 1\l  %56 = add i32 %25, %55\l  %57 = mul i32 %56, %3\l  %58 = add i32 %57, %32\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !16\l  %62 = add i32 %43, %55\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  store float %61, float addrspace(1)* %64, align 4, !tbaa !16\l  %65 = mul nuw nsw i32 %15, 3\l  %66 = add i32 %25, %65\l  %67 = mul i32 %66, %3\l  %68 = add i32 %67, %32\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = add i32 %43, %65\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  store float %71, float addrspace(1)* %74, align 4, !tbaa !16\l  br label %75\l}"];
	Node0x5c0dda0 -> Node0x5c10030;
	Node0x5c10030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
