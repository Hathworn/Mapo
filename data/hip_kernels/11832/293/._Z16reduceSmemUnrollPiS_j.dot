digraph "CFG for '_Z16reduceSmemUnrollPiS_j' function" {
	label="CFG for '_Z16reduceSmemUnrollPiS_j' function";

	Node0x51cd870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 2\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = shl nuw nsw i32 %10, 2\l  %15 = add i32 %13, %14\l  %16 = icmp ugt i32 %15, %2\l  br i1 %16, label %38, label %17\l|{<s0>T|<s1>F}}"];
	Node0x51cd870:s0 -> Node0x51ce600;
	Node0x51cd870:s1 -> Node0x51cf1c0;
	Node0x51cf1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%17:\l17:                                               \l  %18 = zext i32 %13 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %21 = add i32 %13, %10\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %25 = shl nuw nsw i32 %10, 1\l  %26 = add i32 %13, %25\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %30 = mul nuw nsw i32 %10, 3\l  %31 = add i32 %13, %30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = add nsw i32 %24, %20\l  %36 = add nsw i32 %35, %29\l  %37 = add nsw i32 %36, %34\l  br label %38\l}"];
	Node0x51cf1c0 -> Node0x51ce600;
	Node0x51ce600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %37, %17 ], [ 0, %3 ]\l  %40 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %4\l  store i32 %39, i32 addrspace(3)* %40, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %41 = icmp ugt i16 %9, 1023\l  %42 = icmp ult i32 %4, 512\l  %43 = select i1 %41, i1 %42, i1 false\l  br i1 %43, label %44, label %50\l|{<s0>T|<s1>F}}"];
	Node0x51ce600:s0 -> Node0x51d1da0;
	Node0x51ce600:s1 -> Node0x51d1df0;
	Node0x51d1da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%44:\l44:                                               \l  %45 = add nuw nsw i32 %4, 512\l  %46 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %45\l  %47 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !7\l  %48 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !7\l  %49 = add nsw i32 %48, %47\l  store i32 %49, i32 addrspace(3)* %40, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x51d1da0 -> Node0x51d1df0;
	Node0x51d1df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = icmp ugt i16 %9, 511\l  %52 = icmp ult i32 %4, 256\l  %53 = select i1 %51, i1 %52, i1 false\l  br i1 %53, label %54, label %60\l|{<s0>T|<s1>F}}"];
	Node0x51d1df0:s0 -> Node0x51d26b0;
	Node0x51d1df0:s1 -> Node0x51d2700;
	Node0x51d26b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%54:\l54:                                               \l  %55 = add nuw nsw i32 %4, 256\l  %56 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %55\l  %57 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !7\l  %58 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !7\l  %59 = add nsw i32 %58, %57\l  store i32 %59, i32 addrspace(3)* %40, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x51d26b0 -> Node0x51d2700;
	Node0x51d2700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = icmp ugt i16 %9, 255\l  %62 = icmp ult i32 %4, 128\l  %63 = select i1 %61, i1 %62, i1 false\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x51d2700:s0 -> Node0x51d2f60;
	Node0x51d2700:s1 -> Node0x51d2fb0;
	Node0x51d2f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %4, 128\l  %66 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %65\l  %67 = load i32, i32 addrspace(3)* %66, align 4, !tbaa !7\l  %68 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !7\l  %69 = add nsw i32 %68, %67\l  store i32 %69, i32 addrspace(3)* %40, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x51d2f60 -> Node0x51d2fb0;
	Node0x51d2fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp ugt i16 %9, 127\l  %72 = icmp ult i32 %4, 64\l  %73 = select i1 %71, i1 %72, i1 false\l  br i1 %73, label %74, label %80\l|{<s0>T|<s1>F}}"];
	Node0x51d2fb0:s0 -> Node0x51d3a10;
	Node0x51d2fb0:s1 -> Node0x51d3a60;
	Node0x51d3a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %4, 64\l  %76 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %75\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !7\l  %78 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %77\l  store i32 %79, i32 addrspace(3)* %40, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x51d3a10 -> Node0x51d3a60;
	Node0x51d3a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %81 = icmp ult i32 %4, 32\l  br i1 %81, label %82, label %120\l|{<s0>T|<s1>F}}"];
	Node0x51d3a60:s0 -> Node0x51d4150;
	Node0x51d3a60:s1 -> Node0x51d41a0;
	Node0x51d4150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %4, 32\l  %84 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %83\l  %85 = addrspacecast i32 addrspace(3)* %84 to i32*\l  %86 = load volatile i32, i32* %85, align 4, !tbaa !7\l  %87 = addrspacecast i32 addrspace(3)* %40 to i32*\l  %88 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %89 = add nsw i32 %88, %86\l  store volatile i32 %89, i32* %87, align 4, !tbaa !7\l  %90 = add nuw nsw i32 %4, 16\l  %91 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %90\l  %92 = addrspacecast i32 addrspace(3)* %91 to i32*\l  %93 = load volatile i32, i32* %92, align 4, !tbaa !7\l  %94 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %95 = add nsw i32 %94, %93\l  store volatile i32 %95, i32* %87, align 4, !tbaa !7\l  %96 = add nuw nsw i32 %4, 8\l  %97 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %96\l  %98 = addrspacecast i32 addrspace(3)* %97 to i32*\l  %99 = load volatile i32, i32* %98, align 4, !tbaa !7\l  %100 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %101 = add nsw i32 %100, %99\l  store volatile i32 %101, i32* %87, align 4, !tbaa !7\l  %102 = add nuw nsw i32 %4, 4\l  %103 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %102\l  %104 = addrspacecast i32 addrspace(3)* %103 to i32*\l  %105 = load volatile i32, i32* %104, align 4, !tbaa !7\l  %106 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %107 = add nsw i32 %106, %105\l  store volatile i32 %107, i32* %87, align 4, !tbaa !7\l  %108 = add nuw nsw i32 %4, 2\l  %109 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %108\l  %110 = addrspacecast i32 addrspace(3)* %109 to i32*\l  %111 = load volatile i32, i32* %110, align 4, !tbaa !7\l  %112 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %113 = add nsw i32 %112, %111\l  store volatile i32 %113, i32* %87, align 4, !tbaa !7\l  %114 = add nuw nsw i32 %4, 1\l  %115 = getelementptr inbounds [128 x i32], [128 x i32] addrspace(3)*\l... @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 %114\l  %116 = addrspacecast i32 addrspace(3)* %115 to i32*\l  %117 = load volatile i32, i32* %116, align 4, !tbaa !7\l  %118 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %119 = add nsw i32 %118, %117\l  store volatile i32 %119, i32* %87, align 4, !tbaa !7\l  br label %120\l}"];
	Node0x51d4150 -> Node0x51d41a0;
	Node0x51d41a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%120:\l120:                                              \l  %121 = icmp eq i32 %4, 0\l  br i1 %121, label %122, label %126\l|{<s0>T|<s1>F}}"];
	Node0x51d41a0:s0 -> Node0x51d4330;
	Node0x51d41a0:s1 -> Node0x51d5ba0;
	Node0x51d4330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%122:\l122:                                              \l  %123 = load i32, i32 addrspace(3)* getelementptr inbounds ([128 x i32], [128\l... x i32] addrspace(3)* @_ZZ16reduceSmemUnrollPiS_jE4smem, i32 0, i32 0), align\l... 16, !tbaa !7\l  %124 = zext i32 %5 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %124\l  store i32 %123, i32 addrspace(1)* %125, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x51d4330 -> Node0x51d5ba0;
	Node0x51d5ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  ret void\l}"];
}
