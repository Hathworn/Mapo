digraph "CFG for '_Z13reduceSmemDynPiS_j' function" {
	label="CFG for '_Z13reduceSmemDynPiS_j' function";

	Node0x5bd9e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = zext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = zext i32 %4 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %17 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %4\l  store i32 %16, i32 addrspace(3)* %17, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = icmp ugt i16 %9, 1023\l  %19 = icmp ult i32 %4, 512\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5bd9e50:s0 -> Node0x5bdd3b0;
	Node0x5bd9e50:s1 -> Node0x5bdd440;
	Node0x5bdd3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%21:\l21:                                               \l  %22 = add nuw nsw i32 %4, 512\l  %23 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %22\l  %24 = load i32, i32 addrspace(3)* %23, align 4, !tbaa !7\l  %25 = load i32, i32 addrspace(3)* %17, align 4, !tbaa !7\l  %26 = add nsw i32 %25, %24\l  store i32 %26, i32 addrspace(3)* %17, align 4, !tbaa !7\l  br label %27\l}"];
	Node0x5bdd3b0 -> Node0x5bdd440;
	Node0x5bdd440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp ugt i16 %9, 511\l  %29 = icmp ult i32 %4, 256\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5bdd440:s0 -> Node0x5bddcb0;
	Node0x5bdd440:s1 -> Node0x5bddd00;
	Node0x5bddcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%31:\l31:                                               \l  %32 = add nuw nsw i32 %4, 256\l  %33 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %32\l  %34 = load i32, i32 addrspace(3)* %33, align 4, !tbaa !7\l  %35 = load i32, i32 addrspace(3)* %17, align 4, !tbaa !7\l  %36 = add nsw i32 %35, %34\l  store i32 %36, i32 addrspace(3)* %17, align 4, !tbaa !7\l  br label %37\l}"];
	Node0x5bddcb0 -> Node0x5bddd00;
	Node0x5bddd00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp ugt i16 %9, 255\l  %39 = icmp ult i32 %4, 128\l  %40 = select i1 %38, i1 %39, i1 false\l  br i1 %40, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5bddd00:s0 -> Node0x5bde6c0;
	Node0x5bddd00:s1 -> Node0x5bde710;
	Node0x5bde6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %4, 128\l  %43 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %42\l  %44 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !7\l  %45 = load i32, i32 addrspace(3)* %17, align 4, !tbaa !7\l  %46 = add nsw i32 %45, %44\l  store i32 %46, i32 addrspace(3)* %17, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x5bde6c0 -> Node0x5bde710;
	Node0x5bde710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp ugt i16 %9, 127\l  %49 = icmp ult i32 %4, 64\l  %50 = select i1 %48, i1 %49, i1 false\l  br i1 %50, label %51, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5bde710:s0 -> Node0x5bdef70;
	Node0x5bde710:s1 -> Node0x5bdefc0;
	Node0x5bdef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%51:\l51:                                               \l  %52 = add nuw nsw i32 %4, 64\l  %53 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %52\l  %54 = load i32, i32 addrspace(3)* %53, align 4, !tbaa !7\l  %55 = load i32, i32 addrspace(3)* %17, align 4, !tbaa !7\l  %56 = add nsw i32 %55, %54\l  store i32 %56, i32 addrspace(3)* %17, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x5bdef70 -> Node0x5bdefc0;
	Node0x5bdefc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = icmp ult i32 %4, 32\l  br i1 %58, label %59, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5bdefc0:s0 -> Node0x5bdf6b0;
	Node0x5bdefc0:s1 -> Node0x5bdf700;
	Node0x5bdf6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%59:\l59:                                               \l  %60 = add nuw nsw i32 %4, 32\l  %61 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %60\l  %62 = addrspacecast i32 addrspace(3)* %61 to i32*\l  %63 = load volatile i32, i32* %62, align 4, !tbaa !7\l  %64 = addrspacecast i32 addrspace(3)* %17 to i32*\l  %65 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %66 = add nsw i32 %65, %63\l  store volatile i32 %66, i32* %64, align 4, !tbaa !7\l  %67 = add nuw nsw i32 %4, 16\l  %68 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %67\l  %69 = addrspacecast i32 addrspace(3)* %68 to i32*\l  %70 = load volatile i32, i32* %69, align 4, !tbaa !7\l  %71 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %72 = add nsw i32 %71, %70\l  store volatile i32 %72, i32* %64, align 4, !tbaa !7\l  %73 = add nuw nsw i32 %4, 8\l  %74 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %73\l  %75 = addrspacecast i32 addrspace(3)* %74 to i32*\l  %76 = load volatile i32, i32* %75, align 4, !tbaa !7\l  %77 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %78 = add nsw i32 %77, %76\l  store volatile i32 %78, i32* %64, align 4, !tbaa !7\l  %79 = add nuw nsw i32 %4, 4\l  %80 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %79\l  %81 = addrspacecast i32 addrspace(3)* %80 to i32*\l  %82 = load volatile i32, i32* %81, align 4, !tbaa !7\l  %83 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %84 = add nsw i32 %83, %82\l  store volatile i32 %84, i32* %64, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %4, 2\l  %86 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %85\l  %87 = addrspacecast i32 addrspace(3)* %86 to i32*\l  %88 = load volatile i32, i32* %87, align 4, !tbaa !7\l  %89 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %90 = add nsw i32 %89, %88\l  store volatile i32 %90, i32* %64, align 4, !tbaa !7\l  %91 = add nuw nsw i32 %4, 1\l  %92 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @smem, i32\l... 0, i32 %91\l  %93 = addrspacecast i32 addrspace(3)* %92 to i32*\l  %94 = load volatile i32, i32* %93, align 4, !tbaa !7\l  %95 = load volatile i32, i32* %64, align 4, !tbaa !7\l  %96 = add nsw i32 %95, %94\l  store volatile i32 %96, i32* %64, align 4, !tbaa !7\l  br label %97\l}"];
	Node0x5bdf6b0 -> Node0x5bdf700;
	Node0x5bdf700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = icmp eq i32 %4, 0\l  br i1 %98, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5bdf700:s0 -> Node0x5be1320;
	Node0x5bdf700:s1 -> Node0x5be1370;
	Node0x5be1320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%99:\l99:                                               \l  %100 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @smem, i32 0, i32 0), align 4, !tbaa !7\l  %101 = zext i32 %5 to i64\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %101\l  store i32 %100, i32 addrspace(1)* %102, align 4, !tbaa !7\l  br label %103\l}"];
	Node0x5be1320 -> Node0x5be1370;
	Node0x5be1370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  ret void\l}"];
}
