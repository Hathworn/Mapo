digraph "CFG for '_Z9drawColorPhPKfS1_S1_' function" {
	label="CFG for '_Z9drawColorPhPKfS1_S1_' function";

	Node0x5f42c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = udiv i32 %14, %11\l  %24 = mul i32 %23, %11\l  %25 = icmp ugt i32 %14, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = add i32 %28, %6\l  %30 = mul i32 %29, %11\l  %31 = add i32 %30, %5\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %35 = fcmp contract olt float %34, 0.000000e+00\l  %36 = select i1 %35, float 0.000000e+00, float %34\l  %37 = fcmp contract ogt float %36, 1.000000e+00\l  %38 = select i1 %37, float 1.000000e+00, float %36\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = fcmp contract olt float %40, 0.000000e+00\l  %42 = select i1 %41, float 0.000000e+00, float %40\l  %43 = fcmp contract ogt float %42, 1.000000e+00\l  %44 = select i1 %43, float 1.000000e+00, float %42\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %47 = fcmp contract olt float %46, 0.000000e+00\l  %48 = select i1 %47, float 0.000000e+00, float %46\l  %49 = fcmp contract ogt float %48, 1.000000e+00\l  %50 = select i1 %49, float 1.000000e+00, float %48\l  %51 = fmul contract float %38, 2.550000e+02\l  %52 = fptoui float %51 to i8\l  %53 = shl nsw i32 %31, 2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %54\l  store i8 %52, i8 addrspace(1)* %55, align 1, !tbaa !20\l  %56 = fmul contract float %44, 2.550000e+02\l  %57 = fptoui float %56 to i8\l  %58 = add nuw nsw i32 %53, 1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %59\l  store i8 %57, i8 addrspace(1)* %60, align 1, !tbaa !20\l  %61 = fmul contract float %50, 2.550000e+02\l  %62 = fptoui float %61 to i8\l  %63 = add nuw nsw i32 %53, 2\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %64\l  store i8 %62, i8 addrspace(1)* %65, align 1, !tbaa !20\l  %66 = add nuw nsw i32 %53, 3\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %67\l  store i8 -1, i8 addrspace(1)* %68, align 1, !tbaa !20\l  ret void\l}"];
}
