digraph "CFG for '_Z12dnorm_kernelPfiff' function" {
	label="CFG for '_Z12dnorm_kernelPfiff' function";

	Node0x48234d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = mul i32 %21, %29\l  %34 = add i32 %33, %30\l  %35 = mul i32 %34, %25\l  %36 = add i32 %35, %31\l  %37 = mul i32 %36, %14\l  %38 = add i32 %37, %32\l  %39 = icmp slt i32 %38, %1\l  br i1 %39, label %40, label %90\l|{<s0>T|<s1>F}}"];
	Node0x48234d0:s0 -> Node0x48255b0;
	Node0x48234d0:s1 -> Node0x4827c30;
	Node0x48255b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %44 = fsub contract float %43, %2\l  %45 = fdiv contract float %44, %3\l  %46 = fpext float %45 to double\l  %47 = fmul contract double %46, -5.000000e-01\l  %48 = fmul contract double %47, %46\l  %49 = fmul double %48, 0x3FF71547652B82FE\l  %50 = tail call double @llvm.rint.f64(double %49)\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %51, double 0x3FE62E42FEFA39EF,\l... double %48)\l  %53 = tail call double @llvm.fma.f64(double %51, double 0x3C7ABC9E3B39803F,\l... double %52)\l  %54 = tail call double @llvm.fma.f64(double %53, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %55 = tail call double @llvm.fma.f64(double %53, double %54, double\l... 0x3EC71DEE623FDE64)\l  %56 = tail call double @llvm.fma.f64(double %53, double %55, double\l... 0x3EFA01997C89E6B0)\l  %57 = tail call double @llvm.fma.f64(double %53, double %56, double\l... 0x3F2A01A014761F6E)\l  %58 = tail call double @llvm.fma.f64(double %53, double %57, double\l... 0x3F56C16C1852B7B0)\l  %59 = tail call double @llvm.fma.f64(double %53, double %58, double\l... 0x3F81111111122322)\l  %60 = tail call double @llvm.fma.f64(double %53, double %59, double\l... 0x3FA55555555502A1)\l  %61 = tail call double @llvm.fma.f64(double %53, double %60, double\l... 0x3FC5555555555511)\l  %62 = tail call double @llvm.fma.f64(double %53, double %61, double\l... 0x3FE000000000000B)\l  %63 = tail call double @llvm.fma.f64(double %53, double %62, double\l... 1.000000e+00)\l  %64 = tail call double @llvm.fma.f64(double %53, double %63, double\l... 1.000000e+00)\l  %65 = fptosi double %50 to i32\l  %66 = tail call double @llvm.amdgcn.ldexp.f64(double %64, i32 %65)\l  %67 = fcmp ogt double %48, 1.024000e+03\l  %68 = select i1 %67, double 0x7FF0000000000000, double %66\l  %69 = fcmp olt double %48, -1.075000e+03\l  %70 = select i1 %69, double 0.000000e+00, double %68\l  %71 = fptrunc double %70 to float\l  %72 = fpext float %71 to double\l  %73 = fpext float %3 to double\l  %74 = tail call double @llvm.amdgcn.rsq.f64(double 0x401921FB54442D18)\l  %75 = fmul double %74, 0x401921FB54442D18\l  %76 = fmul double %74, 5.000000e-01\l  %77 = fneg double %76\l  %78 = tail call double @llvm.fma.f64(double %77, double %75, double\l... 5.000000e-01)\l  %79 = tail call double @llvm.fma.f64(double %76, double %78, double %76)\l  %80 = tail call double @llvm.fma.f64(double %75, double %78, double %75)\l  %81 = fneg double %80\l  %82 = tail call double @llvm.fma.f64(double %81, double %80, double\l... 0x401921FB54442D18)\l  %83 = tail call double @llvm.fma.f64(double %82, double %79, double %80)\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %84, double %83, double\l... 0x401921FB54442D18)\l  %86 = tail call double @llvm.fma.f64(double %85, double %79, double %83)\l  %87 = fmul contract double %86, %73\l  %88 = fdiv contract double %72, %87\l  %89 = fptrunc double %88 to float\l  store float %89, float addrspace(1)* %42, align 4, !tbaa !16\l  br label %90\l}"];
	Node0x48255b0 -> Node0x4827c30;
	Node0x4827c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  ret void\l}"];
}
