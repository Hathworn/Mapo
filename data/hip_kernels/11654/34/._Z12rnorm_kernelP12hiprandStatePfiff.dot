digraph "CFG for '_Z12rnorm_kernelP12hiprandStatePfiff' function" {
	label="CFG for '_Z12rnorm_kernelP12hiprandStatePfiff' function";

	Node0x5b34bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !13, !invariant.load\l... !14\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = mul i32 %22, %30\l  %35 = add i32 %34, %31\l  %36 = mul i32 %35, %26\l  %37 = add i32 %36, %32\l  %38 = mul i32 %37, %15\l  %39 = add i32 %38, %33\l  %40 = icmp slt i32 %39, %2\l  br i1 %40, label %41, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5b34bd0:s0 -> Node0x5b39220;
	Node0x5b34bd0:s1 -> Node0x5b392b0;
	Node0x5b39220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%41:\l41:                                               \l  %42 = sext i32 %39 to i64\l  %43 = getelementptr %struct.hiprandState, %struct.hiprandState addrspace(1)*\l... %0, i64 %42, i32 0, i32 0, i32 1\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !16\l  %45 = icmp eq i32 %44, 0\l  br i1 %45, label %49, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5b39220:s0 -> Node0x5b397d0;
	Node0x5b39220:s1 -> Node0x5b39860;
	Node0x5b39860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%46:\l46:                                               \l  store i32 0, i32 addrspace(1)* %43, align 4, !tbaa !16\l  %47 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 3\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !24,\l... !amdgpu.noclobber !14\l  br label %126\l}"];
	Node0x5b39860 -> Node0x5b3a320;
	Node0x5b397d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 5, i64 0\l  %51 = load i32, i32 addrspace(1)* %50, align 8, !tbaa !25, !amdgpu.noclobber\l... !14\l  %52 = lshr i32 %51, 2\l  %53 = xor i32 %52, %51\l  %54 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 5, i64 1\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !25, !amdgpu.noclobber\l... !14\l  %56 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 5, i64 2\l  %57 = load i32, i32 addrspace(1)* %56, align 8, !tbaa !25, !amdgpu.noclobber\l... !14\l  %58 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 5, i64 3\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !25, !amdgpu.noclobber\l... !14\l  %60 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 5, i64 4\l  %61 = load i32, i32 addrspace(1)* %60, align 8, !tbaa !25, !amdgpu.noclobber\l... !14\l  %62 = shl i32 %61, 4\l  %63 = shl i32 %53, 1\l  %64 = xor i32 %63, %62\l  %65 = xor i32 %64, %53\l  %66 = xor i32 %65, %61\l  %67 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 0\l  %68 = load i32, i32 addrspace(1)* %67, align 8, !tbaa !26, !amdgpu.noclobber\l... !14\l  %69 = add i32 %68, 362437\l  %70 = add i32 %69, %66\l  %71 = lshr i32 %55, 2\l  %72 = xor i32 %71, %55\l  store i32 %57, i32 addrspace(1)* %50, align 8, !tbaa !25\l  store i32 %59, i32 addrspace(1)* %54, align 4, !tbaa !25\l  store i32 %61, i32 addrspace(1)* %56, align 8, !tbaa !25\l  store i32 %66, i32 addrspace(1)* %58, align 4, !tbaa !25\l  %73 = shl i32 %66, 4\l  %74 = shl i32 %72, 1\l  %75 = xor i32 %74, %73\l  %76 = xor i32 %75, %72\l  %77 = xor i32 %76, %66\l  store i32 %77, i32 addrspace(1)* %60, align 8, !tbaa !25\l  %78 = add i32 %68, 724874\l  store i32 %78, i32 addrspace(1)* %67, align 8, !tbaa !26\l  %79 = add i32 %77, %78\l  %80 = uitofp i32 %70 to float\l  %81 = fmul contract float %80, 0x3DF0000000000000\l  %82 = fadd contract float %81, 0x3DF0000000000000\l  %83 = uitofp i32 %79 to float\l  %84 = fmul contract float %83, 0x3E1921FB60000000\l  %85 = fadd contract float %84, 0x3E1921FB60000000\l  %86 = tail call i1 @llvm.amdgcn.class.f32(float %82, i32 144)\l  %87 = select i1 %86, float 0x41F0000000000000, float 1.000000e+00\l  %88 = fmul float %82, %87\l  %89 = tail call float @llvm.log2.f32(float %88)\l  %90 = fmul float %89, 0x3FE62E42E0000000\l  %91 = tail call i1 @llvm.amdgcn.class.f32(float %89, i32 519)\l  %92 = fneg float %90\l  %93 = tail call float @llvm.fma.f32(float %89, float 0x3FE62E42E0000000,\l... float %92)\l  %94 = tail call float @llvm.fma.f32(float %89, float 0x3E6EFA39E0000000,\l... float %93)\l  %95 = fadd float %90, %94\l  %96 = select i1 %91, float %89, float %95\l  %97 = select i1 %86, float 0x40362E4300000000, float 0.000000e+00\l  %98 = fsub float %96, %97\l  %99 = fmul contract float %98, -2.000000e+00\l  %100 = fcmp olt float %99, 0x39F0000000000000\l  %101 = select i1 %100, float 0x41F0000000000000, float 1.000000e+00\l  %102 = fmul float %99, %101\l  %103 = tail call float @llvm.sqrt.f32(float %102)\l  %104 = bitcast float %103 to i32\l  %105 = add nsw i32 %104, -1\l  %106 = bitcast i32 %105 to float\l  %107 = add nsw i32 %104, 1\l  %108 = bitcast i32 %107 to float\l  %109 = tail call i1 @llvm.amdgcn.class.f32(float %102, i32 608)\l  %110 = select i1 %100, float 0x3EF0000000000000, float 1.000000e+00\l  %111 = fneg float %108\l  %112 = tail call float @llvm.fma.f32(float %111, float %103, float %102)\l  %113 = fcmp ogt float %112, 0.000000e+00\l  %114 = fneg float %106\l  %115 = tail call float @llvm.fma.f32(float %114, float %103, float %102)\l  %116 = fcmp ole float %115, 0.000000e+00\l  %117 = select i1 %116, float %106, float %103\l  %118 = select i1 %113, float %108, float %117\l  %119 = fmul float %110, %118\l  %120 = select i1 %109, float %102, float %119\l  %121 = tail call float @llvm.sin.f32(float %85)\l  %122 = tail call float @llvm.cos.f32(float %85)\l  %123 = fmul contract float %121, %120\l  %124 = fmul contract float %122, %120\l  store i32 1, i32 addrspace(1)* %43, align 4, !tbaa !16\l  %125 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %42, i32 0, i32 0, i32 3\l  store float %124, float addrspace(1)* %125, align 4, !tbaa !24\l  br label %126\l}"];
	Node0x5b397d0 -> Node0x5b3a320;
	Node0x5b3a320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%126:\l126:                                              \l  %127 = phi float [ %48, %46 ], [ %123, %49 ]\l  %128 = fmul contract float %127, %4\l  %129 = fadd contract float %128, %3\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  store float %129, float addrspace(1)* %130, align 4, !tbaa !27\l  br label %131\l}"];
	Node0x5b3a320 -> Node0x5b392b0;
	Node0x5b392b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  ret void\l}"];
}
