digraph "CFG for '_Z16euclidean_kernelPKfmmS0_mmmPfm' function" {
	label="CFG for '_Z16euclidean_kernelPKfmmS0_mmmPfm' function";

	Node0x5adbb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = zext i32 %10 to i64\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = zext i32 %12 to i64\l  %14 = icmp ult i64 %11, %2\l  %15 = icmp ult i64 %13, %5\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5adbb20:s0 -> Node0x5adb7c0;
	Node0x5adbb20:s1 -> Node0x5adcfd0;
	Node0x5adb7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%17:\l17:                                               \l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %19 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ16euclidean_kernelPKfmmS0_mmmPfmE4temp, i32 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %19, align 4, !tbaa !5\l  %20 = zext i32 %18 to i64\l  %21 = icmp ult i64 %20, %6\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5adb7c0:s0 -> Node0x5adecd0;
	Node0x5adb7c0:s1 -> Node0x5aded60;
	Node0x5aded60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%22:\l22:                                               \l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %33\l}"];
	Node0x5aded60 -> Node0x5adf050;
	Node0x5adecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = mul i64 %11, %1\l  %26 = mul i64 %13, %4\l  %27 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %28 = getelementptr i8, i8 addrspace(4)* %27, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !9, !invariant.load\l... !10\l  %31 = zext i16 %30 to i64\l  br label %42\l}"];
	Node0x5adecd0 -> Node0x5adf850;
	Node0x5adf950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%32:\l32:                                               \l  store float %53, float addrspace(3)* %19, align 4, !tbaa !5\l  br label %33\l}"];
	Node0x5adf950 -> Node0x5adf050;
	Node0x5adf050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%33:\l33:                                               \l  %34 = phi i8 addrspace(4)* [ %23, %22 ], [ %27, %32 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = getelementptr i8, i8 addrspace(4)* %34, i64 4\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = load i16, i16 addrspace(4)* %36, align 4, !range !9, !invariant.load\l... !10\l  %38 = icmp ult i16 %37, 2\l  br i1 %38, label %56, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5adf050:s0 -> Node0x5ae1410;
	Node0x5adf050:s1 -> Node0x5ae14a0;
	Node0x5ae14a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%39:\l39:                                               \l  %40 = lshr i16 %37, 1\l  %41 = zext i16 %40 to i64\l  br label %58\l}"];
	Node0x5ae14a0 -> Node0x5ae1710;
	Node0x5adf850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi float [ 0.000000e+00, %24 ], [ %53, %42 ]\l  %44 = phi i64 [ %20, %24 ], [ %54, %42 ]\l  %45 = add i64 %44, %25\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %48 = add i64 %44, %26\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %51 = fsub contract float %47, %50\l  %52 = fmul contract float %51, %51\l  %53 = fadd contract float %43, %52\l  %54 = add i64 %44, %31\l  %55 = icmp ult i64 %54, %6\l  br i1 %55, label %42, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5adf850:s0 -> Node0x5adf850;
	Node0x5adf850:s1 -> Node0x5adf950;
	Node0x5ae1410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%56:\l56:                                               \l  %57 = icmp eq i32 %18, 0\l  br i1 %57, label %71, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5ae1410:s0 -> Node0x5ae2250;
	Node0x5ae1410:s1 -> Node0x5adcfd0;
	Node0x5ae1710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i64 [ %69, %68 ], [ %41, %39 ]\l  %60 = icmp ugt i64 %59, %20\l  br i1 %60, label %61, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5ae1710:s0 -> Node0x5ae2520;
	Node0x5ae1710:s1 -> Node0x5ae2350;
	Node0x5ae2520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = trunc i64 %59 to i32\l  %63 = add nuw nsw i32 %18, %62\l  %64 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ16euclidean_kernelPKfmmS0_mmmPfmE4temp, i32 0, i32 %63\l  %65 = load float, float addrspace(3)* %64, align 4, !tbaa !5\l  %66 = load float, float addrspace(3)* %19, align 4, !tbaa !5\l  %67 = fadd contract float %65, %66\l  store float %67, float addrspace(3)* %19, align 4, !tbaa !5\l  br label %68\l}"];
	Node0x5ae2520 -> Node0x5ae2350;
	Node0x5ae2350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = lshr i64 %59, 1\l  %70 = icmp ult i64 %59, 2\l  br i1 %70, label %56, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ae2350:s0 -> Node0x5ae1410;
	Node0x5ae2350:s1 -> Node0x5ae1710;
	Node0x5ae2250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%71:\l71:                                               \l  %72 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ16euclidean_kernelPKfmmS0_mmmPfmE4temp, i32 0,\l... i32 0), align 16, !tbaa !5\l  %73 = fcmp olt float %72, 0x39F0000000000000\l  %74 = select i1 %73, float 0x41F0000000000000, float 1.000000e+00\l  %75 = fmul float %72, %74\l  %76 = tail call float @llvm.sqrt.f32(float %75)\l  %77 = bitcast float %76 to i32\l  %78 = add nsw i32 %77, -1\l  %79 = bitcast i32 %78 to float\l  %80 = add nsw i32 %77, 1\l  %81 = bitcast i32 %80 to float\l  %82 = tail call i1 @llvm.amdgcn.class.f32(float %75, i32 608)\l  %83 = select i1 %73, float 0x3EF0000000000000, float 1.000000e+00\l  %84 = fneg float %81\l  %85 = tail call float @llvm.fma.f32(float %84, float %76, float %75)\l  %86 = fcmp ogt float %85, 0.000000e+00\l  %87 = fneg float %79\l  %88 = tail call float @llvm.fma.f32(float %87, float %76, float %75)\l  %89 = fcmp ole float %88, 0.000000e+00\l  %90 = select i1 %89, float %79, float %76\l  %91 = select i1 %86, float %81, float %90\l  %92 = fmul float %83, %91\l  %93 = select i1 %82, float %75, float %92\l  %94 = mul i64 %13, %8\l  %95 = add i64 %94, %11\l  %96 = getelementptr inbounds float, float addrspace(1)* %7, i64 %95\l  store float %93, float addrspace(1)* %96, align 4, !tbaa !5\l  br label %97\l}"];
	Node0x5ae2250 -> Node0x5adcfd0;
	Node0x5adcfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%97:\l97:                                               \l  ret void\l}"];
}
