digraph "CFG for '_Z9truncNormPfS_i' function" {
	label="CFG for '_Z9truncNormPfS_i' function";

	Node0x47184e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = add i32 %19, %4\l  %21 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !13, !invariant.load\l... !14\l  %28 = zext i16 %27 to i32\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %32 = mul i32 %20, %28\l  %33 = add i32 %32, %29\l  %34 = mul i32 %33, %24\l  %35 = add i32 %34, %30\l  %36 = mul i32 %35, %13\l  %37 = add i32 %36, %31\l  %38 = icmp slt i32 %37, %2\l  br i1 %38, label %39, label %88\l|{<s0>T|<s1>F}}"];
	Node0x47184e0:s0 -> Node0x471a680;
	Node0x47184e0:s1 -> Node0x471cc80;
	Node0x471a680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = sext i32 %37 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %43 = fpext float %42 to double\l  %44 = fmul contract double %43, -5.000000e-01\l  %45 = fmul contract double %44, %43\l  %46 = fmul double %45, 0x3FF71547652B82FE\l  %47 = tail call double @llvm.rint.f64(double %46)\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %48, double 0x3FE62E42FEFA39EF,\l... double %45)\l  %50 = tail call double @llvm.fma.f64(double %48, double 0x3C7ABC9E3B39803F,\l... double %49)\l  %51 = tail call double @llvm.fma.f64(double %50, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %52 = tail call double @llvm.fma.f64(double %50, double %51, double\l... 0x3EC71DEE623FDE64)\l  %53 = tail call double @llvm.fma.f64(double %50, double %52, double\l... 0x3EFA01997C89E6B0)\l  %54 = tail call double @llvm.fma.f64(double %50, double %53, double\l... 0x3F2A01A014761F6E)\l  %55 = tail call double @llvm.fma.f64(double %50, double %54, double\l... 0x3F56C16C1852B7B0)\l  %56 = tail call double @llvm.fma.f64(double %50, double %55, double\l... 0x3F81111111122322)\l  %57 = tail call double @llvm.fma.f64(double %50, double %56, double\l... 0x3FA55555555502A1)\l  %58 = tail call double @llvm.fma.f64(double %50, double %57, double\l... 0x3FC5555555555511)\l  %59 = tail call double @llvm.fma.f64(double %50, double %58, double\l... 0x3FE000000000000B)\l  %60 = tail call double @llvm.fma.f64(double %50, double %59, double\l... 1.000000e+00)\l  %61 = tail call double @llvm.fma.f64(double %50, double %60, double\l... 1.000000e+00)\l  %62 = fptosi double %47 to i32\l  %63 = tail call double @llvm.amdgcn.ldexp.f64(double %61, i32 %62)\l  %64 = fcmp ogt double %45, 1.024000e+03\l  %65 = select i1 %64, double 0x7FF0000000000000, double %63\l  %66 = fcmp olt double %45, -1.075000e+03\l  %67 = select i1 %66, double 0.000000e+00, double %65\l  %68 = fptrunc double %67 to float\l  %69 = fpext float %68 to double\l  %70 = tail call double @llvm.amdgcn.rsq.f64(double 0x401921FB54442D18)\l  %71 = fmul double %70, 0x401921FB54442D18\l  %72 = fmul double %70, 5.000000e-01\l  %73 = fneg double %72\l  %74 = tail call double @llvm.fma.f64(double %73, double %71, double\l... 5.000000e-01)\l  %75 = tail call double @llvm.fma.f64(double %72, double %74, double %72)\l  %76 = tail call double @llvm.fma.f64(double %71, double %74, double %71)\l  %77 = fneg double %76\l  %78 = tail call double @llvm.fma.f64(double %77, double %76, double\l... 0x401921FB54442D18)\l  %79 = tail call double @llvm.fma.f64(double %78, double %75, double %76)\l  %80 = fneg double %79\l  %81 = tail call double @llvm.fma.f64(double %80, double %79, double\l... 0x401921FB54442D18)\l  %82 = tail call double @llvm.fma.f64(double %81, double %75, double %79)\l  %83 = fdiv contract double %69, %82\l  %84 = fmul contract double %83, %43\l  %85 = fdiv contract double %84, 0x3FD5D897A241A3F5\l  %86 = fptrunc double %85 to float\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x471a680 -> Node0x471cc80;
	Node0x471cc80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
