digraph "CFG for '_Z13log_truncNormPfS_i' function" {
	label="CFG for '_Z13log_truncNormPfS_i' function";

	Node0x48e3960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = add i32 %19, %4\l  %21 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !13, !invariant.load\l... !14\l  %28 = zext i16 %27 to i32\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %32 = mul i32 %20, %28\l  %33 = add i32 %32, %29\l  %34 = mul i32 %33, %24\l  %35 = add i32 %34, %30\l  %36 = mul i32 %35, %13\l  %37 = add i32 %36, %31\l  %38 = icmp slt i32 %37, %2\l  br i1 %38, label %39, label %102\l|{<s0>T|<s1>F}}"];
	Node0x48e3960:s0 -> Node0x48e5b00;
	Node0x48e3960:s1 -> Node0x48e8100;
	Node0x48e5b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = sext i32 %37 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %42, i32 144)\l  %44 = select i1 %43, float 0x41F0000000000000, float 1.000000e+00\l  %45 = fmul float %42, %44\l  %46 = tail call float @llvm.log2.f32(float %45)\l  %47 = fmul float %46, 0x3FE62E42E0000000\l  %48 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 519)\l  %49 = fneg float %47\l  %50 = tail call float @llvm.fma.f32(float %46, float 0x3FE62E42E0000000,\l... float %49)\l  %51 = tail call float @llvm.fma.f32(float %46, float 0x3E6EFA39E0000000,\l... float %50)\l  %52 = fadd float %47, %51\l  %53 = select i1 %48, float %46, float %52\l  %54 = select i1 %43, float 0x40362E4300000000, float 0.000000e+00\l  %55 = fsub float %53, %54\l  %56 = fpext float %55 to double\l  %57 = fpext float %42 to double\l  %58 = fmul contract double %57, -5.000000e-01\l  %59 = fmul contract double %58, %57\l  %60 = fmul double %59, 0x3FF71547652B82FE\l  %61 = tail call double @llvm.rint.f64(double %60)\l  %62 = fneg double %61\l  %63 = tail call double @llvm.fma.f64(double %62, double 0x3FE62E42FEFA39EF,\l... double %59)\l  %64 = tail call double @llvm.fma.f64(double %62, double 0x3C7ABC9E3B39803F,\l... double %63)\l  %65 = tail call double @llvm.fma.f64(double %64, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %66 = tail call double @llvm.fma.f64(double %64, double %65, double\l... 0x3EC71DEE623FDE64)\l  %67 = tail call double @llvm.fma.f64(double %64, double %66, double\l... 0x3EFA01997C89E6B0)\l  %68 = tail call double @llvm.fma.f64(double %64, double %67, double\l... 0x3F2A01A014761F6E)\l  %69 = tail call double @llvm.fma.f64(double %64, double %68, double\l... 0x3F56C16C1852B7B0)\l  %70 = tail call double @llvm.fma.f64(double %64, double %69, double\l... 0x3F81111111122322)\l  %71 = tail call double @llvm.fma.f64(double %64, double %70, double\l... 0x3FA55555555502A1)\l  %72 = tail call double @llvm.fma.f64(double %64, double %71, double\l... 0x3FC5555555555511)\l  %73 = tail call double @llvm.fma.f64(double %64, double %72, double\l... 0x3FE000000000000B)\l  %74 = tail call double @llvm.fma.f64(double %64, double %73, double\l... 1.000000e+00)\l  %75 = tail call double @llvm.fma.f64(double %64, double %74, double\l... 1.000000e+00)\l  %76 = fptosi double %61 to i32\l  %77 = tail call double @llvm.amdgcn.ldexp.f64(double %75, i32 %76)\l  %78 = fcmp ogt double %59, 1.024000e+03\l  %79 = select i1 %78, double 0x7FF0000000000000, double %77\l  %80 = fcmp olt double %59, -1.075000e+03\l  %81 = select i1 %80, double 0.000000e+00, double %79\l  %82 = fptrunc double %81 to float\l  %83 = fpext float %82 to double\l  %84 = tail call double @llvm.amdgcn.rsq.f64(double 0x401921FB54442D18)\l  %85 = fmul double %84, 0x401921FB54442D18\l  %86 = fmul double %84, 5.000000e-01\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %87, double %85, double\l... 5.000000e-01)\l  %89 = tail call double @llvm.fma.f64(double %86, double %88, double %86)\l  %90 = tail call double @llvm.fma.f64(double %85, double %88, double %85)\l  %91 = fneg double %90\l  %92 = tail call double @llvm.fma.f64(double %91, double %90, double\l... 0x401921FB54442D18)\l  %93 = tail call double @llvm.fma.f64(double %92, double %89, double %90)\l  %94 = fneg double %93\l  %95 = tail call double @llvm.fma.f64(double %94, double %93, double\l... 0x401921FB54442D18)\l  %96 = tail call double @llvm.fma.f64(double %95, double %89, double %93)\l  %97 = fdiv contract double %83, %96\l  %98 = fmul contract double %97, %56\l  %99 = fdiv contract double %98, 0x3FD5D897A241A3F5\l  %100 = fptrunc double %99 to float\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %100, float addrspace(1)* %101, align 4, !tbaa !16\l  br label %102\l}"];
	Node0x48e5b00 -> Node0x48e8100;
	Node0x48e8100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  ret void\l}"];
}
