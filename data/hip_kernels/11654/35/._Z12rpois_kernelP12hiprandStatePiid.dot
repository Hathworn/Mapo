digraph "CFG for '_Z12rpois_kernelP12hiprandStatePiid' function" {
	label="CFG for '_Z12rpois_kernelP12hiprandStatePiid' function";

	Node0x5f43d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = mul i32 %21, %29\l  %34 = add i32 %33, %30\l  %35 = mul i32 %34, %25\l  %36 = add i32 %35, %31\l  %37 = mul i32 %36, %14\l  %38 = add i32 %37, %32\l  %39 = icmp slt i32 %38, %2\l  br i1 %39, label %40, label %1158\l|{<s0>T|<s1>F}}"];
	Node0x5f43d40:s0 -> Node0x5f45e00;
	Node0x5f43d40:s1 -> Node0x5f48480;
	Node0x5f45e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%40:\l40:                                               \l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41\l  %43 = fcmp contract olt double %3, 6.400000e+01\l  br i1 %43, label %44, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5f45e00:s0 -> Node0x5f49170;
	Node0x5f45e00:s1 -> Node0x5f49200;
	Node0x5f49170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%44:\l44:                                               \l  %45 = fneg contract double %3\l  %46 = fmul double %3, 0xBFF71547652B82FE\l  %47 = tail call double @llvm.rint.f64(double %46)\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %48, double 0x3FE62E42FEFA39EF,\l... double %45)\l  %50 = tail call double @llvm.fma.f64(double %48, double 0x3C7ABC9E3B39803F,\l... double %49)\l  %51 = tail call double @llvm.fma.f64(double %50, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %52 = tail call double @llvm.fma.f64(double %50, double %51, double\l... 0x3EC71DEE623FDE64)\l  %53 = tail call double @llvm.fma.f64(double %50, double %52, double\l... 0x3EFA01997C89E6B0)\l  %54 = tail call double @llvm.fma.f64(double %50, double %53, double\l... 0x3F2A01A014761F6E)\l  %55 = tail call double @llvm.fma.f64(double %50, double %54, double\l... 0x3F56C16C1852B7B0)\l  %56 = tail call double @llvm.fma.f64(double %50, double %55, double\l... 0x3F81111111122322)\l  %57 = tail call double @llvm.fma.f64(double %50, double %56, double\l... 0x3FA55555555502A1)\l  %58 = tail call double @llvm.fma.f64(double %50, double %57, double\l... 0x3FC5555555555511)\l  %59 = tail call double @llvm.fma.f64(double %50, double %58, double\l... 0x3FE000000000000B)\l  %60 = tail call double @llvm.fma.f64(double %50, double %59, double\l... 1.000000e+00)\l  %61 = tail call double @llvm.fma.f64(double %50, double %60, double\l... 1.000000e+00)\l  %62 = fptosi double %47 to i32\l  %63 = tail call double @llvm.amdgcn.ldexp.f64(double %61, i32 %62)\l  %64 = fcmp olt double %3, -1.024000e+03\l  %65 = select i1 %64, double 0x7FF0000000000000, double %63\l  %66 = fcmp ogt double %3, 1.075000e+03\l  %67 = select i1 %66, double 0.000000e+00, double %65\l  %68 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 0\l  %69 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 1\l  %70 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 2\l  %71 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 3\l  %72 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 4\l  %73 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %42, i64 0, i32 0, i32 0, i32 0\l  %74 = load i32, i32 addrspace(1)* %68, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  %75 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %76 = load i32, i32 addrspace(1)* %70, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  %77 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %78 = load i32, i32 addrspace(1)* %72, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  %79 = load i32, i32 addrspace(1)* %73, align 8, !tbaa !20, !amdgpu.noclobber\l... !14\l  br label %80\l}"];
	Node0x5f49170 -> Node0x5f4c780;
	Node0x5f4c780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi i32 [ %79, %44 ], [ %106, %80 ]\l  %82 = phi i32 [ %78, %44 ], [ %105, %80 ]\l  %83 = phi i32 [ %77, %44 ], [ %96, %80 ]\l  %84 = phi i32 [ %76, %44 ], [ %82, %80 ]\l  %85 = phi i32 [ %75, %44 ], [ %83, %80 ]\l  %86 = phi i32 [ %74, %44 ], [ %84, %80 ]\l  %87 = phi i32 [ 0, %44 ], [ %89, %80 ]\l  %88 = phi double [ 1.000000e+00, %44 ], [ %116, %80 ]\l  %89 = add i32 %87, 1\l  %90 = lshr i32 %86, 2\l  %91 = xor i32 %90, %86\l  %92 = shl i32 %82, 4\l  %93 = shl i32 %91, 1\l  %94 = xor i32 %92, %93\l  %95 = xor i32 %94, %82\l  %96 = xor i32 %95, %91\l  %97 = add i32 %81, 362437\l  %98 = add i32 %97, %96\l  %99 = lshr i32 %85, 2\l  %100 = xor i32 %99, %85\l  %101 = shl i32 %96, 4\l  %102 = shl i32 %100, 1\l  %103 = xor i32 %102, %101\l  %104 = xor i32 %103, %100\l  %105 = xor i32 %104, %96\l  %106 = add i32 %81, 724874\l  %107 = add i32 %105, %106\l  %108 = lshr i32 %107, 11\l  %109 = zext i32 %108 to i64\l  %110 = shl nuw nsw i64 %109, 32\l  %111 = zext i32 %98 to i64\l  %112 = or i64 %110, %111\l  %113 = uitofp i64 %112 to double\l  %114 = fmul contract double %113, 0x3CA0000000000000\l  %115 = fadd contract double %114, 0x3CA0000000000000\l  %116 = fmul contract double %88, %115\l  %117 = fcmp contract ogt double %116, %67\l  br i1 %117, label %80, label %118, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5f4c780:s0 -> Node0x5f4c780;
	Node0x5f4c780:s1 -> Node0x5f4e040;
	Node0x5f4e040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%118:\l118:                                              \l  store i32 %84, i32 addrspace(1)* %68, align 8, !tbaa !16\l  store i32 %83, i32 addrspace(1)* %69, align 4, !tbaa !16\l  store i32 %82, i32 addrspace(1)* %70, align 8, !tbaa !16\l  store i32 %96, i32 addrspace(1)* %71, align 4, !tbaa !16\l  store i32 %105, i32 addrspace(1)* %72, align 8, !tbaa !16\l  store i32 %106, i32 addrspace(1)* %73, align 8, !tbaa !20\l  br label %1155\l}"];
	Node0x5f4e040 -> Node0x5f4cea0;
	Node0x5f49200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%119:\l119:                                              \l  %120 = fcmp contract ugt double %3, 4.000000e+03\l  br i1 %120, label %897, label %121\l|{<s0>T|<s1>F}}"];
	Node0x5f49200:s0 -> Node0x5f4ec70;
	Node0x5f49200:s1 -> Node0x5f4ed00;
	Node0x5f4ed00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%121:\l121:                                              \l  %122 = fdiv contract double 3.360000e+00, %3\l  %123 = fsub contract double 7.670000e-01, %122\l  %124 = fmul contract double %3, 3.000000e+00\l  %125 = fcmp olt double %124, 0x1000000000000000\l  %126 = select i1 %125, double 0x4FF0000000000000, double 1.000000e+00\l  %127 = fmul double %124, %126\l  %128 = tail call double @llvm.amdgcn.rsq.f64(double %127)\l  %129 = fmul double %127, %128\l  %130 = fmul double %128, 5.000000e-01\l  %131 = fneg double %130\l  %132 = tail call double @llvm.fma.f64(double %131, double %129, double\l... 5.000000e-01)\l  %133 = tail call double @llvm.fma.f64(double %130, double %132, double %130)\l  %134 = tail call double @llvm.fma.f64(double %129, double %132, double %129)\l  %135 = fneg double %134\l  %136 = tail call double @llvm.fma.f64(double %135, double %134, double %127)\l  %137 = tail call double @llvm.fma.f64(double %136, double %133, double %134)\l  %138 = fneg double %137\l  %139 = tail call double @llvm.fma.f64(double %138, double %137, double %127)\l  %140 = tail call double @llvm.fma.f64(double %139, double %133, double %137)\l  %141 = select i1 %125, double 0x37F0000000000000, double 1.000000e+00\l  %142 = fmul double %141, %140\l  %143 = fcmp oeq double %127, 0.000000e+00\l  %144 = fcmp oeq double %127, 0x7FF0000000000000\l  %145 = or i1 %143, %144\l  %146 = select i1 %145, double %127, double %142\l  %147 = fdiv contract double 0x400921FB54442D18, %146\l  %148 = fmul contract double %147, %3\l  %149 = tail call double @llvm.amdgcn.frexp.mant.f64(double %123)\l  %150 = fcmp olt double %149, 0x3FE5555555555555\l  %151 = zext i1 %150 to i32\l  %152 = tail call double @llvm.amdgcn.ldexp.f64(double %149, i32 %151)\l  %153 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %123)\l  %154 = sub nsw i32 %153, %151\l  %155 = fadd double %152, -1.000000e+00\l  %156 = fadd double %152, 1.000000e+00\l  %157 = fadd double %156, -1.000000e+00\l  %158 = fsub double %152, %157\l  %159 = tail call double @llvm.amdgcn.rcp.f64(double %156)\l  %160 = fneg double %156\l  %161 = tail call double @llvm.fma.f64(double %160, double %159, double\l... 1.000000e+00)\l  %162 = tail call double @llvm.fma.f64(double %161, double %159, double %159)\l  %163 = tail call double @llvm.fma.f64(double %160, double %162, double\l... 1.000000e+00)\l  %164 = tail call double @llvm.fma.f64(double %163, double %162, double %162)\l  %165 = fmul double %155, %164\l  %166 = fmul double %156, %165\l  %167 = fneg double %166\l  %168 = tail call double @llvm.fma.f64(double %165, double %156, double %167)\l  %169 = tail call double @llvm.fma.f64(double %165, double %158, double %168)\l  %170 = fadd double %166, %169\l  %171 = fsub double %170, %166\l  %172 = fsub double %169, %171\l  %173 = fsub double %155, %170\l  %174 = fsub double %155, %173\l  %175 = fsub double %174, %170\l  %176 = fsub double %175, %172\l  %177 = fadd double %173, %176\l  %178 = fmul double %164, %177\l  %179 = fadd double %165, %178\l  %180 = fsub double %179, %165\l  %181 = fsub double %178, %180\l  %182 = fmul double %179, %179\l  %183 = tail call double @llvm.fma.f64(double %182, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %184 = tail call double @llvm.fma.f64(double %182, double %183, double\l... 0x3FC7474DD7F4DF2E)\l  %185 = tail call double @llvm.fma.f64(double %182, double %184, double\l... 0x3FCC71C016291751)\l  %186 = tail call double @llvm.fma.f64(double %182, double %185, double\l... 0x3FD249249B27ACF1)\l  %187 = tail call double @llvm.fma.f64(double %182, double %186, double\l... 0x3FD99999998EF7B6)\l  %188 = tail call double @llvm.fma.f64(double %182, double %187, double\l... 0x3FE5555555555780)\l  %189 = tail call double @llvm.amdgcn.ldexp.f64(double %179, i32 1)\l  %190 = tail call double @llvm.amdgcn.ldexp.f64(double %181, i32 1)\l  %191 = fmul double %179, %182\l  %192 = fmul double %191, %188\l  %193 = fadd double %189, %192\l  %194 = fsub double %193, %189\l  %195 = fsub double %192, %194\l  %196 = fadd double %190, %195\l  %197 = fadd double %193, %196\l  %198 = fsub double %197, %193\l  %199 = fsub double %196, %198\l  %200 = sitofp i32 %154 to double\l  %201 = fmul double %200, 0x3FE62E42FEFA39EF\l  %202 = fneg double %201\l  %203 = tail call double @llvm.fma.f64(double %200, double\l... 0x3FE62E42FEFA39EF, double %202)\l  %204 = tail call double @llvm.fma.f64(double %200, double\l... 0x3C7ABC9E3B39803F, double %203)\l  %205 = fadd double %201, %204\l  %206 = fsub double %205, %201\l  %207 = fsub double %204, %206\l  %208 = fadd double %205, %197\l  %209 = fsub double %208, %205\l  %210 = fsub double %208, %209\l  %211 = fsub double %205, %210\l  %212 = fsub double %197, %209\l  %213 = fadd double %212, %211\l  %214 = fadd double %207, %199\l  %215 = fsub double %214, %207\l  %216 = fsub double %214, %215\l  %217 = fsub double %207, %216\l  %218 = fsub double %199, %215\l  %219 = fadd double %218, %217\l  %220 = fadd double %214, %213\l  %221 = fadd double %208, %220\l  %222 = fsub double %221, %208\l  %223 = fsub double %220, %222\l  %224 = fadd double %219, %223\l  %225 = fadd double %221, %224\l  %226 = tail call double @llvm.fabs.f64(double %123) #3\l  %227 = fcmp oeq double %226, 0x7FF0000000000000\l  %228 = select i1 %227, double %123, double %225\l  %229 = fcmp olt double %123, 0.000000e+00\l  %230 = select i1 %229, double 0x7FF8000000000000, double %228\l  %231 = fcmp oeq double %123, 0.000000e+00\l  %232 = select i1 %231, double 0xFFF0000000000000, double %230\l  %233 = fsub contract double %232, %3\l  %234 = tail call double @llvm.amdgcn.frexp.mant.f64(double %147)\l  %235 = fcmp olt double %234, 0x3FE5555555555555\l  %236 = zext i1 %235 to i32\l  %237 = tail call double @llvm.amdgcn.ldexp.f64(double %234, i32 %236)\l  %238 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %147)\l  %239 = sub nsw i32 %238, %236\l  %240 = fadd double %237, -1.000000e+00\l  %241 = fadd double %237, 1.000000e+00\l  %242 = fadd double %241, -1.000000e+00\l  %243 = fsub double %237, %242\l  %244 = tail call double @llvm.amdgcn.rcp.f64(double %241)\l  %245 = fneg double %241\l  %246 = tail call double @llvm.fma.f64(double %245, double %244, double\l... 1.000000e+00)\l  %247 = tail call double @llvm.fma.f64(double %246, double %244, double %244)\l  %248 = tail call double @llvm.fma.f64(double %245, double %247, double\l... 1.000000e+00)\l  %249 = tail call double @llvm.fma.f64(double %248, double %247, double %247)\l  %250 = fmul double %240, %249\l  %251 = fmul double %241, %250\l  %252 = fneg double %251\l  %253 = tail call double @llvm.fma.f64(double %250, double %241, double %252)\l  %254 = tail call double @llvm.fma.f64(double %250, double %243, double %253)\l  %255 = fadd double %251, %254\l  %256 = fsub double %255, %251\l  %257 = fsub double %254, %256\l  %258 = fsub double %240, %255\l  %259 = fsub double %240, %258\l  %260 = fsub double %259, %255\l  %261 = fsub double %260, %257\l  %262 = fadd double %258, %261\l  %263 = fmul double %249, %262\l  %264 = fadd double %250, %263\l  %265 = fsub double %264, %250\l  %266 = fsub double %263, %265\l  %267 = fmul double %264, %264\l  %268 = tail call double @llvm.fma.f64(double %267, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %269 = tail call double @llvm.fma.f64(double %267, double %268, double\l... 0x3FC7474DD7F4DF2E)\l  %270 = tail call double @llvm.fma.f64(double %267, double %269, double\l... 0x3FCC71C016291751)\l  %271 = tail call double @llvm.fma.f64(double %267, double %270, double\l... 0x3FD249249B27ACF1)\l  %272 = tail call double @llvm.fma.f64(double %267, double %271, double\l... 0x3FD99999998EF7B6)\l  %273 = tail call double @llvm.fma.f64(double %267, double %272, double\l... 0x3FE5555555555780)\l  %274 = tail call double @llvm.amdgcn.ldexp.f64(double %264, i32 1)\l  %275 = tail call double @llvm.amdgcn.ldexp.f64(double %266, i32 1)\l  %276 = fmul double %264, %267\l  %277 = fmul double %276, %273\l  %278 = fadd double %274, %277\l  %279 = fsub double %278, %274\l  %280 = fsub double %277, %279\l  %281 = fadd double %275, %280\l  %282 = fadd double %278, %281\l  %283 = fsub double %282, %278\l  %284 = fsub double %281, %283\l  %285 = sitofp i32 %239 to double\l  %286 = fmul double %285, 0x3FE62E42FEFA39EF\l  %287 = fneg double %286\l  %288 = tail call double @llvm.fma.f64(double %285, double\l... 0x3FE62E42FEFA39EF, double %287)\l  %289 = tail call double @llvm.fma.f64(double %285, double\l... 0x3C7ABC9E3B39803F, double %288)\l  %290 = fadd double %286, %289\l  %291 = fsub double %290, %286\l  %292 = fsub double %289, %291\l  %293 = fadd double %290, %282\l  %294 = fsub double %293, %290\l  %295 = fsub double %293, %294\l  %296 = fsub double %290, %295\l  %297 = fsub double %282, %294\l  %298 = fadd double %297, %296\l  %299 = fadd double %292, %284\l  %300 = fsub double %299, %292\l  %301 = fsub double %299, %300\l  %302 = fsub double %292, %301\l  %303 = fsub double %284, %300\l  %304 = fadd double %303, %302\l  %305 = fadd double %299, %298\l  %306 = fadd double %293, %305\l  %307 = fsub double %306, %293\l  %308 = fsub double %305, %307\l  %309 = fadd double %304, %308\l  %310 = fadd double %306, %309\l  %311 = tail call double @llvm.fabs.f64(double %147) #3\l  %312 = fcmp oeq double %311, 0x7FF0000000000000\l  %313 = select i1 %312, double %147, double %310\l  %314 = fcmp olt double %147, 0.000000e+00\l  %315 = select i1 %314, double 0x7FF8000000000000, double %313\l  %316 = fcmp oeq double %147, 0.000000e+00\l  %317 = select i1 %316, double 0xFFF0000000000000, double %315\l  %318 = fsub contract double %233, %317\l  %319 = tail call double @llvm.amdgcn.frexp.mant.f64(double %3)\l  %320 = fcmp olt double %319, 0x3FE5555555555555\l  %321 = zext i1 %320 to i32\l  %322 = tail call double @llvm.amdgcn.ldexp.f64(double %319, i32 %321)\l  %323 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %3)\l  %324 = sub nsw i32 %323, %321\l  %325 = fadd double %322, -1.000000e+00\l  %326 = fadd double %322, 1.000000e+00\l  %327 = fadd double %326, -1.000000e+00\l  %328 = fsub double %322, %327\l  %329 = tail call double @llvm.amdgcn.rcp.f64(double %326)\l  %330 = fneg double %326\l  %331 = tail call double @llvm.fma.f64(double %330, double %329, double\l... 1.000000e+00)\l  %332 = tail call double @llvm.fma.f64(double %331, double %329, double %329)\l  %333 = tail call double @llvm.fma.f64(double %330, double %332, double\l... 1.000000e+00)\l  %334 = tail call double @llvm.fma.f64(double %333, double %332, double %332)\l  %335 = fmul double %325, %334\l  %336 = fmul double %326, %335\l  %337 = fneg double %336\l  %338 = tail call double @llvm.fma.f64(double %335, double %326, double %337)\l  %339 = tail call double @llvm.fma.f64(double %335, double %328, double %338)\l  %340 = fadd double %336, %339\l  %341 = fsub double %340, %336\l  %342 = fsub double %339, %341\l  %343 = fsub double %325, %340\l  %344 = fsub double %325, %343\l  %345 = fsub double %344, %340\l  %346 = fsub double %345, %342\l  %347 = fadd double %343, %346\l  %348 = fmul double %334, %347\l  %349 = fadd double %335, %348\l  %350 = fsub double %349, %335\l  %351 = fsub double %348, %350\l  %352 = fmul double %349, %349\l  %353 = tail call double @llvm.fma.f64(double %352, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %354 = tail call double @llvm.fma.f64(double %352, double %353, double\l... 0x3FC7474DD7F4DF2E)\l  %355 = tail call double @llvm.fma.f64(double %352, double %354, double\l... 0x3FCC71C016291751)\l  %356 = tail call double @llvm.fma.f64(double %352, double %355, double\l... 0x3FD249249B27ACF1)\l  %357 = tail call double @llvm.fma.f64(double %352, double %356, double\l... 0x3FD99999998EF7B6)\l  %358 = tail call double @llvm.fma.f64(double %352, double %357, double\l... 0x3FE5555555555780)\l  %359 = tail call double @llvm.amdgcn.ldexp.f64(double %349, i32 1)\l  %360 = tail call double @llvm.amdgcn.ldexp.f64(double %351, i32 1)\l  %361 = fmul double %349, %352\l  %362 = fmul double %361, %358\l  %363 = fadd double %359, %362\l  %364 = fsub double %363, %359\l  %365 = fsub double %362, %364\l  %366 = fadd double %360, %365\l  %367 = fadd double %363, %366\l  %368 = fsub double %367, %363\l  %369 = fsub double %366, %368\l  %370 = sitofp i32 %324 to double\l  %371 = fmul double %370, 0x3FE62E42FEFA39EF\l  %372 = fneg double %371\l  %373 = tail call double @llvm.fma.f64(double %370, double\l... 0x3FE62E42FEFA39EF, double %372)\l  %374 = tail call double @llvm.fma.f64(double %370, double\l... 0x3C7ABC9E3B39803F, double %373)\l  %375 = fadd double %371, %374\l  %376 = fsub double %375, %371\l  %377 = fsub double %374, %376\l  %378 = fadd double %375, %367\l  %379 = fsub double %378, %375\l  %380 = fsub double %378, %379\l  %381 = fsub double %375, %380\l  %382 = fsub double %367, %379\l  %383 = fadd double %382, %381\l  %384 = fadd double %377, %369\l  %385 = fsub double %384, %377\l  %386 = fsub double %384, %385\l  %387 = fsub double %377, %386\l  %388 = fsub double %369, %385\l  %389 = fadd double %388, %387\l  %390 = fadd double %384, %383\l  %391 = fadd double %378, %390\l  %392 = fsub double %391, %378\l  %393 = fsub double %390, %392\l  %394 = fadd double %389, %393\l  %395 = fadd double %391, %394\l  %396 = tail call double @llvm.fabs.f64(double %3) #3\l  %397 = fcmp oeq double %396, 0x7FF0000000000000\l  %398 = select i1 %397, double %3, double %395\l  %399 = fcmp olt double %3, 0.000000e+00\l  %400 = select i1 %399, double 0x7FF8000000000000, double %398\l  %401 = fcmp oeq double %3, 0.000000e+00\l  %402 = select i1 %401, double 0xFFF0000000000000, double %400\l  %403 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 0\l  %404 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 1\l  %405 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 2\l  %406 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 3\l  %407 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 4\l  %408 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %42, i64 0, i32 0, i32 0, i32 0\l  %409 = load i32, i32 addrspace(1)* %403, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %410 = load i32, i32 addrspace(1)* %404, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %411 = load i32, i32 addrspace(1)* %405, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %412 = load i32, i32 addrspace(1)* %406, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %413 = load i32, i32 addrspace(1)* %407, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %414 = load i32, i32 addrspace(1)* %408, align 8, !tbaa !20,\l... !amdgpu.noclobber !14\l  br label %415\l}"];
	Node0x5f4ed00 -> Node0x5f5d5b0;
	Node0x5f5d5b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%415:\l415:                                              \l  %416 = phi i32 [ %414, %121 ], [ %887, %895 ]\l  %417 = phi i32 [ %413, %121 ], [ %888, %895 ]\l  %418 = phi i32 [ %412, %121 ], [ %889, %895 ]\l  %419 = phi i32 [ %411, %121 ], [ %890, %895 ]\l  %420 = phi i32 [ %410, %121 ], [ %891, %895 ]\l  %421 = phi i32 [ %409, %121 ], [ %892, %895 ]\l  %422 = phi i32 [ undef, %121 ], [ %894, %895 ]\l  %423 = lshr i32 %421, 2\l  %424 = xor i32 %423, %421\l  %425 = shl i32 %417, 4\l  %426 = shl i32 %424, 1\l  %427 = xor i32 %425, %426\l  %428 = xor i32 %427, %417\l  %429 = xor i32 %428, %424\l  %430 = add i32 %416, 362437\l  %431 = add i32 %430, %429\l  %432 = lshr i32 %420, 2\l  %433 = xor i32 %432, %420\l  %434 = shl i32 %429, 4\l  %435 = shl i32 %433, 1\l  %436 = xor i32 %435, %434\l  %437 = xor i32 %436, %433\l  %438 = xor i32 %437, %429\l  %439 = add i32 %416, 724874\l  %440 = add i32 %438, %439\l  %441 = lshr i32 %440, 11\l  %442 = zext i32 %441 to i64\l  %443 = shl nuw nsw i64 %442, 32\l  %444 = zext i32 %431 to i64\l  %445 = or i64 %443, %444\l  %446 = uitofp i64 %445 to double\l  %447 = fmul contract double %446, 0x3CA0000000000000\l  %448 = fadd contract double %447, 0x3CA0000000000000\l  %449 = fsub contract double 1.000000e+00, %448\l  %450 = fdiv contract double %449, %448\l  %451 = tail call double @llvm.amdgcn.frexp.mant.f64(double %450)\l  %452 = fcmp olt double %451, 0x3FE5555555555555\l  %453 = zext i1 %452 to i32\l  %454 = tail call double @llvm.amdgcn.ldexp.f64(double %451, i32 %453)\l  %455 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %450)\l  %456 = sub nsw i32 %455, %453\l  %457 = fadd double %454, -1.000000e+00\l  %458 = fadd double %454, 1.000000e+00\l  %459 = fadd double %458, -1.000000e+00\l  %460 = fsub double %454, %459\l  %461 = tail call double @llvm.amdgcn.rcp.f64(double %458)\l  %462 = fneg double %458\l  %463 = tail call double @llvm.fma.f64(double %462, double %461, double\l... 1.000000e+00)\l  %464 = tail call double @llvm.fma.f64(double %463, double %461, double %461)\l  %465 = tail call double @llvm.fma.f64(double %462, double %464, double\l... 1.000000e+00)\l  %466 = tail call double @llvm.fma.f64(double %465, double %464, double %464)\l  %467 = fmul double %457, %466\l  %468 = fmul double %458, %467\l  %469 = fneg double %468\l  %470 = tail call double @llvm.fma.f64(double %467, double %458, double %469)\l  %471 = tail call double @llvm.fma.f64(double %467, double %460, double %470)\l  %472 = fadd double %468, %471\l  %473 = fsub double %472, %468\l  %474 = fsub double %471, %473\l  %475 = fsub double %457, %472\l  %476 = fsub double %457, %475\l  %477 = fsub double %476, %472\l  %478 = fsub double %477, %474\l  %479 = fadd double %475, %478\l  %480 = fmul double %466, %479\l  %481 = fadd double %467, %480\l  %482 = fsub double %481, %467\l  %483 = fsub double %480, %482\l  %484 = fmul double %481, %481\l  %485 = tail call double @llvm.fma.f64(double %484, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %486 = tail call double @llvm.fma.f64(double %484, double %485, double\l... 0x3FC7474DD7F4DF2E)\l  %487 = tail call double @llvm.fma.f64(double %484, double %486, double\l... 0x3FCC71C016291751)\l  %488 = tail call double @llvm.fma.f64(double %484, double %487, double\l... 0x3FD249249B27ACF1)\l  %489 = tail call double @llvm.fma.f64(double %484, double %488, double\l... 0x3FD99999998EF7B6)\l  %490 = tail call double @llvm.fma.f64(double %484, double %489, double\l... 0x3FE5555555555780)\l  %491 = tail call double @llvm.amdgcn.ldexp.f64(double %481, i32 1)\l  %492 = tail call double @llvm.amdgcn.ldexp.f64(double %483, i32 1)\l  %493 = fmul double %481, %484\l  %494 = fmul double %493, %490\l  %495 = fadd double %491, %494\l  %496 = fsub double %495, %491\l  %497 = fsub double %494, %496\l  %498 = fadd double %492, %497\l  %499 = fadd double %495, %498\l  %500 = fsub double %499, %495\l  %501 = fsub double %498, %500\l  %502 = sitofp i32 %456 to double\l  %503 = fmul double %502, 0x3FE62E42FEFA39EF\l  %504 = fneg double %503\l  %505 = tail call double @llvm.fma.f64(double %502, double\l... 0x3FE62E42FEFA39EF, double %504)\l  %506 = tail call double @llvm.fma.f64(double %502, double\l... 0x3C7ABC9E3B39803F, double %505)\l  %507 = fadd double %503, %506\l  %508 = fsub double %507, %503\l  %509 = fsub double %506, %508\l  %510 = fadd double %507, %499\l  %511 = fsub double %510, %507\l  %512 = fsub double %510, %511\l  %513 = fsub double %507, %512\l  %514 = fsub double %499, %511\l  %515 = fadd double %514, %513\l  %516 = fadd double %509, %501\l  %517 = fsub double %516, %509\l  %518 = fsub double %516, %517\l  %519 = fsub double %509, %518\l  %520 = fsub double %501, %517\l  %521 = fadd double %520, %519\l  %522 = fadd double %516, %515\l  %523 = fadd double %510, %522\l  %524 = fsub double %523, %510\l  %525 = fsub double %522, %524\l  %526 = fadd double %521, %525\l  %527 = fadd double %523, %526\l  %528 = tail call double @llvm.fabs.f64(double %450) #3\l  %529 = fcmp oeq double %528, 0x7FF0000000000000\l  %530 = select i1 %529, double %450, double %527\l  %531 = fcmp olt double %450, 0.000000e+00\l  %532 = select i1 %531, double 0x7FF8000000000000, double %530\l  %533 = fcmp oeq double %450, 0.000000e+00\l  %534 = select i1 %533, double 0xFFF0000000000000, double %532\l  %535 = fsub contract double %148, %534\l  %536 = fdiv contract double %535, %147\l  %537 = fadd contract double %536, 5.000000e-01\l  %538 = tail call double @llvm.floor.f64(double %537)\l  %539 = fcmp contract olt double %538, 0.000000e+00\l  br i1 %539, label %886, label %540, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5f5d5b0:s0 -> Node0x5f64160;
	Node0x5f5d5b0:s1 -> Node0x5f641f0;
	Node0x5f641f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%540:\l540:                                              \l  %541 = lshr i32 %419, 2\l  %542 = xor i32 %541, %419\l  %543 = shl i32 %438, 4\l  %544 = shl i32 %542, 1\l  %545 = xor i32 %544, %543\l  %546 = xor i32 %545, %542\l  %547 = xor i32 %546, %438\l  %548 = add i32 %416, 1087311\l  %549 = add i32 %548, %547\l  %550 = lshr i32 %418, 2\l  %551 = xor i32 %550, %418\l  %552 = shl i32 %547, 4\l  %553 = shl i32 %551, 1\l  %554 = xor i32 %553, %552\l  %555 = xor i32 %554, %551\l  %556 = xor i32 %555, %547\l  %557 = add i32 %416, 1449748\l  %558 = add i32 %556, %557\l  %559 = lshr i32 %558, 11\l  %560 = zext i32 %559 to i64\l  %561 = shl nuw nsw i64 %560, 32\l  %562 = zext i32 %549 to i64\l  %563 = or i64 %561, %562\l  %564 = uitofp i64 %563 to double\l  %565 = fmul contract double %564, 0x3CA0000000000000\l  %566 = fadd contract double %565, 0x3CA0000000000000\l  %567 = fmul contract double %147, %536\l  %568 = fsub contract double %148, %567\l  %569 = fmul double %568, 0x3FF71547652B82FE\l  %570 = tail call double @llvm.rint.f64(double %569)\l  %571 = fneg double %570\l  %572 = tail call double @llvm.fma.f64(double %571, double\l... 0x3FE62E42FEFA39EF, double %568)\l  %573 = tail call double @llvm.fma.f64(double %571, double\l... 0x3C7ABC9E3B39803F, double %572)\l  %574 = tail call double @llvm.fma.f64(double %573, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %575 = tail call double @llvm.fma.f64(double %573, double %574, double\l... 0x3EC71DEE623FDE64)\l  %576 = tail call double @llvm.fma.f64(double %573, double %575, double\l... 0x3EFA01997C89E6B0)\l  %577 = tail call double @llvm.fma.f64(double %573, double %576, double\l... 0x3F2A01A014761F6E)\l  %578 = tail call double @llvm.fma.f64(double %573, double %577, double\l... 0x3F56C16C1852B7B0)\l  %579 = tail call double @llvm.fma.f64(double %573, double %578, double\l... 0x3F81111111122322)\l  %580 = tail call double @llvm.fma.f64(double %573, double %579, double\l... 0x3FA55555555502A1)\l  %581 = tail call double @llvm.fma.f64(double %573, double %580, double\l... 0x3FC5555555555511)\l  %582 = tail call double @llvm.fma.f64(double %573, double %581, double\l... 0x3FE000000000000B)\l  %583 = tail call double @llvm.fma.f64(double %573, double %582, double\l... 1.000000e+00)\l  %584 = tail call double @llvm.fma.f64(double %573, double %583, double\l... 1.000000e+00)\l  %585 = fptosi double %570 to i32\l  %586 = tail call double @llvm.amdgcn.ldexp.f64(double %584, i32 %585)\l  %587 = fcmp ogt double %568, 1.024000e+03\l  %588 = fcmp olt double %568, -1.075000e+03\l  %589 = fadd contract double %586, 1.000000e+00\l  %590 = select i1 %587, double 0x7FF0000000000000, double %589\l  %591 = select i1 %588, double 1.000000e+00, double %590\l  %592 = fmul contract double %591, %591\l  %593 = fdiv contract double %566, %592\l  %594 = tail call double @llvm.amdgcn.frexp.mant.f64(double %593)\l  %595 = fcmp olt double %594, 0x3FE5555555555555\l  %596 = zext i1 %595 to i32\l  %597 = tail call double @llvm.amdgcn.ldexp.f64(double %594, i32 %596)\l  %598 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %593)\l  %599 = sub nsw i32 %598, %596\l  %600 = fadd double %597, -1.000000e+00\l  %601 = fadd double %597, 1.000000e+00\l  %602 = fadd double %601, -1.000000e+00\l  %603 = fsub double %597, %602\l  %604 = tail call double @llvm.amdgcn.rcp.f64(double %601)\l  %605 = fneg double %601\l  %606 = tail call double @llvm.fma.f64(double %605, double %604, double\l... 1.000000e+00)\l  %607 = tail call double @llvm.fma.f64(double %606, double %604, double %604)\l  %608 = tail call double @llvm.fma.f64(double %605, double %607, double\l... 1.000000e+00)\l  %609 = tail call double @llvm.fma.f64(double %608, double %607, double %607)\l  %610 = fmul double %600, %609\l  %611 = fmul double %601, %610\l  %612 = fneg double %611\l  %613 = tail call double @llvm.fma.f64(double %610, double %601, double %612)\l  %614 = tail call double @llvm.fma.f64(double %610, double %603, double %613)\l  %615 = fadd double %611, %614\l  %616 = fsub double %615, %611\l  %617 = fsub double %614, %616\l  %618 = fsub double %600, %615\l  %619 = fsub double %600, %618\l  %620 = fsub double %619, %615\l  %621 = fsub double %620, %617\l  %622 = fadd double %618, %621\l  %623 = fmul double %609, %622\l  %624 = fadd double %610, %623\l  %625 = fsub double %624, %610\l  %626 = fsub double %623, %625\l  %627 = fmul double %624, %624\l  %628 = tail call double @llvm.fma.f64(double %627, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %629 = tail call double @llvm.fma.f64(double %627, double %628, double\l... 0x3FC7474DD7F4DF2E)\l  %630 = tail call double @llvm.fma.f64(double %627, double %629, double\l... 0x3FCC71C016291751)\l  %631 = tail call double @llvm.fma.f64(double %627, double %630, double\l... 0x3FD249249B27ACF1)\l  %632 = tail call double @llvm.fma.f64(double %627, double %631, double\l... 0x3FD99999998EF7B6)\l  %633 = tail call double @llvm.fma.f64(double %627, double %632, double\l... 0x3FE5555555555780)\l  %634 = tail call double @llvm.amdgcn.ldexp.f64(double %624, i32 1)\l  %635 = tail call double @llvm.amdgcn.ldexp.f64(double %626, i32 1)\l  %636 = fmul double %624, %627\l  %637 = fmul double %636, %633\l  %638 = fadd double %634, %637\l  %639 = fsub double %638, %634\l  %640 = fsub double %637, %639\l  %641 = fadd double %635, %640\l  %642 = fadd double %638, %641\l  %643 = fsub double %642, %638\l  %644 = fsub double %641, %643\l  %645 = sitofp i32 %599 to double\l  %646 = fmul double %645, 0x3FE62E42FEFA39EF\l  %647 = fneg double %646\l  %648 = tail call double @llvm.fma.f64(double %645, double\l... 0x3FE62E42FEFA39EF, double %647)\l  %649 = tail call double @llvm.fma.f64(double %645, double\l... 0x3C7ABC9E3B39803F, double %648)\l  %650 = fadd double %646, %649\l  %651 = fsub double %650, %646\l  %652 = fsub double %649, %651\l  %653 = fadd double %650, %642\l  %654 = fsub double %653, %650\l  %655 = fsub double %653, %654\l  %656 = fsub double %650, %655\l  %657 = fsub double %642, %654\l  %658 = fadd double %657, %656\l  %659 = fadd double %652, %644\l  %660 = fsub double %659, %652\l  %661 = fsub double %659, %660\l  %662 = fsub double %652, %661\l  %663 = fsub double %644, %660\l  %664 = fadd double %663, %662\l  %665 = fadd double %659, %658\l  %666 = fadd double %653, %665\l  %667 = fsub double %666, %653\l  %668 = fsub double %665, %667\l  %669 = fadd double %664, %668\l  %670 = fadd double %666, %669\l  %671 = tail call double @llvm.fabs.f64(double %593) #3\l  %672 = fcmp oeq double %671, 0x7FF0000000000000\l  %673 = select i1 %672, double %593, double %670\l  %674 = fcmp oeq double %593, 0.000000e+00\l  %675 = select i1 %674, double 0xFFF0000000000000, double %673\l  %676 = fadd contract double %568, %675\l  %677 = fmul contract double %402, %538\l  %678 = fadd contract double %318, %677\l  %679 = fadd contract double %538, 1.000000e+00\l  %680 = fadd contract double %679, -1.000000e+00\l  %681 = fadd contract double %680, 8.000000e+00\l  %682 = fdiv contract double 0x3E8435508F3FAEEF, %681\l  %683 = fadd contract double %682, 0.000000e+00\l  %684 = fadd contract double %680, 7.000000e+00\l  %685 = fdiv contract double 0x3EE4F0514E4E324F, %684\l  %686 = fadd contract double %685, %683\l  %687 = fadd contract double %680, 6.000000e+00\l  %688 = fdiv contract double 0x3FC1BCB2992B2855, %687\l  %689 = fsub contract double %686, %688\l  %690 = fadd contract double %680, 5.000000e+00\l  %691 = fdiv contract double 0x402903C27F8B9C81, %690\l  %692 = fadd contract double %691, %689\l  %693 = fadd contract double %680, 4.000000e+00\l  %694 = fdiv contract double 0x406613AE51A32F5D, %693\l  %695 = fsub contract double %692, %694\l  %696 = fadd contract double %680, 3.000000e+00\l  %697 = fdiv contract double 0x40881A9661D3B4D8, %696\l  %698 = fadd contract double %697, %695\l  %699 = fadd contract double %680, 2.000000e+00\l  %700 = fdiv contract double 0x4093AC8E8ED4171B, %699\l  %701 = fsub contract double %698, %700\l  %702 = fadd contract double %680, 1.000000e+00\l  %703 = fdiv contract double 0x40852429B6C30B05, %702\l  %704 = fadd contract double %703, %701\l  %705 = fadd contract double %704, 0x3FEFFFFFFFFFF950\l  %706 = tail call double @llvm.amdgcn.frexp.mant.f64(double %705)\l  %707 = fcmp olt double %706, 0x3FE5555555555555\l  %708 = zext i1 %707 to i32\l  %709 = tail call double @llvm.amdgcn.ldexp.f64(double %706, i32 %708)\l  %710 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %705)\l  %711 = sub nsw i32 %710, %708\l  %712 = fadd double %709, -1.000000e+00\l  %713 = fadd double %709, 1.000000e+00\l  %714 = fadd double %713, -1.000000e+00\l  %715 = fsub double %709, %714\l  %716 = tail call double @llvm.amdgcn.rcp.f64(double %713)\l  %717 = fneg double %713\l  %718 = tail call double @llvm.fma.f64(double %717, double %716, double\l... 1.000000e+00)\l  %719 = tail call double @llvm.fma.f64(double %718, double %716, double %716)\l  %720 = tail call double @llvm.fma.f64(double %717, double %719, double\l... 1.000000e+00)\l  %721 = tail call double @llvm.fma.f64(double %720, double %719, double %719)\l  %722 = fmul double %712, %721\l  %723 = fmul double %713, %722\l  %724 = fneg double %723\l  %725 = tail call double @llvm.fma.f64(double %722, double %713, double %724)\l  %726 = tail call double @llvm.fma.f64(double %722, double %715, double %725)\l  %727 = fadd double %723, %726\l  %728 = fsub double %727, %723\l  %729 = fsub double %726, %728\l  %730 = fsub double %712, %727\l  %731 = fsub double %712, %730\l  %732 = fsub double %731, %727\l  %733 = fsub double %732, %729\l  %734 = fadd double %730, %733\l  %735 = fmul double %721, %734\l  %736 = fadd double %722, %735\l  %737 = fsub double %736, %722\l  %738 = fsub double %735, %737\l  %739 = fmul double %736, %736\l  %740 = tail call double @llvm.fma.f64(double %739, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %741 = tail call double @llvm.fma.f64(double %739, double %740, double\l... 0x3FC7474DD7F4DF2E)\l  %742 = tail call double @llvm.fma.f64(double %739, double %741, double\l... 0x3FCC71C016291751)\l  %743 = tail call double @llvm.fma.f64(double %739, double %742, double\l... 0x3FD249249B27ACF1)\l  %744 = tail call double @llvm.fma.f64(double %739, double %743, double\l... 0x3FD99999998EF7B6)\l  %745 = tail call double @llvm.fma.f64(double %739, double %744, double\l... 0x3FE5555555555780)\l  %746 = tail call double @llvm.amdgcn.ldexp.f64(double %736, i32 1)\l  %747 = tail call double @llvm.amdgcn.ldexp.f64(double %738, i32 1)\l  %748 = fmul double %736, %739\l  %749 = fmul double %748, %745\l  %750 = fadd double %746, %749\l  %751 = fsub double %750, %746\l  %752 = fsub double %749, %751\l  %753 = fadd double %747, %752\l  %754 = fadd double %750, %753\l  %755 = fsub double %754, %750\l  %756 = fsub double %753, %755\l  %757 = sitofp i32 %711 to double\l  %758 = fmul double %757, 0x3FE62E42FEFA39EF\l  %759 = fneg double %758\l  %760 = tail call double @llvm.fma.f64(double %757, double\l... 0x3FE62E42FEFA39EF, double %759)\l  %761 = tail call double @llvm.fma.f64(double %757, double\l... 0x3C7ABC9E3B39803F, double %760)\l  %762 = fadd double %758, %761\l  %763 = fsub double %762, %758\l  %764 = fsub double %761, %763\l  %765 = fadd double %762, %754\l  %766 = fsub double %765, %762\l  %767 = fsub double %765, %766\l  %768 = fsub double %762, %767\l  %769 = fsub double %754, %766\l  %770 = fadd double %769, %768\l  %771 = fadd double %764, %756\l  %772 = fsub double %771, %764\l  %773 = fsub double %771, %772\l  %774 = fsub double %764, %773\l  %775 = fsub double %756, %772\l  %776 = fadd double %775, %774\l  %777 = fadd double %771, %770\l  %778 = fadd double %765, %777\l  %779 = fsub double %778, %765\l  %780 = fsub double %777, %779\l  %781 = fadd double %776, %780\l  %782 = fadd double %778, %781\l  %783 = tail call double @llvm.fabs.f64(double %705) #3\l  %784 = fcmp oeq double %783, 0x7FF0000000000000\l  %785 = select i1 %784, double %705, double %782\l  %786 = fcmp olt double %705, 0.000000e+00\l  %787 = fcmp oeq double %705, 0.000000e+00\l  %788 = fadd contract double %785, 0x3FED67F1C864BEB5\l  %789 = fadd contract double %788, -7.000000e+00\l  %790 = select i1 %786, double 0x7FF8000000000000, double %789\l  %791 = select i1 %787, double 0xFFF0000000000000, double %790\l  %792 = fadd contract double %680, 5.000000e-01\l  %793 = fadd contract double %684, 5.000000e-01\l  %794 = fdiv contract double %793, 0x4005BF0A8B145769\l  %795 = tail call double @llvm.amdgcn.frexp.mant.f64(double %794)\l  %796 = fcmp olt double %795, 0x3FE5555555555555\l  %797 = zext i1 %796 to i32\l  %798 = tail call double @llvm.amdgcn.ldexp.f64(double %795, i32 %797)\l  %799 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %794)\l  %800 = sub nsw i32 %799, %797\l  %801 = fadd double %798, -1.000000e+00\l  %802 = fadd double %798, 1.000000e+00\l  %803 = fadd double %802, -1.000000e+00\l  %804 = fsub double %798, %803\l  %805 = tail call double @llvm.amdgcn.rcp.f64(double %802)\l  %806 = fneg double %802\l  %807 = tail call double @llvm.fma.f64(double %806, double %805, double\l... 1.000000e+00)\l  %808 = tail call double @llvm.fma.f64(double %807, double %805, double %805)\l  %809 = tail call double @llvm.fma.f64(double %806, double %808, double\l... 1.000000e+00)\l  %810 = tail call double @llvm.fma.f64(double %809, double %808, double %808)\l  %811 = fmul double %801, %810\l  %812 = fmul double %802, %811\l  %813 = fneg double %812\l  %814 = tail call double @llvm.fma.f64(double %811, double %802, double %813)\l  %815 = tail call double @llvm.fma.f64(double %811, double %804, double %814)\l  %816 = fadd double %812, %815\l  %817 = fsub double %816, %812\l  %818 = fsub double %815, %817\l  %819 = fsub double %801, %816\l  %820 = fsub double %801, %819\l  %821 = fsub double %820, %816\l  %822 = fsub double %821, %818\l  %823 = fadd double %819, %822\l  %824 = fmul double %810, %823\l  %825 = fadd double %811, %824\l  %826 = fsub double %825, %811\l  %827 = fsub double %824, %826\l  %828 = fmul double %825, %825\l  %829 = tail call double @llvm.fma.f64(double %828, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %830 = tail call double @llvm.fma.f64(double %828, double %829, double\l... 0x3FC7474DD7F4DF2E)\l  %831 = tail call double @llvm.fma.f64(double %828, double %830, double\l... 0x3FCC71C016291751)\l  %832 = tail call double @llvm.fma.f64(double %828, double %831, double\l... 0x3FD249249B27ACF1)\l  %833 = tail call double @llvm.fma.f64(double %828, double %832, double\l... 0x3FD99999998EF7B6)\l  %834 = tail call double @llvm.fma.f64(double %828, double %833, double\l... 0x3FE5555555555780)\l  %835 = tail call double @llvm.amdgcn.ldexp.f64(double %825, i32 1)\l  %836 = tail call double @llvm.amdgcn.ldexp.f64(double %827, i32 1)\l  %837 = fmul double %825, %828\l  %838 = fmul double %837, %834\l  %839 = fadd double %835, %838\l  %840 = fsub double %839, %835\l  %841 = fsub double %838, %840\l  %842 = fadd double %836, %841\l  %843 = fadd double %839, %842\l  %844 = fsub double %843, %839\l  %845 = fsub double %842, %844\l  %846 = sitofp i32 %800 to double\l  %847 = fmul double %846, 0x3FE62E42FEFA39EF\l  %848 = fneg double %847\l  %849 = tail call double @llvm.fma.f64(double %846, double\l... 0x3FE62E42FEFA39EF, double %848)\l  %850 = tail call double @llvm.fma.f64(double %846, double\l... 0x3C7ABC9E3B39803F, double %849)\l  %851 = fadd double %847, %850\l  %852 = fsub double %851, %847\l  %853 = fsub double %850, %852\l  %854 = fadd double %851, %843\l  %855 = fsub double %854, %851\l  %856 = fsub double %854, %855\l  %857 = fsub double %851, %856\l  %858 = fsub double %843, %855\l  %859 = fadd double %858, %857\l  %860 = fadd double %853, %845\l  %861 = fsub double %860, %853\l  %862 = fsub double %860, %861\l  %863 = fsub double %853, %862\l  %864 = fsub double %845, %861\l  %865 = fadd double %864, %863\l  %866 = fadd double %860, %859\l  %867 = fadd double %854, %866\l  %868 = fsub double %867, %854\l  %869 = fsub double %866, %868\l  %870 = fadd double %865, %869\l  %871 = fadd double %867, %870\l  %872 = tail call double @llvm.fabs.f64(double %794) #3\l  %873 = fcmp oeq double %872, 0x7FF0000000000000\l  %874 = select i1 %873, double %794, double %871\l  %875 = fcmp olt double %794, 0.000000e+00\l  %876 = select i1 %875, double 0x7FF8000000000000, double %874\l  %877 = fcmp oeq double %794, 0.000000e+00\l  %878 = select i1 %877, double 0xFFF0000000000000, double %876\l  %879 = fmul contract double %792, %878\l  %880 = fadd contract double %879, %791\l  %881 = fsub contract double %678, %880\l  %882 = fcmp contract ole double %676, %881\l  %883 = fptoui double %538 to i32\l  %884 = zext i1 %882 to i32\l  %885 = select i1 %882, i32 %883, i32 %422\l  br label %886\l}"];
	Node0x5f641f0 -> Node0x5f64160;
	Node0x5f64160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%886:\l886:                                              \l  %887 = phi i32 [ %557, %540 ], [ %439, %415 ]\l  %888 = phi i32 [ %556, %540 ], [ %438, %415 ]\l  %889 = phi i32 [ %547, %540 ], [ %429, %415 ]\l  %890 = phi i32 [ %438, %540 ], [ %417, %415 ]\l  %891 = phi i32 [ %429, %540 ], [ %418, %415 ]\l  %892 = phi i32 [ %417, %540 ], [ %419, %415 ]\l  %893 = phi i32 [ %884, %540 ], [ 2, %415 ]\l  %894 = phi i32 [ %885, %540 ], [ %422, %415 ]\l  switch i32 %893, label %896 [\l    i32 0, label %895\l    i32 2, label %895\l  ]\l|{<s0>def|<s1>0|<s2>2}}"];
	Node0x5f64160:s0 -> Node0x5f747d0;
	Node0x5f64160:s1 -> Node0x5f5d6b0;
	Node0x5f64160:s2 -> Node0x5f5d6b0;
	Node0x5f5d6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%895:\l895:                                              \l  br label %415, !llvm.loop !27\l}"];
	Node0x5f5d6b0 -> Node0x5f5d5b0;
	Node0x5f747d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%896:\l896:                                              \l  store i32 %892, i32 addrspace(1)* %403, align 8, !tbaa !16\l  store i32 %891, i32 addrspace(1)* %404, align 4, !tbaa !16\l  store i32 %890, i32 addrspace(1)* %405, align 8, !tbaa !16\l  store i32 %889, i32 addrspace(1)* %406, align 4, !tbaa !16\l  store i32 %888, i32 addrspace(1)* %407, align 8, !tbaa !16\l  store i32 %887, i32 addrspace(1)* %408, align 8, !tbaa !20\l  br label %1155\l}"];
	Node0x5f747d0 -> Node0x5f4cea0;
	Node0x5f4ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%897:\l897:                                              \l  %898 = getelementptr %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 2\l  %899 = load i32, i32 addrspace(1)* %898, align 8, !tbaa !28\l  %900 = icmp eq i32 %899, 0\l  br i1 %900, label %906, label %901\l|{<s0>T|<s1>F}}"];
	Node0x5f4ec70:s0 -> Node0x5f5da30;
	Node0x5f4ec70:s1 -> Node0x5f5d910;
	Node0x5f5d910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%901:\l901:                                              \l  store i32 0, i32 addrspace(1)* %898, align 8, !tbaa !28\l  %902 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 4\l  %903 = load double, double addrspace(1)* %902, align 8, !tbaa !29,\l... !amdgpu.noclobber !14\l  %904 = fptrunc double %903 to float\l  %905 = fpext float %904 to double\l  br label %1127\l}"];
	Node0x5f5d910 -> Node0x5f75f60;
	Node0x5f5da30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%906:\l906:                                              \l  %907 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 0\l  %908 = load i32, i32 addrspace(1)* %907, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %909 = lshr i32 %908, 2\l  %910 = xor i32 %909, %908\l  %911 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 1\l  %912 = load i32, i32 addrspace(1)* %911, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %913 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 2\l  %914 = load i32, i32 addrspace(1)* %913, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %915 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 3\l  %916 = load i32, i32 addrspace(1)* %915, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %917 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 4\l  %918 = load i32, i32 addrspace(1)* %917, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %919 = shl i32 %918, 4\l  %920 = shl i32 %910, 1\l  %921 = xor i32 %920, %919\l  %922 = xor i32 %921, %910\l  %923 = xor i32 %922, %918\l  %924 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %42, i64 0, i32 0, i32 0, i32 0\l  %925 = load i32, i32 addrspace(1)* %924, align 8, !tbaa !20,\l... !amdgpu.noclobber !14\l  %926 = add i32 %925, 362437\l  %927 = add i32 %926, %923\l  %928 = lshr i32 %912, 2\l  %929 = xor i32 %928, %912\l  %930 = shl i32 %923, 4\l  %931 = shl i32 %929, 1\l  %932 = xor i32 %931, %930\l  %933 = xor i32 %932, %929\l  %934 = xor i32 %933, %923\l  %935 = add i32 %925, 724874\l  %936 = add i32 %935, %934\l  %937 = lshr i32 %914, 2\l  %938 = xor i32 %937, %914\l  %939 = shl i32 %934, 4\l  %940 = shl i32 %938, 1\l  %941 = xor i32 %940, %939\l  %942 = xor i32 %941, %938\l  %943 = xor i32 %942, %934\l  %944 = add i32 %925, 1087311\l  %945 = add i32 %944, %943\l  %946 = lshr i32 %916, 2\l  %947 = xor i32 %946, %916\l  store i32 %918, i32 addrspace(1)* %907, align 8, !tbaa !16\l  store i32 %923, i32 addrspace(1)* %911, align 4, !tbaa !16\l  store i32 %934, i32 addrspace(1)* %913, align 8, !tbaa !16\l  store i32 %943, i32 addrspace(1)* %915, align 4, !tbaa !16\l  %948 = shl i32 %943, 4\l  %949 = shl i32 %947, 1\l  %950 = xor i32 %949, %948\l  %951 = xor i32 %950, %947\l  %952 = xor i32 %951, %943\l  store i32 %952, i32 addrspace(1)* %917, align 8, !tbaa !16\l  %953 = add i32 %925, 1449748\l  store i32 %953, i32 addrspace(1)* %924, align 8, !tbaa !20\l  %954 = add i32 %952, %953\l  %955 = zext i32 %927 to i64\l  %956 = zext i32 %936 to i64\l  %957 = shl nuw nsw i64 %956, 21\l  %958 = xor i64 %957, %955\l  %959 = uitofp i64 %958 to double\l  %960 = fmul contract double %959, 0x3CA0000000000000\l  %961 = fadd contract double %960, 0x3CA0000000000000\l  %962 = zext i32 %945 to i64\l  %963 = zext i32 %954 to i64\l  %964 = shl nuw nsw i64 %963, 21\l  %965 = xor i64 %964, %962\l  %966 = uitofp i64 %965 to double\l  %967 = fmul contract double %966, 0x3CB0000000000000\l  %968 = fadd contract double %967, 0x3CB0000000000000\l  %969 = tail call double @llvm.amdgcn.frexp.mant.f64(double %961)\l  %970 = fcmp olt double %969, 0x3FE5555555555555\l  %971 = zext i1 %970 to i32\l  %972 = tail call double @llvm.amdgcn.ldexp.f64(double %969, i32 %971)\l  %973 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %961)\l  %974 = sub nsw i32 %973, %971\l  %975 = fadd double %972, -1.000000e+00\l  %976 = fadd double %972, 1.000000e+00\l  %977 = fadd double %976, -1.000000e+00\l  %978 = fsub double %972, %977\l  %979 = tail call double @llvm.amdgcn.rcp.f64(double %976)\l  %980 = fneg double %976\l  %981 = tail call double @llvm.fma.f64(double %980, double %979, double\l... 1.000000e+00)\l  %982 = tail call double @llvm.fma.f64(double %981, double %979, double %979)\l  %983 = tail call double @llvm.fma.f64(double %980, double %982, double\l... 1.000000e+00)\l  %984 = tail call double @llvm.fma.f64(double %983, double %982, double %982)\l  %985 = fmul double %975, %984\l  %986 = fmul double %976, %985\l  %987 = fneg double %986\l  %988 = tail call double @llvm.fma.f64(double %985, double %976, double %987)\l  %989 = tail call double @llvm.fma.f64(double %985, double %978, double %988)\l  %990 = fadd double %986, %989\l  %991 = fsub double %990, %986\l  %992 = fsub double %989, %991\l  %993 = fsub double %975, %990\l  %994 = fsub double %975, %993\l  %995 = fsub double %994, %990\l  %996 = fsub double %995, %992\l  %997 = fadd double %993, %996\l  %998 = fmul double %984, %997\l  %999 = fadd double %985, %998\l  %1000 = fsub double %999, %985\l  %1001 = fsub double %998, %1000\l  %1002 = fmul double %999, %999\l  %1003 = tail call double @llvm.fma.f64(double %1002, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %1004 = tail call double @llvm.fma.f64(double %1002, double %1003, double\l... 0x3FC7474DD7F4DF2E)\l  %1005 = tail call double @llvm.fma.f64(double %1002, double %1004, double\l... 0x3FCC71C016291751)\l  %1006 = tail call double @llvm.fma.f64(double %1002, double %1005, double\l... 0x3FD249249B27ACF1)\l  %1007 = tail call double @llvm.fma.f64(double %1002, double %1006, double\l... 0x3FD99999998EF7B6)\l  %1008 = tail call double @llvm.fma.f64(double %1002, double %1007, double\l... 0x3FE5555555555780)\l  %1009 = tail call double @llvm.amdgcn.ldexp.f64(double %999, i32 1)\l  %1010 = tail call double @llvm.amdgcn.ldexp.f64(double %1001, i32 1)\l  %1011 = fmul double %999, %1002\l  %1012 = fmul double %1011, %1008\l  %1013 = fadd double %1009, %1012\l  %1014 = fsub double %1013, %1009\l  %1015 = fsub double %1012, %1014\l  %1016 = fadd double %1010, %1015\l  %1017 = fadd double %1013, %1016\l  %1018 = fsub double %1017, %1013\l  %1019 = fsub double %1016, %1018\l  %1020 = sitofp i32 %974 to double\l  %1021 = fmul double %1020, 0x3FE62E42FEFA39EF\l  %1022 = fneg double %1021\l  %1023 = tail call double @llvm.fma.f64(double %1020, double\l... 0x3FE62E42FEFA39EF, double %1022)\l  %1024 = tail call double @llvm.fma.f64(double %1020, double\l... 0x3C7ABC9E3B39803F, double %1023)\l  %1025 = fadd double %1021, %1024\l  %1026 = fsub double %1025, %1021\l  %1027 = fsub double %1024, %1026\l  %1028 = fadd double %1025, %1017\l  %1029 = fsub double %1028, %1025\l  %1030 = fsub double %1028, %1029\l  %1031 = fsub double %1025, %1030\l  %1032 = fsub double %1017, %1029\l  %1033 = fadd double %1032, %1031\l  %1034 = fadd double %1027, %1019\l  %1035 = fsub double %1034, %1027\l  %1036 = fsub double %1034, %1035\l  %1037 = fsub double %1027, %1036\l  %1038 = fsub double %1019, %1035\l  %1039 = fadd double %1038, %1037\l  %1040 = fadd double %1034, %1033\l  %1041 = fadd double %1028, %1040\l  %1042 = fsub double %1041, %1028\l  %1043 = fsub double %1040, %1042\l  %1044 = fadd double %1039, %1043\l  %1045 = fadd double %1041, %1044\l  %1046 = fcmp oeq double %961, 0x7FF0000000000000\l  %1047 = select i1 %1046, double %961, double %1045\l  %1048 = fcmp oeq double %961, 0.000000e+00\l  %1049 = fmul contract double %1047, -2.000000e+00\l  %1050 = select i1 %1048, double 0x7FF0000000000000, double %1049\l  %1051 = fcmp olt double %1050, 0x1000000000000000\l  %1052 = select i1 %1051, double 0x4FF0000000000000, double 1.000000e+00\l  %1053 = fmul double %1050, %1052\l  %1054 = tail call double @llvm.amdgcn.rsq.f64(double %1053)\l  %1055 = fmul double %1053, %1054\l  %1056 = fmul double %1054, 5.000000e-01\l  %1057 = fneg double %1056\l  %1058 = tail call double @llvm.fma.f64(double %1057, double %1055, double\l... 5.000000e-01)\l  %1059 = tail call double @llvm.fma.f64(double %1056, double %1058, double\l... %1056)\l  %1060 = tail call double @llvm.fma.f64(double %1055, double %1058, double\l... %1055)\l  %1061 = fneg double %1060\l  %1062 = tail call double @llvm.fma.f64(double %1061, double %1060, double\l... %1053)\l  %1063 = tail call double @llvm.fma.f64(double %1062, double %1059, double\l... %1060)\l  %1064 = fneg double %1063\l  %1065 = tail call double @llvm.fma.f64(double %1064, double %1063, double\l... %1053)\l  %1066 = tail call double @llvm.fma.f64(double %1065, double %1059, double\l... %1063)\l  %1067 = select i1 %1051, double 0x37F0000000000000, double 1.000000e+00\l  %1068 = fmul double %1067, %1066\l  %1069 = fcmp oeq double %1053, 0.000000e+00\l  %1070 = fcmp oeq double %1053, 0x7FF0000000000000\l  %1071 = or i1 %1069, %1070\l  %1072 = select i1 %1071, double %1053, double %1068\l  %1073 = fmul double %968, 5.000000e-01\l  %1074 = tail call double @llvm.amdgcn.fract.f64(double %1073)\l  %1075 = tail call i1 @llvm.amdgcn.class.f64(double %1073, i32 516)\l  %1076 = fmul double %1074, 2.000000e+00\l  %1077 = select i1 %1075, double 0.000000e+00, double %1076\l  %1078 = fcmp ogt double %968, 1.000000e+00\l  %1079 = select i1 %1078, double %1077, double %968\l  %1080 = fmul double %1079, 2.000000e+00\l  %1081 = tail call double @llvm.rint.f64(double %1080)\l  %1082 = tail call double @llvm.fma.f64(double %1081, double -5.000000e-01,\l... double %1079)\l  %1083 = fptosi double %1081 to i32\l  %1084 = fmul double %1082, %1082\l  %1085 = tail call double @llvm.fma.f64(double %1084, double\l... 0x3F3E357EF99EB0BB, double 0xBF7E2FE76FDFFD2B)\l  %1086 = tail call double @llvm.fma.f64(double %1084, double %1085, double\l... 0x3FB50782D5F14825)\l  %1087 = tail call double @llvm.fma.f64(double %1084, double %1086, double\l... 0xBFE32D2CCDFE9424)\l  %1088 = tail call double @llvm.fma.f64(double %1084, double %1087, double\l... 0x400466BC67754FFF)\l  %1089 = tail call double @llvm.fma.f64(double %1084, double %1088, double\l... 0xC014ABBCE625BE09)\l  %1090 = fmul double %1082, %1084\l  %1091 = fmul double %1090, %1089\l  %1092 = tail call double @llvm.fma.f64(double %1082, double\l... 0x400921FB54442D18, double %1091)\l  %1093 = tail call double @llvm.fma.f64(double %1084, double\l... 0xBF1B167302E21C33, double 0x3F5F9C89CA1D4F33)\l  %1094 = tail call double @llvm.fma.f64(double %1084, double %1093, double\l... 0xBF9A6D1E7294BFF9)\l  %1095 = tail call double @llvm.fma.f64(double %1084, double %1094, double\l... 0x3FCE1F5067B90B37)\l  %1096 = tail call double @llvm.fma.f64(double %1084, double %1095, double\l... 0xBFF55D3C7E3C325B)\l  %1097 = tail call double @llvm.fma.f64(double %1084, double %1096, double\l... 0x40103C1F081B5A67)\l  %1098 = tail call double @llvm.fma.f64(double %1084, double %1097, double\l... 0xC013BD3CC9BE45DE)\l  %1099 = tail call double @llvm.fma.f64(double %1084, double %1098, double\l... 1.000000e+00)\l  %1100 = shl i32 %1083, 30\l  %1101 = and i32 %1100, -2147483648\l  %1102 = and i32 %1083, 1\l  %1103 = icmp eq i32 %1102, 0\l  %1104 = select i1 %1103, double %1092, double %1099\l  %1105 = bitcast double %1104 to \<2 x i32\>\l  %1106 = bitcast double %968 to \<2 x i32\>\l  %1107 = extractelement \<2 x i32\> %1106, i64 1\l  %1108 = and i32 %1107, -2147483648\l  %1109 = extractelement \<2 x i32\> %1105, i64 1\l  %1110 = xor i32 %1108, %1109\l  %1111 = xor i32 %1110, %1101\l  %1112 = insertelement \<2 x i32\> %1105, i32 %1111, i64 1\l  %1113 = fneg double %1092\l  %1114 = select i1 %1103, double %1099, double %1113\l  %1115 = bitcast double %1114 to \<2 x i32\>\l  %1116 = extractelement \<2 x i32\> %1115, i64 1\l  %1117 = xor i32 %1116, %1101\l  %1118 = insertelement \<2 x i32\> %1115, i32 %1117, i64 1\l  %1119 = tail call i1 @llvm.amdgcn.class.f64(double %968, i32 516)\l  %1120 = select i1 %1119, \<2 x i32\> \<i32 0, i32 2146959360\>, \<2 x i32\> %1118\l  %1121 = select i1 %1119, \<2 x i32\> \<i32 0, i32 2146959360\>, \<2 x i32\> %1112\l  %1122 = bitcast \<2 x i32\> %1121 to double\l  %1123 = bitcast \<2 x i32\> %1120 to double\l  %1124 = fmul contract double %1072, %1122\l  %1125 = fmul contract double %1072, %1123\l  store i32 1, i32 addrspace(1)* %898, align 8, !tbaa !28\l  %1126 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 4\l  store double %1125, double addrspace(1)* %1126, align 8, !tbaa !29\l  br label %1127\l}"];
	Node0x5f5da30 -> Node0x5f75f60;
	Node0x5f75f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%1127:\l1127:                                             \l  %1128 = phi double [ %905, %901 ], [ %1124, %906 ]\l  %1129 = fcmp olt double %3, 0x1000000000000000\l  %1130 = select i1 %1129, double 0x4FF0000000000000, double 1.000000e+00\l  %1131 = fmul double %1130, %3\l  %1132 = tail call double @llvm.amdgcn.rsq.f64(double %1131)\l  %1133 = fmul double %1131, %1132\l  %1134 = fmul double %1132, 5.000000e-01\l  %1135 = fneg double %1134\l  %1136 = tail call double @llvm.fma.f64(double %1135, double %1133, double\l... 5.000000e-01)\l  %1137 = tail call double @llvm.fma.f64(double %1134, double %1136, double\l... %1134)\l  %1138 = tail call double @llvm.fma.f64(double %1133, double %1136, double\l... %1133)\l  %1139 = fneg double %1138\l  %1140 = tail call double @llvm.fma.f64(double %1139, double %1138, double\l... %1131)\l  %1141 = tail call double @llvm.fma.f64(double %1140, double %1137, double\l... %1138)\l  %1142 = fneg double %1141\l  %1143 = tail call double @llvm.fma.f64(double %1142, double %1141, double\l... %1131)\l  %1144 = tail call double @llvm.fma.f64(double %1143, double %1137, double\l... %1141)\l  %1145 = select i1 %1129, double 0x37F0000000000000, double 1.000000e+00\l  %1146 = fmul double %1145, %1144\l  %1147 = fcmp oeq double %1131, 0.000000e+00\l  %1148 = fcmp oeq double %1131, 0x7FF0000000000000\l  %1149 = or i1 %1147, %1148\l  %1150 = select i1 %1149, double %1131, double %1146\l  %1151 = fmul contract double %1150, %1128\l  %1152 = fadd contract double %1151, %3\l  %1153 = tail call double @llvm.round.f64(double %1152)\l  %1154 = fptoui double %1153 to i32\l  br label %1155\l}"];
	Node0x5f75f60 -> Node0x5f4cea0;
	Node0x5f4cea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1155:\l1155:                                             \l  %1156 = phi i32 [ %87, %118 ], [ %894, %896 ], [ %1154, %1127 ]\l  %1157 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  store i32 %1156, i32 addrspace(1)* %1157, align 4, !tbaa !16\l  br label %1158\l}"];
	Node0x5f4cea0 -> Node0x5f48480;
	Node0x5f48480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1158:\l1158:                                             \l  ret void\l}"];
}
