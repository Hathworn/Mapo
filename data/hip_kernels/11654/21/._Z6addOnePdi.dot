digraph "CFG for '_Z6addOnePdi' function" {
	label="CFG for '_Z6addOnePdi' function";

	Node0x4eef690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = mul i32 %17, %4\l  %19 = add i32 %18, %3\l  %20 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !13, !invariant.load\l... !14\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr i8, i8 addrspace(4)* %5, i64 8\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %31 = mul i32 %19, %27\l  %32 = add i32 %31, %28\l  %33 = mul i32 %32, %23\l  %34 = add i32 %33, %29\l  %35 = mul i32 %34, %12\l  %36 = add i32 %35, %30\l  %37 = icmp slt i32 %36, %1\l  br i1 %37, label %38, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4eef690:s0 -> Node0x4ef1910;
	Node0x4eef690:s1 -> Node0x4ef3e50;
	Node0x4ef1910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%38:\l38:                                               \l  %39 = sext i32 %36 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %0, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %42 = fadd contract double %41, 1.000000e+00\l  store double %42, double addrspace(1)* %40, align 8, !tbaa !16\l  br label %43\l}"];
	Node0x4ef1910 -> Node0x4ef3e50;
	Node0x4ef3e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  ret void\l}"];
}
