digraph "CFG for '_Z12rexpo_kernelP12hiprandStatePfif' function" {
	label="CFG for '_Z12rexpo_kernelP12hiprandStatePfif' function";

	Node0x549cf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = mul i32 %21, %29\l  %34 = add i32 %33, %30\l  %35 = mul i32 %34, %25\l  %36 = add i32 %35, %31\l  %37 = mul i32 %36, %14\l  %38 = add i32 %37, %32\l  %39 = icmp slt i32 %38, %2\l  br i1 %39, label %40, label %82\l|{<s0>T|<s1>F}}"];
	Node0x549cf50:s0 -> Node0x549f010;
	Node0x549cf50:s1 -> Node0x54a1690;
	Node0x549f010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%40:\l40:                                               \l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 0\l  %43 = load i32, i32 addrspace(1)* %42, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  %44 = lshr i32 %43, 2\l  %45 = xor i32 %44, %43\l  %46 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 1\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %47, i32 addrspace(1)* %42, align 8, !tbaa !16\l  %48 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 2\l  %49 = load i32, i32 addrspace(1)* %48, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %49, i32 addrspace(1)* %46, align 4, !tbaa !16\l  %50 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 3\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %51, i32 addrspace(1)* %48, align 8, !tbaa !16\l  %52 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 5, i64 4\l  %53 = load i32, i32 addrspace(1)* %52, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %53, i32 addrspace(1)* %50, align 4, !tbaa !16\l  %54 = shl i32 %53, 4\l  %55 = shl i32 %45, 1\l  %56 = xor i32 %55, %54\l  %57 = xor i32 %56, %45\l  %58 = xor i32 %57, %53\l  store i32 %58, i32 addrspace(1)* %52, align 8, !tbaa !16\l  %59 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %41, i32 0, i32 0, i32 0\l  %60 = load i32, i32 addrspace(1)* %59, align 8, !tbaa !20, !amdgpu.noclobber\l... !14\l  %61 = add i32 %60, 362437\l  store i32 %61, i32 addrspace(1)* %59, align 8, !tbaa !20\l  %62 = add i32 %61, %58\l  %63 = uitofp i32 %62 to float\l  %64 = fmul contract float %63, 0x3DF0000000000000\l  %65 = fadd contract float %64, 0x3DF0000000000000\l  %66 = tail call i1 @llvm.amdgcn.class.f32(float %65, i32 144)\l  %67 = select i1 %66, float 0x41F0000000000000, float 1.000000e+00\l  %68 = fmul float %65, %67\l  %69 = tail call float @llvm.log2.f32(float %68)\l  %70 = fmul float %69, 0x3FE62E42E0000000\l  %71 = tail call i1 @llvm.amdgcn.class.f32(float %69, i32 519)\l  %72 = fneg float %70\l  %73 = tail call float @llvm.fma.f32(float %69, float 0x3FE62E42E0000000,\l... float %72)\l  %74 = tail call float @llvm.fma.f32(float %69, float 0x3E6EFA39E0000000,\l... float %73)\l  %75 = fadd float %70, %74\l  %76 = select i1 %71, float %69, float %75\l  %77 = select i1 %66, float 0x40362E4300000000, float 0.000000e+00\l  %78 = fsub float %76, %77\l  %79 = fneg contract float %78\l  %80 = fdiv contract float %79, %3\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %80, float addrspace(1)* %81, align 4, !tbaa !25\l  br label %82\l}"];
	Node0x549f010 -> Node0x54a1690;
	Node0x54a1690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
