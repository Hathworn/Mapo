digraph "CFG for '_Z23rnorm_all_in_one_kernelPfiff' function" {
	label="CFG for '_Z23rnorm_all_in_one_kernelPfiff' function";

	Node0x5fe3530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = mul i32 %21, %29\l  %34 = add i32 %33, %30\l  %35 = mul i32 %34, %25\l  %36 = add i32 %35, %31\l  %37 = mul i32 %36, %14\l  %38 = add i32 %37, %32\l  %39 = mul nsw i32 %38, 17\l  %40 = add nsw i32 %39, 9131\l  %41 = xor i32 %40, 746559103\l  %42 = icmp sgt i32 %38, -538\l  %43 = mul i32 %41, 1228688033\l  %44 = add i32 %43, 123456789\l  %45 = xor i32 %43, 362436069\l  %46 = add i32 %43, 5783321\l  %47 = select i1 %42, i32 -1966976488, i32 -93451411\l  %48 = add i32 %47, %43\l  %49 = icmp slt i32 %38, %1\l  br i1 %49, label %50, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5fe3530:s0 -> Node0x5fe83a0;
	Node0x5fe3530:s1 -> Node0x5fe8430;
	Node0x5fe83a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%50:\l50:                                               \l  %51 = lshr i32 %44, 2\l  %52 = xor i32 %51, %44\l  %53 = shl i32 %46, 4\l  %54 = shl i32 %52, 1\l  %55 = xor i32 %53, %54\l  %56 = xor i32 %55, %46\l  %57 = xor i32 %56, %52\l  %58 = add i32 %48, 362437\l  %59 = add i32 %58, %57\l  %60 = lshr i32 %45, 2\l  %61 = xor i32 %60, %45\l  %62 = shl i32 %57, 4\l  %63 = shl i32 %61, 1\l  %64 = xor i32 %63, %62\l  %65 = xor i32 %64, %61\l  %66 = xor i32 %65, %57\l  %67 = add i32 %48, 724874\l  %68 = add i32 %67, %66\l  %69 = uitofp i32 %59 to float\l  %70 = fmul contract float %69, 0x3DF0000000000000\l  %71 = fadd contract float %70, 0x3DF0000000000000\l  %72 = uitofp i32 %68 to float\l  %73 = fmul contract float %72, 0x3E1921FB60000000\l  %74 = fadd contract float %73, 0x3E1921FB60000000\l  %75 = tail call i1 @llvm.amdgcn.class.f32(float %71, i32 144)\l  %76 = select i1 %75, float 0x41F0000000000000, float 1.000000e+00\l  %77 = fmul float %71, %76\l  %78 = tail call float @llvm.log2.f32(float %77)\l  %79 = fmul float %78, 0x3FE62E42E0000000\l  %80 = tail call i1 @llvm.amdgcn.class.f32(float %78, i32 519)\l  %81 = fneg float %79\l  %82 = tail call float @llvm.fma.f32(float %78, float 0x3FE62E42E0000000,\l... float %81)\l  %83 = tail call float @llvm.fma.f32(float %78, float 0x3E6EFA39E0000000,\l... float %82)\l  %84 = fadd float %79, %83\l  %85 = select i1 %80, float %78, float %84\l  %86 = select i1 %75, float 0x40362E4300000000, float 0.000000e+00\l  %87 = fsub float %85, %86\l  %88 = fmul contract float %87, -2.000000e+00\l  %89 = fcmp olt float %88, 0x39F0000000000000\l  %90 = select i1 %89, float 0x41F0000000000000, float 1.000000e+00\l  %91 = fmul float %88, %90\l  %92 = tail call float @llvm.sqrt.f32(float %91)\l  %93 = bitcast float %92 to i32\l  %94 = add nsw i32 %93, -1\l  %95 = bitcast i32 %94 to float\l  %96 = add nsw i32 %93, 1\l  %97 = bitcast i32 %96 to float\l  %98 = tail call i1 @llvm.amdgcn.class.f32(float %91, i32 608)\l  %99 = select i1 %89, float 0x3EF0000000000000, float 1.000000e+00\l  %100 = fneg float %97\l  %101 = tail call float @llvm.fma.f32(float %100, float %92, float %91)\l  %102 = fcmp ogt float %101, 0.000000e+00\l  %103 = fneg float %95\l  %104 = tail call float @llvm.fma.f32(float %103, float %92, float %91)\l  %105 = fcmp ole float %104, 0.000000e+00\l  %106 = select i1 %105, float %95, float %92\l  %107 = select i1 %102, float %97, float %106\l  %108 = fmul float %99, %107\l  %109 = select i1 %98, float %91, float %108\l  %110 = tail call float @llvm.sin.f32(float %74)\l  %111 = fmul contract float %110, %109\l  %112 = fmul contract float %111, %3\l  %113 = fadd contract float %112, %2\l  %114 = sext i32 %38 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  store float %113, float addrspace(1)* %115, align 4, !tbaa !16\l  br label %116\l}"];
	Node0x5fe83a0 -> Node0x5fe8430;
	Node0x5fe8430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  ret void\l}"];
}
