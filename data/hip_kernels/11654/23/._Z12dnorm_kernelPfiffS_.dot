digraph "CFG for '_Z12dnorm_kernelPfiffS_' function" {
	label="CFG for '_Z12dnorm_kernelPfiffS_' function";

	Node0x4cb85d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !13, !invariant.load\l... !14\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = mul i32 %22, %30\l  %35 = add i32 %34, %31\l  %36 = mul i32 %35, %26\l  %37 = add i32 %36, %32\l  %38 = mul i32 %37, %15\l  %39 = add i32 %38, %33\l  %40 = icmp slt i32 %39, %1\l  br i1 %40, label %41, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4cb85d0:s0 -> Node0x4cbcc50;
	Node0x4cb85d0:s1 -> Node0x4cbcce0;
	Node0x4cbcc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = sext i32 %39 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %45 = fsub contract float %44, %2\l  %46 = fdiv contract float %45, %3\l  %47 = fpext float %46 to double\l  %48 = fmul contract double %47, -5.000000e-01\l  %49 = fmul contract double %48, %47\l  %50 = fmul double %49, 0x3FF71547652B82FE\l  %51 = tail call double @llvm.rint.f64(double %50)\l  %52 = fneg double %51\l  %53 = tail call double @llvm.fma.f64(double %52, double 0x3FE62E42FEFA39EF,\l... double %49)\l  %54 = tail call double @llvm.fma.f64(double %52, double 0x3C7ABC9E3B39803F,\l... double %53)\l  %55 = tail call double @llvm.fma.f64(double %54, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %56 = tail call double @llvm.fma.f64(double %54, double %55, double\l... 0x3EC71DEE623FDE64)\l  %57 = tail call double @llvm.fma.f64(double %54, double %56, double\l... 0x3EFA01997C89E6B0)\l  %58 = tail call double @llvm.fma.f64(double %54, double %57, double\l... 0x3F2A01A014761F6E)\l  %59 = tail call double @llvm.fma.f64(double %54, double %58, double\l... 0x3F56C16C1852B7B0)\l  %60 = tail call double @llvm.fma.f64(double %54, double %59, double\l... 0x3F81111111122322)\l  %61 = tail call double @llvm.fma.f64(double %54, double %60, double\l... 0x3FA55555555502A1)\l  %62 = tail call double @llvm.fma.f64(double %54, double %61, double\l... 0x3FC5555555555511)\l  %63 = tail call double @llvm.fma.f64(double %54, double %62, double\l... 0x3FE000000000000B)\l  %64 = tail call double @llvm.fma.f64(double %54, double %63, double\l... 1.000000e+00)\l  %65 = tail call double @llvm.fma.f64(double %54, double %64, double\l... 1.000000e+00)\l  %66 = fptosi double %51 to i32\l  %67 = tail call double @llvm.amdgcn.ldexp.f64(double %65, i32 %66)\l  %68 = fcmp ogt double %49, 1.024000e+03\l  %69 = select i1 %68, double 0x7FF0000000000000, double %67\l  %70 = fcmp olt double %49, -1.075000e+03\l  %71 = select i1 %70, double 0.000000e+00, double %69\l  %72 = fptrunc double %71 to float\l  %73 = fpext float %72 to double\l  %74 = fpext float %3 to double\l  %75 = tail call double @llvm.amdgcn.rsq.f64(double 0x401921FB54442D18)\l  %76 = fmul double %75, 0x401921FB54442D18\l  %77 = fmul double %75, 5.000000e-01\l  %78 = fneg double %77\l  %79 = tail call double @llvm.fma.f64(double %78, double %76, double\l... 5.000000e-01)\l  %80 = tail call double @llvm.fma.f64(double %77, double %79, double %77)\l  %81 = tail call double @llvm.fma.f64(double %76, double %79, double %76)\l  %82 = fneg double %81\l  %83 = tail call double @llvm.fma.f64(double %82, double %81, double\l... 0x401921FB54442D18)\l  %84 = tail call double @llvm.fma.f64(double %83, double %80, double %81)\l  %85 = fneg double %84\l  %86 = tail call double @llvm.fma.f64(double %85, double %84, double\l... 0x401921FB54442D18)\l  %87 = tail call double @llvm.fma.f64(double %86, double %80, double %84)\l  %88 = fmul contract double %87, %74\l  %89 = fdiv contract double %73, %88\l  %90 = fptrunc double %89 to float\l  %91 = getelementptr inbounds float, float addrspace(1)* %4, i64 %42\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !16\l  br label %92\l}"];
	Node0x4cbcc50 -> Node0x4cbcce0;
	Node0x4cbcce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  ret void\l}"];
}
