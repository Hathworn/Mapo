digraph "CFG for '_Z12runif_kernelP12hiprandStatePfiff' function" {
	label="CFG for '_Z12runif_kernelP12hiprandStatePfiff' function";

	Node0x4b3cb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !13, !invariant.load\l... !14\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %33 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %34 = mul i32 %22, %30\l  %35 = add i32 %34, %31\l  %36 = mul i32 %35, %26\l  %37 = add i32 %36, %32\l  %38 = mul i32 %37, %15\l  %39 = add i32 %38, %33\l  %40 = icmp slt i32 %39, %2\l  br i1 %40, label %41, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4b3cb50:s0 -> Node0x4b411a0;
	Node0x4b3cb50:s1 -> Node0x4b41230;
	Node0x4b411a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = fsub contract float %4, %3\l  %43 = sext i32 %39 to i64\l  %44 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 5, i64 0\l  %45 = load i32, i32 addrspace(1)* %44, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  %46 = lshr i32 %45, 2\l  %47 = xor i32 %46, %45\l  %48 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 5, i64 1\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %49, i32 addrspace(1)* %44, align 8, !tbaa !16\l  %50 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 5, i64 2\l  %51 = load i32, i32 addrspace(1)* %50, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %51, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %52 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 5, i64 3\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %53, i32 addrspace(1)* %50, align 8, !tbaa !16\l  %54 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 5, i64 4\l  %55 = load i32, i32 addrspace(1)* %54, align 8, !tbaa !16, !amdgpu.noclobber\l... !14\l  store i32 %55, i32 addrspace(1)* %52, align 4, !tbaa !16\l  %56 = shl i32 %55, 4\l  %57 = shl i32 %47, 1\l  %58 = xor i32 %57, %56\l  %59 = xor i32 %58, %47\l  %60 = xor i32 %59, %55\l  store i32 %60, i32 addrspace(1)* %54, align 8, !tbaa !16\l  %61 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %43, i32 0, i32 0, i32 0\l  %62 = load i32, i32 addrspace(1)* %61, align 8, !tbaa !20, !amdgpu.noclobber\l... !14\l  %63 = add i32 %62, 362437\l  store i32 %63, i32 addrspace(1)* %61, align 8, !tbaa !20\l  %64 = add i32 %63, %60\l  %65 = uitofp i32 %64 to float\l  %66 = fmul contract float %65, 0x3DF0000000000000\l  %67 = fadd contract float %66, 0x3DF0000000000000\l  %68 = fmul contract float %42, %67\l  %69 = fadd contract float %68, %3\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  store float %69, float addrspace(1)* %70, align 4, !tbaa !25\l  br label %71\l}"];
	Node0x4b411a0 -> Node0x4b41230;
	Node0x4b41230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
