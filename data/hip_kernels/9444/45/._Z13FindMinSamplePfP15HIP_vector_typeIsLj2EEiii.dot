digraph "CFG for '_Z13FindMinSamplePfP15HIP_vector_typeIsLj2EEiii' function" {
	label="CFG for '_Z13FindMinSamplePfP15HIP_vector_typeIsLj2EEiii' function";

	Node0x4c07690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = udiv i32 %14, %11\l  %17 = mul i32 %16, %11\l  %18 = icmp ugt i32 %14, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 16\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 8, !tbaa !16\l  %25 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %24, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %35 = mul i32 %33, %34\l  %36 = add i32 %35, %21\l  %37 = mul i32 %36, %20\l  %38 = add i32 %37, %15\l  %39 = mul i32 %38, %11\l  %40 = add i32 %39, %6\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %44 = add nsw i32 %40, %2\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %48 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %41\l  %49 = bitcast %struct.HIP_vector_type addrspace(1)* %48 to i32 addrspace(1)*\l  %50 = mul nsw i32 %4, %3\l  %51 = icmp slt i32 %44, %50\l  br i1 %51, label %52, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4c07690:s0 -> Node0x4c0d1c0;
	Node0x4c07690:s1 -> Node0x4c0d210;
	Node0x4c0d1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %45\l  %54 = bitcast %struct.HIP_vector_type addrspace(1)* %53 to i32 addrspace(1)*\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !amdgpu.noclobber !6\l  %56 = load i32, i32 addrspace(1)* %49, align 4, !amdgpu.noclobber !6\l  %57 = fcmp contract olt float %43, %47\l  %58 = select contract i1 %57, float %43, float %47\l  store float %58, float addrspace(1)* %42, align 4, !tbaa !17\l  %59 = select i1 %57, i32 %56, i32 %55\l  store i32 %59, i32 addrspace(1)* %49, align 4\l  br label %60\l}"];
	Node0x4c0d1c0 -> Node0x4c0d210;
	Node0x4c0d210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  ret void\l}"];
}
