digraph "CFG for '_Z20kern_ResetSinkBufferPfS_S_S_ffi' function" {
	label="CFG for '_Z20kern_ResetSinkBufferPfS_S_S_ffi' function";

	Node0x583aaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = udiv i32 %16, %13\l  %19 = mul i32 %18, %13\l  %20 = icmp ugt i32 %16, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 16\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 8, !tbaa !16\l  %27 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !5, !invariant.load !6\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %26, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %26, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %37 = mul i32 %35, %36\l  %38 = add i32 %37, %23\l  %39 = mul i32 %38, %22\l  %40 = add i32 %39, %17\l  %41 = mul i32 %40, %13\l  %42 = add i32 %41, %8\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = icmp slt i32 %42, %6\l  br i1 %45, label %46, label %61\l|{<s0>T|<s1>F}}"];
	Node0x583aaf0:s0 -> Node0x583ec90;
	Node0x583aaf0:s1 -> Node0x583ed20;
	Node0x583ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%46:\l46:                                               \l  %47 = fsub contract float 1.000000e+00, %4\l  %48 = load float, float addrspace(1)* %44, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %49 = fmul contract float %47, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %54 = fsub contract float %51, %53\l  %55 = getelementptr inbounds float, float addrspace(1)* %3, i64 %43\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %57 = fmul contract float %56, %5\l  %58 = fadd contract float %54, %57\l  %59 = fmul contract float %58, %4\l  %60 = fadd contract float %49, %59\l  store float %60, float addrspace(1)* %44, align 4, !tbaa !17\l  br label %61\l}"];
	Node0x583ec90 -> Node0x583ed20;
	Node0x583ed20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
