digraph "CFG for '_Z30kern_FindSinkPotentialAndStorePfS_S_S_fi' function" {
	label="CFG for '_Z30kern_FindSinkPotentialAndStorePfS_S_S_fi' function";

	Node0x4ddca60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = udiv i32 %15, %12\l  %18 = mul i32 %17, %12\l  %19 = icmp ugt i32 %15, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 8, !tbaa !16\l  %26 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = udiv i32 %25, %29\l  %31 = mul i32 %30, %29\l  %32 = icmp ugt i32 %25, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %36 = mul i32 %34, %35\l  %37 = add i32 %36, %22\l  %38 = mul i32 %37, %21\l  %39 = add i32 %38, %16\l  %40 = mul i32 %39, %12\l  %41 = add i32 %40, %7\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = icmp slt i32 %41, %5\l  br i1 %44, label %45, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4ddca60:s0 -> Node0x4de0c10;
	Node0x4ddca60:s1 -> Node0x4de0ca0;
	Node0x4de0c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%45:\l45:                                               \l  %46 = load float, float addrspace(1)* %43, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %49 = fadd contract float %46, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %52 = fsub contract float %49, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %42\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %55 = fmul contract float %54, %4\l  %56 = fadd contract float %52, %55\l  store float %56, float addrspace(1)* %43, align 4, !tbaa !17\l  br label %57\l}"];
	Node0x4de0c10 -> Node0x4de0ca0;
	Node0x4de0ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
