digraph "CFG for '_Z19CUDAkernel_multiplyPfS_S_i' function" {
	label="CFG for '_Z19CUDAkernel_multiplyPfS_S_i' function";

	Node0x4cf2840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = udiv i32 %13, %10\l  %16 = mul i32 %15, %10\l  %17 = icmp ugt i32 %13, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !16\l  %24 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = mul i32 %32, %33\l  %35 = add i32 %34, %20\l  %36 = mul i32 %35, %19\l  %37 = add i32 %36, %14\l  %38 = mul i32 %37, %10\l  %39 = add i32 %38, %5\l  %40 = sext i32 %39 to i64\l  %41 = icmp slt i32 %39, %3\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4cf2840:s0 -> Node0x4cf6960;
	Node0x4cf2840:s1 -> Node0x4cf69f0;
	Node0x4cf6960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !17,\l... !amdgpu.noclobber !6\l  %47 = fmul contract float %44, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !17\l  br label %49\l}"];
	Node0x4cf6960 -> Node0x4cf69f0;
	Node0x4cf69f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
