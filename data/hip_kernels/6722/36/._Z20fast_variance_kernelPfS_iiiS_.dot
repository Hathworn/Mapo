digraph "CFG for '_Z20fast_variance_kernelPfS_iiiS_' function" {
	label="CFG for '_Z20fast_variance_kernelPfS_iiiS_' function";

	Node0x5360fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %7\l  store float 0.000000e+00, float addrspace(3)* %8, align 4, !tbaa !5\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = icmp sgt i32 %2, 0\l  br i1 %10, label %11, label %196\l|{<s0>T|<s1>F}}"];
	Node0x5360fd0:s0 -> Node0x5363330;
	Node0x5360fd0:s1 -> Node0x53633c0;
	Node0x5363330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%11:\l11:                                               \l  %12 = icmp sgt i32 %4, 0\l  %13 = sext i32 %9 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  br label %15\l}"];
	Node0x5363330 -> Node0x53636a0;
	Node0x53636a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%15:\l15:                                               \l  %16 = phi float [ 0.000000e+00, %11 ], [ %193, %192 ]\l  %17 = phi i32 [ 0, %11 ], [ %194, %192 ]\l  br i1 %12, label %18, label %192\l|{<s0>T|<s1>F}}"];
	Node0x53636a0:s0 -> Node0x5363a90;
	Node0x53636a0:s1 -> Node0x5363790;
	Node0x5363a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%18:\l18:                                               \l  %19 = mul i32 %17, %3\l  %20 = add i32 %19, %9\l  %21 = mul i32 %20, %4\l  br label %22\l}"];
	Node0x5363a90 -> Node0x5363d80;
	Node0x5363d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi float [ %16, %18 ], [ %188, %186 ]\l  %24 = phi i32 [ 0, %18 ], [ %189, %186 ]\l  %25 = add nuw nsw i32 %24, %7\l  %26 = icmp slt i32 %25, %4\l  br i1 %26, label %27, label %186\l|{<s0>T|<s1>F}}"];
	Node0x5363d80:s0 -> Node0x53641f0;
	Node0x5363d80:s1 -> Node0x5363e70;
	Node0x53641f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%27:\l27:                                               \l  %28 = add i32 %25, %21\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %32 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fsub contract float %31, %32\l  %34 = tail call float @llvm.fabs.f32(float %33)\l  %35 = tail call float @llvm.amdgcn.frexp.mant.f32(float %34)\l  %36 = fcmp olt float %35, 0x3FE5555560000000\l  %37 = zext i1 %36 to i32\l  %38 = tail call float @llvm.amdgcn.ldexp.f32(float %35, i32 %37)\l  %39 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %34)\l  %40 = sub nsw i32 %39, %37\l  %41 = fadd float %38, -1.000000e+00\l  %42 = fadd float %38, 1.000000e+00\l  %43 = fadd float %42, -1.000000e+00\l  %44 = fsub float %38, %43\l  %45 = tail call float @llvm.amdgcn.rcp.f32(float %42)\l  %46 = fmul float %41, %45\l  %47 = fmul float %42, %46\l  %48 = fneg float %47\l  %49 = tail call float @llvm.fma.f32(float %46, float %42, float %48)\l  %50 = tail call float @llvm.fma.f32(float %46, float %44, float %49)\l  %51 = fadd float %47, %50\l  %52 = fsub float %51, %47\l  %53 = fsub float %50, %52\l  %54 = fsub float %41, %51\l  %55 = fsub float %41, %54\l  %56 = fsub float %55, %51\l  %57 = fsub float %56, %53\l  %58 = fadd float %54, %57\l  %59 = fmul float %45, %58\l  %60 = fadd float %46, %59\l  %61 = fsub float %60, %46\l  %62 = fsub float %59, %61\l  %63 = fmul float %60, %60\l  %64 = fneg float %63\l  %65 = tail call float @llvm.fma.f32(float %60, float %60, float %64)\l  %66 = fmul float %62, 2.000000e+00\l  %67 = tail call float @llvm.fma.f32(float %60, float %66, float %65)\l  %68 = fadd float %63, %67\l  %69 = fsub float %68, %63\l  %70 = fsub float %67, %69\l  %71 = tail call float @llvm.fmuladd.f32(float %68, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %72 = tail call float @llvm.fmuladd.f32(float %68, float %71, float\l... 0x3FD999BDE0000000)\l  %73 = sitofp i32 %40 to float\l  %74 = fmul float %73, 0x3FE62E4300000000\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %73, float 0x3FE62E4300000000,\l... float %75)\l  %77 = tail call float @llvm.fma.f32(float %73, float 0xBE205C6100000000,\l... float %76)\l  %78 = fadd float %74, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %77, %79\l  %81 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 1)\l  %82 = fmul float %60, %68\l  %83 = fneg float %82\l  %84 = tail call float @llvm.fma.f32(float %68, float %60, float %83)\l  %85 = tail call float @llvm.fma.f32(float %68, float %62, float %84)\l  %86 = tail call float @llvm.fma.f32(float %70, float %60, float %85)\l  %87 = fadd float %82, %86\l  %88 = fsub float %87, %82\l  %89 = fsub float %86, %88\l  %90 = fmul float %68, %72\l  %91 = fneg float %90\l  %92 = tail call float @llvm.fma.f32(float %68, float %72, float %91)\l  %93 = tail call float @llvm.fma.f32(float %70, float %72, float %92)\l  %94 = fadd float %90, %93\l  %95 = fsub float %94, %90\l  %96 = fsub float %93, %95\l  %97 = fadd float %94, 0x3FE5555540000000\l  %98 = fadd float %97, 0xBFE5555540000000\l  %99 = fsub float %94, %98\l  %100 = fadd float %96, 0x3E2E720200000000\l  %101 = fadd float %100, %99\l  %102 = fadd float %97, %101\l  %103 = fsub float %102, %97\l  %104 = fsub float %101, %103\l  %105 = fmul float %87, %102\l  %106 = fneg float %105\l  %107 = tail call float @llvm.fma.f32(float %87, float %102, float %106)\l  %108 = tail call float @llvm.fma.f32(float %87, float %104, float %107)\l  %109 = tail call float @llvm.fma.f32(float %89, float %102, float %108)\l  %110 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %111 = fadd float %105, %109\l  %112 = fsub float %111, %105\l  %113 = fsub float %109, %112\l  %114 = fadd float %81, %111\l  %115 = fsub float %114, %81\l  %116 = fsub float %111, %115\l  %117 = fadd float %110, %113\l  %118 = fadd float %117, %116\l  %119 = fadd float %114, %118\l  %120 = fsub float %119, %114\l  %121 = fsub float %118, %120\l  %122 = fadd float %78, %119\l  %123 = fsub float %122, %78\l  %124 = fsub float %122, %123\l  %125 = fsub float %78, %124\l  %126 = fsub float %119, %123\l  %127 = fadd float %126, %125\l  %128 = fadd float %80, %121\l  %129 = fsub float %128, %80\l  %130 = fsub float %128, %129\l  %131 = fsub float %80, %130\l  %132 = fsub float %121, %129\l  %133 = fadd float %132, %131\l  %134 = fadd float %128, %127\l  %135 = fadd float %122, %134\l  %136 = fsub float %135, %122\l  %137 = fsub float %134, %136\l  %138 = fadd float %133, %137\l  %139 = fadd float %135, %138\l  %140 = fsub float %139, %135\l  %141 = fsub float %138, %140\l  %142 = fmul float %139, 2.000000e+00\l  %143 = fneg float %142\l  %144 = tail call float @llvm.fma.f32(float %139, float 2.000000e+00, float\l... %143)\l  %145 = tail call float @llvm.fma.f32(float %141, float 2.000000e+00, float\l... %144)\l  %146 = fadd float %142, %145\l  %147 = fsub float %146, %142\l  %148 = fsub float %145, %147\l  %149 = tail call float @llvm.fabs.f32(float %142) #4\l  %150 = fcmp oeq float %149, 0x7FF0000000000000\l  %151 = select i1 %150, float %142, float %146\l  %152 = tail call float @llvm.fabs.f32(float %151) #4\l  %153 = fcmp oeq float %152, 0x7FF0000000000000\l  %154 = select i1 %153, float 0.000000e+00, float %148\l  %155 = fcmp oeq float %151, 0x40562E4300000000\l  %156 = select i1 %155, float 0x3EE0000000000000, float 0.000000e+00\l  %157 = fsub float %151, %156\l  %158 = fadd float %156, %154\l  %159 = fmul float %157, 0x3FF7154760000000\l  %160 = tail call float @llvm.rint.f32(float %159)\l  %161 = fcmp ogt float %157, 0x40562E4300000000\l  %162 = fcmp olt float %157, 0xC059D1DA00000000\l  %163 = fneg float %159\l  %164 = tail call float @llvm.fma.f32(float %157, float 0x3FF7154760000000,\l... float %163)\l  %165 = tail call float @llvm.fma.f32(float %157, float 0x3E54AE0BE0000000,\l... float %164)\l  %166 = fsub float %159, %160\l  %167 = fadd float %165, %166\l  %168 = tail call float @llvm.exp2.f32(float %167)\l  %169 = fptosi float %160 to i32\l  %170 = tail call float @llvm.amdgcn.ldexp.f32(float %168, i32 %169)\l  %171 = select i1 %162, float 0.000000e+00, float %170\l  %172 = select i1 %161, float 0x7FF0000000000000, float %171\l  %173 = tail call float @llvm.fma.f32(float %172, float %158, float %172)\l  %174 = tail call float @llvm.fabs.f32(float %172) #4\l  %175 = fcmp oeq float %174, 0x7FF0000000000000\l  %176 = select i1 %175, float %172, float %173\l  %177 = tail call float @llvm.fabs.f32(float %176)\l  %178 = fcmp oeq float %34, 0x7FF0000000000000\l  %179 = fcmp oeq float %33, 0.000000e+00\l  %180 = select i1 %178, float 0x7FF0000000000000, float %177\l  %181 = select i1 %179, float 0.000000e+00, float %180\l  %182 = fcmp uno float %33, 0.000000e+00\l  %183 = select i1 %182, float 0x7FF8000000000000, float %181\l  %184 = fcmp oeq float %33, 1.000000e+00\l  %185 = select i1 %184, float 1.000000e+00, float %183\l  br label %186\l}"];
	Node0x53641f0 -> Node0x5363e70;
	Node0x5363e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%186:\l186:                                              \l  %187 = phi contract float [ %185, %27 ], [ 0.000000e+00, %22 ]\l  %188 = fadd contract float %187, %23\l  %189 = add nuw nsw i32 %24, 512\l  %190 = icmp slt i32 %189, %4\l  br i1 %190, label %22, label %191, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5363e70:s0 -> Node0x5363d80;
	Node0x5363e70:s1 -> Node0x536d720;
	Node0x536d720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%191:\l191:                                              \l  store float %188, float addrspace(3)* %8, align 4, !tbaa !5\l  br label %192\l}"];
	Node0x536d720 -> Node0x5363790;
	Node0x5363790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%192:\l192:                                              \l  %193 = phi float [ %188, %191 ], [ %16, %15 ]\l  %194 = add nuw nsw i32 %17, 1\l  %195 = icmp eq i32 %194, %2\l  br i1 %195, label %196, label %15, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5363790:s0 -> Node0x53633c0;
	Node0x5363790:s1 -> Node0x53636a0;
	Node0x53633c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%196:\l196:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %197 = icmp eq i32 %7, 0\l  br i1 %197, label %198, label %274\l|{<s0>T|<s1>F}}"];
	Node0x53633c0:s0 -> Node0x536df70;
	Node0x53633c0:s1 -> Node0x536dfc0;
	Node0x536df70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%198:\l198:                                              \l  %199 = sext i32 %9 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %5, i64 %199\l  store float 0.000000e+00, float addrspace(1)* %200, align 4, !tbaa !5\l  br label %201\l}"];
	Node0x536df70 -> Node0x536e2a0;
	Node0x536e2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%201:\l201:                                              \l  %202 = phi i32 [ 0, %198 ], [ %267, %201 ]\l  %203 = phi float [ 0.000000e+00, %198 ], [ %266, %201 ]\l  %204 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %202\l  %205 = load float, float addrspace(3)* %204, align 16, !tbaa !5\l  %206 = fadd contract float %205, %203\l  %207 = or i32 %202, 1\l  %208 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %207\l  %209 = load float, float addrspace(3)* %208, align 4, !tbaa !5\l  %210 = fadd contract float %209, %206\l  %211 = or i32 %202, 2\l  %212 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %211\l  %213 = load float, float addrspace(3)* %212, align 8, !tbaa !5\l  %214 = fadd contract float %213, %210\l  %215 = or i32 %202, 3\l  %216 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %215\l  %217 = load float, float addrspace(3)* %216, align 4, !tbaa !5\l  %218 = fadd contract float %217, %214\l  %219 = or i32 %202, 4\l  %220 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %219\l  %221 = load float, float addrspace(3)* %220, align 16, !tbaa !5\l  %222 = fadd contract float %221, %218\l  %223 = or i32 %202, 5\l  %224 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %223\l  %225 = load float, float addrspace(3)* %224, align 4, !tbaa !5\l  %226 = fadd contract float %225, %222\l  %227 = or i32 %202, 6\l  %228 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %227\l  %229 = load float, float addrspace(3)* %228, align 8, !tbaa !5\l  %230 = fadd contract float %229, %226\l  %231 = or i32 %202, 7\l  %232 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %231\l  %233 = load float, float addrspace(3)* %232, align 4, !tbaa !5\l  %234 = fadd contract float %233, %230\l  %235 = or i32 %202, 8\l  %236 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %235\l  %237 = load float, float addrspace(3)* %236, align 16, !tbaa !5\l  %238 = fadd contract float %237, %234\l  %239 = or i32 %202, 9\l  %240 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %239\l  %241 = load float, float addrspace(3)* %240, align 4, !tbaa !5\l  %242 = fadd contract float %241, %238\l  %243 = or i32 %202, 10\l  %244 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %243\l  %245 = load float, float addrspace(3)* %244, align 8, !tbaa !5\l  %246 = fadd contract float %245, %242\l  %247 = or i32 %202, 11\l  %248 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %247\l  %249 = load float, float addrspace(3)* %248, align 4, !tbaa !5\l  %250 = fadd contract float %249, %246\l  %251 = or i32 %202, 12\l  %252 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %251\l  %253 = load float, float addrspace(3)* %252, align 16, !tbaa !5\l  %254 = fadd contract float %253, %250\l  %255 = or i32 %202, 13\l  %256 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %255\l  %257 = load float, float addrspace(3)* %256, align 4, !tbaa !5\l  %258 = fadd contract float %257, %254\l  %259 = or i32 %202, 14\l  %260 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %259\l  %261 = load float, float addrspace(3)* %260, align 8, !tbaa !5\l  %262 = fadd contract float %261, %258\l  %263 = or i32 %202, 15\l  %264 = getelementptr inbounds [512 x float], [512 x float] addrspace(3)*\l... @_ZZ20fast_variance_kernelPfS_iiiS_E5local, i32 0, i32 %263\l  %265 = load float, float addrspace(3)* %264, align 4, !tbaa !5\l  %266 = fadd contract float %265, %262\l  %267 = add nuw nsw i32 %202, 16\l  %268 = icmp eq i32 %267, 512\l  br i1 %268, label %269, label %201, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x536e2a0:s0 -> Node0x536e580;
	Node0x536e2a0:s1 -> Node0x536e2a0;
	Node0x536e580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%269:\l269:                                              \l  %270 = mul nsw i32 %4, %2\l  %271 = add nsw i32 %270, -1\l  %272 = sitofp i32 %271 to float\l  %273 = fdiv contract float %266, %272\l  store float %273, float addrspace(1)* %200, align 4, !tbaa !5\l  br label %274\l}"];
	Node0x536e580 -> Node0x536dfc0;
	Node0x536dfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%274:\l274:                                              \l  ret void\l}"];
}
