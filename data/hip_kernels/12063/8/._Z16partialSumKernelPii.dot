digraph "CFG for '_Z16partialSumKernelPii' function" {
	label="CFG for '_Z16partialSumKernelPii' function";

	Node0x5f7a1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5f7a1f0:s0 -> Node0x5f7b190;
	Node0x5f7a1f0:s1 -> Node0x5f7c1b0;
	Node0x5f7b190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%13:\l13:                                               \l  %14 = sext i32 %11 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %17\l}"];
	Node0x5f7b190 -> Node0x5f7c1b0;
	Node0x5f7c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%17:\l17:                                               \l  %18 = phi i32 [ %16, %13 ], [ 0, %2 ]\l  %19 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ16partialSumKernelPiiE10partialSum, i32 0, i32 %3\l  store i32 %18, i32 addrspace(3)* %19, align 4, !tbaa !7\l  %20 = add nuw nsw i32 %3, %9\l  %21 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ16partialSumKernelPiiE10partialSum, i32 0, i32 %20\l  store i32 0, i32 addrspace(3)* %21, align 4, !tbaa !7\l  br label %24\l}"];
	Node0x5f7c1b0 -> Node0x5f7ce20;
	Node0x5f7d820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%22:\l22:                                               \l  %23 = icmp eq i32 %3, 0\l  br i1 %23, label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5f7d820:s0 -> Node0x5f7d900;
	Node0x5f7d820:s1 -> Node0x5f7d950;
	Node0x5f7ce20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %9, %17 ], [ %34, %33 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %26 = icmp ugt i32 %3, %25\l  br i1 %26, label %33, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5f7ce20:s0 -> Node0x5f7dac0;
	Node0x5f7ce20:s1 -> Node0x5f7df90;
	Node0x5f7df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%27:\l27:                                               \l  %28 = add nuw nsw i32 %25, %3\l  %29 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ16partialSumKernelPiiE10partialSum, i32 0, i32 %28\l  %30 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !7\l  %31 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !7\l  %32 = add nsw i32 %31, %30\l  store i32 %32, i32 addrspace(3)* %19, align 4, !tbaa !7\l  br label %33\l}"];
	Node0x5f7df90 -> Node0x5f7dac0;
	Node0x5f7dac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = lshr i32 %25, 1\l  %35 = icmp ult i32 %25, 2\l  br i1 %35, label %22, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f7dac0:s0 -> Node0x5f7d820;
	Node0x5f7dac0:s1 -> Node0x5f7ce20;
	Node0x5f7d900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%36:\l36:                                               \l  %37 = load i32, i32 addrspace(3)* %19, align 4, !tbaa !7\l  %38 = zext i32 %4 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  store i32 %37, i32 addrspace(1)* %39, align 4, !tbaa !7\l  br label %40\l}"];
	Node0x5f7d900 -> Node0x5f7d950;
	Node0x5f7d950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%40:\l40:                                               \l  ret void\l}"];
}
