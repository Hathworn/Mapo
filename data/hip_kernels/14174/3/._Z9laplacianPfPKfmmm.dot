digraph "CFG for '_Z9laplacianPfPKfmmm' function" {
	label="CFG for '_Z9laplacianPfPKfmmm' function";

	Node0x6239e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = zext i32 %14 to i64\l  %16 = freeze i64 %15\l  %17 = freeze i64 %2\l  %18 = udiv i64 %16, %17\l  %19 = mul i64 %18, %17\l  %20 = sub i64 %16, %19\l  %21 = mul i64 %18, %4\l  %22 = icmp ult i64 %21, %3\l  br i1 %22, label %23, label %150\l|{<s0>T|<s1>F}}"];
	Node0x6239e60:s0 -> Node0x623c150;
	Node0x6239e60:s1 -> Node0x623c1e0;
	Node0x623c150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%23:\l23:                                               \l  %24 = add nuw i64 %21, 1\l  %25 = add i64 %21, %4\l  %26 = trunc i64 %25 to i32\l  %27 = add i32 %26, -1\l  %28 = trunc i64 %3 to i32\l  %29 = add i32 %28, -1\l  %30 = tail call i32 @llvm.umin.i32(i32 %27, i32 %29)\l  %31 = zext i32 %30 to i64\l  %32 = mul i64 %21, %2\l  %33 = add i64 %32, %20\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = icmp ult i64 %24, %3\l  br i1 %37, label %38, label %44\l|{<s0>T|<s1>F}}"];
	Node0x623c150:s0 -> Node0x623dbc0;
	Node0x623c150:s1 -> Node0x623dc50;
	Node0x623dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = add i64 %33, %2\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = fmul contract float %41, 2.500000e-01\l  %43 = fsub contract float %35, %42\l  store float %43, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %44\l}"];
	Node0x623dbc0 -> Node0x623dc50;
	Node0x623dc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%44:\l44:                                               \l  %45 = phi float [ %43, %38 ], [ %35, %23 ]\l  %46 = icmp eq i64 %21, 0\l  br i1 %46, label %53, label %47\l|{<s0>T|<s1>F}}"];
	Node0x623dc50:s0 -> Node0x623ecd0;
	Node0x623dc50:s1 -> Node0x623ed20;
	Node0x623ed20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%47:\l47:                                               \l  %48 = sub i64 %33, %2\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = fmul contract float %50, 2.500000e-01\l  %52 = fsub contract float %45, %51\l  store float %52, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x623ed20 -> Node0x623ecd0;
	Node0x623ecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%53:\l53:                                               \l  %54 = phi float [ %52, %47 ], [ %45, %44 ]\l  %55 = add nuw nsw i64 %20, 1\l  %56 = icmp ult i64 %55, %2\l  br i1 %56, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x623ecd0:s0 -> Node0x623f420;
	Node0x623ecd0:s1 -> Node0x623f470;
	Node0x623f420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%57:\l57:                                               \l  %58 = add i64 %33, 1\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fmul contract float %60, 2.500000e-01\l  %62 = fsub contract float %54, %61\l  store float %62, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x623f420 -> Node0x623f470;
	Node0x623f470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%63:\l63:                                               \l  %64 = phi float [ %62, %57 ], [ %54, %53 ]\l  %65 = icmp eq i64 %20, 0\l  br i1 %65, label %72, label %66\l|{<s0>T|<s1>F}}"];
	Node0x623f470:s0 -> Node0x623c9d0;
	Node0x623f470:s1 -> Node0x623ca20;
	Node0x623ca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%66:\l66:                                               \l  %67 = add i64 %33, -1\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = fmul contract float %69, 2.500000e-01\l  %71 = fsub contract float %64, %70\l  store float %71, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x623ca20 -> Node0x623c9d0;
	Node0x623c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%72:\l72:                                               \l  %73 = shl i64 %24, 32\l  %74 = ashr exact i64 %73, 32\l  %75 = icmp ult i64 %74, %31\l  br i1 %75, label %76, label %78\l|{<s0>T|<s1>F}}"];
	Node0x623c9d0:s0 -> Node0x6240360;
	Node0x623c9d0:s1 -> Node0x62403b0;
	Node0x6240360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%76:\l76:                                               \l  %77 = trunc i64 %24 to i32\l  br label %80\l}"];
	Node0x6240360 -> Node0x6240520;
	Node0x62403b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%78:\l78:                                               \l  %79 = icmp ult i64 %21, %31\l  br i1 %79, label %115, label %150\l|{<s0>T|<s1>F}}"];
	Node0x62403b0:s0 -> Node0x6240670;
	Node0x62403b0:s1 -> Node0x623c1e0;
	Node0x6240520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi i64 [ %113, %111 ], [ %74, %76 ]\l  %82 = phi i32 [ %112, %111 ], [ %77, %76 ]\l  %83 = mul i64 %81, %2\l  %84 = add i64 %83, %20\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = add i64 %84, %2\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = sub i64 %84, %2\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fadd contract float %89, %92\l  %94 = fmul contract float %93, 2.500000e-01\l  %95 = fsub contract float %86, %94\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  store float %95, float addrspace(1)* %96, align 4, !tbaa !7\l  br i1 %56, label %97, label %103\l|{<s0>T|<s1>F}}"];
	Node0x6240520:s0 -> Node0x6241280;
	Node0x6240520:s1 -> Node0x6241310;
	Node0x6241280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%97:\l97:                                               \l  %98 = add i64 %84, 1\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fmul contract float %100, 2.500000e-01\l  %102 = fsub contract float %95, %101\l  store float %102, float addrspace(1)* %96, align 4, !tbaa !7\l  br label %103\l}"];
	Node0x6241280 -> Node0x6241310;
	Node0x6241310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  %104 = phi float [ %102, %97 ], [ %95, %80 ]\l  br i1 %65, label %111, label %105\l|{<s0>T|<s1>F}}"];
	Node0x6241310:s0 -> Node0x62407a0;
	Node0x6241310:s1 -> Node0x62418c0;
	Node0x62418c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%105:\l105:                                              \l  %106 = add i64 %84, -1\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = fmul contract float %108, 2.500000e-01\l  %110 = fsub contract float %104, %109\l  store float %110, float addrspace(1)* %96, align 4, !tbaa !7\l  br label %111\l}"];
	Node0x62418c0 -> Node0x62407a0;
	Node0x62407a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = add nsw i32 %82, 1\l  %113 = sext i32 %112 to i64\l  %114 = icmp ult i64 %113, %31\l  br i1 %114, label %80, label %78, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x62407a0:s0 -> Node0x6240520;
	Node0x62407a0:s1 -> Node0x62403b0;
	Node0x6240670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%115:\l115:                                              \l  %116 = mul i64 %31, %2\l  %117 = add i64 %116, %20\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = sub i64 %117, %2\l  %121 = getelementptr inbounds float, float addrspace(1)* %1, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fmul contract float %122, 2.500000e-01\l  %124 = fsub contract float %119, %123\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  store float %124, float addrspace(1)* %125, align 4, !tbaa !7\l  %126 = add nuw nsw i64 %31, 1\l  %127 = icmp ult i64 %126, %3\l  br i1 %127, label %128, label %134\l|{<s0>T|<s1>F}}"];
	Node0x6240670:s0 -> Node0x6242780;
	Node0x6240670:s1 -> Node0x62427d0;
	Node0x6242780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%128:\l128:                                              \l  %129 = add i64 %117, %2\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = fmul contract float %131, 2.500000e-01\l  %133 = fsub contract float %124, %132\l  store float %133, float addrspace(1)* %125, align 4, !tbaa !7\l  br label %134\l}"];
	Node0x6242780 -> Node0x62427d0;
	Node0x62427d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%134:\l134:                                              \l  %135 = phi float [ %133, %128 ], [ %124, %115 ]\l  br i1 %56, label %136, label %142\l|{<s0>T|<s1>F}}"];
	Node0x62427d0:s0 -> Node0x6243140;
	Node0x62427d0:s1 -> Node0x6243190;
	Node0x6243140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%136:\l136:                                              \l  %137 = add i64 %117, 1\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = fmul contract float %139, 2.500000e-01\l  %141 = fsub contract float %135, %140\l  store float %141, float addrspace(1)* %125, align 4, !tbaa !7\l  br label %142\l}"];
	Node0x6243140 -> Node0x6243190;
	Node0x6243190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%142:\l142:                                              \l  %143 = phi float [ %141, %136 ], [ %135, %134 ]\l  br i1 %65, label %150, label %144\l|{<s0>T|<s1>F}}"];
	Node0x6243190:s0 -> Node0x623c1e0;
	Node0x6243190:s1 -> Node0x6243700;
	Node0x6243700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%144:\l144:                                              \l  %145 = add i64 %117, -1\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7\l  %148 = fmul contract float %147, 2.500000e-01\l  %149 = fsub contract float %143, %148\l  store float %149, float addrspace(1)* %125, align 4, !tbaa !7\l  br label %150\l}"];
	Node0x6243700 -> Node0x623c1e0;
	Node0x623c1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%150:\l150:                                              \l  ret void\l}"];
}
