digraph "CFG for '_Z13rmspropKerneliPiS_iPfS0_ffffS0_' function" {
	label="CFG for '_Z13rmspropKerneliPiS_iPfS0_ffffS0_' function";

	Node0x4c604e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %13\l  %15 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %13\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %18 = icmp ne i32 %15, -1\l  %19 = icmp sgt i32 %17, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4c604e0:s0 -> Node0x4c637c0;
	Node0x4c604e0:s1 -> Node0x4c63850;
	Node0x4c637c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  %22 = sitofp i32 %17 to float\l  %23 = fdiv contract float 1.000000e+00, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !9, !invariant.load !8\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %24, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !10\l  %32 = add i32 %30, %31\l  %33 = mul i32 %32, %0\l  %34 = mul nsw i32 %15, %3\l  %35 = add nsw i32 %33, %34\l  %36 = add nsw i32 %35, %0\l  %37 = add nsw i32 %34, %3\l  %38 = tail call i32 @llvm.smin.i32(i32 %36, i32 %37)\l  %39 = icmp slt i32 %35, %38\l  br i1 %39, label %40, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4c637c0:s0 -> Node0x4c657d0;
	Node0x4c637c0:s1 -> Node0x4c63850;
	Node0x4c657d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %12, %3\l  %42 = add nsw i32 %33, %41\l  %43 = fneg contract float %6\l  br label %44\l}"];
	Node0x4c657d0 -> Node0x4c65a60;
	Node0x4c65a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %35, %40 ], [ %85, %44 ]\l  %46 = phi i32 [ %42, %40 ], [ %86, %44 ]\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %5, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !11\l  %50 = fmul contract float %23, %49\l  %51 = sext i32 %45 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %10, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !11\l  %54 = fmul contract float %53, %7\l  %55 = fmul contract float %50, %50\l  %56 = fmul contract float %55, %8\l  %57 = fadd contract float %54, %56\l  store float %57, float addrspace(1)* %52, align 4, !tbaa !11\l  %58 = fadd contract float %57, %9\l  %59 = fcmp olt float %58, 0x39F0000000000000\l  %60 = select i1 %59, float 0x41F0000000000000, float 1.000000e+00\l  %61 = fmul float %58, %60\l  %62 = tail call float @llvm.sqrt.f32(float %61)\l  %63 = bitcast float %62 to i32\l  %64 = add nsw i32 %63, -1\l  %65 = bitcast i32 %64 to float\l  %66 = add nsw i32 %63, 1\l  %67 = bitcast i32 %66 to float\l  %68 = tail call i1 @llvm.amdgcn.class.f32(float %61, i32 608)\l  %69 = select i1 %59, float 0x3EF0000000000000, float 1.000000e+00\l  %70 = fneg float %67\l  %71 = tail call float @llvm.fma.f32(float %70, float %62, float %61)\l  %72 = fcmp ogt float %71, 0.000000e+00\l  %73 = fneg float %65\l  %74 = tail call float @llvm.fma.f32(float %73, float %62, float %61)\l  %75 = fcmp ole float %74, 0.000000e+00\l  %76 = select i1 %75, float %65, float %62\l  %77 = select i1 %72, float %67, float %76\l  %78 = fmul float %69, %77\l  %79 = select i1 %68, float %61, float %78\l  %80 = fdiv contract float %43, %79\l  %81 = fmul contract float %50, %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %51\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !11\l  %84 = fadd contract float %83, %81\l  store float %84, float addrspace(1)* %82, align 4, !tbaa !11\l  %85 = add nsw i32 %45, 1\l  %86 = add nsw i32 %46, 1\l  %87 = icmp slt i32 %85, %38\l  br i1 %87, label %44, label %88, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c65a60:s0 -> Node0x4c65a60;
	Node0x4c65a60:s1 -> Node0x4c63850;
	Node0x4c63850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%88:\l88:                                               \l  ret void\l}"];
}
