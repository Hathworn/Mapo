digraph "CFG for '_Z14groupSumKernelPfPiS0_S0_ii' function" {
	label="CFG for '_Z14groupSumKernelPfPiS0_S0_ii' function";

	Node0x4b54760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = sext i32 %7 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %8\l  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %12 = mul i32 %11, %5\l  %13 = mul nsw i32 %10, %4\l  %14 = add nsw i32 %13, %12\l  %15 = add nsw i32 %14, %5\l  %16 = add nsw i32 %13, %4\l  %17 = tail call i32 @llvm.smin.i32(i32 %15, i32 %16)\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %8\l  %19 = bitcast i32 addrspace(1)* %18 to \<2 x i32\> addrspace(1)*\l  %20 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %19, align 4, !tbaa !4\l  %21 = extractelement \<2 x i32\> %20, i64 0\l  %22 = extractelement \<2 x i32\> %20, i64 1\l  %23 = icmp slt i32 %21, %22\l  br i1 %23, label %24, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4b54760:s0 -> Node0x4b576b0;
	Node0x4b54760:s1 -> Node0x4b57740;
	Node0x4b576b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%24:\l24:                                               \l  %25 = icmp slt i32 %14, %17\l  br label %27\l}"];
	Node0x4b576b0 -> Node0x4b57910;
	Node0x4b57740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x4b57910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%27:\l27:                                               \l  %28 = phi i32 [ %21, %24 ], [ %49, %48 ]\l  br i1 %25, label %29, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4b57910:s0 -> Node0x4b57b50;
	Node0x4b57910:s1 -> Node0x4b57a50;
	Node0x4b57b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%29:\l29:                                               \l  %30 = sext i32 %28 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %33 = mul nsw i32 %32, %4\l  %34 = add nsw i32 %33, %12\l  br label %35\l}"];
	Node0x4b57b50 -> Node0x4b55ef0;
	Node0x4b55ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %46, %35 ], [ %34, %29 ]\l  %37 = phi i32 [ %45, %35 ], [ %14, %29 ]\l  %38 = sext i32 %36 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !10\l  %41 = sext i32 %37 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !10\l  %44 = fadd contract float %40, %43\l  store float %44, float addrspace(1)* %42, align 4, !tbaa !10\l  store float 0x7FF8000000000000, float addrspace(1)* %39, align 4, !tbaa !10\l  %45 = add nsw i32 %37, 1\l  %46 = add nsw i32 %36, 1\l  %47 = icmp slt i32 %45, %17\l  br i1 %47, label %35, label %48, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4b55ef0:s0 -> Node0x4b55ef0;
	Node0x4b55ef0:s1 -> Node0x4b57a50;
	Node0x4b57a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%48:\l48:                                               \l  %49 = add nsw i32 %28, 1\l  %50 = icmp slt i32 %49, %22\l  br i1 %50, label %27, label %26, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4b57a50:s0 -> Node0x4b57910;
	Node0x4b57a50:s1 -> Node0x4b57740;
}
