digraph "CFG for '_Z14adadeltaKerneliPiS_iPfS0_fffS0_S0_' function" {
	label="CFG for '_Z14adadeltaKerneliPiS_iPfS0_fffS0_S0_' function";

	Node0x4546a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %13\l  %15 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %13\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %18 = icmp ne i32 %15, -1\l  %19 = icmp sgt i32 %17, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4546a30:s0 -> Node0x4549d10;
	Node0x4546a30:s1 -> Node0x4549da0;
	Node0x4549d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  %22 = sitofp i32 %17 to float\l  %23 = fdiv contract float 1.000000e+00, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !9, !invariant.load !8\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %24, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !10\l  %32 = add i32 %30, %31\l  %33 = mul i32 %32, %0\l  %34 = mul nsw i32 %15, %3\l  %35 = add nsw i32 %33, %34\l  %36 = add nsw i32 %35, %0\l  %37 = add nsw i32 %34, %3\l  %38 = tail call i32 @llvm.smin.i32(i32 %36, i32 %37)\l  %39 = icmp slt i32 %35, %38\l  br i1 %39, label %40, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4549d10:s0 -> Node0x454bd20;
	Node0x4549d10:s1 -> Node0x4549da0;
	Node0x454bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = mul nsw i32 %12, %3\l  %42 = add nsw i32 %33, %41\l  br label %43\l}"];
	Node0x454bd20 -> Node0x454bf40;
	Node0x454bf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %113, %43 ], [ %35, %40 ]\l  %45 = phi i32 [ %114, %43 ], [ %42, %40 ]\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %5, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !11\l  %49 = fmul contract float %23, %48\l  %50 = sext i32 %44 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %9, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !11\l  %53 = fmul contract float %52, %6\l  %54 = fmul contract float %49, %49\l  %55 = fmul contract float %54, %7\l  %56 = fadd contract float %53, %55\l  store float %56, float addrspace(1)* %51, align 4, !tbaa !11\l  %57 = fadd contract float %56, %8\l  %58 = fcmp olt float %57, 0x39F0000000000000\l  %59 = select i1 %58, float 0x41F0000000000000, float 1.000000e+00\l  %60 = fmul float %57, %59\l  %61 = tail call float @llvm.sqrt.f32(float %60)\l  %62 = bitcast float %61 to i32\l  %63 = add nsw i32 %62, -1\l  %64 = bitcast i32 %63 to float\l  %65 = add nsw i32 %62, 1\l  %66 = bitcast i32 %65 to float\l  %67 = tail call i1 @llvm.amdgcn.class.f32(float %60, i32 608)\l  %68 = select i1 %58, float 0x3EF0000000000000, float 1.000000e+00\l  %69 = fneg float %66\l  %70 = tail call float @llvm.fma.f32(float %69, float %61, float %60)\l  %71 = fcmp ogt float %70, 0.000000e+00\l  %72 = fneg float %64\l  %73 = tail call float @llvm.fma.f32(float %72, float %61, float %60)\l  %74 = fcmp ole float %73, 0.000000e+00\l  %75 = select i1 %74, float %64, float %61\l  %76 = select i1 %71, float %66, float %75\l  %77 = fmul float %68, %76\l  %78 = select i1 %67, float %60, float %77\l  %79 = getelementptr inbounds float, float addrspace(1)* %10, i64 %50\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !11\l  %81 = fadd contract float %80, %8\l  %82 = fcmp olt float %81, 0x39F0000000000000\l  %83 = select i1 %82, float 0x41F0000000000000, float 1.000000e+00\l  %84 = fmul float %81, %83\l  %85 = tail call float @llvm.sqrt.f32(float %84)\l  %86 = bitcast float %85 to i32\l  %87 = add nsw i32 %86, -1\l  %88 = bitcast i32 %87 to float\l  %89 = add nsw i32 %86, 1\l  %90 = bitcast i32 %89 to float\l  %91 = tail call i1 @llvm.amdgcn.class.f32(float %84, i32 608)\l  %92 = select i1 %82, float 0x3EF0000000000000, float 1.000000e+00\l  %93 = fneg float %90\l  %94 = tail call float @llvm.fma.f32(float %93, float %85, float %84)\l  %95 = fcmp ogt float %94, 0.000000e+00\l  %96 = fneg float %88\l  %97 = tail call float @llvm.fma.f32(float %96, float %85, float %84)\l  %98 = fcmp ole float %97, 0.000000e+00\l  %99 = select i1 %98, float %88, float %85\l  %100 = select i1 %95, float %90, float %99\l  %101 = fmul float %92, %100\l  %102 = select i1 %91, float %84, float %101\l  %103 = fneg contract float %102\l  %104 = fdiv contract float %103, %78\l  %105 = fmul contract float %49, %104\l  %106 = fmul contract float %80, %6\l  %107 = fmul contract float %105, %105\l  %108 = fmul contract float %107, %7\l  %109 = fadd contract float %106, %108\l  store float %109, float addrspace(1)* %79, align 4, !tbaa !11\l  %110 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !11\l  %112 = fadd contract float %111, %105\l  store float %112, float addrspace(1)* %110, align 4, !tbaa !11\l  %113 = add nsw i32 %44, 1\l  %114 = add nsw i32 %45, 1\l  %115 = icmp slt i32 %113, %38\l  br i1 %115, label %43, label %116, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x454bf40:s0 -> Node0x454bf40;
	Node0x454bf40:s1 -> Node0x4549da0;
	Node0x4549da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%116:\l116:                                              \l  ret void\l}"];
}
