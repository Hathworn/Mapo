digraph "CFG for '_Z12calcSumTablePKfPfii' function" {
	label="CFG for '_Z12calcSumTablePKfPfii' function";

	Node0x557ee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  %15 = icmp sgt i32 %2, 1\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %99\l|{<s0>T|<s1>F}}"];
	Node0x557ee40:s0 -> Node0x557ee90;
	Node0x557ee40:s1 -> Node0x5580720;
	Node0x557ee90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = add i32 %2, -1\l  %19 = add i32 %2, -2\l  %20 = and i32 %18, 3\l  %21 = icmp ult i32 %19, 3\l  br i1 %21, label %78, label %22\l|{<s0>T|<s1>F}}"];
	Node0x557ee90:s0 -> Node0x55813d0;
	Node0x557ee90:s1 -> Node0x5581420;
	Node0x5581420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %18, -4\l  br label %24\l}"];
	Node0x5581420 -> Node0x5581620;
	Node0x5581620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 1, %22 ], [ %75, %24 ]\l  %26 = phi i32 [ 0, %22 ], [ %76, %24 ]\l  %27 = add nsw i32 %25, -1\l  %28 = mul nsw i32 %27, %3\l  %29 = add nsw i32 %28, %13\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = mul nsw i32 %25, %3\l  %34 = add nsw i32 %33, %13\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %38 = fadd contract float %32, %37\l  store float %38, float addrspace(1)* %36, align 4, !tbaa !7\l  %39 = add nuw nsw i32 %25, 1\l  %40 = mul nsw i32 %25, %3\l  %41 = add nsw i32 %40, %13\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = mul nsw i32 %39, %3\l  %46 = add nsw i32 %45, %13\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = fadd contract float %44, %49\l  store float %50, float addrspace(1)* %48, align 4, !tbaa !7\l  %51 = add nuw nsw i32 %25, 2\l  %52 = mul nsw i32 %39, %3\l  %53 = add nsw i32 %52, %13\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = mul nsw i32 %51, %3\l  %58 = add nsw i32 %57, %13\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fadd contract float %56, %61\l  store float %62, float addrspace(1)* %60, align 4, !tbaa !7\l  %63 = add nuw nsw i32 %25, 3\l  %64 = mul nsw i32 %51, %3\l  %65 = add nsw i32 %64, %13\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = mul nsw i32 %63, %3\l  %70 = add nsw i32 %69, %13\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = fadd contract float %68, %73\l  store float %74, float addrspace(1)* %72, align 4, !tbaa !7\l  %75 = add nuw nsw i32 %25, 4\l  %76 = add i32 %26, 4\l  %77 = icmp eq i32 %76, %23\l  br i1 %77, label %78, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5581620:s0 -> Node0x55813d0;
	Node0x5581620:s1 -> Node0x5581620;
	Node0x55813d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = phi i32 [ 1, %17 ], [ %75, %24 ]\l  %80 = icmp eq i32 %20, 0\l  br i1 %80, label %99, label %81\l|{<s0>T|<s1>F}}"];
	Node0x55813d0:s0 -> Node0x5580720;
	Node0x55813d0:s1 -> Node0x55843f0;
	Node0x55843f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %96, %81 ], [ %79, %78 ]\l  %83 = phi i32 [ %97, %81 ], [ 0, %78 ]\l  %84 = add nsw i32 %82, -1\l  %85 = mul nsw i32 %84, %3\l  %86 = add nsw i32 %85, %13\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = mul nsw i32 %82, %3\l  %91 = add nsw i32 %90, %13\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fadd contract float %89, %94\l  store float %95, float addrspace(1)* %93, align 4, !tbaa !7\l  %96 = add nuw nsw i32 %82, 1\l  %97 = add i32 %83, 1\l  %98 = icmp eq i32 %97, %20\l  br i1 %98, label %99, label %81, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55843f0:s0 -> Node0x5580720;
	Node0x55843f0:s1 -> Node0x55843f0;
	Node0x5580720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%99:\l99:                                               \l  ret void\l}"];
}
