digraph "CFG for 'reducePartial' function" {
	label="CFG for 'reducePartial' function";

	Node0x558f110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = bitcast i8 addrspace(1)* %1 to float addrspace(1)*\l  %5 = bitcast i8 addrspace(1)* %2 to float addrspace(1)*\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %7, 1\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %6\l  %16 = icmp ult i32 %15, %0\l  br i1 %16, label %17, label %21\l|{<s0>T|<s1>F}}"];
	Node0x558f110:s0 -> Node0x55903c0;
	Node0x558f110:s1 -> Node0x55912c0;
	Node0x55903c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %4, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %21\l}"];
	Node0x55903c0 -> Node0x55912c0;
	Node0x55912c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%21:\l21:                                               \l  %22 = phi contract float [ %20, %17 ], [ 0.000000e+00, %3 ]\l  %23 = add i32 %15, %12\l  %24 = icmp ult i32 %23, %0\l  br i1 %24, label %25, label %29\l|{<s0>T|<s1>F}}"];
	Node0x55912c0:s0 -> Node0x5592990;
	Node0x55912c0:s1 -> Node0x5592a20;
	Node0x5592990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = zext i32 %23 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %4, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %29\l}"];
	Node0x5592990 -> Node0x5592a20;
	Node0x5592a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = phi contract float [ %28, %25 ], [ 0.000000e+00, %21 ]\l  %31 = fadd contract float %22, %30\l  %32 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %6\l  store float %31, float addrspace(3)* %32, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %33 = icmp ult i16 %11, 2\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5592a20:s0 -> Node0x5593a60;
	Node0x5592a20:s1 -> Node0x5593af0;
	Node0x5593a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %6, 0\l  br i1 %35, label %48, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5593a60:s0 -> Node0x5593cc0;
	Node0x5593a60:s1 -> Node0x5593d10;
	Node0x5593af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %38, %46 ], [ %12, %29 ]\l  %38 = lshr i32 %37, 1\l  %39 = icmp ult i32 %6, %38\l  br i1 %39, label %40, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5593af0:s0 -> Node0x55940e0;
	Node0x5593af0:s1 -> Node0x5593e80;
	Node0x55940e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %38, %6\l  %42 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %41\l  %43 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %44 = load float, float addrspace(3)* %32, align 4, !tbaa !7\l  %45 = fadd contract float %43, %44\l  store float %45, float addrspace(3)* %32, align 4, !tbaa !7\l  br label %46\l}"];
	Node0x55940e0 -> Node0x5593e80;
	Node0x5593e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = icmp ult i32 %37, 4\l  br i1 %47, label %34, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5593e80:s0 -> Node0x5593a60;
	Node0x5593e80:s1 -> Node0x5593af0;
	Node0x5593cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%48:\l48:                                               \l  %49 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !7\l  %50 = zext i32 %7 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %50\l  store float %49, float addrspace(1)* %51, align 4, !tbaa !7\l  br label %52\l}"];
	Node0x5593cc0 -> Node0x5593d10;
	Node0x5593d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%52:\l52:                                               \l  ret void\l}"];
}
