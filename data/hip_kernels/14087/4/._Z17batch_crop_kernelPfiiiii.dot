digraph "CFG for '_Z17batch_crop_kernelPfiiiii' function" {
	label="CFG for '_Z17batch_crop_kernelPfiiiii' function";

	Node0x613b390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = icmp slt i32 %7, %5\l  br i1 %8, label %9, label %37\l|{<s0>T|<s1>F}}"];
	Node0x613b390:s0 -> Node0x6138da0;
	Node0x613b390:s1 -> Node0x613b6a0;
	Node0x6138da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%9:\l9:                                                \l  %10 = mul nsw i32 %7, %3\l  %11 = mul nsw i32 %10, %4\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  switch i32 %16, label %37 [\l    i32 0, label %17\l    i32 1, label %20\l    i32 2, label %25\l    i32 3, label %28\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x6138da0:s0 -> Node0x613b6a0;
	Node0x6138da0:s1 -> Node0x613b5d0;
	Node0x6138da0:s2 -> Node0x613d8d0;
	Node0x6138da0:s3 -> Node0x613d990;
	Node0x6138da0:s4 -> Node0x613da50;
	Node0x613b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %15, %4\l  %19 = add nsw i32 %18, %14\l  br label %33\l}"];
	Node0x613b5d0 -> Node0x613dda0;
	Node0x613d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%20:\l20:                                               \l  %21 = xor i32 %15, -1\l  %22 = add i32 %21, %3\l  %23 = mul nsw i32 %22, %4\l  %24 = add nsw i32 %23, %14\l  br label %33\l}"];
	Node0x613d8d0 -> Node0x613dda0;
	Node0x613d990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %14, %4\l  %27 = add nsw i32 %26, %15\l  br label %33\l}"];
	Node0x613d990 -> Node0x613dda0;
	Node0x613da50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %14, %4\l  %30 = xor i32 %15, -1\l  %31 = add i32 %30, %4\l  %32 = add i32 %31, %29\l  br label %33\l}"];
	Node0x613da50 -> Node0x613dda0;
	Node0x613dda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %27, %25 ], [ %24, %20 ], [ %19, %17 ], [ %32, %28 ]\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %13, i64 %35\l  store float 0.000000e+00, float addrspace(1)* %36, align 4, !tbaa !5\l  br label %37\l}"];
	Node0x613dda0 -> Node0x613b6a0;
	Node0x613b6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  ret void\l}"];
}
