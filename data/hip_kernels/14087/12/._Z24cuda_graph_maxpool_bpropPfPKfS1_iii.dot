digraph "CFG for '_Z24cuda_graph_maxpool_bpropPfPKfS1_iii' function" {
	label="CFG for '_Z24cuda_graph_maxpool_bpropPfPKfS1_iii' function";

	Node0x586dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%6:\l  %7 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %3\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %4\l  %11 = zext i32 %10 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %0, i64 %11\l  %13 = mul i32 %9, %3\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %14\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = icmp sgt i32 %5, 0\l  br i1 %17, label %18, label %49\l|{<s0>T|<s1>F}}"];
	Node0x586dba0:s0 -> Node0x586fa60;
	Node0x586dba0:s1 -> Node0x586faf0;
	Node0x586fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%18:\l18:                                               \l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = and i32 %5, 3\l  %25 = icmp ult i32 %5, 4\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x586fa60:s0 -> Node0x5870480;
	Node0x586fa60:s1 -> Node0x5870510;
	Node0x5870510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%26:\l26:                                               \l  %27 = and i32 %5, -4\l  br label %58\l}"];
	Node0x5870510 -> Node0x5870710;
	Node0x5870480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %18 ], [ %112, %111 ]\l  %30 = icmp eq i32 %24, 0\l  br i1 %30, label %49, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5870480:s0 -> Node0x586faf0;
	Node0x5870480:s1 -> Node0x58709d0;
	Node0x58709d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %46, %45 ], [ %29, %28 ]\l  %33 = phi i32 [ %47, %45 ], [ 0, %28 ]\l  %34 = mul i32 %32, %23\l  %35 = add i32 %34, %8\l  %36 = icmp slt i32 %35, %3\l  br i1 %36, label %37, label %45\l|{<s0>T|<s1>F}}"];
	Node0x58709d0:s0 -> Node0x586f700;
	Node0x58709d0:s1 -> Node0x5870b40;
	Node0x586f700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%37:\l37:                                               \l  %38 = sext i32 %35 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %15, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %35\l  store float %40, float addrspace(3)* %41, align 4, !tbaa !7\l  %42 = getelementptr inbounds float, float addrspace(1)* %16, i64 %38\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = getelementptr inbounds float, float addrspace(3)* %7, i32 %35\l  store float %43, float addrspace(3)* %44, align 4, !tbaa !7\l  br label %45\l}"];
	Node0x586f700 -> Node0x5870b40;
	Node0x5870b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = add nuw nsw i32 %32, 1\l  %47 = add i32 %33, 1\l  %48 = icmp eq i32 %47, %24\l  br i1 %48, label %49, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5870b40:s0 -> Node0x586faf0;
	Node0x5870b40:s1 -> Node0x58709d0;
	Node0x586faf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = icmp eq i32 %8, 1\l  %51 = icmp sgt i32 %3, 0\l  %52 = select i1 %50, i1 %51, i1 false\l  br i1 %52, label %53, label %236\l|{<s0>T|<s1>F}}"];
	Node0x586faf0:s0 -> Node0x5872b40;
	Node0x586faf0:s1 -> Node0x5872b90;
	Node0x5872b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%53:\l53:                                               \l  %54 = and i32 %3, 7\l  %55 = icmp ult i32 %3, 8\l  br i1 %55, label %216, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5872b40:s0 -> Node0x5872e20;
	Node0x5872b40:s1 -> Node0x5872e70;
	Node0x5872e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%56:\l56:                                               \l  %57 = and i32 %3, -8\l  br label %115\l}"];
	Node0x5872e70 -> Node0x5873070;
	Node0x5870710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %26 ], [ %112, %111 ]\l  %60 = phi i32 [ 0, %26 ], [ %113, %111 ]\l  %61 = mul i32 %59, %23\l  %62 = add i32 %61, %8\l  %63 = icmp slt i32 %62, %3\l  br i1 %63, label %64, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5870710:s0 -> Node0x5873470;
	Node0x5870710:s1 -> Node0x5873500;
	Node0x5873470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%64:\l64:                                               \l  %65 = sext i32 %62 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %15, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %68 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %62\l  store float %67, float addrspace(3)* %68, align 4, !tbaa !7\l  %69 = getelementptr inbounds float, float addrspace(1)* %16, i64 %65\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = getelementptr inbounds float, float addrspace(3)* %7, i32 %62\l  store float %70, float addrspace(3)* %71, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x5873470 -> Node0x5873500;
	Node0x5873500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%72:\l72:                                               \l  %73 = or i32 %59, 1\l  %74 = mul i32 %73, %23\l  %75 = add i32 %74, %8\l  %76 = icmp slt i32 %75, %3\l  br i1 %76, label %77, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5873500:s0 -> Node0x5874090;
	Node0x5873500:s1 -> Node0x58740e0;
	Node0x5874090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%77:\l77:                                               \l  %78 = sext i32 %75 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %15, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %81 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %75\l  store float %80, float addrspace(3)* %81, align 4, !tbaa !7\l  %82 = getelementptr inbounds float, float addrspace(1)* %16, i64 %78\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = getelementptr inbounds float, float addrspace(3)* %7, i32 %75\l  store float %83, float addrspace(3)* %84, align 4, !tbaa !7\l  br label %85\l}"];
	Node0x5874090 -> Node0x58740e0;
	Node0x58740e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%85:\l85:                                               \l  %86 = or i32 %59, 2\l  %87 = mul i32 %86, %23\l  %88 = add i32 %87, %8\l  %89 = icmp slt i32 %88, %3\l  br i1 %89, label %90, label %98\l|{<s0>T|<s1>F}}"];
	Node0x58740e0:s0 -> Node0x5874a20;
	Node0x58740e0:s1 -> Node0x5874a70;
	Node0x5874a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%90:\l90:                                               \l  %91 = sext i32 %88 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %15, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %88\l  store float %93, float addrspace(3)* %94, align 4, !tbaa !7\l  %95 = getelementptr inbounds float, float addrspace(1)* %16, i64 %91\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %97 = getelementptr inbounds float, float addrspace(3)* %7, i32 %88\l  store float %96, float addrspace(3)* %97, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x5874a20 -> Node0x5874a70;
	Node0x5874a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%98:\l98:                                               \l  %99 = or i32 %59, 3\l  %100 = mul i32 %99, %23\l  %101 = add i32 %100, %8\l  %102 = icmp slt i32 %101, %3\l  br i1 %102, label %103, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5874a70:s0 -> Node0x58753e0;
	Node0x5874a70:s1 -> Node0x5870800;
	Node0x58753e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%103:\l103:                                              \l  %104 = sext i32 %101 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %15, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %101\l  store float %106, float addrspace(3)* %107, align 4, !tbaa !7\l  %108 = getelementptr inbounds float, float addrspace(1)* %16, i64 %104\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %110 = getelementptr inbounds float, float addrspace(3)* %7, i32 %101\l  store float %109, float addrspace(3)* %110, align 4, !tbaa !7\l  br label %111\l}"];
	Node0x58753e0 -> Node0x5870800;
	Node0x5870800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%111:\l111:                                              \l  %112 = add nuw nsw i32 %59, 4\l  %113 = add i32 %60, 4\l  %114 = icmp eq i32 %113, %27\l  br i1 %114, label %28, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5870800:s0 -> Node0x5870480;
	Node0x5870800:s1 -> Node0x5870710;
	Node0x5873070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%115:\l115:                                              \l  %116 = phi i32 [ 0, %56 ], [ %213, %115 ]\l  %117 = phi i32 [ 0, %56 ], [ %214, %115 ]\l  %118 = zext i32 %116 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %15, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7\l  %121 = getelementptr inbounds float, float addrspace(3)* %7, i32 %116\l  %122 = load float, float addrspace(3)* %121, align 4, !tbaa !7\l  %123 = fptosi float %122 to i32\l  %124 = add nsw i32 %123, -1\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %12, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %128 = fadd contract float %120, %127\l  store float %128, float addrspace(1)* %126, align 4, !tbaa !7\l  %129 = or i32 %116, 1\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %15, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = getelementptr inbounds float, float addrspace(3)* %7, i32 %129\l  %134 = load float, float addrspace(3)* %133, align 4, !tbaa !7\l  %135 = fptosi float %134 to i32\l  %136 = add nsw i32 %135, -1\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %12, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = fadd contract float %132, %139\l  store float %140, float addrspace(1)* %138, align 4, !tbaa !7\l  %141 = or i32 %116, 2\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %15, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !7\l  %145 = getelementptr inbounds float, float addrspace(3)* %7, i32 %141\l  %146 = load float, float addrspace(3)* %145, align 4, !tbaa !7\l  %147 = fptosi float %146 to i32\l  %148 = add nsw i32 %147, -1\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %12, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7\l  %152 = fadd contract float %144, %151\l  store float %152, float addrspace(1)* %150, align 4, !tbaa !7\l  %153 = or i32 %116, 3\l  %154 = zext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %15, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = getelementptr inbounds float, float addrspace(3)* %7, i32 %153\l  %158 = load float, float addrspace(3)* %157, align 4, !tbaa !7\l  %159 = fptosi float %158 to i32\l  %160 = add nsw i32 %159, -1\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %12, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7\l  %164 = fadd contract float %156, %163\l  store float %164, float addrspace(1)* %162, align 4, !tbaa !7\l  %165 = or i32 %116, 4\l  %166 = zext i32 %165 to i64\l  %167 = getelementptr inbounds float, float addrspace(1)* %15, i64 %166\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7\l  %169 = getelementptr inbounds float, float addrspace(3)* %7, i32 %165\l  %170 = load float, float addrspace(3)* %169, align 4, !tbaa !7\l  %171 = fptosi float %170 to i32\l  %172 = add nsw i32 %171, -1\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %12, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !7\l  %176 = fadd contract float %168, %175\l  store float %176, float addrspace(1)* %174, align 4, !tbaa !7\l  %177 = or i32 %116, 5\l  %178 = zext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %15, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %181 = getelementptr inbounds float, float addrspace(3)* %7, i32 %177\l  %182 = load float, float addrspace(3)* %181, align 4, !tbaa !7\l  %183 = fptosi float %182 to i32\l  %184 = add nsw i32 %183, -1\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds float, float addrspace(1)* %12, i64 %185\l  %187 = load float, float addrspace(1)* %186, align 4, !tbaa !7\l  %188 = fadd contract float %180, %187\l  store float %188, float addrspace(1)* %186, align 4, !tbaa !7\l  %189 = or i32 %116, 6\l  %190 = zext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %15, i64 %190\l  %192 = load float, float addrspace(1)* %191, align 4, !tbaa !7\l  %193 = getelementptr inbounds float, float addrspace(3)* %7, i32 %189\l  %194 = load float, float addrspace(3)* %193, align 4, !tbaa !7\l  %195 = fptosi float %194 to i32\l  %196 = add nsw i32 %195, -1\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %12, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !7\l  %200 = fadd contract float %192, %199\l  store float %200, float addrspace(1)* %198, align 4, !tbaa !7\l  %201 = or i32 %116, 7\l  %202 = zext i32 %201 to i64\l  %203 = getelementptr inbounds float, float addrspace(1)* %15, i64 %202\l  %204 = load float, float addrspace(1)* %203, align 4, !tbaa !7\l  %205 = getelementptr inbounds float, float addrspace(3)* %7, i32 %201\l  %206 = load float, float addrspace(3)* %205, align 4, !tbaa !7\l  %207 = fptosi float %206 to i32\l  %208 = add nsw i32 %207, -1\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds float, float addrspace(1)* %12, i64 %209\l  %211 = load float, float addrspace(1)* %210, align 4, !tbaa !7\l  %212 = fadd contract float %204, %211\l  store float %212, float addrspace(1)* %210, align 4, !tbaa !7\l  %213 = add nuw nsw i32 %116, 8\l  %214 = add i32 %117, 8\l  %215 = icmp eq i32 %214, %57\l  br i1 %215, label %216, label %115, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5873070:s0 -> Node0x5872e20;
	Node0x5873070:s1 -> Node0x5873070;
	Node0x5872e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%216:\l216:                                              \l  %217 = phi i32 [ 0, %53 ], [ %213, %115 ]\l  %218 = icmp eq i32 %54, 0\l  br i1 %218, label %236, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5872e20:s0 -> Node0x5872b90;
	Node0x5872e20:s1 -> Node0x587ad80;
	Node0x587ad80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%219:\l219:                                              \l  %220 = phi i32 [ %233, %219 ], [ %217, %216 ]\l  %221 = phi i32 [ %234, %219 ], [ 0, %216 ]\l  %222 = zext i32 %220 to i64\l  %223 = getelementptr inbounds float, float addrspace(1)* %15, i64 %222\l  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !7\l  %225 = getelementptr inbounds float, float addrspace(3)* %7, i32 %220\l  %226 = load float, float addrspace(3)* %225, align 4, !tbaa !7\l  %227 = fptosi float %226 to i32\l  %228 = add nsw i32 %227, -1\l  %229 = sext i32 %228 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %12, i64 %229\l  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !7\l  %232 = fadd contract float %224, %231\l  store float %232, float addrspace(1)* %230, align 4, !tbaa !7\l  %233 = add nuw nsw i32 %220, 1\l  %234 = add i32 %221, 1\l  %235 = icmp eq i32 %234, %54\l  br i1 %235, label %236, label %219, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x587ad80:s0 -> Node0x5872b90;
	Node0x587ad80:s1 -> Node0x587ad80;
	Node0x5872b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%236:\l236:                                              \l  ret void\l}"];
}
