digraph "CFG for '_Z24cuda_graph_avgpool_bpropPfPKfS1_iiii' function" {
	label="CFG for '_Z24cuda_graph_avgpool_bpropPfPKfS1_iiii' function";

	Node0x5125790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %5\l  %11 = zext i32 %10 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %0, i64 %11\l  %13 = mul i32 %9, %3\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp sgt i32 %6, 0\l  br i1 %16, label %17, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5125790:s0 -> Node0x5126530;
	Node0x5125790:s1 -> Node0x5127550;
	Node0x5126530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%17:\l17:                                               \l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = and i32 %6, 3\l  %24 = icmp ult i32 %6, 4\l  br i1 %24, label %27, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5126530:s0 -> Node0x5127f10;
	Node0x5126530:s1 -> Node0x5127fa0;
	Node0x5127fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%25:\l25:                                               \l  %26 = and i32 %6, -4\l  br label %55\l}"];
	Node0x5127fa0 -> Node0x51281a0;
	Node0x5127f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %17 ], [ %97, %96 ]\l  %29 = icmp eq i32 %23, 0\l  br i1 %29, label %45, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5127f10:s0 -> Node0x5127550;
	Node0x5127f10:s1 -> Node0x5128460;
	Node0x5128460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %42, %41 ], [ %28, %27 ]\l  %32 = phi i32 [ %43, %41 ], [ 0, %27 ]\l  %33 = mul i32 %31, %22\l  %34 = add i32 %33, %8\l  %35 = icmp slt i32 %34, %3\l  br i1 %35, label %36, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5128460:s0 -> Node0x51274d0;
	Node0x5128460:s1 -> Node0x51285d0;
	Node0x51274d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%36:\l36:                                               \l  %37 = sext i32 %34 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %15, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %34\l  store float %39, float addrspace(3)* %40, align 4, !tbaa !7\l  br label %41\l}"];
	Node0x51274d0 -> Node0x51285d0;
	Node0x51285d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %31, 1\l  %43 = add i32 %32, 1\l  %44 = icmp eq i32 %43, %23\l  br i1 %44, label %45, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x51285d0:s0 -> Node0x5127550;
	Node0x51285d0:s1 -> Node0x5128460;
	Node0x5127550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%45:\l45:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp slt i32 %8, %4\l  %47 = icmp sgt i32 %3, 0\l  %48 = select i1 %46, i1 %47, i1 false\l  br i1 %48, label %49, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5127550:s0 -> Node0x512a350;
	Node0x5127550:s1 -> Node0x512a3a0;
	Node0x512a350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%49:\l49:                                               \l  %50 = sitofp i32 %4 to float\l  %51 = and i32 %3, 1\l  %52 = icmp eq i32 %3, 1\l  br i1 %52, label %137, label %53\l|{<s0>T|<s1>F}}"];
	Node0x512a350:s0 -> Node0x512a670;
	Node0x512a350:s1 -> Node0x512a6c0;
	Node0x512a6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%53:\l53:                                               \l  %54 = and i32 %3, -2\l  br label %100\l}"];
	Node0x512a6c0 -> Node0x512a890;
	Node0x51281a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %25 ], [ %97, %96 ]\l  %57 = phi i32 [ 0, %25 ], [ %98, %96 ]\l  %58 = mul i32 %56, %22\l  %59 = add i32 %58, %8\l  %60 = icmp slt i32 %59, %3\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x51281a0:s0 -> Node0x512ac90;
	Node0x51281a0:s1 -> Node0x512ad20;
	Node0x512ac90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%61:\l61:                                               \l  %62 = sext i32 %59 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %15, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %59\l  store float %64, float addrspace(3)* %65, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x512ac90 -> Node0x512ad20;
	Node0x512ad20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = or i32 %56, 1\l  %68 = mul i32 %67, %22\l  %69 = add i32 %68, %8\l  %70 = icmp slt i32 %69, %3\l  br i1 %70, label %71, label %76\l|{<s0>T|<s1>F}}"];
	Node0x512ad20:s0 -> Node0x512b630;
	Node0x512ad20:s1 -> Node0x512b680;
	Node0x512b630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%71:\l71:                                               \l  %72 = sext i32 %69 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %15, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %69\l  store float %74, float addrspace(3)* %75, align 4, !tbaa !7\l  br label %76\l}"];
	Node0x512b630 -> Node0x512b680;
	Node0x512b680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%76:\l76:                                               \l  %77 = or i32 %56, 2\l  %78 = mul i32 %77, %22\l  %79 = add i32 %78, %8\l  %80 = icmp slt i32 %79, %3\l  br i1 %80, label %81, label %86\l|{<s0>T|<s1>F}}"];
	Node0x512b680:s0 -> Node0x512bd40;
	Node0x512b680:s1 -> Node0x512bd90;
	Node0x512bd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%81:\l81:                                               \l  %82 = sext i32 %79 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %15, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %79\l  store float %84, float addrspace(3)* %85, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x512bd40 -> Node0x512bd90;
	Node0x512bd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%86:\l86:                                               \l  %87 = or i32 %56, 3\l  %88 = mul i32 %87, %22\l  %89 = add i32 %88, %8\l  %90 = icmp slt i32 %89, %3\l  br i1 %90, label %91, label %96\l|{<s0>T|<s1>F}}"];
	Node0x512bd90:s0 -> Node0x512c480;
	Node0x512bd90:s1 -> Node0x5128290;
	Node0x512c480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%91:\l91:                                               \l  %92 = sext i32 %89 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %15, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %95 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @shared_mem, i32 0, i32 %89\l  store float %94, float addrspace(3)* %95, align 4, !tbaa !7\l  br label %96\l}"];
	Node0x512c480 -> Node0x5128290;
	Node0x5128290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%96:\l96:                                               \l  %97 = add nuw nsw i32 %56, 4\l  %98 = add i32 %57, 4\l  %99 = icmp eq i32 %98, %26\l  br i1 %99, label %27, label %55, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5128290:s0 -> Node0x5127f10;
	Node0x5128290:s1 -> Node0x51281a0;
	Node0x512a890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%100:\l100:                                              \l  %101 = phi i32 [ 0, %53 ], [ %134, %100 ]\l  %102 = phi i32 [ 0, %53 ], [ %135, %100 ]\l  %103 = zext i32 %101 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %15, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7\l  %106 = fdiv contract float %105, %50\l  %107 = mul nsw i32 %101, %4\l  %108 = add nsw i32 %107, %8\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = fadd contract float %111, -1.000000e+00\l  %113 = fptosi float %112 to i32\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %12, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fadd contract float %106, %116\l  store float %117, float addrspace(1)* %115, align 4, !tbaa !7\l  %118 = or i32 %101, 1\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %15, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fdiv contract float %121, %50\l  %123 = mul nsw i32 %118, %4\l  %124 = add nsw i32 %123, %8\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %2, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %128 = fadd contract float %127, -1.000000e+00\l  %129 = fptosi float %128 to i32\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %12, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7\l  %133 = fadd contract float %122, %132\l  store float %133, float addrspace(1)* %131, align 4, !tbaa !7\l  %134 = add nuw nsw i32 %101, 2\l  %135 = add i32 %102, 2\l  %136 = icmp eq i32 %135, %54\l  br i1 %136, label %137, label %100, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x512a890:s0 -> Node0x512a670;
	Node0x512a890:s1 -> Node0x512a890;
	Node0x512a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%137:\l137:                                              \l  %138 = phi i32 [ 0, %49 ], [ %134, %100 ]\l  %139 = icmp eq i32 %51, 0\l  br i1 %139, label %156, label %140\l|{<s0>T|<s1>F}}"];
	Node0x512a670:s0 -> Node0x512a3a0;
	Node0x512a670:s1 -> Node0x512f150;
	Node0x512f150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%140:\l140:                                              \l  %141 = zext i32 %138 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %15, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7\l  %144 = fdiv contract float %143, %50\l  %145 = mul nsw i32 %138, %4\l  %146 = add nsw i32 %145, %8\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %2, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7\l  %150 = fadd contract float %149, -1.000000e+00\l  %151 = fptosi float %150 to i32\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %12, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !7\l  %155 = fadd contract float %144, %154\l  store float %155, float addrspace(1)* %153, align 4, !tbaa !7\l  br label %156\l}"];
	Node0x512f150 -> Node0x512a3a0;
	Node0x512a3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%156:\l156:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
