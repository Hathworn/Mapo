digraph "CFG for '_Z7indicesv' function" {
	label="CFG for '_Z7indicesv' function";

	Node0x50f10c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %2 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !5, !invariant.load !6\l  %7 = zext i16 %6 to i32\l  %8 = mul i32 %2, %7\l  %9 = add i32 %8, %1\l  %10 = getelementptr i8, i8 addrspace(4)* %3, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = sitofp i32 %9 to double\l  %14 = icmp slt i32 %9, 1\l  %15 = select i1 %14, double 0x4FF0000000000000, double 1.000000e+00\l  %16 = fmul double %15, %13\l  %17 = tail call double @llvm.amdgcn.rsq.f64(double %16)\l  %18 = fmul double %16, %17\l  %19 = fmul double %17, 5.000000e-01\l  %20 = fneg double %19\l  %21 = tail call double @llvm.fma.f64(double %20, double %18, double\l... 5.000000e-01)\l  %22 = tail call double @llvm.fma.f64(double %19, double %21, double %19)\l  %23 = tail call double @llvm.fma.f64(double %18, double %21, double %18)\l  %24 = fneg double %23\l  %25 = tail call double @llvm.fma.f64(double %24, double %23, double %16)\l  %26 = tail call double @llvm.fma.f64(double %25, double %22, double %23)\l  %27 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %27, i64 24\l  %29 = bitcast i8 addrspace(4)* %28 to i64 addrspace(4)*\l  %30 = load i64, i64 addrspace(4)* %29, align 8, !tbaa !7\l  %31 = inttoptr i64 %30 to i8 addrspace(1)*\l  %32 = addrspacecast i8 addrspace(1)* %31 to i8*\l  %33 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %34 = extractelement \<2 x i64\> %33, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([74 x i8], [74 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %35, label %39\l|{<s0>T|<s1>F}}"];
	Node0x50f10c0:s0 -> Node0x50f6600;
	Node0x50f10c0:s1 -> Node0x50f6ff0;
	Node0x50f6600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%35:\l35:                                               \l  %36 = and i64 %34, -225\l  %37 = or i64 %36, 32\l  %38 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %37, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %480\l}"];
	Node0x50f6600 -> Node0x50f72d0;
	Node0x50f6ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%39:\l39:                                               \l  %40 = and i64 %34, 2\l  %41 = and i64 %34, -3\l  %42 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %41, i64 0\l  br label %43\l}"];
	Node0x50f6ff0 -> Node0x50f7e70;
	Node0x50f7e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%43:\l43:                                               \l  %44 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([74 x i8], [74 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([74 x i8], [74 x i8] addrspace(4)*\l... @.str, i64 0, i64 73) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([74 x i8]* addrspacecast ([74 x i8] addrspace(4)* @.str to [74 x i8]*) to\l... i64)), i64 1))), %39 ], [ %477, %469 ]\l  %45 = phi i8 addrspace(4)* [ getelementptr inbounds ([74 x i8], [74 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %39 ], [ %478, %469 ]\l  %46 = phi \<2 x i64\> [ %42, %39 ], [ %476, %469 ]\l  %47 = icmp ugt i64 %44, 56\l  %48 = extractelement \<2 x i64\> %46, i64 0\l  %49 = or i64 %48, %40\l  %50 = insertelement \<2 x i64\> poison, i64 %49, i64 0\l  %51 = select i1 %47, \<2 x i64\> %46, \<2 x i64\> %50\l  %52 = tail call i64 @llvm.umin.i64(i64 %44, i64 56)\l  %53 = trunc i64 %52 to i32\l  %54 = extractelement \<2 x i64\> %51, i64 0\l  %55 = icmp ugt i32 %53, 7\l  br i1 %55, label %58, label %56\l|{<s0>T|<s1>F}}"];
	Node0x50f7e70:s0 -> Node0x50f8de0;
	Node0x50f7e70:s1 -> Node0x50f8e70;
	Node0x50f8e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%56:\l56:                                               \l  %57 = icmp eq i32 %53, 0\l  br i1 %57, label %111, label %98\l|{<s0>T|<s1>F}}"];
	Node0x50f8e70:s0 -> Node0x50f9070;
	Node0x50f8e70:s1 -> Node0x50f90c0;
	Node0x50f8de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%58:\l58:                                               \l  %59 = load i8, i8 addrspace(4)* %45, align 1, !tbaa !11\l  %60 = zext i8 %59 to i64\l  %61 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 1\l  %62 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !11\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 8\l  %65 = or i64 %64, %60\l  %66 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 2\l  %67 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !11\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw nsw i64 %68, 16\l  %70 = or i64 %65, %69\l  %71 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 3\l  %72 = load i8, i8 addrspace(4)* %71, align 1, !tbaa !11\l  %73 = zext i8 %72 to i64\l  %74 = shl nuw nsw i64 %73, 24\l  %75 = or i64 %70, %74\l  %76 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 4\l  %77 = load i8, i8 addrspace(4)* %76, align 1, !tbaa !11\l  %78 = zext i8 %77 to i64\l  %79 = shl nuw nsw i64 %78, 32\l  %80 = or i64 %75, %79\l  %81 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 5\l  %82 = load i8, i8 addrspace(4)* %81, align 1, !tbaa !11\l  %83 = zext i8 %82 to i64\l  %84 = shl nuw nsw i64 %83, 40\l  %85 = or i64 %80, %84\l  %86 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 6\l  %87 = load i8, i8 addrspace(4)* %86, align 1, !tbaa !11\l  %88 = zext i8 %87 to i64\l  %89 = shl nuw nsw i64 %88, 48\l  %90 = or i64 %85, %89\l  %91 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 7\l  %92 = load i8, i8 addrspace(4)* %91, align 1, !tbaa !11\l  %93 = zext i8 %92 to i64\l  %94 = shl nuw i64 %93, 56\l  %95 = or i64 %90, %94\l  %96 = add nsw i32 %53, -8\l  %97 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 8\l  br label %111\l}"];
	Node0x50f8de0 -> Node0x50f9070;
	Node0x50f90c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi i32 [ %109, %98 ], [ 0, %56 ]\l  %100 = phi i64 [ %108, %98 ], [ 0, %56 ]\l  %101 = zext i32 %99 to i64\l  %102 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 %101\l  %103 = load i8, i8 addrspace(4)* %102, align 1, !tbaa !11\l  %104 = zext i8 %103 to i64\l  %105 = shl i32 %99, 3\l  %106 = zext i32 %105 to i64\l  %107 = shl nuw i64 %104, %106\l  %108 = or i64 %107, %100\l  %109 = add nuw nsw i32 %99, 1\l  %110 = icmp eq i32 %109, %53\l  br i1 %110, label %111, label %98, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x50f90c0:s0 -> Node0x50f9070;
	Node0x50f90c0:s1 -> Node0x50f90c0;
	Node0x50f9070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%111:\l111:                                              \l  %112 = phi i8 addrspace(4)* [ %97, %58 ], [ %45, %56 ], [ %45, %98 ]\l  %113 = phi i32 [ %96, %58 ], [ 0, %56 ], [ 0, %98 ]\l  %114 = phi i64 [ %95, %58 ], [ 0, %56 ], [ %108, %98 ]\l  %115 = icmp ugt i32 %113, 7\l  br i1 %115, label %118, label %116\l|{<s0>T|<s1>F}}"];
	Node0x50f9070:s0 -> Node0x50fbd40;
	Node0x50f9070:s1 -> Node0x50fbd90;
	Node0x50fbd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%116:\l116:                                              \l  %117 = icmp eq i32 %113, 0\l  br i1 %117, label %171, label %158\l|{<s0>T|<s1>F}}"];
	Node0x50fbd90:s0 -> Node0x50fbf60;
	Node0x50fbd90:s1 -> Node0x50fbfb0;
	Node0x50fbd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%118:\l118:                                              \l  %119 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !11\l  %120 = zext i8 %119 to i64\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 1\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !11\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw nsw i64 %123, 8\l  %125 = or i64 %124, %120\l  %126 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 2\l  %127 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !11\l  %128 = zext i8 %127 to i64\l  %129 = shl nuw nsw i64 %128, 16\l  %130 = or i64 %125, %129\l  %131 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 3\l  %132 = load i8, i8 addrspace(4)* %131, align 1, !tbaa !11\l  %133 = zext i8 %132 to i64\l  %134 = shl nuw nsw i64 %133, 24\l  %135 = or i64 %130, %134\l  %136 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 4\l  %137 = load i8, i8 addrspace(4)* %136, align 1, !tbaa !11\l  %138 = zext i8 %137 to i64\l  %139 = shl nuw nsw i64 %138, 32\l  %140 = or i64 %135, %139\l  %141 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 5\l  %142 = load i8, i8 addrspace(4)* %141, align 1, !tbaa !11\l  %143 = zext i8 %142 to i64\l  %144 = shl nuw nsw i64 %143, 40\l  %145 = or i64 %140, %144\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 6\l  %147 = load i8, i8 addrspace(4)* %146, align 1, !tbaa !11\l  %148 = zext i8 %147 to i64\l  %149 = shl nuw nsw i64 %148, 48\l  %150 = or i64 %145, %149\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 7\l  %152 = load i8, i8 addrspace(4)* %151, align 1, !tbaa !11\l  %153 = zext i8 %152 to i64\l  %154 = shl nuw i64 %153, 56\l  %155 = or i64 %150, %154\l  %156 = add nsw i32 %113, -8\l  %157 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 8\l  br label %171\l}"];
	Node0x50fbd40 -> Node0x50fbf60;
	Node0x50fbfb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi i32 [ %169, %158 ], [ 0, %116 ]\l  %160 = phi i64 [ %168, %158 ], [ 0, %116 ]\l  %161 = zext i32 %159 to i64\l  %162 = getelementptr inbounds i8, i8 addrspace(4)* %112, i64 %161\l  %163 = load i8, i8 addrspace(4)* %162, align 1, !tbaa !11\l  %164 = zext i8 %163 to i64\l  %165 = shl i32 %159, 3\l  %166 = zext i32 %165 to i64\l  %167 = shl nuw i64 %164, %166\l  %168 = or i64 %167, %160\l  %169 = add nuw nsw i32 %159, 1\l  %170 = icmp eq i32 %169, %113\l  br i1 %170, label %171, label %158\l|{<s0>T|<s1>F}}"];
	Node0x50fbfb0:s0 -> Node0x50fbf60;
	Node0x50fbfb0:s1 -> Node0x50fbfb0;
	Node0x50fbf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%171:\l171:                                              \l  %172 = phi i8 addrspace(4)* [ %157, %118 ], [ %112, %116 ], [ %112, %158 ]\l  %173 = phi i32 [ %156, %118 ], [ 0, %116 ], [ 0, %158 ]\l  %174 = phi i64 [ %155, %118 ], [ 0, %116 ], [ %168, %158 ]\l  %175 = icmp ugt i32 %173, 7\l  br i1 %175, label %178, label %176\l|{<s0>T|<s1>F}}"];
	Node0x50fbf60:s0 -> Node0x50fe440;
	Node0x50fbf60:s1 -> Node0x50fe490;
	Node0x50fe490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%176:\l176:                                              \l  %177 = icmp eq i32 %173, 0\l  br i1 %177, label %231, label %218\l|{<s0>T|<s1>F}}"];
	Node0x50fe490:s0 -> Node0x50fe620;
	Node0x50fe490:s1 -> Node0x50fe670;
	Node0x50fe440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%178:\l178:                                              \l  %179 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !11\l  %180 = zext i8 %179 to i64\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 1\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !11\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw nsw i64 %183, 8\l  %185 = or i64 %184, %180\l  %186 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 2\l  %187 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !11\l  %188 = zext i8 %187 to i64\l  %189 = shl nuw nsw i64 %188, 16\l  %190 = or i64 %185, %189\l  %191 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 3\l  %192 = load i8, i8 addrspace(4)* %191, align 1, !tbaa !11\l  %193 = zext i8 %192 to i64\l  %194 = shl nuw nsw i64 %193, 24\l  %195 = or i64 %190, %194\l  %196 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 4\l  %197 = load i8, i8 addrspace(4)* %196, align 1, !tbaa !11\l  %198 = zext i8 %197 to i64\l  %199 = shl nuw nsw i64 %198, 32\l  %200 = or i64 %195, %199\l  %201 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 5\l  %202 = load i8, i8 addrspace(4)* %201, align 1, !tbaa !11\l  %203 = zext i8 %202 to i64\l  %204 = shl nuw nsw i64 %203, 40\l  %205 = or i64 %200, %204\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 6\l  %207 = load i8, i8 addrspace(4)* %206, align 1, !tbaa !11\l  %208 = zext i8 %207 to i64\l  %209 = shl nuw nsw i64 %208, 48\l  %210 = or i64 %205, %209\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 7\l  %212 = load i8, i8 addrspace(4)* %211, align 1, !tbaa !11\l  %213 = zext i8 %212 to i64\l  %214 = shl nuw i64 %213, 56\l  %215 = or i64 %210, %214\l  %216 = add nsw i32 %173, -8\l  %217 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 8\l  br label %231\l}"];
	Node0x50fe440 -> Node0x50fe620;
	Node0x50fe670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%218:\l218:                                              \l  %219 = phi i32 [ %229, %218 ], [ 0, %176 ]\l  %220 = phi i64 [ %228, %218 ], [ 0, %176 ]\l  %221 = zext i32 %219 to i64\l  %222 = getelementptr inbounds i8, i8 addrspace(4)* %172, i64 %221\l  %223 = load i8, i8 addrspace(4)* %222, align 1, !tbaa !11\l  %224 = zext i8 %223 to i64\l  %225 = shl i32 %219, 3\l  %226 = zext i32 %225 to i64\l  %227 = shl nuw i64 %224, %226\l  %228 = or i64 %227, %220\l  %229 = add nuw nsw i32 %219, 1\l  %230 = icmp eq i32 %229, %173\l  br i1 %230, label %231, label %218\l|{<s0>T|<s1>F}}"];
	Node0x50fe670:s0 -> Node0x50fe620;
	Node0x50fe670:s1 -> Node0x50fe670;
	Node0x50fe620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%231:\l231:                                              \l  %232 = phi i8 addrspace(4)* [ %217, %178 ], [ %172, %176 ], [ %172, %218 ]\l  %233 = phi i32 [ %216, %178 ], [ 0, %176 ], [ 0, %218 ]\l  %234 = phi i64 [ %215, %178 ], [ 0, %176 ], [ %228, %218 ]\l  %235 = icmp ugt i32 %233, 7\l  br i1 %235, label %238, label %236\l|{<s0>T|<s1>F}}"];
	Node0x50fe620:s0 -> Node0x5100690;
	Node0x50fe620:s1 -> Node0x51006e0;
	Node0x51006e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%236:\l236:                                              \l  %237 = icmp eq i32 %233, 0\l  br i1 %237, label %291, label %278\l|{<s0>T|<s1>F}}"];
	Node0x51006e0:s0 -> Node0x5100870;
	Node0x51006e0:s1 -> Node0x51008c0;
	Node0x5100690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%238:\l238:                                              \l  %239 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !11\l  %240 = zext i8 %239 to i64\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 1\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !11\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 8\l  %245 = or i64 %244, %240\l  %246 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 2\l  %247 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !11\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw nsw i64 %248, 16\l  %250 = or i64 %245, %249\l  %251 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 3\l  %252 = load i8, i8 addrspace(4)* %251, align 1, !tbaa !11\l  %253 = zext i8 %252 to i64\l  %254 = shl nuw nsw i64 %253, 24\l  %255 = or i64 %250, %254\l  %256 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 4\l  %257 = load i8, i8 addrspace(4)* %256, align 1, !tbaa !11\l  %258 = zext i8 %257 to i64\l  %259 = shl nuw nsw i64 %258, 32\l  %260 = or i64 %255, %259\l  %261 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 5\l  %262 = load i8, i8 addrspace(4)* %261, align 1, !tbaa !11\l  %263 = zext i8 %262 to i64\l  %264 = shl nuw nsw i64 %263, 40\l  %265 = or i64 %260, %264\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 6\l  %267 = load i8, i8 addrspace(4)* %266, align 1, !tbaa !11\l  %268 = zext i8 %267 to i64\l  %269 = shl nuw nsw i64 %268, 48\l  %270 = or i64 %265, %269\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 7\l  %272 = load i8, i8 addrspace(4)* %271, align 1, !tbaa !11\l  %273 = zext i8 %272 to i64\l  %274 = shl nuw i64 %273, 56\l  %275 = or i64 %270, %274\l  %276 = add nsw i32 %233, -8\l  %277 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 8\l  br label %291\l}"];
	Node0x5100690 -> Node0x5100870;
	Node0x51008c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%278:\l278:                                              \l  %279 = phi i32 [ %289, %278 ], [ 0, %236 ]\l  %280 = phi i64 [ %288, %278 ], [ 0, %236 ]\l  %281 = zext i32 %279 to i64\l  %282 = getelementptr inbounds i8, i8 addrspace(4)* %232, i64 %281\l  %283 = load i8, i8 addrspace(4)* %282, align 1, !tbaa !11\l  %284 = zext i8 %283 to i64\l  %285 = shl i32 %279, 3\l  %286 = zext i32 %285 to i64\l  %287 = shl nuw i64 %284, %286\l  %288 = or i64 %287, %280\l  %289 = add nuw nsw i32 %279, 1\l  %290 = icmp eq i32 %289, %233\l  br i1 %290, label %291, label %278\l|{<s0>T|<s1>F}}"];
	Node0x51008c0:s0 -> Node0x5100870;
	Node0x51008c0:s1 -> Node0x51008c0;
	Node0x5100870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%291:\l291:                                              \l  %292 = phi i8 addrspace(4)* [ %277, %238 ], [ %232, %236 ], [ %232, %278 ]\l  %293 = phi i32 [ %276, %238 ], [ 0, %236 ], [ 0, %278 ]\l  %294 = phi i64 [ %275, %238 ], [ 0, %236 ], [ %288, %278 ]\l  %295 = icmp ugt i32 %293, 7\l  br i1 %295, label %298, label %296\l|{<s0>T|<s1>F}}"];
	Node0x5100870:s0 -> Node0x5103110;
	Node0x5100870:s1 -> Node0x5103160;
	Node0x5103160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%296:\l296:                                              \l  %297 = icmp eq i32 %293, 0\l  br i1 %297, label %351, label %338\l|{<s0>T|<s1>F}}"];
	Node0x5103160:s0 -> Node0x51032f0;
	Node0x5103160:s1 -> Node0x5103340;
	Node0x5103110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%298:\l298:                                              \l  %299 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !11\l  %300 = zext i8 %299 to i64\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 1\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !11\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw nsw i64 %303, 8\l  %305 = or i64 %304, %300\l  %306 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 2\l  %307 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !11\l  %308 = zext i8 %307 to i64\l  %309 = shl nuw nsw i64 %308, 16\l  %310 = or i64 %305, %309\l  %311 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 3\l  %312 = load i8, i8 addrspace(4)* %311, align 1, !tbaa !11\l  %313 = zext i8 %312 to i64\l  %314 = shl nuw nsw i64 %313, 24\l  %315 = or i64 %310, %314\l  %316 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 4\l  %317 = load i8, i8 addrspace(4)* %316, align 1, !tbaa !11\l  %318 = zext i8 %317 to i64\l  %319 = shl nuw nsw i64 %318, 32\l  %320 = or i64 %315, %319\l  %321 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 5\l  %322 = load i8, i8 addrspace(4)* %321, align 1, !tbaa !11\l  %323 = zext i8 %322 to i64\l  %324 = shl nuw nsw i64 %323, 40\l  %325 = or i64 %320, %324\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 6\l  %327 = load i8, i8 addrspace(4)* %326, align 1, !tbaa !11\l  %328 = zext i8 %327 to i64\l  %329 = shl nuw nsw i64 %328, 48\l  %330 = or i64 %325, %329\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 7\l  %332 = load i8, i8 addrspace(4)* %331, align 1, !tbaa !11\l  %333 = zext i8 %332 to i64\l  %334 = shl nuw i64 %333, 56\l  %335 = or i64 %330, %334\l  %336 = add nsw i32 %293, -8\l  %337 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 8\l  br label %351\l}"];
	Node0x5103110 -> Node0x51032f0;
	Node0x5103340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%338:\l338:                                              \l  %339 = phi i32 [ %349, %338 ], [ 0, %296 ]\l  %340 = phi i64 [ %348, %338 ], [ 0, %296 ]\l  %341 = zext i32 %339 to i64\l  %342 = getelementptr inbounds i8, i8 addrspace(4)* %292, i64 %341\l  %343 = load i8, i8 addrspace(4)* %342, align 1, !tbaa !11\l  %344 = zext i8 %343 to i64\l  %345 = shl i32 %339, 3\l  %346 = zext i32 %345 to i64\l  %347 = shl nuw i64 %344, %346\l  %348 = or i64 %347, %340\l  %349 = add nuw nsw i32 %339, 1\l  %350 = icmp eq i32 %349, %293\l  br i1 %350, label %351, label %338\l|{<s0>T|<s1>F}}"];
	Node0x5103340:s0 -> Node0x51032f0;
	Node0x5103340:s1 -> Node0x5103340;
	Node0x51032f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%351:\l351:                                              \l  %352 = phi i8 addrspace(4)* [ %337, %298 ], [ %292, %296 ], [ %292, %338 ]\l  %353 = phi i32 [ %336, %298 ], [ 0, %296 ], [ 0, %338 ]\l  %354 = phi i64 [ %335, %298 ], [ 0, %296 ], [ %348, %338 ]\l  %355 = icmp ugt i32 %353, 7\l  br i1 %355, label %358, label %356\l|{<s0>T|<s1>F}}"];
	Node0x51032f0:s0 -> Node0x5105d70;
	Node0x51032f0:s1 -> Node0x5105dc0;
	Node0x5105dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%356:\l356:                                              \l  %357 = icmp eq i32 %353, 0\l  br i1 %357, label %411, label %398\l|{<s0>T|<s1>F}}"];
	Node0x5105dc0:s0 -> Node0x5105f50;
	Node0x5105dc0:s1 -> Node0x5105fa0;
	Node0x5105d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%358:\l358:                                              \l  %359 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !11\l  %360 = zext i8 %359 to i64\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 1\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !11\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw nsw i64 %363, 8\l  %365 = or i64 %364, %360\l  %366 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 2\l  %367 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !11\l  %368 = zext i8 %367 to i64\l  %369 = shl nuw nsw i64 %368, 16\l  %370 = or i64 %365, %369\l  %371 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 3\l  %372 = load i8, i8 addrspace(4)* %371, align 1, !tbaa !11\l  %373 = zext i8 %372 to i64\l  %374 = shl nuw nsw i64 %373, 24\l  %375 = or i64 %370, %374\l  %376 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 4\l  %377 = load i8, i8 addrspace(4)* %376, align 1, !tbaa !11\l  %378 = zext i8 %377 to i64\l  %379 = shl nuw nsw i64 %378, 32\l  %380 = or i64 %375, %379\l  %381 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 5\l  %382 = load i8, i8 addrspace(4)* %381, align 1, !tbaa !11\l  %383 = zext i8 %382 to i64\l  %384 = shl nuw nsw i64 %383, 40\l  %385 = or i64 %380, %384\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 6\l  %387 = load i8, i8 addrspace(4)* %386, align 1, !tbaa !11\l  %388 = zext i8 %387 to i64\l  %389 = shl nuw nsw i64 %388, 48\l  %390 = or i64 %385, %389\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 7\l  %392 = load i8, i8 addrspace(4)* %391, align 1, !tbaa !11\l  %393 = zext i8 %392 to i64\l  %394 = shl nuw i64 %393, 56\l  %395 = or i64 %390, %394\l  %396 = add nsw i32 %353, -8\l  %397 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 8\l  br label %411\l}"];
	Node0x5105d70 -> Node0x5105f50;
	Node0x5105fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%398:\l398:                                              \l  %399 = phi i32 [ %409, %398 ], [ 0, %356 ]\l  %400 = phi i64 [ %408, %398 ], [ 0, %356 ]\l  %401 = zext i32 %399 to i64\l  %402 = getelementptr inbounds i8, i8 addrspace(4)* %352, i64 %401\l  %403 = load i8, i8 addrspace(4)* %402, align 1, !tbaa !11\l  %404 = zext i8 %403 to i64\l  %405 = shl i32 %399, 3\l  %406 = zext i32 %405 to i64\l  %407 = shl nuw i64 %404, %406\l  %408 = or i64 %407, %400\l  %409 = add nuw nsw i32 %399, 1\l  %410 = icmp eq i32 %409, %353\l  br i1 %410, label %411, label %398\l|{<s0>T|<s1>F}}"];
	Node0x5105fa0:s0 -> Node0x5105f50;
	Node0x5105fa0:s1 -> Node0x5105fa0;
	Node0x5105f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%411:\l411:                                              \l  %412 = phi i8 addrspace(4)* [ %397, %358 ], [ %352, %356 ], [ %352, %398 ]\l  %413 = phi i32 [ %396, %358 ], [ 0, %356 ], [ 0, %398 ]\l  %414 = phi i64 [ %395, %358 ], [ 0, %356 ], [ %408, %398 ]\l  %415 = icmp ugt i32 %413, 7\l  br i1 %415, label %418, label %416\l|{<s0>T|<s1>F}}"];
	Node0x5105f50:s0 -> Node0x51085d0;
	Node0x5105f50:s1 -> Node0x5108620;
	Node0x5108620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%416:\l416:                                              \l  %417 = icmp eq i32 %413, 0\l  br i1 %417, label %469, label %456\l|{<s0>T|<s1>F}}"];
	Node0x5108620:s0 -> Node0x50f8310;
	Node0x5108620:s1 -> Node0x51087b0;
	Node0x51085d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%418:\l418:                                              \l  %419 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !11\l  %420 = zext i8 %419 to i64\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 1\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !11\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw nsw i64 %423, 8\l  %425 = or i64 %424, %420\l  %426 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 2\l  %427 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !11\l  %428 = zext i8 %427 to i64\l  %429 = shl nuw nsw i64 %428, 16\l  %430 = or i64 %425, %429\l  %431 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 3\l  %432 = load i8, i8 addrspace(4)* %431, align 1, !tbaa !11\l  %433 = zext i8 %432 to i64\l  %434 = shl nuw nsw i64 %433, 24\l  %435 = or i64 %430, %434\l  %436 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 4\l  %437 = load i8, i8 addrspace(4)* %436, align 1, !tbaa !11\l  %438 = zext i8 %437 to i64\l  %439 = shl nuw nsw i64 %438, 32\l  %440 = or i64 %435, %439\l  %441 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 5\l  %442 = load i8, i8 addrspace(4)* %441, align 1, !tbaa !11\l  %443 = zext i8 %442 to i64\l  %444 = shl nuw nsw i64 %443, 40\l  %445 = or i64 %440, %444\l  %446 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 6\l  %447 = load i8, i8 addrspace(4)* %446, align 1, !tbaa !11\l  %448 = zext i8 %447 to i64\l  %449 = shl nuw nsw i64 %448, 48\l  %450 = or i64 %445, %449\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 7\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !11\l  %453 = zext i8 %452 to i64\l  %454 = shl nuw i64 %453, 56\l  %455 = or i64 %450, %454\l  br label %469\l}"];
	Node0x51085d0 -> Node0x50f8310;
	Node0x51087b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%456:\l456:                                              \l  %457 = phi i32 [ %467, %456 ], [ 0, %416 ]\l  %458 = phi i64 [ %466, %456 ], [ 0, %416 ]\l  %459 = zext i32 %457 to i64\l  %460 = getelementptr inbounds i8, i8 addrspace(4)* %412, i64 %459\l  %461 = load i8, i8 addrspace(4)* %460, align 1, !tbaa !11\l  %462 = zext i8 %461 to i64\l  %463 = shl i32 %457, 3\l  %464 = zext i32 %463 to i64\l  %465 = shl nuw i64 %462, %464\l  %466 = or i64 %465, %458\l  %467 = add nuw nsw i32 %457, 1\l  %468 = icmp eq i32 %467, %413\l  br i1 %468, label %469, label %456\l|{<s0>T|<s1>F}}"];
	Node0x51087b0:s0 -> Node0x50f8310;
	Node0x51087b0:s1 -> Node0x51087b0;
	Node0x50f8310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%469:\l469:                                              \l  %470 = phi i64 [ %455, %418 ], [ 0, %416 ], [ %466, %456 ]\l  %471 = shl nuw nsw i64 %52, 2\l  %472 = add nuw nsw i64 %471, 28\l  %473 = and i64 %472, 480\l  %474 = and i64 %54, -225\l  %475 = or i64 %474, %473\l  %476 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %475, i64 noundef %114, i64 noundef %174, i64 noundef %234, i64\l... noundef %294, i64 noundef %354, i64 noundef %414, i64 noundef %470) #11\l  %477 = sub i64 %44, %52\l  %478 = getelementptr inbounds i8, i8 addrspace(4)* %45, i64 %52\l  %479 = icmp eq i64 %477, 0\l  br i1 %479, label %480, label %43\l|{<s0>T|<s1>F}}"];
	Node0x50f8310:s0 -> Node0x50f72d0;
	Node0x50f8310:s1 -> Node0x50f7e70;
	Node0x50f72d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%480:\l480:                                              \l  %481 = phi \<2 x i64\> [ %38, %35 ], [ %476, %469 ]\l  %482 = fcmp oeq double %16, 0.000000e+00\l  %483 = fcmp oeq double %16, 0x7FF0000000000000\l  %484 = or i1 %482, %483\l  %485 = select i1 %14, double 0x37F0000000000000, double 1.000000e+00\l  %486 = fneg double %26\l  %487 = tail call double @llvm.fma.f64(double %486, double %26, double %16)\l  %488 = tail call double @llvm.fma.f64(double %487, double %22, double %26)\l  %489 = fmul double %485, %488\l  %490 = select i1 %484, double %16, double %489\l  %491 = extractelement \<2 x i64\> %481, i64 0\l  %492 = zext i16 %12 to i64\l  %493 = and i64 %491, -225\l  %494 = or i64 %493, 32\l  %495 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %494, i64 noundef %492, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %496 = extractelement \<2 x i64\> %495, i64 0\l  %497 = zext i32 %1 to i64\l  %498 = and i64 %496, -225\l  %499 = or i64 %498, 32\l  %500 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %499, i64 noundef %497, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %501 = extractelement \<2 x i64\> %500, i64 0\l  %502 = zext i32 %2 to i64\l  %503 = and i64 %501, -225\l  %504 = or i64 %503, 32\l  %505 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %504, i64 noundef %502, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %506 = extractelement \<2 x i64\> %505, i64 0\l  %507 = zext i16 %6 to i64\l  %508 = and i64 %506, -225\l  %509 = or i64 %508, 32\l  %510 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %509, i64 noundef %507, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %511 = extractelement \<2 x i64\> %510, i64 0\l  %512 = zext i32 %9 to i64\l  %513 = and i64 %511, -225\l  %514 = or i64 %513, 32\l  %515 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %514, i64 noundef %512, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %516 = extractelement \<2 x i64\> %515, i64 0\l  %517 = bitcast double %490 to i64\l  %518 = and i64 %516, -227\l  %519 = or i64 %518, 34\l  %520 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %32,\l... i64 noundef %519, i64 noundef %517, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
