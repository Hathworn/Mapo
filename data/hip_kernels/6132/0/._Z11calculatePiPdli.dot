digraph "CFG for '_Z11calculatePiPdli' function" {
	label="CFG for '_Z11calculatePiPdli' function";

	Node0x56371d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sext i32 %2 to i64\l  %14 = sdiv i64 %1, %13\l  %15 = sext i32 %12 to i64\l  %16 = mul nsw i64 %14, %15\l  %17 = add nsw i64 %14, -1\l  %18 = add i64 %17, %16\l  br label %19\l}"];
	Node0x56371d0 -> Node0x56393b0;
	Node0x56393b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi double [ 0.000000e+00, %3 ], [ %30, %19 ]\l  %21 = phi i64 [ %16, %3 ], [ %31, %19 ]\l  %22 = shl i64 %21, 1\l  %23 = add nuw nsw i64 %22, 1\l  %24 = sitofp i64 %23 to double\l  %25 = fdiv contract double 4.000000e+00, %24\l  %26 = fadd contract double %20, %25\l  %27 = add i64 %22, 3\l  %28 = sitofp i64 %27 to double\l  %29 = fdiv contract double 4.000000e+00, %28\l  %30 = fsub contract double %26, %29\l  %31 = add nsw i64 %21, 2\l  %32 = icmp slt i64 %31, %18\l  br i1 %32, label %19, label %33, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x56393b0:s0 -> Node0x56393b0;
	Node0x56393b0:s1 -> Node0x5639210;
	Node0x5639210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  store double %30, double addrspace(1)* %34, align 8, !tbaa !9\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = icmp eq i32 %12, 0\l  %36 = icmp sgt i32 %2, 1\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5639210:s0 -> Node0x563b1e0;
	Node0x5639210:s1 -> Node0x563b270;
	Node0x563b1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%38:\l38:                                               \l  %39 = load double, double addrspace(1)* %0, align 8, !tbaa !9\l  %40 = add nsw i64 %13, -1\l  %41 = add nsw i64 %13, -2\l  %42 = and i64 %40, 7\l  %43 = icmp ult i64 %41, 7\l  br i1 %43, label %84, label %44\l|{<s0>T|<s1>F}}"];
	Node0x563b1e0:s0 -> Node0x563bca0;
	Node0x563b1e0:s1 -> Node0x563bd30;
	Node0x563bd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%44:\l44:                                               \l  %45 = and i64 %40, -8\l  br label %46\l}"];
	Node0x563bd30 -> Node0x563bf30;
	Node0x563bf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%46:\l46:                                               \l  %47 = phi double [ %39, %44 ], [ %80, %46 ]\l  %48 = phi i64 [ 1, %44 ], [ %81, %46 ]\l  %49 = phi i64 [ 0, %44 ], [ %82, %46 ]\l  %50 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !9\l  %52 = fadd contract double %47, %51\l  store double %52, double addrspace(1)* %0, align 8, !tbaa !9\l  %53 = add nuw nsw i64 %48, 1\l  %54 = getelementptr inbounds double, double addrspace(1)* %0, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !9\l  %56 = fadd contract double %52, %55\l  store double %56, double addrspace(1)* %0, align 8, !tbaa !9\l  %57 = add nuw nsw i64 %48, 2\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !9\l  %60 = fadd contract double %56, %59\l  store double %60, double addrspace(1)* %0, align 8, !tbaa !9\l  %61 = add nuw nsw i64 %48, 3\l  %62 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !9\l  %64 = fadd contract double %60, %63\l  store double %64, double addrspace(1)* %0, align 8, !tbaa !9\l  %65 = add nuw nsw i64 %48, 4\l  %66 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !9\l  %68 = fadd contract double %64, %67\l  store double %68, double addrspace(1)* %0, align 8, !tbaa !9\l  %69 = add nuw nsw i64 %48, 5\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !9\l  %72 = fadd contract double %68, %71\l  store double %72, double addrspace(1)* %0, align 8, !tbaa !9\l  %73 = add nuw nsw i64 %48, 6\l  %74 = getelementptr inbounds double, double addrspace(1)* %0, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !9\l  %76 = fadd contract double %72, %75\l  store double %76, double addrspace(1)* %0, align 8, !tbaa !9\l  %77 = add nuw nsw i64 %48, 7\l  %78 = getelementptr inbounds double, double addrspace(1)* %0, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !9\l  %80 = fadd contract double %76, %79\l  store double %80, double addrspace(1)* %0, align 8, !tbaa !9\l  %81 = add nuw nsw i64 %48, 8\l  %82 = add nuw i64 %49, 8\l  %83 = icmp eq i64 %82, %45\l  br i1 %83, label %84, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x563bf30:s0 -> Node0x563bca0;
	Node0x563bf30:s1 -> Node0x563bf30;
	Node0x563bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%84:\l84:                                               \l  %85 = phi double [ %39, %38 ], [ %80, %46 ]\l  %86 = phi i64 [ 1, %38 ], [ %81, %46 ]\l  %87 = icmp eq i64 %42, 0\l  br i1 %87, label %98, label %88\l|{<s0>T|<s1>F}}"];
	Node0x563bca0:s0 -> Node0x563b270;
	Node0x563bca0:s1 -> Node0x563e030;
	Node0x563e030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%88:\l88:                                               \l  %89 = phi double [ %94, %88 ], [ %85, %84 ]\l  %90 = phi i64 [ %95, %88 ], [ %86, %84 ]\l  %91 = phi i64 [ %96, %88 ], [ 0, %84 ]\l  %92 = getelementptr inbounds double, double addrspace(1)* %0, i64 %90\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !9\l  %94 = fadd contract double %89, %93\l  store double %94, double addrspace(1)* %0, align 8, !tbaa !9\l  %95 = add nuw nsw i64 %90, 1\l  %96 = add i64 %91, 1\l  %97 = icmp eq i64 %96, %42\l  br i1 %97, label %98, label %88, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x563e030:s0 -> Node0x563b270;
	Node0x563e030:s1 -> Node0x563e030;
	Node0x563b270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%98:\l98:                                               \l  ret void\l}"];
}
