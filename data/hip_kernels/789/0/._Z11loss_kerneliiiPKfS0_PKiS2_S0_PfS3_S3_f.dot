digraph "CFG for '_Z11loss_kerneliiiPKfS0_PKiS2_S0_PfS3_S3_f' function" {
	label="CFG for '_Z11loss_kerneliiiPKfS0_PKiS2_S0_PfS3_S3_f' function";

	Node0x53ed0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%12:\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = mul i32 %18, %17\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %21, %1\l  br i1 %22, label %23, label %153\l|{<s0>T|<s1>F}}"];
	Node0x53ed0f0:s0 -> Node0x53efc10;
	Node0x53ed0f0:s1 -> Node0x53efca0;
	Node0x53efc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%23:\l23:                                               \l  %24 = mul nsw i32 %21, %0\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %25\l  %27 = sext i32 %21 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = add nsw i32 %21, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = icmp slt i32 %29, %33\l  br i1 %34, label %35, label %153\l|{<s0>T|<s1>F}}"];
	Node0x53efc10:s0 -> Node0x53ef4a0;
	Node0x53efc10:s1 -> Node0x53efca0;
	Node0x53ef4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds float, float addrspace(1)* %9, i64 %27\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %38 = fadd contract float %37, %11\l  %39 = icmp sgt i32 %0, 0\l  %40 = and i32 %0, 7\l  %41 = icmp ult i32 %0, 8\l  %42 = and i32 %0, -8\l  %43 = icmp eq i32 %40, 0\l  br label %44\l}"];
	Node0x53ef4a0 -> Node0x53f1a40;
	Node0x53f1a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%44:\l44:                                               \l  %45 = phi i32 [ %29, %35 ], [ %151, %147 ]\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = getelementptr inbounds float, float addrspace(1)* %7, i64 %46\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !11\l  %51 = mul nsw i32 %48, %0\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %4, i64 %52\l  %54 = sext i32 %48 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %10, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !11\l  %57 = fadd contract float %38, %56\l  br i1 %39, label %58, label %147\l|{<s0>T|<s1>F}}"];
	Node0x53f1a40:s0 -> Node0x53f2970;
	Node0x53f1a40:s1 -> Node0x53f1b70;
	Node0x53f2970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%58:\l58:                                               \l  br i1 %41, label %129, label %59\l|{<s0>T|<s1>F}}"];
	Node0x53f2970:s0 -> Node0x53f2ab0;
	Node0x53f2970:s1 -> Node0x53f2b00;
	Node0x53f2b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%59:\l59:                                               \l  %60 = phi i32 [ %126, %59 ], [ 0, %58 ]\l  %61 = phi float [ %125, %59 ], [ %57, %58 ]\l  %62 = phi i32 [ %127, %59 ], [ 0, %58 ]\l  %63 = zext i32 %60 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %53, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !11\l  %66 = getelementptr inbounds float, float addrspace(1)* %26, i64 %63\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !11\l  %68 = fmul contract float %65, %67\l  %69 = fadd contract float %61, %68\l  %70 = or i32 %60, 1\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %53, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !11\l  %74 = getelementptr inbounds float, float addrspace(1)* %26, i64 %71\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !11\l  %76 = fmul contract float %73, %75\l  %77 = fadd contract float %69, %76\l  %78 = or i32 %60, 2\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %53, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11\l  %82 = getelementptr inbounds float, float addrspace(1)* %26, i64 %79\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !11\l  %84 = fmul contract float %81, %83\l  %85 = fadd contract float %77, %84\l  %86 = or i32 %60, 3\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %53, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !11\l  %90 = getelementptr inbounds float, float addrspace(1)* %26, i64 %87\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !11\l  %92 = fmul contract float %89, %91\l  %93 = fadd contract float %85, %92\l  %94 = or i32 %60, 4\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %53, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11\l  %98 = getelementptr inbounds float, float addrspace(1)* %26, i64 %95\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !11\l  %100 = fmul contract float %97, %99\l  %101 = fadd contract float %93, %100\l  %102 = or i32 %60, 5\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %53, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !11\l  %106 = getelementptr inbounds float, float addrspace(1)* %26, i64 %103\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !11\l  %108 = fmul contract float %105, %107\l  %109 = fadd contract float %101, %108\l  %110 = or i32 %60, 6\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %53, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !11\l  %114 = getelementptr inbounds float, float addrspace(1)* %26, i64 %111\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !11\l  %116 = fmul contract float %113, %115\l  %117 = fadd contract float %109, %116\l  %118 = or i32 %60, 7\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %53, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !11\l  %122 = getelementptr inbounds float, float addrspace(1)* %26, i64 %119\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !11\l  %124 = fmul contract float %121, %123\l  %125 = fadd contract float %117, %124\l  %126 = add nuw nsw i32 %60, 8\l  %127 = add i32 %62, 8\l  %128 = icmp eq i32 %127, %42\l  br i1 %128, label %129, label %59, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x53f2b00:s0 -> Node0x53f2ab0;
	Node0x53f2b00:s1 -> Node0x53f2b00;
	Node0x53f2ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%129:\l129:                                              \l  %130 = phi float [ undef, %58 ], [ %125, %59 ]\l  %131 = phi i32 [ 0, %58 ], [ %126, %59 ]\l  %132 = phi float [ %57, %58 ], [ %125, %59 ]\l  br i1 %43, label %147, label %133\l|{<s0>T|<s1>F}}"];
	Node0x53f2ab0:s0 -> Node0x53f1b70;
	Node0x53f2ab0:s1 -> Node0x53f3350;
	Node0x53f3350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi i32 [ %144, %133 ], [ %131, %129 ]\l  %135 = phi float [ %143, %133 ], [ %132, %129 ]\l  %136 = phi i32 [ %145, %133 ], [ 0, %129 ]\l  %137 = zext i32 %134 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %53, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !11\l  %140 = getelementptr inbounds float, float addrspace(1)* %26, i64 %137\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !11\l  %142 = fmul contract float %139, %141\l  %143 = fadd contract float %135, %142\l  %144 = add nuw nsw i32 %134, 1\l  %145 = add i32 %136, 1\l  %146 = icmp eq i32 %145, %40\l  br i1 %146, label %147, label %133, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x53f3350:s0 -> Node0x53f1b70;
	Node0x53f3350:s1 -> Node0x53f3350;
	Node0x53f1b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%147:\l147:                                              \l  %148 = phi float [ %57, %44 ], [ %130, %129 ], [ %143, %133 ]\l  %149 = fsub contract float %50, %148\l  %150 = getelementptr inbounds float, float addrspace(1)* %8, i64 %46\l  store float %149, float addrspace(1)* %150, align 4, !tbaa !11\l  %151 = add nsw i32 %45, 1\l  %152 = icmp slt i32 %151, %33\l  br i1 %152, label %44, label %153, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x53f1b70:s0 -> Node0x53f1a40;
	Node0x53f1b70:s1 -> Node0x53efca0;
	Node0x53efca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%153:\l153:                                              \l  ret void\l}"];
}
