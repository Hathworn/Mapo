digraph "CFG for '_Z9ray_shootPiS_PfS0_S0_S0_S_S0_' function" {
	label="CFG for '_Z9ray_shootPiS_PfS0_S0_S0_S_S0_' function";

	Node0x601abd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !7, !amdgpu.noclobber !5\l  %19 = sdiv i32 %17, %18\l  %20 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7, !amdgpu.noclobber !5\l  %21 = mul nsw i32 %20, %19\l  %22 = sub nsw i32 %17, %21\l  %23 = sitofp i32 %22 to float\l  %24 = load float, float addrspace(1)* %2, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %25 = fmul contract float %24, %23\l  %26 = fadd contract float %25, -1.000000e+01\l  %27 = sitofp i32 %19 to float\l  %28 = fmul contract float %24, %27\l  %29 = fadd contract float %28, -1.000000e+01\l  %30 = load i32, i32 addrspace(1)* %6, align 4, !tbaa !7, !amdgpu.noclobber !5\l  %31 = icmp sgt i32 %30, 0\l  br i1 %31, label %32, label %64\l|{<s0>T|<s1>F}}"];
	Node0x601abd0:s0 -> Node0x601ec00;
	Node0x601abd0:s1 -> Node0x601ec90;
	Node0x601ec00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%32:\l32:                                               \l  %33 = and i32 %30, 1\l  %34 = icmp eq i32 %30, 1\l  br i1 %34, label %39, label %35\l|{<s0>T|<s1>F}}"];
	Node0x601ec00:s0 -> Node0x601ca60;
	Node0x601ec00:s1 -> Node0x601f070;
	Node0x601f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = and i32 %30, -2\l  br label %71\l}"];
	Node0x601f070 -> Node0x601f270;
	Node0x601f330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%37:\l37:                                               \l  %38 = zext i32 %113 to i64\l  br label %39\l}"];
	Node0x601f330 -> Node0x601ca60;
	Node0x601ca60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%39:\l39:                                               \l  %40 = phi float [ undef, %32 ], [ %109, %37 ]\l  %41 = phi float [ undef, %32 ], [ %112, %37 ]\l  %42 = phi float [ %26, %32 ], [ %109, %37 ]\l  %43 = phi float [ %29, %32 ], [ %112, %37 ]\l  %44 = phi i64 [ 0, %32 ], [ %38, %37 ]\l  %45 = icmp eq i32 %33, 0\l  br i1 %45, label %64, label %46\l|{<s0>T|<s1>F}}"];
	Node0x601ca60:s0 -> Node0x601ec90;
	Node0x601ca60:s1 -> Node0x601fdc0;
	Node0x601fdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%46:\l46:                                               \l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %49 = fsub contract float %26, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %4, i64 %44\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %52 = fsub contract float %29, %51\l  %53 = fmul contract float %49, %49\l  %54 = fmul contract float %52, %52\l  %55 = fadd contract float %53, %54\l  %56 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %58 = fmul contract float %49, %57\l  %59 = fdiv contract float %58, %55\l  %60 = fsub contract float %42, %59\l  %61 = fmul contract float %57, %52\l  %62 = fdiv contract float %61, %55\l  %63 = fsub contract float %43, %62\l  br label %64\l}"];
	Node0x601fdc0 -> Node0x601ec90;
	Node0x601ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%64:\l64:                                               \l  %65 = phi float [ %29, %8 ], [ %41, %39 ], [ %63, %46 ]\l  %66 = phi float [ %26, %8 ], [ %40, %39 ], [ %60, %46 ]\l  %67 = fmul contract float %66, %66\l  %68 = fmul contract float %65, %65\l  %69 = fadd contract float %68, %67\l  %70 = fcmp contract olt float %69, 0x3F847AE160000000\l  br i1 %70, label %116, label %145\l|{<s0>T|<s1>F}}"];
	Node0x601ec90:s0 -> Node0x601ef70;
	Node0x601ec90:s1 -> Node0x6021620;
	Node0x601f270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi float [ %26, %35 ], [ %109, %71 ]\l  %73 = phi float [ %29, %35 ], [ %112, %71 ]\l  %74 = phi i32 [ 0, %35 ], [ %113, %71 ]\l  %75 = phi i32 [ 0, %35 ], [ %114, %71 ]\l  %76 = zext i32 %74 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %3, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %79 = fsub contract float %26, %78\l  %80 = getelementptr inbounds float, float addrspace(1)* %4, i64 %76\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %82 = fsub contract float %29, %81\l  %83 = fmul contract float %79, %79\l  %84 = fmul contract float %82, %82\l  %85 = fadd contract float %83, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %5, i64 %76\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %88 = fmul contract float %79, %87\l  %89 = fdiv contract float %88, %85\l  %90 = fsub contract float %72, %89\l  %91 = fmul contract float %87, %82\l  %92 = fdiv contract float %91, %85\l  %93 = fsub contract float %73, %92\l  %94 = or i32 %74, 1\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %3, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %98 = fsub contract float %26, %97\l  %99 = getelementptr inbounds float, float addrspace(1)* %4, i64 %95\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %101 = fsub contract float %29, %100\l  %102 = fmul contract float %98, %98\l  %103 = fmul contract float %101, %101\l  %104 = fadd contract float %102, %103\l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %95\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %107 = fmul contract float %98, %106\l  %108 = fdiv contract float %107, %104\l  %109 = fsub contract float %90, %108\l  %110 = fmul contract float %106, %101\l  %111 = fdiv contract float %110, %104\l  %112 = fsub contract float %93, %111\l  %113 = add nuw nsw i32 %74, 2\l  %114 = add i32 %75, 2\l  %115 = icmp eq i32 %114, %36\l  br i1 %115, label %37, label %71, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x601f270:s0 -> Node0x601f330;
	Node0x601f270:s1 -> Node0x601f270;
	Node0x601ef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%116:\l116:                                              \l  %117 = fdiv contract float %69, 0x3F847AE160000000\l  %118 = fsub contract float 1.000000e+00, %117\l  %119 = fcmp olt float %118, 0x39F0000000000000\l  %120 = select i1 %119, float 0x41F0000000000000, float 1.000000e+00\l  %121 = fmul float %118, %120\l  %122 = tail call float @llvm.sqrt.f32(float %121)\l  %123 = bitcast float %122 to i32\l  %124 = add nsw i32 %123, -1\l  %125 = bitcast i32 %124 to float\l  %126 = add nsw i32 %123, 1\l  %127 = bitcast i32 %126 to float\l  %128 = tail call i1 @llvm.amdgcn.class.f32(float %121, i32 608)\l  %129 = select i1 %119, float 0x3EF0000000000000, float 1.000000e+00\l  %130 = fneg float %127\l  %131 = tail call float @llvm.fma.f32(float %130, float %122, float %121)\l  %132 = fcmp ogt float %131, 0.000000e+00\l  %133 = fneg float %125\l  %134 = tail call float @llvm.fma.f32(float %133, float %122, float %121)\l  %135 = fcmp ole float %134, 0.000000e+00\l  %136 = select i1 %135, float %125, float %122\l  %137 = select i1 %132, float %127, float %136\l  %138 = fmul float %129, %137\l  %139 = select i1 %128, float %121, float %138\l  %140 = fsub contract float 1.000000e+00, %139\l  %141 = fmul contract float %140, 5.000000e-01\l  %142 = fsub contract float 1.000000e+00, %141\l  %143 = sext i32 %17 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %7, i64 %143\l  store float %142, float addrspace(1)* %144, align 4, !tbaa !11\l  br label %145\l}"];
	Node0x601ef70 -> Node0x6021620;
	Node0x6021620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%145:\l145:                                              \l  ret void\l}"];
}
