digraph "CFG for '_Z6getDoGPddd' function" {
	label="CFG for '_Z6getDoGPddd' function";

	Node0x592de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = fmul contract double %1, 3.000000e+00\l  %5 = tail call double @llvm.ceil.f64(double %4)\l  %6 = fmul contract double %5, 2.000000e+00\l  %7 = fadd contract double %6, 1.000000e+00\l  %8 = fptosi double %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = add i32 %10, %11\l  %13 = mul nsw i32 %8, %8\l  %14 = icmp slt i32 %12, %13\l  br i1 %14, label %15, label %902\l|{<s0>T|<s1>F}}"];
	Node0x592de50:s0 -> Node0x59305a0;
	Node0x592de50:s1 -> Node0x5930630;
	Node0x59305a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%15:\l15:                                               \l  %16 = sdiv i32 %8, 2\l  %17 = sub nsw i32 %11, %16\l  %18 = tail call i32 @llvm.abs.i32(i32 %17, i1 true)\l  %19 = sub nsw i32 %9, %16\l  %20 = tail call i32 @llvm.abs.i32(i32 %19, i1 true)\l  %21 = sitofp i32 %18 to double\l  %22 = tail call double @llvm.fabs.f64(double %21)\l  %23 = tail call double @llvm.amdgcn.frexp.mant.f64(double %22)\l  %24 = fcmp olt double %23, 0x3FE5555555555555\l  %25 = zext i1 %24 to i32\l  %26 = tail call double @llvm.amdgcn.ldexp.f64(double %23, i32 %25)\l  %27 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %22)\l  %28 = sub nsw i32 %27, %25\l  %29 = fadd double %26, -1.000000e+00\l  %30 = fadd double %26, 1.000000e+00\l  %31 = fadd double %30, -1.000000e+00\l  %32 = fsub double %26, %31\l  %33 = tail call double @llvm.amdgcn.rcp.f64(double %30)\l  %34 = fneg double %30\l  %35 = tail call double @llvm.fma.f64(double %34, double %33, double\l... 1.000000e+00)\l  %36 = tail call double @llvm.fma.f64(double %35, double %33, double %33)\l  %37 = tail call double @llvm.fma.f64(double %34, double %36, double\l... 1.000000e+00)\l  %38 = tail call double @llvm.fma.f64(double %37, double %36, double %36)\l  %39 = fmul double %29, %38\l  %40 = fmul double %30, %39\l  %41 = fneg double %40\l  %42 = tail call double @llvm.fma.f64(double %39, double %30, double %41)\l  %43 = tail call double @llvm.fma.f64(double %39, double %32, double %42)\l  %44 = fadd double %40, %43\l  %45 = fsub double %44, %40\l  %46 = fsub double %43, %45\l  %47 = fsub double %29, %44\l  %48 = fsub double %29, %47\l  %49 = fsub double %48, %44\l  %50 = fsub double %49, %46\l  %51 = fadd double %47, %50\l  %52 = fmul double %38, %51\l  %53 = fadd double %39, %52\l  %54 = fsub double %53, %39\l  %55 = fsub double %52, %54\l  %56 = fmul double %53, %53\l  %57 = fneg double %56\l  %58 = tail call double @llvm.fma.f64(double %53, double %53, double %57)\l  %59 = fmul double %55, 2.000000e+00\l  %60 = tail call double @llvm.fma.f64(double %53, double %59, double %58)\l  %61 = fadd double %56, %60\l  %62 = fsub double %61, %56\l  %63 = fsub double %60, %62\l  %64 = tail call double @llvm.fma.f64(double %61, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %65 = tail call double @llvm.fma.f64(double %61, double %64, double\l... 0x3FBE25E43ABE935A)\l  %66 = tail call double @llvm.fma.f64(double %61, double %65, double\l... 0x3FC110EF47E6C9C2)\l  %67 = tail call double @llvm.fma.f64(double %61, double %66, double\l... 0x3FC3B13BCFA74449)\l  %68 = tail call double @llvm.fma.f64(double %61, double %67, double\l... 0x3FC745D171BF3C30)\l  %69 = tail call double @llvm.fma.f64(double %61, double %68, double\l... 0x3FCC71C71C7792CE)\l  %70 = tail call double @llvm.fma.f64(double %61, double %69, double\l... 0x3FD24924924920DA)\l  %71 = tail call double @llvm.fma.f64(double %61, double %70, double\l... 0x3FD999999999999C)\l  %72 = sitofp i32 %28 to double\l  %73 = fmul double %72, 0x3FE62E42FEFA39EF\l  %74 = fneg double %73\l  %75 = tail call double @llvm.fma.f64(double %72, double 0x3FE62E42FEFA39EF,\l... double %74)\l  %76 = tail call double @llvm.fma.f64(double %72, double 0x3C7ABC9E3B39803F,\l... double %75)\l  %77 = fadd double %73, %76\l  %78 = fsub double %77, %73\l  %79 = fsub double %76, %78\l  %80 = tail call double @llvm.amdgcn.ldexp.f64(double %53, i32 1)\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %55, i32 1)\l  %82 = fmul double %53, %61\l  %83 = fneg double %82\l  %84 = tail call double @llvm.fma.f64(double %61, double %53, double %83)\l  %85 = tail call double @llvm.fma.f64(double %61, double %55, double %84)\l  %86 = tail call double @llvm.fma.f64(double %63, double %53, double %85)\l  %87 = fadd double %82, %86\l  %88 = fsub double %87, %82\l  %89 = fsub double %86, %88\l  %90 = fmul double %61, %71\l  %91 = fneg double %90\l  %92 = tail call double @llvm.fma.f64(double %61, double %71, double %91)\l  %93 = tail call double @llvm.fma.f64(double %63, double %71, double %92)\l  %94 = fadd double %90, %93\l  %95 = fsub double %94, %90\l  %96 = fsub double %93, %95\l  %97 = fadd double %94, 0x3FE5555555555555\l  %98 = fadd double %97, 0xBFE5555555555555\l  %99 = fsub double %94, %98\l  %100 = fadd double %96, 0x3C8543B0D5DF274D\l  %101 = fadd double %100, %99\l  %102 = fadd double %97, %101\l  %103 = fsub double %102, %97\l  %104 = fsub double %101, %103\l  %105 = fmul double %87, %102\l  %106 = fneg double %105\l  %107 = tail call double @llvm.fma.f64(double %87, double %102, double %106)\l  %108 = tail call double @llvm.fma.f64(double %87, double %104, double %107)\l  %109 = tail call double @llvm.fma.f64(double %89, double %102, double %108)\l  %110 = fadd double %105, %109\l  %111 = fsub double %110, %105\l  %112 = fsub double %109, %111\l  %113 = fadd double %80, %110\l  %114 = fsub double %113, %80\l  %115 = fsub double %110, %114\l  %116 = fadd double %81, %112\l  %117 = fadd double %116, %115\l  %118 = fadd double %113, %117\l  %119 = fsub double %118, %113\l  %120 = fsub double %117, %119\l  %121 = fadd double %77, %118\l  %122 = fsub double %121, %77\l  %123 = fsub double %121, %122\l  %124 = fsub double %77, %123\l  %125 = fsub double %118, %122\l  %126 = fadd double %125, %124\l  %127 = fadd double %79, %120\l  %128 = fsub double %127, %79\l  %129 = fsub double %127, %128\l  %130 = fsub double %79, %129\l  %131 = fsub double %120, %128\l  %132 = fadd double %131, %130\l  %133 = fadd double %127, %126\l  %134 = fadd double %121, %133\l  %135 = fsub double %134, %121\l  %136 = fsub double %133, %135\l  %137 = fadd double %132, %136\l  %138 = fadd double %134, %137\l  %139 = fsub double %138, %134\l  %140 = fsub double %137, %139\l  %141 = fmul double %138, 2.000000e+00\l  %142 = fneg double %141\l  %143 = tail call double @llvm.fma.f64(double %138, double 2.000000e+00,\l... double %142)\l  %144 = tail call double @llvm.fma.f64(double %140, double 2.000000e+00,\l... double %143)\l  %145 = fadd double %141, %144\l  %146 = fsub double %145, %141\l  %147 = fsub double %144, %146\l  %148 = tail call double @llvm.fabs.f64(double %141) #4\l  %149 = fcmp oeq double %148, 0x7FF0000000000000\l  %150 = select i1 %149, double %141, double %145\l  %151 = tail call double @llvm.fabs.f64(double %150) #4\l  %152 = fcmp oeq double %151, 0x7FF0000000000000\l  %153 = select i1 %152, double 0.000000e+00, double %147\l  %154 = fmul double %150, 0x3FF71547652B82FE\l  %155 = tail call double @llvm.rint.f64(double %154)\l  %156 = fneg double %155\l  %157 = tail call double @llvm.fma.f64(double %156, double\l... 0x3FE62E42FEFA39EF, double %150)\l  %158 = tail call double @llvm.fma.f64(double %156, double\l... 0x3C7ABC9E3B39803F, double %157)\l  %159 = tail call double @llvm.fma.f64(double %158, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %160 = tail call double @llvm.fma.f64(double %158, double %159, double\l... 0x3EC71DEE623FDE64)\l  %161 = tail call double @llvm.fma.f64(double %158, double %160, double\l... 0x3EFA01997C89E6B0)\l  %162 = tail call double @llvm.fma.f64(double %158, double %161, double\l... 0x3F2A01A014761F6E)\l  %163 = tail call double @llvm.fma.f64(double %158, double %162, double\l... 0x3F56C16C1852B7B0)\l  %164 = tail call double @llvm.fma.f64(double %158, double %163, double\l... 0x3F81111111122322)\l  %165 = tail call double @llvm.fma.f64(double %158, double %164, double\l... 0x3FA55555555502A1)\l  %166 = tail call double @llvm.fma.f64(double %158, double %165, double\l... 0x3FC5555555555511)\l  %167 = tail call double @llvm.fma.f64(double %158, double %166, double\l... 0x3FE000000000000B)\l  %168 = tail call double @llvm.fma.f64(double %158, double %167, double\l... 1.000000e+00)\l  %169 = tail call double @llvm.fma.f64(double %158, double %168, double\l... 1.000000e+00)\l  %170 = fptosi double %155 to i32\l  %171 = tail call double @llvm.amdgcn.ldexp.f64(double %169, i32 %170)\l  %172 = fcmp ogt double %150, 1.024000e+03\l  %173 = select i1 %172, double 0x7FF0000000000000, double %171\l  %174 = fcmp olt double %150, -1.075000e+03\l  %175 = select i1 %174, double 0.000000e+00, double %173\l  %176 = tail call double @llvm.fma.f64(double %175, double %153, double %175)\l  %177 = tail call double @llvm.fabs.f64(double %175) #4\l  %178 = fcmp oeq double %177, 0x7FF0000000000000\l  %179 = select i1 %178, double %175, double %176\l  %180 = tail call double @llvm.fabs.f64(double %179)\l  %181 = fcmp oeq double %22, 0x7FF0000000000000\l  %182 = icmp eq i32 %11, %16\l  %183 = select i1 %181, double 0x7FF0000000000000, double %180\l  %184 = select i1 %182, double 0.000000e+00, double %183\l  %185 = icmp eq i32 %18, 1\l  %186 = select i1 %185, double 1.000000e+00, double %184\l  %187 = sitofp i32 %20 to double\l  %188 = tail call double @llvm.fabs.f64(double %187)\l  %189 = tail call double @llvm.amdgcn.frexp.mant.f64(double %188)\l  %190 = fcmp olt double %189, 0x3FE5555555555555\l  %191 = zext i1 %190 to i32\l  %192 = tail call double @llvm.amdgcn.ldexp.f64(double %189, i32 %191)\l  %193 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %188)\l  %194 = sub nsw i32 %193, %191\l  %195 = fadd double %192, -1.000000e+00\l  %196 = fadd double %192, 1.000000e+00\l  %197 = fadd double %196, -1.000000e+00\l  %198 = fsub double %192, %197\l  %199 = tail call double @llvm.amdgcn.rcp.f64(double %196)\l  %200 = fneg double %196\l  %201 = tail call double @llvm.fma.f64(double %200, double %199, double\l... 1.000000e+00)\l  %202 = tail call double @llvm.fma.f64(double %201, double %199, double %199)\l  %203 = tail call double @llvm.fma.f64(double %200, double %202, double\l... 1.000000e+00)\l  %204 = tail call double @llvm.fma.f64(double %203, double %202, double %202)\l  %205 = fmul double %195, %204\l  %206 = fmul double %196, %205\l  %207 = fneg double %206\l  %208 = tail call double @llvm.fma.f64(double %205, double %196, double %207)\l  %209 = tail call double @llvm.fma.f64(double %205, double %198, double %208)\l  %210 = fadd double %206, %209\l  %211 = fsub double %210, %206\l  %212 = fsub double %209, %211\l  %213 = fsub double %195, %210\l  %214 = fsub double %195, %213\l  %215 = fsub double %214, %210\l  %216 = fsub double %215, %212\l  %217 = fadd double %213, %216\l  %218 = fmul double %204, %217\l  %219 = fadd double %205, %218\l  %220 = fsub double %219, %205\l  %221 = fsub double %218, %220\l  %222 = fmul double %219, %219\l  %223 = fneg double %222\l  %224 = tail call double @llvm.fma.f64(double %219, double %219, double %223)\l  %225 = fmul double %221, 2.000000e+00\l  %226 = tail call double @llvm.fma.f64(double %219, double %225, double %224)\l  %227 = fadd double %222, %226\l  %228 = fsub double %227, %222\l  %229 = fsub double %226, %228\l  %230 = tail call double @llvm.fma.f64(double %227, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %231 = tail call double @llvm.fma.f64(double %227, double %230, double\l... 0x3FBE25E43ABE935A)\l  %232 = tail call double @llvm.fma.f64(double %227, double %231, double\l... 0x3FC110EF47E6C9C2)\l  %233 = tail call double @llvm.fma.f64(double %227, double %232, double\l... 0x3FC3B13BCFA74449)\l  %234 = tail call double @llvm.fma.f64(double %227, double %233, double\l... 0x3FC745D171BF3C30)\l  %235 = tail call double @llvm.fma.f64(double %227, double %234, double\l... 0x3FCC71C71C7792CE)\l  %236 = tail call double @llvm.fma.f64(double %227, double %235, double\l... 0x3FD24924924920DA)\l  %237 = tail call double @llvm.fma.f64(double %227, double %236, double\l... 0x3FD999999999999C)\l  %238 = sitofp i32 %194 to double\l  %239 = fmul double %238, 0x3FE62E42FEFA39EF\l  %240 = fneg double %239\l  %241 = tail call double @llvm.fma.f64(double %238, double\l... 0x3FE62E42FEFA39EF, double %240)\l  %242 = tail call double @llvm.fma.f64(double %238, double\l... 0x3C7ABC9E3B39803F, double %241)\l  %243 = fadd double %239, %242\l  %244 = fsub double %243, %239\l  %245 = fsub double %242, %244\l  %246 = tail call double @llvm.amdgcn.ldexp.f64(double %219, i32 1)\l  %247 = tail call double @llvm.amdgcn.ldexp.f64(double %221, i32 1)\l  %248 = fmul double %219, %227\l  %249 = fneg double %248\l  %250 = tail call double @llvm.fma.f64(double %227, double %219, double %249)\l  %251 = tail call double @llvm.fma.f64(double %227, double %221, double %250)\l  %252 = tail call double @llvm.fma.f64(double %229, double %219, double %251)\l  %253 = fadd double %248, %252\l  %254 = fsub double %253, %248\l  %255 = fsub double %252, %254\l  %256 = fmul double %227, %237\l  %257 = fneg double %256\l  %258 = tail call double @llvm.fma.f64(double %227, double %237, double %257)\l  %259 = tail call double @llvm.fma.f64(double %229, double %237, double %258)\l  %260 = fadd double %256, %259\l  %261 = fsub double %260, %256\l  %262 = fsub double %259, %261\l  %263 = fadd double %260, 0x3FE5555555555555\l  %264 = fadd double %263, 0xBFE5555555555555\l  %265 = fsub double %260, %264\l  %266 = fadd double %262, 0x3C8543B0D5DF274D\l  %267 = fadd double %266, %265\l  %268 = fadd double %263, %267\l  %269 = fsub double %268, %263\l  %270 = fsub double %267, %269\l  %271 = fmul double %253, %268\l  %272 = fneg double %271\l  %273 = tail call double @llvm.fma.f64(double %253, double %268, double %272)\l  %274 = tail call double @llvm.fma.f64(double %253, double %270, double %273)\l  %275 = tail call double @llvm.fma.f64(double %255, double %268, double %274)\l  %276 = fadd double %271, %275\l  %277 = fsub double %276, %271\l  %278 = fsub double %275, %277\l  %279 = fadd double %246, %276\l  %280 = fsub double %279, %246\l  %281 = fsub double %276, %280\l  %282 = fadd double %247, %278\l  %283 = fadd double %282, %281\l  %284 = fadd double %279, %283\l  %285 = fsub double %284, %279\l  %286 = fsub double %283, %285\l  %287 = fadd double %243, %284\l  %288 = fsub double %287, %243\l  %289 = fsub double %287, %288\l  %290 = fsub double %243, %289\l  %291 = fsub double %284, %288\l  %292 = fadd double %291, %290\l  %293 = fadd double %245, %286\l  %294 = fsub double %293, %245\l  %295 = fsub double %293, %294\l  %296 = fsub double %245, %295\l  %297 = fsub double %286, %294\l  %298 = fadd double %297, %296\l  %299 = fadd double %293, %292\l  %300 = fadd double %287, %299\l  %301 = fsub double %300, %287\l  %302 = fsub double %299, %301\l  %303 = fadd double %298, %302\l  %304 = fadd double %300, %303\l  %305 = fsub double %304, %300\l  %306 = fsub double %303, %305\l  %307 = fmul double %304, 2.000000e+00\l  %308 = fneg double %307\l  %309 = tail call double @llvm.fma.f64(double %304, double 2.000000e+00,\l... double %308)\l  %310 = tail call double @llvm.fma.f64(double %306, double 2.000000e+00,\l... double %309)\l  %311 = fadd double %307, %310\l  %312 = fsub double %311, %307\l  %313 = fsub double %310, %312\l  %314 = tail call double @llvm.fabs.f64(double %307) #4\l  %315 = fcmp oeq double %314, 0x7FF0000000000000\l  %316 = select i1 %315, double %307, double %311\l  %317 = tail call double @llvm.fabs.f64(double %316) #4\l  %318 = fcmp oeq double %317, 0x7FF0000000000000\l  %319 = select i1 %318, double 0.000000e+00, double %313\l  %320 = fmul double %316, 0x3FF71547652B82FE\l  %321 = tail call double @llvm.rint.f64(double %320)\l  %322 = fneg double %321\l  %323 = tail call double @llvm.fma.f64(double %322, double\l... 0x3FE62E42FEFA39EF, double %316)\l  %324 = tail call double @llvm.fma.f64(double %322, double\l... 0x3C7ABC9E3B39803F, double %323)\l  %325 = tail call double @llvm.fma.f64(double %324, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %326 = tail call double @llvm.fma.f64(double %324, double %325, double\l... 0x3EC71DEE623FDE64)\l  %327 = tail call double @llvm.fma.f64(double %324, double %326, double\l... 0x3EFA01997C89E6B0)\l  %328 = tail call double @llvm.fma.f64(double %324, double %327, double\l... 0x3F2A01A014761F6E)\l  %329 = tail call double @llvm.fma.f64(double %324, double %328, double\l... 0x3F56C16C1852B7B0)\l  %330 = tail call double @llvm.fma.f64(double %324, double %329, double\l... 0x3F81111111122322)\l  %331 = tail call double @llvm.fma.f64(double %324, double %330, double\l... 0x3FA55555555502A1)\l  %332 = tail call double @llvm.fma.f64(double %324, double %331, double\l... 0x3FC5555555555511)\l  %333 = tail call double @llvm.fma.f64(double %324, double %332, double\l... 0x3FE000000000000B)\l  %334 = tail call double @llvm.fma.f64(double %324, double %333, double\l... 1.000000e+00)\l  %335 = tail call double @llvm.fma.f64(double %324, double %334, double\l... 1.000000e+00)\l  %336 = fptosi double %321 to i32\l  %337 = tail call double @llvm.amdgcn.ldexp.f64(double %335, i32 %336)\l  %338 = fcmp ogt double %316, 1.024000e+03\l  %339 = select i1 %338, double 0x7FF0000000000000, double %337\l  %340 = fcmp olt double %316, -1.075000e+03\l  %341 = select i1 %340, double 0.000000e+00, double %339\l  %342 = tail call double @llvm.fma.f64(double %341, double %319, double %341)\l  %343 = tail call double @llvm.fabs.f64(double %341) #4\l  %344 = fcmp oeq double %343, 0x7FF0000000000000\l  %345 = select i1 %344, double %341, double %342\l  %346 = tail call double @llvm.fabs.f64(double %345)\l  %347 = fcmp oeq double %188, 0x7FF0000000000000\l  %348 = icmp eq i32 %9, %16\l  %349 = select i1 %347, double 0x7FF0000000000000, double %346\l  %350 = select i1 %348, double 0.000000e+00, double %349\l  %351 = icmp eq i32 %20, 1\l  %352 = select i1 %351, double 1.000000e+00, double %350\l  %353 = fadd contract double %186, %352\l  %354 = fneg contract double %353\l  %355 = tail call double @llvm.fabs.f64(double %1)\l  %356 = tail call double @llvm.amdgcn.frexp.mant.f64(double %355)\l  %357 = fcmp olt double %356, 0x3FE5555555555555\l  %358 = zext i1 %357 to i32\l  %359 = tail call double @llvm.amdgcn.ldexp.f64(double %356, i32 %358)\l  %360 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %355)\l  %361 = sub nsw i32 %360, %358\l  %362 = fadd double %359, -1.000000e+00\l  %363 = fadd double %359, 1.000000e+00\l  %364 = fadd double %363, -1.000000e+00\l  %365 = fsub double %359, %364\l  %366 = tail call double @llvm.amdgcn.rcp.f64(double %363)\l  %367 = fneg double %363\l  %368 = tail call double @llvm.fma.f64(double %367, double %366, double\l... 1.000000e+00)\l  %369 = tail call double @llvm.fma.f64(double %368, double %366, double %366)\l  %370 = tail call double @llvm.fma.f64(double %367, double %369, double\l... 1.000000e+00)\l  %371 = tail call double @llvm.fma.f64(double %370, double %369, double %369)\l  %372 = fmul double %362, %371\l  %373 = fmul double %363, %372\l  %374 = fneg double %373\l  %375 = tail call double @llvm.fma.f64(double %372, double %363, double %374)\l  %376 = tail call double @llvm.fma.f64(double %372, double %365, double %375)\l  %377 = fadd double %373, %376\l  %378 = fsub double %377, %373\l  %379 = fsub double %376, %378\l  %380 = fsub double %362, %377\l  %381 = fsub double %362, %380\l  %382 = fsub double %381, %377\l  %383 = fsub double %382, %379\l  %384 = fadd double %380, %383\l  %385 = fmul double %371, %384\l  %386 = fadd double %372, %385\l  %387 = fsub double %386, %372\l  %388 = fsub double %385, %387\l  %389 = fmul double %386, %386\l  %390 = fneg double %389\l  %391 = tail call double @llvm.fma.f64(double %386, double %386, double %390)\l  %392 = fmul double %388, 2.000000e+00\l  %393 = tail call double @llvm.fma.f64(double %386, double %392, double %391)\l  %394 = fadd double %389, %393\l  %395 = fsub double %394, %389\l  %396 = fsub double %393, %395\l  %397 = tail call double @llvm.fma.f64(double %394, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %398 = tail call double @llvm.fma.f64(double %394, double %397, double\l... 0x3FBE25E43ABE935A)\l  %399 = tail call double @llvm.fma.f64(double %394, double %398, double\l... 0x3FC110EF47E6C9C2)\l  %400 = tail call double @llvm.fma.f64(double %394, double %399, double\l... 0x3FC3B13BCFA74449)\l  %401 = tail call double @llvm.fma.f64(double %394, double %400, double\l... 0x3FC745D171BF3C30)\l  %402 = tail call double @llvm.fma.f64(double %394, double %401, double\l... 0x3FCC71C71C7792CE)\l  %403 = tail call double @llvm.fma.f64(double %394, double %402, double\l... 0x3FD24924924920DA)\l  %404 = tail call double @llvm.fma.f64(double %394, double %403, double\l... 0x3FD999999999999C)\l  %405 = sitofp i32 %361 to double\l  %406 = fmul double %405, 0x3FE62E42FEFA39EF\l  %407 = fneg double %406\l  %408 = tail call double @llvm.fma.f64(double %405, double\l... 0x3FE62E42FEFA39EF, double %407)\l  %409 = tail call double @llvm.fma.f64(double %405, double\l... 0x3C7ABC9E3B39803F, double %408)\l  %410 = fadd double %406, %409\l  %411 = fsub double %410, %406\l  %412 = fsub double %409, %411\l  %413 = tail call double @llvm.amdgcn.ldexp.f64(double %386, i32 1)\l  %414 = tail call double @llvm.amdgcn.ldexp.f64(double %388, i32 1)\l  %415 = fmul double %386, %394\l  %416 = fneg double %415\l  %417 = tail call double @llvm.fma.f64(double %394, double %386, double %416)\l  %418 = tail call double @llvm.fma.f64(double %394, double %388, double %417)\l  %419 = tail call double @llvm.fma.f64(double %396, double %386, double %418)\l  %420 = fadd double %415, %419\l  %421 = fsub double %420, %415\l  %422 = fsub double %419, %421\l  %423 = fmul double %394, %404\l  %424 = fneg double %423\l  %425 = tail call double @llvm.fma.f64(double %394, double %404, double %424)\l  %426 = tail call double @llvm.fma.f64(double %396, double %404, double %425)\l  %427 = fadd double %423, %426\l  %428 = fsub double %427, %423\l  %429 = fsub double %426, %428\l  %430 = fadd double %427, 0x3FE5555555555555\l  %431 = fadd double %430, 0xBFE5555555555555\l  %432 = fsub double %427, %431\l  %433 = fadd double %429, 0x3C8543B0D5DF274D\l  %434 = fadd double %433, %432\l  %435 = fadd double %430, %434\l  %436 = fsub double %435, %430\l  %437 = fsub double %434, %436\l  %438 = fmul double %420, %435\l  %439 = fneg double %438\l  %440 = tail call double @llvm.fma.f64(double %420, double %435, double %439)\l  %441 = tail call double @llvm.fma.f64(double %420, double %437, double %440)\l  %442 = tail call double @llvm.fma.f64(double %422, double %435, double %441)\l  %443 = fadd double %438, %442\l  %444 = fsub double %443, %438\l  %445 = fsub double %442, %444\l  %446 = fadd double %413, %443\l  %447 = fsub double %446, %413\l  %448 = fsub double %443, %447\l  %449 = fadd double %414, %445\l  %450 = fadd double %449, %448\l  %451 = fadd double %446, %450\l  %452 = fsub double %451, %446\l  %453 = fsub double %450, %452\l  %454 = fadd double %410, %451\l  %455 = fsub double %454, %410\l  %456 = fsub double %454, %455\l  %457 = fsub double %410, %456\l  %458 = fsub double %451, %455\l  %459 = fadd double %458, %457\l  %460 = fadd double %412, %453\l  %461 = fsub double %460, %412\l  %462 = fsub double %460, %461\l  %463 = fsub double %412, %462\l  %464 = fsub double %453, %461\l  %465 = fadd double %464, %463\l  %466 = fadd double %460, %459\l  %467 = fadd double %454, %466\l  %468 = fsub double %467, %454\l  %469 = fsub double %466, %468\l  %470 = fadd double %465, %469\l  %471 = fadd double %467, %470\l  %472 = fsub double %471, %467\l  %473 = fsub double %470, %472\l  %474 = fmul double %471, 2.000000e+00\l  %475 = fneg double %474\l  %476 = tail call double @llvm.fma.f64(double %471, double 2.000000e+00,\l... double %475)\l  %477 = tail call double @llvm.fma.f64(double %473, double 2.000000e+00,\l... double %476)\l  %478 = fadd double %474, %477\l  %479 = fsub double %478, %474\l  %480 = fsub double %477, %479\l  %481 = tail call double @llvm.fabs.f64(double %474) #4\l  %482 = fcmp oeq double %481, 0x7FF0000000000000\l  %483 = select i1 %482, double %474, double %478\l  %484 = tail call double @llvm.fabs.f64(double %483) #4\l  %485 = fcmp oeq double %484, 0x7FF0000000000000\l  %486 = select i1 %485, double 0.000000e+00, double %480\l  %487 = fmul double %483, 0x3FF71547652B82FE\l  %488 = tail call double @llvm.rint.f64(double %487)\l  %489 = fneg double %488\l  %490 = tail call double @llvm.fma.f64(double %489, double\l... 0x3FE62E42FEFA39EF, double %483)\l  %491 = tail call double @llvm.fma.f64(double %489, double\l... 0x3C7ABC9E3B39803F, double %490)\l  %492 = tail call double @llvm.fma.f64(double %491, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %493 = tail call double @llvm.fma.f64(double %491, double %492, double\l... 0x3EC71DEE623FDE64)\l  %494 = tail call double @llvm.fma.f64(double %491, double %493, double\l... 0x3EFA01997C89E6B0)\l  %495 = tail call double @llvm.fma.f64(double %491, double %494, double\l... 0x3F2A01A014761F6E)\l  %496 = tail call double @llvm.fma.f64(double %491, double %495, double\l... 0x3F56C16C1852B7B0)\l  %497 = tail call double @llvm.fma.f64(double %491, double %496, double\l... 0x3F81111111122322)\l  %498 = tail call double @llvm.fma.f64(double %491, double %497, double\l... 0x3FA55555555502A1)\l  %499 = tail call double @llvm.fma.f64(double %491, double %498, double\l... 0x3FC5555555555511)\l  %500 = tail call double @llvm.fma.f64(double %491, double %499, double\l... 0x3FE000000000000B)\l  %501 = tail call double @llvm.fma.f64(double %491, double %500, double\l... 1.000000e+00)\l  %502 = tail call double @llvm.fma.f64(double %491, double %501, double\l... 1.000000e+00)\l  %503 = fptosi double %488 to i32\l  %504 = tail call double @llvm.amdgcn.ldexp.f64(double %502, i32 %503)\l  %505 = fcmp ogt double %483, 1.024000e+03\l  %506 = select i1 %505, double 0x7FF0000000000000, double %504\l  %507 = fcmp olt double %483, -1.075000e+03\l  %508 = select i1 %507, double 0.000000e+00, double %506\l  %509 = tail call double @llvm.fma.f64(double %508, double %486, double %508)\l  %510 = tail call double @llvm.fabs.f64(double %508) #4\l  %511 = fcmp oeq double %510, 0x7FF0000000000000\l  %512 = select i1 %511, double %508, double %509\l  %513 = tail call double @llvm.fabs.f64(double %512)\l  %514 = fcmp oeq double %355, 0x7FF0000000000000\l  %515 = fcmp oeq double %1, 0.000000e+00\l  %516 = fcmp uno double %1, 0.000000e+00\l  %517 = fcmp oeq double %1, 1.000000e+00\l  %518 = fmul contract double %513, 2.000000e+00\l  %519 = select i1 %514, double 0x7FF0000000000000, double %518\l  %520 = select i1 %515, double 0.000000e+00, double %519\l  %521 = select i1 %516, double 0x7FF8000000000000, double %520\l  %522 = select i1 %517, double 2.000000e+00, double %521\l  %523 = fdiv contract double %354, %522\l  %524 = fmul double %523, 0x3FF71547652B82FE\l  %525 = tail call double @llvm.rint.f64(double %524)\l  %526 = fneg double %525\l  %527 = tail call double @llvm.fma.f64(double %526, double\l... 0x3FE62E42FEFA39EF, double %523)\l  %528 = tail call double @llvm.fma.f64(double %526, double\l... 0x3C7ABC9E3B39803F, double %527)\l  %529 = tail call double @llvm.fma.f64(double %528, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %530 = tail call double @llvm.fma.f64(double %528, double %529, double\l... 0x3EC71DEE623FDE64)\l  %531 = tail call double @llvm.fma.f64(double %528, double %530, double\l... 0x3EFA01997C89E6B0)\l  %532 = tail call double @llvm.fma.f64(double %528, double %531, double\l... 0x3F2A01A014761F6E)\l  %533 = tail call double @llvm.fma.f64(double %528, double %532, double\l... 0x3F56C16C1852B7B0)\l  %534 = tail call double @llvm.fma.f64(double %528, double %533, double\l... 0x3F81111111122322)\l  %535 = tail call double @llvm.fma.f64(double %528, double %534, double\l... 0x3FA55555555502A1)\l  %536 = tail call double @llvm.fma.f64(double %528, double %535, double\l... 0x3FC5555555555511)\l  %537 = tail call double @llvm.fma.f64(double %528, double %536, double\l... 0x3FE000000000000B)\l  %538 = tail call double @llvm.fma.f64(double %528, double %537, double\l... 1.000000e+00)\l  %539 = tail call double @llvm.fma.f64(double %528, double %538, double\l... 1.000000e+00)\l  %540 = fptosi double %525 to i32\l  %541 = tail call double @llvm.amdgcn.ldexp.f64(double %539, i32 %540)\l  %542 = fcmp ogt double %523, 1.024000e+03\l  %543 = select i1 %542, double 0x7FF0000000000000, double %541\l  %544 = fcmp olt double %523, -1.075000e+03\l  %545 = select i1 %544, double 0.000000e+00, double %543\l  %546 = sext i32 %12 to i64\l  %547 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %12\l  store double %545, double addrspace(3)* %547, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %548 = icmp sgt i32 %8, 0\l  br i1 %548, label %549, label %623\l|{<s0>T|<s1>F}}"];
	Node0x59305a0:s0 -> Node0x594d8f0;
	Node0x59305a0:s1 -> Node0x594d980;
	Node0x594d8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%549:\l549:                                              \l  %550 = and i32 %8, 7\l  %551 = icmp ult i32 %8, 8\l  %552 = and i32 %8, -8\l  %553 = icmp eq i32 %550, 0\l  br label %554\l}"];
	Node0x594d8f0 -> Node0x594dd60;
	Node0x594dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%554:\l554:                                              \l  %555 = phi double [ %620, %619 ], [ 0.000000e+00, %549 ]\l  %556 = phi i32 [ %621, %619 ], [ 0, %549 ]\l  %557 = mul nsw i32 %556, %8\l  br i1 %551, label %604, label %558\l|{<s0>T|<s1>F}}"];
	Node0x594dd60:s0 -> Node0x594e140;
	Node0x594dd60:s1 -> Node0x594e1d0;
	Node0x594e1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%558:\l558:                                              \l  %559 = phi double [ %600, %558 ], [ %555, %554 ]\l  %560 = phi i32 [ %601, %558 ], [ 0, %554 ]\l  %561 = phi i32 [ %602, %558 ], [ 0, %554 ]\l  %562 = add nsw i32 %560, %557\l  %563 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %562\l  %564 = load double, double addrspace(3)* %563, align 8, !tbaa !5\l  %565 = fadd contract double %559, %564\l  %566 = or i32 %560, 1\l  %567 = add nsw i32 %566, %557\l  %568 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %567\l  %569 = load double, double addrspace(3)* %568, align 8, !tbaa !5\l  %570 = fadd contract double %565, %569\l  %571 = or i32 %560, 2\l  %572 = add nsw i32 %571, %557\l  %573 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %572\l  %574 = load double, double addrspace(3)* %573, align 8, !tbaa !5\l  %575 = fadd contract double %570, %574\l  %576 = or i32 %560, 3\l  %577 = add nsw i32 %576, %557\l  %578 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %577\l  %579 = load double, double addrspace(3)* %578, align 8, !tbaa !5\l  %580 = fadd contract double %575, %579\l  %581 = or i32 %560, 4\l  %582 = add nsw i32 %581, %557\l  %583 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %582\l  %584 = load double, double addrspace(3)* %583, align 8, !tbaa !5\l  %585 = fadd contract double %580, %584\l  %586 = or i32 %560, 5\l  %587 = add nsw i32 %586, %557\l  %588 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %587\l  %589 = load double, double addrspace(3)* %588, align 8, !tbaa !5\l  %590 = fadd contract double %585, %589\l  %591 = or i32 %560, 6\l  %592 = add nsw i32 %591, %557\l  %593 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %592\l  %594 = load double, double addrspace(3)* %593, align 8, !tbaa !5\l  %595 = fadd contract double %590, %594\l  %596 = or i32 %560, 7\l  %597 = add nsw i32 %596, %557\l  %598 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %597\l  %599 = load double, double addrspace(3)* %598, align 8, !tbaa !5\l  %600 = fadd contract double %595, %599\l  %601 = add nuw nsw i32 %560, 8\l  %602 = add i32 %561, 8\l  %603 = icmp eq i32 %602, %552\l  br i1 %603, label %604, label %558, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x594e1d0:s0 -> Node0x594e140;
	Node0x594e1d0:s1 -> Node0x594e1d0;
	Node0x594e140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%604:\l604:                                              \l  %605 = phi double [ undef, %554 ], [ %600, %558 ]\l  %606 = phi double [ %555, %554 ], [ %600, %558 ]\l  %607 = phi i32 [ 0, %554 ], [ %601, %558 ]\l  br i1 %553, label %619, label %608\l|{<s0>T|<s1>F}}"];
	Node0x594e140:s0 -> Node0x594de50;
	Node0x594e140:s1 -> Node0x59508e0;
	Node0x59508e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%608:\l608:                                              \l  %609 = phi double [ %615, %608 ], [ %606, %604 ]\l  %610 = phi i32 [ %616, %608 ], [ %607, %604 ]\l  %611 = phi i32 [ %617, %608 ], [ 0, %604 ]\l  %612 = add nsw i32 %610, %557\l  %613 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g1, i32 0, i32 %612\l  %614 = load double, double addrspace(3)* %613, align 8, !tbaa !5\l  %615 = fadd contract double %609, %614\l  %616 = add nuw nsw i32 %610, 1\l  %617 = add i32 %611, 1\l  %618 = icmp eq i32 %617, %550\l  br i1 %618, label %619, label %608, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59508e0:s0 -> Node0x594de50;
	Node0x59508e0:s1 -> Node0x59508e0;
	Node0x594de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%619:\l619:                                              \l  %620 = phi double [ %605, %604 ], [ %615, %608 ]\l  %621 = add nuw nsw i32 %556, 1\l  %622 = icmp eq i32 %621, %8\l  br i1 %622, label %623, label %554, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x594de50:s0 -> Node0x594d980;
	Node0x594de50:s1 -> Node0x594dd60;
	Node0x594d980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%623:\l623:                                              \l  %624 = phi double [ 0.000000e+00, %15 ], [ %620, %619 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %625 = load double, double addrspace(3)* %547, align 8, !tbaa !5\l  %626 = fdiv contract double %625, %624\l  store double %626, double addrspace(3)* %547, align 8, !tbaa !5\l  %627 = fmul contract double %1, %2\l  %628 = tail call double @llvm.fabs.f64(double %627)\l  %629 = tail call double @llvm.amdgcn.frexp.mant.f64(double %628)\l  %630 = fcmp olt double %629, 0x3FE5555555555555\l  %631 = zext i1 %630 to i32\l  %632 = tail call double @llvm.amdgcn.ldexp.f64(double %629, i32 %631)\l  %633 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %628)\l  %634 = sub nsw i32 %633, %631\l  %635 = fadd double %632, -1.000000e+00\l  %636 = fadd double %632, 1.000000e+00\l  %637 = fadd double %636, -1.000000e+00\l  %638 = fsub double %632, %637\l  %639 = tail call double @llvm.amdgcn.rcp.f64(double %636)\l  %640 = fneg double %636\l  %641 = tail call double @llvm.fma.f64(double %640, double %639, double\l... 1.000000e+00)\l  %642 = tail call double @llvm.fma.f64(double %641, double %639, double %639)\l  %643 = tail call double @llvm.fma.f64(double %640, double %642, double\l... 1.000000e+00)\l  %644 = tail call double @llvm.fma.f64(double %643, double %642, double %642)\l  %645 = fmul double %635, %644\l  %646 = fmul double %636, %645\l  %647 = fneg double %646\l  %648 = tail call double @llvm.fma.f64(double %645, double %636, double %647)\l  %649 = tail call double @llvm.fma.f64(double %645, double %638, double %648)\l  %650 = fadd double %646, %649\l  %651 = fsub double %650, %646\l  %652 = fsub double %649, %651\l  %653 = fsub double %635, %650\l  %654 = fsub double %635, %653\l  %655 = fsub double %654, %650\l  %656 = fsub double %655, %652\l  %657 = fadd double %653, %656\l  %658 = fmul double %644, %657\l  %659 = fadd double %645, %658\l  %660 = fsub double %659, %645\l  %661 = fsub double %658, %660\l  %662 = fmul double %659, %659\l  %663 = fneg double %662\l  %664 = tail call double @llvm.fma.f64(double %659, double %659, double %663)\l  %665 = fmul double %661, 2.000000e+00\l  %666 = tail call double @llvm.fma.f64(double %659, double %665, double %664)\l  %667 = fadd double %662, %666\l  %668 = fsub double %667, %662\l  %669 = fsub double %666, %668\l  %670 = tail call double @llvm.fma.f64(double %667, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %671 = tail call double @llvm.fma.f64(double %667, double %670, double\l... 0x3FBE25E43ABE935A)\l  %672 = tail call double @llvm.fma.f64(double %667, double %671, double\l... 0x3FC110EF47E6C9C2)\l  %673 = tail call double @llvm.fma.f64(double %667, double %672, double\l... 0x3FC3B13BCFA74449)\l  %674 = tail call double @llvm.fma.f64(double %667, double %673, double\l... 0x3FC745D171BF3C30)\l  %675 = tail call double @llvm.fma.f64(double %667, double %674, double\l... 0x3FCC71C71C7792CE)\l  %676 = tail call double @llvm.fma.f64(double %667, double %675, double\l... 0x3FD24924924920DA)\l  %677 = tail call double @llvm.fma.f64(double %667, double %676, double\l... 0x3FD999999999999C)\l  %678 = sitofp i32 %634 to double\l  %679 = fmul double %678, 0x3FE62E42FEFA39EF\l  %680 = fneg double %679\l  %681 = tail call double @llvm.fma.f64(double %678, double\l... 0x3FE62E42FEFA39EF, double %680)\l  %682 = tail call double @llvm.fma.f64(double %678, double\l... 0x3C7ABC9E3B39803F, double %681)\l  %683 = fadd double %679, %682\l  %684 = fsub double %683, %679\l  %685 = fsub double %682, %684\l  %686 = tail call double @llvm.amdgcn.ldexp.f64(double %659, i32 1)\l  %687 = tail call double @llvm.amdgcn.ldexp.f64(double %661, i32 1)\l  %688 = fmul double %659, %667\l  %689 = fneg double %688\l  %690 = tail call double @llvm.fma.f64(double %667, double %659, double %689)\l  %691 = tail call double @llvm.fma.f64(double %667, double %661, double %690)\l  %692 = tail call double @llvm.fma.f64(double %669, double %659, double %691)\l  %693 = fadd double %688, %692\l  %694 = fsub double %693, %688\l  %695 = fsub double %692, %694\l  %696 = fmul double %667, %677\l  %697 = fneg double %696\l  %698 = tail call double @llvm.fma.f64(double %667, double %677, double %697)\l  %699 = tail call double @llvm.fma.f64(double %669, double %677, double %698)\l  %700 = fadd double %696, %699\l  %701 = fsub double %700, %696\l  %702 = fsub double %699, %701\l  %703 = fadd double %700, 0x3FE5555555555555\l  %704 = fadd double %703, 0xBFE5555555555555\l  %705 = fsub double %700, %704\l  %706 = fadd double %702, 0x3C8543B0D5DF274D\l  %707 = fadd double %706, %705\l  %708 = fadd double %703, %707\l  %709 = fsub double %708, %703\l  %710 = fsub double %707, %709\l  %711 = fmul double %693, %708\l  %712 = fneg double %711\l  %713 = tail call double @llvm.fma.f64(double %693, double %708, double %712)\l  %714 = tail call double @llvm.fma.f64(double %693, double %710, double %713)\l  %715 = tail call double @llvm.fma.f64(double %695, double %708, double %714)\l  %716 = fadd double %711, %715\l  %717 = fsub double %716, %711\l  %718 = fsub double %715, %717\l  %719 = fadd double %686, %716\l  %720 = fsub double %719, %686\l  %721 = fsub double %716, %720\l  %722 = fadd double %687, %718\l  %723 = fadd double %722, %721\l  %724 = fadd double %719, %723\l  %725 = fsub double %724, %719\l  %726 = fsub double %723, %725\l  %727 = fadd double %683, %724\l  %728 = fsub double %727, %683\l  %729 = fsub double %727, %728\l  %730 = fsub double %683, %729\l  %731 = fsub double %724, %728\l  %732 = fadd double %731, %730\l  %733 = fadd double %685, %726\l  %734 = fsub double %733, %685\l  %735 = fsub double %733, %734\l  %736 = fsub double %685, %735\l  %737 = fsub double %726, %734\l  %738 = fadd double %737, %736\l  %739 = fadd double %733, %732\l  %740 = fadd double %727, %739\l  %741 = fsub double %740, %727\l  %742 = fsub double %739, %741\l  %743 = fadd double %738, %742\l  %744 = fadd double %740, %743\l  %745 = fsub double %744, %740\l  %746 = fsub double %743, %745\l  %747 = fmul double %744, 2.000000e+00\l  %748 = fneg double %747\l  %749 = tail call double @llvm.fma.f64(double %744, double 2.000000e+00,\l... double %748)\l  %750 = tail call double @llvm.fma.f64(double %746, double 2.000000e+00,\l... double %749)\l  %751 = fadd double %747, %750\l  %752 = fsub double %751, %747\l  %753 = fsub double %750, %752\l  %754 = tail call double @llvm.fabs.f64(double %747) #4\l  %755 = fcmp oeq double %754, 0x7FF0000000000000\l  %756 = select i1 %755, double %747, double %751\l  %757 = tail call double @llvm.fabs.f64(double %756) #4\l  %758 = fcmp oeq double %757, 0x7FF0000000000000\l  %759 = select i1 %758, double 0.000000e+00, double %753\l  %760 = fmul double %756, 0x3FF71547652B82FE\l  %761 = tail call double @llvm.rint.f64(double %760)\l  %762 = fneg double %761\l  %763 = tail call double @llvm.fma.f64(double %762, double\l... 0x3FE62E42FEFA39EF, double %756)\l  %764 = tail call double @llvm.fma.f64(double %762, double\l... 0x3C7ABC9E3B39803F, double %763)\l  %765 = tail call double @llvm.fma.f64(double %764, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %766 = tail call double @llvm.fma.f64(double %764, double %765, double\l... 0x3EC71DEE623FDE64)\l  %767 = tail call double @llvm.fma.f64(double %764, double %766, double\l... 0x3EFA01997C89E6B0)\l  %768 = tail call double @llvm.fma.f64(double %764, double %767, double\l... 0x3F2A01A014761F6E)\l  %769 = tail call double @llvm.fma.f64(double %764, double %768, double\l... 0x3F56C16C1852B7B0)\l  %770 = tail call double @llvm.fma.f64(double %764, double %769, double\l... 0x3F81111111122322)\l  %771 = tail call double @llvm.fma.f64(double %764, double %770, double\l... 0x3FA55555555502A1)\l  %772 = tail call double @llvm.fma.f64(double %764, double %771, double\l... 0x3FC5555555555511)\l  %773 = tail call double @llvm.fma.f64(double %764, double %772, double\l... 0x3FE000000000000B)\l  %774 = tail call double @llvm.fma.f64(double %764, double %773, double\l... 1.000000e+00)\l  %775 = tail call double @llvm.fma.f64(double %764, double %774, double\l... 1.000000e+00)\l  %776 = fptosi double %761 to i32\l  %777 = tail call double @llvm.amdgcn.ldexp.f64(double %775, i32 %776)\l  %778 = fcmp ogt double %756, 1.024000e+03\l  %779 = select i1 %778, double 0x7FF0000000000000, double %777\l  %780 = fcmp olt double %756, -1.075000e+03\l  %781 = select i1 %780, double 0.000000e+00, double %779\l  %782 = tail call double @llvm.fma.f64(double %781, double %759, double %781)\l  %783 = tail call double @llvm.fabs.f64(double %781) #4\l  %784 = fcmp oeq double %783, 0x7FF0000000000000\l  %785 = select i1 %784, double %781, double %782\l  %786 = tail call double @llvm.fabs.f64(double %785)\l  %787 = fcmp oeq double %628, 0x7FF0000000000000\l  %788 = fcmp oeq double %627, 0.000000e+00\l  %789 = fcmp uno double %627, 0.000000e+00\l  %790 = fcmp oeq double %627, 1.000000e+00\l  %791 = fmul contract double %786, 2.000000e+00\l  %792 = select i1 %787, double 0x7FF0000000000000, double %791\l  %793 = select i1 %788, double 0.000000e+00, double %792\l  %794 = select i1 %789, double 0x7FF8000000000000, double %793\l  %795 = select i1 %790, double 2.000000e+00, double %794\l  %796 = fdiv contract double %354, %795\l  %797 = fmul double %796, 0x3FF71547652B82FE\l  %798 = tail call double @llvm.rint.f64(double %797)\l  %799 = fneg double %798\l  %800 = tail call double @llvm.fma.f64(double %799, double\l... 0x3FE62E42FEFA39EF, double %796)\l  %801 = tail call double @llvm.fma.f64(double %799, double\l... 0x3C7ABC9E3B39803F, double %800)\l  %802 = tail call double @llvm.fma.f64(double %801, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %803 = tail call double @llvm.fma.f64(double %801, double %802, double\l... 0x3EC71DEE623FDE64)\l  %804 = tail call double @llvm.fma.f64(double %801, double %803, double\l... 0x3EFA01997C89E6B0)\l  %805 = tail call double @llvm.fma.f64(double %801, double %804, double\l... 0x3F2A01A014761F6E)\l  %806 = tail call double @llvm.fma.f64(double %801, double %805, double\l... 0x3F56C16C1852B7B0)\l  %807 = tail call double @llvm.fma.f64(double %801, double %806, double\l... 0x3F81111111122322)\l  %808 = tail call double @llvm.fma.f64(double %801, double %807, double\l... 0x3FA55555555502A1)\l  %809 = tail call double @llvm.fma.f64(double %801, double %808, double\l... 0x3FC5555555555511)\l  %810 = tail call double @llvm.fma.f64(double %801, double %809, double\l... 0x3FE000000000000B)\l  %811 = tail call double @llvm.fma.f64(double %801, double %810, double\l... 1.000000e+00)\l  %812 = tail call double @llvm.fma.f64(double %801, double %811, double\l... 1.000000e+00)\l  %813 = fptosi double %798 to i32\l  %814 = tail call double @llvm.amdgcn.ldexp.f64(double %812, i32 %813)\l  %815 = fcmp ogt double %796, 1.024000e+03\l  %816 = select i1 %815, double 0x7FF0000000000000, double %814\l  %817 = fcmp olt double %796, -1.075000e+03\l  %818 = select i1 %817, double 0.000000e+00, double %816\l  %819 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %12\l  store double %818, double addrspace(3)* %819, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %548, label %820, label %894\l|{<s0>T|<s1>F}}"];
	Node0x594d980:s0 -> Node0x595b000;
	Node0x594d980:s1 -> Node0x595b050;
	Node0x595b000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%820:\l820:                                              \l  %821 = and i32 %8, 7\l  %822 = icmp ult i32 %8, 8\l  %823 = and i32 %8, -8\l  %824 = icmp eq i32 %821, 0\l  br label %825\l}"];
	Node0x595b000 -> Node0x595b390;
	Node0x595b390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%825:\l825:                                              \l  %826 = phi double [ %891, %890 ], [ 0.000000e+00, %820 ]\l  %827 = phi i32 [ %892, %890 ], [ 0, %820 ]\l  %828 = mul nsw i32 %827, %8\l  br i1 %822, label %875, label %829\l|{<s0>T|<s1>F}}"];
	Node0x595b390:s0 -> Node0x595b6d0;
	Node0x595b390:s1 -> Node0x595b760;
	Node0x595b760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%829:\l829:                                              \l  %830 = phi double [ %871, %829 ], [ %826, %825 ]\l  %831 = phi i32 [ %872, %829 ], [ 0, %825 ]\l  %832 = phi i32 [ %873, %829 ], [ 0, %825 ]\l  %833 = add nsw i32 %831, %828\l  %834 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %833\l  %835 = load double, double addrspace(3)* %834, align 8, !tbaa !5\l  %836 = fadd contract double %830, %835\l  %837 = or i32 %831, 1\l  %838 = add nsw i32 %837, %828\l  %839 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %838\l  %840 = load double, double addrspace(3)* %839, align 8, !tbaa !5\l  %841 = fadd contract double %836, %840\l  %842 = or i32 %831, 2\l  %843 = add nsw i32 %842, %828\l  %844 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %843\l  %845 = load double, double addrspace(3)* %844, align 8, !tbaa !5\l  %846 = fadd contract double %841, %845\l  %847 = or i32 %831, 3\l  %848 = add nsw i32 %847, %828\l  %849 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %848\l  %850 = load double, double addrspace(3)* %849, align 8, !tbaa !5\l  %851 = fadd contract double %846, %850\l  %852 = or i32 %831, 4\l  %853 = add nsw i32 %852, %828\l  %854 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %853\l  %855 = load double, double addrspace(3)* %854, align 8, !tbaa !5\l  %856 = fadd contract double %851, %855\l  %857 = or i32 %831, 5\l  %858 = add nsw i32 %857, %828\l  %859 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %858\l  %860 = load double, double addrspace(3)* %859, align 8, !tbaa !5\l  %861 = fadd contract double %856, %860\l  %862 = or i32 %831, 6\l  %863 = add nsw i32 %862, %828\l  %864 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %863\l  %865 = load double, double addrspace(3)* %864, align 8, !tbaa !5\l  %866 = fadd contract double %861, %865\l  %867 = or i32 %831, 7\l  %868 = add nsw i32 %867, %828\l  %869 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %868\l  %870 = load double, double addrspace(3)* %869, align 8, !tbaa !5\l  %871 = fadd contract double %866, %870\l  %872 = add nuw nsw i32 %831, 8\l  %873 = add i32 %832, 8\l  %874 = icmp eq i32 %873, %823\l  br i1 %874, label %875, label %829, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x595b760:s0 -> Node0x595b6d0;
	Node0x595b760:s1 -> Node0x595b760;
	Node0x595b6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%875:\l875:                                              \l  %876 = phi double [ undef, %825 ], [ %871, %829 ]\l  %877 = phi double [ %826, %825 ], [ %871, %829 ]\l  %878 = phi i32 [ 0, %825 ], [ %872, %829 ]\l  br i1 %824, label %890, label %879\l|{<s0>T|<s1>F}}"];
	Node0x595b6d0:s0 -> Node0x595b450;
	Node0x595b6d0:s1 -> Node0x595dc60;
	Node0x595dc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%879:\l879:                                              \l  %880 = phi double [ %886, %879 ], [ %877, %875 ]\l  %881 = phi i32 [ %887, %879 ], [ %878, %875 ]\l  %882 = phi i32 [ %888, %879 ], [ 0, %875 ]\l  %883 = add nsw i32 %881, %828\l  %884 = getelementptr inbounds [900 x double], [900 x double] addrspace(3)*\l... @_ZZ6getDoGPdddE2g2, i32 0, i32 %883\l  %885 = load double, double addrspace(3)* %884, align 8, !tbaa !5\l  %886 = fadd contract double %880, %885\l  %887 = add nuw nsw i32 %881, 1\l  %888 = add i32 %882, 1\l  %889 = icmp eq i32 %888, %821\l  br i1 %889, label %890, label %879, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x595dc60:s0 -> Node0x595b450;
	Node0x595dc60:s1 -> Node0x595dc60;
	Node0x595b450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%890:\l890:                                              \l  %891 = phi double [ %876, %875 ], [ %886, %879 ]\l  %892 = add nuw nsw i32 %827, 1\l  %893 = icmp eq i32 %892, %8\l  br i1 %893, label %894, label %825, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x595b450:s0 -> Node0x595b050;
	Node0x595b450:s1 -> Node0x595b390;
	Node0x595b050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%894:\l894:                                              \l  %895 = phi double [ 0.000000e+00, %623 ], [ %891, %890 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %896 = load double, double addrspace(3)* %819, align 8, !tbaa !5\l  %897 = fdiv contract double %896, %895\l  store double %897, double addrspace(3)* %819, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %898 = load double, double addrspace(3)* %819, align 8, !tbaa !5\l  %899 = load double, double addrspace(3)* %547, align 8, !tbaa !5\l  %900 = fsub contract double %898, %899\l  %901 = getelementptr inbounds double, double addrspace(1)* %0, i64 %546\l  store double %900, double addrspace(1)* %901, align 8, !tbaa !5\l  br label %902\l}"];
	Node0x595b050 -> Node0x5930630;
	Node0x5930630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%902:\l902:                                              \l  ret void\l}"];
}
