; ModuleID = '../data/hip_kernels/9167/2/main.cu'
source_filename = "../data/hip_kernels/9167/2/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly
define protected amdgpu_kernel void @_Z11getGaussianPdd(double addrspace(1)* nocapture writeonly %0, double %1) local_unnamed_addr #0 {
  %3 = fmul contract double %1, 3.000000e+00
  %4 = tail call double @llvm.ceil.f64(double %3)
  %5 = fmul contract double %4, 2.000000e+00
  %6 = fadd contract double %5, 1.000000e+00
  %7 = fptosi double %6 to i32
  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4
  %9 = mul i32 %8, %7
  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %11 = add i32 %9, %10
  %12 = mul nsw i32 %7, %7
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %547

14:                                               ; preds = %2
  %15 = sdiv i32 %7, 2
  %16 = sub nsw i32 %10, %15
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true)
  %18 = sub nsw i32 %8, %15
  %19 = tail call i32 @llvm.abs.i32(i32 %18, i1 true)
  %20 = sitofp i32 %17 to double
  %21 = tail call double @llvm.fabs.f64(double %20)
  %22 = tail call double @llvm.amdgcn.frexp.mant.f64(double %21)
  %23 = fcmp olt double %22, 0x3FE5555555555555
  %24 = zext i1 %23 to i32
  %25 = tail call double @llvm.amdgcn.ldexp.f64(double %22, i32 %24)
  %26 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %21)
  %27 = sub nsw i32 %26, %24
  %28 = fadd double %25, -1.000000e+00
  %29 = fadd double %25, 1.000000e+00
  %30 = fadd double %29, -1.000000e+00
  %31 = fsub double %25, %30
  %32 = tail call double @llvm.amdgcn.rcp.f64(double %29)
  %33 = fneg double %29
  %34 = tail call double @llvm.fma.f64(double %33, double %32, double 1.000000e+00)
  %35 = tail call double @llvm.fma.f64(double %34, double %32, double %32)
  %36 = tail call double @llvm.fma.f64(double %33, double %35, double 1.000000e+00)
  %37 = tail call double @llvm.fma.f64(double %36, double %35, double %35)
  %38 = fmul double %28, %37
  %39 = fmul double %29, %38
  %40 = fneg double %39
  %41 = tail call double @llvm.fma.f64(double %38, double %29, double %40)
  %42 = tail call double @llvm.fma.f64(double %38, double %31, double %41)
  %43 = fadd double %39, %42
  %44 = fsub double %43, %39
  %45 = fsub double %42, %44
  %46 = fsub double %28, %43
  %47 = fsub double %28, %46
  %48 = fsub double %47, %43
  %49 = fsub double %48, %45
  %50 = fadd double %46, %49
  %51 = fmul double %37, %50
  %52 = fadd double %38, %51
  %53 = fsub double %52, %38
  %54 = fsub double %51, %53
  %55 = fmul double %52, %52
  %56 = fneg double %55
  %57 = tail call double @llvm.fma.f64(double %52, double %52, double %56)
  %58 = fmul double %54, 2.000000e+00
  %59 = tail call double @llvm.fma.f64(double %52, double %58, double %57)
  %60 = fadd double %55, %59
  %61 = fsub double %60, %55
  %62 = fsub double %59, %61
  %63 = tail call double @llvm.fma.f64(double %60, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %64 = tail call double @llvm.fma.f64(double %60, double %63, double 0x3FBE25E43ABE935A)
  %65 = tail call double @llvm.fma.f64(double %60, double %64, double 0x3FC110EF47E6C9C2)
  %66 = tail call double @llvm.fma.f64(double %60, double %65, double 0x3FC3B13BCFA74449)
  %67 = tail call double @llvm.fma.f64(double %60, double %66, double 0x3FC745D171BF3C30)
  %68 = tail call double @llvm.fma.f64(double %60, double %67, double 0x3FCC71C71C7792CE)
  %69 = tail call double @llvm.fma.f64(double %60, double %68, double 0x3FD24924924920DA)
  %70 = tail call double @llvm.fma.f64(double %60, double %69, double 0x3FD999999999999C)
  %71 = sitofp i32 %27 to double
  %72 = fmul double %71, 0x3FE62E42FEFA39EF
  %73 = fneg double %72
  %74 = tail call double @llvm.fma.f64(double %71, double 0x3FE62E42FEFA39EF, double %73)
  %75 = tail call double @llvm.fma.f64(double %71, double 0x3C7ABC9E3B39803F, double %74)
  %76 = fadd double %72, %75
  %77 = fsub double %76, %72
  %78 = fsub double %75, %77
  %79 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 1)
  %80 = tail call double @llvm.amdgcn.ldexp.f64(double %54, i32 1)
  %81 = fmul double %52, %60
  %82 = fneg double %81
  %83 = tail call double @llvm.fma.f64(double %60, double %52, double %82)
  %84 = tail call double @llvm.fma.f64(double %60, double %54, double %83)
  %85 = tail call double @llvm.fma.f64(double %62, double %52, double %84)
  %86 = fadd double %81, %85
  %87 = fsub double %86, %81
  %88 = fsub double %85, %87
  %89 = fmul double %60, %70
  %90 = fneg double %89
  %91 = tail call double @llvm.fma.f64(double %60, double %70, double %90)
  %92 = tail call double @llvm.fma.f64(double %62, double %70, double %91)
  %93 = fadd double %89, %92
  %94 = fsub double %93, %89
  %95 = fsub double %92, %94
  %96 = fadd double %93, 0x3FE5555555555555
  %97 = fadd double %96, 0xBFE5555555555555
  %98 = fsub double %93, %97
  %99 = fadd double %95, 0x3C8543B0D5DF274D
  %100 = fadd double %99, %98
  %101 = fadd double %96, %100
  %102 = fsub double %101, %96
  %103 = fsub double %100, %102
  %104 = fmul double %86, %101
  %105 = fneg double %104
  %106 = tail call double @llvm.fma.f64(double %86, double %101, double %105)
  %107 = tail call double @llvm.fma.f64(double %86, double %103, double %106)
  %108 = tail call double @llvm.fma.f64(double %88, double %101, double %107)
  %109 = fadd double %104, %108
  %110 = fsub double %109, %104
  %111 = fsub double %108, %110
  %112 = fadd double %79, %109
  %113 = fsub double %112, %79
  %114 = fsub double %109, %113
  %115 = fadd double %80, %111
  %116 = fadd double %115, %114
  %117 = fadd double %112, %116
  %118 = fsub double %117, %112
  %119 = fsub double %116, %118
  %120 = fadd double %76, %117
  %121 = fsub double %120, %76
  %122 = fsub double %120, %121
  %123 = fsub double %76, %122
  %124 = fsub double %117, %121
  %125 = fadd double %124, %123
  %126 = fadd double %78, %119
  %127 = fsub double %126, %78
  %128 = fsub double %126, %127
  %129 = fsub double %78, %128
  %130 = fsub double %119, %127
  %131 = fadd double %130, %129
  %132 = fadd double %126, %125
  %133 = fadd double %120, %132
  %134 = fsub double %133, %120
  %135 = fsub double %132, %134
  %136 = fadd double %131, %135
  %137 = fadd double %133, %136
  %138 = fsub double %137, %133
  %139 = fsub double %136, %138
  %140 = fmul double %137, 2.000000e+00
  %141 = fneg double %140
  %142 = tail call double @llvm.fma.f64(double %137, double 2.000000e+00, double %141)
  %143 = tail call double @llvm.fma.f64(double %139, double 2.000000e+00, double %142)
  %144 = fadd double %140, %143
  %145 = fsub double %144, %140
  %146 = fsub double %143, %145
  %147 = tail call double @llvm.fabs.f64(double %140) #4
  %148 = fcmp oeq double %147, 0x7FF0000000000000
  %149 = select i1 %148, double %140, double %144
  %150 = tail call double @llvm.fabs.f64(double %149) #4
  %151 = fcmp oeq double %150, 0x7FF0000000000000
  %152 = select i1 %151, double 0.000000e+00, double %146
  %153 = fmul double %149, 0x3FF71547652B82FE
  %154 = tail call double @llvm.rint.f64(double %153)
  %155 = fneg double %154
  %156 = tail call double @llvm.fma.f64(double %155, double 0x3FE62E42FEFA39EF, double %149)
  %157 = tail call double @llvm.fma.f64(double %155, double 0x3C7ABC9E3B39803F, double %156)
  %158 = tail call double @llvm.fma.f64(double %157, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %159 = tail call double @llvm.fma.f64(double %157, double %158, double 0x3EC71DEE623FDE64)
  %160 = tail call double @llvm.fma.f64(double %157, double %159, double 0x3EFA01997C89E6B0)
  %161 = tail call double @llvm.fma.f64(double %157, double %160, double 0x3F2A01A014761F6E)
  %162 = tail call double @llvm.fma.f64(double %157, double %161, double 0x3F56C16C1852B7B0)
  %163 = tail call double @llvm.fma.f64(double %157, double %162, double 0x3F81111111122322)
  %164 = tail call double @llvm.fma.f64(double %157, double %163, double 0x3FA55555555502A1)
  %165 = tail call double @llvm.fma.f64(double %157, double %164, double 0x3FC5555555555511)
  %166 = tail call double @llvm.fma.f64(double %157, double %165, double 0x3FE000000000000B)
  %167 = tail call double @llvm.fma.f64(double %157, double %166, double 1.000000e+00)
  %168 = tail call double @llvm.fma.f64(double %157, double %167, double 1.000000e+00)
  %169 = fptosi double %154 to i32
  %170 = tail call double @llvm.amdgcn.ldexp.f64(double %168, i32 %169)
  %171 = fcmp ogt double %149, 1.024000e+03
  %172 = select i1 %171, double 0x7FF0000000000000, double %170
  %173 = fcmp olt double %149, -1.075000e+03
  %174 = select i1 %173, double 0.000000e+00, double %172
  %175 = tail call double @llvm.fma.f64(double %174, double %152, double %174)
  %176 = tail call double @llvm.fabs.f64(double %174) #4
  %177 = fcmp oeq double %176, 0x7FF0000000000000
  %178 = select i1 %177, double %174, double %175
  %179 = tail call double @llvm.fabs.f64(double %178)
  %180 = fcmp oeq double %21, 0x7FF0000000000000
  %181 = icmp eq i32 %10, %15
  %182 = select i1 %180, double 0x7FF0000000000000, double %179
  %183 = select i1 %181, double 0.000000e+00, double %182
  %184 = icmp eq i32 %17, 1
  %185 = select i1 %184, double 1.000000e+00, double %183
  %186 = sitofp i32 %19 to double
  %187 = tail call double @llvm.fabs.f64(double %186)
  %188 = tail call double @llvm.amdgcn.frexp.mant.f64(double %187)
  %189 = fcmp olt double %188, 0x3FE5555555555555
  %190 = zext i1 %189 to i32
  %191 = tail call double @llvm.amdgcn.ldexp.f64(double %188, i32 %190)
  %192 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %187)
  %193 = sub nsw i32 %192, %190
  %194 = fadd double %191, -1.000000e+00
  %195 = fadd double %191, 1.000000e+00
  %196 = fadd double %195, -1.000000e+00
  %197 = fsub double %191, %196
  %198 = tail call double @llvm.amdgcn.rcp.f64(double %195)
  %199 = fneg double %195
  %200 = tail call double @llvm.fma.f64(double %199, double %198, double 1.000000e+00)
  %201 = tail call double @llvm.fma.f64(double %200, double %198, double %198)
  %202 = tail call double @llvm.fma.f64(double %199, double %201, double 1.000000e+00)
  %203 = tail call double @llvm.fma.f64(double %202, double %201, double %201)
  %204 = fmul double %194, %203
  %205 = fmul double %195, %204
  %206 = fneg double %205
  %207 = tail call double @llvm.fma.f64(double %204, double %195, double %206)
  %208 = tail call double @llvm.fma.f64(double %204, double %197, double %207)
  %209 = fadd double %205, %208
  %210 = fsub double %209, %205
  %211 = fsub double %208, %210
  %212 = fsub double %194, %209
  %213 = fsub double %194, %212
  %214 = fsub double %213, %209
  %215 = fsub double %214, %211
  %216 = fadd double %212, %215
  %217 = fmul double %203, %216
  %218 = fadd double %204, %217
  %219 = fsub double %218, %204
  %220 = fsub double %217, %219
  %221 = fmul double %218, %218
  %222 = fneg double %221
  %223 = tail call double @llvm.fma.f64(double %218, double %218, double %222)
  %224 = fmul double %220, 2.000000e+00
  %225 = tail call double @llvm.fma.f64(double %218, double %224, double %223)
  %226 = fadd double %221, %225
  %227 = fsub double %226, %221
  %228 = fsub double %225, %227
  %229 = tail call double @llvm.fma.f64(double %226, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %230 = tail call double @llvm.fma.f64(double %226, double %229, double 0x3FBE25E43ABE935A)
  %231 = tail call double @llvm.fma.f64(double %226, double %230, double 0x3FC110EF47E6C9C2)
  %232 = tail call double @llvm.fma.f64(double %226, double %231, double 0x3FC3B13BCFA74449)
  %233 = tail call double @llvm.fma.f64(double %226, double %232, double 0x3FC745D171BF3C30)
  %234 = tail call double @llvm.fma.f64(double %226, double %233, double 0x3FCC71C71C7792CE)
  %235 = tail call double @llvm.fma.f64(double %226, double %234, double 0x3FD24924924920DA)
  %236 = tail call double @llvm.fma.f64(double %226, double %235, double 0x3FD999999999999C)
  %237 = sitofp i32 %193 to double
  %238 = fmul double %237, 0x3FE62E42FEFA39EF
  %239 = fneg double %238
  %240 = tail call double @llvm.fma.f64(double %237, double 0x3FE62E42FEFA39EF, double %239)
  %241 = tail call double @llvm.fma.f64(double %237, double 0x3C7ABC9E3B39803F, double %240)
  %242 = fadd double %238, %241
  %243 = fsub double %242, %238
  %244 = fsub double %241, %243
  %245 = tail call double @llvm.amdgcn.ldexp.f64(double %218, i32 1)
  %246 = tail call double @llvm.amdgcn.ldexp.f64(double %220, i32 1)
  %247 = fmul double %218, %226
  %248 = fneg double %247
  %249 = tail call double @llvm.fma.f64(double %226, double %218, double %248)
  %250 = tail call double @llvm.fma.f64(double %226, double %220, double %249)
  %251 = tail call double @llvm.fma.f64(double %228, double %218, double %250)
  %252 = fadd double %247, %251
  %253 = fsub double %252, %247
  %254 = fsub double %251, %253
  %255 = fmul double %226, %236
  %256 = fneg double %255
  %257 = tail call double @llvm.fma.f64(double %226, double %236, double %256)
  %258 = tail call double @llvm.fma.f64(double %228, double %236, double %257)
  %259 = fadd double %255, %258
  %260 = fsub double %259, %255
  %261 = fsub double %258, %260
  %262 = fadd double %259, 0x3FE5555555555555
  %263 = fadd double %262, 0xBFE5555555555555
  %264 = fsub double %259, %263
  %265 = fadd double %261, 0x3C8543B0D5DF274D
  %266 = fadd double %265, %264
  %267 = fadd double %262, %266
  %268 = fsub double %267, %262
  %269 = fsub double %266, %268
  %270 = fmul double %252, %267
  %271 = fneg double %270
  %272 = tail call double @llvm.fma.f64(double %252, double %267, double %271)
  %273 = tail call double @llvm.fma.f64(double %252, double %269, double %272)
  %274 = tail call double @llvm.fma.f64(double %254, double %267, double %273)
  %275 = fadd double %270, %274
  %276 = fsub double %275, %270
  %277 = fsub double %274, %276
  %278 = fadd double %245, %275
  %279 = fsub double %278, %245
  %280 = fsub double %275, %279
  %281 = fadd double %246, %277
  %282 = fadd double %281, %280
  %283 = fadd double %278, %282
  %284 = fsub double %283, %278
  %285 = fsub double %282, %284
  %286 = fadd double %242, %283
  %287 = fsub double %286, %242
  %288 = fsub double %286, %287
  %289 = fsub double %242, %288
  %290 = fsub double %283, %287
  %291 = fadd double %290, %289
  %292 = fadd double %244, %285
  %293 = fsub double %292, %244
  %294 = fsub double %292, %293
  %295 = fsub double %244, %294
  %296 = fsub double %285, %293
  %297 = fadd double %296, %295
  %298 = fadd double %292, %291
  %299 = fadd double %286, %298
  %300 = fsub double %299, %286
  %301 = fsub double %298, %300
  %302 = fadd double %297, %301
  %303 = fadd double %299, %302
  %304 = fsub double %303, %299
  %305 = fsub double %302, %304
  %306 = fmul double %303, 2.000000e+00
  %307 = fneg double %306
  %308 = tail call double @llvm.fma.f64(double %303, double 2.000000e+00, double %307)
  %309 = tail call double @llvm.fma.f64(double %305, double 2.000000e+00, double %308)
  %310 = fadd double %306, %309
  %311 = fsub double %310, %306
  %312 = fsub double %309, %311
  %313 = tail call double @llvm.fabs.f64(double %306) #4
  %314 = fcmp oeq double %313, 0x7FF0000000000000
  %315 = select i1 %314, double %306, double %310
  %316 = tail call double @llvm.fabs.f64(double %315) #4
  %317 = fcmp oeq double %316, 0x7FF0000000000000
  %318 = select i1 %317, double 0.000000e+00, double %312
  %319 = fmul double %315, 0x3FF71547652B82FE
  %320 = tail call double @llvm.rint.f64(double %319)
  %321 = fneg double %320
  %322 = tail call double @llvm.fma.f64(double %321, double 0x3FE62E42FEFA39EF, double %315)
  %323 = tail call double @llvm.fma.f64(double %321, double 0x3C7ABC9E3B39803F, double %322)
  %324 = tail call double @llvm.fma.f64(double %323, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %325 = tail call double @llvm.fma.f64(double %323, double %324, double 0x3EC71DEE623FDE64)
  %326 = tail call double @llvm.fma.f64(double %323, double %325, double 0x3EFA01997C89E6B0)
  %327 = tail call double @llvm.fma.f64(double %323, double %326, double 0x3F2A01A014761F6E)
  %328 = tail call double @llvm.fma.f64(double %323, double %327, double 0x3F56C16C1852B7B0)
  %329 = tail call double @llvm.fma.f64(double %323, double %328, double 0x3F81111111122322)
  %330 = tail call double @llvm.fma.f64(double %323, double %329, double 0x3FA55555555502A1)
  %331 = tail call double @llvm.fma.f64(double %323, double %330, double 0x3FC5555555555511)
  %332 = tail call double @llvm.fma.f64(double %323, double %331, double 0x3FE000000000000B)
  %333 = tail call double @llvm.fma.f64(double %323, double %332, double 1.000000e+00)
  %334 = tail call double @llvm.fma.f64(double %323, double %333, double 1.000000e+00)
  %335 = fptosi double %320 to i32
  %336 = tail call double @llvm.amdgcn.ldexp.f64(double %334, i32 %335)
  %337 = fcmp ogt double %315, 1.024000e+03
  %338 = select i1 %337, double 0x7FF0000000000000, double %336
  %339 = fcmp olt double %315, -1.075000e+03
  %340 = select i1 %339, double 0.000000e+00, double %338
  %341 = tail call double @llvm.fma.f64(double %340, double %318, double %340)
  %342 = tail call double @llvm.fabs.f64(double %340) #4
  %343 = fcmp oeq double %342, 0x7FF0000000000000
  %344 = select i1 %343, double %340, double %341
  %345 = tail call double @llvm.fabs.f64(double %344)
  %346 = fcmp oeq double %187, 0x7FF0000000000000
  %347 = icmp eq i32 %8, %15
  %348 = select i1 %346, double 0x7FF0000000000000, double %345
  %349 = select i1 %347, double 0.000000e+00, double %348
  %350 = icmp eq i32 %19, 1
  %351 = select i1 %350, double 1.000000e+00, double %349
  %352 = fadd contract double %185, %351
  %353 = fneg contract double %352
  %354 = tail call double @llvm.fabs.f64(double %1)
  %355 = tail call double @llvm.amdgcn.frexp.mant.f64(double %354)
  %356 = fcmp olt double %355, 0x3FE5555555555555
  %357 = zext i1 %356 to i32
  %358 = tail call double @llvm.amdgcn.ldexp.f64(double %355, i32 %357)
  %359 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %354)
  %360 = sub nsw i32 %359, %357
  %361 = fadd double %358, -1.000000e+00
  %362 = fadd double %358, 1.000000e+00
  %363 = fadd double %362, -1.000000e+00
  %364 = fsub double %358, %363
  %365 = tail call double @llvm.amdgcn.rcp.f64(double %362)
  %366 = fneg double %362
  %367 = tail call double @llvm.fma.f64(double %366, double %365, double 1.000000e+00)
  %368 = tail call double @llvm.fma.f64(double %367, double %365, double %365)
  %369 = tail call double @llvm.fma.f64(double %366, double %368, double 1.000000e+00)
  %370 = tail call double @llvm.fma.f64(double %369, double %368, double %368)
  %371 = fmul double %361, %370
  %372 = fmul double %362, %371
  %373 = fneg double %372
  %374 = tail call double @llvm.fma.f64(double %371, double %362, double %373)
  %375 = tail call double @llvm.fma.f64(double %371, double %364, double %374)
  %376 = fadd double %372, %375
  %377 = fsub double %376, %372
  %378 = fsub double %375, %377
  %379 = fsub double %361, %376
  %380 = fsub double %361, %379
  %381 = fsub double %380, %376
  %382 = fsub double %381, %378
  %383 = fadd double %379, %382
  %384 = fmul double %370, %383
  %385 = fadd double %371, %384
  %386 = fsub double %385, %371
  %387 = fsub double %384, %386
  %388 = fmul double %385, %385
  %389 = fneg double %388
  %390 = tail call double @llvm.fma.f64(double %385, double %385, double %389)
  %391 = fmul double %387, 2.000000e+00
  %392 = tail call double @llvm.fma.f64(double %385, double %391, double %390)
  %393 = fadd double %388, %392
  %394 = fsub double %393, %388
  %395 = fsub double %392, %394
  %396 = tail call double @llvm.fma.f64(double %393, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %397 = tail call double @llvm.fma.f64(double %393, double %396, double 0x3FBE25E43ABE935A)
  %398 = tail call double @llvm.fma.f64(double %393, double %397, double 0x3FC110EF47E6C9C2)
  %399 = tail call double @llvm.fma.f64(double %393, double %398, double 0x3FC3B13BCFA74449)
  %400 = tail call double @llvm.fma.f64(double %393, double %399, double 0x3FC745D171BF3C30)
  %401 = tail call double @llvm.fma.f64(double %393, double %400, double 0x3FCC71C71C7792CE)
  %402 = tail call double @llvm.fma.f64(double %393, double %401, double 0x3FD24924924920DA)
  %403 = tail call double @llvm.fma.f64(double %393, double %402, double 0x3FD999999999999C)
  %404 = sitofp i32 %360 to double
  %405 = fmul double %404, 0x3FE62E42FEFA39EF
  %406 = fneg double %405
  %407 = tail call double @llvm.fma.f64(double %404, double 0x3FE62E42FEFA39EF, double %406)
  %408 = tail call double @llvm.fma.f64(double %404, double 0x3C7ABC9E3B39803F, double %407)
  %409 = fadd double %405, %408
  %410 = fsub double %409, %405
  %411 = fsub double %408, %410
  %412 = tail call double @llvm.amdgcn.ldexp.f64(double %385, i32 1)
  %413 = tail call double @llvm.amdgcn.ldexp.f64(double %387, i32 1)
  %414 = fmul double %385, %393
  %415 = fneg double %414
  %416 = tail call double @llvm.fma.f64(double %393, double %385, double %415)
  %417 = tail call double @llvm.fma.f64(double %393, double %387, double %416)
  %418 = tail call double @llvm.fma.f64(double %395, double %385, double %417)
  %419 = fadd double %414, %418
  %420 = fsub double %419, %414
  %421 = fsub double %418, %420
  %422 = fmul double %393, %403
  %423 = fneg double %422
  %424 = tail call double @llvm.fma.f64(double %393, double %403, double %423)
  %425 = tail call double @llvm.fma.f64(double %395, double %403, double %424)
  %426 = fadd double %422, %425
  %427 = fsub double %426, %422
  %428 = fsub double %425, %427
  %429 = fadd double %426, 0x3FE5555555555555
  %430 = fadd double %429, 0xBFE5555555555555
  %431 = fsub double %426, %430
  %432 = fadd double %428, 0x3C8543B0D5DF274D
  %433 = fadd double %432, %431
  %434 = fadd double %429, %433
  %435 = fsub double %434, %429
  %436 = fsub double %433, %435
  %437 = fmul double %419, %434
  %438 = fneg double %437
  %439 = tail call double @llvm.fma.f64(double %419, double %434, double %438)
  %440 = tail call double @llvm.fma.f64(double %419, double %436, double %439)
  %441 = tail call double @llvm.fma.f64(double %421, double %434, double %440)
  %442 = fadd double %437, %441
  %443 = fsub double %442, %437
  %444 = fsub double %441, %443
  %445 = fadd double %412, %442
  %446 = fsub double %445, %412
  %447 = fsub double %442, %446
  %448 = fadd double %413, %444
  %449 = fadd double %448, %447
  %450 = fadd double %445, %449
  %451 = fsub double %450, %445
  %452 = fsub double %449, %451
  %453 = fadd double %409, %450
  %454 = fsub double %453, %409
  %455 = fsub double %453, %454
  %456 = fsub double %409, %455
  %457 = fsub double %450, %454
  %458 = fadd double %457, %456
  %459 = fadd double %411, %452
  %460 = fsub double %459, %411
  %461 = fsub double %459, %460
  %462 = fsub double %411, %461
  %463 = fsub double %452, %460
  %464 = fadd double %463, %462
  %465 = fadd double %459, %458
  %466 = fadd double %453, %465
  %467 = fsub double %466, %453
  %468 = fsub double %465, %467
  %469 = fadd double %464, %468
  %470 = fadd double %466, %469
  %471 = fsub double %470, %466
  %472 = fsub double %469, %471
  %473 = fmul double %470, 2.000000e+00
  %474 = fneg double %473
  %475 = tail call double @llvm.fma.f64(double %470, double 2.000000e+00, double %474)
  %476 = tail call double @llvm.fma.f64(double %472, double 2.000000e+00, double %475)
  %477 = fadd double %473, %476
  %478 = fsub double %477, %473
  %479 = fsub double %476, %478
  %480 = tail call double @llvm.fabs.f64(double %473) #4
  %481 = fcmp oeq double %480, 0x7FF0000000000000
  %482 = select i1 %481, double %473, double %477
  %483 = tail call double @llvm.fabs.f64(double %482) #4
  %484 = fcmp oeq double %483, 0x7FF0000000000000
  %485 = select i1 %484, double 0.000000e+00, double %479
  %486 = fmul double %482, 0x3FF71547652B82FE
  %487 = tail call double @llvm.rint.f64(double %486)
  %488 = fneg double %487
  %489 = tail call double @llvm.fma.f64(double %488, double 0x3FE62E42FEFA39EF, double %482)
  %490 = tail call double @llvm.fma.f64(double %488, double 0x3C7ABC9E3B39803F, double %489)
  %491 = tail call double @llvm.fma.f64(double %490, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %492 = tail call double @llvm.fma.f64(double %490, double %491, double 0x3EC71DEE623FDE64)
  %493 = tail call double @llvm.fma.f64(double %490, double %492, double 0x3EFA01997C89E6B0)
  %494 = tail call double @llvm.fma.f64(double %490, double %493, double 0x3F2A01A014761F6E)
  %495 = tail call double @llvm.fma.f64(double %490, double %494, double 0x3F56C16C1852B7B0)
  %496 = tail call double @llvm.fma.f64(double %490, double %495, double 0x3F81111111122322)
  %497 = tail call double @llvm.fma.f64(double %490, double %496, double 0x3FA55555555502A1)
  %498 = tail call double @llvm.fma.f64(double %490, double %497, double 0x3FC5555555555511)
  %499 = tail call double @llvm.fma.f64(double %490, double %498, double 0x3FE000000000000B)
  %500 = tail call double @llvm.fma.f64(double %490, double %499, double 1.000000e+00)
  %501 = tail call double @llvm.fma.f64(double %490, double %500, double 1.000000e+00)
  %502 = fptosi double %487 to i32
  %503 = tail call double @llvm.amdgcn.ldexp.f64(double %501, i32 %502)
  %504 = fcmp ogt double %482, 1.024000e+03
  %505 = select i1 %504, double 0x7FF0000000000000, double %503
  %506 = fcmp olt double %482, -1.075000e+03
  %507 = select i1 %506, double 0.000000e+00, double %505
  %508 = tail call double @llvm.fma.f64(double %507, double %485, double %507)
  %509 = tail call double @llvm.fabs.f64(double %507) #4
  %510 = fcmp oeq double %509, 0x7FF0000000000000
  %511 = select i1 %510, double %507, double %508
  %512 = tail call double @llvm.fabs.f64(double %511)
  %513 = fcmp oeq double %354, 0x7FF0000000000000
  %514 = fcmp oeq double %1, 0.000000e+00
  %515 = fcmp uno double %1, 0.000000e+00
  %516 = fcmp oeq double %1, 1.000000e+00
  %517 = fmul contract double %512, 2.000000e+00
  %518 = select i1 %513, double 0x7FF0000000000000, double %517
  %519 = select i1 %514, double 0.000000e+00, double %518
  %520 = select i1 %515, double 0x7FF8000000000000, double %519
  %521 = select i1 %516, double 2.000000e+00, double %520
  %522 = fdiv contract double %353, %521
  %523 = fmul double %522, 0x3FF71547652B82FE
  %524 = tail call double @llvm.rint.f64(double %523)
  %525 = fneg double %524
  %526 = tail call double @llvm.fma.f64(double %525, double 0x3FE62E42FEFA39EF, double %522)
  %527 = tail call double @llvm.fma.f64(double %525, double 0x3C7ABC9E3B39803F, double %526)
  %528 = tail call double @llvm.fma.f64(double %527, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %529 = tail call double @llvm.fma.f64(double %527, double %528, double 0x3EC71DEE623FDE64)
  %530 = tail call double @llvm.fma.f64(double %527, double %529, double 0x3EFA01997C89E6B0)
  %531 = tail call double @llvm.fma.f64(double %527, double %530, double 0x3F2A01A014761F6E)
  %532 = tail call double @llvm.fma.f64(double %527, double %531, double 0x3F56C16C1852B7B0)
  %533 = tail call double @llvm.fma.f64(double %527, double %532, double 0x3F81111111122322)
  %534 = tail call double @llvm.fma.f64(double %527, double %533, double 0x3FA55555555502A1)
  %535 = tail call double @llvm.fma.f64(double %527, double %534, double 0x3FC5555555555511)
  %536 = tail call double @llvm.fma.f64(double %527, double %535, double 0x3FE000000000000B)
  %537 = tail call double @llvm.fma.f64(double %527, double %536, double 1.000000e+00)
  %538 = tail call double @llvm.fma.f64(double %527, double %537, double 1.000000e+00)
  %539 = fptosi double %524 to i32
  %540 = tail call double @llvm.amdgcn.ldexp.f64(double %538, i32 %539)
  %541 = fcmp ogt double %522, 1.024000e+03
  %542 = select i1 %541, double 0x7FF0000000000000, double %540
  %543 = fcmp olt double %522, -1.075000e+03
  %544 = select i1 %543, double 0.000000e+00, double %542
  %545 = sext i32 %11 to i64
  %546 = getelementptr inbounds double, double addrspace(1)* %0, i64 %545
  store double %544, double addrspace(1)* %546, align 8, !tbaa !5
  br label %547

547:                                              ; preds = %2, %14
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.y() #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i32 0, i32 1024}
!5 = !{!6, !6, i64 0}
!6 = !{!"double", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
