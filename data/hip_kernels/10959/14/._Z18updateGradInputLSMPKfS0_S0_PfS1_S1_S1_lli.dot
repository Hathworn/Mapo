digraph "CFG for '_Z18updateGradInputLSMPKfS0_S0_PfS1_S1_S1_lli' function" {
	label="CFG for '_Z18updateGradInputLSMPKfS0_S0_PfS1_S1_S1_lli' function";

	Node0x58537f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = zext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = fadd contract float %20, -5.000000e-01\l  %22 = fptosi float %21 to i32\l  %23 = shl nsw i32 %22, 1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %27 = fadd contract float %26, -5.000000e-01\l  %28 = fptosi float %27 to i32\l  %29 = sext i32 %28 to i64\l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %31 = icmp eq i32 %30, 0\l  br i1 %31, label %32, label %36\l|{<s0>T|<s1>F}}"];
	Node0x58537f0:s0 -> Node0x5858220;
	Node0x58537f0:s1 -> Node0x58582b0;
	Node0x5858220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%32:\l32:                                               \l  %33 = mul nsw i64 %18, %8\l  %34 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  %35 = getelementptr inbounds float, float addrspace(1)* %34, i64 %29\l  br label %51\l}"];
	Node0x5858220 -> Node0x5855f00;
	Node0x58582b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %39 = add nuw nsw i32 %23, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %43 = fadd contract float %38, 5.000000e-01\l  %44 = fptosi float %43 to i32\l  %45 = fadd contract float %42, -5.000000e-01\l  %46 = fptosi float %45 to i32\l  %47 = mul nsw i64 %18, %7\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %47\l  %49 = sext i32 %46 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %48, i64 %49\l  br label %51\l}"];
	Node0x58582b0 -> Node0x5855f00;
	Node0x5855f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%51:\l51:                                               \l  %52 = phi float addrspace(1)* [ %34, %32 ], [ %48, %36 ]\l  %53 = phi float addrspace(1)* [ %6, %32 ], [ %4, %36 ]\l  %54 = phi float addrspace(1)* [ %35, %32 ], [ %50, %36 ]\l  %55 = phi i32 [ %9, %32 ], [ %44, %36 ]\l  %56 = getelementptr inbounds float, float addrspace(1)* %53, i64 %18\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = icmp slt i32 %11, %55\l  br i1 %58, label %61, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5855f00:s0 -> Node0x58594d0;
	Node0x5855f00:s1 -> Node0x5859520;
	Node0x5859520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%59:\l59:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %60 = icmp eq i32 %11, 0\l  br i1 %60, label %83, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5859520:s0 -> Node0x58599a0;
	Node0x5859520:s1 -> Node0x58599f0;
	Node0x58594d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ %81, %61 ], [ %11, %51 ]\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %52, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = fsub contract float %65, %57\l  %67 = fmul float %66, 0x3FF7154760000000\l  %68 = tail call float @llvm.rint.f32(float %67)\l  %69 = fcmp ogt float %66, 0x40562E4300000000\l  %70 = fcmp olt float %66, 0xC059D1DA00000000\l  %71 = fneg float %67\l  %72 = tail call float @llvm.fma.f32(float %66, float 0x3FF7154760000000,\l... float %71)\l  %73 = tail call float @llvm.fma.f32(float %66, float 0x3E54AE0BE0000000,\l... float %72)\l  %74 = fsub float %67, %68\l  %75 = fadd float %73, %74\l  %76 = tail call float @llvm.exp2.f32(float %75)\l  %77 = fptosi float %68 to i32\l  %78 = tail call float @llvm.amdgcn.ldexp.f32(float %76, i32 %77)\l  %79 = select i1 %70, float 0.000000e+00, float %78\l  %80 = select i1 %69, float 0x7FF0000000000000, float %79\l  store float %80, float addrspace(1)* %64, align 4, !tbaa !7\l  %81 = add nuw nsw i32 %62, %16\l  %82 = icmp slt i32 %81, %55\l  br i1 %82, label %61, label %59, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x58594d0:s0 -> Node0x58594d0;
	Node0x58594d0:s1 -> Node0x5859520;
	Node0x58599a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%83:\l83:                                               \l  %84 = load float, float addrspace(1)* %54, align 4, !tbaa !7\l  %85 = fadd contract float %84, -1.000000e+00\l  store float %85, float addrspace(1)* %54, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x58599a0 -> Node0x58599f0;
	Node0x58599f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%86:\l86:                                               \l  ret void\l}"];
}
