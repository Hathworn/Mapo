digraph "CFG for '_Z24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPf' function" {
	label="CFG for '_Z24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPf' function";

	Node0x5df82d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = mul nsw i64 %14, %7\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = mul nsw i64 %14, %9\l  %18 = getelementptr inbounds float, float addrspace(1)* %11, i64 %17\l  %19 = getelementptr inbounds float, float addrspace(1)* %6, i64 %14\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = fadd contract float %20, -5.000000e-01\l  %22 = fptosi float %21 to i32\l  %23 = shl nsw i32 %22, 1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %3, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %27 = fadd contract float %26, -5.000000e-01\l  %28 = fptosi float %27 to i32\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %5, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %32 = fadd contract float %31, 5.000000e-01\l  %33 = fptosi float %32 to i32\l  %34 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %36 = fadd contract float %35, 5.000000e-01\l  %37 = fptosi float %36 to i32\l  %38 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %39 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %40 = getelementptr inbounds i8, i8 addrspace(4)* %39, i64 12\l  %41 = bitcast i8 addrspace(4)* %40 to i32 addrspace(4)*\l  %42 = load i32, i32 addrspace(4)* %41, align 4, !tbaa !9\l  %43 = getelementptr i8, i8 addrspace(4)* %39, i64 4\l  %44 = bitcast i8 addrspace(4)* %43 to i16 addrspace(4)*\l  %45 = load i16, i16 addrspace(4)* %44, align 4, !range !18, !invariant.load\l... !8\l  %46 = zext i16 %45 to i32\l  %47 = udiv i32 %42, %46\l  %48 = mul i32 %47, %46\l  %49 = icmp ugt i32 %42, %48\l  %50 = zext i1 %49 to i32\l  %51 = add i32 %47, %50\l  %52 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %53 = icmp slt i32 %38, %37\l  br i1 %53, label %54, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5df82d0:s0 -> Node0x5dfd6f0;
	Node0x5df82d0:s1 -> Node0x5dfd780;
	Node0x5dfd6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%54:\l54:                                               \l  %55 = zext i32 %52 to i64\l  %56 = icmp slt i64 %55, %10\l  %57 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %52\l  %58 = icmp ult i32 %52, 16\l  %59 = shl nuw nsw i32 %52, 3\l  %60 = icmp eq i32 %52, 0\l  %61 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %59\l  %62 = add nuw nsw i32 %59, 1\l  %63 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %62\l  %64 = add nuw nsw i32 %59, 2\l  %65 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %64\l  %66 = add nuw nsw i32 %59, 3\l  %67 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %66\l  %68 = add nuw nsw i32 %59, 4\l  %69 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %68\l  %70 = add nuw nsw i32 %59, 5\l  %71 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %70\l  %72 = add nuw nsw i32 %59, 6\l  %73 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %72\l  %74 = add nuw nsw i32 %59, 7\l  %75 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... %74\l  br label %77\l}"];
	Node0x5dfd6f0 -> Node0x5dfe9f0;
	Node0x5dfd780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%76:\l76:                                               \l  ret void\l}"];
	Node0x5dfe9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%77:\l77:                                               \l  %78 = phi i32 [ %38, %54 ], [ %153, %152 ]\l  %79 = add nsw i32 %78, %33\l  %80 = sext i32 %79 to i64\l  %81 = mul nsw i64 %80, %8\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %56, label %102, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5dfe9f0:s0 -> Node0x5dff130;
	Node0x5dfe9f0:s1 -> Node0x5dff1c0;
	Node0x5dff1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%83:\l83:                                               \l  %84 = phi float [ 0.000000e+00, %77 ], [ %110, %102 ]\l  store float %84, float addrspace(3)* %57, align 4, !tbaa !4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %58, label %85, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5dff1c0:s0 -> Node0x5dff6a0;
	Node0x5dff1c0:s1 -> Node0x5dff6f0;
	Node0x5dff6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%85:\l85:                                               \l  %86 = load float, float addrspace(3)* %61, align 16, !tbaa !4\l  %87 = fadd contract float %86, 0.000000e+00\l  %88 = load float, float addrspace(3)* %63, align 4, !tbaa !4\l  %89 = fadd contract float %87, %88\l  %90 = load float, float addrspace(3)* %65, align 8, !tbaa !4\l  %91 = fadd contract float %89, %90\l  %92 = load float, float addrspace(3)* %67, align 4, !tbaa !4\l  %93 = fadd contract float %91, %92\l  %94 = load float, float addrspace(3)* %69, align 16, !tbaa !4\l  %95 = fadd contract float %93, %94\l  %96 = load float, float addrspace(3)* %71, align 4, !tbaa !4\l  %97 = fadd contract float %95, %96\l  %98 = load float, float addrspace(3)* %73, align 8, !tbaa !4\l  %99 = fadd contract float %97, %98\l  %100 = load float, float addrspace(3)* %75, align 4, !tbaa !4\l  %101 = fadd contract float %99, %100\l  store float %101, float addrspace(3)* %57, align 4, !tbaa !4\l  br label %114\l}"];
	Node0x5dff6a0 -> Node0x5dff6f0;
	Node0x5dff130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i64 [ %112, %102 ], [ %55, %77 ]\l  %104 = phi float [ %110, %102 ], [ 0.000000e+00, %77 ]\l  %105 = getelementptr inbounds float, float addrspace(1)* %16, i64 %103\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !4\l  %107 = getelementptr inbounds float, float addrspace(1)* %82, i64 %103\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !4\l  %109 = fmul contract float %106, %108\l  %110 = fadd contract float %104, %109\l  %111 = add nuw nsw i64 %103, 128\l  %112 = and i64 %111, 4294967295\l  %113 = icmp slt i64 %112, %10\l  br i1 %113, label %102, label %83, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5dff130:s0 -> Node0x5dff130;
	Node0x5dff130:s1 -> Node0x5dff1c0;
	Node0x5dff6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%114:\l114:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %60, label %115, label %152\l|{<s0>T|<s1>F}}"];
	Node0x5dff6f0:s0 -> Node0x5e00a20;
	Node0x5dff6f0:s1 -> Node0x5dfeb00;
	Node0x5e00a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%115:\l115:                                              \l  %116 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 0), align 16, !tbaa !4\l  %117 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 1), align 4, !tbaa !4\l  %118 = fadd contract float %116, %117\l  %119 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 2), align 8, !tbaa !4\l  %120 = fadd contract float %118, %119\l  %121 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 3), align 4, !tbaa !4\l  %122 = fadd contract float %120, %121\l  %123 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 4), align 16, !tbaa !4\l  %124 = fadd contract float %122, %123\l  %125 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 5), align 4, !tbaa !4\l  %126 = fadd contract float %124, %125\l  %127 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 6), align 8, !tbaa !4\l  %128 = fadd contract float %126, %127\l  %129 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 7), align 4, !tbaa !4\l  %130 = fadd contract float %128, %129\l  %131 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 8), align 16, !tbaa !4\l  %132 = fadd contract float %130, %131\l  %133 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 9), align 4, !tbaa !4\l  %134 = fadd contract float %132, %133\l  %135 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 10), align 8, !tbaa !4\l  %136 = fadd contract float %134, %135\l  %137 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 11), align 4, !tbaa !4\l  %138 = fadd contract float %136, %137\l  %139 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 12), align 16, !tbaa !4\l  %140 = fadd contract float %138, %139\l  %141 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 13), align 4, !tbaa !4\l  %142 = fadd contract float %140, %141\l  %143 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 14), align 8, !tbaa !4\l  %144 = fadd contract float %142, %143\l  %145 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ24updateOutputWithTargetMVPKfS0_S0_S0_S0_S0_S0_llllPfE6buffer, i32 0, i32\l... 15), align 4, !tbaa !4\l  %146 = fadd contract float %144, %145\l  %147 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !4\l  %149 = fadd contract float %146, %148\l  %150 = sext i32 %78 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %18, i64 %150\l  store float %149, float addrspace(1)* %151, align 4, !tbaa !4\l  br label %152\l}"];
	Node0x5e00a20 -> Node0x5dfeb00;
	Node0x5dfeb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%152:\l152:                                              \l  %153 = add nsw i32 %51, %78\l  %154 = icmp slt i32 %153, %37\l  br i1 %154, label %77, label %76, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5dfeb00:s0 -> Node0x5dfe9f0;
	Node0x5dfeb00:s1 -> Node0x5dfd780;
}
