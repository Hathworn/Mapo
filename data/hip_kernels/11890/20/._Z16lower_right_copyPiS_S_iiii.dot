digraph "CFG for '_Z16lower_right_copyPiS_S_iiii' function" {
	label="CFG for '_Z16lower_right_copyPiS_S_iiii' function";

	Node0x529fb60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %16 = add i32 %15, %5\l  %17 = add i32 %16, %14\l  %18 = add i32 %17, 1\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %25, %5\l  %27 = add i32 %26, %24\l  %28 = add i32 %27, 1\l  %29 = icmp slt i32 %18, %3\l  %30 = icmp slt i32 %28, %4\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %71\l|{<s0>T|<s1>F}}"];
	Node0x529fb60:s0 -> Node0x52a3810;
	Node0x529fb60:s1 -> Node0x52a38a0;
	Node0x52a3810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = xor i32 %27, -1\l  %34 = add i32 %5, %4\l  %35 = add i32 %34, %33\l  %36 = icmp eq i32 %18, %35\l  br i1 %36, label %37, label %61\l|{<s0>T|<s1>F}}"];
	Node0x52a3810:s0 -> Node0x52a1a40;
	Node0x52a3810:s1 -> Node0x52a3da0;
	Node0x52a1a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %17, %4\l  %39 = add nsw i32 %28, %38\l  %40 = add i32 %38, %27\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %44 = mul nsw i32 %18, %4\l  %45 = add nsw i32 %44, %28\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %49 = add nsw i32 %48, %43\l  %50 = add i32 %44, %27\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %54 = sub nsw i32 %53, %6\l  %55 = sext i32 %39 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = sub nsw i32 %57, %6\l  %59 = tail call i32 @llvm.smax.i32(i32 %49, i32 %54)\l  %60 = tail call i32 @llvm.smax.i32(i32 %59, i32 %58)\l  br label %67\l}"];
	Node0x52a1a40 -> Node0x52a55c0;
	Node0x52a3da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%61:\l61:                                               \l  %62 = mul nsw i32 %18, %4\l  %63 = add nsw i32 %62, %28\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %67\l}"];
	Node0x52a3da0 -> Node0x52a55c0;
	Node0x52a55c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%67:\l67:                                               \l  %68 = phi i64 [ %46, %37 ], [ %64, %61 ]\l  %69 = phi i32 [ %60, %37 ], [ %66, %61 ]\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  store i32 %69, i32 addrspace(1)* %70, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x52a55c0 -> Node0x52a38a0;
	Node0x52a38a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
