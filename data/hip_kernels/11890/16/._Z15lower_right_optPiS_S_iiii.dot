digraph "CFG for '_Z15lower_right_optPiS_S_iiii' function" {
	label="CFG for '_Z15lower_right_optPiS_S_iiii' function";

	Node0x484cae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = add i32 %8, %9\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = add nsw i32 %15, -1\l  %17 = icmp eq i32 %10, %16\l  %18 = add nsw i32 %15, -2\l  %19 = icmp eq i32 %10, %18\l  %20 = select i1 %17, i1 true, i1 %19\l  %21 = icmp eq i32 %10, %15\l  %22 = select i1 %20, i1 true, i1 %21\l  br i1 %22, label %23, label %71\l|{<s0>T|<s1>F}}"];
	Node0x484cae0:s0 -> Node0x484ec40;
	Node0x484cae0:s1 -> Node0x484ecd0;
	Node0x484ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%23:\l23:                                               \l  %24 = mul i32 %8, %15\l  %25 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %9, %28\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %31 = add i32 %30, %5\l  %32 = add i32 %31, %29\l  %33 = add i32 %32, 1\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %35 = add i32 %34, %5\l  %36 = add i32 %35, %24\l  %37 = add i32 %36, 1\l  %38 = icmp slt i32 %33, %3\l  %39 = icmp slt i32 %37, %4\l  %40 = select i1 %38, i1 %39, i1 false\l  br i1 %40, label %41, label %71\l|{<s0>T|<s1>F}}"];
	Node0x484ec40:s0 -> Node0x4850f70;
	Node0x484ec40:s1 -> Node0x484ecd0;
	Node0x4850f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%41:\l41:                                               \l  %42 = xor i32 %36, -1\l  %43 = add i32 %5, %4\l  %44 = add i32 %43, %42\l  %45 = icmp eq i32 %33, %44\l  br i1 %45, label %46, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4850f70:s0 -> Node0x48512f0;
	Node0x4850f70:s1 -> Node0x484ecd0;
	Node0x48512f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%46:\l46:                                               \l  %47 = mul nsw i32 %32, %4\l  %48 = add nsw i32 %47, %37\l  %49 = add i32 %47, %36\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = mul nsw i32 %33, %4\l  %54 = add nsw i32 %53, %37\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = add nsw i32 %57, %52\l  %59 = add i32 %53, %36\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = sub nsw i32 %62, %6\l  %64 = sext i32 %48 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %67 = sub nsw i32 %66, %6\l  %68 = tail call i32 @llvm.smax.i32(i32 %58, i32 %63)\l  %69 = tail call i32 @llvm.smax.i32(i32 %68, i32 %67)\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %55\l  store i32 %69, i32 addrspace(1)* %70, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x48512f0 -> Node0x484ecd0;
	Node0x484ecd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
