digraph "CFG for '_Z15shortcut_kerneliiiiiiiiiiPfiiiS_' function" {
	label="CFG for '_Z15shortcut_kerneliiiiiiiiiiPfiiiS_' function";

	Node0x4b67e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !4\l  %22 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  %32 = add i32 %31, %16\l  %33 = mul i32 %32, %25\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = icmp slt i32 %35, %0\l  br i1 %36, label %37, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4b67e10:s0 -> Node0x4b6b390;
	Node0x4b67e10:s1 -> Node0x4b6b420;
	Node0x4b6b390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%37:\l37:                                               \l  %38 = freeze i32 %35\l  %39 = freeze i32 %1\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %40, %39\l  %42 = sub i32 %38, %41\l  %43 = freeze i32 %2\l  %44 = sdiv i32 %40, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %40, %45\l  %47 = freeze i32 %3\l  %48 = sdiv i32 %44, %47\l  %49 = mul i32 %48, %47\l  %50 = sub i32 %44, %49\l  %51 = srem i32 %48, %6\l  %52 = mul nsw i32 %42, %5\l  %53 = mul nsw i32 %46, %5\l  %54 = mul nsw i32 %51, %13\l  %55 = add nsw i32 %54, %50\l  %56 = mul nsw i32 %55, %12\l  %57 = add nsw i32 %56, %53\l  %58 = mul nsw i32 %57, %11\l  %59 = add nsw i32 %58, %52\l  %60 = mul nsw i32 %42, %4\l  %61 = mul nsw i32 %46, %4\l  %62 = mul nsw i32 %51, %9\l  %63 = add nsw i32 %62, %50\l  %64 = mul nsw i32 %63, %8\l  %65 = add nsw i32 %64, %61\l  %66 = mul nsw i32 %65, %7\l  %67 = add nsw i32 %66, %60\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %10, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %71 = sext i32 %59 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %14, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %74 = fadd contract float %70, %73\l  store float %74, float addrspace(1)* %72, align 4, !tbaa !16\l  br label %75\l}"];
	Node0x4b6b390 -> Node0x4b6b420;
	Node0x4b6b420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
