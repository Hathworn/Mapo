digraph "CFG for '_Z28forward_softmax_layer_kerneliiPffS_' function" {
	label="CFG for '_Z28forward_softmax_layer_kerneliiPffS_' function";

	Node0x5391490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %1\l  br i1 %26, label %27, label %322\l|{<s0>T|<s1>F}}"];
	Node0x5391490:s0 -> Node0x5393d00;
	Node0x5391490:s1 -> Node0x5393d90;
	Node0x5393d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %0, 0\l  br i1 %28, label %29, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5393d00:s0 -> Node0x5393f60;
	Node0x5393d00:s1 -> Node0x5393fb0;
	Node0x5393f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %25, %0\l  %31 = and i32 %0, 7\l  %32 = icmp ult i32 %0, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5393f60:s0 -> Node0x5393470;
	Node0x5393f60:s1 -> Node0x53934c0;
	Node0x53934c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %0, -8\l  br label %64\l}"];
	Node0x53934c0 -> Node0x5394650;
	Node0x5393470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi float [ undef, %29 ], [ %138, %64 ]\l  %37 = phi float [ 0xFFF0000000000000, %29 ], [ %138, %64 ]\l  %38 = phi i32 [ 0, %29 ], [ %139, %64 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %55, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5393470:s0 -> Node0x5393fb0;
	Node0x5393470:s1 -> Node0x53958c0;
	Node0x53958c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ %51, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %52, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %53, %40 ], [ 0, %35 ]\l  %44 = add nsw i32 %42, %30\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %48 = fptosi float %47 to i32\l  %49 = sitofp i32 %48 to float\l  %50 = fcmp contract olt float %41, %49\l  %51 = select contract i1 %50, float %49, float %41\l  %52 = add nuw nsw i32 %42, 1\l  %53 = add i32 %43, 1\l  %54 = icmp eq i32 %53, %31\l  br i1 %54, label %55, label %40, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x53958c0:s0 -> Node0x5393fb0;
	Node0x53958c0:s1 -> Node0x53958c0;
	Node0x5393fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%55:\l55:                                               \l  %56 = phi float [ 0xFFF0000000000000, %27 ], [ %36, %35 ], [ %51, %40 ]\l  br i1 %28, label %57, label %219\l|{<s0>T|<s1>F}}"];
	Node0x5393fb0:s0 -> Node0x5396d00;
	Node0x5393fb0:s1 -> Node0x5396d50;
	Node0x5396d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %25, %0\l  %59 = fdiv contract float %56, %3\l  %60 = and i32 %0, 1\l  %61 = icmp eq i32 %0, 1\l  br i1 %61, label %192, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5396d00:s0 -> Node0x53970d0;
	Node0x5396d00:s1 -> Node0x5397120;
	Node0x5397120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%62:\l62:                                               \l  %63 = and i32 %0, -2\l  br label %142\l}"];
	Node0x5397120 -> Node0x53972f0;
	Node0x5394650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi float [ 0xFFF0000000000000, %33 ], [ %138, %64 ]\l  %66 = phi i32 [ 0, %33 ], [ %139, %64 ]\l  %67 = phi i32 [ 0, %33 ], [ %140, %64 ]\l  %68 = add nsw i32 %66, %30\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %72 = fptosi float %71 to i32\l  %73 = sitofp i32 %72 to float\l  %74 = fcmp contract olt float %65, %73\l  %75 = select contract i1 %74, float %73, float %65\l  %76 = or i32 %66, 1\l  %77 = add nsw i32 %76, %30\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %81 = fptosi float %80 to i32\l  %82 = sitofp i32 %81 to float\l  %83 = fcmp contract olt float %75, %82\l  %84 = select contract i1 %83, float %82, float %75\l  %85 = or i32 %66, 2\l  %86 = add nsw i32 %85, %30\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %90 = fptosi float %89 to i32\l  %91 = sitofp i32 %90 to float\l  %92 = fcmp contract olt float %84, %91\l  %93 = select contract i1 %92, float %91, float %84\l  %94 = or i32 %66, 3\l  %95 = add nsw i32 %94, %30\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %99 = fptosi float %98 to i32\l  %100 = sitofp i32 %99 to float\l  %101 = fcmp contract olt float %93, %100\l  %102 = select contract i1 %101, float %100, float %93\l  %103 = or i32 %66, 4\l  %104 = add nsw i32 %103, %30\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %2, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %108 = fptosi float %107 to i32\l  %109 = sitofp i32 %108 to float\l  %110 = fcmp contract olt float %102, %109\l  %111 = select contract i1 %110, float %109, float %102\l  %112 = or i32 %66, 5\l  %113 = add nsw i32 %112, %30\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %117 = fptosi float %116 to i32\l  %118 = sitofp i32 %117 to float\l  %119 = fcmp contract olt float %111, %118\l  %120 = select contract i1 %119, float %118, float %111\l  %121 = or i32 %66, 6\l  %122 = add nsw i32 %121, %30\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %2, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %126 = fptosi float %125 to i32\l  %127 = sitofp i32 %126 to float\l  %128 = fcmp contract olt float %120, %127\l  %129 = select contract i1 %128, float %127, float %120\l  %130 = or i32 %66, 7\l  %131 = add nsw i32 %130, %30\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %2, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %135 = fptosi float %134 to i32\l  %136 = sitofp i32 %135 to float\l  %137 = fcmp contract olt float %129, %136\l  %138 = select contract i1 %137, float %136, float %129\l  %139 = add nuw nsw i32 %66, 8\l  %140 = add i32 %67, 8\l  %141 = icmp eq i32 %140, %34\l  br i1 %141, label %35, label %64, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5394650:s0 -> Node0x5393470;
	Node0x5394650:s1 -> Node0x5394650;
	Node0x53972f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%142:\l142:                                              \l  %143 = phi float [ 0.000000e+00, %62 ], [ %188, %142 ]\l  %144 = phi i32 [ 0, %62 ], [ %189, %142 ]\l  %145 = phi i32 [ 0, %62 ], [ %190, %142 ]\l  %146 = add nsw i32 %144, %58\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %2, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %150 = fdiv contract float %149, %3\l  %151 = fsub contract float %150, %59\l  %152 = fmul float %151, 0x3FF7154760000000\l  %153 = tail call float @llvm.rint.f32(float %152)\l  %154 = fcmp ogt float %151, 0x40562E4300000000\l  %155 = fcmp olt float %151, 0xC059D1DA00000000\l  %156 = fneg float %152\l  %157 = tail call float @llvm.fma.f32(float %151, float 0x3FF7154760000000,\l... float %156)\l  %158 = tail call float @llvm.fma.f32(float %151, float 0x3E54AE0BE0000000,\l... float %157)\l  %159 = fsub float %152, %153\l  %160 = fadd float %158, %159\l  %161 = tail call float @llvm.exp2.f32(float %160)\l  %162 = fptosi float %153 to i32\l  %163 = tail call float @llvm.amdgcn.ldexp.f32(float %161, i32 %162)\l  %164 = select i1 %155, float 0.000000e+00, float %163\l  %165 = select i1 %154, float 0x7FF0000000000000, float %164\l  %166 = fadd contract float %143, %165\l  %167 = or i32 %144, 1\l  %168 = add nsw i32 %167, %58\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %2, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %172 = fdiv contract float %171, %3\l  %173 = fsub contract float %172, %59\l  %174 = fmul float %173, 0x3FF7154760000000\l  %175 = tail call float @llvm.rint.f32(float %174)\l  %176 = fcmp ogt float %173, 0x40562E4300000000\l  %177 = fcmp olt float %173, 0xC059D1DA00000000\l  %178 = fneg float %174\l  %179 = tail call float @llvm.fma.f32(float %173, float 0x3FF7154760000000,\l... float %178)\l  %180 = tail call float @llvm.fma.f32(float %173, float 0x3E54AE0BE0000000,\l... float %179)\l  %181 = fsub float %174, %175\l  %182 = fadd float %180, %181\l  %183 = tail call float @llvm.exp2.f32(float %182)\l  %184 = fptosi float %175 to i32\l  %185 = tail call float @llvm.amdgcn.ldexp.f32(float %183, i32 %184)\l  %186 = select i1 %177, float 0.000000e+00, float %185\l  %187 = select i1 %176, float 0x7FF0000000000000, float %186\l  %188 = fadd contract float %166, %187\l  %189 = add nuw nsw i32 %144, 2\l  %190 = add i32 %145, 2\l  %191 = icmp eq i32 %190, %63\l  br i1 %191, label %192, label %142, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x53972f0:s0 -> Node0x53970d0;
	Node0x53972f0:s1 -> Node0x53972f0;
	Node0x53970d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%192:\l192:                                              \l  %193 = phi float [ undef, %57 ], [ %188, %142 ]\l  %194 = phi float [ 0.000000e+00, %57 ], [ %188, %142 ]\l  %195 = phi i32 [ 0, %57 ], [ %189, %142 ]\l  %196 = icmp eq i32 %60, 0\l  br i1 %196, label %219, label %197\l|{<s0>T|<s1>F}}"];
	Node0x53970d0:s0 -> Node0x5396d50;
	Node0x53970d0:s1 -> Node0x539d960;
	Node0x539d960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%197:\l197:                                              \l  %198 = add nsw i32 %195, %58\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %2, i64 %199\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %202 = fdiv contract float %201, %3\l  %203 = fsub contract float %202, %59\l  %204 = fmul float %203, 0x3FF7154760000000\l  %205 = tail call float @llvm.rint.f32(float %204)\l  %206 = fcmp ogt float %203, 0x40562E4300000000\l  %207 = fcmp olt float %203, 0xC059D1DA00000000\l  %208 = fneg float %204\l  %209 = tail call float @llvm.fma.f32(float %203, float 0x3FF7154760000000,\l... float %208)\l  %210 = tail call float @llvm.fma.f32(float %203, float 0x3E54AE0BE0000000,\l... float %209)\l  %211 = fsub float %204, %205\l  %212 = fadd float %210, %211\l  %213 = tail call float @llvm.exp2.f32(float %212)\l  %214 = fptosi float %205 to i32\l  %215 = tail call float @llvm.amdgcn.ldexp.f32(float %213, i32 %214)\l  %216 = select i1 %207, float 0.000000e+00, float %215\l  %217 = select i1 %206, float 0x7FF0000000000000, float %216\l  %218 = fadd contract float %194, %217\l  br label %219\l}"];
	Node0x539d960 -> Node0x5396d50;
	Node0x5396d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%219:\l219:                                              \l  %220 = phi float [ 0.000000e+00, %55 ], [ %193, %192 ], [ %218, %197 ]\l  %221 = fcmp contract une float %220, 0.000000e+00\l  br i1 %221, label %222, label %238\l|{<s0>T|<s1>F}}"];
	Node0x5396d50:s0 -> Node0x539ea50;
	Node0x5396d50:s1 -> Node0x539eaa0;
	Node0x539ea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%222:\l222:                                              \l  %223 = fdiv contract float %56, %3\l  %224 = tail call i1 @llvm.amdgcn.class.f32(float %220, i32 144)\l  %225 = select i1 %224, float 0x41F0000000000000, float 1.000000e+00\l  %226 = fmul float %220, %225\l  %227 = tail call float @llvm.log2.f32(float %226)\l  %228 = fmul float %227, 0x3FE62E42E0000000\l  %229 = tail call i1 @llvm.amdgcn.class.f32(float %227, i32 519)\l  %230 = fneg float %228\l  %231 = tail call float @llvm.fma.f32(float %227, float 0x3FE62E42E0000000,\l... float %230)\l  %232 = tail call float @llvm.fma.f32(float %227, float 0x3E6EFA39E0000000,\l... float %231)\l  %233 = fadd float %228, %232\l  %234 = select i1 %229, float %227, float %233\l  %235 = select i1 %224, float 0x40362E4300000000, float 0.000000e+00\l  %236 = fsub float %234, %235\l  %237 = fadd contract float %223, %236\l  br label %240\l}"];
	Node0x539ea50 -> Node0x539fa00;
	Node0x539eaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%238:\l238:                                              \l  %239 = fadd contract float %56, -1.000000e+02\l  br label %240\l}"];
	Node0x539eaa0 -> Node0x539fa00;
	Node0x539fa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%240:\l240:                                              \l  %241 = phi contract float [ %237, %222 ], [ %239, %238 ]\l  br i1 %28, label %242, label %322\l|{<s0>T|<s1>F}}"];
	Node0x539fa00:s0 -> Node0x539fcb0;
	Node0x539fa00:s1 -> Node0x5393d90;
	Node0x539fcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%242:\l242:                                              \l  %243 = mul nsw i32 %25, %0\l  %244 = and i32 %0, 1\l  %245 = icmp eq i32 %0, 1\l  br i1 %245, label %297, label %246\l|{<s0>T|<s1>F}}"];
	Node0x539fcb0:s0 -> Node0x539ff60;
	Node0x539fcb0:s1 -> Node0x539ffb0;
	Node0x539ffb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%246:\l246:                                              \l  %247 = and i32 %0, -2\l  br label %248\l}"];
	Node0x539ffb0 -> Node0x53a0180;
	Node0x53a0180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%248:\l248:                                              \l  %249 = phi i32 [ 0, %246 ], [ %294, %248 ]\l  %250 = phi i32 [ 0, %246 ], [ %295, %248 ]\l  %251 = add nsw i32 %249, %243\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %2, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %255 = fdiv contract float %254, %3\l  %256 = fsub contract float %255, %241\l  %257 = fmul float %256, 0x3FF7154760000000\l  %258 = tail call float @llvm.rint.f32(float %257)\l  %259 = fcmp ogt float %256, 0x40562E4300000000\l  %260 = fcmp olt float %256, 0xC059D1DA00000000\l  %261 = fneg float %257\l  %262 = tail call float @llvm.fma.f32(float %256, float 0x3FF7154760000000,\l... float %261)\l  %263 = tail call float @llvm.fma.f32(float %256, float 0x3E54AE0BE0000000,\l... float %262)\l  %264 = fsub float %257, %258\l  %265 = fadd float %263, %264\l  %266 = tail call float @llvm.exp2.f32(float %265)\l  %267 = fptosi float %258 to i32\l  %268 = tail call float @llvm.amdgcn.ldexp.f32(float %266, i32 %267)\l  %269 = select i1 %260, float 0.000000e+00, float %268\l  %270 = select i1 %259, float 0x7FF0000000000000, float %269\l  %271 = getelementptr inbounds float, float addrspace(1)* %4, i64 %252\l  store float %270, float addrspace(1)* %271, align 4, !tbaa !16\l  %272 = or i32 %249, 1\l  %273 = add nsw i32 %272, %243\l  %274 = sext i32 %273 to i64\l  %275 = getelementptr inbounds float, float addrspace(1)* %2, i64 %274\l  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !16\l  %277 = fdiv contract float %276, %3\l  %278 = fsub contract float %277, %241\l  %279 = fmul float %278, 0x3FF7154760000000\l  %280 = tail call float @llvm.rint.f32(float %279)\l  %281 = fcmp ogt float %278, 0x40562E4300000000\l  %282 = fcmp olt float %278, 0xC059D1DA00000000\l  %283 = fneg float %279\l  %284 = tail call float @llvm.fma.f32(float %278, float 0x3FF7154760000000,\l... float %283)\l  %285 = tail call float @llvm.fma.f32(float %278, float 0x3E54AE0BE0000000,\l... float %284)\l  %286 = fsub float %279, %280\l  %287 = fadd float %285, %286\l  %288 = tail call float @llvm.exp2.f32(float %287)\l  %289 = fptosi float %280 to i32\l  %290 = tail call float @llvm.amdgcn.ldexp.f32(float %288, i32 %289)\l  %291 = select i1 %282, float 0.000000e+00, float %290\l  %292 = select i1 %281, float 0x7FF0000000000000, float %291\l  %293 = getelementptr inbounds float, float addrspace(1)* %4, i64 %274\l  store float %292, float addrspace(1)* %293, align 4, !tbaa !16\l  %294 = add nuw nsw i32 %249, 2\l  %295 = add i32 %250, 2\l  %296 = icmp eq i32 %295, %247\l  br i1 %296, label %297, label %248, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x53a0180:s0 -> Node0x539ff60;
	Node0x53a0180:s1 -> Node0x53a0180;
	Node0x539ff60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%297:\l297:                                              \l  %298 = phi i32 [ 0, %242 ], [ %294, %248 ]\l  %299 = icmp eq i32 %244, 0\l  br i1 %299, label %322, label %300\l|{<s0>T|<s1>F}}"];
	Node0x539ff60:s0 -> Node0x5393d90;
	Node0x539ff60:s1 -> Node0x53a2ed0;
	Node0x53a2ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%300:\l300:                                              \l  %301 = add nsw i32 %298, %243\l  %302 = sext i32 %301 to i64\l  %303 = getelementptr inbounds float, float addrspace(1)* %2, i64 %302\l  %304 = load float, float addrspace(1)* %303, align 4, !tbaa !16\l  %305 = fdiv contract float %304, %3\l  %306 = fsub contract float %305, %241\l  %307 = fmul float %306, 0x3FF7154760000000\l  %308 = tail call float @llvm.rint.f32(float %307)\l  %309 = fcmp ogt float %306, 0x40562E4300000000\l  %310 = fcmp olt float %306, 0xC059D1DA00000000\l  %311 = fneg float %307\l  %312 = tail call float @llvm.fma.f32(float %306, float 0x3FF7154760000000,\l... float %311)\l  %313 = tail call float @llvm.fma.f32(float %306, float 0x3E54AE0BE0000000,\l... float %312)\l  %314 = fsub float %307, %308\l  %315 = fadd float %313, %314\l  %316 = tail call float @llvm.exp2.f32(float %315)\l  %317 = fptosi float %308 to i32\l  %318 = tail call float @llvm.amdgcn.ldexp.f32(float %316, i32 %317)\l  %319 = select i1 %310, float 0.000000e+00, float %318\l  %320 = select i1 %309, float 0x7FF0000000000000, float %319\l  %321 = getelementptr inbounds float, float addrspace(1)* %4, i64 %302\l  store float %320, float addrspace(1)* %321, align 4, !tbaa !16\l  br label %322\l}"];
	Node0x53a2ed0 -> Node0x5393d90;
	Node0x5393d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%322:\l322:                                              \l  ret void\l}"];
}
