digraph "CFG for '_Z9reduceSumPiS_j' function" {
	label="CFG for '_Z9reduceSumPiS_j' function";

	Node0x5f6bf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = mul i32 %4, %2\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %2, %11\l  %13 = mul i32 %12, %6\l  %14 = sext i32 %5 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %16\l  %18 = icmp sgt i32 %12, 1\l  br i1 %18, label %19, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5f6bf00:s0 -> Node0x5f6c0b0;
	Node0x5f6bf00:s1 -> Node0x5f6e190;
	Node0x5f6c0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %21 = add i32 %12, -1\l  %22 = add i32 %12, -2\l  %23 = and i32 %21, 7\l  %24 = icmp ult i32 %22, 7\l  br i1 %24, label %73, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f6c0b0:s0 -> Node0x5f6e710;
	Node0x5f6c0b0:s1 -> Node0x5f6e7a0;
	Node0x5f6e7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%25:\l25:                                               \l  %26 = and i32 %21, -8\l  br label %27\l}"];
	Node0x5f6e7a0 -> Node0x5f6e9a0;
	Node0x5f6e9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi i32 [ %20, %25 ], [ %69, %27 ]\l  %29 = phi i32 [ 1, %25 ], [ %70, %27 ]\l  %30 = phi i32 [ 0, %25 ], [ %71, %27 ]\l  %31 = zext i32 %29 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %34 = add nsw i32 %28, %33\l  store i32 %34, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %35 = add nuw nsw i32 %29, 1\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %39 = add nsw i32 %34, %38\l  store i32 %39, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %40 = add nuw nsw i32 %29, 2\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %44 = add nsw i32 %39, %43\l  store i32 %44, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %45 = add nuw nsw i32 %29, 3\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %49 = add nsw i32 %44, %48\l  store i32 %49, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %50 = add nuw nsw i32 %29, 4\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %54 = add nsw i32 %49, %53\l  store i32 %54, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %55 = add nuw nsw i32 %29, 5\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7\l  %59 = add nsw i32 %54, %58\l  store i32 %59, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %60 = add nuw nsw i32 %29, 6\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !7\l  %64 = add nsw i32 %59, %63\l  store i32 %64, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %65 = add nuw nsw i32 %29, 7\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %69 = add nsw i32 %64, %68\l  store i32 %69, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %70 = add nuw nsw i32 %29, 8\l  %71 = add i32 %30, 8\l  %72 = icmp eq i32 %71, %26\l  br i1 %72, label %73, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f6e9a0:s0 -> Node0x5f6e710;
	Node0x5f6e9a0:s1 -> Node0x5f6e9a0;
	Node0x5f6e710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%73:\l73:                                               \l  %74 = phi i32 [ %20, %19 ], [ %69, %27 ]\l  %75 = phi i32 [ 1, %19 ], [ %70, %27 ]\l  %76 = icmp eq i32 %23, 0\l  br i1 %76, label %88, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5f6e710:s0 -> Node0x5f6e190;
	Node0x5f6e710:s1 -> Node0x5f715c0;
	Node0x5f715c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %84, %77 ], [ %74, %73 ]\l  %79 = phi i32 [ %85, %77 ], [ %75, %73 ]\l  %80 = phi i32 [ %86, %77 ], [ 0, %73 ]\l  %81 = zext i32 %79 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add nsw i32 %78, %83\l  store i32 %84, i32 addrspace(1)* %17, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %79, 1\l  %86 = add i32 %80, 1\l  %87 = icmp eq i32 %86, %23\l  br i1 %87, label %88, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f715c0:s0 -> Node0x5f6e190;
	Node0x5f715c0:s1 -> Node0x5f715c0;
	Node0x5f6e190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%88:\l88:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %89 = icmp eq i32 %6, 0\l  br i1 %89, label %90, label %167\l|{<s0>T|<s1>F}}"];
	Node0x5f6e190:s0 -> Node0x5f721d0;
	Node0x5f6e190:s1 -> Node0x5f72260;
	Node0x5f721d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%90:\l90:                                               \l  %91 = zext i32 %4 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  store i32 0, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %93 = and i32 %11, 7\l  %94 = icmp ult i16 %10, 8\l  br i1 %94, label %151, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5f721d0:s0 -> Node0x5f72660;
	Node0x5f721d0:s1 -> Node0x5f726b0;
	Node0x5f726b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%95:\l95:                                               \l  %96 = and i32 %11, 2040\l  br label %97\l}"];
	Node0x5f726b0 -> Node0x5f72880;
	Node0x5f72880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%97:\l97:                                               \l  %98 = phi i32 [ 0, %95 ], [ %147, %97 ]\l  %99 = phi i32 [ 0, %95 ], [ %148, %97 ]\l  %100 = phi i32 [ 0, %95 ], [ %149, %97 ]\l  %101 = mul nsw i32 %99, %12\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !7\l  %105 = add nsw i32 %98, %104\l  store i32 %105, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %106 = or i32 %99, 1\l  %107 = mul nsw i32 %106, %12\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %108\l  %110 = load i32, i32 addrspace(1)* %109, align 4, !tbaa !7\l  %111 = add nsw i32 %105, %110\l  store i32 %111, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %112 = or i32 %99, 2\l  %113 = mul nsw i32 %112, %12\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !7\l  %117 = add nsw i32 %111, %116\l  store i32 %117, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %118 = or i32 %99, 3\l  %119 = mul nsw i32 %118, %12\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %120\l  %122 = load i32, i32 addrspace(1)* %121, align 4, !tbaa !7\l  %123 = add nsw i32 %117, %122\l  store i32 %123, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %124 = or i32 %99, 4\l  %125 = mul nsw i32 %124, %12\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !7\l  %129 = add nsw i32 %123, %128\l  store i32 %129, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %130 = or i32 %99, 5\l  %131 = mul nsw i32 %130, %12\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %132\l  %134 = load i32, i32 addrspace(1)* %133, align 4, !tbaa !7\l  %135 = add nsw i32 %129, %134\l  store i32 %135, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %136 = or i32 %99, 6\l  %137 = mul nsw i32 %136, %12\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %138\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !7\l  %141 = add nsw i32 %135, %140\l  store i32 %141, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %142 = or i32 %99, 7\l  %143 = mul nsw i32 %142, %12\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %144\l  %146 = load i32, i32 addrspace(1)* %145, align 4, !tbaa !7\l  %147 = add nsw i32 %141, %146\l  store i32 %147, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %148 = add nuw nsw i32 %99, 8\l  %149 = add i32 %100, 8\l  %150 = icmp eq i32 %149, %96\l  br i1 %150, label %151, label %97, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5f72880:s0 -> Node0x5f72660;
	Node0x5f72880:s1 -> Node0x5f72880;
	Node0x5f72660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%151:\l151:                                              \l  %152 = phi i32 [ 0, %90 ], [ %147, %97 ]\l  %153 = phi i32 [ 0, %90 ], [ %148, %97 ]\l  %154 = icmp eq i32 %93, 0\l  br i1 %154, label %167, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5f72660:s0 -> Node0x5f72260;
	Node0x5f72660:s1 -> Node0x5f752d0;
	Node0x5f752d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%155:\l155:                                              \l  %156 = phi i32 [ %163, %155 ], [ %152, %151 ]\l  %157 = phi i32 [ %164, %155 ], [ %153, %151 ]\l  %158 = phi i32 [ %165, %155 ], [ 0, %151 ]\l  %159 = mul nsw i32 %157, %12\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %160\l  %162 = load i32, i32 addrspace(1)* %161, align 4, !tbaa !7\l  %163 = add nsw i32 %156, %162\l  store i32 %163, i32 addrspace(1)* %92, align 4, !tbaa !7\l  %164 = add nuw nsw i32 %157, 1\l  %165 = add i32 %158, 1\l  %166 = icmp eq i32 %165, %93\l  br i1 %166, label %167, label %155, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5f752d0:s0 -> Node0x5f72260;
	Node0x5f752d0:s1 -> Node0x5f752d0;
	Node0x5f72260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%167:\l167:                                              \l  ret void\l}"];
}
