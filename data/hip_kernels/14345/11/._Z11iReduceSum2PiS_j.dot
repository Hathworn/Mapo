digraph "CFG for '_Z11iReduceSum2PiS_j' function" {
	label="CFG for '_Z11iReduceSum2PiS_j' function";

	Node0x4fbdbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = udiv i32 %2, %9\l  %12 = icmp sgt i32 %11, 0\l  br i1 %12, label %13, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4fbdbb0:s0 -> Node0x4fbf9f0;
	Node0x4fbdbb0:s1 -> Node0x4fbfa80;
	Node0x4fbf9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%13:\l13:                                               \l  %14 = mul i32 %11, %4\l  %15 = add nuw nsw i32 %4, %9\l  %16 = add i32 %15, %14\l  %17 = and i32 %11, 7\l  %18 = icmp ult i32 %11, 8\l  br i1 %18, label %75, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4fbf9f0:s0 -> Node0x4fbffa0;
	Node0x4fbf9f0:s1 -> Node0x4fbfff0;
	Node0x4fbfff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%19:\l19:                                               \l  %20 = and i32 %11, -8\l  br label %21\l}"];
	Node0x4fbfff0 -> Node0x4fc01c0;
	Node0x4fc01c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %19 ], [ %72, %21 ]\l  %23 = phi i32 [ 0, %19 ], [ %71, %21 ]\l  %24 = phi i32 [ 0, %19 ], [ %73, %21 ]\l  %25 = add i32 %16, %22\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %29 = add nsw i32 %28, %23\l  %30 = or i32 %22, 1\l  %31 = add i32 %16, %30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = add nsw i32 %34, %29\l  %36 = or i32 %22, 2\l  %37 = add i32 %16, %36\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %41 = add nsw i32 %40, %35\l  %42 = or i32 %22, 3\l  %43 = add i32 %16, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = add nsw i32 %46, %41\l  %48 = or i32 %22, 4\l  %49 = add i32 %16, %48\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %53 = add nsw i32 %52, %47\l  %54 = or i32 %22, 5\l  %55 = add i32 %16, %54\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %59 = add nsw i32 %58, %53\l  %60 = or i32 %22, 6\l  %61 = add i32 %16, %60\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %65 = add nsw i32 %64, %59\l  %66 = or i32 %22, 7\l  %67 = add i32 %16, %66\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %71 = add nsw i32 %70, %65\l  %72 = add nuw nsw i32 %22, 8\l  %73 = add i32 %24, 8\l  %74 = icmp eq i32 %73, %20\l  br i1 %74, label %75, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4fc01c0:s0 -> Node0x4fbffa0;
	Node0x4fc01c0:s1 -> Node0x4fc01c0;
	Node0x4fbffa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%75:\l75:                                               \l  %76 = phi i32 [ undef, %13 ], [ %71, %21 ]\l  %77 = phi i32 [ 0, %13 ], [ %72, %21 ]\l  %78 = phi i32 [ 0, %13 ], [ %71, %21 ]\l  %79 = icmp eq i32 %17, 0\l  br i1 %79, label %92, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4fbffa0:s0 -> Node0x4fbfa80;
	Node0x4fbffa0:s1 -> Node0x4fc3c60;
	Node0x4fc3c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = phi i32 [ %89, %80 ], [ %77, %75 ]\l  %82 = phi i32 [ %88, %80 ], [ %78, %75 ]\l  %83 = phi i32 [ %90, %80 ], [ 0, %75 ]\l  %84 = add i32 %16, %81\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %85\l  %87 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %88 = add nsw i32 %87, %82\l  %89 = add nuw nsw i32 %81, 1\l  %90 = add i32 %83, 1\l  %91 = icmp eq i32 %90, %17\l  br i1 %91, label %92, label %80, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4fc3c60:s0 -> Node0x4fbfa80;
	Node0x4fc3c60:s1 -> Node0x4fc3c60;
	Node0x4fbfa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%92:\l92:                                               \l  %93 = phi i32 [ 0, %3 ], [ %76, %75 ], [ %88, %80 ]\l  %94 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %4\l  store i32 %93, i32 addrspace(3)* %94, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %95 = icmp ugt i16 %8, 1\l  br i1 %95, label %96, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4fbfa80:s0 -> Node0x4fc4ab0;
	Node0x4fbfa80:s1 -> Node0x4fc4b00;
	Node0x4fc4ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi i32 [ %98, %108 ], [ 1, %92 ]\l  %98 = shl i32 %97, 1\l  %99 = mul i32 %98, %4\l  %100 = icmp ult i32 %99, %9\l  br i1 %100, label %101, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4fc4ab0:s0 -> Node0x4fc4f60;
	Node0x4fc4ab0:s1 -> Node0x4fc4c70;
	Node0x4fc4f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%101:\l101:                                              \l  %102 = add i32 %99, %97\l  %103 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %102\l  %104 = load i32, i32 addrspace(3)* %103, align 4, !tbaa !7\l  %105 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %99\l  %106 = load i32, i32 addrspace(3)* %105, align 4, !tbaa !7\l  %107 = add nsw i32 %106, %104\l  store i32 %107, i32 addrspace(3)* %105, align 4, !tbaa !7\l  br label %108\l}"];
	Node0x4fc4f60 -> Node0x4fc4c70;
	Node0x4fc4c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %109 = icmp ult i32 %98, %9\l  br i1 %109, label %96, label %110, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4fc4c70:s0 -> Node0x4fc4ab0;
	Node0x4fc4c70:s1 -> Node0x4fc4b00;
	Node0x4fc4b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%110:\l110:                                              \l  %111 = icmp eq i32 %4, 0\l  br i1 %111, label %112, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4fc4b00:s0 -> Node0x4fc5920;
	Node0x4fc4b00:s1 -> Node0x4fc5970;
	Node0x4fc5920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%112:\l112:                                              \l  %113 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !7\l  %114 = zext i32 %10 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %114\l  store i32 %113, i32 addrspace(1)* %115, align 4, !tbaa !7\l  br label %116\l}"];
	Node0x4fc5920 -> Node0x4fc5970;
	Node0x4fc5970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%116:\l116:                                              \l  ret void\l}"];
}
