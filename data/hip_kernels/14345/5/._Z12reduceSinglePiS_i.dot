digraph "CFG for '_Z12reduceSinglePiS_i' function" {
	label="CFG for '_Z12reduceSinglePiS_i' function";

	Node0x59fdaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %4\l  store i32 0, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %6 = icmp slt i32 %4, %2\l  br i1 %6, label %7, label %23\l|{<s0>T|<s1>F}}"];
	Node0x59fdaf0:s0 -> Node0x59ff200;
	Node0x59fdaf0:s1 -> Node0x59ff290;
	Node0x59ff200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%7:\l7:                                                \l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !9, !invariant.load\l... !10\l  %12 = zext i16 %11 to i32\l  br label %13\l}"];
	Node0x59ff200 -> Node0x59fe880;
	Node0x59fe880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  %14 = phi i32 [ 0, %7 ], [ %19, %13 ]\l  %15 = phi i32 [ %4, %7 ], [ %20, %13 ]\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !5, !amdgpu.noclobber\l... !10\l  %19 = add nsw i32 %14, %18\l  %20 = add i32 %15, %12\l  %21 = icmp slt i32 %20, %2\l  br i1 %21, label %13, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59fe880:s0 -> Node0x59fe880;
	Node0x59fe880:s1 -> Node0x5a00e50;
	Node0x5a00e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%22:\l22:                                               \l  store i32 %19, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %23\l}"];
	Node0x5a00e50 -> Node0x59ff290;
	Node0x59ff290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%23:\l23:                                               \l  %24 = phi i32 [ %19, %22 ], [ 0, %3 ]\l  %25 = icmp ult i32 %4, 512\l  br i1 %25, label %26, label %31\l|{<s0>T|<s1>F}}"];
	Node0x59ff290:s0 -> Node0x5a01290;
	Node0x59ff290:s1 -> Node0x5a012e0;
	Node0x5a01290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%26:\l26:                                               \l  %27 = add nuw nsw i32 %4, 512\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %27\l  %29 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !5\l  %30 = add nsw i32 %24, %29\l  store i32 %30, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %31\l}"];
	Node0x5a01290 -> Node0x5a012e0;
	Node0x5a012e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp ult i32 %4, 256\l  br i1 %32, label %33, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5a012e0:s0 -> Node0x59ffe50;
	Node0x5a012e0:s1 -> Node0x59ffea0;
	Node0x59ffe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%33:\l33:                                               \l  %34 = add nuw nsw i32 %4, 256\l  %35 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %34\l  %36 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !5\l  %37 = load i32, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %38 = add nsw i32 %37, %36\l  store i32 %38, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %39\l}"];
	Node0x59ffe50 -> Node0x59ffea0;
	Node0x59ffea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ult i32 %4, 128\l  br i1 %40, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x59ffea0:s0 -> Node0x5a022d0;
	Node0x59ffea0:s1 -> Node0x5a02320;
	Node0x5a022d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %4, 128\l  %43 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %42\l  %44 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !5\l  %45 = load i32, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %46 = add nsw i32 %45, %44\l  store i32 %46, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %47\l}"];
	Node0x5a022d0 -> Node0x5a02320;
	Node0x5a02320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp ult i32 %4, 64\l  br i1 %48, label %49, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5a02320:s0 -> Node0x5a02a20;
	Node0x5a02320:s1 -> Node0x5a02a70;
	Node0x5a02a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 64\l  %51 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %50\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !5\l  %53 = load i32, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %54 = add nsw i32 %53, %52\l  store i32 %54, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %55\l}"];
	Node0x5a02a20 -> Node0x5a02a70;
	Node0x5a02a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%55:\l55:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = icmp ult i32 %4, 32\l  br i1 %56, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5a02a70:s0 -> Node0x5a03160;
	Node0x5a02a70:s1 -> Node0x5a031b0;
	Node0x5a03160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%57:\l57:                                               \l  %58 = add nuw nsw i32 %4, 32\l  %59 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @parts, i32\l... 0, i32 %58\l  %60 = load i32, i32 addrspace(3)* %59, align 4, !tbaa !5\l  %61 = load i32, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %62 = add nsw i32 %61, %60\l  store i32 %62, i32 addrspace(3)* %5, align 4, !tbaa !5\l  br label %63\l}"];
	Node0x5a03160 -> Node0x5a031b0;
	Node0x5a031b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%63:\l63:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = icmp eq i32 %4, 0\l  br i1 %64, label %65, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5a031b0:s0 -> Node0x5a01a50;
	Node0x5a031b0:s1 -> Node0x5a01aa0;
	Node0x5a01a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%65:\l65:                                               \l  %66 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 0), align 4, !tbaa !5\l  %67 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 1), align 4, !tbaa !5\l  %68 = add nsw i32 %66, %67\l  %69 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 2), align 4, !tbaa !5\l  %70 = add nsw i32 %68, %69\l  %71 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 3), align 4, !tbaa !5\l  %72 = add nsw i32 %70, %71\l  %73 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 4), align 4, !tbaa !5\l  %74 = add nsw i32 %72, %73\l  %75 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 5), align 4, !tbaa !5\l  %76 = add nsw i32 %74, %75\l  %77 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 6), align 4, !tbaa !5\l  %78 = add nsw i32 %76, %77\l  %79 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 7), align 4, !tbaa !5\l  %80 = add nsw i32 %78, %79\l  %81 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 8), align 4, !tbaa !5\l  %82 = add nsw i32 %80, %81\l  %83 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 9), align 4, !tbaa !5\l  %84 = add nsw i32 %82, %83\l  %85 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 10), align 4, !tbaa !5\l  %86 = add nsw i32 %84, %85\l  %87 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 11), align 4, !tbaa !5\l  %88 = add nsw i32 %86, %87\l  %89 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 12), align 4, !tbaa !5\l  %90 = add nsw i32 %88, %89\l  %91 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 13), align 4, !tbaa !5\l  %92 = add nsw i32 %90, %91\l  %93 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 14), align 4, !tbaa !5\l  %94 = add nsw i32 %92, %93\l  %95 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 15), align 4, !tbaa !5\l  %96 = add nsw i32 %94, %95\l  %97 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 16), align 4, !tbaa !5\l  %98 = add nsw i32 %96, %97\l  %99 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 17), align 4, !tbaa !5\l  %100 = add nsw i32 %98, %99\l  %101 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 18), align 4, !tbaa !5\l  %102 = add nsw i32 %100, %101\l  %103 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 19), align 4, !tbaa !5\l  %104 = add nsw i32 %102, %103\l  %105 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 20), align 4, !tbaa !5\l  %106 = add nsw i32 %104, %105\l  %107 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 21), align 4, !tbaa !5\l  %108 = add nsw i32 %106, %107\l  %109 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 22), align 4, !tbaa !5\l  %110 = add nsw i32 %108, %109\l  %111 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 23), align 4, !tbaa !5\l  %112 = add nsw i32 %110, %111\l  %113 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 24), align 4, !tbaa !5\l  %114 = add nsw i32 %112, %113\l  %115 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 25), align 4, !tbaa !5\l  %116 = add nsw i32 %114, %115\l  %117 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 26), align 4, !tbaa !5\l  %118 = add nsw i32 %116, %117\l  %119 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 27), align 4, !tbaa !5\l  %120 = add nsw i32 %118, %119\l  %121 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 28), align 4, !tbaa !5\l  %122 = add nsw i32 %120, %121\l  %123 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 29), align 4, !tbaa !5\l  %124 = add nsw i32 %122, %123\l  %125 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 30), align 4, !tbaa !5\l  %126 = add nsw i32 %124, %125\l  %127 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @parts, i32 0, i32 31), align 4, !tbaa !5\l  %128 = add nsw i32 %126, %127\l  store i32 %128, i32 addrspace(1)* %1, align 4, !tbaa !5\l  br label %129\l}"];
	Node0x5a01a50 -> Node0x5a01aa0;
	Node0x5a01aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%129:\l129:                                              \l  ret void\l}"];
}
