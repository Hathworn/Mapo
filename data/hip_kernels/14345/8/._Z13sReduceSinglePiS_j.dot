digraph "CFG for '_Z13sReduceSinglePiS_j' function" {
	label="CFG for '_Z13sReduceSinglePiS_j' function";

	Node0x50f1a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = add nuw nsw i32 %4, %9\l  %11 = udiv i32 %2, %9\l  %12 = icmp sgt i32 %11, 0\l  br i1 %12, label %13, label %89\l|{<s0>T|<s1>F}}"];
	Node0x50f1a10:s0 -> Node0x50f27a0;
	Node0x50f1a10:s1 -> Node0x50f3790;
	Node0x50f27a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%13:\l13:                                               \l  %14 = and i32 %11, 7\l  %15 = icmp ult i32 %11, 8\l  br i1 %15, label %72, label %16\l|{<s0>T|<s1>F}}"];
	Node0x50f27a0:s0 -> Node0x50f3a50;
	Node0x50f27a0:s1 -> Node0x50f3aa0;
	Node0x50f3aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%16:\l16:                                               \l  %17 = and i32 %11, -8\l  br label %18\l}"];
	Node0x50f3aa0 -> Node0x50f34d0;
	Node0x50f34d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%18:\l18:                                               \l  %19 = phi i32 [ 0, %16 ], [ %68, %18 ]\l  %20 = phi i32 [ 0, %16 ], [ %69, %18 ]\l  %21 = phi i32 [ 0, %16 ], [ %70, %18 ]\l  %22 = add nuw i32 %10, %20\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %26 = add nsw i32 %25, %19\l  %27 = or i32 %20, 1\l  %28 = add nuw i32 %10, %27\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = add nsw i32 %31, %26\l  %33 = or i32 %20, 2\l  %34 = add nuw i32 %10, %33\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %38 = add nsw i32 %37, %32\l  %39 = or i32 %20, 3\l  %40 = add nuw i32 %10, %39\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %44 = add nsw i32 %43, %38\l  %45 = or i32 %20, 4\l  %46 = add nuw i32 %10, %45\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %50 = add nsw i32 %49, %44\l  %51 = or i32 %20, 5\l  %52 = add nuw i32 %10, %51\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %56 = add nsw i32 %55, %50\l  %57 = or i32 %20, 6\l  %58 = add nuw i32 %10, %57\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %62 = add nsw i32 %61, %56\l  %63 = or i32 %20, 7\l  %64 = add nuw i32 %10, %63\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %68 = add nsw i32 %67, %62\l  %69 = add nuw nsw i32 %20, 8\l  %70 = add i32 %21, 8\l  %71 = icmp eq i32 %70, %17\l  br i1 %71, label %72, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x50f34d0:s0 -> Node0x50f3a50;
	Node0x50f34d0:s1 -> Node0x50f34d0;
	Node0x50f3a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%72:\l72:                                               \l  %73 = phi i32 [ undef, %13 ], [ %68, %18 ]\l  %74 = phi i32 [ 0, %13 ], [ %68, %18 ]\l  %75 = phi i32 [ 0, %13 ], [ %69, %18 ]\l  %76 = icmp eq i32 %14, 0\l  br i1 %76, label %89, label %77\l|{<s0>T|<s1>F}}"];
	Node0x50f3a50:s0 -> Node0x50f3790;
	Node0x50f3a50:s1 -> Node0x50f77a0;
	Node0x50f77a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  %78 = phi i32 [ %85, %77 ], [ %74, %72 ]\l  %79 = phi i32 [ %86, %77 ], [ %75, %72 ]\l  %80 = phi i32 [ %87, %77 ], [ 0, %72 ]\l  %81 = add nuw i32 %10, %79\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %85 = add nsw i32 %84, %78\l  %86 = add nuw nsw i32 %79, 1\l  %87 = add i32 %80, 1\l  %88 = icmp eq i32 %87, %14\l  br i1 %88, label %89, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x50f77a0:s0 -> Node0x50f3790;
	Node0x50f77a0:s1 -> Node0x50f77a0;
	Node0x50f3790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%89:\l89:                                               \l  %90 = phi i32 [ 0, %3 ], [ %73, %72 ], [ %85, %77 ]\l  %91 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %4\l  store i32 %90, i32 addrspace(3)* %91, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %92 = icmp ult i16 %8, 2\l  br i1 %92, label %105, label %93\l|{<s0>T|<s1>F}}"];
	Node0x50f3790:s0 -> Node0x50f85a0;
	Node0x50f3790:s1 -> Node0x50f8630;
	Node0x50f8630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi i32 [ %95, %103 ], [ %9, %89 ]\l  %95 = lshr i32 %94, 1\l  %96 = icmp ult i32 %4, %95\l  br i1 %96, label %97, label %103\l|{<s0>T|<s1>F}}"];
	Node0x50f8630:s0 -> Node0x50f8a00;
	Node0x50f8630:s1 -> Node0x50f87a0;
	Node0x50f8a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%97:\l97:                                               \l  %98 = add nuw nsw i32 %95, %4\l  %99 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %98\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !7\l  %101 = load i32, i32 addrspace(3)* %91, align 4, !tbaa !7\l  %102 = add nsw i32 %101, %100\l  store i32 %102, i32 addrspace(3)* %91, align 4, !tbaa !7\l  br label %103\l}"];
	Node0x50f8a00 -> Node0x50f87a0;
	Node0x50f87a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%103:\l103:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %104 = icmp ult i32 %94, 4\l  br i1 %104, label %105, label %93, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x50f87a0:s0 -> Node0x50f85a0;
	Node0x50f87a0:s1 -> Node0x50f8630;
	Node0x50f85a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%105:\l105:                                              \l  %106 = icmp eq i32 %4, 0\l  br i1 %106, label %107, label %109\l|{<s0>T|<s1>F}}"];
	Node0x50f85a0:s0 -> Node0x50f9300;
	Node0x50f85a0:s1 -> Node0x50f9350;
	Node0x50f9300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%107:\l107:                                              \l  %108 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !7\l  store i32 %108, i32 addrspace(1)* %1, align 4, !tbaa !7\l  br label %109\l}"];
	Node0x50f9300 -> Node0x50f9350;
	Node0x50f9350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%109:\l109:                                              \l  ret void\l}"];
}
