digraph "CFG for '_Z6addTenPfi' function" {
	label="CFG for '_Z6addTenPfi' function";

	Node0x4efc870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = getelementptr i8, i8 addrspace(4)* %3, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %3, i64 16\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 8, !tbaa !15\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %21 = getelementptr i8, i8 addrspace(4)* %3, i64 8\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %28 = udiv i32 %11, %8\l  %29 = mul i32 %28, %8\l  %30 = icmp ugt i32 %11, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = udiv i32 %19, %16\l  %34 = mul i32 %33, %16\l  %35 = icmp ugt i32 %19, %34\l  %36 = zext i1 %35 to i32\l  %37 = add i32 %33, %36\l  %38 = mul i32 %37, %20\l  %39 = add i32 %38, %12\l  %40 = mul i32 %39, %32\l  %41 = add i32 %40, %4\l  %42 = mul i32 %41, %24\l  %43 = add i32 %42, %27\l  %44 = mul i32 %43, %16\l  %45 = add i32 %44, %26\l  %46 = mul i32 %45, %8\l  %47 = add i32 %46, %25\l  %48 = icmp slt i32 %47, %1\l  br i1 %48, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4efc870:s0 -> Node0x4f01850;
	Node0x4efc870:s1 -> Node0x4f018e0;
	Node0x4f01850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%49:\l49:                                               \l  %50 = sext i32 %47 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !17,\l... !amdgpu.noclobber !5\l  %53 = fadd contract float %52, 1.000000e+01\l  store float %53, float addrspace(1)* %51, align 4, !tbaa !17\l  br label %54\l}"];
	Node0x4f01850 -> Node0x4f018e0;
	Node0x4f018e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
