digraph "CFG for '_Z16initCurandStatesP12hiprandStateii' function" {
	label="CFG for '_Z16initCurandStatesP12hiprandStateii' function";

	Node0x47dda10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%3:\l  %4 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %5 = alloca %\"struct.rocrand_device::xorwow_engine::xorwow_state\", align 8,\l... addrspace(5)\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp sge i32 %14, %1\l  %16 = icmp slt i32 %14, 0\l  %17 = or i1 %15, %16\l  br i1 %17, label %231, label %18\l|{<s0>T|<s1>F}}"];
	Node0x47dda10:s0 -> Node0x47e2f00;
	Node0x47dda10:s1 -> Node0x47e2f90;
	Node0x47e2f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%18:\l18:                                               \l  %19 = bitcast %\"struct.rocrand_device::xorwow_engine::xorwow_state\"\l... addrspace(5)* %5 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %19)\l  %20 = zext i32 %14 to i64\l  %21 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %20\l  %22 = bitcast %struct.hiprandState addrspace(1)* %21 to i8 addrspace(1)*\l  %23 = tail call i64 @llvm.amdgcn.s.memtime()\l  %24 = add nsw i64 %23, 1234\l  %25 = mul nsw i32 %2, %1\l  %26 = add nsw i32 %14, %25\l  %27 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %27) #5\l  %28 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 0\l  %29 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 1\l  %30 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 2\l  %31 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 3\l  %32 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 4\l  %33 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 0\l  %34 = trunc i64 %24 to i32\l  %35 = xor i32 %34, 746559103\l  %36 = lshr i64 %24, 32\l  %37 = trunc i64 %36 to i32\l  %38 = xor i32 %37, -1607034933\l  %39 = mul i32 %35, 1228688033\l  %40 = mul i32 %38, 2073658381\l  %41 = add i32 %39, 123456789\l  store i32 %41, i32 addrspace(5)* %28, align 8, !tbaa !7\l  %42 = xor i32 %39, 362436069\l  store i32 %42, i32 addrspace(5)* %29, align 4, !tbaa !7\l  %43 = add i32 %40, 521288629\l  store i32 %43, i32 addrspace(5)* %30, align 8, !tbaa !7\l  %44 = xor i32 %40, 88675123\l  store i32 %44, i32 addrspace(5)* %31, align 4, !tbaa !7\l  %45 = add i32 %39, 5783321\l  store i32 %45, i32 addrspace(5)* %32, align 8, !tbaa !7\l  %46 = add i32 %39, 6615241\l  %47 = add i32 %46, %40\l  store i32 %47, i32 addrspace(5)* %33, align 8, !tbaa !11\l  %48 = icmp eq i32 %26, 0\l  br i1 %48, label %228, label %49\l|{<s0>T|<s1>F}}"];
	Node0x47e2f90:s0 -> Node0x47e5770;
	Node0x47e2f90:s1 -> Node0x47e5800;
	Node0x47e5800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%49:\l49:                                               \l  %50 = sext i32 %26 to i64\l  br label %51\l}"];
	Node0x47e5800 -> Node0x47e59b0;
	Node0x47e59b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%51:\l51:                                               \l  %52 = phi i64 [ %61, %59 ], [ %50, %49 ]\l  %53 = phi i32 [ %60, %59 ], [ 0, %49 ]\l  %54 = trunc i64 %52 to i32\l  %55 = and i32 %54, 3\l  %56 = icmp eq i32 %55, 0\l  br i1 %56, label %59, label %57\l|{<s0>T|<s1>F}}"];
	Node0x47e59b0:s0 -> Node0x47e5a70;
	Node0x47e59b0:s1 -> Node0x47e5e60;
	Node0x47e5e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%57:\l57:                                               \l  %58 = zext i32 %53 to i64\l  br label %63\l}"];
	Node0x47e5e60 -> Node0x47e6010;
	Node0x47e5a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%59:\l59:                                               \l  %60 = add nuw nsw i32 %53, 1\l  %61 = lshr i64 %52, 2\l  %62 = icmp ult i64 %52, 4\l  br i1 %62, label %228, label %51, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x47e5a70:s0 -> Node0x47e5770;
	Node0x47e5a70:s1 -> Node0x47e59b0;
	Node0x47e6010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%63:\l63:                                               \l  %64 = phi i32 [ 0, %57 ], [ %226, %225 ]\l  br label %65\l}"];
	Node0x47e6010 -> Node0x47e3f70;
	Node0x47e3f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ 0, %63 ], [ %198, %65 ]\l  %67 = phi i32 [ 0, %63 ], [ %204, %65 ]\l  %68 = phi i32 [ 0, %63 ], [ %210, %65 ]\l  %69 = phi i32 [ 0, %63 ], [ %216, %65 ]\l  %70 = phi i32 [ 0, %63 ], [ %222, %65 ]\l  %71 = phi i32 [ 0, %63 ], [ %223, %65 ]\l  %72 = lshr i32 %71, 5\l  %73 = and i32 %71, 28\l  %74 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %72\l  %75 = load i32, i32 addrspace(5)* %74, align 4, !tbaa !7\l  %76 = shl nuw i32 1, %73\l  %77 = and i32 %76, %75\l  %78 = icmp eq i32 %77, 0\l  %79 = mul nuw nsw i32 %71, 5\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %80\l  %82 = load i32, i32 addrspace(4)* %81, align 16, !tbaa !7\l  %83 = select i1 %78, i32 0, i32 %82\l  %84 = xor i32 %83, %66\l  %85 = or i32 %79, 1\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %86\l  %88 = load i32, i32 addrspace(4)* %87, align 4, !tbaa !7\l  %89 = select i1 %78, i32 0, i32 %88\l  %90 = xor i32 %89, %67\l  %91 = or i32 %79, 2\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %92\l  %94 = load i32, i32 addrspace(4)* %93, align 8, !tbaa !7\l  %95 = select i1 %78, i32 0, i32 %94\l  %96 = xor i32 %95, %68\l  %97 = or i32 %79, 3\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %98\l  %100 = load i32, i32 addrspace(4)* %99, align 4, !tbaa !7\l  %101 = select i1 %78, i32 0, i32 %100\l  %102 = xor i32 %101, %69\l  %103 = add nuw nsw i32 %79, 4\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %104\l  %106 = load i32, i32 addrspace(4)* %105, align 16, !tbaa !7\l  %107 = select i1 %78, i32 0, i32 %106\l  %108 = xor i32 %107, %70\l  %109 = or i32 %71, 1\l  %110 = lshr i32 %71, 5\l  %111 = and i32 %109, 29\l  %112 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %110\l  %113 = load i32, i32 addrspace(5)* %112, align 4, !tbaa !7\l  %114 = shl nuw i32 1, %111\l  %115 = and i32 %114, %113\l  %116 = icmp eq i32 %115, 0\l  %117 = mul nuw nsw i32 %109, 5\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %118\l  %120 = load i32, i32 addrspace(4)* %119, align 4, !tbaa !7\l  %121 = select i1 %116, i32 0, i32 %120\l  %122 = xor i32 %121, %84\l  %123 = add nuw nsw i32 %117, 1\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %124\l  %126 = load i32, i32 addrspace(4)* %125, align 8, !tbaa !7\l  %127 = select i1 %116, i32 0, i32 %126\l  %128 = xor i32 %127, %90\l  %129 = or i32 %117, 2\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %130\l  %132 = load i32, i32 addrspace(4)* %131, align 4, !tbaa !7\l  %133 = select i1 %116, i32 0, i32 %132\l  %134 = xor i32 %133, %96\l  %135 = add nuw nsw i32 %117, 3\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %136\l  %138 = load i32, i32 addrspace(4)* %137, align 16, !tbaa !7\l  %139 = select i1 %116, i32 0, i32 %138\l  %140 = xor i32 %139, %102\l  %141 = add nuw nsw i32 %117, 4\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %142\l  %144 = load i32, i32 addrspace(4)* %143, align 4, !tbaa !7\l  %145 = select i1 %116, i32 0, i32 %144\l  %146 = xor i32 %145, %108\l  %147 = or i32 %71, 2\l  %148 = lshr i32 %71, 5\l  %149 = and i32 %147, 30\l  %150 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %148\l  %151 = load i32, i32 addrspace(5)* %150, align 4, !tbaa !7\l  %152 = shl nuw i32 1, %149\l  %153 = and i32 %152, %151\l  %154 = icmp eq i32 %153, 0\l  %155 = mul nuw nsw i32 %147, 5\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %156\l  %158 = load i32, i32 addrspace(4)* %157, align 8, !tbaa !7\l  %159 = select i1 %154, i32 0, i32 %158\l  %160 = xor i32 %159, %122\l  %161 = or i32 %155, 1\l  %162 = zext i32 %161 to i64\l  %163 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %162\l  %164 = load i32, i32 addrspace(4)* %163, align 4, !tbaa !7\l  %165 = select i1 %154, i32 0, i32 %164\l  %166 = xor i32 %165, %128\l  %167 = add nuw nsw i32 %155, 2\l  %168 = zext i32 %167 to i64\l  %169 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %168\l  %170 = load i32, i32 addrspace(4)* %169, align 16, !tbaa !7\l  %171 = select i1 %154, i32 0, i32 %170\l  %172 = xor i32 %171, %134\l  %173 = add nuw nsw i32 %155, 3\l  %174 = zext i32 %173 to i64\l  %175 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %174\l  %176 = load i32, i32 addrspace(4)* %175, align 4, !tbaa !7\l  %177 = select i1 %154, i32 0, i32 %176\l  %178 = xor i32 %177, %140\l  %179 = add nuw nsw i32 %155, 4\l  %180 = zext i32 %179 to i64\l  %181 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %180\l  %182 = load i32, i32 addrspace(4)* %181, align 8, !tbaa !7\l  %183 = select i1 %154, i32 0, i32 %182\l  %184 = xor i32 %183, %146\l  %185 = or i32 %71, 3\l  %186 = lshr i32 %71, 5\l  %187 = and i32 %185, 31\l  %188 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %186\l  %189 = load i32, i32 addrspace(5)* %188, align 4, !tbaa !7\l  %190 = shl nuw i32 1, %187\l  %191 = and i32 %190, %189\l  %192 = icmp eq i32 %191, 0\l  %193 = mul nuw nsw i32 %185, 5\l  %194 = zext i32 %193 to i64\l  %195 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %194\l  %196 = load i32, i32 addrspace(4)* %195, align 4, !tbaa !7\l  %197 = select i1 %192, i32 0, i32 %196\l  %198 = xor i32 %197, %160\l  %199 = add nuw nsw i32 %193, 1\l  %200 = zext i32 %199 to i64\l  %201 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %200\l  %202 = load i32, i32 addrspace(4)* %201, align 16, !tbaa !7\l  %203 = select i1 %192, i32 0, i32 %202\l  %204 = xor i32 %203, %166\l  %205 = add nuw nsw i32 %193, 2\l  %206 = zext i32 %205 to i64\l  %207 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %206\l  %208 = load i32, i32 addrspace(4)* %207, align 4, !tbaa !7\l  %209 = select i1 %192, i32 0, i32 %208\l  %210 = xor i32 %209, %172\l  %211 = add nuw nsw i32 %193, 3\l  %212 = zext i32 %211 to i64\l  %213 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %212\l  %214 = load i32, i32 addrspace(4)* %213, align 8, !tbaa !7\l  %215 = select i1 %192, i32 0, i32 %214\l  %216 = xor i32 %215, %178\l  %217 = add nuw nsw i32 %193, 4\l  %218 = zext i32 %217 to i64\l  %219 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %58, i64 %218\l  %220 = load i32, i32 addrspace(4)* %219, align 4, !tbaa !7\l  %221 = select i1 %192, i32 0, i32 %220\l  %222 = xor i32 %221, %184\l  %223 = add nuw nsw i32 %71, 4\l  %224 = icmp eq i32 %223, 160\l  br i1 %224, label %225, label %65, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x47e3f70:s0 -> Node0x47e63b0;
	Node0x47e3f70:s1 -> Node0x47e3f70;
	Node0x47e63b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%225:\l225:                                              \l  store i32 %198, i32 addrspace(5)* %28, align 8, !tbaa !7\l  store i32 %204, i32 addrspace(5)* %29, align 4, !tbaa !7\l  store i32 %210, i32 addrspace(5)* %30, align 8, !tbaa !7\l  store i32 %216, i32 addrspace(5)* %31, align 4, !tbaa !7\l  store i32 %222, i32 addrspace(5)* %32, align 8, !tbaa !7\l  %226 = add nuw nsw i32 %64, 1\l  %227 = icmp eq i32 %226, %55\l  br i1 %227, label %59, label %63, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x47e63b0:s0 -> Node0x47e5a70;
	Node0x47e63b0:s1 -> Node0x47e6010;
	Node0x47e5770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%228:\l228:                                              \l  %229 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %229, align 4, !tbaa !20\l  %230 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %230, align 8, !tbaa !21\l  call void @llvm.memcpy.p5i8.p5i8.i64(i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %19, i8 addrspace(5)* noundef align 8 dereferenceable(48)\l... %27, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %27) #5\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %22, i8 addrspace(5)* noundef align 8 dereferenceable(48)\l... %19, i64 48, i1 false)\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %19)\l  br label %231\l}"];
	Node0x47e5770 -> Node0x47e2f00;
	Node0x47e2f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%231:\l231:                                              \l  ret void\l}"];
}
