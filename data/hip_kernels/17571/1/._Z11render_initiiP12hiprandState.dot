digraph "CFG for '_Z11render_initiiP12hiprandState' function" {
	label="CFG for '_Z11render_initiiP12hiprandState' function";

	Node0x6045a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%3:\l  %4 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp slt i32 %13, %0\l  %23 = icmp slt i32 %21, %1\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %221\l|{<s0>T|<s1>F}}"];
	Node0x6045a40:s0 -> Node0x604c8b0;
	Node0x6045a40:s1 -> Node0x604c940;
	Node0x604c8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%25:\l25:                                               \l  %26 = add nsw i32 %21, %13\l  %27 = icmp sgt i32 %26, 99\l  br i1 %27, label %221, label %28\l|{<s0>T|<s1>F}}"];
	Node0x604c8b0:s0 -> Node0x604c940;
	Node0x604c8b0:s1 -> Node0x604cbd0;
	Node0x604cbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%28:\l28:                                               \l  %29 = srem i32 %26, 100\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %2, i64 %30\l  %32 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %32) #4\l  %33 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 0\l  %34 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 1\l  %35 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 2\l  %36 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 3\l  %37 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 4\l  %38 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 0\l  store i32 1575253833, i32 addrspace(5)* %33, align 8, !tbaa !7\l  store i32 1125318609, i32 addrspace(5)* %34, align 4, !tbaa !7\l  store i32 -1452303100, i32 addrspace(5)* %35, align 8, !tbaa !7\l  store i32 -1894485380, i32 addrspace(5)* %36, align 4, !tbaa !7\l  store i32 1457580365, i32 addrspace(5)* %37, align 8, !tbaa !7\l  store i32 -515179444, i32 addrspace(5)* %38, align 8, !tbaa !11\l  %39 = icmp eq i32 %29, 0\l  br i1 %39, label %217, label %40\l|{<s0>T|<s1>F}}"];
	Node0x604cbd0:s0 -> Node0x604e5e0;
	Node0x604cbd0:s1 -> Node0x604e670;
	Node0x604e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%40:\l40:                                               \l  %41 = phi i64 [ %50, %48 ], [ %30, %28 ]\l  %42 = phi i32 [ %49, %48 ], [ 0, %28 ]\l  %43 = trunc i64 %41 to i32\l  %44 = and i32 %43, 3\l  %45 = icmp eq i32 %44, 0\l  br i1 %45, label %48, label %46\l|{<s0>T|<s1>F}}"];
	Node0x604e670:s0 -> Node0x604e7b0;
	Node0x604e670:s1 -> Node0x604eba0;
	Node0x604eba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%46:\l46:                                               \l  %47 = zext i32 %42 to i64\l  br label %52\l}"];
	Node0x604eba0 -> Node0x604ed50;
	Node0x604e7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%48:\l48:                                               \l  %49 = add nuw nsw i32 %42, 1\l  %50 = lshr i64 %41, 2\l  %51 = icmp ult i64 %41, 4\l  br i1 %51, label %217, label %40, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x604e7b0:s0 -> Node0x604e5e0;
	Node0x604e7b0:s1 -> Node0x604e670;
	Node0x604ed50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %46 ], [ %215, %214 ]\l  br label %54\l}"];
	Node0x604ed50 -> Node0x604f230;
	Node0x604f230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %52 ], [ %187, %54 ]\l  %56 = phi i32 [ 0, %52 ], [ %193, %54 ]\l  %57 = phi i32 [ 0, %52 ], [ %199, %54 ]\l  %58 = phi i32 [ 0, %52 ], [ %205, %54 ]\l  %59 = phi i32 [ 0, %52 ], [ %211, %54 ]\l  %60 = phi i32 [ 0, %52 ], [ %212, %54 ]\l  %61 = lshr i32 %60, 5\l  %62 = and i32 %60, 28\l  %63 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %61\l  %64 = load i32, i32 addrspace(5)* %63, align 4, !tbaa !7\l  %65 = shl nuw i32 1, %62\l  %66 = and i32 %65, %64\l  %67 = icmp eq i32 %66, 0\l  %68 = mul nuw nsw i32 %60, 5\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %69\l  %71 = load i32, i32 addrspace(4)* %70, align 16, !tbaa !7\l  %72 = select i1 %67, i32 0, i32 %71\l  %73 = xor i32 %72, %55\l  %74 = or i32 %68, 1\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %75\l  %77 = load i32, i32 addrspace(4)* %76, align 4, !tbaa !7\l  %78 = select i1 %67, i32 0, i32 %77\l  %79 = xor i32 %78, %56\l  %80 = or i32 %68, 2\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %81\l  %83 = load i32, i32 addrspace(4)* %82, align 8, !tbaa !7\l  %84 = select i1 %67, i32 0, i32 %83\l  %85 = xor i32 %84, %57\l  %86 = or i32 %68, 3\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %87\l  %89 = load i32, i32 addrspace(4)* %88, align 4, !tbaa !7\l  %90 = select i1 %67, i32 0, i32 %89\l  %91 = xor i32 %90, %58\l  %92 = add nuw nsw i32 %68, 4\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %93\l  %95 = load i32, i32 addrspace(4)* %94, align 16, !tbaa !7\l  %96 = select i1 %67, i32 0, i32 %95\l  %97 = xor i32 %96, %59\l  %98 = or i32 %60, 1\l  %99 = lshr i32 %60, 5\l  %100 = and i32 %98, 29\l  %101 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %99\l  %102 = load i32, i32 addrspace(5)* %101, align 4, !tbaa !7\l  %103 = shl nuw i32 1, %100\l  %104 = and i32 %103, %102\l  %105 = icmp eq i32 %104, 0\l  %106 = mul nuw nsw i32 %98, 5\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %107\l  %109 = load i32, i32 addrspace(4)* %108, align 4, !tbaa !7\l  %110 = select i1 %105, i32 0, i32 %109\l  %111 = xor i32 %110, %73\l  %112 = add nuw nsw i32 %106, 1\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %113\l  %115 = load i32, i32 addrspace(4)* %114, align 8, !tbaa !7\l  %116 = select i1 %105, i32 0, i32 %115\l  %117 = xor i32 %116, %79\l  %118 = or i32 %106, 2\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %119\l  %121 = load i32, i32 addrspace(4)* %120, align 4, !tbaa !7\l  %122 = select i1 %105, i32 0, i32 %121\l  %123 = xor i32 %122, %85\l  %124 = add nuw nsw i32 %106, 3\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %125\l  %127 = load i32, i32 addrspace(4)* %126, align 16, !tbaa !7\l  %128 = select i1 %105, i32 0, i32 %127\l  %129 = xor i32 %128, %91\l  %130 = add nuw nsw i32 %106, 4\l  %131 = zext i32 %130 to i64\l  %132 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %131\l  %133 = load i32, i32 addrspace(4)* %132, align 4, !tbaa !7\l  %134 = select i1 %105, i32 0, i32 %133\l  %135 = xor i32 %134, %97\l  %136 = or i32 %60, 2\l  %137 = lshr i32 %60, 5\l  %138 = and i32 %136, 30\l  %139 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %137\l  %140 = load i32, i32 addrspace(5)* %139, align 4, !tbaa !7\l  %141 = shl nuw i32 1, %138\l  %142 = and i32 %141, %140\l  %143 = icmp eq i32 %142, 0\l  %144 = mul nuw nsw i32 %136, 5\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %145\l  %147 = load i32, i32 addrspace(4)* %146, align 8, !tbaa !7\l  %148 = select i1 %143, i32 0, i32 %147\l  %149 = xor i32 %148, %111\l  %150 = or i32 %144, 1\l  %151 = zext i32 %150 to i64\l  %152 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %151\l  %153 = load i32, i32 addrspace(4)* %152, align 4, !tbaa !7\l  %154 = select i1 %143, i32 0, i32 %153\l  %155 = xor i32 %154, %117\l  %156 = add nuw nsw i32 %144, 2\l  %157 = zext i32 %156 to i64\l  %158 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %157\l  %159 = load i32, i32 addrspace(4)* %158, align 16, !tbaa !7\l  %160 = select i1 %143, i32 0, i32 %159\l  %161 = xor i32 %160, %123\l  %162 = add nuw nsw i32 %144, 3\l  %163 = zext i32 %162 to i64\l  %164 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %163\l  %165 = load i32, i32 addrspace(4)* %164, align 4, !tbaa !7\l  %166 = select i1 %143, i32 0, i32 %165\l  %167 = xor i32 %166, %129\l  %168 = add nuw nsw i32 %144, 4\l  %169 = zext i32 %168 to i64\l  %170 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %169\l  %171 = load i32, i32 addrspace(4)* %170, align 8, !tbaa !7\l  %172 = select i1 %143, i32 0, i32 %171\l  %173 = xor i32 %172, %135\l  %174 = or i32 %60, 3\l  %175 = lshr i32 %60, 5\l  %176 = and i32 %174, 31\l  %177 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %175\l  %178 = load i32, i32 addrspace(5)* %177, align 4, !tbaa !7\l  %179 = shl nuw i32 1, %176\l  %180 = and i32 %179, %178\l  %181 = icmp eq i32 %180, 0\l  %182 = mul nuw nsw i32 %174, 5\l  %183 = zext i32 %182 to i64\l  %184 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %183\l  %185 = load i32, i32 addrspace(4)* %184, align 4, !tbaa !7\l  %186 = select i1 %181, i32 0, i32 %185\l  %187 = xor i32 %186, %149\l  %188 = add nuw nsw i32 %182, 1\l  %189 = zext i32 %188 to i64\l  %190 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %189\l  %191 = load i32, i32 addrspace(4)* %190, align 16, !tbaa !7\l  %192 = select i1 %181, i32 0, i32 %191\l  %193 = xor i32 %192, %155\l  %194 = add nuw nsw i32 %182, 2\l  %195 = zext i32 %194 to i64\l  %196 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %195\l  %197 = load i32, i32 addrspace(4)* %196, align 4, !tbaa !7\l  %198 = select i1 %181, i32 0, i32 %197\l  %199 = xor i32 %198, %161\l  %200 = add nuw nsw i32 %182, 3\l  %201 = zext i32 %200 to i64\l  %202 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %201\l  %203 = load i32, i32 addrspace(4)* %202, align 8, !tbaa !7\l  %204 = select i1 %181, i32 0, i32 %203\l  %205 = xor i32 %204, %167\l  %206 = add nuw nsw i32 %182, 4\l  %207 = zext i32 %206 to i64\l  %208 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %47, i64 %207\l  %209 = load i32, i32 addrspace(4)* %208, align 4, !tbaa !7\l  %210 = select i1 %181, i32 0, i32 %209\l  %211 = xor i32 %210, %173\l  %212 = add nuw nsw i32 %60, 4\l  %213 = icmp eq i32 %212, 160\l  br i1 %213, label %214, label %54, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x604f230:s0 -> Node0x604f0f0;
	Node0x604f230:s1 -> Node0x604f230;
	Node0x604f0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%214:\l214:                                              \l  store i32 %187, i32 addrspace(5)* %33, align 8, !tbaa !7\l  store i32 %193, i32 addrspace(5)* %34, align 4, !tbaa !7\l  store i32 %199, i32 addrspace(5)* %35, align 8, !tbaa !7\l  store i32 %205, i32 addrspace(5)* %36, align 4, !tbaa !7\l  store i32 %211, i32 addrspace(5)* %37, align 8, !tbaa !7\l  %215 = add nuw nsw i32 %53, 1\l  %216 = icmp eq i32 %215, %44\l  br i1 %216, label %48, label %52, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x604f0f0:s0 -> Node0x604e7b0;
	Node0x604f0f0:s1 -> Node0x604ed50;
	Node0x604e5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%217:\l217:                                              \l  %218 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %218, align 4, !tbaa !20\l  %219 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %219, align 8, !tbaa !21\l  %220 = bitcast %struct.hiprandState addrspace(1)* %31 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %220, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %32, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %32) #4\l  br label %221\l}"];
	Node0x604e5e0 -> Node0x604c940;
	Node0x604c940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%221:\l221:                                              \l  ret void\l}"];
}
