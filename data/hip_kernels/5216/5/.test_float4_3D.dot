digraph "CFG for 'test_float4_3D' function" {
	label="CFG for 'test_float4_3D' function";

	Node0x502c710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = load %struct.__hip_texture*, %struct.__hip_texture* addrspace(1)*\l... getelementptr inbounds (%struct.texture.4, %struct.texture.4 addrspace(1)*\l... @texture_float4_3D, i64 0, i32 0, i32 11), align 8\l  %6 = bitcast %struct.__hip_texture* %5 to i32*\l  %7 = addrspacecast i32* %6 to i32 addrspace(4)*\l  %8 = getelementptr inbounds i32, i32 addrspace(4)* %7, i64 12\l  %9 = getelementptr inbounds i32, i32 addrspace(4)* %7, i64 10\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = uitofp i32 %10 to float\l  %12 = getelementptr inbounds i32, i32 addrspace(4)* %7, i64 2\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = lshr i32 %13, 14\l  %15 = and i32 %14, 16383\l  %16 = add nuw nsw i32 %15, 1\l  %17 = uitofp i32 %16 to float\l  %18 = getelementptr inbounds i32, i32 addrspace(4)* %7, i64 4\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !4\l  %20 = and i32 %19, 8191\l  %21 = add nuw nsw i32 %20, 1\l  %22 = uitofp i32 %21 to float\l  %23 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %24 = and i32 %23, 32768\l  %25 = icmp eq i32 %24, 0\l  %26 = select i1 %25, float %11, float 1.000000e+00\l  %27 = select i1 %25, float %17, float 1.000000e+00\l  %28 = select i1 %25, float %22, float 1.000000e+00\l  %29 = getelementptr inbounds i32, i32 addrspace(4)* %7, i64 14\l  %30 = load i32, i32 addrspace(4)* %29, align 4, !tbaa !4\l  %31 = and i32 %30, 1048576\l  %32 = icmp eq i32 %31, 0\l  %33 = bitcast i32 addrspace(4)* %8 to \<4 x i32\> addrspace(4)*\l  %34 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %33, align 16, !tbaa !8\l  %35 = bitcast %struct.__hip_texture* %5 to \<8 x i32\>*\l  %36 = addrspacecast \<8 x i32\>* %35 to \<8 x i32\> addrspace(4)*\l  %37 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %36, align 32, !tbaa !8\l  %38 = tail call float @llvm.amdgcn.rcp.f32(float %28)\l  %39 = fmul float %28, %3\l  %40 = tail call float @llvm.floor.f32(float %39)\l  %41 = fmul float %38, %40\l  %42 = select i1 %32, float %41, float %3\l  %43 = tail call float @llvm.amdgcn.rcp.f32(float %27)\l  %44 = fmul float %27, %2\l  %45 = tail call float @llvm.floor.f32(float %44)\l  %46 = fmul float %43, %45\l  %47 = select i1 %32, float %46, float %2\l  %48 = tail call float @llvm.amdgcn.rcp.f32(float %26)\l  %49 = fmul float %26, %1\l  %50 = tail call float @llvm.floor.f32(float %49)\l  %51 = fmul float %48, %50\l  %52 = select i1 %32, float %51, float %1\l  %53 = tail call \<4 x float\> @llvm.amdgcn.image.sample.lz.3d.v4f32.f32(i32\l... 15, float %52, float %47, float %42, \<8 x i32\> %37, \<4 x i32\> %34, i1 false,\l... i32 0, i32 0)\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 0, i32 0, i32 0, i32 0\l  store \<4 x float\> %53, \<4 x float\> addrspace(1)* %54, align 16\l  ret void\l}"];
}
