digraph "CFG for '_Z14distanceKernelPffi' function" {
	label="CFG for '_Z14distanceKernelPffi' function";

	Node0x64071a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sitofp i32 %12 to float\l  %14 = add nsw i32 %2, -1\l  %15 = sitofp i32 %14 to float\l  %16 = fdiv contract float %13, %15\l  %17 = fsub contract float %1, %16\l  %18 = fmul contract float %17, %17\l  %19 = fcmp olt float %18, 0x39F0000000000000\l  %20 = select i1 %19, float 0x41F0000000000000, float 1.000000e+00\l  %21 = fmul float %18, %20\l  %22 = tail call float @llvm.sqrt.f32(float %21)\l  %23 = bitcast float %22 to i32\l  %24 = add nsw i32 %23, -1\l  %25 = bitcast i32 %24 to float\l  %26 = add nsw i32 %23, 1\l  %27 = bitcast i32 %26 to float\l  %28 = tail call i1 @llvm.amdgcn.class.f32(float %21, i32 608)\l  %29 = select i1 %19, float 0x3EF0000000000000, float 1.000000e+00\l  %30 = fneg float %27\l  %31 = tail call float @llvm.fma.f32(float %30, float %22, float %21)\l  %32 = fcmp ogt float %31, 0.000000e+00\l  %33 = fneg float %25\l  %34 = tail call float @llvm.fma.f32(float %33, float %22, float %21)\l  %35 = fcmp ole float %34, 0.000000e+00\l  %36 = select i1 %35, float %25, float %22\l  %37 = select i1 %32, float %27, float %36\l  %38 = fmul float %29, %37\l  %39 = select i1 %28, float %21, float %38\l  %40 = sext i32 %12 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %39, float addrspace(1)* %41, align 4, !tbaa !7\l  %42 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %43 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 24\l  %44 = bitcast i8 addrspace(4)* %43 to i64 addrspace(4)*\l  %45 = load i64, i64 addrspace(4)* %44, align 8, !tbaa !11\l  %46 = inttoptr i64 %45 to i8 addrspace(1)*\l  %47 = addrspacecast i8 addrspace(1)* %46 to i8*\l  %48 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %49 = extractelement \<2 x i64\> %48, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([36 x i8], [36 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %50, label %54\l|{<s0>T|<s1>F}}"];
	Node0x64071a0:s0 -> Node0x640c330;
	Node0x64071a0:s1 -> Node0x640cd20;
	Node0x640c330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%50:\l50:                                               \l  %51 = and i64 %49, -225\l  %52 = or i64 %51, 32\l  %53 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %52, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %495\l}"];
	Node0x640c330 -> Node0x640d000;
	Node0x640cd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%54:\l54:                                               \l  %55 = and i64 %49, 2\l  %56 = and i64 %49, -3\l  %57 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %56, i64 0\l  br label %58\l}"];
	Node0x640cd20 -> Node0x640dba0;
	Node0x640dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%58:\l58:                                               \l  %59 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([36 x i8], [36 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([36 x i8], [36 x i8] addrspace(4)*\l... @.str, i64 0, i64 35) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([36 x i8]* addrspacecast ([36 x i8] addrspace(4)* @.str to [36 x i8]*) to\l... i64)), i64 1))), %54 ], [ %492, %484 ]\l  %60 = phi i8 addrspace(4)* [ getelementptr inbounds ([36 x i8], [36 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %54 ], [ %493, %484 ]\l  %61 = phi \<2 x i64\> [ %57, %54 ], [ %491, %484 ]\l  %62 = icmp ugt i64 %59, 56\l  %63 = extractelement \<2 x i64\> %61, i64 0\l  %64 = or i64 %63, %55\l  %65 = insertelement \<2 x i64\> poison, i64 %64, i64 0\l  %66 = select i1 %62, \<2 x i64\> %61, \<2 x i64\> %65\l  %67 = tail call i64 @llvm.umin.i64(i64 %59, i64 56)\l  %68 = trunc i64 %67 to i32\l  %69 = extractelement \<2 x i64\> %66, i64 0\l  %70 = icmp ugt i32 %68, 7\l  br i1 %70, label %73, label %71\l|{<s0>T|<s1>F}}"];
	Node0x640dba0:s0 -> Node0x640ed10;
	Node0x640dba0:s1 -> Node0x640eda0;
	Node0x640eda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%71:\l71:                                               \l  %72 = icmp eq i32 %68, 0\l  br i1 %72, label %126, label %113\l|{<s0>T|<s1>F}}"];
	Node0x640eda0:s0 -> Node0x640efa0;
	Node0x640eda0:s1 -> Node0x640eff0;
	Node0x640ed10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%73:\l73:                                               \l  %74 = load i8, i8 addrspace(4)* %60, align 1, !tbaa !15\l  %75 = zext i8 %74 to i64\l  %76 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 1\l  %77 = load i8, i8 addrspace(4)* %76, align 1, !tbaa !15\l  %78 = zext i8 %77 to i64\l  %79 = shl nuw nsw i64 %78, 8\l  %80 = or i64 %79, %75\l  %81 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 2\l  %82 = load i8, i8 addrspace(4)* %81, align 1, !tbaa !15\l  %83 = zext i8 %82 to i64\l  %84 = shl nuw nsw i64 %83, 16\l  %85 = or i64 %80, %84\l  %86 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 3\l  %87 = load i8, i8 addrspace(4)* %86, align 1, !tbaa !15\l  %88 = zext i8 %87 to i64\l  %89 = shl nuw nsw i64 %88, 24\l  %90 = or i64 %85, %89\l  %91 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 4\l  %92 = load i8, i8 addrspace(4)* %91, align 1, !tbaa !15\l  %93 = zext i8 %92 to i64\l  %94 = shl nuw nsw i64 %93, 32\l  %95 = or i64 %90, %94\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 5\l  %97 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !15\l  %98 = zext i8 %97 to i64\l  %99 = shl nuw nsw i64 %98, 40\l  %100 = or i64 %95, %99\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 6\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !15\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 48\l  %105 = or i64 %100, %104\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 7\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !15\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw i64 %108, 56\l  %110 = or i64 %105, %109\l  %111 = add nsw i32 %68, -8\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 8\l  br label %126\l}"];
	Node0x640ed10 -> Node0x640efa0;
	Node0x640eff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi i32 [ %124, %113 ], [ 0, %71 ]\l  %115 = phi i64 [ %123, %113 ], [ 0, %71 ]\l  %116 = zext i32 %114 to i64\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 %116\l  %118 = load i8, i8 addrspace(4)* %117, align 1, !tbaa !15\l  %119 = zext i8 %118 to i64\l  %120 = shl i32 %114, 3\l  %121 = zext i32 %120 to i64\l  %122 = shl nuw i64 %119, %121\l  %123 = or i64 %122, %115\l  %124 = add nuw nsw i32 %114, 1\l  %125 = icmp eq i32 %124, %68\l  br i1 %125, label %126, label %113, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x640eff0:s0 -> Node0x640efa0;
	Node0x640eff0:s1 -> Node0x640eff0;
	Node0x640efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%126:\l126:                                              \l  %127 = phi i8 addrspace(4)* [ %112, %73 ], [ %60, %71 ], [ %60, %113 ]\l  %128 = phi i32 [ %111, %73 ], [ 0, %71 ], [ 0, %113 ]\l  %129 = phi i64 [ %110, %73 ], [ 0, %71 ], [ %123, %113 ]\l  %130 = icmp ugt i32 %128, 7\l  br i1 %130, label %133, label %131\l|{<s0>T|<s1>F}}"];
	Node0x640efa0:s0 -> Node0x640e700;
	Node0x640efa0:s1 -> Node0x640e750;
	Node0x640e750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%131:\l131:                                              \l  %132 = icmp eq i32 %128, 0\l  br i1 %132, label %186, label %173\l|{<s0>T|<s1>F}}"];
	Node0x640e750:s0 -> Node0x640e920;
	Node0x640e750:s1 -> Node0x6412140;
	Node0x640e700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%133:\l133:                                              \l  %134 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !15\l  %135 = zext i8 %134 to i64\l  %136 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 1\l  %137 = load i8, i8 addrspace(4)* %136, align 1, !tbaa !15\l  %138 = zext i8 %137 to i64\l  %139 = shl nuw nsw i64 %138, 8\l  %140 = or i64 %139, %135\l  %141 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 2\l  %142 = load i8, i8 addrspace(4)* %141, align 1, !tbaa !15\l  %143 = zext i8 %142 to i64\l  %144 = shl nuw nsw i64 %143, 16\l  %145 = or i64 %140, %144\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 3\l  %147 = load i8, i8 addrspace(4)* %146, align 1, !tbaa !15\l  %148 = zext i8 %147 to i64\l  %149 = shl nuw nsw i64 %148, 24\l  %150 = or i64 %145, %149\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 4\l  %152 = load i8, i8 addrspace(4)* %151, align 1, !tbaa !15\l  %153 = zext i8 %152 to i64\l  %154 = shl nuw nsw i64 %153, 32\l  %155 = or i64 %150, %154\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 5\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !15\l  %158 = zext i8 %157 to i64\l  %159 = shl nuw nsw i64 %158, 40\l  %160 = or i64 %155, %159\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 6\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !15\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 48\l  %165 = or i64 %160, %164\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 7\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !15\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw i64 %168, 56\l  %170 = or i64 %165, %169\l  %171 = add nsw i32 %128, -8\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 8\l  br label %186\l}"];
	Node0x640e700 -> Node0x640e920;
	Node0x6412140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%173:\l173:                                              \l  %174 = phi i32 [ %184, %173 ], [ 0, %131 ]\l  %175 = phi i64 [ %183, %173 ], [ 0, %131 ]\l  %176 = zext i32 %174 to i64\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %127, i64 %176\l  %178 = load i8, i8 addrspace(4)* %177, align 1, !tbaa !15\l  %179 = zext i8 %178 to i64\l  %180 = shl i32 %174, 3\l  %181 = zext i32 %180 to i64\l  %182 = shl nuw i64 %179, %181\l  %183 = or i64 %182, %175\l  %184 = add nuw nsw i32 %174, 1\l  %185 = icmp eq i32 %184, %128\l  br i1 %185, label %186, label %173\l|{<s0>T|<s1>F}}"];
	Node0x6412140:s0 -> Node0x640e920;
	Node0x6412140:s1 -> Node0x6412140;
	Node0x640e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%186:\l186:                                              \l  %187 = phi i8 addrspace(4)* [ %172, %133 ], [ %127, %131 ], [ %127, %173 ]\l  %188 = phi i32 [ %171, %133 ], [ 0, %131 ], [ 0, %173 ]\l  %189 = phi i64 [ %170, %133 ], [ 0, %131 ], [ %183, %173 ]\l  %190 = icmp ugt i32 %188, 7\l  br i1 %190, label %193, label %191\l|{<s0>T|<s1>F}}"];
	Node0x640e920:s0 -> Node0x6414190;
	Node0x640e920:s1 -> Node0x64141e0;
	Node0x64141e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%191:\l191:                                              \l  %192 = icmp eq i32 %188, 0\l  br i1 %192, label %246, label %233\l|{<s0>T|<s1>F}}"];
	Node0x64141e0:s0 -> Node0x6414370;
	Node0x64141e0:s1 -> Node0x64143c0;
	Node0x6414190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%193:\l193:                                              \l  %194 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !15\l  %195 = zext i8 %194 to i64\l  %196 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 1\l  %197 = load i8, i8 addrspace(4)* %196, align 1, !tbaa !15\l  %198 = zext i8 %197 to i64\l  %199 = shl nuw nsw i64 %198, 8\l  %200 = or i64 %199, %195\l  %201 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 2\l  %202 = load i8, i8 addrspace(4)* %201, align 1, !tbaa !15\l  %203 = zext i8 %202 to i64\l  %204 = shl nuw nsw i64 %203, 16\l  %205 = or i64 %200, %204\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 3\l  %207 = load i8, i8 addrspace(4)* %206, align 1, !tbaa !15\l  %208 = zext i8 %207 to i64\l  %209 = shl nuw nsw i64 %208, 24\l  %210 = or i64 %205, %209\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 4\l  %212 = load i8, i8 addrspace(4)* %211, align 1, !tbaa !15\l  %213 = zext i8 %212 to i64\l  %214 = shl nuw nsw i64 %213, 32\l  %215 = or i64 %210, %214\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 5\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !15\l  %218 = zext i8 %217 to i64\l  %219 = shl nuw nsw i64 %218, 40\l  %220 = or i64 %215, %219\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 6\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !15\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 48\l  %225 = or i64 %220, %224\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 7\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !15\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw i64 %228, 56\l  %230 = or i64 %225, %229\l  %231 = add nsw i32 %188, -8\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 8\l  br label %246\l}"];
	Node0x6414190 -> Node0x6414370;
	Node0x64143c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%233:\l233:                                              \l  %234 = phi i32 [ %244, %233 ], [ 0, %191 ]\l  %235 = phi i64 [ %243, %233 ], [ 0, %191 ]\l  %236 = zext i32 %234 to i64\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %187, i64 %236\l  %238 = load i8, i8 addrspace(4)* %237, align 1, !tbaa !15\l  %239 = zext i8 %238 to i64\l  %240 = shl i32 %234, 3\l  %241 = zext i32 %240 to i64\l  %242 = shl nuw i64 %239, %241\l  %243 = or i64 %242, %235\l  %244 = add nuw nsw i32 %234, 1\l  %245 = icmp eq i32 %244, %188\l  br i1 %245, label %246, label %233\l|{<s0>T|<s1>F}}"];
	Node0x64143c0:s0 -> Node0x6414370;
	Node0x64143c0:s1 -> Node0x64143c0;
	Node0x6414370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%246:\l246:                                              \l  %247 = phi i8 addrspace(4)* [ %232, %193 ], [ %187, %191 ], [ %187, %233 ]\l  %248 = phi i32 [ %231, %193 ], [ 0, %191 ], [ 0, %233 ]\l  %249 = phi i64 [ %230, %193 ], [ 0, %191 ], [ %243, %233 ]\l  %250 = icmp ugt i32 %248, 7\l  br i1 %250, label %253, label %251\l|{<s0>T|<s1>F}}"];
	Node0x6414370:s0 -> Node0x64163e0;
	Node0x6414370:s1 -> Node0x6416430;
	Node0x6416430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%251:\l251:                                              \l  %252 = icmp eq i32 %248, 0\l  br i1 %252, label %306, label %293\l|{<s0>T|<s1>F}}"];
	Node0x6416430:s0 -> Node0x64165c0;
	Node0x6416430:s1 -> Node0x6416610;
	Node0x64163e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%253:\l253:                                              \l  %254 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !15\l  %255 = zext i8 %254 to i64\l  %256 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 1\l  %257 = load i8, i8 addrspace(4)* %256, align 1, !tbaa !15\l  %258 = zext i8 %257 to i64\l  %259 = shl nuw nsw i64 %258, 8\l  %260 = or i64 %259, %255\l  %261 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 2\l  %262 = load i8, i8 addrspace(4)* %261, align 1, !tbaa !15\l  %263 = zext i8 %262 to i64\l  %264 = shl nuw nsw i64 %263, 16\l  %265 = or i64 %260, %264\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 3\l  %267 = load i8, i8 addrspace(4)* %266, align 1, !tbaa !15\l  %268 = zext i8 %267 to i64\l  %269 = shl nuw nsw i64 %268, 24\l  %270 = or i64 %265, %269\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 4\l  %272 = load i8, i8 addrspace(4)* %271, align 1, !tbaa !15\l  %273 = zext i8 %272 to i64\l  %274 = shl nuw nsw i64 %273, 32\l  %275 = or i64 %270, %274\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 5\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !15\l  %278 = zext i8 %277 to i64\l  %279 = shl nuw nsw i64 %278, 40\l  %280 = or i64 %275, %279\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 6\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !15\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 48\l  %285 = or i64 %280, %284\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 7\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !15\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw i64 %288, 56\l  %290 = or i64 %285, %289\l  %291 = add nsw i32 %248, -8\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 8\l  br label %306\l}"];
	Node0x64163e0 -> Node0x64165c0;
	Node0x6416610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%293:\l293:                                              \l  %294 = phi i32 [ %304, %293 ], [ 0, %251 ]\l  %295 = phi i64 [ %303, %293 ], [ 0, %251 ]\l  %296 = zext i32 %294 to i64\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %247, i64 %296\l  %298 = load i8, i8 addrspace(4)* %297, align 1, !tbaa !15\l  %299 = zext i8 %298 to i64\l  %300 = shl i32 %294, 3\l  %301 = zext i32 %300 to i64\l  %302 = shl nuw i64 %299, %301\l  %303 = or i64 %302, %295\l  %304 = add nuw nsw i32 %294, 1\l  %305 = icmp eq i32 %304, %248\l  br i1 %305, label %306, label %293\l|{<s0>T|<s1>F}}"];
	Node0x6416610:s0 -> Node0x64165c0;
	Node0x6416610:s1 -> Node0x6416610;
	Node0x64165c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%306:\l306:                                              \l  %307 = phi i8 addrspace(4)* [ %292, %253 ], [ %247, %251 ], [ %247, %293 ]\l  %308 = phi i32 [ %291, %253 ], [ 0, %251 ], [ 0, %293 ]\l  %309 = phi i64 [ %290, %253 ], [ 0, %251 ], [ %303, %293 ]\l  %310 = icmp ugt i32 %308, 7\l  br i1 %310, label %313, label %311\l|{<s0>T|<s1>F}}"];
	Node0x64165c0:s0 -> Node0x6418e60;
	Node0x64165c0:s1 -> Node0x6418eb0;
	Node0x6418eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%311:\l311:                                              \l  %312 = icmp eq i32 %308, 0\l  br i1 %312, label %366, label %353\l|{<s0>T|<s1>F}}"];
	Node0x6418eb0:s0 -> Node0x6419040;
	Node0x6418eb0:s1 -> Node0x6419090;
	Node0x6418e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%313:\l313:                                              \l  %314 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !15\l  %315 = zext i8 %314 to i64\l  %316 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 1\l  %317 = load i8, i8 addrspace(4)* %316, align 1, !tbaa !15\l  %318 = zext i8 %317 to i64\l  %319 = shl nuw nsw i64 %318, 8\l  %320 = or i64 %319, %315\l  %321 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 2\l  %322 = load i8, i8 addrspace(4)* %321, align 1, !tbaa !15\l  %323 = zext i8 %322 to i64\l  %324 = shl nuw nsw i64 %323, 16\l  %325 = or i64 %320, %324\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 3\l  %327 = load i8, i8 addrspace(4)* %326, align 1, !tbaa !15\l  %328 = zext i8 %327 to i64\l  %329 = shl nuw nsw i64 %328, 24\l  %330 = or i64 %325, %329\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 4\l  %332 = load i8, i8 addrspace(4)* %331, align 1, !tbaa !15\l  %333 = zext i8 %332 to i64\l  %334 = shl nuw nsw i64 %333, 32\l  %335 = or i64 %330, %334\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 5\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !15\l  %338 = zext i8 %337 to i64\l  %339 = shl nuw nsw i64 %338, 40\l  %340 = or i64 %335, %339\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 6\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !15\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 48\l  %345 = or i64 %340, %344\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 7\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !15\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw i64 %348, 56\l  %350 = or i64 %345, %349\l  %351 = add nsw i32 %308, -8\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 8\l  br label %366\l}"];
	Node0x6418e60 -> Node0x6419040;
	Node0x6419090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%353:\l353:                                              \l  %354 = phi i32 [ %364, %353 ], [ 0, %311 ]\l  %355 = phi i64 [ %363, %353 ], [ 0, %311 ]\l  %356 = zext i32 %354 to i64\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %307, i64 %356\l  %358 = load i8, i8 addrspace(4)* %357, align 1, !tbaa !15\l  %359 = zext i8 %358 to i64\l  %360 = shl i32 %354, 3\l  %361 = zext i32 %360 to i64\l  %362 = shl nuw i64 %359, %361\l  %363 = or i64 %362, %355\l  %364 = add nuw nsw i32 %354, 1\l  %365 = icmp eq i32 %364, %308\l  br i1 %365, label %366, label %353\l|{<s0>T|<s1>F}}"];
	Node0x6419090:s0 -> Node0x6419040;
	Node0x6419090:s1 -> Node0x6419090;
	Node0x6419040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%366:\l366:                                              \l  %367 = phi i8 addrspace(4)* [ %352, %313 ], [ %307, %311 ], [ %307, %353 ]\l  %368 = phi i32 [ %351, %313 ], [ 0, %311 ], [ 0, %353 ]\l  %369 = phi i64 [ %350, %313 ], [ 0, %311 ], [ %363, %353 ]\l  %370 = icmp ugt i32 %368, 7\l  br i1 %370, label %373, label %371\l|{<s0>T|<s1>F}}"];
	Node0x6419040:s0 -> Node0x641bac0;
	Node0x6419040:s1 -> Node0x641bb10;
	Node0x641bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%371:\l371:                                              \l  %372 = icmp eq i32 %368, 0\l  br i1 %372, label %426, label %413\l|{<s0>T|<s1>F}}"];
	Node0x641bb10:s0 -> Node0x641bca0;
	Node0x641bb10:s1 -> Node0x641bcf0;
	Node0x641bac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%373:\l373:                                              \l  %374 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !15\l  %375 = zext i8 %374 to i64\l  %376 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 1\l  %377 = load i8, i8 addrspace(4)* %376, align 1, !tbaa !15\l  %378 = zext i8 %377 to i64\l  %379 = shl nuw nsw i64 %378, 8\l  %380 = or i64 %379, %375\l  %381 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 2\l  %382 = load i8, i8 addrspace(4)* %381, align 1, !tbaa !15\l  %383 = zext i8 %382 to i64\l  %384 = shl nuw nsw i64 %383, 16\l  %385 = or i64 %380, %384\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 3\l  %387 = load i8, i8 addrspace(4)* %386, align 1, !tbaa !15\l  %388 = zext i8 %387 to i64\l  %389 = shl nuw nsw i64 %388, 24\l  %390 = or i64 %385, %389\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 4\l  %392 = load i8, i8 addrspace(4)* %391, align 1, !tbaa !15\l  %393 = zext i8 %392 to i64\l  %394 = shl nuw nsw i64 %393, 32\l  %395 = or i64 %390, %394\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 5\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !15\l  %398 = zext i8 %397 to i64\l  %399 = shl nuw nsw i64 %398, 40\l  %400 = or i64 %395, %399\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 6\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !15\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 48\l  %405 = or i64 %400, %404\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 7\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !15\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw i64 %408, 56\l  %410 = or i64 %405, %409\l  %411 = add nsw i32 %368, -8\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 8\l  br label %426\l}"];
	Node0x641bac0 -> Node0x641bca0;
	Node0x641bcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%413:\l413:                                              \l  %414 = phi i32 [ %424, %413 ], [ 0, %371 ]\l  %415 = phi i64 [ %423, %413 ], [ 0, %371 ]\l  %416 = zext i32 %414 to i64\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %367, i64 %416\l  %418 = load i8, i8 addrspace(4)* %417, align 1, !tbaa !15\l  %419 = zext i8 %418 to i64\l  %420 = shl i32 %414, 3\l  %421 = zext i32 %420 to i64\l  %422 = shl nuw i64 %419, %421\l  %423 = or i64 %422, %415\l  %424 = add nuw nsw i32 %414, 1\l  %425 = icmp eq i32 %424, %368\l  br i1 %425, label %426, label %413\l|{<s0>T|<s1>F}}"];
	Node0x641bcf0:s0 -> Node0x641bca0;
	Node0x641bcf0:s1 -> Node0x641bcf0;
	Node0x641bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%426:\l426:                                              \l  %427 = phi i8 addrspace(4)* [ %412, %373 ], [ %367, %371 ], [ %367, %413 ]\l  %428 = phi i32 [ %411, %373 ], [ 0, %371 ], [ 0, %413 ]\l  %429 = phi i64 [ %410, %373 ], [ 0, %371 ], [ %423, %413 ]\l  %430 = icmp ugt i32 %428, 7\l  br i1 %430, label %433, label %431\l|{<s0>T|<s1>F}}"];
	Node0x641bca0:s0 -> Node0x641e320;
	Node0x641bca0:s1 -> Node0x641e370;
	Node0x641e370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%431:\l431:                                              \l  %432 = icmp eq i32 %428, 0\l  br i1 %432, label %484, label %471\l|{<s0>T|<s1>F}}"];
	Node0x641e370:s0 -> Node0x640e040;
	Node0x641e370:s1 -> Node0x641e500;
	Node0x641e320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%433:\l433:                                              \l  %434 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !15\l  %435 = zext i8 %434 to i64\l  %436 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 1\l  %437 = load i8, i8 addrspace(4)* %436, align 1, !tbaa !15\l  %438 = zext i8 %437 to i64\l  %439 = shl nuw nsw i64 %438, 8\l  %440 = or i64 %439, %435\l  %441 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 2\l  %442 = load i8, i8 addrspace(4)* %441, align 1, !tbaa !15\l  %443 = zext i8 %442 to i64\l  %444 = shl nuw nsw i64 %443, 16\l  %445 = or i64 %440, %444\l  %446 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 3\l  %447 = load i8, i8 addrspace(4)* %446, align 1, !tbaa !15\l  %448 = zext i8 %447 to i64\l  %449 = shl nuw nsw i64 %448, 24\l  %450 = or i64 %445, %449\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 4\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !15\l  %453 = zext i8 %452 to i64\l  %454 = shl nuw nsw i64 %453, 32\l  %455 = or i64 %450, %454\l  %456 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 5\l  %457 = load i8, i8 addrspace(4)* %456, align 1, !tbaa !15\l  %458 = zext i8 %457 to i64\l  %459 = shl nuw nsw i64 %458, 40\l  %460 = or i64 %455, %459\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 6\l  %462 = load i8, i8 addrspace(4)* %461, align 1, !tbaa !15\l  %463 = zext i8 %462 to i64\l  %464 = shl nuw nsw i64 %463, 48\l  %465 = or i64 %460, %464\l  %466 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 7\l  %467 = load i8, i8 addrspace(4)* %466, align 1, !tbaa !15\l  %468 = zext i8 %467 to i64\l  %469 = shl nuw i64 %468, 56\l  %470 = or i64 %465, %469\l  br label %484\l}"];
	Node0x641e320 -> Node0x640e040;
	Node0x641e500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%471:\l471:                                              \l  %472 = phi i32 [ %482, %471 ], [ 0, %431 ]\l  %473 = phi i64 [ %481, %471 ], [ 0, %431 ]\l  %474 = zext i32 %472 to i64\l  %475 = getelementptr inbounds i8, i8 addrspace(4)* %427, i64 %474\l  %476 = load i8, i8 addrspace(4)* %475, align 1, !tbaa !15\l  %477 = zext i8 %476 to i64\l  %478 = shl i32 %472, 3\l  %479 = zext i32 %478 to i64\l  %480 = shl nuw i64 %477, %479\l  %481 = or i64 %480, %473\l  %482 = add nuw nsw i32 %472, 1\l  %483 = icmp eq i32 %482, %428\l  br i1 %483, label %484, label %471\l|{<s0>T|<s1>F}}"];
	Node0x641e500:s0 -> Node0x640e040;
	Node0x641e500:s1 -> Node0x641e500;
	Node0x640e040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%484:\l484:                                              \l  %485 = phi i64 [ %470, %433 ], [ 0, %431 ], [ %481, %471 ]\l  %486 = shl nuw nsw i64 %67, 2\l  %487 = add nuw nsw i64 %486, 28\l  %488 = and i64 %487, 480\l  %489 = and i64 %69, -225\l  %490 = or i64 %489, %488\l  %491 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %490, i64 noundef %129, i64 noundef %189, i64 noundef %249, i64\l... noundef %309, i64 noundef %369, i64 noundef %429, i64 noundef %485) #10\l  %492 = sub i64 %59, %67\l  %493 = getelementptr inbounds i8, i8 addrspace(4)* %60, i64 %67\l  %494 = icmp eq i64 %492, 0\l  br i1 %494, label %495, label %58\l|{<s0>T|<s1>F}}"];
	Node0x640e040:s0 -> Node0x640d000;
	Node0x640e040:s1 -> Node0x640dba0;
	Node0x640d000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%495:\l495:                                              \l  %496 = phi \<2 x i64\> [ %53, %50 ], [ %491, %484 ]\l  %497 = fpext float %1 to double\l  %498 = fpext float %16 to double\l  %499 = fpext float %39 to double\l  %500 = extractelement \<2 x i64\> %496, i64 0\l  %501 = zext i32 %12 to i64\l  %502 = and i64 %500, -225\l  %503 = or i64 %502, 32\l  %504 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %503, i64 noundef %501, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %505 = extractelement \<2 x i64\> %504, i64 0\l  %506 = bitcast double %497 to i64\l  %507 = and i64 %505, -225\l  %508 = or i64 %507, 32\l  %509 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %508, i64 noundef %506, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %510 = extractelement \<2 x i64\> %509, i64 0\l  %511 = bitcast double %498 to i64\l  %512 = and i64 %510, -225\l  %513 = or i64 %512, 32\l  %514 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %513, i64 noundef %511, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %515 = extractelement \<2 x i64\> %514, i64 0\l  %516 = bitcast double %499 to i64\l  %517 = and i64 %515, -227\l  %518 = or i64 %517, 34\l  %519 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %518, i64 noundef %516, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
