digraph "CFG for '_Z15cuda_cmp_kernelmPiS_S_' function" {
	label="CFG for '_Z15cuda_cmp_kernelmPiS_S_' function";

	Node0x4587050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = sext i32 %13 to i64\l  %15 = icmp ult i64 %14, %0\l  br i1 %15, label %16, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4587050:s0 -> Node0x45870a0;
	Node0x4587050:s1 -> Node0x4589050;
	Node0x45870a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%16:\l16:                                               \l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %14\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %14\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %21 = icmp slt i32 %18, %20\l  %22 = zext i1 %21 to i32\l  br label %23\l}"];
	Node0x45870a0 -> Node0x4589050;
	Node0x4589050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %22, %16 ], [ 0, %4 ]\l  %25 = getelementptr i8, i8 addrspace(4)* %7, i64 8\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  %29 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 2, !range !5, !invariant.load !6\l  %32 = zext i16 %31 to i32\l  %33 = mul nuw nsw i32 %28, %11\l  %34 = mul nuw nsw i32 %33, %32\l  %35 = add nuw nsw i32 %34, 63\l  %36 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %24, i32 257,\l... i32 15, i32 15, i1 true)\l  %37 = or i32 %36, %24\l  %38 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %37, i32 258,\l... i32 15, i32 15, i1 true)\l  %39 = or i32 %37, %38\l  %40 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %39, i32 260,\l... i32 15, i32 15, i1 true)\l  %41 = or i32 %39, %40\l  %42 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %41, i32 264,\l... i32 15, i32 15, i1 true)\l  %43 = or i32 %41, %42\l  %44 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %43, i32 304,\l... i32 15, i32 15, i1 true)\l  %45 = tail call i32 @llvm.amdgcn.update.dpp.i32(i32 undef, i32 %44, i32 320,\l... i32 15, i32 15, i1 true)\l  %46 = or i32 %45, %43\l  %47 = tail call i32 @llvm.amdgcn.readlane(i32 %46, i32 32)\l  %48 = tail call i32 @llvm.read_register.i32(metadata !11) #6\l  %49 = and i32 %48, 1\l  %50 = icmp eq i32 %49, 0\l  %51 = select i1 %50, i32 0, i32 %47\l  %52 = tail call i32 @llvm.amdgcn.readlane(i32 %46, i32 0)\l  %53 = or i32 %51, %52\l  %54 = and i32 %35, 2147483584\l  %55 = icmp eq i32 %54, 64\l  br i1 %55, label %77, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4589050:s0 -> Node0x458d060;
	Node0x4589050:s1 -> Node0x458d0b0;
	Node0x458d0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%56:\l56:                                               \l  %57 = tail call i32 @llvm.amdgcn.mbcnt.lo(i32 -1, i32 0)\l  %58 = tail call i32 @llvm.amdgcn.mbcnt.hi(i32 -1, i32 %57)\l  %59 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %60 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %61 = mul nuw nsw i32 %60, %32\l  %62 = add nuw nsw i32 %61, %59\l  %63 = mul nuw nsw i32 %62, %11\l  %64 = add nuw nsw i32 %63, %5\l  %65 = lshr i32 %64, 6\l  %66 = icmp eq i32 %58, 0\l  %67 = or i32 %58, %65\l  %68 = icmp eq i32 %67, 0\l  br i1 %68, label %69, label %70\l|{<s0>T|<s1>F}}"];
	Node0x458d0b0:s0 -> Node0x458b0c0;
	Node0x458d0b0:s1 -> Node0x458e800;
	Node0x458b0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%69:\l69:                                               \l  store atomic i32 %53, i32 addrspace(3)* bitcast ([32 x i64] addrspace(3)*\l... @__scratch_lds to i32 addrspace(3)*) syncscope(\"workgroup-one-as\") monotonic,\l... align 8\l  br label %70\l}"];
	Node0x458b0c0 -> Node0x458e800;
	Node0x458e800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp ugt i32 %64, 63\l  %72 = and i1 %71, %66\l  br i1 %72, label %73, label %75\l|{<s0>T|<s1>F}}"];
	Node0x458e800:s0 -> Node0x458f0b0;
	Node0x458e800:s1 -> Node0x458f100;
	Node0x458f0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%73:\l73:                                               \l  %74 = atomicrmw or i32 addrspace(3)* bitcast ([32 x i64] addrspace(3)*\l... @__scratch_lds to i32 addrspace(3)*), i32 %53 syncscope(\"workgroup-one-as\")\l... monotonic, align 4\l  br label %75\l}"];
	Node0x458f0b0 -> Node0x458f100;
	Node0x458f100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%75:\l75:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %76 = load atomic i32, i32 addrspace(3)* bitcast ([32 x i64] addrspace(3)*\l... @__scratch_lds to i32 addrspace(3)*) syncscope(\"workgroup-one-as\") monotonic,\l... align 8\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %77\l}"];
	Node0x458f100 -> Node0x458d060;
	Node0x458d060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %76, %75 ], [ %53, %23 ]\l  %79 = icmp eq i32 %78, 0\l  br i1 %79, label %81, label %80\l|{<s0>T|<s1>F}}"];
	Node0x458d060:s0 -> Node0x458f8d0;
	Node0x458d060:s1 -> Node0x458f920;
	Node0x458f920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e1675170",label="{%80:\l80:                                               \l  store i32 1, i32 addrspace(1)* %3, align 4, !tbaa !7\l  br label %81\l}"];
	Node0x458f920 -> Node0x458f8d0;
	Node0x458f8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  ret void\l}"];
}
