digraph "CFG for '_Z17convn_full_kernelPfS_S_iiii' function" {
	label="CFG for '_Z17convn_full_kernelPfS_S_iiii' function";

	Node0x4c2b170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = add nsw i32 %3, -1\l  %26 = add i32 %25, %5\l  %27 = icmp slt i32 %16, %26\l  br i1 %27, label %28, label %175\l|{<s0>T|<s1>F}}"];
	Node0x4c2b170:s0 -> Node0x4c2eba0;
	Node0x4c2b170:s1 -> Node0x4c2ec30;
	Node0x4c2eba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%28:\l28:                                               \l  %29 = add nsw i32 %4, -1\l  %30 = add i32 %29, %6\l  %31 = icmp slt i32 %24, %30\l  br i1 %31, label %32, label %175\l|{<s0>T|<s1>F}}"];
	Node0x4c2eba0:s0 -> Node0x4c2ef20;
	Node0x4c2eba0:s1 -> Node0x4c2ec30;
	Node0x4c2ef20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %6, 0\l  br i1 %33, label %34, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4c2ef20:s0 -> Node0x4c2d050;
	Node0x4c2ef20:s1 -> Node0x4c2f230;
	Node0x4c2d050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%34:\l34:                                               \l  %35 = icmp sgt i32 %5, 0\l  %36 = and i32 %5, 3\l  %37 = icmp ult i32 %5, 4\l  %38 = and i32 %5, -4\l  %39 = icmp eq i32 %36, 0\l  br label %40\l}"];
	Node0x4c2d050 -> Node0x4c2f6d0;
	Node0x4c2f6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %34 ], [ %86, %85 ]\l  %42 = phi i32 [ 0, %34 ], [ %87, %85 ]\l  br i1 %35, label %43, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4c2f6d0:s0 -> Node0x4c30470;
	Node0x4c2f6d0:s1 -> Node0x4c30210;
	Node0x4c30470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%43:\l43:                                               \l  %44 = sub nsw i32 %24, %42\l  %45 = icmp slt i32 %44, 0\l  %46 = icmp slt i32 %44, %4\l  %47 = mul nsw i32 %42, %5\l  %48 = mul nsw i32 %44, %3\l  br i1 %37, label %55, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4c30470:s0 -> Node0x4c30880;
	Node0x4c30470:s1 -> Node0x4c308d0;
	Node0x4c2f230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%49:\l49:                                               \l  %50 = phi float [ 0.000000e+00, %32 ], [ %86, %85 ]\l  %51 = mul nsw i32 %24, %26\l  %52 = add nsw i32 %51, %16\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %50, float addrspace(1)* %54, align 4, !tbaa !7\l  br label %175\l}"];
	Node0x4c2f230 -> Node0x4c2ec30;
	Node0x4c30880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%55:\l55:                                               \l  %56 = phi float [ undef, %43 ], [ %171, %170 ]\l  %57 = phi float [ %41, %43 ], [ %171, %170 ]\l  %58 = phi i32 [ 0, %43 ], [ %172, %170 ]\l  br i1 %39, label %85, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4c30880:s0 -> Node0x4c30210;
	Node0x4c30880:s1 -> Node0x4c31640;
	Node0x4c31640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %81, %80 ], [ %57, %55 ]\l  %61 = phi i32 [ %82, %80 ], [ %58, %55 ]\l  %62 = phi i32 [ %83, %80 ], [ 0, %55 ]\l  %63 = sub nsw i32 %16, %61\l  br i1 %45, label %80, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4c31640:s0 -> Node0x4c317b0;
	Node0x4c31640:s1 -> Node0x4c31bc0;
	Node0x4c31bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%64:\l64:                                               \l  %65 = icmp sgt i32 %63, -1\l  %66 = select i1 %46, i1 %65, i1 false\l  %67 = icmp slt i32 %63, %3\l  %68 = select i1 %66, i1 %67, i1 false\l  br i1 %68, label %69, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4c31bc0:s0 -> Node0x4c321c0;
	Node0x4c31bc0:s1 -> Node0x4c317b0;
	Node0x4c321c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%69:\l69:                                               \l  %70 = add nsw i32 %61, %47\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = add nsw i32 %63, %48\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fmul contract float %73, %77\l  %79 = fadd contract float %60, %78\l  br label %80\l}"];
	Node0x4c321c0 -> Node0x4c317b0;
	Node0x4c317b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %69 ], [ %60, %64 ], [ %60, %59 ]\l  %82 = add nuw nsw i32 %61, 1\l  %83 = add i32 %62, 1\l  %84 = icmp eq i32 %83, %36\l  br i1 %84, label %85, label %59, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c317b0:s0 -> Node0x4c30210;
	Node0x4c317b0:s1 -> Node0x4c31640;
	Node0x4c30210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%85:\l85:                                               \l  %86 = phi float [ %41, %40 ], [ %56, %55 ], [ %81, %80 ]\l  %87 = add nuw nsw i32 %42, 1\l  %88 = icmp eq i32 %87, %6\l  br i1 %88, label %49, label %40, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c30210:s0 -> Node0x4c2f230;
	Node0x4c30210:s1 -> Node0x4c2f6d0;
	Node0x4c308d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%89:\l89:                                               \l  %90 = phi float [ %171, %170 ], [ %41, %43 ]\l  %91 = phi i32 [ %172, %170 ], [ 0, %43 ]\l  %92 = phi i32 [ %173, %170 ], [ 0, %43 ]\l  %93 = sub nsw i32 %16, %91\l  br i1 %45, label %110, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4c308d0:s0 -> Node0x4c338a0;
	Node0x4c308d0:s1 -> Node0x4c338f0;
	Node0x4c338f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%94:\l94:                                               \l  %95 = icmp sgt i32 %93, -1\l  %96 = select i1 %46, i1 %95, i1 false\l  %97 = icmp slt i32 %93, %3\l  %98 = select i1 %96, i1 %97, i1 false\l  br i1 %98, label %99, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4c338f0:s0 -> Node0x4c33cb0;
	Node0x4c338f0:s1 -> Node0x4c338a0;
	Node0x4c33cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%99:\l99:                                               \l  %100 = add nsw i32 %91, %47\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = add nsw i32 %93, %48\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = fmul contract float %103, %107\l  %109 = fadd contract float %90, %108\l  br label %110\l}"];
	Node0x4c33cb0 -> Node0x4c338a0;
	Node0x4c338a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = phi float [ %109, %99 ], [ %90, %94 ], [ %90, %89 ]\l  %112 = or i32 %91, 1\l  %113 = sub nsw i32 %16, %112\l  br i1 %45, label %130, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4c338a0:s0 -> Node0x4c34590;
	Node0x4c338a0:s1 -> Node0x4c345e0;
	Node0x4c345e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%114:\l114:                                              \l  %115 = icmp sgt i32 %113, -1\l  %116 = select i1 %46, i1 %115, i1 false\l  %117 = icmp slt i32 %113, %3\l  %118 = select i1 %116, i1 %117, i1 false\l  br i1 %118, label %119, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4c345e0:s0 -> Node0x4c349a0;
	Node0x4c345e0:s1 -> Node0x4c34590;
	Node0x4c349a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%119:\l119:                                              \l  %120 = add nsw i32 %112, %47\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = add nsw i32 %113, %48\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = fmul contract float %123, %127\l  %129 = fadd contract float %111, %128\l  br label %130\l}"];
	Node0x4c349a0 -> Node0x4c34590;
	Node0x4c34590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%130:\l130:                                              \l  %131 = phi float [ %129, %119 ], [ %111, %114 ], [ %111, %110 ]\l  %132 = or i32 %91, 2\l  %133 = sub nsw i32 %16, %132\l  br i1 %45, label %150, label %134\l|{<s0>T|<s1>F}}"];
	Node0x4c34590:s0 -> Node0x4c31ff0;
	Node0x4c34590:s1 -> Node0x4c32040;
	Node0x4c32040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%134:\l134:                                              \l  %135 = icmp sgt i32 %133, -1\l  %136 = select i1 %46, i1 %135, i1 false\l  %137 = icmp slt i32 %133, %3\l  %138 = select i1 %136, i1 %137, i1 false\l  br i1 %138, label %139, label %150\l|{<s0>T|<s1>F}}"];
	Node0x4c32040:s0 -> Node0x4c35ad0;
	Node0x4c32040:s1 -> Node0x4c31ff0;
	Node0x4c35ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%139:\l139:                                              \l  %140 = add nsw i32 %132, %47\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %2, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %144 = add nsw i32 %133, %48\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = fmul contract float %143, %147\l  %149 = fadd contract float %131, %148\l  br label %150\l}"];
	Node0x4c35ad0 -> Node0x4c31ff0;
	Node0x4c31ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%150:\l150:                                              \l  %151 = phi float [ %149, %139 ], [ %131, %134 ], [ %131, %130 ]\l  %152 = or i32 %91, 3\l  %153 = sub nsw i32 %16, %152\l  br i1 %45, label %170, label %154\l|{<s0>T|<s1>F}}"];
	Node0x4c31ff0:s0 -> Node0x4c31330;
	Node0x4c31ff0:s1 -> Node0x4c36370;
	Node0x4c36370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%154:\l154:                                              \l  %155 = icmp sgt i32 %153, -1\l  %156 = select i1 %46, i1 %155, i1 false\l  %157 = icmp slt i32 %153, %3\l  %158 = select i1 %156, i1 %157, i1 false\l  br i1 %158, label %159, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4c36370:s0 -> Node0x4c366f0;
	Node0x4c36370:s1 -> Node0x4c31330;
	Node0x4c366f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%159:\l159:                                              \l  %160 = add nsw i32 %152, %47\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %2, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %164 = add nsw i32 %153, %48\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %1, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = fmul contract float %163, %167\l  %169 = fadd contract float %151, %168\l  br label %170\l}"];
	Node0x4c366f0 -> Node0x4c31330;
	Node0x4c31330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%170:\l170:                                              \l  %171 = phi float [ %169, %159 ], [ %151, %154 ], [ %151, %150 ]\l  %172 = add nuw nsw i32 %91, 4\l  %173 = add i32 %92, 4\l  %174 = icmp eq i32 %173, %38\l  br i1 %174, label %55, label %89, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4c31330:s0 -> Node0x4c30880;
	Node0x4c31330:s1 -> Node0x4c308d0;
	Node0x4c2ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%175:\l175:                                              \l  ret void\l}"];
}
