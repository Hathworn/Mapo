digraph "CFG for '_Z17convn_same_kernelPfS_S_iiii' function" {
	label="CFG for '_Z17convn_same_kernelPfS_S_iiii' function";

	Node0x5f271b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %3\l  %26 = icmp slt i32 %24, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5f271b0:s0 -> Node0x5f2ac00;
	Node0x5f271b0:s1 -> Node0x5f2ac90;
	Node0x5f2ac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  %29 = sdiv i32 %6, 2\l  %30 = sdiv i32 %5, 2\l  %31 = icmp sgt i32 %6, 0\l  br i1 %31, label %32, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5f2ac00:s0 -> Node0x5f2afe0;
	Node0x5f2ac00:s1 -> Node0x5f2b030;
	Node0x5f2afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %5, 0\l  %34 = and i32 %5, 3\l  %35 = icmp ult i32 %5, 4\l  %36 = and i32 %5, -4\l  %37 = icmp eq i32 %34, 0\l  br label %38\l}"];
	Node0x5f2afe0 -> Node0x5f2b5f0;
	Node0x5f2b5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %32 ], [ %86, %85 ]\l  %40 = phi i32 [ 0, %32 ], [ %87, %85 ]\l  br i1 %33, label %41, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5f2b5f0:s0 -> Node0x5f2c390;
	Node0x5f2b5f0:s1 -> Node0x5f2c130;
	Node0x5f2c390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%41:\l41:                                               \l  %42 = sub nsw i32 %24, %40\l  %43 = add nsw i32 %42, %29\l  %44 = icmp slt i32 %43, 0\l  %45 = icmp slt i32 %43, %4\l  %46 = mul nsw i32 %40, %5\l  %47 = mul nsw i32 %43, %3\l  br i1 %35, label %54, label %89\l|{<s0>T|<s1>F}}"];
	Node0x5f2c390:s0 -> Node0x5f2c830;
	Node0x5f2c390:s1 -> Node0x5f2c880;
	Node0x5f2b030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%48:\l48:                                               \l  %49 = phi float [ 0.000000e+00, %28 ], [ %86, %85 ]\l  %50 = mul nsw i32 %24, %3\l  %51 = add nsw i32 %50, %16\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  store float %49, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %179\l}"];
	Node0x5f2b030 -> Node0x5f2ac90;
	Node0x5f2c830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%54:\l54:                                               \l  %55 = phi float [ undef, %41 ], [ %175, %174 ]\l  %56 = phi float [ %39, %41 ], [ %175, %174 ]\l  %57 = phi i32 [ 0, %41 ], [ %176, %174 ]\l  br i1 %37, label %85, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5f2c830:s0 -> Node0x5f2c130;
	Node0x5f2c830:s1 -> Node0x5f2d5f0;
	Node0x5f2d5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi float [ %81, %80 ], [ %56, %54 ]\l  %60 = phi i32 [ %82, %80 ], [ %57, %54 ]\l  %61 = phi i32 [ %83, %80 ], [ 0, %54 ]\l  %62 = sub nsw i32 %16, %60\l  %63 = add nsw i32 %62, %30\l  br i1 %44, label %80, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5f2d5f0:s0 -> Node0x5f2d760;
	Node0x5f2d5f0:s1 -> Node0x5f2dc00;
	Node0x5f2dc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%64:\l64:                                               \l  %65 = icmp sgt i32 %63, -1\l  %66 = select i1 %45, i1 %65, i1 false\l  %67 = icmp slt i32 %63, %3\l  %68 = select i1 %66, i1 %67, i1 false\l  br i1 %68, label %69, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5f2dc00:s0 -> Node0x5f2e200;
	Node0x5f2dc00:s1 -> Node0x5f2d760;
	Node0x5f2e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%69:\l69:                                               \l  %70 = add nsw i32 %60, %46\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = add nsw i32 %63, %47\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fmul contract float %73, %77\l  %79 = fadd contract float %59, %78\l  br label %80\l}"];
	Node0x5f2e200 -> Node0x5f2d760;
	Node0x5f2d760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %69 ], [ %59, %64 ], [ %59, %58 ]\l  %82 = add nuw nsw i32 %60, 1\l  %83 = add i32 %61, 1\l  %84 = icmp eq i32 %83, %34\l  br i1 %84, label %85, label %58, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f2d760:s0 -> Node0x5f2c130;
	Node0x5f2d760:s1 -> Node0x5f2d5f0;
	Node0x5f2c130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%85:\l85:                                               \l  %86 = phi float [ %39, %38 ], [ %55, %54 ], [ %81, %80 ]\l  %87 = add nuw nsw i32 %40, 1\l  %88 = icmp eq i32 %87, %6\l  br i1 %88, label %48, label %38, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f2c130:s0 -> Node0x5f2b030;
	Node0x5f2c130:s1 -> Node0x5f2b5f0;
	Node0x5f2c880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%89:\l89:                                               \l  %90 = phi float [ %175, %174 ], [ %39, %41 ]\l  %91 = phi i32 [ %176, %174 ], [ 0, %41 ]\l  %92 = phi i32 [ %177, %174 ], [ 0, %41 ]\l  %93 = sub nsw i32 %16, %91\l  %94 = add nsw i32 %93, %30\l  br i1 %44, label %111, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5f2c880:s0 -> Node0x5f2f970;
	Node0x5f2c880:s1 -> Node0x5f2f9c0;
	Node0x5f2f9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%95:\l95:                                               \l  %96 = icmp sgt i32 %94, -1\l  %97 = select i1 %45, i1 %96, i1 false\l  %98 = icmp slt i32 %94, %3\l  %99 = select i1 %97, i1 %98, i1 false\l  br i1 %99, label %100, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5f2f9c0:s0 -> Node0x5f2fd80;
	Node0x5f2f9c0:s1 -> Node0x5f2f970;
	Node0x5f2fd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%100:\l100:                                              \l  %101 = add nsw i32 %91, %46\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = add nsw i32 %94, %47\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = fmul contract float %104, %108\l  %110 = fadd contract float %90, %109\l  br label %111\l}"];
	Node0x5f2fd80 -> Node0x5f2f970;
	Node0x5f2f970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%111:\l111:                                              \l  %112 = phi float [ %110, %100 ], [ %90, %95 ], [ %90, %89 ]\l  %113 = or i32 %91, 1\l  %114 = sub nsw i32 %16, %113\l  %115 = add nsw i32 %114, %30\l  br i1 %44, label %132, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5f2f970:s0 -> Node0x5f306f0;
	Node0x5f2f970:s1 -> Node0x5f30740;
	Node0x5f30740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%116:\l116:                                              \l  %117 = icmp sgt i32 %115, -1\l  %118 = select i1 %45, i1 %117, i1 false\l  %119 = icmp slt i32 %115, %3\l  %120 = select i1 %118, i1 %119, i1 false\l  br i1 %120, label %121, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5f30740:s0 -> Node0x5f30b00;
	Node0x5f30740:s1 -> Node0x5f306f0;
	Node0x5f30b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%121:\l121:                                              \l  %122 = add nsw i32 %113, %46\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %2, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = add nsw i32 %115, %47\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %130 = fmul contract float %125, %129\l  %131 = fadd contract float %112, %130\l  br label %132\l}"];
	Node0x5f30b00 -> Node0x5f306f0;
	Node0x5f306f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%132:\l132:                                              \l  %133 = phi float [ %131, %121 ], [ %112, %116 ], [ %112, %111 ]\l  %134 = or i32 %91, 2\l  %135 = sub nsw i32 %16, %134\l  %136 = add nsw i32 %135, %30\l  br i1 %44, label %153, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5f306f0:s0 -> Node0x5f2e0e0;
	Node0x5f306f0:s1 -> Node0x5f318e0;
	Node0x5f318e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%137:\l137:                                              \l  %138 = icmp sgt i32 %136, -1\l  %139 = select i1 %45, i1 %138, i1 false\l  %140 = icmp slt i32 %136, %3\l  %141 = select i1 %139, i1 %140, i1 false\l  br i1 %141, label %142, label %153\l|{<s0>T|<s1>F}}"];
	Node0x5f318e0:s0 -> Node0x5f31ca0;
	Node0x5f318e0:s1 -> Node0x5f2e0e0;
	Node0x5f31ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%142:\l142:                                              \l  %143 = add nsw i32 %134, %46\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %2, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %147 = add nsw i32 %136, %47\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %1, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %151 = fmul contract float %146, %150\l  %152 = fadd contract float %133, %151\l  br label %153\l}"];
	Node0x5f31ca0 -> Node0x5f2e0e0;
	Node0x5f2e0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%153:\l153:                                              \l  %154 = phi float [ %152, %142 ], [ %133, %137 ], [ %133, %132 ]\l  %155 = or i32 %91, 3\l  %156 = sub nsw i32 %16, %155\l  %157 = add nsw i32 %156, %30\l  br i1 %44, label %174, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5f2e0e0:s0 -> Node0x5f2d2e0;
	Node0x5f2e0e0:s1 -> Node0x5f32610;
	Node0x5f32610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%158:\l158:                                              \l  %159 = icmp sgt i32 %157, -1\l  %160 = select i1 %45, i1 %159, i1 false\l  %161 = icmp slt i32 %157, %3\l  %162 = select i1 %160, i1 %161, i1 false\l  br i1 %162, label %163, label %174\l|{<s0>T|<s1>F}}"];
	Node0x5f32610:s0 -> Node0x5f32990;
	Node0x5f32610:s1 -> Node0x5f2d2e0;
	Node0x5f32990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%163:\l163:                                              \l  %164 = add nsw i32 %155, %46\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %2, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = add nsw i32 %157, %47\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %1, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %172 = fmul contract float %167, %171\l  %173 = fadd contract float %154, %172\l  br label %174\l}"];
	Node0x5f32990 -> Node0x5f2d2e0;
	Node0x5f2d2e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%174:\l174:                                              \l  %175 = phi float [ %173, %163 ], [ %154, %158 ], [ %154, %153 ]\l  %176 = add nuw nsw i32 %91, 4\l  %177 = add i32 %92, 4\l  %178 = icmp eq i32 %177, %36\l  br i1 %178, label %54, label %89, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5f2d2e0:s0 -> Node0x5f2c830;
	Node0x5f2d2e0:s1 -> Node0x5f2c880;
	Node0x5f2ac90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%179:\l179:                                              \l  ret void\l}"];
}
