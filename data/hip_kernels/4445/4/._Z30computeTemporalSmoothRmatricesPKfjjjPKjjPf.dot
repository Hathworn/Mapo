digraph "CFG for '_Z30computeTemporalSmoothRmatricesPKfjjjPKjjPf' function" {
	label="CFG for '_Z30computeTemporalSmoothRmatricesPKfjjjPKjjPf' function";

	Node0x5681c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul nuw nsw i32 %8, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = add nuw nsw i32 %15, %16\l  %18 = icmp ult i32 %10, %1\l  br i1 %18, label %19, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5681c50:s0 -> Node0x56843d0;
	Node0x5681c50:s1 -> Node0x5684460;
	Node0x56843d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%19:\l19:                                               \l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = mul i32 %20, %1\l  %22 = add i32 %21, %10\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %26 = icmp sgt i32 %25, 0\l  br i1 %26, label %27, label %70\l|{<s0>T|<s1>F}}"];
	Node0x56843d0:s0 -> Node0x56852a0;
	Node0x56843d0:s1 -> Node0x5684460;
	Node0x56852a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%27:\l27:                                               \l  %28 = add nuw nsw i32 %25, 1\l  %29 = mul nsw i32 %28, %25\l  %30 = sdiv i32 %29, 2\l  %31 = add i32 %2, 1\l  %32 = mul i32 %31, %2\l  %33 = lshr i32 %32, 1\l  %34 = sub nsw i32 %10, %5\l  %35 = tail call i32 @llvm.smax.i32(i32 %34, i32 0)\l  %36 = add i32 %35, %21\l  %37 = add nsw i32 %1, -1\l  %38 = add nsw i32 %10, %5\l  %39 = tail call i32 @llvm.smin.i32(i32 %37, i32 %38)\l  %40 = add i32 %39, %21\l  %41 = icmp slt i32 %17, %30\l  br i1 %41, label %42, label %70\l|{<s0>T|<s1>F}}"];
	Node0x56852a0:s0 -> Node0x5686040;
	Node0x56852a0:s1 -> Node0x5684460;
	Node0x5686040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %36, %40\l  %44 = mul i32 %33, %22\l  %45 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %46 = bitcast i8 addrspace(4)* %45 to i16 addrspace(4)*\l  %47 = load i16, i16 addrspace(4)* %46, align 2, !range !5, !invariant.load !6\l  %48 = zext i16 %47 to i32\l  %49 = mul nuw nsw i32 %48, %14\l  br label %50\l}"];
	Node0x5686040 -> Node0x5686bd0;
	Node0x5686bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%50:\l50:                                               \l  %51 = phi i32 [ %17, %42 ], [ %57, %52 ]\l  br i1 %43, label %52, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5686bd0:s0 -> Node0x5686cd0;
	Node0x5686bd0:s1 -> Node0x5686e10;
	Node0x5686cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%52:\l52:                                               \l  %53 = phi float [ 0.000000e+00, %50 ], [ %67, %59 ]\l  %54 = add i32 %51, %44\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %6, i64 %55\l  store float %53, float addrspace(1)* %56, align 4, !tbaa !11\l  %57 = add i32 %49, %51\l  %58 = icmp slt i32 %57, %30\l  br i1 %58, label %50, label %70, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5686cd0:s0 -> Node0x5686bd0;
	Node0x5686cd0:s1 -> Node0x5684460;
	Node0x5686e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %68, %59 ], [ %36, %50 ]\l  %61 = phi float [ %67, %59 ], [ 0.000000e+00, %50 ]\l  %62 = mul nsw i32 %60, %33\l  %63 = add nsw i32 %62, %51\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !11\l  %67 = fadd contract float %61, %66\l  %68 = add nsw i32 %60, 1\l  %69 = icmp slt i32 %60, %40\l  br i1 %69, label %59, label %52, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5686e10:s0 -> Node0x5686e10;
	Node0x5686e10:s1 -> Node0x5686cd0;
	Node0x5684460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%70:\l70:                                               \l  ret void\l}"];
}
