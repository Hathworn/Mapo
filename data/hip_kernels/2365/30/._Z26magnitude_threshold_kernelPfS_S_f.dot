digraph "CFG for '_Z26magnitude_threshold_kernelPfS_S_f' function" {
	label="CFG for '_Z26magnitude_threshold_kernelPfS_S_f' function";

	Node0x63ff7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %23 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %29 = add i32 %27, %28\l  %30 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %31 = icmp ult i32 %13, %30\l  br i1 %31, label %32, label %84\l|{<s0>T|<s1>F}}"];
	Node0x63ff7f0:s0 -> Node0x6403620;
	Node0x63ff7f0:s1 -> Node0x64036b0;
	Node0x6403620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%32:\l32:                                               \l  %33 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !7\l  %34 = icmp ult i32 %21, %33\l  %35 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_Size, i64\l... 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4\l  %36 = icmp ult i32 %29, %35\l  %37 = select i1 %34, i1 %36, i1 false\l  br i1 %37, label %38, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6403620:s0 -> Node0x6404430;
	Node0x6403620:s1 -> Node0x64036b0;
	Node0x6404430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%38:\l38:                                               \l  %39 = mul i32 %33, %29\l  %40 = add i32 %39, %21\l  %41 = mul i32 %40, %30\l  %42 = add i32 %41, %13\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %46 = fmul contract float %45, %45\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %49 = fmul contract float %48, %48\l  %50 = fadd contract float %46, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %53 = fmul contract float %52, %52\l  %54 = fadd contract float %50, %53\l  %55 = fcmp olt float %54, 0x39F0000000000000\l  %56 = select i1 %55, float 0x41F0000000000000, float 1.000000e+00\l  %57 = fmul float %54, %56\l  %58 = tail call float @llvm.sqrt.f32(float %57)\l  %59 = bitcast float %58 to i32\l  %60 = add nsw i32 %59, -1\l  %61 = bitcast i32 %60 to float\l  %62 = add nsw i32 %59, 1\l  %63 = bitcast i32 %62 to float\l  %64 = tail call i1 @llvm.amdgcn.class.f32(float %57, i32 608)\l  %65 = select i1 %55, float 0x3EF0000000000000, float 1.000000e+00\l  %66 = fneg float %63\l  %67 = tail call float @llvm.fma.f32(float %66, float %58, float %57)\l  %68 = fcmp ogt float %67, 0.000000e+00\l  %69 = fneg float %61\l  %70 = tail call float @llvm.fma.f32(float %69, float %58, float %57)\l  %71 = fcmp ole float %70, 0.000000e+00\l  %72 = select i1 %71, float %61, float %58\l  %73 = select i1 %68, float %63, float %72\l  %74 = fmul float %65, %73\l  %75 = select i1 %64, float %57, float %74\l  %76 = fcmp contract ogt float %75, %3\l  br i1 %76, label %77, label %84\l|{<s0>T|<s1>F}}"];
	Node0x6404430:s0 -> Node0x6407620;
	Node0x6404430:s1 -> Node0x64036b0;
	Node0x6407620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%77:\l77:                                               \l  %78 = fdiv contract float %3, %75\l  %79 = fmul contract float %45, %78\l  store float %79, float addrspace(1)* %44, align 4, !tbaa !10\l  %80 = load float, float addrspace(1)* %47, align 4, !tbaa !10\l  %81 = fmul contract float %78, %80\l  store float %81, float addrspace(1)* %47, align 4, !tbaa !10\l  %82 = load float, float addrspace(1)* %51, align 4, !tbaa !10\l  %83 = fmul contract float %78, %82\l  store float %83, float addrspace(1)* %51, align 4, !tbaa !10\l  br label %84\l}"];
	Node0x6407620 -> Node0x64036b0;
	Node0x64036b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
