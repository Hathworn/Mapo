digraph "CFG for '_Z25convert_to_luv_gpu_kernelPhPfiib' function" {
	label="CFG for '_Z25convert_to_luv_gpu_kernelPhPfiib' function";

	Node0x62dbb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = add i32 %13, %6\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = icmp ult i32 %14, %2\l  %24 = icmp ult i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %98\l|{<s0>T|<s1>F}}"];
	Node0x62dbb10:s0 -> Node0x62def60;
	Node0x62dbb10:s1 -> Node0x62deff0;
	Node0x62def60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul i32 %22, %2\l  %28 = add i32 %27, %14\l  %29 = mul i32 %28, 3\l  %30 = add i32 %29, 2\l  %31 = select i1 %4, i32 %30, i32 %29\l  %32 = select i1 %4, i32 %29, i32 %30\l  %33 = zext i32 %31 to i64\l  %34 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %33\l  %35 = add i32 %29, 1\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %36\l  %38 = zext i32 %32 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %41 = uitofp i8 %40 to float\l  %42 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %43 = uitofp i8 %42 to float\l  %44 = load i8, i8 addrspace(1)* %34, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %45 = uitofp i8 %44 to float\l  %46 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mr_const, i64 0, i64 0), align 4, !tbaa !10\l  %47 = fmul contract float %46, %41\l  %48 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mg_const, i64 0, i64 0), align 4, !tbaa !10\l  %49 = fmul contract float %48, %43\l  %50 = fadd contract float %47, %49\l  %51 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mb_const, i64 0, i64 0), align 4, !tbaa !10\l  %52 = fmul contract float %51, %45\l  %53 = fadd contract float %50, %52\l  %54 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mr_const, i64 0, i64 1), align 4, !tbaa !10\l  %55 = fmul contract float %54, %41\l  %56 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mg_const, i64 0, i64 1), align 4, !tbaa !10\l  %57 = fmul contract float %56, %43\l  %58 = fadd contract float %55, %57\l  %59 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mb_const, i64 0, i64 1), align 4, !tbaa !10\l  %60 = fmul contract float %59, %45\l  %61 = fadd contract float %58, %60\l  %62 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mr_const, i64 0, i64 2), align 4, !tbaa !10\l  %63 = fmul contract float %62, %41\l  %64 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mg_const, i64 0, i64 2), align 4, !tbaa !10\l  %65 = fmul contract float %64, %43\l  %66 = fadd contract float %63, %65\l  %67 = load float, float addrspace(4)* getelementptr inbounds ([3 x float],\l... [3 x float] addrspace(4)* @mb_const, i64 0, i64 2), align 4, !tbaa !10\l  %68 = fmul contract float %67, %45\l  %69 = fadd contract float %66, %68\l  %70 = fmul contract float %61, 1.024000e+03\l  %71 = fptosi float %70 to i32\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds [1064 x float], [1064 x float] addrspace(4)*\l... @lTable_const, i64 0, i64 %72\l  %74 = load float, float addrspace(4)* %73, align 4, !tbaa !10\l  %75 = fmul contract float %61, 1.500000e+01\l  %76 = fadd contract float %53, %75\l  %77 = fmul contract float %69, 3.000000e+00\l  %78 = fadd contract float %76, %77\l  %79 = fadd contract float %78, 0x38AA95A5C0000000\l  %80 = fdiv contract float 1.000000e+00, %79\l  %81 = fmul contract float %53, 5.200000e+01\l  %82 = fmul contract float %81, %80\l  %83 = fadd contract float %82, 0xC004931B20000000\l  %84 = fmul contract float %74, %83\l  %85 = fadd contract float %84, 0x3FD4DBF860000000\l  %86 = fmul contract float %61, 1.170000e+02\l  %87 = fmul contract float %86, %80\l  %88 = fadd contract float %87, 0xC0185A6C20000000\l  %89 = fmul contract float %74, %88\l  %90 = fadd contract float %89, 0x3FDFC35180000000\l  %91 = zext i32 %29 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  store float %74, float addrspace(1)* %92, align 4, !tbaa !10\l  %93 = add i32 %29, 1\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  store float %85, float addrspace(1)* %95, align 4, !tbaa !10\l  %96 = zext i32 %30 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  store float %90, float addrspace(1)* %97, align 4, !tbaa !10\l  br label %98\l}"];
	Node0x62def60 -> Node0x62deff0;
	Node0x62deff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  ret void\l}"];
}
