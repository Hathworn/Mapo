digraph "CFG for '_Z33trianguler_convolution_gpu_kernelPfS_S_S_S_iiff' function" {
	label="CFG for '_Z33trianguler_convolution_gpu_kernelPfS_S_S_S_iiff' function";

	Node0x4efed40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp ult i32 %18, %5\l  %28 = icmp ult i32 %26, %6\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %168\l|{<s0>T|<s1>F}}"];
	Node0x4efed40:s0 -> Node0x4f02e90;
	Node0x4efed40:s1 -> Node0x4f02f20;
	Node0x4f02e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%30:\l30:                                               \l  %31 = mul i32 %26, %5\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = mul nsw i32 %6, %5\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %33, i64 %35\l  %37 = shl i32 %5, 1\l  %38 = mul i32 %37, %6\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %33, i64 %39\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %42 = getelementptr inbounds float, float addrspace(1)* %41, i64 %35\l  %43 = getelementptr inbounds float, float addrspace(1)* %41, i64 %39\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %32\l  %47 = icmp eq i32 %26, 0\l  %48 = sext i32 %5 to i64\l  %49 = sub nsw i64 0, %48\l  %50 = select i1 %47, i64 0, i64 %49\l  %51 = getelementptr float, float addrspace(1)* %40, i64 %50\l  %52 = getelementptr float, float addrspace(1)* %36, i64 %50\l  %53 = getelementptr float, float addrspace(1)* %33, i64 %50\l  %54 = add nsw i32 %6, -1\l  %55 = icmp ult i32 %26, %54\l  %56 = select i1 %55, i64 %48, i64 0\l  %57 = getelementptr float, float addrspace(1)* %40, i64 %56\l  %58 = getelementptr float, float addrspace(1)* %36, i64 %56\l  %59 = getelementptr float, float addrspace(1)* %33, i64 %56\l  %60 = zext i32 %18 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %53, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = getelementptr inbounds float, float addrspace(1)* %33, i64 %60\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = fmul contract float %64, %8\l  %66 = fadd contract float %62, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %59, i64 %60\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fadd contract float %68, %66\l  %70 = fmul contract float %69, %7\l  %71 = getelementptr inbounds float, float addrspace(1)* %44, i64 %60\l  store float %70, float addrspace(1)* %71, align 4, !tbaa !7\l  %72 = getelementptr inbounds float, float addrspace(1)* %52, i64 %60\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = getelementptr inbounds float, float addrspace(1)* %36, i64 %60\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = fmul contract float %75, %8\l  %77 = fadd contract float %73, %76\l  %78 = getelementptr inbounds float, float addrspace(1)* %58, i64 %60\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = fadd contract float %79, %77\l  %81 = fmul contract float %80, %7\l  %82 = getelementptr inbounds float, float addrspace(1)* %45, i64 %60\l  store float %81, float addrspace(1)* %82, align 4, !tbaa !7\l  %83 = getelementptr inbounds float, float addrspace(1)* %51, i64 %60\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = getelementptr inbounds float, float addrspace(1)* %40, i64 %60\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fmul contract float %86, %8\l  %88 = fadd contract float %84, %87\l  %89 = getelementptr inbounds float, float addrspace(1)* %57, i64 %60\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = fadd contract float %90, %88\l  %92 = fmul contract float %91, %7\l  %93 = getelementptr inbounds float, float addrspace(1)* %46, i64 %60\l  store float %92, float addrspace(1)* %93, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %94 = icmp eq i32 %18, 0\l  br i1 %94, label %95, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4f02e90:s0 -> Node0x4f064b0;
	Node0x4f02e90:s1 -> Node0x4f06540;
	Node0x4f064b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%95:\l95:                                               \l  %96 = fadd contract float %8, 1.000000e+00\l  %97 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %98 = fmul contract float %96, %97\l  %99 = getelementptr inbounds float, float addrspace(1)* %44, i64 1\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fadd contract float %98, %100\l  %102 = getelementptr inbounds float, float addrspace(1)* %41, i64 %60\l  store float %101, float addrspace(1)* %102, align 4, !tbaa !7\l  %103 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %104 = fmul contract float %96, %103\l  %105 = getelementptr inbounds float, float addrspace(1)* %45, i64 1\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = fadd contract float %104, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %42, i64 %60\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !7\l  %109 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %110 = fmul contract float %96, %109\l  %111 = getelementptr inbounds float, float addrspace(1)* %46, i64 1\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = fadd contract float %110, %112\l  br label %165\l}"];
	Node0x4f064b0 -> Node0x4f07b90;
	Node0x4f06540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%114:\l114:                                              \l  %115 = add nsw i32 %5, -1\l  %116 = icmp eq i32 %18, %115\l  %117 = add i32 %18, -1\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %44, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7\l  br i1 %116, label %121, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4f06540:s0 -> Node0x4f07fc0;
	Node0x4f06540:s1 -> Node0x4f08010;
	Node0x4f07fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%121:\l121:                                              \l  %122 = fadd contract float %8, 1.000000e+00\l  %123 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %124 = fmul contract float %122, %123\l  %125 = fadd contract float %120, %124\l  %126 = getelementptr inbounds float, float addrspace(1)* %41, i64 %60\l  store float %125, float addrspace(1)* %126, align 4, !tbaa !7\l  %127 = getelementptr inbounds float, float addrspace(1)* %45, i64 %118\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  %129 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %130 = fmul contract float %122, %129\l  %131 = fadd contract float %128, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %42, i64 %60\l  store float %131, float addrspace(1)* %132, align 4, !tbaa !7\l  %133 = getelementptr inbounds float, float addrspace(1)* %46, i64 %118\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %136 = fmul contract float %122, %135\l  %137 = fadd contract float %134, %136\l  br label %165\l}"];
	Node0x4f07fc0 -> Node0x4f07b90;
	Node0x4f08010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%138:\l138:                                              \l  %139 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %140 = fmul contract float %139, %8\l  %141 = fadd contract float %120, %140\l  %142 = add nuw i32 %18, 1\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %44, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !7\l  %146 = fadd contract float %145, %141\l  %147 = getelementptr inbounds float, float addrspace(1)* %41, i64 %60\l  store float %146, float addrspace(1)* %147, align 4, !tbaa !7\l  %148 = getelementptr inbounds float, float addrspace(1)* %45, i64 %118\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7\l  %150 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %151 = fmul contract float %150, %8\l  %152 = fadd contract float %149, %151\l  %153 = getelementptr inbounds float, float addrspace(1)* %45, i64 %143\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !7\l  %155 = fadd contract float %154, %152\l  %156 = getelementptr inbounds float, float addrspace(1)* %42, i64 %60\l  store float %155, float addrspace(1)* %156, align 4, !tbaa !7\l  %157 = getelementptr inbounds float, float addrspace(1)* %46, i64 %118\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7\l  %159 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %160 = fmul contract float %159, %8\l  %161 = fadd contract float %158, %160\l  %162 = getelementptr inbounds float, float addrspace(1)* %46, i64 %143\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7\l  %164 = fadd contract float %163, %161\l  br label %165\l}"];
	Node0x4f08010 -> Node0x4f07b90;
	Node0x4f07b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%165:\l165:                                              \l  %166 = phi float [ %137, %121 ], [ %164, %138 ], [ %113, %95 ]\l  %167 = getelementptr inbounds float, float addrspace(1)* %43, i64 %60\l  store float %166, float addrspace(1)* %167, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %168\l}"];
	Node0x4f07b90 -> Node0x4f02f20;
	Node0x4f02f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  ret void\l}"];
}
