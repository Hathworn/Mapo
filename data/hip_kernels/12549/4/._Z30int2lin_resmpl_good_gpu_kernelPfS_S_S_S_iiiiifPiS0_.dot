digraph "CFG for '_Z30int2lin_resmpl_good_gpu_kernelPfS_S_S_S_iiiiifPiS0_' function" {
	label="CFG for '_Z30int2lin_resmpl_good_gpu_kernelPfS_S_S_S_iiiiifPiS0_' function";

	Node0x46d3bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %14\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = add i32 %29, %23\l  %31 = icmp ult i32 %22, %7\l  %32 = icmp ult i32 %30, %8\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %308\l|{<s0>T|<s1>F}}"];
	Node0x46d3bb0:s0 -> Node0x46d55c0;
	Node0x46d3bb0:s1 -> Node0x46d7f40;
	Node0x46d55c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  %36 = mul nsw i32 %8, %7\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 2\l  %40 = shl nsw i32 %8, 1\l  %41 = mul nsw i32 %40, %7\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = icmp eq i32 %6, %8\l  %45 = icmp eq i32 %5, %7\l  %46 = select i1 %44, i1 %45, i1 false\l  br i1 %46, label %47, label %62\l|{<s0>T|<s1>F}}"];
	Node0x46d55c0:s0 -> Node0x46d87f0;
	Node0x46d55c0:s1 -> Node0x46d8840;
	Node0x46d87f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  %48 = mul i32 %22, %7\l  %49 = add i32 %30, %48\l  %50 = mul nsw i32 %49, %9\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = sext i32 %49 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  store float %53, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = getelementptr inbounds float, float addrspace(1)* %35, i64 %51\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = getelementptr inbounds float, float addrspace(1)* %38, i64 %54\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = getelementptr inbounds float, float addrspace(1)* %39, i64 %51\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = getelementptr inbounds float, float addrspace(1)* %43, i64 %54\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %308\l}"];
	Node0x46d87f0 -> Node0x46d7f40;
	Node0x46d8840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%62:\l62:                                               \l  %63 = icmp eq i32 %40, %6\l  br i1 %63, label %64, label %66\l|{<s0>T|<s1>F}}"];
	Node0x46d8840:s0 -> Node0x46d9b90;
	Node0x46d8840:s1 -> Node0x46d9be0;
	Node0x46d9b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%64:\l64:                                               \l  %65 = shl i32 %30, 1\l  br label %76\l}"];
	Node0x46d9b90 -> Node0x46d7d80;
	Node0x46d9be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%66:\l66:                                               \l  %67 = mul nsw i32 %8, 3\l  %68 = icmp eq i32 %67, %6\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x46d9be0:s0 -> Node0x46da1c0;
	Node0x46d9be0:s1 -> Node0x46da210;
	Node0x46da1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%69:\l69:                                               \l  %70 = mul i32 %30, 3\l  br label %76\l}"];
	Node0x46da1c0 -> Node0x46d7d80;
	Node0x46da210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  %72 = shl nsw i32 %8, 2\l  %73 = icmp eq i32 %72, %6\l  %74 = shl i32 %30, 2\l  %75 = select i1 %73, i32 %74, i32 0\l  br label %76\l}"];
	Node0x46da210 -> Node0x46d7d80;
	Node0x46d7d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%76:\l76:                                               \l  %77 = phi i32 [ %65, %64 ], [ %70, %69 ], [ %75, %71 ]\l  %78 = icmp eq i32 %30, 0\l  %79 = select i1 %78, i32 0, i32 %77\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %83 = mul i32 %9, %5\l  %84 = mul i32 %83, %82\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = sext i32 %83 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %86, i64 %87\l  %89 = getelementptr inbounds float, float addrspace(1)* %88, i64 %87\l  %90 = getelementptr inbounds float, float addrspace(1)* %89, i64 %87\l  %91 = getelementptr inbounds float, float addrspace(1)* %35, i64 %85\l  %92 = getelementptr inbounds float, float addrspace(1)* %39, i64 %85\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %80\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %95 = mul nsw i32 %94, %7\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  %98 = getelementptr inbounds float, float addrspace(1)* %38, i64 %96\l  %99 = getelementptr inbounds float, float addrspace(1)* %43, i64 %96\l  br i1 %63, label %100, label %117\l|{<s0>T|<s1>F}}"];
	Node0x46d7d80:s0 -> Node0x46dbbd0;
	Node0x46d7d80:s1 -> Node0x46dbc60;
	Node0x46dbbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%100:\l100:                                              \l  %101 = mul i32 %22, %9\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %86, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %105 = getelementptr inbounds float, float addrspace(1)* %88, i64 %102\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = fadd contract float %104, %106\l  %108 = zext i32 %22 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %108\l  store float %107, float addrspace(1)* %109, align 4, !tbaa !7\l  %110 = getelementptr inbounds float, float addrspace(1)* %91, i64 %102\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %113 = fadd contract float %111, %112\l  %114 = getelementptr inbounds float, float addrspace(1)* %3, i64 %108\l  store float %113, float addrspace(1)* %114, align 4, !tbaa !7\l  %115 = getelementptr inbounds float, float addrspace(1)* %92, i64 %102\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  br label %178\l}"];
	Node0x46dbbd0 -> Node0x46dc780;
	Node0x46dbc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%117:\l117:                                              \l  %118 = mul nsw i32 %8, 3\l  %119 = icmp eq i32 %118, %6\l  br i1 %119, label %120, label %144\l|{<s0>T|<s1>F}}"];
	Node0x46dbc60:s0 -> Node0x46dc9a0;
	Node0x46dbc60:s1 -> Node0x46dc9f0;
	Node0x46dc9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%120:\l120:                                              \l  %121 = mul i32 %22, %9\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %86, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %125 = getelementptr inbounds float, float addrspace(1)* %88, i64 %122\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fadd contract float %124, %126\l  %128 = getelementptr inbounds float, float addrspace(1)* %89, i64 %122\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %130 = fadd contract float %127, %129\l  %131 = zext i32 %22 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %2, i64 %131\l  store float %130, float addrspace(1)* %132, align 4, !tbaa !7\l  %133 = getelementptr inbounds float, float addrspace(1)* %91, i64 %122\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %136 = fadd contract float %134, %135\l  %137 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %138 = fadd contract float %136, %137\l  %139 = getelementptr inbounds float, float addrspace(1)* %3, i64 %131\l  store float %138, float addrspace(1)* %139, align 4, !tbaa !7\l  %140 = getelementptr inbounds float, float addrspace(1)* %92, i64 %122\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7\l  %142 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %143 = fadd contract float %141, %142\l  br label %178\l}"];
	Node0x46dc9a0 -> Node0x46dc780;
	Node0x46dc9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%144:\l144:                                              \l  %145 = shl nsw i32 %8, 2\l  %146 = icmp eq i32 %145, %6\l  br i1 %146, label %147, label %185\l|{<s0>T|<s1>F}}"];
	Node0x46dc9f0:s0 -> Node0x46ddea0;
	Node0x46dc9f0:s1 -> Node0x46ddef0;
	Node0x46ddea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%147:\l147:                                              \l  %148 = mul i32 %22, %9\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %86, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %152 = getelementptr inbounds float, float addrspace(1)* %88, i64 %149\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %154 = fadd contract float %151, %153\l  %155 = getelementptr inbounds float, float addrspace(1)* %89, i64 %149\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %157 = fadd contract float %154, %156\l  %158 = getelementptr inbounds float, float addrspace(1)* %90, i64 %149\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %160 = fadd contract float %157, %159\l  %161 = zext i32 %22 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %2, i64 %161\l  store float %160, float addrspace(1)* %162, align 4, !tbaa !7\l  %163 = getelementptr inbounds float, float addrspace(1)* %91, i64 %149\l  %164 = load float, float addrspace(1)* %163, align 4, !tbaa !7\l  %165 = load float, float addrspace(1)* %152, align 4, !tbaa !7\l  %166 = fadd contract float %164, %165\l  %167 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %168 = fadd contract float %166, %167\l  %169 = load float, float addrspace(1)* %158, align 4, !tbaa !7\l  %170 = fadd contract float %168, %169\l  %171 = getelementptr inbounds float, float addrspace(1)* %3, i64 %161\l  store float %170, float addrspace(1)* %171, align 4, !tbaa !7\l  %172 = getelementptr inbounds float, float addrspace(1)* %92, i64 %149\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7\l  %174 = load float, float addrspace(1)* %152, align 4, !tbaa !7\l  %175 = fadd contract float %173, %174\l  %176 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %177 = fadd contract float %175, %176\l  br label %178\l}"];
	Node0x46ddea0 -> Node0x46dc780;
	Node0x46dc780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%178:\l178:                                              \l  %179 = phi float addrspace(1)* [ %128, %120 ], [ %158, %147 ], [ %105, %100 ]\l  %180 = phi float [ %143, %120 ], [ %177, %147 ], [ %116, %100 ]\l  %181 = phi i64 [ %131, %120 ], [ %161, %147 ], [ %108, %100 ]\l  %182 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %183 = fadd contract float %180, %182\l  %184 = getelementptr inbounds float, float addrspace(1)* %4, i64 %181\l  store float %183, float addrspace(1)* %184, align 4, !tbaa !7\l  br label %185\l}"];
	Node0x46dc780 -> Node0x46ddef0;
	Node0x46ddef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%185:\l185:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %186 = shl nsw i32 %7, 1\l  %187 = icmp eq i32 %186, %5\l  br i1 %187, label %188, label %211\l|{<s0>T|<s1>F}}"];
	Node0x46ddef0:s0 -> Node0x46dfb00;
	Node0x46ddef0:s1 -> Node0x46dfb50;
	Node0x46dfb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%188:\l188:                                              \l  %189 = shl i32 %22, 1\l  %190 = zext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %2, i64 %190\l  %192 = load float, float addrspace(1)* %191, align 4, !tbaa !7\l  %193 = add nuw nsw i32 %189, 1\l  %194 = zext i32 %193 to i64\l  %195 = getelementptr inbounds float, float addrspace(1)* %2, i64 %194\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !7\l  %197 = fadd contract float %192, %196\l  %198 = fmul contract float %10, 5.000000e-01\l  %199 = fmul contract float %198, %197\l  %200 = zext i32 %22 to i64\l  %201 = getelementptr inbounds float, float addrspace(1)* %97, i64 %200\l  store float %199, float addrspace(1)* %201, align 4, !tbaa !7\l  %202 = getelementptr inbounds float, float addrspace(1)* %3, i64 %190\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7\l  %204 = getelementptr inbounds float, float addrspace(1)* %3, i64 %194\l  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !7\l  %206 = fadd contract float %203, %205\l  %207 = fmul contract float %198, %206\l  %208 = getelementptr inbounds float, float addrspace(1)* %98, i64 %200\l  store float %207, float addrspace(1)* %208, align 4, !tbaa !7\l  %209 = getelementptr inbounds float, float addrspace(1)* %4, i64 %190\l  %210 = load float, float addrspace(1)* %209, align 4, !tbaa !7\l  br label %297\l}"];
	Node0x46dfb00 -> Node0x46d4b80;
	Node0x46dfb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%211:\l211:                                              \l  %212 = mul nsw i32 %7, 3\l  %213 = icmp eq i32 %212, %5\l  br i1 %213, label %214, label %248\l|{<s0>T|<s1>F}}"];
	Node0x46dfb50:s0 -> Node0x46d4da0;
	Node0x46dfb50:s1 -> Node0x46d4df0;
	Node0x46d4da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%214:\l214:                                              \l  %215 = mul i32 %22, 3\l  %216 = zext i32 %215 to i64\l  %217 = getelementptr inbounds float, float addrspace(1)* %2, i64 %216\l  %218 = load float, float addrspace(1)* %217, align 4, !tbaa !7\l  %219 = add i32 %215, 1\l  %220 = zext i32 %219 to i64\l  %221 = getelementptr inbounds float, float addrspace(1)* %2, i64 %220\l  %222 = load float, float addrspace(1)* %221, align 4, !tbaa !7\l  %223 = fadd contract float %218, %222\l  %224 = add i32 %215, 2\l  %225 = zext i32 %224 to i64\l  %226 = getelementptr inbounds float, float addrspace(1)* %2, i64 %225\l  %227 = load float, float addrspace(1)* %226, align 4, !tbaa !7\l  %228 = fadd contract float %223, %227\l  %229 = fdiv contract float %10, 3.000000e+00\l  %230 = fmul contract float %229, %228\l  %231 = zext i32 %22 to i64\l  %232 = getelementptr inbounds float, float addrspace(1)* %97, i64 %231\l  store float %230, float addrspace(1)* %232, align 4, !tbaa !7\l  %233 = getelementptr inbounds float, float addrspace(1)* %3, i64 %216\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !7\l  %235 = getelementptr inbounds float, float addrspace(1)* %3, i64 %220\l  %236 = load float, float addrspace(1)* %235, align 4, !tbaa !7\l  %237 = fadd contract float %234, %236\l  %238 = getelementptr inbounds float, float addrspace(1)* %3, i64 %225\l  %239 = load float, float addrspace(1)* %238, align 4, !tbaa !7\l  %240 = fadd contract float %237, %239\l  %241 = fmul contract float %229, %240\l  %242 = getelementptr inbounds float, float addrspace(1)* %98, i64 %231\l  store float %241, float addrspace(1)* %242, align 4, !tbaa !7\l  %243 = getelementptr inbounds float, float addrspace(1)* %4, i64 %216\l  %244 = load float, float addrspace(1)* %243, align 4, !tbaa !7\l  %245 = getelementptr inbounds float, float addrspace(1)* %4, i64 %220\l  %246 = load float, float addrspace(1)* %245, align 4, !tbaa !7\l  %247 = fadd contract float %244, %246\l  br label %297\l}"];
	Node0x46d4da0 -> Node0x46d4b80;
	Node0x46d4df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%248:\l248:                                              \l  %249 = shl nsw i32 %7, 2\l  %250 = icmp eq i32 %249, %5\l  br i1 %250, label %251, label %307\l|{<s0>T|<s1>F}}"];
	Node0x46d4df0:s0 -> Node0x46d50d0;
	Node0x46d4df0:s1 -> Node0x46e3c10;
	Node0x46d50d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%251:\l251:                                              \l  %252 = shl i32 %22, 2\l  %253 = zext i32 %252 to i64\l  %254 = getelementptr inbounds float, float addrspace(1)* %2, i64 %253\l  %255 = load float, float addrspace(1)* %254, align 4, !tbaa !7\l  %256 = add nuw nsw i32 %252, 1\l  %257 = zext i32 %256 to i64\l  %258 = getelementptr inbounds float, float addrspace(1)* %2, i64 %257\l  %259 = load float, float addrspace(1)* %258, align 4, !tbaa !7\l  %260 = fadd contract float %255, %259\l  %261 = add nuw nsw i32 %252, 2\l  %262 = zext i32 %261 to i64\l  %263 = getelementptr inbounds float, float addrspace(1)* %2, i64 %262\l  %264 = load float, float addrspace(1)* %263, align 4, !tbaa !7\l  %265 = fadd contract float %260, %264\l  %266 = add nuw nsw i32 %252, 3\l  %267 = zext i32 %266 to i64\l  %268 = getelementptr inbounds float, float addrspace(1)* %2, i64 %267\l  %269 = load float, float addrspace(1)* %268, align 4, !tbaa !7\l  %270 = fadd contract float %265, %269\l  %271 = fmul contract float %10, 2.500000e-01\l  %272 = fmul contract float %271, %270\l  %273 = zext i32 %22 to i64\l  %274 = getelementptr inbounds float, float addrspace(1)* %97, i64 %273\l  store float %272, float addrspace(1)* %274, align 4, !tbaa !7\l  %275 = getelementptr inbounds float, float addrspace(1)* %3, i64 %253\l  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !7\l  %277 = getelementptr inbounds float, float addrspace(1)* %3, i64 %257\l  %278 = load float, float addrspace(1)* %277, align 4, !tbaa !7\l  %279 = fadd contract float %276, %278\l  %280 = getelementptr inbounds float, float addrspace(1)* %3, i64 %262\l  %281 = load float, float addrspace(1)* %280, align 4, !tbaa !7\l  %282 = fadd contract float %279, %281\l  %283 = getelementptr inbounds float, float addrspace(1)* %3, i64 %267\l  %284 = load float, float addrspace(1)* %283, align 4, !tbaa !7\l  %285 = fadd contract float %282, %284\l  %286 = fmul contract float %271, %285\l  %287 = getelementptr inbounds float, float addrspace(1)* %98, i64 %273\l  store float %286, float addrspace(1)* %287, align 4, !tbaa !7\l  %288 = getelementptr inbounds float, float addrspace(1)* %4, i64 %253\l  %289 = bitcast float addrspace(1)* %288 to \<2 x float\> addrspace(1)*\l  %290 = load \<2 x float\>, \<2 x float\> addrspace(1)* %289, align 4, !tbaa !7\l  %291 = extractelement \<2 x float\> %290, i64 0\l  %292 = extractelement \<2 x float\> %290, i64 1\l  %293 = fadd contract float %291, %292\l  %294 = getelementptr inbounds float, float addrspace(1)* %4, i64 %262\l  %295 = load float, float addrspace(1)* %294, align 4, !tbaa !7\l  %296 = fadd contract float %293, %295\l  br label %297\l}"];
	Node0x46d50d0 -> Node0x46d4b80;
	Node0x46d4b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%297:\l297:                                              \l  %298 = phi i64 [ %225, %214 ], [ %267, %251 ], [ %194, %188 ]\l  %299 = phi float [ %247, %214 ], [ %296, %251 ], [ %210, %188 ]\l  %300 = phi float [ %229, %214 ], [ %271, %251 ], [ %198, %188 ]\l  %301 = phi i64 [ %231, %214 ], [ %273, %251 ], [ %200, %188 ]\l  %302 = getelementptr inbounds float, float addrspace(1)* %4, i64 %298\l  %303 = load float, float addrspace(1)* %302, align 4, !tbaa !7\l  %304 = fadd contract float %299, %303\l  %305 = fmul contract float %300, %304\l  %306 = getelementptr inbounds float, float addrspace(1)* %99, i64 %301\l  store float %305, float addrspace(1)* %306, align 4, !tbaa !7\l  br label %307\l}"];
	Node0x46d4b80 -> Node0x46e3c10;
	Node0x46e3c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%307:\l307:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %308\l}"];
	Node0x46e3c10 -> Node0x46d7f40;
	Node0x46d7f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%308:\l308:                                              \l  ret void\l}"];
}
