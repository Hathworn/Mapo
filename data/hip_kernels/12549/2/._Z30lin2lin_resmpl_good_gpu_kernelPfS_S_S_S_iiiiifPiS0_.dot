digraph "CFG for '_Z30lin2lin_resmpl_good_gpu_kernelPfS_S_S_S_iiiiifPiS0_' function" {
	label="CFG for '_Z30lin2lin_resmpl_good_gpu_kernelPfS_S_S_S_iiiiifPiS0_' function";

	Node0x59bebb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %14\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = add i32 %29, %23\l  %31 = icmp ult i32 %22, %7\l  %32 = icmp ult i32 %30, %8\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %306\l|{<s0>T|<s1>F}}"];
	Node0x59bebb0:s0 -> Node0x59c05c0;
	Node0x59bebb0:s1 -> Node0x59c2f40;
	Node0x59c05c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %6, %5\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = mul nsw i32 %8, %7\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = shl i32 %5, 1\l  %42 = mul i32 %41, %6\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = shl nsw i32 %8, 1\l  %46 = mul nsw i32 %45, %7\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = icmp eq i32 %6, %8\l  %50 = icmp eq i32 %5, %7\l  %51 = select i1 %49, i1 %50, i1 false\l  br i1 %51, label %52, label %67\l|{<s0>T|<s1>F}}"];
	Node0x59c05c0:s0 -> Node0x59c3a20;
	Node0x59c05c0:s1 -> Node0x59c3a70;
	Node0x59c3a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%52:\l52:                                               \l  %53 = mul i32 %22, %7\l  %54 = add i32 %30, %53\l  %55 = mul nsw i32 %54, %9\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %59 = sext i32 %54 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  store float %58, float addrspace(1)* %60, align 4, !tbaa !7\l  %61 = getelementptr inbounds float, float addrspace(1)* %37, i64 %56\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = getelementptr inbounds float, float addrspace(1)* %40, i64 %59\l  store float %62, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = getelementptr inbounds float, float addrspace(1)* %44, i64 %56\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = getelementptr inbounds float, float addrspace(1)* %48, i64 %59\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  br label %306\l}"];
	Node0x59c3a20 -> Node0x59c2f40;
	Node0x59c3a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%67:\l67:                                               \l  %68 = icmp eq i32 %45, %6\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x59c3a70:s0 -> Node0x59c4fc0;
	Node0x59c3a70:s1 -> Node0x59c5010;
	Node0x59c4fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%69:\l69:                                               \l  %70 = shl i32 %30, 1\l  br label %81\l}"];
	Node0x59c4fc0 -> Node0x59c51e0;
	Node0x59c5010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%71:\l71:                                               \l  %72 = mul nsw i32 %8, 3\l  %73 = icmp eq i32 %72, %6\l  br i1 %73, label %74, label %76\l|{<s0>T|<s1>F}}"];
	Node0x59c5010:s0 -> Node0x59c53c0;
	Node0x59c5010:s1 -> Node0x59c5410;
	Node0x59c53c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%74:\l74:                                               \l  %75 = mul i32 %30, 3\l  br label %81\l}"];
	Node0x59c53c0 -> Node0x59c51e0;
	Node0x59c5410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%76:\l76:                                               \l  %77 = shl nsw i32 %8, 2\l  %78 = icmp eq i32 %77, %6\l  %79 = shl i32 %30, 2\l  %80 = select i1 %78, i32 %79, i32 0\l  br label %81\l}"];
	Node0x59c5410 -> Node0x59c51e0;
	Node0x59c51e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%81:\l81:                                               \l  %82 = phi i32 [ %70, %69 ], [ %75, %74 ], [ %80, %76 ]\l  %83 = icmp eq i32 %30, 0\l  %84 = select i1 %83, i32 0, i32 %82\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %85\l  %87 = load i32, i32 addrspace(1)* %86, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %88 = mul nsw i32 %87, %5\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = sext i32 %5 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %90, i64 %91\l  %93 = getelementptr inbounds float, float addrspace(1)* %92, i64 %91\l  %94 = getelementptr inbounds float, float addrspace(1)* %93, i64 %91\l  %95 = getelementptr inbounds float, float addrspace(1)* %37, i64 %89\l  %96 = getelementptr inbounds float, float addrspace(1)* %44, i64 %89\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %85\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %99 = mul nsw i32 %98, %7\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = getelementptr inbounds float, float addrspace(1)* %40, i64 %100\l  %103 = getelementptr inbounds float, float addrspace(1)* %48, i64 %100\l  br i1 %68, label %104, label %119\l|{<s0>T|<s1>F}}"];
	Node0x59c51e0:s0 -> Node0x59c6d70;
	Node0x59c51e0:s1 -> Node0x59c6e00;
	Node0x59c6d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%104:\l104:                                              \l  %105 = zext i32 %22 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %90, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = getelementptr inbounds float, float addrspace(1)* %92, i64 %105\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %110 = fadd contract float %107, %109\l  %111 = getelementptr inbounds float, float addrspace(1)* %2, i64 %105\l  store float %110, float addrspace(1)* %111, align 4, !tbaa !7\l  %112 = getelementptr inbounds float, float addrspace(1)* %95, i64 %105\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = load float, float addrspace(1)* %108, align 4, !tbaa !7\l  %115 = fadd contract float %113, %114\l  %116 = getelementptr inbounds float, float addrspace(1)* %3, i64 %105\l  store float %115, float addrspace(1)* %116, align 4, !tbaa !7\l  %117 = getelementptr inbounds float, float addrspace(1)* %96, i64 %105\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  br label %176\l}"];
	Node0x59c6d70 -> Node0x59c7820;
	Node0x59c6e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%119:\l119:                                              \l  %120 = mul nsw i32 %8, 3\l  %121 = icmp eq i32 %120, %6\l  br i1 %121, label %122, label %144\l|{<s0>T|<s1>F}}"];
	Node0x59c6e00:s0 -> Node0x59c7a40;
	Node0x59c6e00:s1 -> Node0x59c7a90;
	Node0x59c7a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%122:\l122:                                              \l  %123 = zext i32 %22 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %90, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %126 = getelementptr inbounds float, float addrspace(1)* %92, i64 %123\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %128 = fadd contract float %125, %127\l  %129 = getelementptr inbounds float, float addrspace(1)* %93, i64 %123\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %131 = fadd contract float %128, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %2, i64 %123\l  store float %131, float addrspace(1)* %132, align 4, !tbaa !7\l  %133 = getelementptr inbounds float, float addrspace(1)* %95, i64 %123\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %136 = fadd contract float %134, %135\l  %137 = load float, float addrspace(1)* %129, align 4, !tbaa !7\l  %138 = fadd contract float %136, %137\l  %139 = getelementptr inbounds float, float addrspace(1)* %3, i64 %123\l  store float %138, float addrspace(1)* %139, align 4, !tbaa !7\l  %140 = getelementptr inbounds float, float addrspace(1)* %96, i64 %123\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !7\l  %142 = load float, float addrspace(1)* %126, align 4, !tbaa !7\l  %143 = fadd contract float %141, %142\l  br label %176\l}"];
	Node0x59c7a40 -> Node0x59c7820;
	Node0x59c7a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%144:\l144:                                              \l  %145 = shl nsw i32 %8, 2\l  %146 = icmp eq i32 %145, %6\l  br i1 %146, label %147, label %183\l|{<s0>T|<s1>F}}"];
	Node0x59c7a90:s0 -> Node0x59c4ed0;
	Node0x59c7a90:s1 -> Node0x59c8e80;
	Node0x59c4ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%147:\l147:                                              \l  %148 = zext i32 %22 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %90, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %151 = getelementptr inbounds float, float addrspace(1)* %92, i64 %148\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %153 = fadd contract float %150, %152\l  %154 = getelementptr inbounds float, float addrspace(1)* %93, i64 %148\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %156 = fadd contract float %153, %155\l  %157 = getelementptr inbounds float, float addrspace(1)* %94, i64 %148\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %159 = fadd contract float %156, %158\l  %160 = getelementptr inbounds float, float addrspace(1)* %2, i64 %148\l  store float %159, float addrspace(1)* %160, align 4, !tbaa !7\l  %161 = getelementptr inbounds float, float addrspace(1)* %95, i64 %148\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !7\l  %163 = load float, float addrspace(1)* %151, align 4, !tbaa !7\l  %164 = fadd contract float %162, %163\l  %165 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %166 = fadd contract float %164, %165\l  %167 = load float, float addrspace(1)* %157, align 4, !tbaa !7\l  %168 = fadd contract float %166, %167\l  %169 = getelementptr inbounds float, float addrspace(1)* %3, i64 %148\l  store float %168, float addrspace(1)* %169, align 4, !tbaa !7\l  %170 = getelementptr inbounds float, float addrspace(1)* %96, i64 %148\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !7\l  %172 = load float, float addrspace(1)* %151, align 4, !tbaa !7\l  %173 = fadd contract float %171, %172\l  %174 = load float, float addrspace(1)* %154, align 4, !tbaa !7\l  %175 = fadd contract float %173, %174\l  br label %176\l}"];
	Node0x59c4ed0 -> Node0x59c7820;
	Node0x59c7820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%176:\l176:                                              \l  %177 = phi float addrspace(1)* [ %129, %122 ], [ %157, %147 ], [ %108, %104 ]\l  %178 = phi float [ %143, %122 ], [ %175, %147 ], [ %118, %104 ]\l  %179 = phi i64 [ %123, %122 ], [ %148, %147 ], [ %105, %104 ]\l  %180 = load float, float addrspace(1)* %177, align 4, !tbaa !7\l  %181 = fadd contract float %178, %180\l  %182 = getelementptr inbounds float, float addrspace(1)* %4, i64 %179\l  store float %181, float addrspace(1)* %182, align 4, !tbaa !7\l  br label %183\l}"];
	Node0x59c7820 -> Node0x59c8e80;
	Node0x59c8e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%183:\l183:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %184 = shl nsw i32 %7, 1\l  %185 = icmp eq i32 %184, %5\l  br i1 %185, label %186, label %209\l|{<s0>T|<s1>F}}"];
	Node0x59c8e80:s0 -> Node0x59ca990;
	Node0x59c8e80:s1 -> Node0x59ca9e0;
	Node0x59ca990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%186:\l186:                                              \l  %187 = shl i32 %22, 1\l  %188 = zext i32 %187 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %2, i64 %188\l  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !7\l  %191 = add nuw nsw i32 %187, 1\l  %192 = zext i32 %191 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %2, i64 %192\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !7\l  %195 = fadd contract float %190, %194\l  %196 = fmul contract float %10, 5.000000e-01\l  %197 = fmul contract float %196, %195\l  %198 = zext i32 %22 to i64\l  %199 = getelementptr inbounds float, float addrspace(1)* %101, i64 %198\l  store float %197, float addrspace(1)* %199, align 4, !tbaa !7\l  %200 = getelementptr inbounds float, float addrspace(1)* %3, i64 %188\l  %201 = load float, float addrspace(1)* %200, align 4, !tbaa !7\l  %202 = getelementptr inbounds float, float addrspace(1)* %3, i64 %192\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7\l  %204 = fadd contract float %201, %203\l  %205 = fmul contract float %196, %204\l  %206 = getelementptr inbounds float, float addrspace(1)* %102, i64 %198\l  store float %205, float addrspace(1)* %206, align 4, !tbaa !7\l  %207 = getelementptr inbounds float, float addrspace(1)* %4, i64 %188\l  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !7\l  br label %295\l}"];
	Node0x59ca990 -> Node0x59c0080;
	Node0x59ca9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%209:\l209:                                              \l  %210 = mul nsw i32 %7, 3\l  %211 = icmp eq i32 %210, %5\l  br i1 %211, label %212, label %246\l|{<s0>T|<s1>F}}"];
	Node0x59ca9e0:s0 -> Node0x59c44d0;
	Node0x59ca9e0:s1 -> Node0x59c4520;
	Node0x59c44d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%212:\l212:                                              \l  %213 = mul i32 %22, 3\l  %214 = zext i32 %213 to i64\l  %215 = getelementptr inbounds float, float addrspace(1)* %2, i64 %214\l  %216 = load float, float addrspace(1)* %215, align 4, !tbaa !7\l  %217 = add i32 %213, 1\l  %218 = zext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %2, i64 %218\l  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !7\l  %221 = fadd contract float %216, %220\l  %222 = add i32 %213, 2\l  %223 = zext i32 %222 to i64\l  %224 = getelementptr inbounds float, float addrspace(1)* %2, i64 %223\l  %225 = load float, float addrspace(1)* %224, align 4, !tbaa !7\l  %226 = fadd contract float %221, %225\l  %227 = fdiv contract float %10, 3.000000e+00\l  %228 = fmul contract float %227, %226\l  %229 = zext i32 %22 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %101, i64 %229\l  store float %228, float addrspace(1)* %230, align 4, !tbaa !7\l  %231 = getelementptr inbounds float, float addrspace(1)* %3, i64 %214\l  %232 = load float, float addrspace(1)* %231, align 4, !tbaa !7\l  %233 = getelementptr inbounds float, float addrspace(1)* %3, i64 %218\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !7\l  %235 = fadd contract float %232, %234\l  %236 = getelementptr inbounds float, float addrspace(1)* %3, i64 %223\l  %237 = load float, float addrspace(1)* %236, align 4, !tbaa !7\l  %238 = fadd contract float %235, %237\l  %239 = fmul contract float %227, %238\l  %240 = getelementptr inbounds float, float addrspace(1)* %102, i64 %229\l  store float %239, float addrspace(1)* %240, align 4, !tbaa !7\l  %241 = getelementptr inbounds float, float addrspace(1)* %4, i64 %214\l  %242 = load float, float addrspace(1)* %241, align 4, !tbaa !7\l  %243 = getelementptr inbounds float, float addrspace(1)* %4, i64 %218\l  %244 = load float, float addrspace(1)* %243, align 4, !tbaa !7\l  %245 = fadd contract float %242, %244\l  br label %295\l}"];
	Node0x59c44d0 -> Node0x59c0080;
	Node0x59c4520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%246:\l246:                                              \l  %247 = shl nsw i32 %7, 2\l  %248 = icmp eq i32 %247, %5\l  br i1 %248, label %249, label %305\l|{<s0>T|<s1>F}}"];
	Node0x59c4520:s0 -> Node0x59ceaa0;
	Node0x59c4520:s1 -> Node0x59ceaf0;
	Node0x59ceaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%249:\l249:                                              \l  %250 = shl i32 %22, 2\l  %251 = zext i32 %250 to i64\l  %252 = getelementptr inbounds float, float addrspace(1)* %2, i64 %251\l  %253 = load float, float addrspace(1)* %252, align 4, !tbaa !7\l  %254 = add nuw nsw i32 %250, 1\l  %255 = zext i32 %254 to i64\l  %256 = getelementptr inbounds float, float addrspace(1)* %2, i64 %255\l  %257 = load float, float addrspace(1)* %256, align 4, !tbaa !7\l  %258 = fadd contract float %253, %257\l  %259 = add nuw nsw i32 %250, 2\l  %260 = zext i32 %259 to i64\l  %261 = getelementptr inbounds float, float addrspace(1)* %2, i64 %260\l  %262 = load float, float addrspace(1)* %261, align 4, !tbaa !7\l  %263 = fadd contract float %258, %262\l  %264 = add nuw nsw i32 %250, 3\l  %265 = zext i32 %264 to i64\l  %266 = getelementptr inbounds float, float addrspace(1)* %2, i64 %265\l  %267 = load float, float addrspace(1)* %266, align 4, !tbaa !7\l  %268 = fadd contract float %263, %267\l  %269 = fmul contract float %10, 2.500000e-01\l  %270 = fmul contract float %269, %268\l  %271 = zext i32 %22 to i64\l  %272 = getelementptr inbounds float, float addrspace(1)* %101, i64 %271\l  store float %270, float addrspace(1)* %272, align 4, !tbaa !7\l  %273 = getelementptr inbounds float, float addrspace(1)* %3, i64 %251\l  %274 = load float, float addrspace(1)* %273, align 4, !tbaa !7\l  %275 = getelementptr inbounds float, float addrspace(1)* %3, i64 %255\l  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !7\l  %277 = fadd contract float %274, %276\l  %278 = getelementptr inbounds float, float addrspace(1)* %3, i64 %260\l  %279 = load float, float addrspace(1)* %278, align 4, !tbaa !7\l  %280 = fadd contract float %277, %279\l  %281 = getelementptr inbounds float, float addrspace(1)* %3, i64 %265\l  %282 = load float, float addrspace(1)* %281, align 4, !tbaa !7\l  %283 = fadd contract float %280, %282\l  %284 = fmul contract float %269, %283\l  %285 = getelementptr inbounds float, float addrspace(1)* %102, i64 %271\l  store float %284, float addrspace(1)* %285, align 4, !tbaa !7\l  %286 = getelementptr inbounds float, float addrspace(1)* %4, i64 %251\l  %287 = bitcast float addrspace(1)* %286 to \<2 x float\> addrspace(1)*\l  %288 = load \<2 x float\>, \<2 x float\> addrspace(1)* %287, align 4, !tbaa !7\l  %289 = extractelement \<2 x float\> %288, i64 0\l  %290 = extractelement \<2 x float\> %288, i64 1\l  %291 = fadd contract float %289, %290\l  %292 = getelementptr inbounds float, float addrspace(1)* %4, i64 %260\l  %293 = load float, float addrspace(1)* %292, align 4, !tbaa !7\l  %294 = fadd contract float %291, %293\l  br label %295\l}"];
	Node0x59ceaa0 -> Node0x59c0080;
	Node0x59c0080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%295:\l295:                                              \l  %296 = phi i64 [ %223, %212 ], [ %265, %249 ], [ %192, %186 ]\l  %297 = phi float [ %245, %212 ], [ %294, %249 ], [ %208, %186 ]\l  %298 = phi float [ %227, %212 ], [ %269, %249 ], [ %196, %186 ]\l  %299 = phi i64 [ %229, %212 ], [ %271, %249 ], [ %198, %186 ]\l  %300 = getelementptr inbounds float, float addrspace(1)* %4, i64 %296\l  %301 = load float, float addrspace(1)* %300, align 4, !tbaa !7\l  %302 = fadd contract float %297, %301\l  %303 = fmul contract float %298, %302\l  %304 = getelementptr inbounds float, float addrspace(1)* %103, i64 %299\l  store float %303, float addrspace(1)* %304, align 4, !tbaa !7\l  br label %305\l}"];
	Node0x59c0080 -> Node0x59ceaf0;
	Node0x59ceaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%305:\l305:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %306\l}"];
	Node0x59ceaf0 -> Node0x59c2f40;
	Node0x59c2f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%306:\l306:                                              \l  ret void\l}"];
}
