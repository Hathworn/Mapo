digraph "CFG for '_Z26convolution_forward_kernelPfS_S_S_iiiiiif' function" {
	label="CFG for '_Z26convolution_forward_kernelPfS_S_S_iiiiiif' function";

	Node0x47f4a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = sdiv i32 %4, 32\l  %14 = freeze i32 %12\l  %15 = freeze i32 %13\l  %16 = udiv i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = freeze i32 %17\l  %19 = freeze i32 %13\l  %20 = udiv i32 %18, %19\l  %21 = mul i32 %20, %19\l  %22 = sub i32 %18, %21\l  %23 = shl i32 %22, 5\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %25 = add i32 %23, %24\l  %26 = mul i32 %16, %15\l  %27 = sub i32 %14, %26\l  %28 = shl i32 %27, 5\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %30 = add i32 %28, %29\l  %31 = icmp sgt i32 %5, 0\l  br i1 %31, label %32, label %81\l|{<s0>T|<s1>F}}"];
	Node0x47f4a60:s0 -> Node0x47f7ab0;
	Node0x47f4a60:s1 -> Node0x47f7b40;
	Node0x47f7ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%32:\l32:                                               \l  %33 = icmp ult i32 %24, %7\l  %34 = icmp ult i32 %29, %7\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = mul nsw i32 %20, %5\l  %37 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %29, i32 %24\l  %38 = mul i32 %4, %4\l  %39 = mul i32 %38, %5\l  %40 = mul i32 %39, %16\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE5shImg, i32 0,\l... i32 %29, i32 %24\l  %44 = icmp slt i32 %25, %9\l  %45 = icmp slt i32 %30, %9\l  %46 = select i1 %44, i1 true, i1 %45\l  %47 = sub nsw i32 %30, %9\l  %48 = mul nsw i32 %47, %4\l  %49 = sub i32 %25, %9\l  %50 = add nsw i32 %49, %48\l  %51 = sext i32 %50 to i64\l  %52 = icmp ult i32 %24, 7\l  %53 = add nuw nsw i32 %24, 32\l  %54 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE5shImg, i32 0,\l... i32 %29, i32 %53\l  %55 = add nsw i32 %25, 32\l  %56 = add nsw i32 %9, %4\l  %57 = icmp sge i32 %55, %56\l  %58 = sub i32 %55, %9\l  %59 = add nsw i32 %58, %48\l  %60 = sext i32 %59 to i64\l  %61 = icmp ult i32 %29, 7\l  %62 = add nuw nsw i32 %29, 32\l  %63 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE5shImg, i32 0,\l... i32 %62, i32 %24\l  %64 = add nsw i32 %30, 32\l  %65 = icmp sge i32 %64, %56\l  %66 = sub nsw i32 %64, %9\l  %67 = mul nsw i32 %66, %4\l  %68 = add nsw i32 %49, %67\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds [39 x [39 x float]], [39 x [39 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE5shImg, i32 0,\l... i32 %62, i32 %53\l  %71 = add nsw i32 %58, %67\l  %72 = sext i32 %71 to i64\l  %73 = icmp sgt i32 %7, 0\l  %74 = select i1 %45, i1 true, i1 %57\l  %75 = select i1 %44, i1 true, i1 %65\l  %76 = select i1 %65, i1 true, i1 %57\l  %77 = and i32 %7, 7\l  %78 = icmp ult i32 %7, 8\l  %79 = and i32 %7, -8\l  %80 = icmp eq i32 %77, 0\l  br label %103\l}"];
	Node0x47f7ab0 -> Node0x47f9dc0;
	Node0x47f7b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%81:\l81:                                               \l  %82 = phi float [ 0.000000e+00, %11 ], [ %149, %148 ]\l  %83 = sext i32 %25 to i64\l  %84 = mul i32 %6, %6\l  %85 = mul i32 %84, %8\l  %86 = mul i32 %85, %16\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = mul nsw i32 %84, %20\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %88, i64 %90\l  %92 = mul nsw i32 %30, %6\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %91, i64 %93\l  %95 = getelementptr inbounds float, float addrspace(1)* %94, i64 %83\l  %96 = sext i32 %20 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %3, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %99 = fadd contract float %82, %98\l  %100 = fmul contract float %10, %10\l  %101 = fdiv contract float 1.000000e+00, %100\l  %102 = fmul contract float %101, %99\l  store float %102, float addrspace(1)* %95, align 4, !tbaa !5\l  ret void\l}"];
	Node0x47f9dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%103:\l103:                                              \l  %104 = phi float [ 0.000000e+00, %32 ], [ %149, %148 ]\l  %105 = phi i32 [ 0, %32 ], [ %150, %148 ]\l  br i1 %35, label %106, label %115\l|{<s0>T|<s1>F}}"];
	Node0x47f9dc0:s0 -> Node0x47fc090;
	Node0x47f9dc0:s1 -> Node0x47fc120;
	Node0x47fc090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%106:\l106:                                              \l  %107 = add i32 %105, %36\l  %108 = mul i32 %107, %7\l  %109 = add i32 %108, %29\l  %110 = mul i32 %109, %7\l  %111 = add i32 %110, %24\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %114, float addrspace(3)* %37, align 4, !tbaa !5\l  br label %115\l}"];
	Node0x47fc090 -> Node0x47fc120;
	Node0x47fc120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%115:\l115:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %116 = mul i32 %38, %105\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %42, i64 %117\l  br i1 %46, label %122, label %119\l|{<s0>T|<s1>F}}"];
	Node0x47fc120:s0 -> Node0x47fd220;
	Node0x47fc120:s1 -> Node0x47fd2b0;
	Node0x47fd2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds float, float addrspace(1)* %118, i64 %51\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %122\l}"];
	Node0x47fd2b0 -> Node0x47fd220;
	Node0x47fd220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%122:\l122:                                              \l  %123 = phi float [ %121, %119 ], [ 0.000000e+00, %115 ]\l  store float %123, float addrspace(3)* %43, align 4, !tbaa !5\l  br i1 %52, label %124, label %130\l|{<s0>T|<s1>F}}"];
	Node0x47fd220:s0 -> Node0x47fd6f0;
	Node0x47fd220:s1 -> Node0x47fd740;
	Node0x47fd6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%124:\l124:                                              \l  br i1 %74, label %128, label %125\l|{<s0>T|<s1>F}}"];
	Node0x47fd6f0:s0 -> Node0x47fd880;
	Node0x47fd6f0:s1 -> Node0x47fd8d0;
	Node0x47fd8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%125:\l125:                                              \l  %126 = getelementptr inbounds float, float addrspace(1)* %118, i64 %60\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %128\l}"];
	Node0x47fd8d0 -> Node0x47fd880;
	Node0x47fd880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %125 ], [ 0.000000e+00, %124 ]\l  store float %129, float addrspace(3)* %54, align 4, !tbaa !5\l  br label %130\l}"];
	Node0x47fd880 -> Node0x47fd740;
	Node0x47fd740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%130:\l130:                                              \l  br i1 %61, label %131, label %143\l|{<s0>T|<s1>F}}"];
	Node0x47fd740:s0 -> Node0x47f9380;
	Node0x47fd740:s1 -> Node0x47f93d0;
	Node0x47f9380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%131:\l131:                                              \l  br i1 %75, label %135, label %132\l|{<s0>T|<s1>F}}"];
	Node0x47f9380:s0 -> Node0x47f94d0;
	Node0x47f9380:s1 -> Node0x47f9520;
	Node0x47f9520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds float, float addrspace(1)* %118, i64 %69\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %135\l}"];
	Node0x47f9520 -> Node0x47f94d0;
	Node0x47f94d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%135:\l135:                                              \l  %136 = phi float [ %134, %132 ], [ 0.000000e+00, %131 ]\l  store float %136, float addrspace(3)* %63, align 4, !tbaa !5\l  br i1 %52, label %137, label %143\l|{<s0>T|<s1>F}}"];
	Node0x47f94d0:s0 -> Node0x47fe6c0;
	Node0x47f94d0:s1 -> Node0x47f93d0;
	Node0x47fe6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%137:\l137:                                              \l  br i1 %76, label %141, label %138\l|{<s0>T|<s1>F}}"];
	Node0x47fe6c0:s0 -> Node0x47fe7c0;
	Node0x47fe6c0:s1 -> Node0x47fe810;
	Node0x47fe810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%138:\l138:                                              \l  %139 = getelementptr inbounds float, float addrspace(1)* %118, i64 %72\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %141\l}"];
	Node0x47fe810 -> Node0x47fe7c0;
	Node0x47fe7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%141:\l141:                                              \l  %142 = phi float [ %140, %138 ], [ 0.000000e+00, %137 ]\l  store float %142, float addrspace(3)* %70, align 4, !tbaa !5\l  br label %143\l}"];
	Node0x47fe7c0 -> Node0x47f93d0;
	Node0x47f93d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%143:\l143:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %73, label %144, label %148\l|{<s0>T|<s1>F}}"];
	Node0x47f93d0:s0 -> Node0x47fee40;
	Node0x47f93d0:s1 -> Node0x47fa8d0;
	Node0x47fee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%144:\l144:                                              \l  %145 = phi i32 [ %172, %169 ], [ 0, %143 ]\l  %146 = phi float addrspace(3)* [ %171, %169 ], [ %43, %143 ]\l  %147 = phi float [ %170, %169 ], [ %104, %143 ]\l  br i1 %78, label %152, label %174\l|{<s0>T|<s1>F}}"];
	Node0x47fee40:s0 -> Node0x47ff240;
	Node0x47fee40:s1 -> Node0x47ff2d0;
	Node0x47fa8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%148:\l148:                                              \l  %149 = phi float [ %104, %143 ], [ %170, %169 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %150 = add nuw nsw i32 %105, 1\l  %151 = icmp eq i32 %150, %5\l  br i1 %151, label %81, label %103, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x47fa8d0:s0 -> Node0x47f7b40;
	Node0x47fa8d0:s1 -> Node0x47f9dc0;
	Node0x47ff240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%152:\l152:                                              \l  %153 = phi float [ undef, %144 ], [ %232, %174 ]\l  %154 = phi i32 [ 0, %144 ], [ %233, %174 ]\l  %155 = phi float [ %147, %144 ], [ %232, %174 ]\l  br i1 %80, label %169, label %156\l|{<s0>T|<s1>F}}"];
	Node0x47ff240:s0 -> Node0x47fef40;
	Node0x47ff240:s1 -> Node0x47ffb00;
	Node0x47ffb00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%156:\l156:                                              \l  %157 = phi i32 [ %166, %156 ], [ %154, %152 ]\l  %158 = phi float [ %165, %156 ], [ %155, %152 ]\l  %159 = phi i32 [ %167, %156 ], [ 0, %152 ]\l  %160 = getelementptr inbounds float, float addrspace(3)* %146, i32 %157\l  %161 = load float, float addrspace(3)* %160, align 4, !tbaa !5\l  %162 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %157\l  %163 = load float, float addrspace(3)* %162, align 4, !tbaa !5\l  %164 = fmul contract float %161, %163\l  %165 = fadd contract float %158, %164\l  %166 = add nuw nsw i32 %157, 1\l  %167 = add i32 %159, 1\l  %168 = icmp eq i32 %167, %77\l  br i1 %168, label %169, label %156, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x47ffb00:s0 -> Node0x47fef40;
	Node0x47ffb00:s1 -> Node0x47ffb00;
	Node0x47fef40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%169:\l169:                                              \l  %170 = phi float [ %153, %152 ], [ %165, %156 ]\l  %171 = getelementptr inbounds float, float addrspace(3)* %146, i32 39\l  %172 = add nuw nsw i32 %145, 1\l  %173 = icmp eq i32 %172, %7\l  br i1 %173, label %148, label %144, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47fef40:s0 -> Node0x47fa8d0;
	Node0x47fef40:s1 -> Node0x47fee40;
	Node0x47ff2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%174:\l174:                                              \l  %175 = phi i32 [ %233, %174 ], [ 0, %144 ]\l  %176 = phi float [ %232, %174 ], [ %147, %144 ]\l  %177 = phi i32 [ %234, %174 ], [ 0, %144 ]\l  %178 = getelementptr inbounds float, float addrspace(3)* %146, i32 %175\l  %179 = load float, float addrspace(3)* %178, align 4, !tbaa !5\l  %180 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %175\l  %181 = load float, float addrspace(3)* %180, align 16, !tbaa !5\l  %182 = fmul contract float %179, %181\l  %183 = fadd contract float %176, %182\l  %184 = or i32 %175, 1\l  %185 = getelementptr inbounds float, float addrspace(3)* %146, i32 %184\l  %186 = load float, float addrspace(3)* %185, align 4, !tbaa !5\l  %187 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %184\l  %188 = load float, float addrspace(3)* %187, align 4, !tbaa !5\l  %189 = fmul contract float %186, %188\l  %190 = fadd contract float %183, %189\l  %191 = or i32 %175, 2\l  %192 = getelementptr inbounds float, float addrspace(3)* %146, i32 %191\l  %193 = load float, float addrspace(3)* %192, align 4, !tbaa !5\l  %194 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %191\l  %195 = load float, float addrspace(3)* %194, align 8, !tbaa !5\l  %196 = fmul contract float %193, %195\l  %197 = fadd contract float %190, %196\l  %198 = or i32 %175, 3\l  %199 = getelementptr inbounds float, float addrspace(3)* %146, i32 %198\l  %200 = load float, float addrspace(3)* %199, align 4, !tbaa !5\l  %201 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %198\l  %202 = load float, float addrspace(3)* %201, align 4, !tbaa !5\l  %203 = fmul contract float %200, %202\l  %204 = fadd contract float %197, %203\l  %205 = or i32 %175, 4\l  %206 = getelementptr inbounds float, float addrspace(3)* %146, i32 %205\l  %207 = load float, float addrspace(3)* %206, align 4, !tbaa !5\l  %208 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %205\l  %209 = load float, float addrspace(3)* %208, align 16, !tbaa !5\l  %210 = fmul contract float %207, %209\l  %211 = fadd contract float %204, %210\l  %212 = or i32 %175, 5\l  %213 = getelementptr inbounds float, float addrspace(3)* %146, i32 %212\l  %214 = load float, float addrspace(3)* %213, align 4, !tbaa !5\l  %215 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %212\l  %216 = load float, float addrspace(3)* %215, align 4, !tbaa !5\l  %217 = fmul contract float %214, %216\l  %218 = fadd contract float %211, %217\l  %219 = or i32 %175, 6\l  %220 = getelementptr inbounds float, float addrspace(3)* %146, i32 %219\l  %221 = load float, float addrspace(3)* %220, align 4, !tbaa !5\l  %222 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %219\l  %223 = load float, float addrspace(3)* %222, align 8, !tbaa !5\l  %224 = fmul contract float %221, %223\l  %225 = fadd contract float %218, %224\l  %226 = or i32 %175, 7\l  %227 = getelementptr inbounds float, float addrspace(3)* %146, i32 %226\l  %228 = load float, float addrspace(3)* %227, align 4, !tbaa !5\l  %229 = getelementptr inbounds [8 x [8 x float]], [8 x [8 x float]]\l... addrspace(3)* @_ZZ26convolution_forward_kernelPfS_S_S_iiiiiifE8shFilter, i32\l... 0, i32 %145, i32 %226\l  %230 = load float, float addrspace(3)* %229, align 4, !tbaa !5\l  %231 = fmul contract float %228, %230\l  %232 = fadd contract float %225, %231\l  %233 = add nuw nsw i32 %175, 8\l  %234 = add i32 %177, 8\l  %235 = icmp eq i32 %234, %79\l  br i1 %235, label %152, label %174, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x47ff2d0:s0 -> Node0x47ff240;
	Node0x47ff2d0:s1 -> Node0x47ff2d0;
}
