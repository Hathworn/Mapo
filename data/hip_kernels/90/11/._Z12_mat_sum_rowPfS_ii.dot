digraph "CFG for '_Z12_mat_sum_rowPfS_ii' function" {
	label="CFG for '_Z12_mat_sum_rowPfS_ii' function";

	Node0x5f72ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5f72ee0:s0 -> Node0x5f74df0;
	Node0x5f72ee0:s1 -> Node0x5f74e80;
	Node0x5f74df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %3, 0\l  br i1 %16, label %17, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5f74df0:s0 -> Node0x5f73a90;
	Node0x5f74df0:s1 -> Node0x5f75160;
	Node0x5f73a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %13, %3\l  %19 = and i32 %3, 7\l  %20 = icmp ult i32 %3, 8\l  br i1 %20, label %23, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5f73a90:s0 -> Node0x5f75470;
	Node0x5f73a90:s1 -> Node0x5f754c0;
	Node0x5f754c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %3, -8\l  br label %44\l}"];
	Node0x5f754c0 -> Node0x5f756c0;
	Node0x5f75470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = phi float [ undef, %17 ], [ %94, %44 ]\l  %25 = phi i32 [ 0, %17 ], [ %95, %44 ]\l  %26 = phi float [ 0.000000e+00, %17 ], [ %94, %44 ]\l  %27 = icmp eq i32 %19, 0\l  br i1 %27, label %40, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5f75470:s0 -> Node0x5f75160;
	Node0x5f75470:s1 -> Node0x5f76930;
	Node0x5f76930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %37, %28 ], [ %25, %23 ]\l  %30 = phi float [ %36, %28 ], [ %26, %23 ]\l  %31 = phi i32 [ %38, %28 ], [ 0, %23 ]\l  %32 = add nsw i32 %29, %18\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fadd contract float %30, %35\l  %37 = add nuw nsw i32 %29, 1\l  %38 = add i32 %31, 1\l  %39 = icmp eq i32 %38, %19\l  br i1 %39, label %40, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f76930:s0 -> Node0x5f75160;
	Node0x5f76930:s1 -> Node0x5f76930;
	Node0x5f75160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %15 ], [ %24, %23 ], [ %36, %28 ]\l  %42 = sext i32 %13 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  store float %41, float addrspace(1)* %43, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x5f75160 -> Node0x5f74e80;
	Node0x5f756c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %21 ], [ %95, %44 ]\l  %46 = phi float [ 0.000000e+00, %21 ], [ %94, %44 ]\l  %47 = phi i32 [ 0, %21 ], [ %96, %44 ]\l  %48 = add nsw i32 %45, %18\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fadd contract float %46, %51\l  %53 = or i32 %45, 1\l  %54 = add nsw i32 %53, %18\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fadd contract float %52, %57\l  %59 = or i32 %45, 2\l  %60 = add nsw i32 %59, %18\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fadd contract float %58, %63\l  %65 = or i32 %45, 3\l  %66 = add nsw i32 %65, %18\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fadd contract float %64, %69\l  %71 = or i32 %45, 4\l  %72 = add nsw i32 %71, %18\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fadd contract float %70, %75\l  %77 = or i32 %45, 5\l  %78 = add nsw i32 %77, %18\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %82 = fadd contract float %76, %81\l  %83 = or i32 %45, 6\l  %84 = add nsw i32 %83, %18\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fadd contract float %82, %87\l  %89 = or i32 %45, 7\l  %90 = add nsw i32 %89, %18\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fadd contract float %88, %93\l  %95 = add nuw nsw i32 %45, 8\l  %96 = add i32 %47, 8\l  %97 = icmp eq i32 %96, %22\l  br i1 %97, label %23, label %44, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f756c0:s0 -> Node0x5f75470;
	Node0x5f756c0:s1 -> Node0x5f756c0;
	Node0x5f74e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%98:\l98:                                               \l  ret void\l}"];
}
