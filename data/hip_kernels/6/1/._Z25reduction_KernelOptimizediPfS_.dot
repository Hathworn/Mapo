digraph "CFG for '_Z25reduction_KernelOptimizediPfS_' function" {
	label="CFG for '_Z25reduction_KernelOptimizediPfS_' function";

	Node0x4fd5d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = zext i32 %12 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %16 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sPartArray, i32 0, i32 %4\l  store float %15, float addrspace(3)* %16, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = icmp ult i16 %9, 2\l  br i1 %17, label %18, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4fd5d50:s0 -> Node0x4fd9090;
	Node0x4fd5d50:s1 -> Node0x4fd9120;
	Node0x4fd9090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = icmp eq i32 %4, 0\l  br i1 %19, label %32, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4fd9090:s0 -> Node0x4fd92f0;
	Node0x4fd9090:s1 -> Node0x4fd9340;
	Node0x4fd9120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %22, %30 ], [ %10, %3 ]\l  %22 = lshr i32 %21, 1\l  %23 = icmp ult i32 %4, %22\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4fd9120:s0 -> Node0x4fd9740;
	Node0x4fd9120:s1 -> Node0x4fd94b0;
	Node0x4fd9740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%24:\l24:                                               \l  %25 = add nuw nsw i32 %22, %4\l  %26 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sPartArray, i32 0, i32 %25\l  %27 = load float, float addrspace(3)* %26, align 4, !tbaa !7\l  %28 = load float, float addrspace(3)* %16, align 4, !tbaa !7\l  %29 = fadd contract float %27, %28\l  store float %29, float addrspace(3)* %16, align 4, !tbaa !7\l  br label %30\l}"];
	Node0x4fd9740 -> Node0x4fd94b0;
	Node0x4fd94b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = icmp ult i32 %21, 4\l  br i1 %31, label %18, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4fd94b0:s0 -> Node0x4fd9090;
	Node0x4fd94b0:s1 -> Node0x4fd9120;
	Node0x4fd92f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%32:\l32:                                               \l  %33 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sPartArray, i32 0, i32 0), align 4, !tbaa !7\l  %34 = zext i32 %5 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  store float %33, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %36\l}"];
	Node0x4fd92f0 -> Node0x4fd9340;
	Node0x4fd9340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%36:\l36:                                               \l  ret void\l}"];
}
