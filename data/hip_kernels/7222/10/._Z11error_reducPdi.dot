digraph "CFG for '_Z11error_reducPdi' function" {
	label="CFG for '_Z11error_reducPdi' function";

	Node0x5f3f5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = zext i32 %3 to i64\l  %5 = getelementptr inbounds double, double addrspace(1)* %0, i64 %4\l  %6 = load double, double addrspace(1)* %5, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %7 = getelementptr inbounds [55 x double], [55 x double] addrspace(3)*\l... @_ZZ11error_reducPdiE8error_ds, i32 0, i32 %3\l  store double %6, double addrspace(3)* %7, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %8 = icmp eq i32 %3, 0\l  br i1 %8, label %9, label %473\l|{<s0>T|<s1>F}}"];
	Node0x5f3f5e0:s0 -> Node0x5f40410;
	Node0x5f3f5e0:s1 -> Node0x5f42310;
	Node0x5f40410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%9:\l9:                                                \l  %10 = load double, double addrspace(3)* %7, align 8, !tbaa !5\l  %11 = fdiv contract double %10, 5.500000e+01\l  store double %11, double addrspace(3)* %7, align 8, !tbaa !5\l  %12 = fmul contract double %11, 1.000000e+02\l  %13 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 24\l  %15 = bitcast i8 addrspace(4)* %14 to i64 addrspace(4)*\l  %16 = load i64, i64 addrspace(4)* %15, align 8, !tbaa !10\l  %17 = inttoptr i64 %16 to i8 addrspace(1)*\l  %18 = addrspacecast i8 addrspace(1)* %17 to i8*\l  %19 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %18,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %20 = extractelement \<2 x i64\> %19, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([15 x i8], [15 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f40410:s0 -> Node0x5f43f60;
	Node0x5f40410:s1 -> Node0x5f44950;
	Node0x5f43f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%21:\l21:                                               \l  %22 = and i64 %20, -225\l  %23 = or i64 %22, 32\l  %24 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %18,\l... i64 noundef %23, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %466\l}"];
	Node0x5f43f60 -> Node0x5f44c10;
	Node0x5f44950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = and i64 %20, 2\l  %27 = and i64 %20, -3\l  %28 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %27, i64 0\l  br label %29\l}"];
	Node0x5f44950 -> Node0x5f457b0;
	Node0x5f457b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%29:\l29:                                               \l  %30 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)*\l... @.str, i64 0, i64 14) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([15 x i8]* addrspacecast ([15 x i8] addrspace(4)* @.str to [15 x i8]*) to\l... i64)), i64 1))), %25 ], [ %463, %455 ]\l  %31 = phi i8 addrspace(4)* [ getelementptr inbounds ([15 x i8], [15 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %25 ], [ %464, %455 ]\l  %32 = phi \<2 x i64\> [ %28, %25 ], [ %462, %455 ]\l  %33 = icmp ugt i64 %30, 56\l  %34 = extractelement \<2 x i64\> %32, i64 0\l  %35 = or i64 %34, %26\l  %36 = insertelement \<2 x i64\> poison, i64 %35, i64 0\l  %37 = select i1 %33, \<2 x i64\> %32, \<2 x i64\> %36\l  %38 = tail call i64 @llvm.umin.i64(i64 %30, i64 56)\l  %39 = trunc i64 %38 to i32\l  %40 = extractelement \<2 x i64\> %37, i64 0\l  %41 = icmp ugt i32 %39, 7\l  br i1 %41, label %44, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5f457b0:s0 -> Node0x5f46800;
	Node0x5f457b0:s1 -> Node0x5f46890;
	Node0x5f46890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  %43 = icmp eq i32 %39, 0\l  br i1 %43, label %97, label %84\l|{<s0>T|<s1>F}}"];
	Node0x5f46890:s0 -> Node0x5f46a60;
	Node0x5f46890:s1 -> Node0x5f46ab0;
	Node0x5f46800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%44:\l44:                                               \l  %45 = load i8, i8 addrspace(4)* %31, align 1, !tbaa !14\l  %46 = zext i8 %45 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 1\l  %48 = load i8, i8 addrspace(4)* %47, align 1, !tbaa !14\l  %49 = zext i8 %48 to i64\l  %50 = shl nuw nsw i64 %49, 8\l  %51 = or i64 %50, %46\l  %52 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 2\l  %53 = load i8, i8 addrspace(4)* %52, align 1, !tbaa !14\l  %54 = zext i8 %53 to i64\l  %55 = shl nuw nsw i64 %54, 16\l  %56 = or i64 %51, %55\l  %57 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 3\l  %58 = load i8, i8 addrspace(4)* %57, align 1, !tbaa !14\l  %59 = zext i8 %58 to i64\l  %60 = shl nuw nsw i64 %59, 24\l  %61 = or i64 %56, %60\l  %62 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 4\l  %63 = load i8, i8 addrspace(4)* %62, align 1, !tbaa !14\l  %64 = zext i8 %63 to i64\l  %65 = shl nuw nsw i64 %64, 32\l  %66 = or i64 %61, %65\l  %67 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 5\l  %68 = load i8, i8 addrspace(4)* %67, align 1, !tbaa !14\l  %69 = zext i8 %68 to i64\l  %70 = shl nuw nsw i64 %69, 40\l  %71 = or i64 %66, %70\l  %72 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 6\l  %73 = load i8, i8 addrspace(4)* %72, align 1, !tbaa !14\l  %74 = zext i8 %73 to i64\l  %75 = shl nuw nsw i64 %74, 48\l  %76 = or i64 %71, %75\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 7\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !14\l  %79 = zext i8 %78 to i64\l  %80 = shl nuw i64 %79, 56\l  %81 = or i64 %76, %80\l  %82 = add nsw i32 %39, -8\l  %83 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 8\l  br label %97\l}"];
	Node0x5f46800 -> Node0x5f46a60;
	Node0x5f46ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = phi i32 [ %95, %84 ], [ 0, %42 ]\l  %86 = phi i64 [ %94, %84 ], [ 0, %42 ]\l  %87 = zext i32 %85 to i64\l  %88 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 %87\l  %89 = load i8, i8 addrspace(4)* %88, align 1, !tbaa !14\l  %90 = zext i8 %89 to i64\l  %91 = shl i32 %85, 3\l  %92 = zext i32 %91 to i64\l  %93 = shl nuw i64 %90, %92\l  %94 = or i64 %93, %86\l  %95 = add nuw nsw i32 %85, 1\l  %96 = icmp eq i32 %95, %39\l  br i1 %96, label %97, label %84, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5f46ab0:s0 -> Node0x5f46a60;
	Node0x5f46ab0:s1 -> Node0x5f46ab0;
	Node0x5f46a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%97:\l97:                                               \l  %98 = phi i8 addrspace(4)* [ %83, %44 ], [ %31, %42 ], [ %31, %84 ]\l  %99 = phi i32 [ %82, %44 ], [ 0, %42 ], [ 0, %84 ]\l  %100 = phi i64 [ %81, %44 ], [ 0, %42 ], [ %94, %84 ]\l  %101 = icmp ugt i32 %99, 7\l  br i1 %101, label %104, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5f46a60:s0 -> Node0x5f497e0;
	Node0x5f46a60:s1 -> Node0x5f49830;
	Node0x5f49830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%102:\l102:                                              \l  %103 = icmp eq i32 %99, 0\l  br i1 %103, label %157, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5f49830:s0 -> Node0x5f49a00;
	Node0x5f49830:s1 -> Node0x5f49a50;
	Node0x5f497e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%104:\l104:                                              \l  %105 = load i8, i8 addrspace(4)* %98, align 1, !tbaa !14\l  %106 = zext i8 %105 to i64\l  %107 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 1\l  %108 = load i8, i8 addrspace(4)* %107, align 1, !tbaa !14\l  %109 = zext i8 %108 to i64\l  %110 = shl nuw nsw i64 %109, 8\l  %111 = or i64 %110, %106\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 2\l  %113 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !14\l  %114 = zext i8 %113 to i64\l  %115 = shl nuw nsw i64 %114, 16\l  %116 = or i64 %111, %115\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 3\l  %118 = load i8, i8 addrspace(4)* %117, align 1, !tbaa !14\l  %119 = zext i8 %118 to i64\l  %120 = shl nuw nsw i64 %119, 24\l  %121 = or i64 %116, %120\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 4\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !14\l  %124 = zext i8 %123 to i64\l  %125 = shl nuw nsw i64 %124, 32\l  %126 = or i64 %121, %125\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 5\l  %128 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !14\l  %129 = zext i8 %128 to i64\l  %130 = shl nuw nsw i64 %129, 40\l  %131 = or i64 %126, %130\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 6\l  %133 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !14\l  %134 = zext i8 %133 to i64\l  %135 = shl nuw nsw i64 %134, 48\l  %136 = or i64 %131, %135\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 7\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !14\l  %139 = zext i8 %138 to i64\l  %140 = shl nuw i64 %139, 56\l  %141 = or i64 %136, %140\l  %142 = add nsw i32 %99, -8\l  %143 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 8\l  br label %157\l}"];
	Node0x5f497e0 -> Node0x5f49a00;
	Node0x5f49a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%144:\l144:                                              \l  %145 = phi i32 [ %155, %144 ], [ 0, %102 ]\l  %146 = phi i64 [ %154, %144 ], [ 0, %102 ]\l  %147 = zext i32 %145 to i64\l  %148 = getelementptr inbounds i8, i8 addrspace(4)* %98, i64 %147\l  %149 = load i8, i8 addrspace(4)* %148, align 1, !tbaa !14\l  %150 = zext i8 %149 to i64\l  %151 = shl i32 %145, 3\l  %152 = zext i32 %151 to i64\l  %153 = shl nuw i64 %150, %152\l  %154 = or i64 %153, %146\l  %155 = add nuw nsw i32 %145, 1\l  %156 = icmp eq i32 %155, %99\l  br i1 %156, label %157, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5f49a50:s0 -> Node0x5f49a00;
	Node0x5f49a50:s1 -> Node0x5f49a50;
	Node0x5f49a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%157:\l157:                                              \l  %158 = phi i8 addrspace(4)* [ %143, %104 ], [ %98, %102 ], [ %98, %144 ]\l  %159 = phi i32 [ %142, %104 ], [ 0, %102 ], [ 0, %144 ]\l  %160 = phi i64 [ %141, %104 ], [ 0, %102 ], [ %154, %144 ]\l  %161 = icmp ugt i32 %159, 7\l  br i1 %161, label %164, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5f49a00:s0 -> Node0x5f4bf20;
	Node0x5f49a00:s1 -> Node0x5f4bf70;
	Node0x5f4bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%162:\l162:                                              \l  %163 = icmp eq i32 %159, 0\l  br i1 %163, label %217, label %204\l|{<s0>T|<s1>F}}"];
	Node0x5f4bf70:s0 -> Node0x5f4c100;
	Node0x5f4bf70:s1 -> Node0x5f4c150;
	Node0x5f4bf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%164:\l164:                                              \l  %165 = load i8, i8 addrspace(4)* %158, align 1, !tbaa !14\l  %166 = zext i8 %165 to i64\l  %167 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 1\l  %168 = load i8, i8 addrspace(4)* %167, align 1, !tbaa !14\l  %169 = zext i8 %168 to i64\l  %170 = shl nuw nsw i64 %169, 8\l  %171 = or i64 %170, %166\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 2\l  %173 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !14\l  %174 = zext i8 %173 to i64\l  %175 = shl nuw nsw i64 %174, 16\l  %176 = or i64 %171, %175\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 3\l  %178 = load i8, i8 addrspace(4)* %177, align 1, !tbaa !14\l  %179 = zext i8 %178 to i64\l  %180 = shl nuw nsw i64 %179, 24\l  %181 = or i64 %176, %180\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 4\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !14\l  %184 = zext i8 %183 to i64\l  %185 = shl nuw nsw i64 %184, 32\l  %186 = or i64 %181, %185\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 5\l  %188 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !14\l  %189 = zext i8 %188 to i64\l  %190 = shl nuw nsw i64 %189, 40\l  %191 = or i64 %186, %190\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 6\l  %193 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !14\l  %194 = zext i8 %193 to i64\l  %195 = shl nuw nsw i64 %194, 48\l  %196 = or i64 %191, %195\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 7\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !14\l  %199 = zext i8 %198 to i64\l  %200 = shl nuw i64 %199, 56\l  %201 = or i64 %196, %200\l  %202 = add nsw i32 %159, -8\l  %203 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 8\l  br label %217\l}"];
	Node0x5f4bf20 -> Node0x5f4c100;
	Node0x5f4c150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%204:\l204:                                              \l  %205 = phi i32 [ %215, %204 ], [ 0, %162 ]\l  %206 = phi i64 [ %214, %204 ], [ 0, %162 ]\l  %207 = zext i32 %205 to i64\l  %208 = getelementptr inbounds i8, i8 addrspace(4)* %158, i64 %207\l  %209 = load i8, i8 addrspace(4)* %208, align 1, !tbaa !14\l  %210 = zext i8 %209 to i64\l  %211 = shl i32 %205, 3\l  %212 = zext i32 %211 to i64\l  %213 = shl nuw i64 %210, %212\l  %214 = or i64 %213, %206\l  %215 = add nuw nsw i32 %205, 1\l  %216 = icmp eq i32 %215, %159\l  br i1 %216, label %217, label %204\l|{<s0>T|<s1>F}}"];
	Node0x5f4c150:s0 -> Node0x5f4c100;
	Node0x5f4c150:s1 -> Node0x5f4c150;
	Node0x5f4c100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%217:\l217:                                              \l  %218 = phi i8 addrspace(4)* [ %203, %164 ], [ %158, %162 ], [ %158, %204 ]\l  %219 = phi i32 [ %202, %164 ], [ 0, %162 ], [ 0, %204 ]\l  %220 = phi i64 [ %201, %164 ], [ 0, %162 ], [ %214, %204 ]\l  %221 = icmp ugt i32 %219, 7\l  br i1 %221, label %224, label %222\l|{<s0>T|<s1>F}}"];
	Node0x5f4c100:s0 -> Node0x5f4e1a0;
	Node0x5f4c100:s1 -> Node0x5f4e1f0;
	Node0x5f4e1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%222:\l222:                                              \l  %223 = icmp eq i32 %219, 0\l  br i1 %223, label %277, label %264\l|{<s0>T|<s1>F}}"];
	Node0x5f4e1f0:s0 -> Node0x5f4e380;
	Node0x5f4e1f0:s1 -> Node0x5f4e3d0;
	Node0x5f4e1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%224:\l224:                                              \l  %225 = load i8, i8 addrspace(4)* %218, align 1, !tbaa !14\l  %226 = zext i8 %225 to i64\l  %227 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 1\l  %228 = load i8, i8 addrspace(4)* %227, align 1, !tbaa !14\l  %229 = zext i8 %228 to i64\l  %230 = shl nuw nsw i64 %229, 8\l  %231 = or i64 %230, %226\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 2\l  %233 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !14\l  %234 = zext i8 %233 to i64\l  %235 = shl nuw nsw i64 %234, 16\l  %236 = or i64 %231, %235\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 3\l  %238 = load i8, i8 addrspace(4)* %237, align 1, !tbaa !14\l  %239 = zext i8 %238 to i64\l  %240 = shl nuw nsw i64 %239, 24\l  %241 = or i64 %236, %240\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 4\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !14\l  %244 = zext i8 %243 to i64\l  %245 = shl nuw nsw i64 %244, 32\l  %246 = or i64 %241, %245\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 5\l  %248 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !14\l  %249 = zext i8 %248 to i64\l  %250 = shl nuw nsw i64 %249, 40\l  %251 = or i64 %246, %250\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 6\l  %253 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !14\l  %254 = zext i8 %253 to i64\l  %255 = shl nuw nsw i64 %254, 48\l  %256 = or i64 %251, %255\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 7\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !14\l  %259 = zext i8 %258 to i64\l  %260 = shl nuw i64 %259, 56\l  %261 = or i64 %256, %260\l  %262 = add nsw i32 %219, -8\l  %263 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 8\l  br label %277\l}"];
	Node0x5f4e1a0 -> Node0x5f4e380;
	Node0x5f4e3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%264:\l264:                                              \l  %265 = phi i32 [ %275, %264 ], [ 0, %222 ]\l  %266 = phi i64 [ %274, %264 ], [ 0, %222 ]\l  %267 = zext i32 %265 to i64\l  %268 = getelementptr inbounds i8, i8 addrspace(4)* %218, i64 %267\l  %269 = load i8, i8 addrspace(4)* %268, align 1, !tbaa !14\l  %270 = zext i8 %269 to i64\l  %271 = shl i32 %265, 3\l  %272 = zext i32 %271 to i64\l  %273 = shl nuw i64 %270, %272\l  %274 = or i64 %273, %266\l  %275 = add nuw nsw i32 %265, 1\l  %276 = icmp eq i32 %275, %219\l  br i1 %276, label %277, label %264\l|{<s0>T|<s1>F}}"];
	Node0x5f4e3d0:s0 -> Node0x5f4e380;
	Node0x5f4e3d0:s1 -> Node0x5f4e3d0;
	Node0x5f4e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%277:\l277:                                              \l  %278 = phi i8 addrspace(4)* [ %263, %224 ], [ %218, %222 ], [ %218, %264 ]\l  %279 = phi i32 [ %262, %224 ], [ 0, %222 ], [ 0, %264 ]\l  %280 = phi i64 [ %261, %224 ], [ 0, %222 ], [ %274, %264 ]\l  %281 = icmp ugt i32 %279, 7\l  br i1 %281, label %284, label %282\l|{<s0>T|<s1>F}}"];
	Node0x5f4e380:s0 -> Node0x5f50c00;
	Node0x5f4e380:s1 -> Node0x5f50c50;
	Node0x5f50c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%282:\l282:                                              \l  %283 = icmp eq i32 %279, 0\l  br i1 %283, label %337, label %324\l|{<s0>T|<s1>F}}"];
	Node0x5f50c50:s0 -> Node0x5f50de0;
	Node0x5f50c50:s1 -> Node0x5f50e30;
	Node0x5f50c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%284:\l284:                                              \l  %285 = load i8, i8 addrspace(4)* %278, align 1, !tbaa !14\l  %286 = zext i8 %285 to i64\l  %287 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 1\l  %288 = load i8, i8 addrspace(4)* %287, align 1, !tbaa !14\l  %289 = zext i8 %288 to i64\l  %290 = shl nuw nsw i64 %289, 8\l  %291 = or i64 %290, %286\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 2\l  %293 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !14\l  %294 = zext i8 %293 to i64\l  %295 = shl nuw nsw i64 %294, 16\l  %296 = or i64 %291, %295\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 3\l  %298 = load i8, i8 addrspace(4)* %297, align 1, !tbaa !14\l  %299 = zext i8 %298 to i64\l  %300 = shl nuw nsw i64 %299, 24\l  %301 = or i64 %296, %300\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 4\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !14\l  %304 = zext i8 %303 to i64\l  %305 = shl nuw nsw i64 %304, 32\l  %306 = or i64 %301, %305\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 5\l  %308 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !14\l  %309 = zext i8 %308 to i64\l  %310 = shl nuw nsw i64 %309, 40\l  %311 = or i64 %306, %310\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 6\l  %313 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !14\l  %314 = zext i8 %313 to i64\l  %315 = shl nuw nsw i64 %314, 48\l  %316 = or i64 %311, %315\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 7\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !14\l  %319 = zext i8 %318 to i64\l  %320 = shl nuw i64 %319, 56\l  %321 = or i64 %316, %320\l  %322 = add nsw i32 %279, -8\l  %323 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 8\l  br label %337\l}"];
	Node0x5f50c00 -> Node0x5f50de0;
	Node0x5f50e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%324:\l324:                                              \l  %325 = phi i32 [ %335, %324 ], [ 0, %282 ]\l  %326 = phi i64 [ %334, %324 ], [ 0, %282 ]\l  %327 = zext i32 %325 to i64\l  %328 = getelementptr inbounds i8, i8 addrspace(4)* %278, i64 %327\l  %329 = load i8, i8 addrspace(4)* %328, align 1, !tbaa !14\l  %330 = zext i8 %329 to i64\l  %331 = shl i32 %325, 3\l  %332 = zext i32 %331 to i64\l  %333 = shl nuw i64 %330, %332\l  %334 = or i64 %333, %326\l  %335 = add nuw nsw i32 %325, 1\l  %336 = icmp eq i32 %335, %279\l  br i1 %336, label %337, label %324\l|{<s0>T|<s1>F}}"];
	Node0x5f50e30:s0 -> Node0x5f50de0;
	Node0x5f50e30:s1 -> Node0x5f50e30;
	Node0x5f50de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%337:\l337:                                              \l  %338 = phi i8 addrspace(4)* [ %323, %284 ], [ %278, %282 ], [ %278, %324 ]\l  %339 = phi i32 [ %322, %284 ], [ 0, %282 ], [ 0, %324 ]\l  %340 = phi i64 [ %321, %284 ], [ 0, %282 ], [ %334, %324 ]\l  %341 = icmp ugt i32 %339, 7\l  br i1 %341, label %344, label %342\l|{<s0>T|<s1>F}}"];
	Node0x5f50de0:s0 -> Node0x5f53860;
	Node0x5f50de0:s1 -> Node0x5f538b0;
	Node0x5f538b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%342:\l342:                                              \l  %343 = icmp eq i32 %339, 0\l  br i1 %343, label %397, label %384\l|{<s0>T|<s1>F}}"];
	Node0x5f538b0:s0 -> Node0x5f53a40;
	Node0x5f538b0:s1 -> Node0x5f53a90;
	Node0x5f53860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%344:\l344:                                              \l  %345 = load i8, i8 addrspace(4)* %338, align 1, !tbaa !14\l  %346 = zext i8 %345 to i64\l  %347 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 1\l  %348 = load i8, i8 addrspace(4)* %347, align 1, !tbaa !14\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw nsw i64 %349, 8\l  %351 = or i64 %350, %346\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 2\l  %353 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !14\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw nsw i64 %354, 16\l  %356 = or i64 %351, %355\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 3\l  %358 = load i8, i8 addrspace(4)* %357, align 1, !tbaa !14\l  %359 = zext i8 %358 to i64\l  %360 = shl nuw nsw i64 %359, 24\l  %361 = or i64 %356, %360\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 4\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !14\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 32\l  %366 = or i64 %361, %365\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 5\l  %368 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !14\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw nsw i64 %369, 40\l  %371 = or i64 %366, %370\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 6\l  %373 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !14\l  %374 = zext i8 %373 to i64\l  %375 = shl nuw nsw i64 %374, 48\l  %376 = or i64 %371, %375\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 7\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !14\l  %379 = zext i8 %378 to i64\l  %380 = shl nuw i64 %379, 56\l  %381 = or i64 %376, %380\l  %382 = add nsw i32 %339, -8\l  %383 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 8\l  br label %397\l}"];
	Node0x5f53860 -> Node0x5f53a40;
	Node0x5f53a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%384:\l384:                                              \l  %385 = phi i32 [ %395, %384 ], [ 0, %342 ]\l  %386 = phi i64 [ %394, %384 ], [ 0, %342 ]\l  %387 = zext i32 %385 to i64\l  %388 = getelementptr inbounds i8, i8 addrspace(4)* %338, i64 %387\l  %389 = load i8, i8 addrspace(4)* %388, align 1, !tbaa !14\l  %390 = zext i8 %389 to i64\l  %391 = shl i32 %385, 3\l  %392 = zext i32 %391 to i64\l  %393 = shl nuw i64 %390, %392\l  %394 = or i64 %393, %386\l  %395 = add nuw nsw i32 %385, 1\l  %396 = icmp eq i32 %395, %339\l  br i1 %396, label %397, label %384\l|{<s0>T|<s1>F}}"];
	Node0x5f53a90:s0 -> Node0x5f53a40;
	Node0x5f53a90:s1 -> Node0x5f53a90;
	Node0x5f53a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%397:\l397:                                              \l  %398 = phi i8 addrspace(4)* [ %383, %344 ], [ %338, %342 ], [ %338, %384 ]\l  %399 = phi i32 [ %382, %344 ], [ 0, %342 ], [ 0, %384 ]\l  %400 = phi i64 [ %381, %344 ], [ 0, %342 ], [ %394, %384 ]\l  %401 = icmp ugt i32 %399, 7\l  br i1 %401, label %404, label %402\l|{<s0>T|<s1>F}}"];
	Node0x5f53a40:s0 -> Node0x5f560c0;
	Node0x5f53a40:s1 -> Node0x5f56110;
	Node0x5f56110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%402:\l402:                                              \l  %403 = icmp eq i32 %399, 0\l  br i1 %403, label %455, label %442\l|{<s0>T|<s1>F}}"];
	Node0x5f56110:s0 -> Node0x5f45c50;
	Node0x5f56110:s1 -> Node0x5f562a0;
	Node0x5f560c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%404:\l404:                                              \l  %405 = load i8, i8 addrspace(4)* %398, align 1, !tbaa !14\l  %406 = zext i8 %405 to i64\l  %407 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 1\l  %408 = load i8, i8 addrspace(4)* %407, align 1, !tbaa !14\l  %409 = zext i8 %408 to i64\l  %410 = shl nuw nsw i64 %409, 8\l  %411 = or i64 %410, %406\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 2\l  %413 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !14\l  %414 = zext i8 %413 to i64\l  %415 = shl nuw nsw i64 %414, 16\l  %416 = or i64 %411, %415\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 3\l  %418 = load i8, i8 addrspace(4)* %417, align 1, !tbaa !14\l  %419 = zext i8 %418 to i64\l  %420 = shl nuw nsw i64 %419, 24\l  %421 = or i64 %416, %420\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 4\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !14\l  %424 = zext i8 %423 to i64\l  %425 = shl nuw nsw i64 %424, 32\l  %426 = or i64 %421, %425\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 5\l  %428 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !14\l  %429 = zext i8 %428 to i64\l  %430 = shl nuw nsw i64 %429, 40\l  %431 = or i64 %426, %430\l  %432 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 6\l  %433 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !14\l  %434 = zext i8 %433 to i64\l  %435 = shl nuw nsw i64 %434, 48\l  %436 = or i64 %431, %435\l  %437 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 7\l  %438 = load i8, i8 addrspace(4)* %437, align 1, !tbaa !14\l  %439 = zext i8 %438 to i64\l  %440 = shl nuw i64 %439, 56\l  %441 = or i64 %436, %440\l  br label %455\l}"];
	Node0x5f560c0 -> Node0x5f45c50;
	Node0x5f562a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%442:\l442:                                              \l  %443 = phi i32 [ %453, %442 ], [ 0, %402 ]\l  %444 = phi i64 [ %452, %442 ], [ 0, %402 ]\l  %445 = zext i32 %443 to i64\l  %446 = getelementptr inbounds i8, i8 addrspace(4)* %398, i64 %445\l  %447 = load i8, i8 addrspace(4)* %446, align 1, !tbaa !14\l  %448 = zext i8 %447 to i64\l  %449 = shl i32 %443, 3\l  %450 = zext i32 %449 to i64\l  %451 = shl nuw i64 %448, %450\l  %452 = or i64 %451, %444\l  %453 = add nuw nsw i32 %443, 1\l  %454 = icmp eq i32 %453, %399\l  br i1 %454, label %455, label %442\l|{<s0>T|<s1>F}}"];
	Node0x5f562a0:s0 -> Node0x5f45c50;
	Node0x5f562a0:s1 -> Node0x5f562a0;
	Node0x5f45c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%455:\l455:                                              \l  %456 = phi i64 [ %441, %404 ], [ 0, %402 ], [ %452, %442 ]\l  %457 = shl nuw nsw i64 %38, 2\l  %458 = add nuw nsw i64 %457, 28\l  %459 = and i64 %458, 480\l  %460 = and i64 %40, -225\l  %461 = or i64 %460, %459\l  %462 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %18,\l... i64 noundef %461, i64 noundef %100, i64 noundef %160, i64 noundef %220, i64\l... noundef %280, i64 noundef %340, i64 noundef %400, i64 noundef %456) #11\l  %463 = sub i64 %30, %38\l  %464 = getelementptr inbounds i8, i8 addrspace(4)* %31, i64 %38\l  %465 = icmp eq i64 %463, 0\l  br i1 %465, label %466, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5f45c50:s0 -> Node0x5f44c10;
	Node0x5f45c50:s1 -> Node0x5f457b0;
	Node0x5f44c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%466:\l466:                                              \l  %467 = phi \<2 x i64\> [ %24, %21 ], [ %462, %455 ]\l  %468 = extractelement \<2 x i64\> %467, i64 0\l  %469 = bitcast double %12 to i64\l  %470 = and i64 %468, -227\l  %471 = or i64 %470, 34\l  %472 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %18,\l... i64 noundef %471, i64 noundef %469, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %473\l}"];
	Node0x5f44c10 -> Node0x5f42310;
	Node0x5f42310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%473:\l473:                                              \l  store double 0.000000e+00, double addrspace(1)* %5, align 8, !tbaa !5\l  ret void\l}"];
}
