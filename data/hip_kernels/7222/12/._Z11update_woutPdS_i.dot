digraph "CFG for '_Z11update_woutPdS_i' function" {
	label="CFG for '_Z11update_woutPdS_i' function";

	Node0x6165930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = mul nuw nsw i32 %5, 20\l  %10 = add nuw nsw i32 %9, %4\l  %11 = zext i32 %10 to i64\l  %12 = getelementptr inbounds double, double addrspace(1)* %1, i64 %11\l  %13 = icmp ult i32 %5, 32\l  br i1 %13, label %14, label %27\l|{<s0>T|<s1>F}}"];
	Node0x6165930:s0 -> Node0x6166690;
	Node0x6165930:s1 -> Node0x6167c00;
	Node0x6166690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  %15 = add nuw nsw i32 %5, 32\l  %16 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = icmp ult i32 %15, %17\l  br i1 %18, label %19, label %27\l|{<s0>T|<s1>F}}"];
	Node0x6166690:s0 -> Node0x61682c0;
	Node0x6166690:s1 -> Node0x6167c00;
	Node0x61682c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%19:\l19:                                               \l  %20 = mul nuw nsw i32 %15, 20\l  %21 = add nuw nsw i32 %20, %4\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %22\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7\l  %25 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %26 = fadd contract double %24, %25\l  store double %26, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %27\l}"];
	Node0x61682c0 -> Node0x6167c00;
	Node0x6167c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp ult i32 %5, 16\l  br i1 %28, label %29, label %42\l|{<s0>T|<s1>F}}"];
	Node0x6167c00:s0 -> Node0x61692e0;
	Node0x6167c00:s1 -> Node0x6169370;
	Node0x61692e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = add nuw nsw i32 %5, 16\l  %31 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %32 = zext i16 %31 to i32\l  %33 = icmp ult i32 %30, %32\l  br i1 %33, label %34, label %42\l|{<s0>T|<s1>F}}"];
	Node0x61692e0:s0 -> Node0x61681b0;
	Node0x61692e0:s1 -> Node0x6169370;
	Node0x61681b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = mul nuw nsw i32 %30, 20\l  %36 = add nuw nsw i32 %35, %4\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %40 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %41 = fadd contract double %39, %40\l  store double %41, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %42\l}"];
	Node0x61681b0 -> Node0x6169370;
	Node0x6169370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = icmp ult i32 %5, 8\l  br i1 %43, label %44, label %57\l|{<s0>T|<s1>F}}"];
	Node0x6169370:s0 -> Node0x616ac70;
	Node0x6169370:s1 -> Node0x616acc0;
	Node0x616ac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%44:\l44:                                               \l  %45 = add nuw nsw i32 %5, 8\l  %46 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %47 = zext i16 %46 to i32\l  %48 = icmp ult i32 %45, %47\l  br i1 %48, label %49, label %57\l|{<s0>T|<s1>F}}"];
	Node0x616ac70:s0 -> Node0x616afc0;
	Node0x616ac70:s1 -> Node0x616acc0;
	Node0x616afc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%49:\l49:                                               \l  %50 = mul nuw nsw i32 %45, 20\l  %51 = add nuw nsw i32 %50, %4\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %1, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7\l  %55 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %56 = fadd contract double %54, %55\l  store double %56, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %57\l}"];
	Node0x616afc0 -> Node0x616acc0;
	Node0x616acc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = icmp ult i32 %5, 4\l  br i1 %58, label %59, label %72\l|{<s0>T|<s1>F}}"];
	Node0x616acc0:s0 -> Node0x616b760;
	Node0x616acc0:s1 -> Node0x616b7b0;
	Node0x616b760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%59:\l59:                                               \l  %60 = add nuw nsw i32 %5, 4\l  %61 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %62 = zext i16 %61 to i32\l  %63 = icmp ult i32 %60, %62\l  br i1 %63, label %64, label %72\l|{<s0>T|<s1>F}}"];
	Node0x616b760:s0 -> Node0x616bae0;
	Node0x616b760:s1 -> Node0x616b7b0;
	Node0x616bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%64:\l64:                                               \l  %65 = mul nuw nsw i32 %60, 20\l  %66 = add nuw nsw i32 %65, %4\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %1, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7\l  %70 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %71 = fadd contract double %69, %70\l  store double %71, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %72\l}"];
	Node0x616bae0 -> Node0x616b7b0;
	Node0x616b7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %73 = icmp ult i32 %5, 2\l  br i1 %73, label %74, label %87\l|{<s0>T|<s1>F}}"];
	Node0x616b7b0:s0 -> Node0x616c4d0;
	Node0x616b7b0:s1 -> Node0x616c520;
	Node0x616c4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %5, 2\l  %76 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %77 = zext i16 %76 to i32\l  %78 = icmp ult i32 %75, %77\l  br i1 %78, label %79, label %87\l|{<s0>T|<s1>F}}"];
	Node0x616c4d0:s0 -> Node0x616c850;
	Node0x616c4d0:s1 -> Node0x616c520;
	Node0x616c850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%79:\l79:                                               \l  %80 = mul nuw nsw i32 %75, 20\l  %81 = add nuw nsw i32 %80, %4\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !7\l  %85 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %86 = fadd contract double %84, %85\l  store double %86, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %87\l}"];
	Node0x616c850 -> Node0x616c520;
	Node0x616c520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %88 = icmp eq i32 %5, 0\l  br i1 %88, label %89, label %102\l|{<s0>T|<s1>F}}"];
	Node0x616c520:s0 -> Node0x616d030;
	Node0x616c520:s1 -> Node0x616d080;
	Node0x616d030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%89:\l89:                                               \l  %90 = add nuw nsw i32 %5, 1\l  %91 = load i16, i16 addrspace(4)* %8, align 2, !range !5, !invariant.load !6\l  %92 = zext i16 %91 to i32\l  %93 = icmp ult i32 %90, %92\l  br i1 %93, label %94, label %102\l|{<s0>T|<s1>F}}"];
	Node0x616d030:s0 -> Node0x616d3e0;
	Node0x616d030:s1 -> Node0x616d080;
	Node0x616d3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%94:\l94:                                               \l  %95 = mul nuw nsw i32 %90, 20\l  %96 = add nuw nsw i32 %95, %4\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds double, double addrspace(1)* %1, i64 %97\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !7\l  %100 = load double, double addrspace(1)* %12, align 8, !tbaa !7\l  %101 = fadd contract double %99, %100\l  store double %101, double addrspace(1)* %12, align 8, !tbaa !7\l  br label %102\l}"];
	Node0x616d3e0 -> Node0x616d080;
	Node0x616d080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %103 = icmp eq i32 %5, 0\l  br i1 %103, label %104, label %113\l|{<s0>T|<s1>F}}"];
	Node0x616d080:s0 -> Node0x616dbc0;
	Node0x616d080:s1 -> Node0x616dc10;
	Node0x616dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%104:\l104:                                              \l  %105 = zext i32 %4 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %1, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !7\l  %108 = fmul contract double %107, 5.000000e-01\l  %109 = fdiv contract double %108, 5.500000e+01\l  %110 = getelementptr inbounds double, double addrspace(1)* %0, i64 %105\l  %111 = load double, double addrspace(1)* %110, align 8, !tbaa !7\l  %112 = fsub contract double %111, %109\l  store double %112, double addrspace(1)* %110, align 8, !tbaa !7\l  br label %113\l}"];
	Node0x616dbc0 -> Node0x616dc10;
	Node0x616dc10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store double 0.000000e+00, double addrspace(1)* %12, align 8, !tbaa !7\l  ret void\l}"];
}
