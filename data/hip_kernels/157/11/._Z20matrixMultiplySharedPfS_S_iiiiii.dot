digraph "CFG for '_Z20matrixMultiplySharedPfS_S_iiiiii' function" {
	label="CFG for '_Z20matrixMultiplySharedPfS_S_iiiiii' function";

	Node0x4ad5590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %10\l  %27 = icmp slt i32 %5, -14\l  br i1 %27, label %68, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4ad5590:s0 -> Node0x4ad9530;
	Node0x4ad5590:s1 -> Node0x4ad95c0;
	Node0x4ad95c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = add nsw i32 %5, -1\l  %30 = sdiv i32 %29, 16\l  %31 = icmp slt i32 %19, %3\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 %10\l  %33 = mul nsw i32 %19, %5\l  %34 = icmp slt i32 %26, %6\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 %11,\l... i32 %10\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 0\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 0, i32\l... %10\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 1\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 1, i32\l... %10\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 2\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 2, i32\l... %10\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 3\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 3, i32\l... %10\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 4\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 4, i32\l... %10\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 5\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 5, i32\l... %10\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 6\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 6, i32\l... %10\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 7\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 7, i32\l... %10\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 8\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 8, i32\l... %10\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 9\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 9, i32\l... %10\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 10\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 10,\l... i32 %10\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 11\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 11,\l... i32 %10\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 12\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 12,\l... i32 %10\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 13\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 13,\l... i32 %10\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 14\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 14,\l... i32 %10\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_A, i32 0, i32 %11,\l... i32 15\l  %67 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE4ds_B, i32 0, i32 15,\l... i32 %10\l  br label %73\l}"];
	Node0x4ad95c0 -> Node0x4ad9960;
	Node0x4ad9530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%68:\l68:                                               \l  %69 = phi float [ 0.000000e+00, %9 ], [ %162, %97 ]\l  %70 = icmp slt i32 %19, %3\l  %71 = icmp slt i32 %26, %6\l  %72 = select i1 %70, i1 %71, i1 false\l  br i1 %72, label %165, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4ad9530:s0 -> Node0x4adccd0;
	Node0x4ad9530:s1 -> Node0x4adcd60;
	Node0x4ad9960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ 0, %28 ], [ %163, %97 ]\l  %75 = phi float [ 0.000000e+00, %28 ], [ %162, %97 ]\l  br i1 %31, label %76, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4ad9960:s0 -> Node0x4add030;
	Node0x4ad9960:s1 -> Node0x4add0c0;
	Node0x4add030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%76:\l76:                                               \l  %77 = shl nsw i32 %74, 4\l  %78 = add nuw i32 %77, %10\l  %79 = icmp slt i32 %78, %5\l  br i1 %79, label %80, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4add030:s0 -> Node0x4add3b0;
	Node0x4add030:s1 -> Node0x4add0c0;
	Node0x4add3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%80:\l80:                                               \l  %81 = add i32 %78, %33\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %85\l}"];
	Node0x4add3b0 -> Node0x4add0c0;
	Node0x4add0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi float [ %84, %80 ], [ 0.000000e+00, %76 ], [ 0.000000e+00, %73 ]\l  store float %86, float addrspace(3)* %32, align 4, !tbaa !7\l  br i1 %34, label %87, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4add0c0:s0 -> Node0x4ade010;
	Node0x4add0c0:s1 -> Node0x4adc990;
	Node0x4ade010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%87:\l87:                                               \l  %88 = shl nsw i32 %74, 4\l  %89 = add nuw nsw i32 %88, %11\l  %90 = icmp slt i32 %89, %5\l  br i1 %90, label %91, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4ade010:s0 -> Node0x4ade2c0;
	Node0x4ade010:s1 -> Node0x4adc990;
	Node0x4ade2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%91:\l91:                                               \l  %92 = mul nsw i32 %89, %6\l  %93 = add nsw i32 %92, %26\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %97\l}"];
	Node0x4ade2c0 -> Node0x4adc990;
	Node0x4adc990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi float [ %96, %91 ], [ 0.000000e+00, %87 ], [ 0.000000e+00, %85 ]\l  store float %98, float addrspace(3)* %35, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %99 = load float, float addrspace(3)* %36, align 16, !tbaa !7\l  %100 = load float, float addrspace(3)* %37, align 4, !tbaa !7\l  %101 = fmul contract float %99, %100\l  %102 = fadd contract float %75, %101\l  %103 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %104 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %105 = fmul contract float %103, %104\l  %106 = fadd contract float %102, %105\l  %107 = load float, float addrspace(3)* %40, align 8, !tbaa !7\l  %108 = load float, float addrspace(3)* %41, align 4, !tbaa !7\l  %109 = fmul contract float %107, %108\l  %110 = fadd contract float %106, %109\l  %111 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %112 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %110, %113\l  %115 = load float, float addrspace(3)* %44, align 16, !tbaa !7\l  %116 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %117 = fmul contract float %115, %116\l  %118 = fadd contract float %114, %117\l  %119 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %120 = load float, float addrspace(3)* %47, align 4, !tbaa !7\l  %121 = fmul contract float %119, %120\l  %122 = fadd contract float %118, %121\l  %123 = load float, float addrspace(3)* %48, align 8, !tbaa !7\l  %124 = load float, float addrspace(3)* %49, align 4, !tbaa !7\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %122, %125\l  %127 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %128 = load float, float addrspace(3)* %51, align 4, !tbaa !7\l  %129 = fmul contract float %127, %128\l  %130 = fadd contract float %126, %129\l  %131 = load float, float addrspace(3)* %52, align 16, !tbaa !7\l  %132 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %133 = fmul contract float %131, %132\l  %134 = fadd contract float %130, %133\l  %135 = load float, float addrspace(3)* %54, align 4, !tbaa !7\l  %136 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %137 = fmul contract float %135, %136\l  %138 = fadd contract float %134, %137\l  %139 = load float, float addrspace(3)* %56, align 8, !tbaa !7\l  %140 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %141 = fmul contract float %139, %140\l  %142 = fadd contract float %138, %141\l  %143 = load float, float addrspace(3)* %58, align 4, !tbaa !7\l  %144 = load float, float addrspace(3)* %59, align 4, !tbaa !7\l  %145 = fmul contract float %143, %144\l  %146 = fadd contract float %142, %145\l  %147 = load float, float addrspace(3)* %60, align 16, !tbaa !7\l  %148 = load float, float addrspace(3)* %61, align 4, !tbaa !7\l  %149 = fmul contract float %147, %148\l  %150 = fadd contract float %146, %149\l  %151 = load float, float addrspace(3)* %62, align 4, !tbaa !7\l  %152 = load float, float addrspace(3)* %63, align 4, !tbaa !7\l  %153 = fmul contract float %151, %152\l  %154 = fadd contract float %150, %153\l  %155 = load float, float addrspace(3)* %64, align 8, !tbaa !7\l  %156 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %157 = fmul contract float %155, %156\l  %158 = fadd contract float %154, %157\l  %159 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %160 = load float, float addrspace(3)* %67, align 4, !tbaa !7\l  %161 = fmul contract float %159, %160\l  %162 = fadd contract float %158, %161\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %163 = add nuw nsw i32 %74, 1\l  %164 = icmp eq i32 %74, %30\l  br i1 %164, label %68, label %73, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4adc990:s0 -> Node0x4ad9530;
	Node0x4adc990:s1 -> Node0x4ad9960;
	Node0x4adccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%165:\l165:                                              \l  %166 = mul nsw i32 %19, %6\l  %167 = add nsw i32 %166, %26\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %2, i64 %168\l  store float %69, float addrspace(1)* %169, align 4, !tbaa !7\l  br label %170\l}"];
	Node0x4adccd0 -> Node0x4adcd60;
	Node0x4adcd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%170:\l170:                                              \l  ret void\l}"];
}
