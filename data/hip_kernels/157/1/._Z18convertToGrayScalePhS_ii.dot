digraph "CFG for '_Z18convertToGrayScalePhS_ii' function" {
	label="CFG for '_Z18convertToGrayScalePhS_ii' function";

	Node0x60e2620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %6, %13\l  %15 = add i32 %14, %8\l  %16 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %5, %19\l  %21 = add i32 %20, %7\l  %22 = mul nsw i32 %15, %2\l  %23 = add nsw i32 %22, %21\l  %24 = icmp slt i32 %15, %3\l  %25 = icmp slt i32 %21, %2\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %51\l|{<s0>T|<s1>F}}"];
	Node0x60e2620:s0 -> Node0x60e61f0;
	Node0x60e2620:s1 -> Node0x60e6280;
	Node0x60e61f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, 3\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %29\l  %31 = load i8, i8 addrspace(1)* %30, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %32 = uitofp i8 %31 to double\l  %33 = fmul contract double %32, 2.100000e-01\l  %34 = add nsw i32 %28, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %38 = uitofp i8 %37 to double\l  %39 = fmul contract double %38, 7.100000e-01\l  %40 = fadd contract double %33, %39\l  %41 = add nsw i32 %28, 2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %42\l  %44 = load i8, i8 addrspace(1)* %43, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %45 = uitofp i8 %44 to double\l  %46 = fmul contract double %45, 7.000000e-02\l  %47 = fadd contract double %40, %46\l  %48 = fptoui double %47 to i8\l  %49 = sext i32 %23 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %49\l  store i8 %48, i8 addrspace(1)* %50, align 1, !tbaa !7\l  br label %51\l}"];
	Node0x60e61f0 -> Node0x60e6280;
	Node0x60e6280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  ret void\l}"];
}
