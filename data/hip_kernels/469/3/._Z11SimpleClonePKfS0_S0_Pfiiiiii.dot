digraph "CFG for '_Z11SimpleClonePKfS0_S0_Pfiiiiii' function" {
	label="CFG for '_Z11SimpleClonePKfS0_S0_Pfiiiiii' function";

	Node0x5cd8020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %19, %6\l  %29 = add nsw i32 %28, %27\l  %30 = icmp slt i32 %19, %7\l  %31 = icmp slt i32 %27, %6\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5cd8020:s0 -> Node0x5cda580;
	Node0x5cd8020:s1 -> Node0x5cda610;
	Node0x5cda580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%33:\l33:                                               \l  %34 = sext i32 %29 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fcmp contract ogt float %36, 1.270000e+02\l  br i1 %37, label %38, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5cda580:s0 -> Node0x5cdd810;
	Node0x5cda580:s1 -> Node0x5cda610;
	Node0x5cdd810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%38:\l38:                                               \l  %39 = add nsw i32 %19, %8\l  %40 = add nsw i32 %27, %9\l  %41 = mul nsw i32 %39, %4\l  %42 = add nsw i32 %41, %40\l  %43 = icmp sgt i32 %39, -1\l  br i1 %43, label %44, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5cdd810:s0 -> Node0x5cddc20;
	Node0x5cdd810:s1 -> Node0x5cda610;
	Node0x5cddc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = icmp slt i32 %39, %5\l  %46 = icmp sgt i32 %40, -1\l  %47 = select i1 %45, i1 %46, i1 false\l  %48 = icmp slt i32 %40, %4\l  %49 = select i1 %47, i1 %48, i1 false\l  br i1 %49, label %50, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5cddc20:s0 -> Node0x5cde030;
	Node0x5cddc20:s1 -> Node0x5cda610;
	Node0x5cde030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%50:\l50:                                               \l  %51 = mul nsw i32 %29, 3\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = mul nsw i32 %42, 3\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %56\l  store float %54, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = add nsw i32 %51, 1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = add nsw i32 %55, 1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %3, i64 %63\l  store float %61, float addrspace(1)* %64, align 4, !tbaa !7\l  %65 = add nsw i32 %51, 2\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = add nsw i32 %55, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %3, i64 %70\l  store float %68, float addrspace(1)* %71, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x5cde030 -> Node0x5cda610;
	Node0x5cda610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
