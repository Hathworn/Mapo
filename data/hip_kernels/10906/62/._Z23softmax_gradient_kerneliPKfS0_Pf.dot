digraph "CFG for '_Z23softmax_gradient_kerneliPKfS0_Pf' function" {
	label="CFG for '_Z23softmax_gradient_kerneliPKfS0_Pf' function";

	Node0x553c9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = mul i32 %5, %0\l  %7 = zext i32 %6 to i64\l  %8 = getelementptr inbounds float, float addrspace(1)* %1, i64 %7\l  %9 = getelementptr inbounds float, float addrspace(1)* %2, i64 %7\l  %10 = getelementptr inbounds float, float addrspace(1)* %3, i64 %7\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = icmp slt i32 %11, %0\l  br i1 %12, label %13, label %19\l|{<s0>T|<s1>F}}"];
	Node0x553c9e0:s0 -> Node0x553dd90;
	Node0x553c9e0:s1 -> Node0x553de20;
	Node0x553dd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%13:\l13:                                               \l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  br label %23\l}"];
	Node0x553dd90 -> Node0x553ed20;
	Node0x553de20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%19:\l19:                                               \l  %20 = phi float [ 0.000000e+00, %4 ], [ %32, %23 ]\l  %21 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %11\l  store float %20, float addrspace(3)* %21, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %22 = icmp eq i32 %11, 0\l  br i1 %22, label %35, label %105\l|{<s0>T|<s1>F}}"];
	Node0x553de20:s0 -> Node0x553ffd0;
	Node0x553de20:s1 -> Node0x5540060;
	Node0x553ed20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %11, %13 ], [ %33, %23 ]\l  %25 = phi float [ 0.000000e+00, %13 ], [ %32, %23 ]\l  %26 = sext i32 %24 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %9, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %29 = getelementptr inbounds float, float addrspace(1)* %8, i64 %26\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %31 = fmul contract float %28, %30\l  %32 = fadd contract float %25, %31\l  %33 = add i32 %24, %18\l  %34 = icmp slt i32 %33, %0\l  br i1 %34, label %23, label %19, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x553ed20:s0 -> Node0x553ed20;
	Node0x553ed20:s1 -> Node0x553de20;
	Node0x553ffd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = load float, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 0),\l... align 16, !tbaa !7\l  %37 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %38 = getelementptr i8, i8 addrspace(4)* %37, i64 4\l  %39 = bitcast i8 addrspace(4)* %38 to i16 addrspace(4)*\l  %40 = load i16, i16 addrspace(4)* %39, align 4, !range !5, !invariant.load !6\l  %41 = zext i16 %40 to i32\l  %42 = icmp ugt i16 %40, 1\l  br i1 %42, label %43, label %65\l|{<s0>T|<s1>F}}"];
	Node0x553ffd0:s0 -> Node0x5541790;
	Node0x553ffd0:s1 -> Node0x5542460;
	Node0x5541790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%43:\l43:                                               \l  %44 = add nsw i32 %41, -1\l  %45 = add nsw i32 %41, -2\l  %46 = and i32 %44, 7\l  %47 = icmp ult i32 %45, 7\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5541790:s0 -> Node0x55427d0;
	Node0x5541790:s1 -> Node0x5542820;
	Node0x5542820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%48:\l48:                                               \l  %49 = and i32 %44, -8\l  br label %67\l}"];
	Node0x5542820 -> Node0x5542a20;
	Node0x55427d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%50:\l50:                                               \l  %51 = phi float [ undef, %43 ], [ %101, %67 ]\l  %52 = phi i32 [ 1, %43 ], [ %102, %67 ]\l  %53 = phi float [ %36, %43 ], [ %101, %67 ]\l  %54 = icmp eq i32 %46, 0\l  br i1 %54, label %65, label %55\l|{<s0>T|<s1>F}}"];
	Node0x55427d0:s0 -> Node0x5542460;
	Node0x55427d0:s1 -> Node0x5542e50;
	Node0x5542e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%55:\l55:                                               \l  %56 = phi i32 [ %62, %55 ], [ %52, %50 ]\l  %57 = phi float [ %61, %55 ], [ %53, %50 ]\l  %58 = phi i32 [ %63, %55 ], [ 0, %50 ]\l  %59 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %56\l  %60 = load float, float addrspace(3)* %59, align 4, !tbaa !7\l  %61 = fadd contract float %57, %60\l  %62 = add nuw nsw i32 %56, 1\l  %63 = add i32 %58, 1\l  %64 = icmp eq i32 %63, %46\l  br i1 %64, label %65, label %55, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5542e50:s0 -> Node0x5542460;
	Node0x5542e50:s1 -> Node0x5542e50;
	Node0x5542460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%65:\l65:                                               \l  %66 = phi float [ %36, %35 ], [ %51, %50 ], [ %61, %55 ]\l  store float %66, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 0),\l... align 16, !tbaa !7\l  br label %105\l}"];
	Node0x5542460 -> Node0x5540060;
	Node0x5542a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%67:\l67:                                               \l  %68 = phi i32 [ 1, %48 ], [ %102, %67 ]\l  %69 = phi float [ %36, %48 ], [ %101, %67 ]\l  %70 = phi i32 [ 0, %48 ], [ %103, %67 ]\l  %71 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %68\l  %72 = load float, float addrspace(3)* %71, align 4, !tbaa !7\l  %73 = fadd contract float %69, %72\l  %74 = add nuw nsw i32 %68, 1\l  %75 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !7\l  %77 = fadd contract float %73, %76\l  %78 = add nuw nsw i32 %68, 2\l  %79 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %78\l  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !7\l  %81 = fadd contract float %77, %80\l  %82 = add nuw nsw i32 %68, 3\l  %83 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %82\l  %84 = load float, float addrspace(3)* %83, align 4, !tbaa !7\l  %85 = fadd contract float %81, %84\l  %86 = add nuw nsw i32 %68, 4\l  %87 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !7\l  %89 = fadd contract float %85, %88\l  %90 = add nuw nsw i32 %68, 5\l  %91 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %90\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !7\l  %93 = fadd contract float %89, %92\l  %94 = add nuw nsw i32 %68, 6\l  %95 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %94\l  %96 = load float, float addrspace(3)* %95, align 4, !tbaa !7\l  %97 = fadd contract float %93, %96\l  %98 = add nuw nsw i32 %68, 7\l  %99 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 %98\l  %100 = load float, float addrspace(3)* %99, align 4, !tbaa !7\l  %101 = fadd contract float %97, %100\l  %102 = add nuw nsw i32 %68, 8\l  %103 = add i32 %70, 8\l  %104 = icmp eq i32 %103, %49\l  br i1 %104, label %50, label %67, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5542a20:s0 -> Node0x55427d0;
	Node0x5542a20:s1 -> Node0x5542a20;
	Node0x5540060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%105:\l105:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %106 = load float, float addrspace(3)* getelementptr inbounds ([128 x\l... float], [128 x float] addrspace(3)*\l... @_ZZ23softmax_gradient_kerneliPKfS0_PfE16reduction_buffer, i32 0, i32 0),\l... align 16, !tbaa !7\l  br i1 %12, label %107, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5540060:s0 -> Node0x5545530;
	Node0x5540060:s1 -> Node0x5545580;
	Node0x5545530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%107:\l107:                                              \l  %108 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %109 = getelementptr i8, i8 addrspace(4)* %108, i64 4\l  %110 = bitcast i8 addrspace(4)* %109 to i16 addrspace(4)*\l  %111 = load i16, i16 addrspace(4)* %110, align 4, !range !5, !invariant.load\l... !6\l  %112 = zext i16 %111 to i32\l  br label %114\l}"];
	Node0x5545530 -> Node0x5545940;
	Node0x5545580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%113:\l113:                                              \l  ret void\l}"];
	Node0x5545940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i32 [ %11, %107 ], [ %124, %114 ]\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %8, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = getelementptr inbounds float, float addrspace(1)* %9, i64 %116\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7\l  %121 = fsub contract float %120, %106\l  %122 = fmul contract float %118, %121\l  %123 = getelementptr inbounds float, float addrspace(1)* %10, i64 %116\l  store float %122, float addrspace(1)* %123, align 4, !tbaa !7\l  %124 = add i32 %115, %112\l  %125 = icmp slt i32 %124, %0\l  br i1 %125, label %114, label %113, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5545940:s0 -> Node0x5545940;
	Node0x5545940:s1 -> Node0x5545580;
}
