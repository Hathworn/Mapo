digraph "CFG for '_Z16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjj' function" {
	label="CFG for '_Z16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjj' function";

	Node0x4c581c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %7, %13\l  %15 = add i32 %14, %8\l  %16 = zext i32 %15 to i64\l  %17 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %16, i32 0, i32 0, i32 0, i64 0\l  %18 = load i32, i32 addrspace(1)* %17, align 8, !amdgpu.noclobber !6\l  %19 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %16, i32 0, i32 0, i32 0, i64 1\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !amdgpu.noclobber !6\l  %21 = lshr i32 %18, %3\l  %22 = and i32 %21, 15\l  %23 = shl nuw nsw i32 %8, 1\l  %24 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %23\l  store i32 %22, i32 addrspace(3)* %24, align 4, !tbaa !7\l  %25 = lshr i32 %20, %3\l  %26 = and i32 %25, 15\l  %27 = add nuw nsw i32 %23, 1\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %27\l  store i32 %26, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %29 = icmp ult i32 %8, 16\l  br i1 %29, label %30, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4c581c0:s0 -> Node0x4c5b8f0;
	Node0x4c581c0:s1 -> Node0x4c5b980;
	Node0x4c5b8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%30:\l30:                                               \l  %31 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %8\l  store i32 0, i32 addrspace(3)* %31, align 4, !tbaa !7\l  br label %32\l}"];
	Node0x4c5b8f0 -> Node0x4c5b980;
	Node0x4c5b980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %33 = icmp eq i32 %8, 0\l  br i1 %33, label %44, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4c5b980:s0 -> Node0x4c5c140;
	Node0x4c5b980:s1 -> Node0x4c5c190;
	Node0x4c5c190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%34:\l34:                                               \l  %35 = add nsw i32 %8, -1\l  %36 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %35\l  %37 = bitcast i32 addrspace(3)* %36 to \<2 x i32\> addrspace(3)*\l  %38 = load \<2 x i32\>, \<2 x i32\> addrspace(3)* %37, align 4, !tbaa !7\l  %39 = extractelement \<2 x i32\> %38, i64 0\l  %40 = extractelement \<2 x i32\> %38, i64 1\l  %41 = icmp eq i32 %40, %39\l  br i1 %41, label %44, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4c5c190:s0 -> Node0x4c5c140;
	Node0x4c5c190:s1 -> Node0x4c5c6a0;
	Node0x4c5c6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %40\l  store i32 %8, i32 addrspace(3)* %43, align 4, !tbaa !7\l  br label %44\l}"];
	Node0x4c5c6a0 -> Node0x4c5c140;
	Node0x4c5c140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = add nuw nsw i32 %8, %13\l  %46 = add nsw i32 %45, -1\l  %47 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %46\l  %48 = bitcast i32 addrspace(3)* %47 to \<2 x i32\> addrspace(3)*\l  %49 = load \<2 x i32\>, \<2 x i32\> addrspace(3)* %48, align 4, !tbaa !7\l  %50 = extractelement \<2 x i32\> %49, i64 0\l  %51 = extractelement \<2 x i32\> %49, i64 1\l  %52 = icmp eq i32 %51, %50\l  br i1 %52, label %55, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4c5c140:s0 -> Node0x4c5ce40;
	Node0x4c5c140:s1 -> Node0x4c5ce90;
	Node0x4c5ce90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %51\l  store i32 %45, i32 addrspace(3)* %54, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x4c5ce90 -> Node0x4c5ce40;
	Node0x4c5ce40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %29, label %56, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4c5ce40:s0 -> Node0x4c5d2c0;
	Node0x4c5ce40:s1 -> Node0x4c5d310;
	Node0x4c5d2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %8\l  %58 = load i32, i32 addrspace(3)* %57, align 4, !tbaa !7\l  %59 = shl i32 %7, 4\l  %60 = add nuw i32 %59, %8\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %61\l  store i32 %58, i32 addrspace(1)* %62, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x4c5d2c0 -> Node0x4c5d310;
	Node0x4c5d310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %33, label %76, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4c5d310:s0 -> Node0x4c5d9e0;
	Node0x4c5d310:s1 -> Node0x4c5da30;
	Node0x4c5da30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%64:\l64:                                               \l  %65 = add nsw i32 %8, -1\l  %66 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %65\l  %67 = bitcast i32 addrspace(3)* %66 to \<2 x i32\> addrspace(3)*\l  %68 = load \<2 x i32\>, \<2 x i32\> addrspace(3)* %67, align 4, !tbaa !7\l  %69 = extractelement \<2 x i32\> %68, i64 0\l  %70 = extractelement \<2 x i32\> %68, i64 1\l  %71 = icmp eq i32 %70, %69\l  br i1 %71, label %76, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4c5da30:s0 -> Node0x4c5d9e0;
	Node0x4c5da30:s1 -> Node0x4c5bee0;
	Node0x4c5bee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%72:\l72:                                               \l  %73 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %69\l  %74 = load i32, i32 addrspace(3)* %73, align 4, !tbaa !7\l  %75 = sub i32 %8, %74\l  store i32 %75, i32 addrspace(3)* %73, align 4, !tbaa !7\l  br label %76\l}"];
	Node0x4c5bee0 -> Node0x4c5d9e0;
	Node0x4c5d9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = bitcast i32 addrspace(3)* %47 to \<2 x i32\> addrspace(3)*\l  %78 = load \<2 x i32\>, \<2 x i32\> addrspace(3)* %77, align 4, !tbaa !7\l  %79 = extractelement \<2 x i32\> %78, i64 0\l  %80 = extractelement \<2 x i32\> %78, i64 1\l  %81 = icmp eq i32 %80, %79\l  br i1 %81, label %86, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4c5d9e0:s0 -> Node0x4c5e760;
	Node0x4c5d9e0:s1 -> Node0x4c5e7b0;
	Node0x4c5e7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %79\l  %84 = load i32, i32 addrspace(3)* %83, align 4, !tbaa !7\l  %85 = sub i32 %45, %84\l  store i32 %85, i32 addrspace(3)* %83, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x4c5e7b0 -> Node0x4c5e760;
	Node0x4c5e760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = add nsw i32 %13, -1\l  %88 = icmp eq i32 %8, %87\l  br i1 %88, label %89, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4c5e760:s0 -> Node0x4c5ec90;
	Node0x4c5e760:s1 -> Node0x4c5ece0;
	Node0x4c5ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%89:\l89:                                               \l  %90 = shl nuw nsw i32 %13, 1\l  %91 = add nsw i32 %90, -1\l  %92 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sRadix1,\l... i32 0, i32 %91\l  %93 = load i32, i32 addrspace(3)* %92, align 4, !tbaa !7\l  %94 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %93\l  %95 = load i32, i32 addrspace(3)* %94, align 4, !tbaa !7\l  %96 = sub i32 %90, %95\l  store i32 %96, i32 addrspace(3)* %94, align 4, !tbaa !7\l  br label %97\l}"];
	Node0x4c5ec90 -> Node0x4c5ece0;
	Node0x4c5ece0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %29, label %98, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4c5ece0:s0 -> Node0x4c5f460;
	Node0x4c5ece0:s1 -> Node0x4c5f4b0;
	Node0x4c5f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%98:\l98:                                               \l  %99 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(3)*\l... @_ZZ16findRadixOffsetsP15HIP_vector_typeIjLj2EEPjS2_jjjE14sStartPointers, i32\l... 0, i32 %8\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !7\l  %101 = mul i32 %8, %5\l  %102 = add i32 %101, %7\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %103\l  store i32 %100, i32 addrspace(1)* %104, align 4, !tbaa !7\l  br label %105\l}"];
	Node0x4c5f460 -> Node0x4c5f4b0;
	Node0x4c5f4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  ret void\l}"];
}
