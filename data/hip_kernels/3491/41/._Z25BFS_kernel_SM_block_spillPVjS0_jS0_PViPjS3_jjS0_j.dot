digraph "CFG for '_Z25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_j' function" {
	label="CFG for '_Z25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_j' function";

	Node0x4d61da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%11:\l  %12 = addrspacecast i32 addrspace(1)* %9 to i32*\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !7\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = mul i32 %22, %18\l  %24 = add i32 %23, %13\l  %25 = load volatile i32, i32* addrspacecast (i32 addrspace(1)* @g_mutex2 to\l... i32*), align 4, !tbaa !16\l  %26 = icmp eq i32 %13, 0\l  %27 = zext i32 %24 to i64\l  %28 = icmp eq i32 %24, 0\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @b_q, i32 0,\l... i32 %13\l  %30 = addrspacecast i32 addrspace(3)* %29 to i32*\l  br label %31\l}"];
	Node0x4d61da0 -> Node0x4d64140;
	Node0x4d64140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%31:\l31:                                               \l  %32 = phi i32 [ %2, %11 ], [ %146, %143 ]\l  %33 = phi i32 [ %25, %11 ], [ %130, %143 ]\l  %34 = phi i32 [ 0, %11 ], [ %145, %143 ]\l  br i1 %26, label %35, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4d64140:s0 -> Node0x4d646e0;
	Node0x4d64140:s1 -> Node0x4d64770;
	Node0x4d646e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%35:\l35:                                               \l  store volatile i32 0, i32* addrspacecast (i32 addrspace(3)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0) to i32*), align 4, !tbaa !16\l  store volatile i32 0, i32* addrspacecast (i32 addrspace(3)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE8b_offset, i32 0, i32\l... 0) to i32*), align 4, !tbaa !16\l  br label %36\l}"];
	Node0x4d646e0 -> Node0x4d64770;
	Node0x4d64770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%36:\l36:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = icmp ult i32 %24, %32\l  br i1 %37, label %38, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4d64770:s0 -> Node0x4d65540;
	Node0x4d64770:s1 -> Node0x4d655d0;
	Node0x4d65540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%38:\l38:                                               \l  %39 = icmp eq i32 %34, 0\l  %40 = select i1 %39, i32 addrspace(1)* %0, i32 addrspace(1)* %1\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %40, i64 %27\l  %42 = addrspacecast i32 addrspace(1)* %41 to i32*\l  %43 = load volatile i32, i32* %42, align 4, !tbaa !16\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %44\l  %46 = addrspacecast i32 addrspace(1)* %45 to i32*\l  store volatile i32 0, i32* %46, align 4, !tbaa !16\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %44\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !16\l  %49 = add i32 %43, 1\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !16\l  %53 = icmp ult i32 %48, %52\l  br i1 %53, label %54, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4d65540:s0 -> Node0x4d65fc0;
	Node0x4d65540:s1 -> Node0x4d655d0;
	Node0x4d65fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %44\l  %56 = addrspacecast i32 addrspace(1)* %55 to i32*\l  br label %57\l}"];
	Node0x4d65fc0 -> Node0x4d661d0;
	Node0x4d661d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = phi i32 [ %48, %54 ], [ %92, %91 ]\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !16\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %62\l  %64 = load volatile i32, i32* %56, align 4, !tbaa !16\l  %65 = add i32 %64, 1\l  %66 = atomicrmw umin i32 addrspace(1)* %63, i32 %65\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %67 = load volatile i32, i32* %56, align 4, !tbaa !16\l  %68 = add i32 %67, 1\l  %69 = icmp ugt i32 %66, %68\l  br i1 %69, label %70, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4d661d0:s0 -> Node0x4d66c30;
	Node0x4d661d0:s1 -> Node0x4d66290;
	Node0x4d66c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %62\l  %72 = atomicrmw xchg i32 addrspace(1)* %71, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %73 = icmp eq i32 %72, 0\l  br i1 %73, label %74, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4d66c30:s0 -> Node0x4d66ef0;
	Node0x4d66c30:s1 -> Node0x4d66290;
	Node0x4d66ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%74:\l74:                                               \l  %75 = atomicrmw add i32 addrspace(3)* getelementptr inbounds ([1 x i32], [1\l... x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0), i32 1 syncscope(\"agent-one-as\") monotonic, align 4\l  %76 = icmp ult i32 %75, %10\l  br i1 %76, label %77, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4d66ef0:s0 -> Node0x4d671f0;
	Node0x4d66ef0:s1 -> Node0x4d67240;
	Node0x4d671f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%77:\l77:                                               \l  %78 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @b_q, i32 0,\l... i32 %75\l  %79 = addrspacecast i32 addrspace(3)* %78 to i32*\l  br label %89\l}"];
	Node0x4d671f0 -> Node0x4d67400;
	Node0x4d67240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%80:\l80:                                               \l  %81 = atomicrmw add i32 addrspace(1)* getelementptr inbounds ([1 x i32], [1\l... x i32] addrspace(1)* @g_q_offsets, i64 0, i64 0), i32 1\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %82 = sext i32 %81 to i64\l  br i1 %39, label %83, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4d67240:s0 -> Node0x4d67680;
	Node0x4d67240:s1 -> Node0x4d676d0;
	Node0x4d67680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%83:\l83:                                               \l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  %85 = addrspacecast i32 addrspace(1)* %84 to i32*\l  br label %89\l}"];
	Node0x4d67680 -> Node0x4d67400;
	Node0x4d676d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %82\l  %88 = addrspacecast i32 addrspace(1)* %87 to i32*\l  br label %89\l}"];
	Node0x4d676d0 -> Node0x4d67400;
	Node0x4d67400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%89:\l89:                                               \l  %90 = phi i32* [ %85, %83 ], [ %88, %86 ], [ %79, %77 ]\l  store volatile i32 %61, i32* %90, align 4, !tbaa !16\l  br label %91\l}"];
	Node0x4d67400 -> Node0x4d66290;
	Node0x4d66290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%91:\l91:                                               \l  %92 = add nuw i32 %58, 1\l  %93 = icmp ult i32 %92, %52\l  br i1 %93, label %57, label %94, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d66290:s0 -> Node0x4d661d0;
	Node0x4d66290:s1 -> Node0x4d655d0;
	Node0x4d655d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%94:\l94:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %26, label %95, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4d655d0:s0 -> Node0x4d680a0;
	Node0x4d655d0:s1 -> Node0x4d680f0;
	Node0x4d680a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%95:\l95:                                               \l  %96 = load volatile i32, i32* addrspacecast (i32 addrspace(3)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0) to i32*), align 4, !tbaa !16\l  %97 = icmp ugt i32 %96, %10\l  br i1 %97, label %98, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4d680a0:s0 -> Node0x4d682f0;
	Node0x4d680a0:s1 -> Node0x4d68340;
	Node0x4d682f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%98:\l98:                                               \l  store volatile i32 %10, i32* addrspacecast (i32 addrspace(3)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0) to i32*), align 4, !tbaa !16\l  br label %99\l}"];
	Node0x4d682f0 -> Node0x4d68340;
	Node0x4d68340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%99:\l99:                                               \l  %100 = load volatile i32, i32* addrspacecast (i32 addrspace(3)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0) to i32*), align 4, !tbaa !16\l  %101 = atomicrmw add i32 addrspace(1)* getelementptr inbounds ([1 x i32], [1\l... x i32] addrspace(1)* @g_q_offsets, i64 0, i64 0), i32 %100\l... syncscope(\"agent-one-as\") monotonic, align 4\l  store volatile i32 %101, i32* addrspacecast (i32 addrspace(3)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE8b_offset, i32 0, i32\l... 0) to i32*), align 4, !tbaa !16\l  br label %102\l}"];
	Node0x4d68340 -> Node0x4d680f0;
	Node0x4d680f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%102:\l102:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %103 = udiv i32 %21, %18\l  %104 = mul i32 %103, %18\l  %105 = icmp ugt i32 %21, %104\l  %106 = zext i1 %105 to i32\l  %107 = add i32 %103, %106\l  %108 = add i32 %107, %33\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %26, label %109, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4d680f0:s0 -> Node0x4d68d60;
	Node0x4d680f0:s1 -> Node0x4d68db0;
	Node0x4d68d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%109:\l109:                                              \l  %110 = atomicrmw add i32 addrspace(1)* @g_mutex, i32 1\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %111\l}"];
	Node0x4d68d60 -> Node0x4d68f40;
	Node0x4d68f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  %112 = load volatile i32, i32* addrspacecast (i32 addrspace(1)* @g_mutex to\l... i32*), align 4, !tbaa !16\l  %113 = icmp slt i32 %112, %108\l  br i1 %113, label %111, label %114, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d68f40:s0 -> Node0x4d68f40;
	Node0x4d68f40:s1 -> Node0x4d68db0;
	Node0x4d68db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%114:\l114:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %28, label %115, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4d68db0:s0 -> Node0x4d69420;
	Node0x4d68db0:s1 -> Node0x4d69470;
	Node0x4d69420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%115:\l115:                                              \l  %116 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_offsets, i64\l... 0, i64 0) to i32*), align 4, !tbaa !16\l  store volatile i32 %116, i32* addrspacecast (i32 addrspace(1)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0, i64 0) to\l... i32*), align 4, !tbaa !16\l  store volatile i32 0, i32* addrspacecast (i32 addrspace(1)* getelementptr\l... inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_offsets, i64 0, i64 0) to\l... i32*), align 4, !tbaa !16\l  br label %117\l}"];
	Node0x4d69420 -> Node0x4d69470;
	Node0x4d69470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%117:\l117:                                              \l  %118 = load volatile i32, i32* addrspacecast (i32 addrspace(3)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE10b_q_length, i32 0,\l... i32 0) to i32*), align 4, !tbaa !16\l  %119 = icmp ult i32 %13, %118\l  br i1 %119, label %120, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4d69470:s0 -> Node0x4d69980;
	Node0x4d69470:s1 -> Node0x4d699d0;
	Node0x4d69980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%120:\l120:                                              \l  %121 = icmp eq i32 %34, 0\l  %122 = load volatile i32, i32* %30, align 4, !tbaa !16\l  %123 = load volatile i32, i32* addrspacecast (i32 addrspace(3)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(3)*\l... @_ZZ25BFS_kernel_SM_block_spillPVjS0_jS0_PViPjS3_jjS0_jE8b_offset, i32 0, i32\l... 0) to i32*), align 4, !tbaa !16\l  %124 = add i32 %123, %13\l  %125 = zext i32 %124 to i64\l  %126 = select i1 %121, i32 addrspace(1)* %1, i32 addrspace(1)* %0\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %126, i64 %125\l  %128 = addrspacecast i32 addrspace(1)* %127 to i32*\l  store volatile i32 %122, i32* %128, align 4, !tbaa !16\l  br label %129\l}"];
	Node0x4d69980 -> Node0x4d699d0;
	Node0x4d699d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%129:\l129:                                              \l  %130 = add i32 %108, %107\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %26, label %131, label %136\l|{<s0>T|<s1>F}}"];
	Node0x4d699d0:s0 -> Node0x4d66a00;
	Node0x4d699d0:s1 -> Node0x4d66a50;
	Node0x4d66a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%131:\l131:                                              \l  %132 = atomicrmw add i32 addrspace(1)* @g_mutex, i32 1\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %133\l}"];
	Node0x4d66a00 -> Node0x4d66aa0;
	Node0x4d66aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = load volatile i32, i32* addrspacecast (i32 addrspace(1)* @g_mutex to\l... i32*), align 4, !tbaa !16\l  %135 = icmp slt i32 %134, %130\l  br i1 %135, label %133, label %136, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4d66aa0:s0 -> Node0x4d66aa0;
	Node0x4d66aa0:s1 -> Node0x4d66a50;
	Node0x4d66a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%136:\l136:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %137 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  %138 = icmp ult i32 %137, %18\l  br i1 %138, label %147, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4d66a50:s0 -> Node0x4d6b2e0;
	Node0x4d66a50:s1 -> Node0x4d6b330;
	Node0x4d6b330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%139:\l139:                                              \l  %140 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  %141 = mul i32 %107, %18\l  %142 = icmp ugt i32 %140, %141\l  br i1 %142, label %147, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4d6b330:s0 -> Node0x4d6b2e0;
	Node0x4d6b330:s1 -> Node0x4d64240;
	Node0x4d64240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%143:\l143:                                              \l  %144 = add nsw i32 %34, 1\l  %145 = srem i32 %144, 2\l  %146 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  br label %31, !llvm.loop !23\l}"];
	Node0x4d64240 -> Node0x4d64140;
	Node0x4d6b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%147:\l147:                                              \l  %148 = icmp eq i32 %34, 0\l  br i1 %148, label %149, label %165\l|{<s0>T|<s1>F}}"];
	Node0x4d6b2e0:s0 -> Node0x4d6b980;
	Node0x4d6b2e0:s1 -> Node0x4d6b9d0;
	Node0x4d6b980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%149:\l149:                                              \l  %150 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  %151 = icmp slt i32 %24, %150\l  br i1 %151, label %152, label %165\l|{<s0>T|<s1>F}}"];
	Node0x4d6b980:s0 -> Node0x4d6bbd0;
	Node0x4d6b980:s1 -> Node0x4d6b9d0;
	Node0x4d6bbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%152:\l152:                                              \l  %153 = mul i32 %107, %18\l  br label %154\l}"];
	Node0x4d6bbd0 -> Node0x4d6bd60;
	Node0x4d6bd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%154:\l154:                                              \l  %155 = phi i32 [ %24, %152 ], [ %162, %154 ]\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %156\l  %158 = addrspacecast i32 addrspace(1)* %157 to i32*\l  %159 = load volatile i32, i32* %158, align 4, !tbaa !16\l  %160 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %156\l  %161 = addrspacecast i32 addrspace(1)* %160 to i32*\l  store volatile i32 %159, i32* %161, align 4, !tbaa !16\l  %162 = add i32 %155, %153\l  %163 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  %164 = icmp slt i32 %162, %163\l  br i1 %164, label %154, label %165, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4d6bd60:s0 -> Node0x4d6bd60;
	Node0x4d6bd60:s1 -> Node0x4d6b9d0;
	Node0x4d6b9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%165:\l165:                                              \l  br i1 %28, label %166, label %168\l|{<s0>T|<s1>F}}"];
	Node0x4d6b9d0:s0 -> Node0x4d6c5a0;
	Node0x4d6b9d0:s1 -> Node0x4d6c5f0;
	Node0x4d6c5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%166:\l166:                                              \l  %167 = load volatile i32, i32* addrspacecast (i32 addrspace(1)*\l... getelementptr inbounds ([1 x i32], [1 x i32] addrspace(1)* @g_q_size, i64 0,\l... i64 0) to i32*), align 4, !tbaa !16\l  store volatile i32 %167, i32* %12, align 4, !tbaa !16\l  br label %168\l}"];
	Node0x4d6c5a0 -> Node0x4d6c5f0;
	Node0x4d6c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%168:\l168:                                              \l  ret void\l}"];
}
