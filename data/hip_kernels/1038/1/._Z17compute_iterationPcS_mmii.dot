digraph "CFG for '_Z17compute_iterationPcS_mmii' function" {
	label="CFG for '_Z17compute_iterationPcS_mmii' function";

	Node0x5787ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %4\l  %25 = icmp slt i32 %23, %5\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5787ce0:s0 -> Node0x578b760;
	Node0x5787ce0:s1 -> Node0x578b7f0;
	Node0x578b760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = add nsw i32 %4, -1\l  %29 = add i32 %28, %15\l  %30 = srem i32 %29, %4\l  %31 = add nsw i32 %15, 1\l  %32 = srem i32 %31, %4\l  %33 = add nsw i32 %5, -1\l  %34 = add i32 %33, %23\l  %35 = srem i32 %34, %5\l  %36 = add nsw i32 %23, 1\l  %37 = srem i32 %36, %5\l  %38 = sext i32 %35 to i64\l  %39 = mul i64 %38, %2\l  %40 = sext i32 %30 to i64\l  %41 = add i64 %39, %40\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %41\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %44 = sext i32 %15 to i64\l  %45 = add i64 %39, %44\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %45\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %48 = add i8 %47, %43\l  %49 = sext i32 %32 to i64\l  %50 = add i64 %39, %49\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = add i8 %48, %52\l  %54 = sext i32 %23 to i64\l  %55 = mul i64 %54, %2\l  %56 = add i64 %55, %40\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %56\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %59 = add i8 %53, %58\l  %60 = add i64 %55, %49\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %63 = add i8 %59, %62\l  %64 = sext i32 %37 to i64\l  %65 = mul i64 %64, %2\l  %66 = add i64 %65, %40\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %69 = add i8 %63, %68\l  %70 = add i64 %65, %44\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %73 = add i8 %69, %72\l  %74 = add i64 %65, %49\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %77 = add i8 %73, %76\l  %78 = icmp eq i8 %77, 3\l  %79 = add i64 %55, %44\l  br i1 %78, label %86, label %80\l|{<s0>T|<s1>F}}"];
	Node0x578b760:s0 -> Node0x578be20;
	Node0x578b760:s1 -> Node0x578e2b0;
	Node0x578e2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%80:\l80:                                               \l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %79\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %83 = icmp ne i8 %82, 0\l  %84 = icmp eq i8 %77, 2\l  %85 = select i1 %83, i1 %84, i1 false\l  br label %86\l}"];
	Node0x578e2b0 -> Node0x578be20;
	Node0x578be20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%86:\l86:                                               \l  %87 = phi i1 [ %85, %80 ], [ true, %27 ]\l  %88 = zext i1 %87 to i8\l  %89 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %79\l  store i8 %88, i8 addrspace(1)* %89, align 1, !tbaa !7\l  br label %90\l}"];
	Node0x578be20 -> Node0x578b7f0;
	Node0x578b7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  ret void\l}"];
}
