digraph "CFG for '_Z18kernel_curand_initP12hiprandStatei' function" {
	label="CFG for '_Z18kernel_curand_initP12hiprandStatei' function";

	Node0x5184a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%2:\l  %3 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = sext i32 %12 to i64\l  %14 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %14) #4\l  %15 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 0\l  %16 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 1\l  %17 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 2\l  %18 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 3\l  %19 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 4\l  %20 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 0\l  %21 = xor i32 %1, 746559103\l  %22 = icmp sgt i32 %1, -1\l  %23 = mul i32 %21, 1228688033\l  %24 = select i1 %22, i32 -1973591729, i32 -100066652\l  %25 = add i32 %23, 123456789\l  store i32 %25, i32 addrspace(5)* %15, align 8, !tbaa !7\l  %26 = xor i32 %23, 362436069\l  store i32 %26, i32 addrspace(5)* %16, align 4, !tbaa !7\l  %27 = add nsw i32 %24, 521288629\l  store i32 %27, i32 addrspace(5)* %17, align 8, !tbaa !7\l  %28 = xor i32 %24, 88675123\l  store i32 %28, i32 addrspace(5)* %18, align 4, !tbaa !7\l  %29 = add i32 %23, 5783321\l  store i32 %29, i32 addrspace(5)* %19, align 8, !tbaa !7\l  %30 = add i32 %23, 6615241\l  %31 = add i32 %30, %24\l  store i32 %31, i32 addrspace(5)* %20, align 8, !tbaa !11\l  %32 = icmp eq i32 %12, 0\l  br i1 %32, label %210, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5184a10:s0 -> Node0x518a110;
	Node0x5184a10:s1 -> Node0x518a1a0;
	Node0x518a1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%33:\l33:                                               \l  %34 = phi i64 [ %43, %41 ], [ %13, %2 ]\l  %35 = phi i32 [ %42, %41 ], [ 0, %2 ]\l  %36 = trunc i64 %34 to i32\l  %37 = and i32 %36, 3\l  %38 = icmp eq i32 %37, 0\l  br i1 %38, label %41, label %39\l|{<s0>T|<s1>F}}"];
	Node0x518a1a0:s0 -> Node0x518bdd0;
	Node0x518a1a0:s1 -> Node0x518c190;
	Node0x518c190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%39:\l39:                                               \l  %40 = zext i32 %35 to i64\l  br label %45\l}"];
	Node0x518c190 -> Node0x518c340;
	Node0x518bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %35, 1\l  %43 = lshr i64 %34, 2\l  %44 = icmp ult i64 %34, 4\l  br i1 %44, label %210, label %33, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x518bdd0:s0 -> Node0x518a110;
	Node0x518bdd0:s1 -> Node0x518a1a0;
	Node0x518c340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %39 ], [ %208, %207 ]\l  br label %47\l}"];
	Node0x518c340 -> Node0x518c820;
	Node0x518c820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %45 ], [ %180, %47 ]\l  %49 = phi i32 [ 0, %45 ], [ %186, %47 ]\l  %50 = phi i32 [ 0, %45 ], [ %192, %47 ]\l  %51 = phi i32 [ 0, %45 ], [ %198, %47 ]\l  %52 = phi i32 [ 0, %45 ], [ %204, %47 ]\l  %53 = phi i32 [ 0, %45 ], [ %205, %47 ]\l  %54 = lshr i32 %53, 5\l  %55 = and i32 %53, 28\l  %56 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %54\l  %57 = load i32, i32 addrspace(5)* %56, align 4, !tbaa !7\l  %58 = shl nuw i32 1, %55\l  %59 = and i32 %58, %57\l  %60 = icmp eq i32 %59, 0\l  %61 = mul nuw nsw i32 %53, 5\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %62\l  %64 = load i32, i32 addrspace(4)* %63, align 16, !tbaa !7\l  %65 = select i1 %60, i32 0, i32 %64\l  %66 = xor i32 %65, %48\l  %67 = or i32 %61, 1\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %68\l  %70 = load i32, i32 addrspace(4)* %69, align 4, !tbaa !7\l  %71 = select i1 %60, i32 0, i32 %70\l  %72 = xor i32 %71, %49\l  %73 = or i32 %61, 2\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %74\l  %76 = load i32, i32 addrspace(4)* %75, align 8, !tbaa !7\l  %77 = select i1 %60, i32 0, i32 %76\l  %78 = xor i32 %77, %50\l  %79 = or i32 %61, 3\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %80\l  %82 = load i32, i32 addrspace(4)* %81, align 4, !tbaa !7\l  %83 = select i1 %60, i32 0, i32 %82\l  %84 = xor i32 %83, %51\l  %85 = add nuw nsw i32 %61, 4\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %86\l  %88 = load i32, i32 addrspace(4)* %87, align 16, !tbaa !7\l  %89 = select i1 %60, i32 0, i32 %88\l  %90 = xor i32 %89, %52\l  %91 = or i32 %53, 1\l  %92 = lshr i32 %53, 5\l  %93 = and i32 %91, 29\l  %94 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %92\l  %95 = load i32, i32 addrspace(5)* %94, align 4, !tbaa !7\l  %96 = shl nuw i32 1, %93\l  %97 = and i32 %96, %95\l  %98 = icmp eq i32 %97, 0\l  %99 = mul nuw nsw i32 %91, 5\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %100\l  %102 = load i32, i32 addrspace(4)* %101, align 4, !tbaa !7\l  %103 = select i1 %98, i32 0, i32 %102\l  %104 = xor i32 %103, %66\l  %105 = add nuw nsw i32 %99, 1\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %106\l  %108 = load i32, i32 addrspace(4)* %107, align 8, !tbaa !7\l  %109 = select i1 %98, i32 0, i32 %108\l  %110 = xor i32 %109, %72\l  %111 = or i32 %99, 2\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %112\l  %114 = load i32, i32 addrspace(4)* %113, align 4, !tbaa !7\l  %115 = select i1 %98, i32 0, i32 %114\l  %116 = xor i32 %115, %78\l  %117 = add nuw nsw i32 %99, 3\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %118\l  %120 = load i32, i32 addrspace(4)* %119, align 16, !tbaa !7\l  %121 = select i1 %98, i32 0, i32 %120\l  %122 = xor i32 %121, %84\l  %123 = add nuw nsw i32 %99, 4\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %124\l  %126 = load i32, i32 addrspace(4)* %125, align 4, !tbaa !7\l  %127 = select i1 %98, i32 0, i32 %126\l  %128 = xor i32 %127, %90\l  %129 = or i32 %53, 2\l  %130 = lshr i32 %53, 5\l  %131 = and i32 %129, 30\l  %132 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %130\l  %133 = load i32, i32 addrspace(5)* %132, align 4, !tbaa !7\l  %134 = shl nuw i32 1, %131\l  %135 = and i32 %134, %133\l  %136 = icmp eq i32 %135, 0\l  %137 = mul nuw nsw i32 %129, 5\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %138\l  %140 = load i32, i32 addrspace(4)* %139, align 8, !tbaa !7\l  %141 = select i1 %136, i32 0, i32 %140\l  %142 = xor i32 %141, %104\l  %143 = or i32 %137, 1\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %144\l  %146 = load i32, i32 addrspace(4)* %145, align 4, !tbaa !7\l  %147 = select i1 %136, i32 0, i32 %146\l  %148 = xor i32 %147, %110\l  %149 = add nuw nsw i32 %137, 2\l  %150 = zext i32 %149 to i64\l  %151 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %150\l  %152 = load i32, i32 addrspace(4)* %151, align 16, !tbaa !7\l  %153 = select i1 %136, i32 0, i32 %152\l  %154 = xor i32 %153, %116\l  %155 = add nuw nsw i32 %137, 3\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %156\l  %158 = load i32, i32 addrspace(4)* %157, align 4, !tbaa !7\l  %159 = select i1 %136, i32 0, i32 %158\l  %160 = xor i32 %159, %122\l  %161 = add nuw nsw i32 %137, 4\l  %162 = zext i32 %161 to i64\l  %163 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %162\l  %164 = load i32, i32 addrspace(4)* %163, align 8, !tbaa !7\l  %165 = select i1 %136, i32 0, i32 %164\l  %166 = xor i32 %165, %128\l  %167 = or i32 %53, 3\l  %168 = lshr i32 %53, 5\l  %169 = and i32 %167, 31\l  %170 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 5,\l... i32 %168\l  %171 = load i32, i32 addrspace(5)* %170, align 4, !tbaa !7\l  %172 = shl nuw i32 1, %169\l  %173 = and i32 %172, %171\l  %174 = icmp eq i32 %173, 0\l  %175 = mul nuw nsw i32 %167, 5\l  %176 = zext i32 %175 to i64\l  %177 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %176\l  %178 = load i32, i32 addrspace(4)* %177, align 4, !tbaa !7\l  %179 = select i1 %174, i32 0, i32 %178\l  %180 = xor i32 %179, %142\l  %181 = add nuw nsw i32 %175, 1\l  %182 = zext i32 %181 to i64\l  %183 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %182\l  %184 = load i32, i32 addrspace(4)* %183, align 16, !tbaa !7\l  %185 = select i1 %174, i32 0, i32 %184\l  %186 = xor i32 %185, %148\l  %187 = add nuw nsw i32 %175, 2\l  %188 = zext i32 %187 to i64\l  %189 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %188\l  %190 = load i32, i32 addrspace(4)* %189, align 4, !tbaa !7\l  %191 = select i1 %174, i32 0, i32 %190\l  %192 = xor i32 %191, %154\l  %193 = add nuw nsw i32 %175, 3\l  %194 = zext i32 %193 to i64\l  %195 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %194\l  %196 = load i32, i32 addrspace(4)* %195, align 8, !tbaa !7\l  %197 = select i1 %174, i32 0, i32 %196\l  %198 = xor i32 %197, %160\l  %199 = add nuw nsw i32 %175, 4\l  %200 = zext i32 %199 to i64\l  %201 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %40, i64 %200\l  %202 = load i32, i32 addrspace(4)* %201, align 4, !tbaa !7\l  %203 = select i1 %174, i32 0, i32 %202\l  %204 = xor i32 %203, %166\l  %205 = add nuw nsw i32 %53, 4\l  %206 = icmp eq i32 %205, 160\l  br i1 %206, label %207, label %47, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x518c820:s0 -> Node0x518c6e0;
	Node0x518c820:s1 -> Node0x518c820;
	Node0x518c6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%207:\l207:                                              \l  store i32 %180, i32 addrspace(5)* %15, align 8, !tbaa !7\l  store i32 %186, i32 addrspace(5)* %16, align 4, !tbaa !7\l  store i32 %192, i32 addrspace(5)* %17, align 8, !tbaa !7\l  store i32 %198, i32 addrspace(5)* %18, align 4, !tbaa !7\l  store i32 %204, i32 addrspace(5)* %19, align 8, !tbaa !7\l  %208 = add nuw nsw i32 %46, 1\l  %209 = icmp eq i32 %208, %37\l  br i1 %209, label %41, label %45, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x518c6e0:s0 -> Node0x518bdd0;
	Node0x518c6e0:s1 -> Node0x518c340;
	Node0x518a110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%210:\l210:                                              \l  %211 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %13\l  %212 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %212, align 4, !tbaa !20\l  %213 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %3, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %213, align 8, !tbaa !21\l  %214 = bitcast %struct.hiprandState addrspace(1)* %211 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %214, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %14, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %14) #4\l  ret void\l}"];
}
