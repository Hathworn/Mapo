digraph "CFG for '_ZL23gaussdensity_direct_texiPK15HIP_vector_typeIfLj4EES2_fjPfPS_IfLj3EEf' function" {
	label="CFG for '_ZL23gaussdensity_direct_texiPK15HIP_vector_typeIfLj4EES2_fjPfPS_IfLj3EEf' function";

	Node0x4f91840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !6\l  %18 = shl i32 %9, 3\l  %19 = mul i32 %18, %14\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 16\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 8, !tbaa !16\l  %30 = mul i32 %22, %26\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %32 = add i32 %30, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = getelementptr i8, i8 addrspace(4)* %10, i64 8\l  %35 = bitcast i8 addrspace(4)* %34 to i16 addrspace(4)*\l  %36 = load i16, i16 addrspace(4)* %35, align 4, !range !4, !invariant.load !5\l  %37 = zext i16 %36 to i32\l  %38 = mul i32 %33, %37\l  %39 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !15\l  %40 = add i32 %38, %39\l  %41 = udiv i32 %17, %14\l  %42 = mul i32 %41, %14\l  %43 = icmp ugt i32 %17, %42\l  %44 = zext i1 %43 to i32\l  %45 = add i32 %41, %44\l  %46 = shl nuw nsw i32 %14, 3\l  %47 = mul i32 %46, %45\l  %48 = udiv i32 %29, %26\l  %49 = mul i32 %48, %26\l  %50 = icmp ugt i32 %29, %49\l  %51 = zext i1 %50 to i32\l  %52 = add i32 %48, %51\l  %53 = mul i32 %40, %26\l  %54 = mul i32 %53, %52\l  %55 = add i32 %54, %32\l  %56 = mul i32 %47, %55\l  %57 = add i32 %56, %21\l  %58 = add i32 %40, %4\l  %59 = uitofp i32 %21 to float\l  %60 = fmul contract float %59, %3\l  %61 = uitofp i32 %32 to float\l  %62 = fmul contract float %61, %3\l  %63 = uitofp i32 %58 to float\l  %64 = fmul contract float %63, %3\l  %65 = fmul contract float %3, 8.000000e+00\l  %66 = icmp sgt i32 %0, 0\l  br i1 %66, label %67, label %275\l|{<s0>T|<s1>F}}"];
	Node0x4f91840:s0 -> Node0x4f957f0;
	Node0x4f91840:s1 -> Node0x4f97a60;
	Node0x4f957f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %132, %67 ], [ 0.000000e+00, %8 ]\l  %69 = phi float [ %151, %67 ], [ 0.000000e+00, %8 ]\l  %70 = phi float [ %139, %67 ], [ 0.000000e+00, %8 ]\l  %71 = phi float [ %137, %67 ], [ 0.000000e+00, %8 ]\l  %72 = phi float [ %135, %67 ], [ 0.000000e+00, %8 ]\l  %73 = phi float [ %158, %67 ], [ 0.000000e+00, %8 ]\l  %74 = phi float [ %156, %67 ], [ 0.000000e+00, %8 ]\l  %75 = phi float [ %154, %67 ], [ 0.000000e+00, %8 ]\l  %76 = phi float [ %170, %67 ], [ 0.000000e+00, %8 ]\l  %77 = phi float [ %189, %67 ], [ 0.000000e+00, %8 ]\l  %78 = phi float [ %177, %67 ], [ 0.000000e+00, %8 ]\l  %79 = phi float [ %175, %67 ], [ 0.000000e+00, %8 ]\l  %80 = phi float [ %173, %67 ], [ 0.000000e+00, %8 ]\l  %81 = phi float [ %196, %67 ], [ 0.000000e+00, %8 ]\l  %82 = phi float [ %194, %67 ], [ 0.000000e+00, %8 ]\l  %83 = phi float [ %192, %67 ], [ 0.000000e+00, %8 ]\l  %84 = phi float [ %208, %67 ], [ 0.000000e+00, %8 ]\l  %85 = phi float [ %227, %67 ], [ 0.000000e+00, %8 ]\l  %86 = phi float [ %246, %67 ], [ 0.000000e+00, %8 ]\l  %87 = phi float [ %265, %67 ], [ 0.000000e+00, %8 ]\l  %88 = phi float [ %215, %67 ], [ 0.000000e+00, %8 ]\l  %89 = phi float [ %213, %67 ], [ 0.000000e+00, %8 ]\l  %90 = phi float [ %211, %67 ], [ 0.000000e+00, %8 ]\l  %91 = phi float [ %234, %67 ], [ 0.000000e+00, %8 ]\l  %92 = phi float [ %232, %67 ], [ 0.000000e+00, %8 ]\l  %93 = phi float [ %230, %67 ], [ 0.000000e+00, %8 ]\l  %94 = phi float [ %253, %67 ], [ 0.000000e+00, %8 ]\l  %95 = phi float [ %251, %67 ], [ 0.000000e+00, %8 ]\l  %96 = phi float [ %249, %67 ], [ 0.000000e+00, %8 ]\l  %97 = phi float [ %272, %67 ], [ 0.000000e+00, %8 ]\l  %98 = phi float [ %270, %67 ], [ 0.000000e+00, %8 ]\l  %99 = phi float [ %268, %67 ], [ 0.000000e+00, %8 ]\l  %100 = phi i32 [ %273, %67 ], [ 0, %8 ]\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %101, i32 0, i32 0, i32 0, i64 0\l  %103 = load float, float addrspace(1)* %102, align 16, !amdgpu.noclobber !5\l  %104 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %101, i32 0, i32 0, i32 0, i64 1\l  %105 = load float, float addrspace(1)* %104, align 4, !amdgpu.noclobber !5\l  %106 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %101, i32 0, i32 0, i32 0, i64 2\l  %107 = load float, float addrspace(1)* %106, align 8, !amdgpu.noclobber !5\l  %108 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %101, i32 0, i32 0, i32 0, i64 3\l  %109 = load float, float addrspace(1)* %108, align 4, !amdgpu.noclobber !5\l  %110 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %101, i32 0, i32 0, i32 0, i64 0\l  %111 = load float, float addrspace(1)* %110, align 16, !amdgpu.noclobber !5\l  %112 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %101, i32 0, i32 0, i32 0, i64 1\l  %113 = load float, float addrspace(1)* %112, align 4, !amdgpu.noclobber !5\l  %114 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %101, i32 0, i32 0, i32 0, i64 2\l  %115 = load float, float addrspace(1)* %114, align 8, !amdgpu.noclobber !5\l  %116 = fsub contract float %62, %105\l  %117 = fsub contract float %64, %107\l  %118 = fmul contract float %116, %116\l  %119 = fmul contract float %117, %117\l  %120 = fadd contract float %118, %119\l  %121 = fsub contract float %60, %103\l  %122 = fmul contract float %121, %121\l  %123 = fadd contract float %122, %120\l  %124 = fneg contract float %123\l  %125 = fmul contract float %109, %124\l  %126 = fcmp olt float %125, -1.260000e+02\l  %127 = select i1 %126, float 0x3BF0000000000000, float 1.000000e+00\l  %128 = select i1 %126, float 6.400000e+01, float 0.000000e+00\l  %129 = fadd float %125, %128\l  %130 = tail call float @llvm.exp2.f32(float %129)\l  %131 = fmul float %127, %130\l  %132 = fadd contract float %68, %131\l  %133 = fmul contract float %131, %7\l  %134 = fmul contract float %111, %133\l  %135 = fadd contract float %72, %134\l  %136 = fmul contract float %113, %133\l  %137 = fadd contract float %71, %136\l  %138 = fmul contract float %115, %133\l  %139 = fadd contract float %70, %138\l  %140 = fadd contract float %65, %121\l  %141 = fmul contract float %140, %140\l  %142 = fadd contract float %141, %120\l  %143 = fneg contract float %142\l  %144 = fmul contract float %109, %143\l  %145 = fcmp olt float %144, -1.260000e+02\l  %146 = select i1 %145, float 0x3BF0000000000000, float 1.000000e+00\l  %147 = select i1 %145, float 6.400000e+01, float 0.000000e+00\l  %148 = fadd float %144, %147\l  %149 = tail call float @llvm.exp2.f32(float %148)\l  %150 = fmul float %146, %149\l  %151 = fadd contract float %69, %150\l  %152 = fmul contract float %150, %7\l  %153 = fmul contract float %111, %152\l  %154 = fadd contract float %75, %153\l  %155 = fmul contract float %113, %152\l  %156 = fadd contract float %74, %155\l  %157 = fmul contract float %115, %152\l  %158 = fadd contract float %73, %157\l  %159 = fadd contract float %65, %140\l  %160 = fmul contract float %159, %159\l  %161 = fadd contract float %160, %120\l  %162 = fneg contract float %161\l  %163 = fmul contract float %109, %162\l  %164 = fcmp olt float %163, -1.260000e+02\l  %165 = select i1 %164, float 0x3BF0000000000000, float 1.000000e+00\l  %166 = select i1 %164, float 6.400000e+01, float 0.000000e+00\l  %167 = fadd float %163, %166\l  %168 = tail call float @llvm.exp2.f32(float %167)\l  %169 = fmul float %165, %168\l  %170 = fadd contract float %76, %169\l  %171 = fmul contract float %169, %7\l  %172 = fmul contract float %111, %171\l  %173 = fadd contract float %80, %172\l  %174 = fmul contract float %113, %171\l  %175 = fadd contract float %79, %174\l  %176 = fmul contract float %115, %171\l  %177 = fadd contract float %78, %176\l  %178 = fadd contract float %65, %159\l  %179 = fmul contract float %178, %178\l  %180 = fadd contract float %179, %120\l  %181 = fneg contract float %180\l  %182 = fmul contract float %109, %181\l  %183 = fcmp olt float %182, -1.260000e+02\l  %184 = select i1 %183, float 0x3BF0000000000000, float 1.000000e+00\l  %185 = select i1 %183, float 6.400000e+01, float 0.000000e+00\l  %186 = fadd float %182, %185\l  %187 = tail call float @llvm.exp2.f32(float %186)\l  %188 = fmul float %184, %187\l  %189 = fadd contract float %77, %188\l  %190 = fmul contract float %188, %7\l  %191 = fmul contract float %111, %190\l  %192 = fadd contract float %83, %191\l  %193 = fmul contract float %113, %190\l  %194 = fadd contract float %82, %193\l  %195 = fmul contract float %115, %190\l  %196 = fadd contract float %81, %195\l  %197 = fadd contract float %65, %178\l  %198 = fmul contract float %197, %197\l  %199 = fadd contract float %120, %198\l  %200 = fneg contract float %199\l  %201 = fmul contract float %109, %200\l  %202 = fcmp olt float %201, -1.260000e+02\l  %203 = select i1 %202, float 0x3BF0000000000000, float 1.000000e+00\l  %204 = select i1 %202, float 6.400000e+01, float 0.000000e+00\l  %205 = fadd float %201, %204\l  %206 = tail call float @llvm.exp2.f32(float %205)\l  %207 = fmul float %203, %206\l  %208 = fadd contract float %84, %207\l  %209 = fmul contract float %207, %7\l  %210 = fmul contract float %111, %209\l  %211 = fadd contract float %90, %210\l  %212 = fmul contract float %113, %209\l  %213 = fadd contract float %89, %212\l  %214 = fmul contract float %115, %209\l  %215 = fadd contract float %88, %214\l  %216 = fadd contract float %65, %197\l  %217 = fmul contract float %216, %216\l  %218 = fadd contract float %120, %217\l  %219 = fneg contract float %218\l  %220 = fmul contract float %109, %219\l  %221 = fcmp olt float %220, -1.260000e+02\l  %222 = select i1 %221, float 0x3BF0000000000000, float 1.000000e+00\l  %223 = select i1 %221, float 6.400000e+01, float 0.000000e+00\l  %224 = fadd float %220, %223\l  %225 = tail call float @llvm.exp2.f32(float %224)\l  %226 = fmul float %222, %225\l  %227 = fadd contract float %85, %226\l  %228 = fmul contract float %226, %7\l  %229 = fmul contract float %111, %228\l  %230 = fadd contract float %93, %229\l  %231 = fmul contract float %113, %228\l  %232 = fadd contract float %92, %231\l  %233 = fmul contract float %115, %228\l  %234 = fadd contract float %91, %233\l  %235 = fadd contract float %65, %216\l  %236 = fmul contract float %235, %235\l  %237 = fadd contract float %120, %236\l  %238 = fneg contract float %237\l  %239 = fmul contract float %109, %238\l  %240 = fcmp olt float %239, -1.260000e+02\l  %241 = select i1 %240, float 0x3BF0000000000000, float 1.000000e+00\l  %242 = select i1 %240, float 6.400000e+01, float 0.000000e+00\l  %243 = fadd float %239, %242\l  %244 = tail call float @llvm.exp2.f32(float %243)\l  %245 = fmul float %241, %244\l  %246 = fadd contract float %86, %245\l  %247 = fmul contract float %245, %7\l  %248 = fmul contract float %111, %247\l  %249 = fadd contract float %96, %248\l  %250 = fmul contract float %113, %247\l  %251 = fadd contract float %95, %250\l  %252 = fmul contract float %115, %247\l  %253 = fadd contract float %94, %252\l  %254 = fadd contract float %65, %235\l  %255 = fmul contract float %254, %254\l  %256 = fadd contract float %120, %255\l  %257 = fneg contract float %256\l  %258 = fmul contract float %109, %257\l  %259 = fcmp olt float %258, -1.260000e+02\l  %260 = select i1 %259, float 0x3BF0000000000000, float 1.000000e+00\l  %261 = select i1 %259, float 6.400000e+01, float 0.000000e+00\l  %262 = fadd float %258, %261\l  %263 = tail call float @llvm.exp2.f32(float %262)\l  %264 = fmul float %260, %263\l  %265 = fadd contract float %87, %264\l  %266 = fmul contract float %264, %7\l  %267 = fmul contract float %111, %266\l  %268 = fadd contract float %99, %267\l  %269 = fmul contract float %113, %266\l  %270 = fadd contract float %98, %269\l  %271 = fmul contract float %115, %266\l  %272 = fadd contract float %97, %271\l  %273 = add nuw nsw i32 %100, 1\l  %274 = icmp eq i32 %273, %0\l  br i1 %274, label %275, label %67, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4f957f0:s0 -> Node0x4f97a60;
	Node0x4f957f0:s1 -> Node0x4f957f0;
	Node0x4f97a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%275:\l275:                                              \l  %276 = phi float [ 0.000000e+00, %8 ], [ %268, %67 ]\l  %277 = phi float [ 0.000000e+00, %8 ], [ %270, %67 ]\l  %278 = phi float [ 0.000000e+00, %8 ], [ %272, %67 ]\l  %279 = phi float [ 0.000000e+00, %8 ], [ %249, %67 ]\l  %280 = phi float [ 0.000000e+00, %8 ], [ %251, %67 ]\l  %281 = phi float [ 0.000000e+00, %8 ], [ %253, %67 ]\l  %282 = phi float [ 0.000000e+00, %8 ], [ %230, %67 ]\l  %283 = phi float [ 0.000000e+00, %8 ], [ %232, %67 ]\l  %284 = phi float [ 0.000000e+00, %8 ], [ %234, %67 ]\l  %285 = phi float [ 0.000000e+00, %8 ], [ %211, %67 ]\l  %286 = phi float [ 0.000000e+00, %8 ], [ %213, %67 ]\l  %287 = phi float [ 0.000000e+00, %8 ], [ %215, %67 ]\l  %288 = phi float [ 0.000000e+00, %8 ], [ %265, %67 ]\l  %289 = phi float [ 0.000000e+00, %8 ], [ %246, %67 ]\l  %290 = phi float [ 0.000000e+00, %8 ], [ %227, %67 ]\l  %291 = phi float [ 0.000000e+00, %8 ], [ %208, %67 ]\l  %292 = phi float [ 0.000000e+00, %8 ], [ %192, %67 ]\l  %293 = phi float [ 0.000000e+00, %8 ], [ %194, %67 ]\l  %294 = phi float [ 0.000000e+00, %8 ], [ %196, %67 ]\l  %295 = phi float [ 0.000000e+00, %8 ], [ %173, %67 ]\l  %296 = phi float [ 0.000000e+00, %8 ], [ %175, %67 ]\l  %297 = phi float [ 0.000000e+00, %8 ], [ %177, %67 ]\l  %298 = phi float [ 0.000000e+00, %8 ], [ %189, %67 ]\l  %299 = phi float [ 0.000000e+00, %8 ], [ %170, %67 ]\l  %300 = phi float [ 0.000000e+00, %8 ], [ %154, %67 ]\l  %301 = phi float [ 0.000000e+00, %8 ], [ %156, %67 ]\l  %302 = phi float [ 0.000000e+00, %8 ], [ %158, %67 ]\l  %303 = phi float [ 0.000000e+00, %8 ], [ %135, %67 ]\l  %304 = phi float [ 0.000000e+00, %8 ], [ %137, %67 ]\l  %305 = phi float [ 0.000000e+00, %8 ], [ %139, %67 ]\l  %306 = phi float [ 0.000000e+00, %8 ], [ %151, %67 ]\l  %307 = phi float [ 0.000000e+00, %8 ], [ %132, %67 ]\l  %308 = zext i32 %57 to i64\l  %309 = getelementptr inbounds float, float addrspace(1)* %5, i64 %308\l  %310 = load float, float addrspace(1)* %309, align 4, !tbaa !19,\l... !amdgpu.noclobber !5\l  %311 = fadd contract float %307, %310\l  store float %311, float addrspace(1)* %309, align 4, !tbaa !19\l  %312 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %308, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %313 = load float, float addrspace(1)* %312, align 4, !tbaa !23\l  %314 = fadd contract float %303, %313\l  store float %314, float addrspace(1)* %312, align 4, !tbaa !23\l  %315 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %308, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %316 = load float, float addrspace(1)* %315, align 4, !tbaa !23\l  %317 = fadd contract float %304, %316\l  store float %317, float addrspace(1)* %315, align 4, !tbaa !23\l  %318 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %308, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %319 = load float, float addrspace(1)* %318, align 4, !tbaa !23\l  %320 = fadd contract float %305, %319\l  store float %320, float addrspace(1)* %318, align 4, !tbaa !23\l  %321 = add i32 %57, 8\l  %322 = zext i32 %321 to i64\l  %323 = getelementptr inbounds float, float addrspace(1)* %5, i64 %322\l  %324 = load float, float addrspace(1)* %323, align 4, !tbaa !19\l  %325 = fadd contract float %306, %324\l  store float %325, float addrspace(1)* %323, align 4, !tbaa !19\l  %326 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %322, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %327 = load float, float addrspace(1)* %326, align 4, !tbaa !23\l  %328 = fadd contract float %300, %327\l  store float %328, float addrspace(1)* %326, align 4, !tbaa !23\l  %329 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %322, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %330 = load float, float addrspace(1)* %329, align 4, !tbaa !23\l  %331 = fadd contract float %301, %330\l  store float %331, float addrspace(1)* %329, align 4, !tbaa !23\l  %332 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %322, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %333 = load float, float addrspace(1)* %332, align 4, !tbaa !23\l  %334 = fadd contract float %302, %333\l  store float %334, float addrspace(1)* %332, align 4, !tbaa !23\l  %335 = add i32 %57, 16\l  %336 = zext i32 %335 to i64\l  %337 = getelementptr inbounds float, float addrspace(1)* %5, i64 %336\l  %338 = load float, float addrspace(1)* %337, align 4, !tbaa !19\l  %339 = fadd contract float %299, %338\l  store float %339, float addrspace(1)* %337, align 4, !tbaa !19\l  %340 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %336, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %341 = load float, float addrspace(1)* %340, align 4, !tbaa !23\l  %342 = fadd contract float %295, %341\l  store float %342, float addrspace(1)* %340, align 4, !tbaa !23\l  %343 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %336, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %344 = load float, float addrspace(1)* %343, align 4, !tbaa !23\l  %345 = fadd contract float %296, %344\l  store float %345, float addrspace(1)* %343, align 4, !tbaa !23\l  %346 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %336, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %347 = load float, float addrspace(1)* %346, align 4, !tbaa !23\l  %348 = fadd contract float %297, %347\l  store float %348, float addrspace(1)* %346, align 4, !tbaa !23\l  %349 = add i32 %57, 24\l  %350 = zext i32 %349 to i64\l  %351 = getelementptr inbounds float, float addrspace(1)* %5, i64 %350\l  %352 = load float, float addrspace(1)* %351, align 4, !tbaa !19\l  %353 = fadd contract float %298, %352\l  store float %353, float addrspace(1)* %351, align 4, !tbaa !19\l  %354 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %350, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %355 = load float, float addrspace(1)* %354, align 4, !tbaa !23\l  %356 = fadd contract float %292, %355\l  store float %356, float addrspace(1)* %354, align 4, !tbaa !23\l  %357 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %350, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %358 = load float, float addrspace(1)* %357, align 4, !tbaa !23\l  %359 = fadd contract float %293, %358\l  store float %359, float addrspace(1)* %357, align 4, !tbaa !23\l  %360 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %350, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %361 = load float, float addrspace(1)* %360, align 4, !tbaa !23\l  %362 = fadd contract float %294, %361\l  store float %362, float addrspace(1)* %360, align 4, !tbaa !23\l  %363 = add i32 %57, 32\l  %364 = zext i32 %363 to i64\l  %365 = getelementptr inbounds float, float addrspace(1)* %5, i64 %364\l  %366 = load float, float addrspace(1)* %365, align 4, !tbaa !19\l  %367 = fadd contract float %291, %366\l  store float %367, float addrspace(1)* %365, align 4, !tbaa !19\l  %368 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %364, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %369 = load float, float addrspace(1)* %368, align 4, !tbaa !23\l  %370 = fadd contract float %285, %369\l  store float %370, float addrspace(1)* %368, align 4, !tbaa !23\l  %371 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %364, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %372 = load float, float addrspace(1)* %371, align 4, !tbaa !23\l  %373 = fadd contract float %286, %372\l  store float %373, float addrspace(1)* %371, align 4, !tbaa !23\l  %374 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %364, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %375 = load float, float addrspace(1)* %374, align 4, !tbaa !23\l  %376 = fadd contract float %287, %375\l  store float %376, float addrspace(1)* %374, align 4, !tbaa !23\l  %377 = add i32 %57, 40\l  %378 = zext i32 %377 to i64\l  %379 = getelementptr inbounds float, float addrspace(1)* %5, i64 %378\l  %380 = load float, float addrspace(1)* %379, align 4, !tbaa !19\l  %381 = fadd contract float %290, %380\l  store float %381, float addrspace(1)* %379, align 4, !tbaa !19\l  %382 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %378, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %383 = load float, float addrspace(1)* %382, align 4, !tbaa !23\l  %384 = fadd contract float %282, %383\l  store float %384, float addrspace(1)* %382, align 4, !tbaa !23\l  %385 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %378, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %386 = load float, float addrspace(1)* %385, align 4, !tbaa !23\l  %387 = fadd contract float %283, %386\l  store float %387, float addrspace(1)* %385, align 4, !tbaa !23\l  %388 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %378, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %389 = load float, float addrspace(1)* %388, align 4, !tbaa !23\l  %390 = fadd contract float %284, %389\l  store float %390, float addrspace(1)* %388, align 4, !tbaa !23\l  %391 = add i32 %57, 48\l  %392 = zext i32 %391 to i64\l  %393 = getelementptr inbounds float, float addrspace(1)* %5, i64 %392\l  %394 = load float, float addrspace(1)* %393, align 4, !tbaa !19\l  %395 = fadd contract float %289, %394\l  store float %395, float addrspace(1)* %393, align 4, !tbaa !19\l  %396 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %392, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %397 = load float, float addrspace(1)* %396, align 4, !tbaa !23\l  %398 = fadd contract float %279, %397\l  store float %398, float addrspace(1)* %396, align 4, !tbaa !23\l  %399 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %392, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %400 = load float, float addrspace(1)* %399, align 4, !tbaa !23\l  %401 = fadd contract float %280, %400\l  store float %401, float addrspace(1)* %399, align 4, !tbaa !23\l  %402 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %392, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %403 = load float, float addrspace(1)* %402, align 4, !tbaa !23\l  %404 = fadd contract float %281, %403\l  store float %404, float addrspace(1)* %402, align 4, !tbaa !23\l  %405 = add i32 %57, 56\l  %406 = zext i32 %405 to i64\l  %407 = getelementptr inbounds float, float addrspace(1)* %5, i64 %406\l  %408 = load float, float addrspace(1)* %407, align 4, !tbaa !19\l  %409 = fadd contract float %288, %408\l  store float %409, float addrspace(1)* %407, align 4, !tbaa !19\l  %410 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %406, i32 0, i32 0, i32 0,\l... i32 0, i64 0\l  %411 = load float, float addrspace(1)* %410, align 4, !tbaa !23\l  %412 = fadd contract float %276, %411\l  store float %412, float addrspace(1)* %410, align 4, !tbaa !23\l  %413 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %406, i32 0, i32 0, i32 0,\l... i32 0, i64 1\l  %414 = load float, float addrspace(1)* %413, align 4, !tbaa !23\l  %415 = fadd contract float %277, %414\l  store float %415, float addrspace(1)* %413, align 4, !tbaa !23\l  %416 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %6, i64 %406, i32 0, i32 0, i32 0,\l... i32 0, i64 2\l  %417 = load float, float addrspace(1)* %416, align 4, !tbaa !23\l  %418 = fadd contract float %278, %417\l  store float %418, float addrspace(1)* %416, align 4, !tbaa !23\l  ret void\l}"];
}
