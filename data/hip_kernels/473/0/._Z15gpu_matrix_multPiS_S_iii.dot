digraph "CFG for '_Z15gpu_matrix_multPiS_S_iii' function" {
	label="CFG for '_Z15gpu_matrix_multPiS_S_iii' function";

	Node0x514fbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %23, %5\l  %25 = icmp slt i32 %15, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %166\l|{<s0>T|<s1>F}}"];
	Node0x514fbc0:s0 -> Node0x5153640;
	Node0x514fbc0:s1 -> Node0x51536d0;
	Node0x5153640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = icmp sgt i32 %4, 0\l  br i1 %28, label %29, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5153640:s0 -> Node0x51538d0;
	Node0x5153640:s1 -> Node0x5153920;
	Node0x51538d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %4\l  %31 = and i32 %4, 7\l  %32 = icmp ult i32 %4, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x51538d0:s0 -> Node0x5151be0;
	Node0x51538d0:s1 -> Node0x5151c30;
	Node0x5151c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %4, -8\l  br label %64\l}"];
	Node0x5151c30 -> Node0x5153fc0;
	Node0x5151be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %29 ], [ %162, %64 ]\l  %37 = phi i32 [ 0, %29 ], [ %163, %64 ]\l  %38 = phi i32 [ 0, %29 ], [ %162, %64 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %58, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5151be0:s0 -> Node0x5153920;
	Node0x5151be0:s1 -> Node0x51547e0;
	Node0x51547e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %55, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %54, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %56, %40 ], [ 0, %35 ]\l  %44 = add nsw i32 %41, %30\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %48 = mul nsw i32 %41, %5\l  %49 = add nsw i32 %48, %23\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = mul nsw i32 %52, %47\l  %54 = add nsw i32 %53, %42\l  %55 = add nuw nsw i32 %41, 1\l  %56 = add i32 %43, 1\l  %57 = icmp eq i32 %56, %31\l  br i1 %57, label %58, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x51547e0:s0 -> Node0x5153920;
	Node0x51547e0:s1 -> Node0x51547e0;
	Node0x5153920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %27 ], [ %36, %35 ], [ %54, %40 ]\l  %60 = mul nsw i32 %15, %5\l  %61 = add nsw i32 %60, %23\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %62\l  store i32 %59, i32 addrspace(1)* %63, align 4, !tbaa !7\l  br label %166\l}"];
	Node0x5153920 -> Node0x51536d0;
	Node0x5153fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi i32 [ 0, %33 ], [ %163, %64 ]\l  %66 = phi i32 [ 0, %33 ], [ %162, %64 ]\l  %67 = phi i32 [ 0, %33 ], [ %164, %64 ]\l  %68 = add nsw i32 %65, %30\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %72 = mul nsw i32 %65, %5\l  %73 = add nsw i32 %72, %23\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %77 = mul nsw i32 %76, %71\l  %78 = add nsw i32 %77, %66\l  %79 = or i32 %65, 1\l  %80 = add nsw i32 %79, %30\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %84 = mul nsw i32 %79, %5\l  %85 = add nsw i32 %84, %23\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %89 = mul nsw i32 %88, %83\l  %90 = add nsw i32 %89, %78\l  %91 = or i32 %65, 2\l  %92 = add nsw i32 %91, %30\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %96 = mul nsw i32 %91, %5\l  %97 = add nsw i32 %96, %23\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %98\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %101 = mul nsw i32 %100, %95\l  %102 = add nsw i32 %101, %90\l  %103 = or i32 %65, 3\l  %104 = add nsw i32 %103, %30\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = mul nsw i32 %103, %5\l  %109 = add nsw i32 %108, %23\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %113 = mul nsw i32 %112, %107\l  %114 = add nsw i32 %113, %102\l  %115 = or i32 %65, 4\l  %116 = add nsw i32 %115, %30\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = mul nsw i32 %115, %5\l  %121 = add nsw i32 %120, %23\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %125 = mul nsw i32 %124, %119\l  %126 = add nsw i32 %125, %114\l  %127 = or i32 %65, 5\l  %128 = add nsw i32 %127, %30\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %129\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %132 = mul nsw i32 %127, %5\l  %133 = add nsw i32 %132, %23\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %134\l  %136 = load i32, i32 addrspace(1)* %135, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %137 = mul nsw i32 %136, %131\l  %138 = add nsw i32 %137, %126\l  %139 = or i32 %65, 6\l  %140 = add nsw i32 %139, %30\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %144 = mul nsw i32 %139, %5\l  %145 = add nsw i32 %144, %23\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %146\l  %148 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %149 = mul nsw i32 %148, %143\l  %150 = add nsw i32 %149, %138\l  %151 = or i32 %65, 7\l  %152 = add nsw i32 %151, %30\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %153\l  %155 = load i32, i32 addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %156 = mul nsw i32 %151, %5\l  %157 = add nsw i32 %156, %23\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %158\l  %160 = load i32, i32 addrspace(1)* %159, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %161 = mul nsw i32 %160, %155\l  %162 = add nsw i32 %161, %150\l  %163 = add nuw nsw i32 %65, 8\l  %164 = add i32 %67, 8\l  %165 = icmp eq i32 %164, %34\l  br i1 %165, label %35, label %64, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5153fc0:s0 -> Node0x5151be0;
	Node0x5153fc0:s1 -> Node0x5153fc0;
	Node0x51536d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%166:\l166:                                              \l  ret void\l}"];
}
