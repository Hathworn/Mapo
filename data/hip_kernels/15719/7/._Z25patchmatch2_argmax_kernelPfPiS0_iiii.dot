digraph "CFG for '_Z25patchmatch2_argmax_kernelPfPiS0_iiii' function" {
	label="CFG for '_Z25patchmatch2_argmax_kernelPfPiS0_iiii' function";

	Node0x476f310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = mul nsw i32 %6, %5\l  %18 = shl i32 %3, 1\l  %19 = add nuw nsw i32 %18, 1\l  %20 = icmp slt i32 %16, %17\l  br i1 %20, label %21, label %106\l|{<s0>T|<s1>F}}"];
	Node0x476f310:s0 -> Node0x4771430;
	Node0x476f310:s1 -> Node0x47714c0;
	Node0x4771430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%21:\l21:                                               \l  %22 = shl nsw i32 %16, 1\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %26 = add nuw nsw i32 %22, 1\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = sub i32 0, %3\l  %31 = icmp slt i32 %3, 0\l  br i1 %31, label %106, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4771430:s0 -> Node0x47714c0;
	Node0x4771430:s1 -> Node0x4772950;
	Node0x4772950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = mul i32 %16, %19\l  %34 = add i32 %33, %3\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %23\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %37 = sub i32 %29, %3\l  %38 = icmp sgt i32 %37, -1\l  %39 = icmp slt i32 %37, %5\l  %40 = mul i32 %33, %19\l  %41 = sub i32 1, %3\l  %42 = icmp eq i32 %18, 0\l  br label %43\l}"];
	Node0x4772950 -> Node0x4771230;
	Node0x4771230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%43:\l43:                                               \l  %44 = phi float [ -1.000000e+00, %32 ], [ %63, %62 ]\l  %45 = phi i32 [ %30, %32 ], [ %64, %62 ]\l  %46 = add nsw i32 %45, %25\l  %47 = icmp sgt i32 %46, -1\l  %48 = icmp slt i32 %46, %6\l  %49 = add i32 %45, %3\l  %50 = select i1 %48, i1 %38, i1 false\l  %51 = select i1 %50, i1 %39, i1 false\l  %52 = select i1 %47, i1 %51, i1 false\l  br i1 %52, label %53, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4771230:s0 -> Node0x47743a0;
	Node0x4771230:s1 -> Node0x4774430;
	Node0x47743a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%53:\l53:                                               \l  %54 = add i32 %49, %40\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %58 = fcmp contract ogt float %57, %44\l  br i1 %58, label %59, label %60\l|{<s0>T|<s1>F}}"];
	Node0x47743a0:s0 -> Node0x4774980;
	Node0x47743a0:s1 -> Node0x4774430;
	Node0x4774980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%59:\l59:                                               \l  store i32 %46, i32 addrspace(1)* %35, align 4, !tbaa !7\l  store i32 %37, i32 addrspace(1)* %36, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x4774980 -> Node0x4774430;
	Node0x4774430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%60:\l60:                                               \l  %61 = phi float [ %44, %43 ], [ %57, %59 ], [ %44, %53 ]\l  br i1 %42, label %62, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4774430:s0 -> Node0x4773cc0;
	Node0x4774430:s1 -> Node0x4774d20;
	Node0x4773cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%62:\l62:                                               \l  %63 = phi float [ %61, %60 ], [ %103, %102 ]\l  %64 = add i32 %45, 1\l  %65 = icmp eq i32 %45, %3\l  br i1 %65, label %106, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4773cc0:s0 -> Node0x47714c0;
	Node0x4773cc0:s1 -> Node0x4771230;
	Node0x4774d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi float [ %103, %102 ], [ %61, %60 ]\l  %68 = phi i32 [ %104, %102 ], [ %41, %60 ]\l  %69 = add nsw i32 %68, %29\l  br i1 %47, label %70, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4774d20:s0 -> Node0x47755e0;
	Node0x4774d20:s1 -> Node0x4775670;
	Node0x47755e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%70:\l70:                                               \l  %71 = icmp sgt i32 %69, -1\l  %72 = select i1 %48, i1 %71, i1 false\l  %73 = icmp slt i32 %69, %5\l  %74 = select i1 %72, i1 %73, i1 false\l  br i1 %74, label %75, label %84\l|{<s0>T|<s1>F}}"];
	Node0x47755e0:s0 -> Node0x4775a30;
	Node0x47755e0:s1 -> Node0x4775670;
	Node0x4775a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%75:\l75:                                               \l  %76 = add i32 %34, %68\l  %77 = mul i32 %76, %19\l  %78 = add i32 %49, %77\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %82 = fcmp contract ogt float %81, %67\l  br i1 %82, label %83, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4775a30:s0 -> Node0x4776500;
	Node0x4775a30:s1 -> Node0x4775670;
	Node0x4776500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%83:\l83:                                               \l  store i32 %46, i32 addrspace(1)* %35, align 4, !tbaa !7\l  store i32 %69, i32 addrspace(1)* %36, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4776500 -> Node0x4775670;
	Node0x4775670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = phi float [ %67, %70 ], [ %67, %66 ], [ %81, %83 ], [ %67, %75 ]\l  %86 = add i32 %68, 1\l  %87 = add nsw i32 %86, %29\l  br i1 %47, label %88, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4775670:s0 -> Node0x47769f0;
	Node0x4775670:s1 -> Node0x4774e20;
	Node0x47769f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%88:\l88:                                               \l  %89 = icmp sgt i32 %87, -1\l  %90 = select i1 %48, i1 %89, i1 false\l  %91 = icmp slt i32 %87, %5\l  %92 = select i1 %90, i1 %91, i1 false\l  br i1 %92, label %93, label %102\l|{<s0>T|<s1>F}}"];
	Node0x47769f0:s0 -> Node0x4776d70;
	Node0x47769f0:s1 -> Node0x4774e20;
	Node0x4776d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%93:\l93:                                               \l  %94 = add i32 %34, %86\l  %95 = mul i32 %94, %19\l  %96 = add i32 %49, %95\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %100 = fcmp contract ogt float %99, %85\l  br i1 %100, label %101, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4776d70:s0 -> Node0x4777230;
	Node0x4776d70:s1 -> Node0x4774e20;
	Node0x4777230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%101:\l101:                                              \l  store i32 %46, i32 addrspace(1)* %35, align 4, !tbaa !7\l  store i32 %87, i32 addrspace(1)* %36, align 4, !tbaa !7\l  br label %102\l}"];
	Node0x4777230 -> Node0x4774e20;
	Node0x4774e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi float [ %85, %88 ], [ %85, %84 ], [ %99, %101 ], [ %85, %93 ]\l  %104 = add i32 %68, 2\l  %105 = icmp eq i32 %86, %3\l  br i1 %105, label %62, label %66, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4774e20:s0 -> Node0x4773cc0;
	Node0x4774e20:s1 -> Node0x4774d20;
	Node0x47714c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%106:\l106:                                              \l  ret void\l}"];
}
