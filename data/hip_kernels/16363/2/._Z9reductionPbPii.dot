digraph "CFG for '_Z9reductionPbPii' function" {
	label="CFG for '_Z9reductionPbPii' function";

	Node0x52f3f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %106\l|{<s0>T|<s1>F}}"];
	Node0x52f3f90:s0 -> Node0x52f5e90;
	Node0x52f3f90:s1 -> Node0x52f5f20;
	Node0x52f5e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = icmp sgt i32 %2, 0\l  br i1 %15, label %16, label %40\l|{<s0>T|<s1>F}}"];
	Node0x52f5e90:s0 -> Node0x52f60f0;
	Node0x52f5e90:s1 -> Node0x52f6140;
	Node0x52f60f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = mul nsw i32 %12, %2\l  %18 = and i32 %2, 7\l  %19 = icmp ult i32 %2, 8\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x52f60f0:s0 -> Node0x52f6510;
	Node0x52f60f0:s1 -> Node0x52f6560;
	Node0x52f6560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %2, -8\l  br label %44\l}"];
	Node0x52f6560 -> Node0x52f6760;
	Node0x52f6510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = phi i32 [ undef, %16 ], [ %102, %44 ]\l  %24 = phi i32 [ 0, %16 ], [ %103, %44 ]\l  %25 = phi i32 [ 0, %16 ], [ %102, %44 ]\l  %26 = icmp eq i32 %18, 0\l  br i1 %26, label %40, label %27\l|{<s0>T|<s1>F}}"];
	Node0x52f6510:s0 -> Node0x52f6140;
	Node0x52f6510:s1 -> Node0x52f6f80;
	Node0x52f6f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %37, %27 ], [ %24, %22 ]\l  %29 = phi i32 [ %36, %27 ], [ %25, %22 ]\l  %30 = phi i32 [ %38, %27 ], [ 0, %22 ]\l  %31 = add nsw i32 %28, %17\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %32\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %35 = zext i8 %34 to i32\l  %36 = add nuw nsw i32 %29, %35\l  %37 = add nuw nsw i32 %28, 1\l  %38 = add i32 %30, 1\l  %39 = icmp eq i32 %38, %18\l  br i1 %39, label %40, label %27, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x52f6f80:s0 -> Node0x52f6140;
	Node0x52f6f80:s1 -> Node0x52f6f80;
	Node0x52f6140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %14 ], [ %23, %22 ], [ %36, %27 ]\l  %42 = sext i32 %12 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  store i32 %41, i32 addrspace(1)* %43, align 4, !tbaa !14\l  br label %106\l}"];
	Node0x52f6140 -> Node0x52f5f20;
	Node0x52f6760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = phi i32 [ 0, %20 ], [ %103, %44 ]\l  %46 = phi i32 [ 0, %20 ], [ %102, %44 ]\l  %47 = phi i32 [ 0, %20 ], [ %104, %44 ]\l  %48 = add nsw i32 %45, %17\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %52 = zext i8 %51 to i32\l  %53 = add nuw nsw i32 %46, %52\l  %54 = or i32 %45, 1\l  %55 = add nsw i32 %54, %17\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %56\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %59 = zext i8 %58 to i32\l  %60 = add nuw nsw i32 %53, %59\l  %61 = or i32 %45, 2\l  %62 = add nsw i32 %61, %17\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %66 = zext i8 %65 to i32\l  %67 = add nuw nsw i32 %60, %66\l  %68 = or i32 %45, 3\l  %69 = add nsw i32 %68, %17\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %73 = zext i8 %72 to i32\l  %74 = add nuw nsw i32 %67, %73\l  %75 = or i32 %45, 4\l  %76 = add nsw i32 %75, %17\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %77\l  %79 = load i8, i8 addrspace(1)* %78, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %80 = zext i8 %79 to i32\l  %81 = add nuw nsw i32 %74, %80\l  %82 = or i32 %45, 5\l  %83 = add nsw i32 %82, %17\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %84\l  %86 = load i8, i8 addrspace(1)* %85, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %87 = zext i8 %86 to i32\l  %88 = add nuw nsw i32 %81, %87\l  %89 = or i32 %45, 6\l  %90 = add nsw i32 %89, %17\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %91\l  %93 = load i8, i8 addrspace(1)* %92, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %94 = zext i8 %93 to i32\l  %95 = add nuw nsw i32 %88, %94\l  %96 = or i32 %45, 7\l  %97 = add nsw i32 %96, %17\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %98\l  %100 = load i8, i8 addrspace(1)* %99, align 1, !tbaa !7, !range !11,\l... !amdgpu.noclobber !5\l  %101 = zext i8 %100 to i32\l  %102 = add nuw nsw i32 %95, %101\l  %103 = add nuw nsw i32 %45, 8\l  %104 = add i32 %47, 8\l  %105 = icmp eq i32 %104, %21\l  br i1 %105, label %22, label %44, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x52f6760:s0 -> Node0x52f6510;
	Node0x52f6760:s1 -> Node0x52f6760;
	Node0x52f5f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%106:\l106:                                              \l  ret void\l}"];
}
