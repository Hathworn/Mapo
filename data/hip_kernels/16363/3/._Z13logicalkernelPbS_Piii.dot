digraph "CFG for '_Z13logicalkernelPbS_Piii' function" {
	label="CFG for '_Z13logicalkernelPbS_Piii' function";

	Node0x4c455a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp slt i32 %14, %3\l  %16 = icmp sgt i32 %4, 0\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4c455a0:s0 -> Node0x4c460c0;
	Node0x4c455a0:s1 -> Node0x4c476f0;
	Node0x4c460c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %14, %4\l  %20 = icmp sgt i32 %3, 0\l  %21 = mul nsw i32 %14, %3\l  %22 = and i32 %3, 3\l  %23 = icmp ult i32 %3, 4\l  %24 = and i32 %3, -4\l  %25 = icmp eq i32 %22, 0\l  br label %26\l}"];
	Node0x4c460c0 -> Node0x4c47cb0;
	Node0x4c47cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%26:\l26:                                               \l  %27 = phi i32 [ 0, %18 ], [ %57, %56 ]\l  br i1 %20, label %28, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4c47cb0:s0 -> Node0x4c47ee0;
	Node0x4c47cb0:s1 -> Node0x4c47da0;
	Node0x4c47ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%28:\l28:                                               \l  %29 = add nsw i32 %27, %19\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = mul nsw i32 %32, %3\l  br i1 %23, label %34, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4c47ee0:s0 -> Node0x4c47580;
	Node0x4c47ee0:s1 -> Node0x4c48c40;
	Node0x4c47580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %28 ], [ %121, %118 ]\l  br i1 %25, label %56, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4c47580:s0 -> Node0x4c47da0;
	Node0x4c47580:s1 -> Node0x4c48ec0;
	Node0x4c48ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %53, %50 ], [ %35, %34 ]\l  %38 = phi i32 [ %54, %50 ], [ 0, %34 ]\l  %39 = add nsw i32 %37, %21\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !11, !range !13\l  %43 = icmp eq i8 %42, 0\l  br i1 %43, label %44, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4c48ec0:s0 -> Node0x4c497f0;
	Node0x4c48ec0:s1 -> Node0x4c49000;
	Node0x4c497f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%44:\l44:                                               \l  %45 = add nsw i32 %37, %33\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %46\l  %48 = load i8, i8 addrspace(1)* %47, align 1, !tbaa !11, !range !13\l  %49 = icmp ne i8 %48, 0\l  br label %50\l}"];
	Node0x4c497f0 -> Node0x4c49000;
	Node0x4c49000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i1 [ true, %36 ], [ %49, %44 ]\l  %52 = zext i1 %51 to i8\l  store i8 %52, i8 addrspace(1)* %41, align 1, !tbaa !11\l  %53 = add nuw nsw i32 %37, 1\l  %54 = add i32 %38, 1\l  %55 = icmp eq i32 %54, %22\l  br i1 %55, label %56, label %36, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4c49000:s0 -> Node0x4c47da0;
	Node0x4c49000:s1 -> Node0x4c48ec0;
	Node0x4c47da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%56:\l56:                                               \l  %57 = add nuw nsw i32 %27, 1\l  %58 = icmp eq i32 %57, %4\l  br i1 %58, label %124, label %26, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4c47da0:s0 -> Node0x4c476f0;
	Node0x4c47da0:s1 -> Node0x4c47cb0;
	Node0x4c48c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%59:\l59:                                               \l  %60 = phi i32 [ %121, %118 ], [ 0, %28 ]\l  %61 = phi i32 [ %122, %118 ], [ 0, %28 ]\l  %62 = add nsw i32 %60, %21\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !11, !range !13\l  %66 = icmp eq i8 %65, 0\l  br i1 %66, label %67, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4c48c40:s0 -> Node0x4c48b30;
	Node0x4c48c40:s1 -> Node0x4c4b6f0;
	Node0x4c48b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%67:\l67:                                               \l  %68 = add nsw i32 %60, %33\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !11, !range !13\l  %72 = icmp ne i8 %71, 0\l  br label %73\l}"];
	Node0x4c48b30 -> Node0x4c4b6f0;
	Node0x4c4b6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%73:\l73:                                               \l  %74 = phi i1 [ true, %59 ], [ %72, %67 ]\l  %75 = zext i1 %74 to i8\l  store i8 %75, i8 addrspace(1)* %64, align 1, !tbaa !11\l  %76 = or i32 %60, 1\l  %77 = add nsw i32 %76, %21\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !11, !range !13\l  %81 = icmp eq i8 %80, 0\l  br i1 %81, label %82, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4c4b6f0:s0 -> Node0x4c4bfe0;
	Node0x4c4b6f0:s1 -> Node0x4c4c070;
	Node0x4c4bfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%82:\l82:                                               \l  %83 = add nsw i32 %76, %33\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %84\l  %86 = load i8, i8 addrspace(1)* %85, align 1, !tbaa !11, !range !13\l  %87 = icmp ne i8 %86, 0\l  br label %88\l}"];
	Node0x4c4bfe0 -> Node0x4c4c070;
	Node0x4c4c070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%88:\l88:                                               \l  %89 = phi i1 [ true, %73 ], [ %87, %82 ]\l  %90 = zext i1 %89 to i8\l  store i8 %90, i8 addrspace(1)* %79, align 1, !tbaa !11\l  %91 = or i32 %60, 2\l  %92 = add nsw i32 %91, %21\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %93\l  %95 = load i8, i8 addrspace(1)* %94, align 1, !tbaa !11, !range !13\l  %96 = icmp eq i8 %95, 0\l  br i1 %96, label %97, label %103\l|{<s0>T|<s1>F}}"];
	Node0x4c4c070:s0 -> Node0x4c4c9a0;
	Node0x4c4c070:s1 -> Node0x4c4ca30;
	Node0x4c4c9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%97:\l97:                                               \l  %98 = add nsw i32 %91, %33\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %99\l  %101 = load i8, i8 addrspace(1)* %100, align 1, !tbaa !11, !range !13\l  %102 = icmp ne i8 %101, 0\l  br label %103\l}"];
	Node0x4c4c9a0 -> Node0x4c4ca30;
	Node0x4c4ca30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%103:\l103:                                              \l  %104 = phi i1 [ true, %88 ], [ %102, %97 ]\l  %105 = zext i1 %104 to i8\l  store i8 %105, i8 addrspace(1)* %94, align 1, !tbaa !11\l  %106 = or i32 %60, 3\l  %107 = add nsw i32 %106, %21\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %108\l  %110 = load i8, i8 addrspace(1)* %109, align 1, !tbaa !11, !range !13\l  %111 = icmp eq i8 %110, 0\l  br i1 %111, label %112, label %118\l|{<s0>T|<s1>F}}"];
	Node0x4c4ca30:s0 -> Node0x4c4d360;
	Node0x4c4ca30:s1 -> Node0x4c48d80;
	Node0x4c4d360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%112:\l112:                                              \l  %113 = add nsw i32 %106, %33\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %114\l  %116 = load i8, i8 addrspace(1)* %115, align 1, !tbaa !11, !range !13\l  %117 = icmp ne i8 %116, 0\l  br label %118\l}"];
	Node0x4c4d360 -> Node0x4c48d80;
	Node0x4c48d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%118:\l118:                                              \l  %119 = phi i1 [ true, %103 ], [ %117, %112 ]\l  %120 = zext i1 %119 to i8\l  store i8 %120, i8 addrspace(1)* %109, align 1, !tbaa !11\l  %121 = add nuw nsw i32 %60, 4\l  %122 = add i32 %61, 4\l  %123 = icmp eq i32 %122, %24\l  br i1 %123, label %34, label %59, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4c48d80:s0 -> Node0x4c47580;
	Node0x4c48d80:s1 -> Node0x4c48c40;
	Node0x4c476f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%124:\l124:                                              \l  ret void\l}"];
}
