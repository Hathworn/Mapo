digraph "CFG for '_Z16initGuessBuffersPK15HIP_vector_typeIhLj4EEPS_IfLj3EES4_jj' function" {
	label="CFG for '_Z16initGuessBuffersPK15HIP_vector_typeIhLj4EEPS_IfLj3EES4_jj' function";

	Node0x4b0bbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = mul i32 %4, %3\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %6\l  br i1 %16, label %17, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4b0bbb0:s0 -> Node0x4b0cb10;
	Node0x4b0bbb0:s1 -> Node0x4b0db30;
	Node0x4b0cb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 0\l  %20 = load i8, i8 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %21 = uitofp i8 %20 to float\l  %22 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store float %21, float addrspace(1)* %22, align 4, !tbaa !7\l  %23 = load i8, i8 addrspace(1)* %19, align 4, !tbaa !7\l  %24 = uitofp i8 %23 to float\l  %25 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store float %24, float addrspace(1)* %25, align 4, !tbaa !7\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 1\l  %27 = load i8, i8 addrspace(1)* %26, align 1, !tbaa !7\l  %28 = uitofp i8 %27 to float\l  %29 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %28, float addrspace(1)* %29, align 4, !tbaa !7\l  %30 = load i8, i8 addrspace(1)* %26, align 1, !tbaa !7\l  %31 = uitofp i8 %30 to float\l  %32 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %31, float addrspace(1)* %32, align 4, !tbaa !7\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 2\l  %34 = load i8, i8 addrspace(1)* %33, align 2, !tbaa !7\l  %35 = uitofp i8 %34 to float\l  %36 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %35, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = load i8, i8 addrspace(1)* %33, align 2, !tbaa !7\l  %38 = uitofp i8 %37 to float\l  %39 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %18, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %38, float addrspace(1)* %39, align 4, !tbaa !7\l  br label %40\l}"];
	Node0x4b0cb10 -> Node0x4b0db30;
	Node0x4b0db30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  ret void\l}"];
}
