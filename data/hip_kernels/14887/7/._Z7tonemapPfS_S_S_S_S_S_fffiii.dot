digraph "CFG for '_Z7tonemapPfS_S_S_S_S_S_fffiii' function" {
	label="CFG for '_Z7tonemapPfS_S_S_S_S_S_fffiii' function";

	Node0x470a220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !4, !invariant.load !5\l  %27 = zext i16 %26 to i32\l  %28 = mul i32 %23, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %22, %12\l  %32 = icmp slt i32 %30, %11\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %77\l|{<s0>T|<s1>F}}"];
	Node0x470a220:s0 -> Node0x470e9c0;
	Node0x470a220:s1 -> Node0x470ea50;
	Node0x470e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %30, %12\l  %36 = add nsw i32 %35, %22\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = add nsw i32 %10, -1\l  %45 = sitofp i32 %10 to float\l  %46 = fsub contract float %43, %7\l  %47 = fmul contract float %46, %45\l  %48 = fdiv contract float %47, %9\l  %49 = fptosi float %48 to i32\l  %50 = tail call i32 @llvm.smin.i32(i32 %44, i32 %49)\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %3, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fdiv contract float %53, %41\l  %55 = fmul contract float %39, %54\l  %56 = fsub contract float 1.000000e+00, %39\l  %57 = fsub contract float %56, %41\l  %58 = fmul contract float %57, %54\l  %59 = fmul contract float %55, 0x4009ECBFC0000000\l  %60 = fmul contract float %53, 0x3FF8985F00000000\l  %61 = fsub contract float %59, %60\l  %62 = fmul contract float %58, 0x3FDFE91000000000\l  %63 = fsub contract float %61, %62\l  %64 = fmul contract float %55, 0x3FEF013AA0000000\l  %65 = fmul contract float %53, 0x3FFE0346E0000000\l  %66 = fsub contract float %65, %64\l  %67 = fmul contract float %58, 0x3FA53F7CE0000000\l  %68 = fadd contract float %67, %66\l  %69 = fmul contract float %55, 0x3FAC84B5E0000000\l  %70 = fmul contract float %53, 0x3FCA1CAC00000000\l  %71 = fsub contract float %69, %70\l  %72 = fmul contract float %58, 0x3FF0E978E0000000\l  %73 = fadd contract float %72, %71\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 %37\l  store float %63, float addrspace(1)* %74, align 4, !tbaa !7\l  %75 = getelementptr inbounds float, float addrspace(1)* %5, i64 %37\l  store float %68, float addrspace(1)* %75, align 4, !tbaa !7\l  %76 = getelementptr inbounds float, float addrspace(1)* %6, i64 %37\l  store float %73, float addrspace(1)* %76, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x470e9c0 -> Node0x470ea50;
	Node0x470ea50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
