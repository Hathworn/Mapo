digraph "CFG for '_Z20cosineSimilarityCudaP15HIP_vector_typeIfLj3EEmPf' function" {
	label="CFG for '_Z20cosineSimilarityCudaP15HIP_vector_typeIfLj3EEmPf' function";

	Node0x5f41ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = icmp ult i64 %16, %1\l  br i1 %17, label %18, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5f41ad0:s0 -> Node0x5f43cb0;
	Node0x5f41ad0:s1 -> Node0x5f43d40;
	Node0x5f43cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %12, %9\l  %20 = mul i32 %19, %9\l  %21 = icmp ugt i32 %12, %20\l  %22 = zext i1 %21 to i32\l  br label %23\l}"];
	Node0x5f43cb0 -> Node0x5f440a0;
	Node0x5f440a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i64 [ %16, %18 ], [ %79, %23 ]\l  %25 = trunc i64 %24 to i32\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fcmp olt float %29, 0x39F0000000000000\l  %31 = select i1 %30, float 0x41F0000000000000, float 1.000000e+00\l  %32 = fmul float %29, %31\l  %33 = tail call float @llvm.sqrt.f32(float %32)\l  %34 = bitcast float %33 to i32\l  %35 = add nsw i32 %34, -1\l  %36 = bitcast i32 %35 to float\l  %37 = add nsw i32 %34, 1\l  %38 = bitcast i32 %37 to float\l  %39 = tail call i1 @llvm.amdgcn.class.f32(float %32, i32 608)\l  %40 = select i1 %30, float 0x3EF0000000000000, float 1.000000e+00\l  %41 = fneg float %38\l  %42 = tail call float @llvm.fma.f32(float %41, float %33, float %32)\l  %43 = fcmp ogt float %42, 0.000000e+00\l  %44 = fneg float %36\l  %45 = tail call float @llvm.fma.f32(float %44, float %33, float %32)\l  %46 = fcmp ole float %45, 0.000000e+00\l  %47 = select i1 %46, float %36, float %33\l  %48 = select i1 %43, float %38, float %47\l  %49 = fmul float %40, %48\l  %50 = select i1 %39, float %32, float %49\l  %51 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = fcmp olt float %52, 0x39F0000000000000\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %52, %54\l  %56 = tail call float @llvm.sqrt.f32(float %55)\l  %57 = bitcast float %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = bitcast i32 %58 to float\l  %60 = add nsw i32 %57, 1\l  %61 = bitcast i32 %60 to float\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 608)\l  %63 = select i1 %53, float 0x3EF0000000000000, float 1.000000e+00\l  %64 = fneg float %61\l  %65 = tail call float @llvm.fma.f32(float %64, float %56, float %55)\l  %66 = fcmp ogt float %65, 0.000000e+00\l  %67 = fneg float %59\l  %68 = tail call float @llvm.fma.f32(float %67, float %56, float %55)\l  %69 = fcmp ole float %68, 0.000000e+00\l  %70 = select i1 %69, float %59, float %56\l  %71 = select i1 %66, float %61, float %70\l  %72 = fmul float %63, %71\l  %73 = select i1 %62, float %55, float %72\l  %74 = fmul contract float %50, %73\l  %75 = fdiv contract float %27, %74\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  store float %75, float addrspace(1)* %76, align 4, !tbaa !19\l  %77 = add i32 %19, %25\l  %78 = add i32 %77, %22\l  %79 = sext i32 %78 to i64\l  %80 = icmp ult i64 %79, %1\l  br i1 %80, label %23, label %81, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5f440a0:s0 -> Node0x5f440a0;
	Node0x5f440a0:s1 -> Node0x5f43d40;
	Node0x5f43d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  ret void\l}"];
}
