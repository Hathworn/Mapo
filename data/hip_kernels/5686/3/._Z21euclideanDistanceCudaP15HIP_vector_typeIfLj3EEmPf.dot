digraph "CFG for '_Z21euclideanDistanceCudaP15HIP_vector_typeIfLj3EEmPf' function" {
	label="CFG for '_Z21euclideanDistanceCudaP15HIP_vector_typeIfLj3EEmPf' function";

	Node0x53de240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = sext i32 %15 to i64\l  %17 = icmp ult i64 %16, %1\l  br i1 %17, label %18, label %42\l|{<s0>T|<s1>F}}"];
	Node0x53de240:s0 -> Node0x53e0420;
	Node0x53de240:s1 -> Node0x53e04b0;
	Node0x53e0420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %12, %9\l  %20 = mul i32 %19, %9\l  %21 = icmp ugt i32 %12, %20\l  %22 = zext i1 %21 to i32\l  br label %23\l}"];
	Node0x53e0420 -> Node0x53e0810;
	Node0x53e0810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i64 [ %16, %18 ], [ %40, %23 ]\l  %25 = trunc i64 %24 to i32\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16\l  %30 = fmul contract float %29, 2.000000e+00\l  %31 = fsub contract float %27, %30\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %24, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = fadd contract float %33, %31\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %36 = fcmp contract olt float %34, 0.000000e+00\l  %37 = select i1 %36, float 0.000000e+00, float %34\l  store float %37, float addrspace(1)* %35, align 4, !tbaa !19\l  %38 = add i32 %19, %25\l  %39 = add i32 %38, %22\l  %40 = sext i32 %39 to i64\l  %41 = icmp ult i64 %40, %1\l  br i1 %41, label %23, label %42, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x53e0810:s0 -> Node0x53e0810;
	Node0x53e0810:s1 -> Node0x53e04b0;
	Node0x53e04b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  ret void\l}"];
}
