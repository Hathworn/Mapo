digraph "CFG for '_ZL19update_inverse_cudaPfS_iii' function" {
	label="CFG for '_ZL19update_inverse_cudaPfS_iii' function";

	Node0x5a09540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%5:\l  %6 = mul nsw i32 %4, %3\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = zext i32 %8 to i64\l  %10 = getelementptr inbounds float, float addrspace(1)* %0, i64 %9\l  %11 = load float, float addrspace(1)* %10, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %12 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE3A_k, i32 0, i32 %7\l  store float %11, float addrspace(3)* %12, align 4, !tbaa !5\l  %13 = zext i32 %7 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %1, i64 %13\l  %15 = load float, float addrspace(1)* %14, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %16 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE8u_shared, i32 0, i32 %7\l  store float %15, float addrspace(3)* %16, align 4, !tbaa !5\l  %17 = fmul contract float %11, %15\l  %18 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE6Ainv_u, i32 0, i32 %7\l  store float %17, float addrspace(3)* %18, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = ashr i32 %2, 1\l  %20 = icmp sgt i32 %2, 1\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5a09540:s0 -> Node0x5a0c5c0;
	Node0x5a09540:s1 -> Node0x5a0c650;
	Node0x5a0c5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%21:\l21:                                               \l  %22 = shl nuw nsw i32 %7, 1\l  %23 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE6Ainv_u, i32 0, i32 %22\l  %24 = bitcast float addrspace(3)* %23 to \<2 x float\> addrspace(3)*\l  br label %36\l}"];
	Node0x5a0c5c0 -> Node0x5a0c870;
	Node0x5a0c650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%25:\l25:                                               \l  %26 = load float, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)* @_ZZL19update_inverse_cudaPfS_iiiE6Ainv_u, i32 0,\l... i32 0), align 16, !tbaa !5\l  %27 = fadd contract float %26, 1.000000e+00\l  %28 = fdiv contract float 1.000000e+00, %27\l  %29 = icmp sgt i32 %2, 0\l  br i1 %29, label %30, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5a0c650:s0 -> Node0x5a0d070;
	Node0x5a0c650:s1 -> Node0x5a0dfd0;
	Node0x5a0d070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%30:\l30:                                               \l  %31 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE11Ainv_shared, i32 0, i32 %7\l  %32 = icmp eq i32 %2, 1\l  %33 = shl nuw nsw i32 %7, 1\l  %34 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZL19update_inverse_cudaPfS_iiiE6Ainv_u, i32 0, i32 %33\l  %35 = bitcast float addrspace(3)* %34 to \<2 x float\> addrspace(3)*\l  br label %50\l}"];
	Node0x5a0d070 -> Node0x5a0c820;
	Node0x5a0c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%36:\l36:                                               \l  %37 = phi i32 [ %19, %21 ], [ %47, %45 ]\l  %38 = phi float [ undef, %21 ], [ %46, %45 ]\l  %39 = icmp ult i32 %7, %37\l  br i1 %39, label %40, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5a0c870:s0 -> Node0x5a0e910;
	Node0x5a0c870:s1 -> Node0x5a0e620;
	Node0x5a0e910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%40:\l40:                                               \l  %41 = load \<2 x float\>, \<2 x float\> addrspace(3)* %24, align 8, !tbaa !5\l  %42 = extractelement \<2 x float\> %41, i64 0\l  %43 = extractelement \<2 x float\> %41, i64 1\l  %44 = fadd contract float %42, %43\l  br label %45\l}"];
	Node0x5a0e910 -> Node0x5a0e620;
	Node0x5a0e620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%45:\l45:                                               \l  %46 = phi float [ %44, %40 ], [ %38, %36 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store float %46, float addrspace(3)* %18, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = lshr i32 %37, 1\l  %48 = icmp ult i32 %37, 2\l  br i1 %48, label %25, label %36, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5a0e620:s0 -> Node0x5a0c650;
	Node0x5a0e620:s1 -> Node0x5a0c870;
	Node0x5a0dfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%49:\l49:                                               \l  ret void\l}"];
	Node0x5a0c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%50:\l50:                                               \l  %51 = phi float [ undef, %30 ], [ %62, %61 ]\l  %52 = phi i32 [ 0, %30 ], [ %69, %61 ]\l  %53 = mul nsw i32 %52, %3\l  %54 = add i32 %53, %7\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5\l  store float %57, float addrspace(3)* %31, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %58 = load float, float addrspace(3)* %16, align 4, !tbaa !5\l  %59 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %60 = fmul contract float %58, %59\l  store float %60, float addrspace(3)* %18, align 4, !tbaa !5\l  br i1 %32, label %61, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5a0c820:s0 -> Node0x5a0f400;
	Node0x5a0c820:s1 -> Node0x5a0fcf0;
	Node0x5a0f400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%61:\l61:                                               \l  %62 = phi float [ %51, %50 ], [ %81, %80 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %64 = load float, float addrspace(3)* getelementptr inbounds ([128 x float],\l... [128 x float] addrspace(3)* @_ZZL19update_inverse_cudaPfS_iiiE6Ainv_u, i32 0,\l... i32 0), align 16, !tbaa !5\l  %65 = fmul contract float %28, %64\l  %66 = load float, float addrspace(3)* %12, align 4, !tbaa !5\l  %67 = fmul contract float %65, %66\l  %68 = fsub contract float %63, %67\l  store float %68, float addrspace(1)* %56, align 4, !tbaa !5\l  %69 = add nuw nsw i32 %52, 1\l  %70 = icmp eq i32 %69, %2\l  br i1 %70, label %49, label %50, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5a0f400:s0 -> Node0x5a0dfd0;
	Node0x5a0f400:s1 -> Node0x5a0c820;
	Node0x5a0fcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi float [ %81, %80 ], [ %51, %50 ]\l  %73 = phi i32 [ %82, %80 ], [ %19, %50 ]\l  %74 = icmp ult i32 %7, %73\l  br i1 %74, label %75, label %80\l|{<s0>T|<s1>F}}"];
	Node0x5a0fcf0:s0 -> Node0x5a10ac0;
	Node0x5a0fcf0:s1 -> Node0x5a0fdf0;
	Node0x5a10ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%75:\l75:                                               \l  %76 = load \<2 x float\>, \<2 x float\> addrspace(3)* %35, align 8, !tbaa !5\l  %77 = extractelement \<2 x float\> %76, i64 0\l  %78 = extractelement \<2 x float\> %76, i64 1\l  %79 = fadd contract float %77, %78\l  br label %80\l}"];
	Node0x5a10ac0 -> Node0x5a0fdf0;
	Node0x5a0fdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %75 ], [ %72, %71 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store float %81, float addrspace(3)* %18, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %82 = lshr i32 %73, 1\l  %83 = icmp ult i32 %73, 2\l  br i1 %83, label %61, label %71, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a0fdf0:s0 -> Node0x5a0f400;
	Node0x5a0fdf0:s1 -> Node0x5a0fcf0;
}
