digraph "CFG for '_Z32psamask_distribute_backward_cudaiiiiiiiPKfPf' function" {
	label="CFG for '_Z32psamask_distribute_backward_cudaiiiiiiiPKfPf' function";

	Node0x4863400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = mul i32 %10, %15\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %21, %0\l  br i1 %22, label %23, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4863400:s0 -> Node0x48661c0;
	Node0x4863400:s1 -> Node0x4866250;
	Node0x48661c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%23:\l23:                                               \l  %24 = add nsw i32 %5, %1\l  %25 = add nsw i32 %6, %2\l  %26 = udiv i32 %18, %15\l  %27 = mul i32 %26, %15\l  %28 = icmp ugt i32 %18, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %15\l  br label %33\l}"];
	Node0x48661c0 -> Node0x48667f0;
	Node0x4866250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%32:\l32:                                               \l  ret void\l}"];
	Node0x48667f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %21, %23 ], [ %73, %72 ]\l  %35 = freeze i32 %34\l  %36 = freeze i32 %2\l  %37 = sdiv i32 %35, %36\l  %38 = mul i32 %37, %36\l  %39 = sub i32 %35, %38\l  %40 = freeze i32 %1\l  %41 = sdiv i32 %37, %40\l  %42 = mul i32 %41, %40\l  %43 = sub i32 %37, %42\l  %44 = sub nsw i32 %5, %43\l  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 0)\l  %46 = sub i32 %24, %43\l  %47 = tail call i32 @llvm.smin.i32(i32 %3, i32 %46)\l  %48 = sub nsw i32 %6, %39\l  %49 = tail call i32 @llvm.smax.i32(i32 %48, i32 0)\l  %50 = sub i32 %25, %39\l  %51 = tail call i32 @llvm.smin.i32(i32 %4, i32 %50)\l  %52 = icmp slt i32 %45, %47\l  br i1 %52, label %53, label %72\l|{<s0>T|<s1>F}}"];
	Node0x48667f0:s0 -> Node0x48679a0;
	Node0x48667f0:s1 -> Node0x4865a20;
	Node0x48679a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%53:\l53:                                               \l  %54 = icmp slt i32 %49, %51\l  %55 = mul nsw i32 %41, %1\l  %56 = add i32 %55, %43\l  %57 = mul i32 %56, %2\l  %58 = add nsw i32 %57, %39\l  %59 = mul nsw i32 %58, %1\l  %60 = sub i32 %43, %5\l  %61 = add i32 %60, %59\l  %62 = sub i32 %39, %6\l  %63 = mul nsw i32 %41, %3\l  br label %64\l}"];
	Node0x48679a0 -> Node0x4868080;
	Node0x4868080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%64:\l64:                                               \l  %65 = phi i32 [ %45, %53 ], [ %76, %75 ]\l  br i1 %54, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4868080:s0 -> Node0x48669f0;
	Node0x4868080:s1 -> Node0x48668b0;
	Node0x48669f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%66:\l66:                                               \l  %67 = add i32 %61, %65\l  %68 = mul i32 %67, %2\l  %69 = add i32 %62, %68\l  %70 = add i32 %65, %63\l  %71 = mul i32 %70, %4\l  br label %78\l}"];
	Node0x48669f0 -> Node0x48688d0;
	Node0x4865a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%72:\l72:                                               \l  %73 = add i32 %31, %34\l  %74 = icmp slt i32 %73, %0\l  br i1 %74, label %33, label %32, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4865a20:s0 -> Node0x48667f0;
	Node0x4865a20:s1 -> Node0x4866250;
	Node0x48668b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%75:\l75:                                               \l  %76 = add nuw nsw i32 %65, 1\l  %77 = icmp slt i32 %76, %47\l  br i1 %77, label %64, label %72, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x48668b0:s0 -> Node0x4868080;
	Node0x48668b0:s1 -> Node0x4865a20;
	Node0x48688d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi i32 [ %49, %66 ], [ %91, %78 ]\l  %80 = add i32 %69, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %7, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !19\l  %84 = add nsw i32 %79, %71\l  %85 = mul nsw i32 %84, %1\l  %86 = add nsw i32 %85, %43\l  %87 = mul nsw i32 %86, %2\l  %88 = add nsw i32 %87, %39\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %8, i64 %89\l  store float %83, float addrspace(1)* %90, align 4, !tbaa !19\l  %91 = add nuw nsw i32 %79, 1\l  %92 = icmp slt i32 %91, %51\l  br i1 %92, label %78, label %75, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x48688d0:s0 -> Node0x48688d0;
	Node0x48688d0:s1 -> Node0x48668b0;
}
