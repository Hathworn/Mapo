digraph "CFG for '_Z16tissueGPU3KernelPfS_S_S_iiiff' function" {
	label="CFG for '_Z16tissueGPU3KernelPfS_S_S_iiiff' function";

	Node0x45f80a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %14\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = shl nsw i32 %5, 1\l  %20 = fmul contract float %7, %7\l  %21 = fmul contract float %8, %8\l  %22 = icmp slt i32 %18, %4\l  br i1 %22, label %23, label %143\l|{<s0>T|<s1>F}}"];
	Node0x45f80a0:s0 -> Node0x45face0;
	Node0x45f80a0:s1 -> Node0x45fad70;
	Node0x45face0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%23:\l23:                                               \l  %24 = sext i32 %18 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = add nsw i32 %18, %4\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = shl nsw i32 %4, 1\l  %32 = add nsw i32 %18, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = icmp sgt i32 %5, 0\l  br i1 %36, label %37, label %140\l|{<s0>T|<s1>F}}"];
	Node0x45face0:s0 -> Node0x45fc4c0;
	Node0x45face0:s1 -> Node0x45fc550;
	Node0x45fc4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %6, 0\l  %39 = fdiv contract float %21, %20\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %39, i32 144)\l  %41 = select i1 %40, float 0x41F0000000000000, float 1.000000e+00\l  %42 = fmul float %39, %41\l  %43 = tail call float @llvm.log2.f32(float %42)\l  %44 = fmul float %43, 0x3FE62E42E0000000\l  %45 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 519)\l  %46 = fneg float %44\l  %47 = tail call float @llvm.fma.f32(float %43, float 0x3FE62E42E0000000,\l... float %46)\l  %48 = tail call float @llvm.fma.f32(float %43, float 0x3E6EFA39E0000000,\l... float %47)\l  %49 = fadd float %44, %48\l  %50 = select i1 %45, float %43, float %49\l  %51 = select i1 %40, float 0x40362E4300000000, float 0.000000e+00\l  %52 = fsub float %50, %51\l  %53 = fpext float %52 to double\l  %54 = fadd contract double %53, 1.000000e+00\l  %55 = fpext float %20 to double\l  %56 = fpext float %7 to double\l  br label %57\l}"];
	Node0x45fc4c0 -> Node0x45fe3d0;
	Node0x45fe3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %37 ], [ %138, %132 ]\l  %59 = phi float [ 0.000000e+00, %37 ], [ %137, %132 ]\l  %60 = zext i32 %58 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fsub contract float %62, %26\l  %64 = add nsw i32 %58, %5\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fsub contract float %67, %30\l  %69 = add nsw i32 %58, %19\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = fsub contract float %72, %35\l  %74 = fmul contract float %63, %63\l  %75 = fmul contract float %68, %68\l  %76 = fadd contract float %74, %75\l  %77 = fmul contract float %73, %73\l  %78 = fadd contract float %76, %77\l  %79 = fcmp contract olt float %78, %20\l  br i1 %79, label %80, label %93\l|{<s0>T|<s1>F}}"];
	Node0x45fe3d0:s0 -> Node0x45ff4d0;
	Node0x45fe3d0:s1 -> Node0x45ff560;
	Node0x45ff4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%80:\l80:                                               \l  br i1 %38, label %86, label %81\l|{<s0>T|<s1>F}}"];
	Node0x45ff4d0:s0 -> Node0x45ff6a0;
	Node0x45ff4d0:s1 -> Node0x45ff6f0;
	Node0x45ff6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%81:\l81:                                               \l  %82 = fdiv contract float %78, %20\l  %83 = fpext float %82 to double\l  %84 = fsub contract double %54, %83\l  %85 = fptrunc double %84 to float\l  br label %132\l}"];
	Node0x45ff6f0 -> Node0x45fe4d0;
	Node0x45ff6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%86:\l86:                                               \l  %87 = fpext float %78 to double\l  %88 = fmul contract double %87, 5.000000e-01\l  %89 = fdiv contract double %88, %55\l  %90 = fsub contract double 1.500000e+00, %89\l  %91 = fdiv contract double %90, %56\l  %92 = fptrunc double %91 to float\l  br label %132\l}"];
	Node0x45ff6a0 -> Node0x45fe4d0;
	Node0x45ff560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%93:\l93:                                               \l  br i1 %38, label %109, label %94\l|{<s0>T|<s1>F}}"];
	Node0x45ff560:s0 -> Node0x45ffe50;
	Node0x45ff560:s1 -> Node0x45ffea0;
	Node0x45ffea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%94:\l94:                                               \l  %95 = fdiv contract float %21, %78\l  %96 = tail call i1 @llvm.amdgcn.class.f32(float %95, i32 144)\l  %97 = select i1 %96, float 0x41F0000000000000, float 1.000000e+00\l  %98 = fmul float %95, %97\l  %99 = tail call float @llvm.log2.f32(float %98)\l  %100 = fmul float %99, 0x3FE62E42E0000000\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %99, i32 519)\l  %102 = fneg float %100\l  %103 = tail call float @llvm.fma.f32(float %99, float 0x3FE62E42E0000000,\l... float %102)\l  %104 = tail call float @llvm.fma.f32(float %99, float 0x3E6EFA39E0000000,\l... float %103)\l  %105 = fadd float %100, %104\l  %106 = select i1 %101, float %99, float %105\l  %107 = select i1 %96, float 0x40362E4300000000, float 0.000000e+00\l  %108 = fsub float %106, %107\l  br label %132\l}"];
	Node0x45ffea0 -> Node0x45fe4d0;
	Node0x45ffe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%109:\l109:                                              \l  %110 = fcmp olt float %78, 0x39F0000000000000\l  %111 = select i1 %110, float 0x41F0000000000000, float 1.000000e+00\l  %112 = fmul float %78, %111\l  %113 = tail call float @llvm.sqrt.f32(float %112)\l  %114 = bitcast float %113 to i32\l  %115 = add nsw i32 %114, -1\l  %116 = bitcast i32 %115 to float\l  %117 = add nsw i32 %114, 1\l  %118 = bitcast i32 %117 to float\l  %119 = tail call i1 @llvm.amdgcn.class.f32(float %112, i32 608)\l  %120 = select i1 %110, float 0x3EF0000000000000, float 1.000000e+00\l  %121 = fneg float %118\l  %122 = tail call float @llvm.fma.f32(float %121, float %113, float %112)\l  %123 = fcmp ogt float %122, 0.000000e+00\l  %124 = fneg float %116\l  %125 = tail call float @llvm.fma.f32(float %124, float %113, float %112)\l  %126 = fcmp ole float %125, 0.000000e+00\l  %127 = select i1 %126, float %116, float %113\l  %128 = select i1 %123, float %118, float %127\l  %129 = fmul float %120, %128\l  %130 = select i1 %119, float %112, float %129\l  %131 = fdiv contract float 1.000000e+00, %130\l  br label %132\l}"];
	Node0x45ffe50 -> Node0x45fe4d0;
	Node0x45fe4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%132:\l132:                                              \l  %133 = phi float [ %85, %81 ], [ %92, %86 ], [ %108, %94 ], [ %131, %109 ]\l  %134 = getelementptr inbounds float, float addrspace(1)* %3, i64 %60\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = fmul contract float %133, %135\l  %137 = fadd contract float %59, %136\l  %138 = add nuw nsw i32 %58, 1\l  %139 = icmp eq i32 %138, %5\l  br i1 %139, label %140, label %57, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45fe4d0:s0 -> Node0x45fc550;
	Node0x45fe4d0:s1 -> Node0x45fe3d0;
	Node0x45fc550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%140:\l140:                                              \l  %141 = phi float [ 0.000000e+00, %23 ], [ %137, %132 ]\l  %142 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  store float %141, float addrspace(1)* %142, align 4, !tbaa !7\l  br label %143\l}"];
	Node0x45fc550 -> Node0x45fad70;
	Node0x45fad70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%143:\l143:                                              \l  ret void\l}"];
}
