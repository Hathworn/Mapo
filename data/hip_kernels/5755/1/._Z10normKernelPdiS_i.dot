digraph "CFG for '_Z10normKernelPdiS_i' function" {
	label="CFG for '_Z10normKernelPdiS_i' function";

	Node0x5556370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = freeze i32 %1\l  %19 = freeze i32 %17\l  %20 = sdiv i32 %18, %19\l  %21 = mul i32 %20, %19\l  %22 = sub i32 %18, %21\l  %23 = icmp ne i32 %22, 0\l  %24 = zext i1 %23 to i32\l  %25 = add nsw i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = mul i32 %25, %26\l  %28 = add nsw i32 %27, %25\l  %29 = tail call i32 @llvm.smin.i32(i32 %28, i32 %1)\l  %30 = icmp slt i32 %27, %29\l  br i1 %30, label %31, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5556370:s0 -> Node0x5558b80;
	Node0x5556370:s1 -> Node0x5558c10;
	Node0x5558b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%31:\l31:                                               \l  %32 = icmp sgt i32 %3, 0\l  br label %33\l}"];
	Node0x5558b80 -> Node0x5558100;
	Node0x5558100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%33:\l33:                                               \l  %34 = phi i32 [ %27, %31 ], [ %70, %44 ]\l  br i1 %32, label %39, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5558100:s0 -> Node0x5559130;
	Node0x5558100:s1 -> Node0x55591c0;
	Node0x55591c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%35:\l35:                                               \l  %36 = sext i32 %34 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !15\l  br label %44\l}"];
	Node0x55591c0 -> Node0x5558ff0;
	Node0x5559130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %34, %3\l  %41 = sext i32 %34 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %2, i64 %41\l  br label %72\l}"];
	Node0x5559130 -> Node0x55597f0;
	Node0x5558c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%43:\l43:                                               \l  ret void\l}"];
	Node0x5558ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%44:\l44:                                               \l  %45 = phi i64 [ %36, %35 ], [ %41, %72 ]\l  %46 = phi double [ %38, %35 ], [ %244, %72 ]\l  %47 = getelementptr inbounds double, double addrspace(1)* %2, i64 %45\l  %48 = fcmp olt double %46, 0x1000000000000000\l  %49 = select i1 %48, double 0x4FF0000000000000, double 1.000000e+00\l  %50 = fmul double %46, %49\l  %51 = tail call double @llvm.amdgcn.rsq.f64(double %50)\l  %52 = fmul double %50, %51\l  %53 = fmul double %51, 5.000000e-01\l  %54 = fneg double %53\l  %55 = tail call double @llvm.fma.f64(double %54, double %52, double\l... 5.000000e-01)\l  %56 = tail call double @llvm.fma.f64(double %53, double %55, double %53)\l  %57 = tail call double @llvm.fma.f64(double %52, double %55, double %52)\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %58, double %57, double %50)\l  %60 = tail call double @llvm.fma.f64(double %59, double %56, double %57)\l  %61 = fneg double %60\l  %62 = tail call double @llvm.fma.f64(double %61, double %60, double %50)\l  %63 = tail call double @llvm.fma.f64(double %62, double %56, double %60)\l  %64 = select i1 %48, double 0x37F0000000000000, double 1.000000e+00\l  %65 = fmul double %64, %63\l  %66 = fcmp oeq double %50, 0.000000e+00\l  %67 = fcmp oeq double %50, 0x7FF0000000000000\l  %68 = or i1 %66, %67\l  %69 = select i1 %68, double %50, double %65\l  store double %69, double addrspace(1)* %47, align 8, !tbaa !15\l  %70 = add nsw i32 %34, 1\l  %71 = icmp slt i32 %70, %29\l  br i1 %71, label %33, label %43, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5558ff0:s0 -> Node0x5558100;
	Node0x5558ff0:s1 -> Node0x5558c10;
	Node0x55597f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %39 ], [ %245, %72 ]\l  %74 = add nsw i32 %73, %40\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !15\l  %78 = tail call double @llvm.fabs.f64(double %77)\l  %79 = tail call double @llvm.amdgcn.frexp.mant.f64(double %78)\l  %80 = fcmp olt double %79, 0x3FE5555555555555\l  %81 = zext i1 %80 to i32\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %79, i32 %81)\l  %83 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %78)\l  %84 = sub nsw i32 %83, %81\l  %85 = fadd double %82, -1.000000e+00\l  %86 = fadd double %82, 1.000000e+00\l  %87 = fadd double %86, -1.000000e+00\l  %88 = fsub double %82, %87\l  %89 = tail call double @llvm.amdgcn.rcp.f64(double %86)\l  %90 = fneg double %86\l  %91 = tail call double @llvm.fma.f64(double %90, double %89, double\l... 1.000000e+00)\l  %92 = tail call double @llvm.fma.f64(double %91, double %89, double %89)\l  %93 = tail call double @llvm.fma.f64(double %90, double %92, double\l... 1.000000e+00)\l  %94 = tail call double @llvm.fma.f64(double %93, double %92, double %92)\l  %95 = fmul double %85, %94\l  %96 = fmul double %86, %95\l  %97 = fneg double %96\l  %98 = tail call double @llvm.fma.f64(double %95, double %86, double %97)\l  %99 = tail call double @llvm.fma.f64(double %95, double %88, double %98)\l  %100 = fadd double %96, %99\l  %101 = fsub double %100, %96\l  %102 = fsub double %99, %101\l  %103 = fsub double %85, %100\l  %104 = fsub double %85, %103\l  %105 = fsub double %104, %100\l  %106 = fsub double %105, %102\l  %107 = fadd double %103, %106\l  %108 = fmul double %94, %107\l  %109 = fadd double %95, %108\l  %110 = fsub double %109, %95\l  %111 = fsub double %108, %110\l  %112 = fmul double %109, %109\l  %113 = fneg double %112\l  %114 = tail call double @llvm.fma.f64(double %109, double %109, double %113)\l  %115 = fmul double %111, 2.000000e+00\l  %116 = tail call double @llvm.fma.f64(double %109, double %115, double %114)\l  %117 = fadd double %112, %116\l  %118 = fsub double %117, %112\l  %119 = fsub double %116, %118\l  %120 = tail call double @llvm.fma.f64(double %117, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %121 = tail call double @llvm.fma.f64(double %117, double %120, double\l... 0x3FBE25E43ABE935A)\l  %122 = tail call double @llvm.fma.f64(double %117, double %121, double\l... 0x3FC110EF47E6C9C2)\l  %123 = tail call double @llvm.fma.f64(double %117, double %122, double\l... 0x3FC3B13BCFA74449)\l  %124 = tail call double @llvm.fma.f64(double %117, double %123, double\l... 0x3FC745D171BF3C30)\l  %125 = tail call double @llvm.fma.f64(double %117, double %124, double\l... 0x3FCC71C71C7792CE)\l  %126 = tail call double @llvm.fma.f64(double %117, double %125, double\l... 0x3FD24924924920DA)\l  %127 = tail call double @llvm.fma.f64(double %117, double %126, double\l... 0x3FD999999999999C)\l  %128 = sitofp i32 %84 to double\l  %129 = fmul double %128, 0x3FE62E42FEFA39EF\l  %130 = fneg double %129\l  %131 = tail call double @llvm.fma.f64(double %128, double\l... 0x3FE62E42FEFA39EF, double %130)\l  %132 = tail call double @llvm.fma.f64(double %128, double\l... 0x3C7ABC9E3B39803F, double %131)\l  %133 = fadd double %129, %132\l  %134 = fsub double %133, %129\l  %135 = fsub double %132, %134\l  %136 = tail call double @llvm.amdgcn.ldexp.f64(double %109, i32 1)\l  %137 = tail call double @llvm.amdgcn.ldexp.f64(double %111, i32 1)\l  %138 = fmul double %109, %117\l  %139 = fneg double %138\l  %140 = tail call double @llvm.fma.f64(double %117, double %109, double %139)\l  %141 = tail call double @llvm.fma.f64(double %117, double %111, double %140)\l  %142 = tail call double @llvm.fma.f64(double %119, double %109, double %141)\l  %143 = fadd double %138, %142\l  %144 = fsub double %143, %138\l  %145 = fsub double %142, %144\l  %146 = fmul double %117, %127\l  %147 = fneg double %146\l  %148 = tail call double @llvm.fma.f64(double %117, double %127, double %147)\l  %149 = tail call double @llvm.fma.f64(double %119, double %127, double %148)\l  %150 = fadd double %146, %149\l  %151 = fsub double %150, %146\l  %152 = fsub double %149, %151\l  %153 = fadd double %150, 0x3FE5555555555555\l  %154 = fadd double %153, 0xBFE5555555555555\l  %155 = fsub double %150, %154\l  %156 = fadd double %152, 0x3C8543B0D5DF274D\l  %157 = fadd double %156, %155\l  %158 = fadd double %153, %157\l  %159 = fsub double %158, %153\l  %160 = fsub double %157, %159\l  %161 = fmul double %143, %158\l  %162 = fneg double %161\l  %163 = tail call double @llvm.fma.f64(double %143, double %158, double %162)\l  %164 = tail call double @llvm.fma.f64(double %143, double %160, double %163)\l  %165 = tail call double @llvm.fma.f64(double %145, double %158, double %164)\l  %166 = fadd double %161, %165\l  %167 = fsub double %166, %161\l  %168 = fsub double %165, %167\l  %169 = fadd double %136, %166\l  %170 = fsub double %169, %136\l  %171 = fsub double %166, %170\l  %172 = fadd double %137, %168\l  %173 = fadd double %172, %171\l  %174 = fadd double %169, %173\l  %175 = fsub double %174, %169\l  %176 = fsub double %173, %175\l  %177 = fadd double %133, %174\l  %178 = fsub double %177, %133\l  %179 = fsub double %177, %178\l  %180 = fsub double %133, %179\l  %181 = fsub double %174, %178\l  %182 = fadd double %181, %180\l  %183 = fadd double %135, %176\l  %184 = fsub double %183, %135\l  %185 = fsub double %183, %184\l  %186 = fsub double %135, %185\l  %187 = fsub double %176, %184\l  %188 = fadd double %187, %186\l  %189 = fadd double %183, %182\l  %190 = fadd double %177, %189\l  %191 = fsub double %190, %177\l  %192 = fsub double %189, %191\l  %193 = fadd double %188, %192\l  %194 = fadd double %190, %193\l  %195 = fsub double %194, %190\l  %196 = fsub double %193, %195\l  %197 = fmul double %194, 2.000000e+00\l  %198 = fneg double %197\l  %199 = tail call double @llvm.fma.f64(double %194, double 2.000000e+00,\l... double %198)\l  %200 = tail call double @llvm.fma.f64(double %196, double 2.000000e+00,\l... double %199)\l  %201 = fadd double %197, %200\l  %202 = fsub double %201, %197\l  %203 = fsub double %200, %202\l  %204 = tail call double @llvm.fabs.f64(double %197) #3\l  %205 = fcmp oeq double %204, 0x7FF0000000000000\l  %206 = select i1 %205, double %197, double %201\l  %207 = tail call double @llvm.fabs.f64(double %206) #3\l  %208 = fcmp oeq double %207, 0x7FF0000000000000\l  %209 = select i1 %208, double 0.000000e+00, double %203\l  %210 = fmul double %206, 0x3FF71547652B82FE\l  %211 = tail call double @llvm.rint.f64(double %210)\l  %212 = fneg double %211\l  %213 = tail call double @llvm.fma.f64(double %212, double\l... 0x3FE62E42FEFA39EF, double %206)\l  %214 = tail call double @llvm.fma.f64(double %212, double\l... 0x3C7ABC9E3B39803F, double %213)\l  %215 = tail call double @llvm.fma.f64(double %214, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %216 = tail call double @llvm.fma.f64(double %214, double %215, double\l... 0x3EC71DEE623FDE64)\l  %217 = tail call double @llvm.fma.f64(double %214, double %216, double\l... 0x3EFA01997C89E6B0)\l  %218 = tail call double @llvm.fma.f64(double %214, double %217, double\l... 0x3F2A01A014761F6E)\l  %219 = tail call double @llvm.fma.f64(double %214, double %218, double\l... 0x3F56C16C1852B7B0)\l  %220 = tail call double @llvm.fma.f64(double %214, double %219, double\l... 0x3F81111111122322)\l  %221 = tail call double @llvm.fma.f64(double %214, double %220, double\l... 0x3FA55555555502A1)\l  %222 = tail call double @llvm.fma.f64(double %214, double %221, double\l... 0x3FC5555555555511)\l  %223 = tail call double @llvm.fma.f64(double %214, double %222, double\l... 0x3FE000000000000B)\l  %224 = tail call double @llvm.fma.f64(double %214, double %223, double\l... 1.000000e+00)\l  %225 = tail call double @llvm.fma.f64(double %214, double %224, double\l... 1.000000e+00)\l  %226 = fptosi double %211 to i32\l  %227 = tail call double @llvm.amdgcn.ldexp.f64(double %225, i32 %226)\l  %228 = fcmp ogt double %206, 1.024000e+03\l  %229 = select i1 %228, double 0x7FF0000000000000, double %227\l  %230 = fcmp olt double %206, -1.075000e+03\l  %231 = select i1 %230, double 0.000000e+00, double %229\l  %232 = tail call double @llvm.fma.f64(double %231, double %209, double %231)\l  %233 = tail call double @llvm.fabs.f64(double %231) #3\l  %234 = fcmp oeq double %233, 0x7FF0000000000000\l  %235 = select i1 %234, double %231, double %232\l  %236 = tail call double @llvm.fabs.f64(double %235)\l  %237 = fcmp oeq double %78, 0x7FF0000000000000\l  %238 = fcmp oeq double %77, 0.000000e+00\l  %239 = select i1 %237, double 0x7FF0000000000000, double %236\l  %240 = select i1 %238, double 0.000000e+00, double %239\l  %241 = fcmp uno double %77, 0.000000e+00\l  %242 = select i1 %241, double 0x7FF8000000000000, double %240\l  %243 = load double, double addrspace(1)* %42, align 8, !tbaa !15\l  %244 = fadd contract double %243, %242\l  store double %244, double addrspace(1)* %42, align 8, !tbaa !15\l  %245 = add nuw nsw i32 %73, 1\l  %246 = icmp eq i32 %245, %3\l  br i1 %246, label %44, label %72, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x55597f0:s0 -> Node0x5558ff0;
	Node0x55597f0:s1 -> Node0x55597f0;
}
