digraph "CFG for '_Z7kernel5PfS_j' function" {
	label="CFG for '_Z7kernel5PfS_j' function";

	Node0x46be4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = mul i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = add i32 %18, %19\l  %21 = shl nuw nsw i32 %11, 1\l  %22 = mul i32 %20, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = mul i32 %16, %21\l  %26 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %23\l  %27 = addrspacecast float addrspace(3)* %26 to float*\l  store volatile float 0.000000e+00, float* %27, align 4, !tbaa !16\l  %28 = icmp ult i32 %24, %2\l  br i1 %28, label %29, label %43\l|{<s0>T|<s1>F}}"];
	Node0x46be4d0:s0 -> Node0x46c1c20;
	Node0x46be4d0:s1 -> Node0x46c1cb0;
	Node0x46c1c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %41, %29 ], [ %24, %3 ]\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %34 = add i32 %30, %11\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = fadd contract float %33, %37\l  %39 = load volatile float, float* %27, align 4, !tbaa !16\l  %40 = fadd contract float %39, %38\l  store volatile float %40, float* %27, align 4, !tbaa !16\l  %41 = add i32 %30, %25\l  %42 = icmp ult i32 %41, %2\l  br i1 %42, label %29, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x46c1c20:s0 -> Node0x46c1c20;
	Node0x46c1c20:s1 -> Node0x46c1cb0;
	Node0x46c1cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = icmp ugt i16 %10, 65\l  br i1 %44, label %47, label %45\l|{<s0>T|<s1>F}}"];
	Node0x46c1cb0:s0 -> Node0x46c3810;
	Node0x46c1cb0:s1 -> Node0x46c38a0;
	Node0x46c38a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%45:\l45:                                               \l  %46 = icmp ult i32 %23, 33\l  br i1 %46, label %60, label %97\l|{<s0>T|<s1>F}}"];
	Node0x46c38a0:s0 -> Node0x46c3aa0;
	Node0x46c38a0:s1 -> Node0x46c3af0;
	Node0x46c3810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %49, %58 ], [ %11, %43 ]\l  %49 = lshr i32 %48, 1\l  %50 = icmp ult i32 %23, %49\l  br i1 %50, label %51, label %58\l|{<s0>T|<s1>F}}"];
	Node0x46c3810:s0 -> Node0x46c3ec0;
	Node0x46c3810:s1 -> Node0x46c3c60;
	Node0x46c3ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%51:\l51:                                               \l  %52 = add nuw nsw i32 %49, %23\l  %53 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %52\l  %54 = addrspacecast float addrspace(3)* %53 to float*\l  %55 = load volatile float, float* %54, align 4, !tbaa !16\l  %56 = load volatile float, float* %27, align 4, !tbaa !16\l  %57 = fadd contract float %55, %56\l  store volatile float %57, float* %27, align 4, !tbaa !16\l  br label %58\l}"];
	Node0x46c3ec0 -> Node0x46c3c60;
	Node0x46c3c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = icmp ugt i32 %48, 131\l  br i1 %59, label %47, label %45, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x46c3c60:s0 -> Node0x46c3810;
	Node0x46c3c60:s1 -> Node0x46c38a0;
	Node0x46c3aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%60:\l60:                                               \l  %61 = add nuw nsw i32 %23, 32\l  %62 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %61\l  %63 = addrspacecast float addrspace(3)* %62 to float*\l  %64 = load volatile float, float* %63, align 4, !tbaa !16\l  %65 = load volatile float, float* %27, align 4, !tbaa !16\l  %66 = fadd contract float %64, %65\l  store volatile float %66, float* %27, align 4, !tbaa !16\l  %67 = add nuw nsw i32 %23, 16\l  %68 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %67\l  %69 = addrspacecast float addrspace(3)* %68 to float*\l  %70 = load volatile float, float* %69, align 4, !tbaa !16\l  %71 = load volatile float, float* %27, align 4, !tbaa !16\l  %72 = fadd contract float %70, %71\l  store volatile float %72, float* %27, align 4, !tbaa !16\l  %73 = add nuw nsw i32 %23, 8\l  %74 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %73\l  %75 = addrspacecast float addrspace(3)* %74 to float*\l  %76 = load volatile float, float* %75, align 4, !tbaa !16\l  %77 = load volatile float, float* %27, align 4, !tbaa !16\l  %78 = fadd contract float %76, %77\l  store volatile float %78, float* %27, align 4, !tbaa !16\l  %79 = add nuw nsw i32 %23, 4\l  %80 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %79\l  %81 = addrspacecast float addrspace(3)* %80 to float*\l  %82 = load volatile float, float* %81, align 4, !tbaa !16\l  %83 = load volatile float, float* %27, align 4, !tbaa !16\l  %84 = fadd contract float %82, %83\l  store volatile float %84, float* %27, align 4, !tbaa !16\l  %85 = add nuw nsw i32 %23, 2\l  %86 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %85\l  %87 = addrspacecast float addrspace(3)* %86 to float*\l  %88 = load volatile float, float* %87, align 4, !tbaa !16\l  %89 = load volatile float, float* %27, align 4, !tbaa !16\l  %90 = fadd contract float %88, %89\l  store volatile float %90, float* %27, align 4, !tbaa !16\l  %91 = add nuw nsw i32 %23, 1\l  %92 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 %91\l  %93 = addrspacecast float addrspace(3)* %92 to float*\l  %94 = load volatile float, float* %93, align 4, !tbaa !16\l  %95 = load volatile float, float* %27, align 4, !tbaa !16\l  %96 = fadd contract float %94, %95\l  store volatile float %96, float* %27, align 4, !tbaa !16\l  br label %97\l}"];
	Node0x46c3aa0 -> Node0x46c3af0;
	Node0x46c3af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%97:\l97:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %98 = icmp eq i32 %23, 0\l  br i1 %98, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x46c3af0:s0 -> Node0x46c63a0;
	Node0x46c3af0:s1 -> Node0x46c63f0;
	Node0x46c63a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%99:\l99:                                               \l  %100 = load volatile float, float* addrspacecast (float addrspace(3)*\l... getelementptr inbounds ([256 x float], [256 x float] addrspace(3)*\l... @_ZZ7kernel5PfS_jE7scratch, i32 0, i32 0) to float*), align 16, !tbaa !16\l  %101 = zext i32 %20 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  store float %100, float addrspace(1)* %102, align 4, !tbaa !16\l  br label %103\l}"];
	Node0x46c63a0 -> Node0x46c63f0;
	Node0x46c63f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%103:\l103:                                              \l  ret void\l}"];
}
