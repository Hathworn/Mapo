digraph "CFG for '_Z20matrixMultiplySharedPfS_S_iiiiii' function" {
	label="CFG for '_Z20matrixMultiplySharedPfS_S_iiiiii' function";

	Node0x5ebb8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %26 = add i32 %24, %25\l  %27 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sA, i32 0, i32 %17, i32\l... %25\l  store float 0.000000e+00, float addrspace(3)* %27, align 4, !tbaa !7\l  %28 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sB, i32 0, i32 %17, i32\l... %25\l  store float 0.000000e+00, float addrspace(3)* %28, align 4, !tbaa !7\l  %29 = icmp slt i32 %4, 0\l  br i1 %29, label %40, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5ebb8e0:s0 -> Node0x5ec0560;
	Node0x5ebb8e0:s1 -> Node0x5ec0e00;
	Node0x5ec0e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%30:\l30:                                               \l  %31 = add nsw i32 %4, -1\l  %32 = sdiv i32 %31, 2\l  %33 = icmp slt i32 %18, %3\l  %34 = mul nsw i32 %18, %4\l  %35 = icmp slt i32 %26, %6\l  %36 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sA, i32 0, i32 %17, i32\l... 0\l  %37 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sB, i32 0, i32 0, i32\l... %25\l  %38 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sA, i32 0, i32 %17, i32\l... 1\l  %39 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ20matrixMultiplySharedPfS_S_iiiiiiE2sB, i32 0, i32 1, i32\l... %25\l  br label %45\l}"];
	Node0x5ec0e00 -> Node0x5ebda50;
	Node0x5ec0560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %9 ], [ %78, %69 ]\l  %42 = icmp slt i32 %18, %7\l  %43 = icmp slt i32 %26, %8\l  %44 = select i1 %42, i1 %43, i1 false\l  br i1 %44, label %81, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5ec0560:s0 -> Node0x5ec1b20;
	Node0x5ec0560:s1 -> Node0x5ec1bb0;
	Node0x5ebda50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %30 ], [ %79, %69 ]\l  %47 = phi float [ 0.000000e+00, %30 ], [ %78, %69 ]\l  br i1 %33, label %48, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5ebda50:s0 -> Node0x5ec1e80;
	Node0x5ebda50:s1 -> Node0x5ec1f10;
	Node0x5ec1e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = shl nuw nsw i32 %46, 1\l  %50 = add nuw i32 %49, %25\l  %51 = icmp ult i32 %50, %4\l  br i1 %51, label %52, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5ec1e80:s0 -> Node0x5ec2200;
	Node0x5ec1e80:s1 -> Node0x5ec1f10;
	Node0x5ec2200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%52:\l52:                                               \l  %53 = add i32 %50, %34\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  br label %57\l}"];
	Node0x5ec2200 -> Node0x5ec1f10;
	Node0x5ec1f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi float [ %56, %52 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %45 ]\l  store float %58, float addrspace(3)* %27, align 4, !tbaa !7\l  br i1 %35, label %59, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5ec1f10:s0 -> Node0x5ec2710;
	Node0x5ec1f10:s1 -> Node0x5ec17e0;
	Node0x5ec2710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%59:\l59:                                               \l  %60 = shl nuw nsw i32 %46, 1\l  %61 = add nuw i32 %60, %17\l  %62 = icmp ult i32 %61, %5\l  br i1 %62, label %63, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5ec2710:s0 -> Node0x5ec29c0;
	Node0x5ec2710:s1 -> Node0x5ec17e0;
	Node0x5ec29c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%63:\l63:                                               \l  %64 = mul i32 %61, %6\l  %65 = add i32 %64, %26\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x5ec29c0 -> Node0x5ec17e0;
	Node0x5ec17e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi float [ %68, %63 ], [ 0.000000e+00, %59 ], [ 0.000000e+00, %57 ]\l  store float %70, float addrspace(3)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = load float, float addrspace(3)* %36, align 8, !tbaa !7\l  %72 = load float, float addrspace(3)* %37, align 4, !tbaa !7\l  %73 = fmul contract float %71, %72\l  %74 = fadd contract float %47, %73\l  %75 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %76 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %77 = fmul contract float %75, %76\l  %78 = fadd contract float %74, %77\l  %79 = add nuw nsw i32 %46, 1\l  %80 = icmp eq i32 %46, %32\l  br i1 %80, label %40, label %45, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ec17e0:s0 -> Node0x5ec0560;
	Node0x5ec17e0:s1 -> Node0x5ebda50;
	Node0x5ec1b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%81:\l81:                                               \l  %82 = mul nsw i32 %18, %8\l  %83 = add nsw i32 %82, %26\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  store float %41, float addrspace(1)* %85, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x5ec1b20 -> Node0x5ec1bb0;
	Node0x5ec1bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%86:\l86:                                               \l  ret void\l}"];
}
