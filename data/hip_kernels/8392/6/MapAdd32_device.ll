; ModuleID = '../data/hip_kernels/8392/6/main.cu'
source_filename = "../data/hip_kernels/8392/6/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn
define protected amdgpu_kernel void @_Z8MapAdd32PiPKijj(i32 addrspace(1)* nocapture writeonly %0, i32 addrspace(1)* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4
  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*
  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5
  %10 = zext i16 %9 to i32
  %11 = shl i32 %5, 5
  %12 = mul i32 %11, %10
  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %14 = add i32 %12, %13
  %15 = urem i32 %14, %3
  %16 = freeze i32 %14
  %17 = freeze i32 %2
  %18 = udiv i32 %16, %17
  %19 = mul i32 %18, %17
  %20 = sub i32 %16, %19
  %21 = udiv i32 %20, %3
  %22 = add i32 %21, %18
  %23 = mul i32 %22, %3
  %24 = add i32 %23, %15
  %25 = mul i32 %22, %2
  %26 = add i32 %25, %15
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27
  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber !5
  %30 = zext i32 %26 to i64
  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30
  store i32 %29, i32 addrspace(1)* %31, align 4, !tbaa !7
  %32 = add i32 %14, 1
  %33 = urem i32 %32, %3
  %34 = freeze i32 %32
  %35 = freeze i32 %2
  %36 = udiv i32 %34, %35
  %37 = mul i32 %36, %35
  %38 = sub i32 %34, %37
  %39 = udiv i32 %38, %3
  %40 = add i32 %39, %36
  %41 = mul i32 %40, %3
  %42 = add i32 %41, %33
  %43 = mul i32 %40, %2
  %44 = add i32 %43, %33
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45
  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7
  %48 = zext i32 %44 to i64
  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48
  store i32 %47, i32 addrspace(1)* %49, align 4, !tbaa !7
  %50 = add i32 %14, 2
  %51 = urem i32 %50, %3
  %52 = freeze i32 %50
  %53 = freeze i32 %2
  %54 = udiv i32 %52, %53
  %55 = mul i32 %54, %53
  %56 = sub i32 %52, %55
  %57 = udiv i32 %56, %3
  %58 = add i32 %57, %54
  %59 = mul i32 %58, %3
  %60 = add i32 %59, %51
  %61 = mul i32 %58, %2
  %62 = add i32 %61, %51
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63
  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7
  %66 = zext i32 %62 to i64
  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66
  store i32 %65, i32 addrspace(1)* %67, align 4, !tbaa !7
  %68 = add i32 %14, 3
  %69 = urem i32 %68, %3
  %70 = freeze i32 %68
  %71 = freeze i32 %2
  %72 = udiv i32 %70, %71
  %73 = mul i32 %72, %71
  %74 = sub i32 %70, %73
  %75 = udiv i32 %74, %3
  %76 = add i32 %75, %72
  %77 = mul i32 %76, %3
  %78 = add i32 %77, %69
  %79 = mul i32 %76, %2
  %80 = add i32 %79, %69
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81
  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7
  %84 = zext i32 %80 to i64
  %85 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %84
  store i32 %83, i32 addrspace(1)* %85, align 4, !tbaa !7
  %86 = add i32 %14, 4
  %87 = urem i32 %86, %3
  %88 = freeze i32 %86
  %89 = freeze i32 %2
  %90 = udiv i32 %88, %89
  %91 = mul i32 %90, %89
  %92 = sub i32 %88, %91
  %93 = udiv i32 %92, %3
  %94 = add i32 %93, %90
  %95 = mul i32 %94, %3
  %96 = add i32 %95, %87
  %97 = mul i32 %94, %2
  %98 = add i32 %97, %87
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %99
  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7
  %102 = zext i32 %98 to i64
  %103 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %102
  store i32 %101, i32 addrspace(1)* %103, align 4, !tbaa !7
  %104 = add i32 %14, 5
  %105 = urem i32 %104, %3
  %106 = freeze i32 %104
  %107 = freeze i32 %2
  %108 = udiv i32 %106, %107
  %109 = mul i32 %108, %107
  %110 = sub i32 %106, %109
  %111 = udiv i32 %110, %3
  %112 = add i32 %111, %108
  %113 = mul i32 %112, %3
  %114 = add i32 %113, %105
  %115 = mul i32 %112, %2
  %116 = add i32 %115, %105
  %117 = zext i32 %114 to i64
  %118 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %117
  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !7
  %120 = zext i32 %116 to i64
  %121 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %120
  store i32 %119, i32 addrspace(1)* %121, align 4, !tbaa !7
  %122 = add i32 %14, 6
  %123 = urem i32 %122, %3
  %124 = freeze i32 %122
  %125 = freeze i32 %2
  %126 = udiv i32 %124, %125
  %127 = mul i32 %126, %125
  %128 = sub i32 %124, %127
  %129 = udiv i32 %128, %3
  %130 = add i32 %129, %126
  %131 = mul i32 %130, %3
  %132 = add i32 %131, %123
  %133 = mul i32 %130, %2
  %134 = add i32 %133, %123
  %135 = zext i32 %132 to i64
  %136 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %135
  %137 = load i32, i32 addrspace(1)* %136, align 4, !tbaa !7
  %138 = zext i32 %134 to i64
  %139 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %138
  store i32 %137, i32 addrspace(1)* %139, align 4, !tbaa !7
  %140 = add i32 %14, 7
  %141 = urem i32 %140, %3
  %142 = freeze i32 %140
  %143 = freeze i32 %2
  %144 = udiv i32 %142, %143
  %145 = mul i32 %144, %143
  %146 = sub i32 %142, %145
  %147 = udiv i32 %146, %3
  %148 = add i32 %147, %144
  %149 = mul i32 %148, %3
  %150 = add i32 %149, %141
  %151 = mul i32 %148, %2
  %152 = add i32 %151, %141
  %153 = zext i32 %150 to i64
  %154 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %153
  %155 = load i32, i32 addrspace(1)* %154, align 4, !tbaa !7
  %156 = zext i32 %152 to i64
  %157 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %156
  store i32 %155, i32 addrspace(1)* %157, align 4, !tbaa !7
  %158 = add i32 %14, 8
  %159 = urem i32 %158, %3
  %160 = freeze i32 %158
  %161 = freeze i32 %2
  %162 = udiv i32 %160, %161
  %163 = mul i32 %162, %161
  %164 = sub i32 %160, %163
  %165 = udiv i32 %164, %3
  %166 = add i32 %165, %162
  %167 = mul i32 %166, %3
  %168 = add i32 %167, %159
  %169 = mul i32 %166, %2
  %170 = add i32 %169, %159
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %171
  %173 = load i32, i32 addrspace(1)* %172, align 4, !tbaa !7
  %174 = zext i32 %170 to i64
  %175 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %174
  store i32 %173, i32 addrspace(1)* %175, align 4, !tbaa !7
  %176 = add i32 %14, 9
  %177 = urem i32 %176, %3
  %178 = freeze i32 %176
  %179 = freeze i32 %2
  %180 = udiv i32 %178, %179
  %181 = mul i32 %180, %179
  %182 = sub i32 %178, %181
  %183 = udiv i32 %182, %3
  %184 = add i32 %183, %180
  %185 = mul i32 %184, %3
  %186 = add i32 %185, %177
  %187 = mul i32 %184, %2
  %188 = add i32 %187, %177
  %189 = zext i32 %186 to i64
  %190 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %189
  %191 = load i32, i32 addrspace(1)* %190, align 4, !tbaa !7
  %192 = zext i32 %188 to i64
  %193 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %192
  store i32 %191, i32 addrspace(1)* %193, align 4, !tbaa !7
  %194 = add i32 %14, 10
  %195 = urem i32 %194, %3
  %196 = freeze i32 %194
  %197 = freeze i32 %2
  %198 = udiv i32 %196, %197
  %199 = mul i32 %198, %197
  %200 = sub i32 %196, %199
  %201 = udiv i32 %200, %3
  %202 = add i32 %201, %198
  %203 = mul i32 %202, %3
  %204 = add i32 %203, %195
  %205 = mul i32 %202, %2
  %206 = add i32 %205, %195
  %207 = zext i32 %204 to i64
  %208 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %207
  %209 = load i32, i32 addrspace(1)* %208, align 4, !tbaa !7
  %210 = zext i32 %206 to i64
  %211 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %210
  store i32 %209, i32 addrspace(1)* %211, align 4, !tbaa !7
  %212 = add i32 %14, 11
  %213 = urem i32 %212, %3
  %214 = freeze i32 %212
  %215 = freeze i32 %2
  %216 = udiv i32 %214, %215
  %217 = mul i32 %216, %215
  %218 = sub i32 %214, %217
  %219 = udiv i32 %218, %3
  %220 = add i32 %219, %216
  %221 = mul i32 %220, %3
  %222 = add i32 %221, %213
  %223 = mul i32 %220, %2
  %224 = add i32 %223, %213
  %225 = zext i32 %222 to i64
  %226 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %225
  %227 = load i32, i32 addrspace(1)* %226, align 4, !tbaa !7
  %228 = zext i32 %224 to i64
  %229 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %228
  store i32 %227, i32 addrspace(1)* %229, align 4, !tbaa !7
  %230 = add i32 %14, 12
  %231 = urem i32 %230, %3
  %232 = freeze i32 %230
  %233 = freeze i32 %2
  %234 = udiv i32 %232, %233
  %235 = mul i32 %234, %233
  %236 = sub i32 %232, %235
  %237 = udiv i32 %236, %3
  %238 = add i32 %237, %234
  %239 = mul i32 %238, %3
  %240 = add i32 %239, %231
  %241 = mul i32 %238, %2
  %242 = add i32 %241, %231
  %243 = zext i32 %240 to i64
  %244 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %243
  %245 = load i32, i32 addrspace(1)* %244, align 4, !tbaa !7
  %246 = zext i32 %242 to i64
  %247 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %246
  store i32 %245, i32 addrspace(1)* %247, align 4, !tbaa !7
  %248 = add i32 %14, 13
  %249 = urem i32 %248, %3
  %250 = freeze i32 %248
  %251 = freeze i32 %2
  %252 = udiv i32 %250, %251
  %253 = mul i32 %252, %251
  %254 = sub i32 %250, %253
  %255 = udiv i32 %254, %3
  %256 = add i32 %255, %252
  %257 = mul i32 %256, %3
  %258 = add i32 %257, %249
  %259 = mul i32 %256, %2
  %260 = add i32 %259, %249
  %261 = zext i32 %258 to i64
  %262 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %261
  %263 = load i32, i32 addrspace(1)* %262, align 4, !tbaa !7
  %264 = zext i32 %260 to i64
  %265 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %264
  store i32 %263, i32 addrspace(1)* %265, align 4, !tbaa !7
  %266 = add i32 %14, 14
  %267 = urem i32 %266, %3
  %268 = freeze i32 %266
  %269 = freeze i32 %2
  %270 = udiv i32 %268, %269
  %271 = mul i32 %270, %269
  %272 = sub i32 %268, %271
  %273 = udiv i32 %272, %3
  %274 = add i32 %273, %270
  %275 = mul i32 %274, %3
  %276 = add i32 %275, %267
  %277 = mul i32 %274, %2
  %278 = add i32 %277, %267
  %279 = zext i32 %276 to i64
  %280 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %279
  %281 = load i32, i32 addrspace(1)* %280, align 4, !tbaa !7
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %282
  store i32 %281, i32 addrspace(1)* %283, align 4, !tbaa !7
  %284 = add i32 %14, 15
  %285 = urem i32 %284, %3
  %286 = freeze i32 %284
  %287 = freeze i32 %2
  %288 = udiv i32 %286, %287
  %289 = mul i32 %288, %287
  %290 = sub i32 %286, %289
  %291 = udiv i32 %290, %3
  %292 = add i32 %291, %288
  %293 = mul i32 %292, %3
  %294 = add i32 %293, %285
  %295 = mul i32 %292, %2
  %296 = add i32 %295, %285
  %297 = zext i32 %294 to i64
  %298 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %297
  %299 = load i32, i32 addrspace(1)* %298, align 4, !tbaa !7
  %300 = zext i32 %296 to i64
  %301 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %300
  store i32 %299, i32 addrspace(1)* %301, align 4, !tbaa !7
  %302 = add i32 %14, 16
  %303 = urem i32 %302, %3
  %304 = freeze i32 %302
  %305 = freeze i32 %2
  %306 = udiv i32 %304, %305
  %307 = mul i32 %306, %305
  %308 = sub i32 %304, %307
  %309 = udiv i32 %308, %3
  %310 = add i32 %309, %306
  %311 = mul i32 %310, %3
  %312 = add i32 %311, %303
  %313 = mul i32 %310, %2
  %314 = add i32 %313, %303
  %315 = zext i32 %312 to i64
  %316 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %315
  %317 = load i32, i32 addrspace(1)* %316, align 4, !tbaa !7
  %318 = zext i32 %314 to i64
  %319 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %318
  store i32 %317, i32 addrspace(1)* %319, align 4, !tbaa !7
  %320 = add i32 %14, 17
  %321 = urem i32 %320, %3
  %322 = freeze i32 %320
  %323 = freeze i32 %2
  %324 = udiv i32 %322, %323
  %325 = mul i32 %324, %323
  %326 = sub i32 %322, %325
  %327 = udiv i32 %326, %3
  %328 = add i32 %327, %324
  %329 = mul i32 %328, %3
  %330 = add i32 %329, %321
  %331 = mul i32 %328, %2
  %332 = add i32 %331, %321
  %333 = zext i32 %330 to i64
  %334 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %333
  %335 = load i32, i32 addrspace(1)* %334, align 4, !tbaa !7
  %336 = zext i32 %332 to i64
  %337 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %336
  store i32 %335, i32 addrspace(1)* %337, align 4, !tbaa !7
  %338 = add i32 %14, 18
  %339 = urem i32 %338, %3
  %340 = freeze i32 %338
  %341 = freeze i32 %2
  %342 = udiv i32 %340, %341
  %343 = mul i32 %342, %341
  %344 = sub i32 %340, %343
  %345 = udiv i32 %344, %3
  %346 = add i32 %345, %342
  %347 = mul i32 %346, %3
  %348 = add i32 %347, %339
  %349 = mul i32 %346, %2
  %350 = add i32 %349, %339
  %351 = zext i32 %348 to i64
  %352 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %351
  %353 = load i32, i32 addrspace(1)* %352, align 4, !tbaa !7
  %354 = zext i32 %350 to i64
  %355 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %354
  store i32 %353, i32 addrspace(1)* %355, align 4, !tbaa !7
  %356 = add i32 %14, 19
  %357 = urem i32 %356, %3
  %358 = freeze i32 %356
  %359 = freeze i32 %2
  %360 = udiv i32 %358, %359
  %361 = mul i32 %360, %359
  %362 = sub i32 %358, %361
  %363 = udiv i32 %362, %3
  %364 = add i32 %363, %360
  %365 = mul i32 %364, %3
  %366 = add i32 %365, %357
  %367 = mul i32 %364, %2
  %368 = add i32 %367, %357
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %369
  %371 = load i32, i32 addrspace(1)* %370, align 4, !tbaa !7
  %372 = zext i32 %368 to i64
  %373 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %372
  store i32 %371, i32 addrspace(1)* %373, align 4, !tbaa !7
  %374 = add i32 %14, 20
  %375 = urem i32 %374, %3
  %376 = freeze i32 %374
  %377 = freeze i32 %2
  %378 = udiv i32 %376, %377
  %379 = mul i32 %378, %377
  %380 = sub i32 %376, %379
  %381 = udiv i32 %380, %3
  %382 = add i32 %381, %378
  %383 = mul i32 %382, %3
  %384 = add i32 %383, %375
  %385 = mul i32 %382, %2
  %386 = add i32 %385, %375
  %387 = zext i32 %384 to i64
  %388 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %387
  %389 = load i32, i32 addrspace(1)* %388, align 4, !tbaa !7
  %390 = zext i32 %386 to i64
  %391 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %390
  store i32 %389, i32 addrspace(1)* %391, align 4, !tbaa !7
  %392 = add i32 %14, 21
  %393 = urem i32 %392, %3
  %394 = freeze i32 %392
  %395 = freeze i32 %2
  %396 = udiv i32 %394, %395
  %397 = mul i32 %396, %395
  %398 = sub i32 %394, %397
  %399 = udiv i32 %398, %3
  %400 = add i32 %399, %396
  %401 = mul i32 %400, %3
  %402 = add i32 %401, %393
  %403 = mul i32 %400, %2
  %404 = add i32 %403, %393
  %405 = zext i32 %402 to i64
  %406 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %405
  %407 = load i32, i32 addrspace(1)* %406, align 4, !tbaa !7
  %408 = zext i32 %404 to i64
  %409 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %408
  store i32 %407, i32 addrspace(1)* %409, align 4, !tbaa !7
  %410 = add i32 %14, 22
  %411 = urem i32 %410, %3
  %412 = freeze i32 %410
  %413 = freeze i32 %2
  %414 = udiv i32 %412, %413
  %415 = mul i32 %414, %413
  %416 = sub i32 %412, %415
  %417 = udiv i32 %416, %3
  %418 = add i32 %417, %414
  %419 = mul i32 %418, %3
  %420 = add i32 %419, %411
  %421 = mul i32 %418, %2
  %422 = add i32 %421, %411
  %423 = zext i32 %420 to i64
  %424 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %423
  %425 = load i32, i32 addrspace(1)* %424, align 4, !tbaa !7
  %426 = zext i32 %422 to i64
  %427 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %426
  store i32 %425, i32 addrspace(1)* %427, align 4, !tbaa !7
  %428 = add i32 %14, 23
  %429 = urem i32 %428, %3
  %430 = freeze i32 %428
  %431 = freeze i32 %2
  %432 = udiv i32 %430, %431
  %433 = mul i32 %432, %431
  %434 = sub i32 %430, %433
  %435 = udiv i32 %434, %3
  %436 = add i32 %435, %432
  %437 = mul i32 %436, %3
  %438 = add i32 %437, %429
  %439 = mul i32 %436, %2
  %440 = add i32 %439, %429
  %441 = zext i32 %438 to i64
  %442 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %441
  %443 = load i32, i32 addrspace(1)* %442, align 4, !tbaa !7
  %444 = zext i32 %440 to i64
  %445 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %444
  store i32 %443, i32 addrspace(1)* %445, align 4, !tbaa !7
  %446 = add i32 %14, 24
  %447 = urem i32 %446, %3
  %448 = freeze i32 %446
  %449 = freeze i32 %2
  %450 = udiv i32 %448, %449
  %451 = mul i32 %450, %449
  %452 = sub i32 %448, %451
  %453 = udiv i32 %452, %3
  %454 = add i32 %453, %450
  %455 = mul i32 %454, %3
  %456 = add i32 %455, %447
  %457 = mul i32 %454, %2
  %458 = add i32 %457, %447
  %459 = zext i32 %456 to i64
  %460 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %459
  %461 = load i32, i32 addrspace(1)* %460, align 4, !tbaa !7
  %462 = zext i32 %458 to i64
  %463 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %462
  store i32 %461, i32 addrspace(1)* %463, align 4, !tbaa !7
  %464 = add i32 %14, 25
  %465 = urem i32 %464, %3
  %466 = freeze i32 %464
  %467 = freeze i32 %2
  %468 = udiv i32 %466, %467
  %469 = mul i32 %468, %467
  %470 = sub i32 %466, %469
  %471 = udiv i32 %470, %3
  %472 = add i32 %471, %468
  %473 = mul i32 %472, %3
  %474 = add i32 %473, %465
  %475 = mul i32 %472, %2
  %476 = add i32 %475, %465
  %477 = zext i32 %474 to i64
  %478 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %477
  %479 = load i32, i32 addrspace(1)* %478, align 4, !tbaa !7
  %480 = zext i32 %476 to i64
  %481 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %480
  store i32 %479, i32 addrspace(1)* %481, align 4, !tbaa !7
  %482 = add i32 %14, 26
  %483 = urem i32 %482, %3
  %484 = freeze i32 %482
  %485 = freeze i32 %2
  %486 = udiv i32 %484, %485
  %487 = mul i32 %486, %485
  %488 = sub i32 %484, %487
  %489 = udiv i32 %488, %3
  %490 = add i32 %489, %486
  %491 = mul i32 %490, %3
  %492 = add i32 %491, %483
  %493 = mul i32 %490, %2
  %494 = add i32 %493, %483
  %495 = zext i32 %492 to i64
  %496 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %495
  %497 = load i32, i32 addrspace(1)* %496, align 4, !tbaa !7
  %498 = zext i32 %494 to i64
  %499 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %498
  store i32 %497, i32 addrspace(1)* %499, align 4, !tbaa !7
  %500 = add i32 %14, 27
  %501 = urem i32 %500, %3
  %502 = freeze i32 %500
  %503 = freeze i32 %2
  %504 = udiv i32 %502, %503
  %505 = mul i32 %504, %503
  %506 = sub i32 %502, %505
  %507 = udiv i32 %506, %3
  %508 = add i32 %507, %504
  %509 = mul i32 %508, %3
  %510 = add i32 %509, %501
  %511 = mul i32 %508, %2
  %512 = add i32 %511, %501
  %513 = zext i32 %510 to i64
  %514 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %513
  %515 = load i32, i32 addrspace(1)* %514, align 4, !tbaa !7
  %516 = zext i32 %512 to i64
  %517 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %516
  store i32 %515, i32 addrspace(1)* %517, align 4, !tbaa !7
  %518 = add i32 %14, 28
  %519 = urem i32 %518, %3
  %520 = freeze i32 %518
  %521 = freeze i32 %2
  %522 = udiv i32 %520, %521
  %523 = mul i32 %522, %521
  %524 = sub i32 %520, %523
  %525 = udiv i32 %524, %3
  %526 = add i32 %525, %522
  %527 = mul i32 %526, %3
  %528 = add i32 %527, %519
  %529 = mul i32 %526, %2
  %530 = add i32 %529, %519
  %531 = zext i32 %528 to i64
  %532 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %531
  %533 = load i32, i32 addrspace(1)* %532, align 4, !tbaa !7
  %534 = zext i32 %530 to i64
  %535 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %534
  store i32 %533, i32 addrspace(1)* %535, align 4, !tbaa !7
  %536 = add i32 %14, 29
  %537 = urem i32 %536, %3
  %538 = freeze i32 %536
  %539 = freeze i32 %2
  %540 = udiv i32 %538, %539
  %541 = mul i32 %540, %539
  %542 = sub i32 %538, %541
  %543 = udiv i32 %542, %3
  %544 = add i32 %543, %540
  %545 = mul i32 %544, %3
  %546 = add i32 %545, %537
  %547 = mul i32 %544, %2
  %548 = add i32 %547, %537
  %549 = zext i32 %546 to i64
  %550 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %549
  %551 = load i32, i32 addrspace(1)* %550, align 4, !tbaa !7
  %552 = zext i32 %548 to i64
  %553 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %552
  store i32 %551, i32 addrspace(1)* %553, align 4, !tbaa !7
  %554 = add i32 %14, 30
  %555 = urem i32 %554, %3
  %556 = freeze i32 %554
  %557 = freeze i32 %2
  %558 = udiv i32 %556, %557
  %559 = mul i32 %558, %557
  %560 = sub i32 %556, %559
  %561 = udiv i32 %560, %3
  %562 = add i32 %561, %558
  %563 = mul i32 %562, %3
  %564 = add i32 %563, %555
  %565 = mul i32 %562, %2
  %566 = add i32 %565, %555
  %567 = zext i32 %564 to i64
  %568 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %567
  %569 = load i32, i32 addrspace(1)* %568, align 4, !tbaa !7
  %570 = zext i32 %566 to i64
  %571 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %570
  store i32 %569, i32 addrspace(1)* %571, align 4, !tbaa !7
  %572 = add i32 %14, 31
  %573 = urem i32 %572, %3
  %574 = freeze i32 %572
  %575 = freeze i32 %2
  %576 = udiv i32 %574, %575
  %577 = mul i32 %576, %575
  %578 = sub i32 %574, %577
  %579 = udiv i32 %578, %3
  %580 = add i32 %579, %576
  %581 = mul i32 %580, %3
  %582 = add i32 %581, %573
  %583 = mul i32 %580, %2
  %584 = add i32 %583, %573
  %585 = zext i32 %582 to i64
  %586 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %585
  %587 = load i32, i32 addrspace(1)* %586, align 4, !tbaa !7
  %588 = zext i32 %584 to i64
  %589 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %588
  store i32 %587, i32 addrspace(1)* %589, align 4, !tbaa !7
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #1

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
