digraph "CFG for '_Z11Ring_kernelPfS_PiS_iiii' function" {
	label="CFG for '_Z11Ring_kernelPfS_PiS_iiii' function";

	Node0x4dd76a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = freeze i32 %17\l  %19 = mul nsw i32 %7, %6\l  %20 = shl nsw i32 %4, 1\l  %21 = add nuw nsw i32 %20, 1\l  %22 = mul nsw i32 %21, %21\l  %23 = icmp slt i32 %18, %19\l  br i1 %23, label %24, label %140\l|{<s0>T|<s1>F}}"];
	Node0x4dd76a0:s0 -> Node0x4dd9850;
	Node0x4dd76a0:s1 -> Node0x4dd98e0;
	Node0x4dd9850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%24:\l24:                                               \l  %25 = srem i32 %18, %7\l  %26 = shl nsw i32 %18, 1\l  %27 = add nuw nsw i32 %26, 1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %31 = sext i32 %26 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = sub i32 0, %4\l  %35 = icmp slt i32 %4, 0\l  br i1 %35, label %140, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4dd9850:s0 -> Node0x4dd98e0;
	Node0x4dd9850:s1 -> Node0x4dd94b0;
	Node0x4dd94b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%36:\l36:                                               \l  %37 = icmp slt i32 %5, 1\l  %38 = sub nsw i32 %18, %25\l  %39 = add i32 %5, -1\l  %40 = and i32 %5, 3\l  %41 = icmp ult i32 %39, 3\l  %42 = and i32 %5, -4\l  %43 = icmp eq i32 %40, 0\l  br label %44\l}"];
	Node0x4dd94b0 -> Node0x4ddb4d0;
	Node0x4ddb4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %34, %36 ], [ %51, %50 ]\l  %46 = add nsw i32 %45, %4\l  %47 = add nsw i32 %45, %33\l  %48 = icmp sgt i32 %47, -1\l  %49 = icmp sge i32 %47, %7\l  br label %53\l}"];
	Node0x4ddb4d0 -> Node0x4ddb940;
	Node0x4ddb5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%50:\l50:                                               \l  %51 = add i32 %45, 1\l  %52 = icmp eq i32 %45, %4\l  br i1 %52, label %140, label %44, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ddb5c0:s0 -> Node0x4dd98e0;
	Node0x4ddb5c0:s1 -> Node0x4ddb4d0;
	Node0x4ddb940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%53:\l53:                                               \l  %54 = phi i32 [ %34, %44 ], [ %138, %137 ]\l  %55 = add nsw i32 %54, %4\l  %56 = mul nsw i32 %55, %21\l  %57 = add nsw i32 %46, %56\l  %58 = add nsw i32 %54, %30\l  br i1 %48, label %59, label %137\l|{<s0>T|<s1>F}}"];
	Node0x4ddb940:s0 -> Node0x4ddc050;
	Node0x4ddb940:s1 -> Node0x4ddbcd0;
	Node0x4ddc050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%59:\l59:                                               \l  %60 = icmp slt i32 %58, 0\l  %61 = select i1 %49, i1 true, i1 %60\l  %62 = icmp sge i32 %58, %6\l  %63 = select i1 %61, i1 true, i1 %62\l  %64 = select i1 %63, i1 true, i1 %37\l  br i1 %64, label %137, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4ddc050:s0 -> Node0x4ddbcd0;
	Node0x4ddc050:s1 -> Node0x4dda620;
	Node0x4dda620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%65:\l65:                                               \l  %66 = mul nsw i32 %58, %7\l  %67 = add i32 %66, %47\l  %68 = mul nsw i32 %57, %7\l  %69 = add i32 %68, %25\l  br i1 %41, label %119, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4dda620:s0 -> Node0x4dda7b0;
	Node0x4dda620:s1 -> Node0x4ddcab0;
	Node0x4ddcab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%70:\l70:                                               \l  %71 = phi i32 [ %116, %70 ], [ 0, %65 ]\l  %72 = phi i32 [ %117, %70 ], [ 0, %65 ]\l  %73 = mul nsw i32 %71, %19\l  %74 = add i32 %67, %73\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !13\l  %78 = add nsw i32 %38, %73\l  %79 = mul nsw i32 %22, %78\l  %80 = add i32 %69, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %3, i64 %81\l  store float %77, float addrspace(1)* %82, align 4, !tbaa !13\l  %83 = or i32 %71, 1\l  %84 = mul nsw i32 %83, %19\l  %85 = add i32 %67, %84\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !13\l  %89 = add nsw i32 %38, %84\l  %90 = mul nsw i32 %22, %89\l  %91 = add i32 %69, %90\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %3, i64 %92\l  store float %88, float addrspace(1)* %93, align 4, !tbaa !13\l  %94 = or i32 %71, 2\l  %95 = mul nsw i32 %94, %19\l  %96 = add i32 %67, %95\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !13\l  %100 = add nsw i32 %38, %95\l  %101 = mul nsw i32 %22, %100\l  %102 = add i32 %69, %101\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %3, i64 %103\l  store float %99, float addrspace(1)* %104, align 4, !tbaa !13\l  %105 = or i32 %71, 3\l  %106 = mul nsw i32 %105, %19\l  %107 = add i32 %67, %106\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !13\l  %111 = add nsw i32 %38, %106\l  %112 = mul nsw i32 %22, %111\l  %113 = add i32 %69, %112\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %3, i64 %114\l  store float %110, float addrspace(1)* %115, align 4, !tbaa !13\l  %116 = add nuw nsw i32 %71, 4\l  %117 = add i32 %72, 4\l  %118 = icmp eq i32 %117, %42\l  br i1 %118, label %119, label %70, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4ddcab0:s0 -> Node0x4dda7b0;
	Node0x4ddcab0:s1 -> Node0x4ddcab0;
	Node0x4dda7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%119:\l119:                                              \l  %120 = phi i32 [ 0, %65 ], [ %116, %70 ]\l  br i1 %43, label %137, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4dda7b0:s0 -> Node0x4ddbcd0;
	Node0x4dda7b0:s1 -> Node0x4ddf2b0;
	Node0x4ddf2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi i32 [ %134, %121 ], [ %120, %119 ]\l  %123 = phi i32 [ %135, %121 ], [ 0, %119 ]\l  %124 = mul nsw i32 %122, %19\l  %125 = add i32 %67, %124\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !13\l  %129 = add nsw i32 %38, %124\l  %130 = mul nsw i32 %22, %129\l  %131 = add i32 %69, %130\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %3, i64 %132\l  store float %128, float addrspace(1)* %133, align 4, !tbaa !13\l  %134 = add nuw nsw i32 %122, 1\l  %135 = add i32 %123, 1\l  %136 = icmp eq i32 %135, %40\l  br i1 %136, label %137, label %121, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4ddf2b0:s0 -> Node0x4ddbcd0;
	Node0x4ddf2b0:s1 -> Node0x4ddf2b0;
	Node0x4ddbcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%137:\l137:                                              \l  %138 = add i32 %54, 1\l  %139 = icmp eq i32 %54, %4\l  br i1 %139, label %50, label %53, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4ddbcd0:s0 -> Node0x4ddb5c0;
	Node0x4ddbcd0:s1 -> Node0x4ddb940;
	Node0x4dd98e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%140:\l140:                                              \l  ret void\l}"];
}
