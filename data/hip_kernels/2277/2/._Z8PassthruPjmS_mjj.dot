digraph "CFG for '_Z8PassthruPjmS_mjj' function" {
	label="CFG for '_Z8PassthruPjmS_mjj' function";

	Node0x5497800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = bitcast i32 addrspace(1)* %0 to i8 addrspace(1)*\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = shl nuw nsw i16 %12, 1\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %8, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = shl nuw nsw i32 %16, 1\l  %18 = add i32 %15, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp ult i32 %18, %4\l  %28 = icmp ult i32 %26, %5\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5497800:s0 -> Node0x549ae30;
	Node0x5497800:s1 -> Node0x549aec0;
	Node0x549ae30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = trunc i64 %1 to i32\l  %32 = lshr i64 %3, 2\l  %33 = trunc i64 %32 to i32\l  %34 = mul i32 %26, %31\l  %35 = add i32 %34, %18\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %39 = add i32 %35, 1\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = uitofp i8 %38 to float\l  %44 = uitofp i8 %42 to float\l  %45 = load i32, i32 addrspace(4)* @constAlpha, align 4, !tbaa !10\l  %46 = tail call float @llvm.maxnum.f32(float %43, float 0.000000e+00)\l  %47 = tail call float @llvm.minnum.f32(float %46, float 2.550000e+02)\l  %48 = fptoui float %47 to i32\l  %49 = shl i32 %48, 24\l  %50 = shl i32 %48, 16\l  %51 = shl i32 %48, 8\l  %52 = or i32 %50, %49\l  %53 = or i32 %52, %51\l  %54 = or i32 %53, %45\l  %55 = mul i32 %26, %33\l  %56 = add i32 %55, %18\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %57\l  store i32 %54, i32 addrspace(1)* %58, align 4, !tbaa !10\l  %59 = tail call float @llvm.maxnum.f32(float %44, float 0.000000e+00)\l  %60 = tail call float @llvm.minnum.f32(float %59, float 2.550000e+02)\l  %61 = fptoui float %60 to i32\l  %62 = shl i32 %61, 24\l  %63 = shl i32 %61, 16\l  %64 = shl i32 %61, 8\l  %65 = or i32 %63, %62\l  %66 = or i32 %65, %64\l  %67 = or i32 %66, %45\l  %68 = add i32 %56, 1\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %69\l  store i32 %67, i32 addrspace(1)* %70, align 4, !tbaa !10\l  br label %71\l}"];
	Node0x549ae30 -> Node0x549aec0;
	Node0x549aec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
