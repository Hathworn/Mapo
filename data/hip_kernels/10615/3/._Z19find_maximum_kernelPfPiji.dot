digraph "CFG for '_Z19find_maximum_kernelPfPiji' function" {
	label="CFG for '_Z19find_maximum_kernelPfPiji' function";

	Node0x5a8c7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = udiv i32 %14, %11\l  %18 = mul i32 %17, %11\l  %19 = icmp ugt i32 %14, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %11\l  %23 = icmp ult i32 %16, %2\l  br i1 %23, label %24, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5a8c7a0:s0 -> Node0x5a8c7f0;
	Node0x5a8c7a0:s1 -> Node0x5a8e7a0;
	Node0x5a8c7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %33, %24 ], [ %16, %4 ]\l  %26 = phi float [ %31, %24 ], [ -1.000000e+00, %4 ]\l  %27 = phi i32 [ %32, %24 ], [ 0, %4 ]\l  %28 = zext i32 %25 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = tail call float @llvm.maxnum.f32(float %26, float %30)\l  %32 = add i32 %27, %22\l  %33 = add i32 %16, %32\l  %34 = icmp ult i32 %33, %2\l  br i1 %34, label %24, label %35, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5a8c7f0:s0 -> Node0x5a8c7f0;
	Node0x5a8c7f0:s1 -> Node0x5a8e7a0;
	Node0x5a8e7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%35:\l35:                                               \l  %36 = phi float [ -1.000000e+00, %4 ], [ %31, %24 ]\l  %37 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %5\l  store float %36, float addrspace(3)* %37, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp ult i16 %10, 2\l  br i1 %38, label %51, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5a8e7a0:s0 -> Node0x5a90660;
	Node0x5a8e7a0:s1 -> Node0x5a906f0;
	Node0x5a906f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %41, %49 ], [ %11, %35 ]\l  %41 = lshr i32 %40, 1\l  %42 = icmp ult i32 %5, %41\l  br i1 %42, label %43, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5a906f0:s0 -> Node0x5a90af0;
	Node0x5a906f0:s1 -> Node0x5a90860;
	Node0x5a90af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = load float, float addrspace(3)* %37, align 4, !tbaa !16\l  %45 = add nuw nsw i32 %41, %5\l  %46 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @cache,\l... i32 0, i32 %45\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !16\l  %48 = tail call float @llvm.maxnum.f32(float %44, float %47)\l  store float %48, float addrspace(3)* %37, align 4, !tbaa !16\l  br label %49\l}"];
	Node0x5a90af0 -> Node0x5a90860;
	Node0x5a90860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = icmp ult i32 %40, 4\l  br i1 %50, label %51, label %39, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5a90860:s0 -> Node0x5a90660;
	Node0x5a90860:s1 -> Node0x5a906f0;
	Node0x5a90660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%51:\l51:                                               \l  %52 = icmp eq i32 %5, 0\l  br i1 %52, label %53, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5a90660:s0 -> Node0x5a91480;
	Node0x5a90660:s1 -> Node0x5a914d0;
	Node0x5a91480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%53:\l53:                                               \l  %54 = cmpxchg i32 addrspace(1)* %1, i32 0, i32 1 syncscope(\"agent-one-as\")\l... monotonic monotonic, align 4\l  %55 = extractvalue \{ i32, i1 \} %54, 1\l  br i1 %55, label %56, label %53, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5a91480:s0 -> Node0x5a91990;
	Node0x5a91480:s1 -> Node0x5a91480;
	Node0x5a91990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%56:\l56:                                               \l  %57 = load float, float addrspace(1)* @maxLum, align 4, !tbaa !16\l  %58 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @cache, i32 0, i32 0), align 4, !tbaa !16\l  %59 = tail call float @llvm.maxnum.f32(float %57, float %58)\l  store float %59, float addrspace(1)* @maxLum, align 4, !tbaa !16\l  %60 = atomicrmw xchg i32 addrspace(1)* %1, i32 0 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %61\l}"];
	Node0x5a91990 -> Node0x5a914d0;
	Node0x5a914d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%61:\l61:                                               \l  ret void\l}"];
}
