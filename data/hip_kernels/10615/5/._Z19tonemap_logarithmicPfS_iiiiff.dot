digraph "CFG for '_Z19tonemap_logarithmicPfS_iiiiff' function" {
	label="CFG for '_Z19tonemap_logarithmicPfS_iiiiff' function";

	Node0x47f23d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %3\l  %27 = icmp slt i32 %25, %2\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %143\l|{<s0>T|<s1>F}}"];
	Node0x47f23d0:s0 -> Node0x47f5840;
	Node0x47f23d0:s1 -> Node0x47f58d0;
	Node0x47f5840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %17, %2\l  %31 = add nsw i32 %30, %25\l  %32 = mul nsw i32 %31, 3\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fmul contract float %35, %6\l  %37 = fadd contract float %36, 1.000000e+00\l  %38 = tail call i1 @llvm.amdgcn.class.f32(float %37, i32 144)\l  %39 = select i1 %38, float 0x41F0000000000000, float 1.000000e+00\l  %40 = fmul float %37, %39\l  %41 = tail call float @llvm.log2.f32(float %40)\l  %42 = fmul float %41, 0x3FD3441340000000\l  %43 = tail call i1 @llvm.amdgcn.class.f32(float %41, i32 519)\l  %44 = fneg float %42\l  %45 = tail call float @llvm.fma.f32(float %41, float 0x3FD3441340000000,\l... float %44)\l  %46 = tail call float @llvm.fma.f32(float %41, float 0x3E509F79E0000000,\l... float %45)\l  %47 = fadd float %42, %46\l  %48 = select i1 %43, float %41, float %47\l  %49 = select i1 %38, float 0x4023441360000000, float 0.000000e+00\l  %50 = fsub float %48, %49\l  %51 = load float, float addrspace(1)* @maxLum, align 4, !tbaa !7\l  %52 = fmul contract float %51, %7\l  %53 = fadd contract float %52, 1.000000e+00\l  %54 = tail call i1 @llvm.amdgcn.class.f32(float %53, i32 144)\l  %55 = select i1 %54, float 0x41F0000000000000, float 1.000000e+00\l  %56 = fmul float %53, %55\l  %57 = tail call float @llvm.log2.f32(float %56)\l  %58 = fmul float %57, 0x3FD3441340000000\l  %59 = tail call i1 @llvm.amdgcn.class.f32(float %57, i32 519)\l  %60 = fneg float %58\l  %61 = tail call float @llvm.fma.f32(float %57, float 0x3FD3441340000000,\l... float %60)\l  %62 = tail call float @llvm.fma.f32(float %57, float 0x3E509F79E0000000,\l... float %61)\l  %63 = fadd float %58, %62\l  %64 = select i1 %59, float %57, float %63\l  %65 = select i1 %54, float 0x4023441360000000, float 0.000000e+00\l  %66 = fsub float %64, %65\l  %67 = fdiv contract float %50, %66\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %67, float addrspace(1)* %68, align 4, !tbaa !7\l  %69 = add nsw i32 %32, 1\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = fmul contract float %72, %6\l  %74 = fadd contract float %73, 1.000000e+00\l  %75 = tail call i1 @llvm.amdgcn.class.f32(float %74, i32 144)\l  %76 = select i1 %75, float 0x41F0000000000000, float 1.000000e+00\l  %77 = fmul float %74, %76\l  %78 = tail call float @llvm.log2.f32(float %77)\l  %79 = fmul float %78, 0x3FD3441340000000\l  %80 = tail call i1 @llvm.amdgcn.class.f32(float %78, i32 519)\l  %81 = fneg float %79\l  %82 = tail call float @llvm.fma.f32(float %78, float 0x3FD3441340000000,\l... float %81)\l  %83 = tail call float @llvm.fma.f32(float %78, float 0x3E509F79E0000000,\l... float %82)\l  %84 = fadd float %79, %83\l  %85 = select i1 %80, float %78, float %84\l  %86 = select i1 %75, float 0x4023441360000000, float 0.000000e+00\l  %87 = fsub float %85, %86\l  %88 = load float, float addrspace(1)* @maxLum, align 4, !tbaa !7\l  %89 = fmul contract float %88, %7\l  %90 = fadd contract float %89, 1.000000e+00\l  %91 = tail call i1 @llvm.amdgcn.class.f32(float %90, i32 144)\l  %92 = select i1 %91, float 0x41F0000000000000, float 1.000000e+00\l  %93 = fmul float %90, %92\l  %94 = tail call float @llvm.log2.f32(float %93)\l  %95 = fmul float %94, 0x3FD3441340000000\l  %96 = tail call i1 @llvm.amdgcn.class.f32(float %94, i32 519)\l  %97 = fneg float %95\l  %98 = tail call float @llvm.fma.f32(float %94, float 0x3FD3441340000000,\l... float %97)\l  %99 = tail call float @llvm.fma.f32(float %94, float 0x3E509F79E0000000,\l... float %98)\l  %100 = fadd float %95, %99\l  %101 = select i1 %96, float %94, float %100\l  %102 = select i1 %91, float 0x4023441360000000, float 0.000000e+00\l  %103 = fsub float %101, %102\l  %104 = fdiv contract float %87, %103\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  store float %104, float addrspace(1)* %105, align 4, !tbaa !7\l  %106 = add nsw i32 %32, 2\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7\l  %110 = fmul contract float %109, %6\l  %111 = fadd contract float %110, 1.000000e+00\l  %112 = tail call i1 @llvm.amdgcn.class.f32(float %111, i32 144)\l  %113 = select i1 %112, float 0x41F0000000000000, float 1.000000e+00\l  %114 = fmul float %111, %113\l  %115 = tail call float @llvm.log2.f32(float %114)\l  %116 = fmul float %115, 0x3FD3441340000000\l  %117 = tail call i1 @llvm.amdgcn.class.f32(float %115, i32 519)\l  %118 = fneg float %116\l  %119 = tail call float @llvm.fma.f32(float %115, float 0x3FD3441340000000,\l... float %118)\l  %120 = tail call float @llvm.fma.f32(float %115, float 0x3E509F79E0000000,\l... float %119)\l  %121 = fadd float %116, %120\l  %122 = select i1 %117, float %115, float %121\l  %123 = select i1 %112, float 0x4023441360000000, float 0.000000e+00\l  %124 = fsub float %122, %123\l  %125 = load float, float addrspace(1)* @maxLum, align 4, !tbaa !7\l  %126 = fmul contract float %125, %7\l  %127 = fadd contract float %126, 1.000000e+00\l  %128 = tail call i1 @llvm.amdgcn.class.f32(float %127, i32 144)\l  %129 = select i1 %128, float 0x41F0000000000000, float 1.000000e+00\l  %130 = fmul float %127, %129\l  %131 = tail call float @llvm.log2.f32(float %130)\l  %132 = fmul float %131, 0x3FD3441340000000\l  %133 = tail call i1 @llvm.amdgcn.class.f32(float %131, i32 519)\l  %134 = fneg float %132\l  %135 = tail call float @llvm.fma.f32(float %131, float 0x3FD3441340000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %131, float 0x3E509F79E0000000,\l... float %135)\l  %137 = fadd float %132, %136\l  %138 = select i1 %133, float %131, float %137\l  %139 = select i1 %128, float 0x4023441360000000, float 0.000000e+00\l  %140 = fsub float %138, %139\l  %141 = fdiv contract float %124, %140\l  %142 = getelementptr inbounds float, float addrspace(1)* %1, i64 %107\l  store float %141, float addrspace(1)* %142, align 4, !tbaa !7\l  br label %143\l}"];
	Node0x47f5840 -> Node0x47f58d0;
	Node0x47f58d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%143:\l143:                                              \l  ret void\l}"];
}
