digraph "CFG for '_Z26reduceCompleteUnrollWarps8PiS_j' function" {
	label="CFG for '_Z26reduceCompleteUnrollWarps8PiS_j' function";

	Node0x5d55050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 3\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %4\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = mul nuw nsw i32 %11, 7\l  %17 = add i32 %13, %16\l  %18 = icmp ult i32 %17, %2\l  br i1 %18, label %19, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5d55050:s0 -> Node0x5d55e20;
	Node0x5d55050:s1 -> Node0x5d57350;
	Node0x5d55e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%19:\l19:                                               \l  %20 = add i32 %13, %11\l  %21 = zext i32 %20 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %24 = zext i32 %13 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = add nsw i32 %26, %23\l  %28 = shl nuw nsw i32 %11, 1\l  %29 = add i32 %13, %28\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %33 = add nsw i32 %32, %27\l  %34 = mul nuw nsw i32 %11, 3\l  %35 = add i32 %13, %34\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %39 = add nsw i32 %38, %33\l  %40 = shl nuw nsw i32 %11, 2\l  %41 = add i32 %13, %40\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7\l  %45 = add nsw i32 %44, %39\l  %46 = mul nuw nsw i32 %11, 5\l  %47 = add i32 %13, %46\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = add nsw i32 %50, %45\l  %52 = mul nuw nsw i32 %11, 6\l  %53 = add i32 %13, %52\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %57 = add nsw i32 %56, %51\l  %58 = zext i32 %17 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %61 = add nsw i32 %60, %57\l  store i32 %61, i32 addrspace(1)* %25, align 4, !tbaa !7\l  br label %62\l}"];
	Node0x5d55e20 -> Node0x5d57350;
	Node0x5d57350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ugt i16 %10, 1023\l  %64 = icmp ult i32 %4, 512\l  %65 = select i1 %63, i1 %64, i1 false\l  br i1 %65, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5d57350:s0 -> Node0x5d58a70;
	Node0x5d57350:s1 -> Node0x5d58b00;
	Node0x5d58a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%66:\l66:                                               \l  %67 = add nuw nsw i32 %4, 512\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7\l  %71 = zext i32 %4 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7\l  %74 = add nsw i32 %73, %70\l  store i32 %74, i32 addrspace(1)* %72, align 4, !tbaa !7\l  br label %75\l}"];
	Node0x5d58a70 -> Node0x5d58b00;
	Node0x5d58b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %76 = icmp ugt i16 %10, 511\l  %77 = icmp ult i32 %4, 256\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %79, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5d58b00:s0 -> Node0x5d5acb0;
	Node0x5d58b00:s1 -> Node0x5d5ad00;
	Node0x5d5acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%79:\l79:                                               \l  %80 = add nuw nsw i32 %4, 256\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = zext i32 %4 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !7\l  %87 = add nsw i32 %86, %83\l  store i32 %87, i32 addrspace(1)* %85, align 4, !tbaa !7\l  br label %88\l}"];
	Node0x5d5acb0 -> Node0x5d5ad00;
	Node0x5d5ad00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %89 = icmp ugt i16 %10, 255\l  %90 = icmp ult i32 %4, 128\l  %91 = select i1 %89, i1 %90, i1 false\l  br i1 %91, label %92, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5d5ad00:s0 -> Node0x5d5b700;
	Node0x5d5ad00:s1 -> Node0x5d5b750;
	Node0x5d5b700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%92:\l92:                                               \l  %93 = add nuw nsw i32 %4, 128\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !7\l  %97 = zext i32 %4 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !7\l  %100 = add nsw i32 %99, %96\l  store i32 %100, i32 addrspace(1)* %98, align 4, !tbaa !7\l  br label %101\l}"];
	Node0x5d5b700 -> Node0x5d5b750;
	Node0x5d5b750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = icmp ugt i16 %10, 127\l  %103 = icmp ult i32 %4, 64\l  %104 = select i1 %102, i1 %103, i1 false\l  br i1 %104, label %105, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5d5b750:s0 -> Node0x5d5c110;
	Node0x5d5b750:s1 -> Node0x5d5c160;
	Node0x5d5c110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%105:\l105:                                              \l  %106 = add nuw nsw i32 %4, 64\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !7\l  %110 = zext i32 %13 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7\l  %113 = add nsw i32 %112, %109\l  store i32 %113, i32 addrspace(1)* %111, align 4, !tbaa !7\l  br label %114\l}"];
	Node0x5d5c110 -> Node0x5d5c160;
	Node0x5d5c160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %115 = icmp ult i32 %4, 32\l  br i1 %115, label %116, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5d5c160:s0 -> Node0x5d5c9b0;
	Node0x5d5c160:s1 -> Node0x5d5ca00;
	Node0x5d5c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%116:\l116:                                              \l  %117 = add nuw nsw i32 %4, 32\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %118\l  %120 = addrspacecast i32 addrspace(1)* %119 to i32*\l  %121 = load volatile i32, i32* %120, align 4, !tbaa !7\l  %122 = zext i32 %4 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %122\l  %124 = addrspacecast i32 addrspace(1)* %123 to i32*\l  %125 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %126 = add nsw i32 %125, %121\l  store volatile i32 %126, i32* %124, align 4, !tbaa !7\l  %127 = add nuw nsw i32 %4, 16\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %128\l  %130 = addrspacecast i32 addrspace(1)* %129 to i32*\l  %131 = load volatile i32, i32* %130, align 4, !tbaa !7\l  %132 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %133 = add nsw i32 %132, %131\l  store volatile i32 %133, i32* %124, align 4, !tbaa !7\l  %134 = add nuw nsw i32 %4, 8\l  %135 = zext i32 %134 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %135\l  %137 = addrspacecast i32 addrspace(1)* %136 to i32*\l  %138 = load volatile i32, i32* %137, align 4, !tbaa !7\l  %139 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %140 = add nsw i32 %139, %138\l  store volatile i32 %140, i32* %124, align 4, !tbaa !7\l  %141 = add nuw nsw i32 %4, 4\l  %142 = zext i32 %141 to i64\l  %143 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %142\l  %144 = addrspacecast i32 addrspace(1)* %143 to i32*\l  %145 = load volatile i32, i32* %144, align 4, !tbaa !7\l  %146 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %147 = add nsw i32 %146, %145\l  store volatile i32 %147, i32* %124, align 4, !tbaa !7\l  %148 = add nuw nsw i32 %4, 2\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %149\l  %151 = addrspacecast i32 addrspace(1)* %150 to i32*\l  %152 = load volatile i32, i32* %151, align 4, !tbaa !7\l  %153 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %154 = add nsw i32 %153, %152\l  store volatile i32 %154, i32* %124, align 4, !tbaa !7\l  %155 = add nuw nsw i32 %4, 1\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %156\l  %158 = addrspacecast i32 addrspace(1)* %157 to i32*\l  %159 = load volatile i32, i32* %158, align 4, !tbaa !7\l  %160 = load volatile i32, i32* %124, align 4, !tbaa !7\l  %161 = add nsw i32 %160, %159\l  store volatile i32 %161, i32* %124, align 4, !tbaa !7\l  br label %162\l}"];
	Node0x5d5c9b0 -> Node0x5d5ca00;
	Node0x5d5ca00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  %163 = icmp eq i32 %4, 0\l  br i1 %163, label %164, label %168\l|{<s0>T|<s1>F}}"];
	Node0x5d5ca00:s0 -> Node0x5d5eae0;
	Node0x5d5ca00:s1 -> Node0x5d5eb30;
	Node0x5d5eae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%164:\l164:                                              \l  %165 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7\l  %166 = zext i32 %5 to i64\l  %167 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %166\l  store i32 %165, i32 addrspace(1)* %167, align 4, !tbaa !7\l  br label %168\l}"];
	Node0x5d5eae0 -> Node0x5d5eb30;
	Node0x5d5eb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  ret void\l}"];
}
