digraph "CFG for '_Z7kUpdateiPfS_' function" {
	label="CFG for '_Z7kUpdateiPfS_' function";

	Node0x4a7d8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %0\l  br i1 %13, label %14, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4a7d8d0:s0 -> Node0x4a7f7e0;
	Node0x4a7d8d0:s1 -> Node0x4a7f870;
	Node0x4a7f7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%14:\l14:                                               \l  %15 = mul nsw i32 %0, 5\l  %16 = add nsw i32 %12, %15\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = fptosi float %19 to i32\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %56, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4a7f7e0:s0 -> Node0x4a7f870;
	Node0x4a7f7e0:s1 -> Node0x4a805b0;
	Node0x4a805b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%22:\l22:                                               \l  %23 = shl nsw i32 %0, 2\l  %24 = mul nsw i32 %0, 3\l  %25 = shl nsw i32 %0, 1\l  %26 = sext i32 %12 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = sitofp i32 %20 to float\l  %30 = fdiv contract float %28, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %30, float addrspace(1)* %31, align 4, !tbaa !7\l  %32 = add nsw i32 %12, %0\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7\l  %36 = fdiv contract float %35, %29\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %36, float addrspace(1)* %37, align 4, !tbaa !7\l  %38 = add nsw i32 %12, %25\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = fdiv contract float %41, %29\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = add nsw i32 %12, %24\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = fdiv contract float %47, %29\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  store float %48, float addrspace(1)* %49, align 4, !tbaa !7\l  %50 = add nsw i32 %12, %23\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fdiv contract float %53, %29\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  store float %54, float addrspace(1)* %55, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %34, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %40, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %46, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %52, align 4, !tbaa !7\l  store float 0.000000e+00, float addrspace(1)* %18, align 4, !tbaa !7\l  br label %56\l}"];
	Node0x4a805b0 -> Node0x4a7f870;
	Node0x4a7f870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  ret void\l}"];
}
