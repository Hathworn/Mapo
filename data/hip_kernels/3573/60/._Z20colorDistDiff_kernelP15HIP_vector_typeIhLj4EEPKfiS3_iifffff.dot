digraph "CFG for '_Z20colorDistDiff_kernelP15HIP_vector_typeIhLj4EEPKfiS3_iifffff' function" {
	label="CFG for '_Z20colorDistDiff_kernelP15HIP_vector_typeIhLj4EEPKfiS3_iifffff' function";

	Node0x635d130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %4\l  %30 = icmp slt i32 %28, %5\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %111\l|{<s0>T|<s1>F}}"];
	Node0x635d130:s0 -> Node0x6361720;
	Node0x635d130:s1 -> Node0x63617b0;
	Node0x6361720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %28, %4\l  %34 = add nsw i32 %33, %20\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %35, i32 0, i32 0, i32 0, i64 0\l  %37 = load i8, i8 addrspace(1)* %36, align 4, !amdgpu.noclobber !5\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %35, i32 0, i32 0, i32 0, i64 1\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !amdgpu.noclobber !5\l  %40 = bitcast float addrspace(1)* %1 to i8 addrspace(1)*\l  %41 = mul nsw i32 %28, %2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %40, i64 %42\l  %44 = bitcast i8 addrspace(1)* %43 to float addrspace(1)*\l  %45 = sext i32 %20 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %44, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = sitofp i32 %20 to float\l  %51 = fsub contract float %50, %8\l  %52 = fdiv contract float %51, %6\l  %53 = sitofp i32 %28 to float\l  %54 = fsub contract float %53, %9\l  %55 = fdiv contract float %54, %6\l  %56 = fneg contract float %6\l  %57 = fmul contract float %56, %7\l  %58 = fdiv contract float %57, %49\l  %59 = fmul contract float %52, %58\l  %60 = fdiv contract float %57, %47\l  %61 = fmul contract float %52, %60\l  %62 = fsub contract float %59, %61\l  %63 = fmul contract float %62, %62\l  %64 = fmul contract float %55, %60\l  %65 = fmul contract float %55, %58\l  %66 = fsub contract float %64, %65\l  %67 = fmul contract float %66, %66\l  %68 = fadd contract float %63, %67\l  %69 = fsub contract float %58, %60\l  %70 = fmul contract float %69, %69\l  %71 = fadd contract float %70, %68\l  %72 = fcmp olt float %71, 0x39F0000000000000\l  %73 = select i1 %72, float 0x41F0000000000000, float 1.000000e+00\l  %74 = fmul float %71, %73\l  %75 = tail call float @llvm.sqrt.f32(float %74)\l  %76 = bitcast float %75 to i32\l  %77 = add nsw i32 %76, -1\l  %78 = bitcast i32 %77 to float\l  %79 = add nsw i32 %76, 1\l  %80 = bitcast i32 %79 to float\l  %81 = tail call i1 @llvm.amdgcn.class.f32(float %74, i32 608)\l  %82 = select i1 %72, float 0x3EF0000000000000, float 1.000000e+00\l  %83 = fneg float %80\l  %84 = tail call float @llvm.fma.f32(float %83, float %75, float %74)\l  %85 = fcmp ogt float %84, 0.000000e+00\l  %86 = fneg float %78\l  %87 = tail call float @llvm.fma.f32(float %86, float %75, float %74)\l  %88 = fcmp ole float %87, 0.000000e+00\l  %89 = select i1 %88, float %78, float %75\l  %90 = select i1 %85, float %80, float %89\l  %91 = fmul float %82, %90\l  %92 = select i1 %81, float %74, float %91\l  %93 = fcmp contract ogt float %92, %10\l  %94 = zext i1 %93 to i32\l  %95 = tail call i1 @llvm.amdgcn.class.f32(float %47, i32 504)\l  %96 = zext i1 %95 to i32\l  %97 = tail call i1 @llvm.amdgcn.class.f32(float %49, i32 504)\l  %98 = zext i1 %97 to i32\l  %99 = xor i32 %98, -1\l  %100 = and i32 %99, %96\l  %101 = or i32 %100, %94\l  %102 = icmp eq i32 %101, 0\l  %103 = uitofp i8 %37 to float\l  %104 = fmul contract float %103, 5.000000e-01\l  %105 = fptoui float %104 to i8\l  %106 = uitofp i8 %39 to float\l  %107 = fmul contract float %106, 5.000000e-01\l  %108 = fptoui float %107 to i8\l  %109 = select i1 %102, i8 %37, i8 %105\l  %110 = select i1 %102, i8 %39, i8 %108\l  store i8 %109, i8 addrspace(1)* %36, align 4\l  store i8 %110, i8 addrspace(1)* %38, align 1\l  br label %111\l}"];
	Node0x6361720 -> Node0x63617b0;
	Node0x63617b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  ret void\l}"];
}
