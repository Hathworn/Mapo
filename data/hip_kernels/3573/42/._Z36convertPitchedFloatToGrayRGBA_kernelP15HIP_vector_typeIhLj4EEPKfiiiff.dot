digraph "CFG for '_Z36convertPitchedFloatToGrayRGBA_kernelP15HIP_vector_typeIhLj4EEPKfiiiff' function" {
	label="CFG for '_Z36convertPitchedFloatToGrayRGBA_kernelP15HIP_vector_typeIhLj4EEPKfiiiff' function";

	Node0x52822e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = shl i32 %8, 8\l  %15 = ashr exact i32 %14, 8\l  %16 = mul nsw i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = shl i32 %19, 8\l  %25 = ashr exact i32 %24, 8\l  %26 = mul nsw i32 %25, %23\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %18, %2\l  %30 = icmp slt i32 %28, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %57\l|{<s0>T|<s1>F}}"];
	Node0x52822e0:s0 -> Node0x5285f80;
	Node0x52822e0:s1 -> Node0x5286010;
	Node0x5285f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = bitcast float addrspace(1)* %1 to i8 addrspace(1)*\l  %34 = mul nsw i32 %28, %4\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 %35\l  %37 = bitcast i8 addrspace(1)* %36 to float addrspace(1)*\l  %38 = sext i32 %18 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %37, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fsub contract float %40, %5\l  %42 = fsub contract float %6, %5\l  %43 = fdiv contract float %41, %42\l  %44 = fmul contract float %43, 2.550000e+02\l  %45 = fptoui float %44 to i8\l  %46 = shl i32 %28, 8\l  %47 = ashr exact i32 %46, 8\l  %48 = shl i32 %2, 8\l  %49 = ashr exact i32 %48, 8\l  %50 = mul nsw i32 %47, %49\l  %51 = add nsw i32 %50, %18\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %52, i32 0, i32 0, i32 0, i64 0\l  store i8 %45, i8 addrspace(1)* %53, align 4\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %52, i32 0, i32 0, i32 0, i64 1\l  store i8 %45, i8 addrspace(1)* %54, align 1\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %52, i32 0, i32 0, i32 0, i64 2\l  store i8 %45, i8 addrspace(1)* %55, align 2\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %52, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %56, align 1\l  br label %57\l}"];
	Node0x5285f80 -> Node0x5286010;
	Node0x5286010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
