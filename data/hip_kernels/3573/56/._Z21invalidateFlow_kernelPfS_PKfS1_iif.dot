digraph "CFG for '_Z21invalidateFlow_kernelPfS_PKfS1_iif' function" {
	label="CFG for '_Z21invalidateFlow_kernelPfS_PKfS1_iif' function";

	Node0x58e7dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = shl i32 %8, 8\l  %15 = ashr exact i32 %14, 8\l  %16 = mul nsw i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = shl i32 %19, 8\l  %25 = ashr exact i32 %24, 8\l  %26 = mul nsw i32 %25, %23\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %18, %4\l  %30 = icmp slt i32 %28, %5\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %77\l|{<s0>T|<s1>F}}"];
	Node0x58e7dd0:s0 -> Node0x58ebad0;
	Node0x58e7dd0:s1 -> Node0x58ebb60;
	Node0x58ebad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = shl i32 %28, 8\l  %34 = ashr exact i32 %33, 8\l  %35 = shl i32 %4, 8\l  %36 = ashr exact i32 %35, 8\l  %37 = mul nsw i32 %34, %36\l  %38 = add nsw i32 %37, %18\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fsub contract float %41, %45\l  %49 = fmul contract float %48, %48\l  %50 = fsub contract float %43, %47\l  %51 = fmul contract float %50, %50\l  %52 = fadd contract float %49, %51\l  %53 = fcmp olt float %52, 0x39F0000000000000\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %52, %54\l  %56 = tail call float @llvm.sqrt.f32(float %55)\l  %57 = bitcast float %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = bitcast i32 %58 to float\l  %60 = add nsw i32 %57, 1\l  %61 = bitcast i32 %60 to float\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 608)\l  %63 = select i1 %53, float 0x3EF0000000000000, float 1.000000e+00\l  %64 = fneg float %61\l  %65 = tail call float @llvm.fma.f32(float %64, float %56, float %55)\l  %66 = fcmp ogt float %65, 0.000000e+00\l  %67 = fneg float %59\l  %68 = tail call float @llvm.fma.f32(float %67, float %56, float %55)\l  %69 = fcmp ole float %68, 0.000000e+00\l  %70 = select i1 %69, float %59, float %56\l  %71 = select i1 %66, float %61, float %70\l  %72 = fmul float %63, %71\l  %73 = select i1 %62, float %55, float %72\l  %74 = fcmp contract ogt float %73, %6\l  %75 = select i1 %74, float 0x7FF8000000000000, float %43\l  %76 = select i1 %74, float 0x7FF8000000000000, float %41\l  store float %76, float addrspace(1)* %40, align 4, !tbaa !7\l  store float %75, float addrspace(1)* %42, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x58ebad0 -> Node0x58ebb60;
	Node0x58ebb60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
