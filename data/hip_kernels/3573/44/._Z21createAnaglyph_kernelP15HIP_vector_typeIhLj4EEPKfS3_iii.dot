digraph "CFG for '_Z21createAnaglyph_kernelP15HIP_vector_typeIhLj4EEPKfS3_iii' function" {
	label="CFG for '_Z21createAnaglyph_kernelP15HIP_vector_typeIhLj4EEPKfS3_iii' function";

	Node0x4fa1340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %7, 8\l  %14 = ashr exact i32 %13, 8\l  %15 = mul nsw i32 %14, %12\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = sub nsw i32 %17, %5\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = shl i32 %19, 8\l  %25 = ashr exact i32 %24, 8\l  %26 = mul nsw i32 %25, %23\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %17, %3\l  %30 = icmp slt i32 %28, %4\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4fa1340:s0 -> Node0x4fa5050;
	Node0x4fa1340:s1 -> Node0x4fa50e0;
	Node0x4fa5050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = shl i32 %28, 8\l  %34 = ashr exact i32 %33, 8\l  %35 = shl i32 %3, 8\l  %36 = ashr exact i32 %35, 8\l  %37 = mul nsw i32 %34, %36\l  %38 = add nsw i32 %37, %17\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fptoui float %41 to i8\l  %43 = icmp sgt i32 %18, 0\l  %44 = icmp slt i32 %18, %3\l  %45 = select i1 %43, i1 %44, i1 false\l  br i1 %45, label %46, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4fa5050:s0 -> Node0x4fa5c00;
	Node0x4fa5050:s1 -> Node0x4fa5c90;
	Node0x4fa5c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%46:\l46:                                               \l  %47 = add nsw i32 %37, %18\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fptoui float %50 to i8\l  br label %52\l}"];
	Node0x4fa5c00 -> Node0x4fa5c90;
	Node0x4fa5c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = phi i8 [ %51, %46 ], [ 0, %32 ]\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 0\l  store i8 %42, i8 addrspace(1)* %54, align 4\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 1\l  store i8 %53, i8 addrspace(1)* %55, align 1\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 2\l  store i8 %53, i8 addrspace(1)* %56, align 2\l  %57 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %39, i32 0, i32 0, i32 0, i64 3\l  store i8 -1, i8 addrspace(1)* %57, align 1\l  br label %58\l}"];
	Node0x4fa5c90 -> Node0x4fa50e0;
	Node0x4fa50e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
