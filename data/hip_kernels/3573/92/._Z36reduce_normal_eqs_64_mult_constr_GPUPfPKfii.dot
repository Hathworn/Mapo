digraph "CFG for '_Z36reduce_normal_eqs_64_mult_constr_GPUPfPKfii' function" {
	label="CFG for '_Z36reduce_normal_eqs_64_mult_constr_GPUPfPKfii' function";

	Node0x5349c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 2\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = add i32 %6, %7\l  %9 = icmp slt i32 %8, %3\l  br i1 %9, label %10, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5349c60:s0 -> Node0x5349cf0;
	Node0x5349c60:s1 -> Node0x534b520;
	Node0x5349cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%10:\l10:                                               \l  %11 = shl nuw nsw i32 %7, 6\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = add nuw nsw i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = mul i32 %14, %3\l  %16 = add i32 %15, %8\l  %17 = mul i32 %16, %2\l  %18 = icmp sgt i32 %2, 0\l  br i1 %18, label %19, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5349cf0:s0 -> Node0x534c430;
	Node0x5349cf0:s1 -> Node0x534c4c0;
	Node0x534c430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x534c430:s0 -> Node0x534c780;
	Node0x534c430:s1 -> Node0x534c7d0;
	Node0x534c7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %2, -8\l  br label %47\l}"];
	Node0x534c7d0 -> Node0x534c9d0;
	Node0x534c780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi float [ undef, %19 ], [ %113, %47 ]\l  %26 = phi i32 [ 0, %19 ], [ %114, %47 ]\l  %27 = phi float [ 0.000000e+00, %19 ], [ %113, %47 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %43, label %29\l|{<s0>T|<s1>F}}"];
	Node0x534c780:s0 -> Node0x534c4c0;
	Node0x534c780:s1 -> Node0x534d820;
	Node0x534d820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %40, %29 ], [ %26, %24 ]\l  %31 = phi float [ %39, %29 ], [ %27, %24 ]\l  %32 = phi i32 [ %41, %29 ], [ 0, %24 ]\l  %33 = add i32 %30, %17\l  %34 = shl i32 %33, 6\l  %35 = add i32 %34, %12\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %39 = fadd contract float %31, %38\l  %40 = add nuw nsw i32 %30, 1\l  %41 = add i32 %32, 1\l  %42 = icmp eq i32 %41, %20\l  br i1 %42, label %43, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x534d820:s0 -> Node0x534c4c0;
	Node0x534d820:s1 -> Node0x534d820;
	Node0x534c4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %10 ], [ %25, %24 ], [ %39, %29 ]\l  %45 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %13\l  store float %44, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ult i32 %12, 32\l  br i1 %46, label %117, label %148\l|{<s0>T|<s1>F}}"];
	Node0x534c4c0:s0 -> Node0x534f2f0;
	Node0x534c4c0:s1 -> Node0x534f340;
	Node0x534c9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %22 ], [ %114, %47 ]\l  %49 = phi float [ 0.000000e+00, %22 ], [ %113, %47 ]\l  %50 = phi i32 [ 0, %22 ], [ %115, %47 ]\l  %51 = add i32 %48, %17\l  %52 = shl i32 %51, 6\l  %53 = add i32 %52, %12\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = fadd contract float %49, %56\l  %58 = or i32 %48, 1\l  %59 = add i32 %58, %17\l  %60 = shl i32 %59, 6\l  %61 = add i32 %60, %12\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %65 = fadd contract float %57, %64\l  %66 = or i32 %48, 2\l  %67 = add i32 %66, %17\l  %68 = shl i32 %67, 6\l  %69 = add i32 %68, %12\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = fadd contract float %65, %72\l  %74 = or i32 %48, 3\l  %75 = add i32 %74, %17\l  %76 = shl i32 %75, 6\l  %77 = add i32 %76, %12\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %81 = fadd contract float %73, %80\l  %82 = or i32 %48, 4\l  %83 = add i32 %82, %17\l  %84 = shl i32 %83, 6\l  %85 = add i32 %84, %12\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %89 = fadd contract float %81, %88\l  %90 = or i32 %48, 5\l  %91 = add i32 %90, %17\l  %92 = shl i32 %91, 6\l  %93 = add i32 %92, %12\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = fadd contract float %89, %96\l  %98 = or i32 %48, 6\l  %99 = add i32 %98, %17\l  %100 = shl i32 %99, 6\l  %101 = add i32 %100, %12\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = fadd contract float %97, %104\l  %106 = or i32 %48, 7\l  %107 = add i32 %106, %17\l  %108 = shl i32 %107, 6\l  %109 = add i32 %108, %12\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %113 = fadd contract float %105, %112\l  %114 = add nuw nsw i32 %48, 8\l  %115 = add i32 %50, 8\l  %116 = icmp eq i32 %115, %23\l  br i1 %116, label %24, label %47, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x534c9d0:s0 -> Node0x534c780;
	Node0x534c9d0:s1 -> Node0x534c9d0;
	Node0x534f2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%117:\l117:                                              \l  %118 = add nuw nsw i32 %13, 32\l  %119 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %118\l  %120 = load float, float addrspace(3)* %119, align 4, !tbaa !5\l  %121 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %122 = fadd contract float %120, %121\l  store float %122, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %123 = add nuw nsw i32 %13, 16\l  %124 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %123\l  %125 = load float, float addrspace(3)* %124, align 4, !tbaa !5\l  %126 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %127 = fadd contract float %125, %126\l  store float %127, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %128 = add nuw nsw i32 %13, 8\l  %129 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %128\l  %130 = load float, float addrspace(3)* %129, align 4, !tbaa !5\l  %131 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %132 = fadd contract float %130, %131\l  store float %132, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %133 = add nuw nsw i32 %13, 4\l  %134 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %133\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !5\l  %136 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %137 = fadd contract float %135, %136\l  store float %137, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %138 = add nuw nsw i32 %13, 2\l  %139 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %138\l  %140 = load float, float addrspace(3)* %139, align 4, !tbaa !5\l  %141 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %142 = fadd contract float %140, %141\l  store float %142, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %143 = add nuw nsw i32 %13, 1\l  %144 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ36reduce_normal_eqs_64_mult_constr_GPUPfPKfiiE4DATA, i32 0, i32 %143\l  %145 = load float, float addrspace(3)* %144, align 4, !tbaa !5\l  %146 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %147 = fadd contract float %145, %146\l  store float %147, float addrspace(3)* %45, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %148\l}"];
	Node0x534f2f0 -> Node0x534f340;
	Node0x534f340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%148:\l148:                                              \l  %149 = icmp eq i32 %12, 0\l  br i1 %149, label %150, label %154\l|{<s0>T|<s1>F}}"];
	Node0x534f340:s0 -> Node0x5354900;
	Node0x534f340:s1 -> Node0x534b520;
	Node0x5354900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%150:\l150:                                              \l  %151 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %152 = zext i32 %16 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %0, i64 %152\l  store float %151, float addrspace(1)* %153, align 4, !tbaa !5\l  br label %154\l}"];
	Node0x5354900 -> Node0x534b520;
	Node0x534b520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%154:\l154:                                              \l  ret void\l}"];
}
