digraph "CFG for '_Z36convertPointCloudToDepthImage_kernelPjPK15HIP_vector_typeIfLj4EEiiiffffPKfS5_' function" {
	label="CFG for '_Z36convertPointCloudToDepthImage_kernelPjPK15HIP_vector_typeIfLj4EEiiiffffPKfS5_' function";

	Node0x4d39000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = icmp slt i32 %20, %4\l  br i1 %21, label %22, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4d39000:s0 -> Node0x4d3bb20;
	Node0x4d39000:s1 -> Node0x4d3bbb0;
	Node0x4d3bb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%22:\l22:                                               \l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %23, i32 0, i32 0, i32 0, i64 0\l  %25 = load float, float addrspace(1)* %24, align 16, !amdgpu.noclobber !5\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %23, i32 0, i32 0, i32 0, i64 1\l  %27 = load float, float addrspace(1)* %26, align 4, !amdgpu.noclobber !5\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %23, i32 0, i32 0, i32 0, i64 2\l  %29 = load float, float addrspace(1)* %28, align 8, !amdgpu.noclobber !5\l  %30 = load float, float addrspace(1)* %10, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fmul contract float %25, %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %10, i64 1\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fmul contract float %27, %33\l  %35 = fadd contract float %31, %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %10, i64 2\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %29, %37\l  %39 = fadd contract float %35, %38\l  %40 = load float, float addrspace(1)* %9, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fadd contract float %40, %39\l  %42 = getelementptr inbounds float, float addrspace(1)* %10, i64 3\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %25, %43\l  %45 = getelementptr inbounds float, float addrspace(1)* %10, i64 4\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fmul contract float %27, %46\l  %48 = fadd contract float %44, %47\l  %49 = getelementptr inbounds float, float addrspace(1)* %10, i64 5\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %29, %50\l  %52 = fadd contract float %48, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %9, i64 1\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fadd contract float %54, %52\l  %56 = getelementptr inbounds float, float addrspace(1)* %10, i64 6\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fmul contract float %25, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %10, i64 7\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %27, %60\l  %62 = fadd contract float %58, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %10, i64 8\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %29, %64\l  %66 = fadd contract float %62, %65\l  %67 = getelementptr inbounds float, float addrspace(1)* %9, i64 2\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %69 = fadd contract float %68, %66\l  %70 = fdiv contract float 1.000000e+00, %69\l  %71 = fmul contract float %41, %7\l  %72 = fmul contract float %71, %70\l  %73 = fadd contract float %72, %5\l  %74 = tail call float @llvm.rint.f32(float %73)\l  %75 = fptosi float %74 to i32\l  %76 = fmul contract float %55, %8\l  %77 = fmul contract float %76, %70\l  %78 = fadd contract float %77, %6\l  %79 = tail call float @llvm.rint.f32(float %78)\l  %80 = fptosi float %79 to i32\l  %81 = icmp sgt i32 %75, -1\l  br i1 %81, label %82, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4d3bb20:s0 -> Node0x4d3ffc0;
	Node0x4d3bb20:s1 -> Node0x4d3bbb0;
	Node0x4d3ffc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%82:\l82:                                               \l  %83 = icmp slt i32 %75, %2\l  %84 = icmp sgt i32 %80, -1\l  %85 = select i1 %83, i1 %84, i1 false\l  %86 = icmp slt i32 %80, %3\l  %87 = select i1 %85, i1 %86, i1 false\l  br i1 %87, label %88, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4d3ffc0:s0 -> Node0x4d40440;
	Node0x4d3ffc0:s1 -> Node0x4d3bbb0;
	Node0x4d40440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%88:\l88:                                               \l  %89 = mul nsw i32 %80, %2\l  %90 = add nsw i32 %89, %75\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %91\l  %93 = fmul contract float %29, 1.000000e+03\l  %94 = fptoui float %93 to i32\l  %95 = atomicrmw umin i32 addrspace(1)* %92, i32 %94\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %96\l}"];
	Node0x4d40440 -> Node0x4d3bbb0;
	Node0x4d3bbb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  ret void\l}"];
}
