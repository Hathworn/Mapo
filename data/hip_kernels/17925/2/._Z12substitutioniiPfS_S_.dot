digraph "CFG for '_Z12substitutioniiPfS_S_' function" {
	label="CFG for '_Z12substitutioniiPfS_S_' function";

	Node0x59a0b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %13, %0\l  %15 = add i32 %14, %12\l  %16 = icmp sgt i32 %15, %0\l  %17 = icmp slt i32 %15, %1\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %32\l|{<s0>T|<s1>F}}"];
	Node0x59a0b40:s0 -> Node0x59a2640;
	Node0x59a0b40:s1 -> Node0x59a26d0;
	Node0x59a2640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  %20 = add nsw i32 %1, 1\l  %21 = mul nsw i32 %20, %0\l  %22 = add nsw i32 %15, %21\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %3, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = sext i32 %15 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %4, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = fmul contract float %25, %28\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  store float %29, float addrspace(1)* %30, align 4, !tbaa !7\l  %31 = atomicrmw fadd float addrspace(1)* @sum, float %29\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %32\l}"];
	Node0x59a2640 -> Node0x59a26d0;
	Node0x59a26d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
