digraph "CFG for '_Z13l2norm_kerneliPfS_iii' function" {
	label="CFG for '_Z13l2norm_kerneliPfS_iii' function";

	Node0x5e854e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %26, %0\l  br i1 %27, label %28, label %273\l|{<s0>T|<s1>F}}"];
	Node0x5e854e0:s0 -> Node0x5e87cf0;
	Node0x5e854e0:s1 -> Node0x5e87d80;
	Node0x5e87cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%28:\l28:                                               \l  %29 = freeze i32 %26\l  %30 = freeze i32 %5\l  %31 = sdiv i32 %29, %30\l  %32 = mul i32 %31, %30\l  %33 = sub i32 %29, %32\l  %34 = icmp sgt i32 %4, 0\l  br i1 %34, label %35, label %201\l|{<s0>T|<s1>F}}"];
	Node0x5e87cf0:s0 -> Node0x5e87460;
	Node0x5e87cf0:s1 -> Node0x5e88360;
	Node0x5e87460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%35:\l35:                                               \l  %36 = mul nsw i32 %31, %4\l  br label %37\l}"];
	Node0x5e87460 -> Node0x5e88530;
	Node0x5e88530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %199, %37 ]\l  %39 = phi float [ 0.000000e+00, %35 ], [ %198, %37 ]\l  %40 = add i32 %38, %36\l  %41 = mul i32 %40, %5\l  %42 = add nsw i32 %41, %33\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %46 = tail call float @llvm.fabs.f32(float %45)\l  %47 = tail call float @llvm.amdgcn.frexp.mant.f32(float %46)\l  %48 = fcmp olt float %47, 0x3FE5555560000000\l  %49 = zext i1 %48 to i32\l  %50 = tail call float @llvm.amdgcn.ldexp.f32(float %47, i32 %49)\l  %51 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %46)\l  %52 = sub nsw i32 %51, %49\l  %53 = fadd float %50, -1.000000e+00\l  %54 = fadd float %50, 1.000000e+00\l  %55 = fadd float %54, -1.000000e+00\l  %56 = fsub float %50, %55\l  %57 = tail call float @llvm.amdgcn.rcp.f32(float %54)\l  %58 = fmul float %53, %57\l  %59 = fmul float %54, %58\l  %60 = fneg float %59\l  %61 = tail call float @llvm.fma.f32(float %58, float %54, float %60)\l  %62 = tail call float @llvm.fma.f32(float %58, float %56, float %61)\l  %63 = fadd float %59, %62\l  %64 = fsub float %63, %59\l  %65 = fsub float %62, %64\l  %66 = fsub float %53, %63\l  %67 = fsub float %53, %66\l  %68 = fsub float %67, %63\l  %69 = fsub float %68, %65\l  %70 = fadd float %66, %69\l  %71 = fmul float %57, %70\l  %72 = fadd float %58, %71\l  %73 = fsub float %72, %58\l  %74 = fsub float %71, %73\l  %75 = fmul float %72, %72\l  %76 = fneg float %75\l  %77 = tail call float @llvm.fma.f32(float %72, float %72, float %76)\l  %78 = fmul float %74, 2.000000e+00\l  %79 = tail call float @llvm.fma.f32(float %72, float %78, float %77)\l  %80 = fadd float %75, %79\l  %81 = fsub float %80, %75\l  %82 = fsub float %79, %81\l  %83 = tail call float @llvm.fmuladd.f32(float %80, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %84 = tail call float @llvm.fmuladd.f32(float %80, float %83, float\l... 0x3FD999BDE0000000)\l  %85 = sitofp i32 %52 to float\l  %86 = fmul float %85, 0x3FE62E4300000000\l  %87 = fneg float %86\l  %88 = tail call float @llvm.fma.f32(float %85, float 0x3FE62E4300000000,\l... float %87)\l  %89 = tail call float @llvm.fma.f32(float %85, float 0xBE205C6100000000,\l... float %88)\l  %90 = fadd float %86, %89\l  %91 = fsub float %90, %86\l  %92 = fsub float %89, %91\l  %93 = tail call float @llvm.amdgcn.ldexp.f32(float %72, i32 1)\l  %94 = fmul float %72, %80\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %80, float %72, float %95)\l  %97 = tail call float @llvm.fma.f32(float %80, float %74, float %96)\l  %98 = tail call float @llvm.fma.f32(float %82, float %72, float %97)\l  %99 = fadd float %94, %98\l  %100 = fsub float %99, %94\l  %101 = fsub float %98, %100\l  %102 = fmul float %80, %84\l  %103 = fneg float %102\l  %104 = tail call float @llvm.fma.f32(float %80, float %84, float %103)\l  %105 = tail call float @llvm.fma.f32(float %82, float %84, float %104)\l  %106 = fadd float %102, %105\l  %107 = fsub float %106, %102\l  %108 = fsub float %105, %107\l  %109 = fadd float %106, 0x3FE5555540000000\l  %110 = fadd float %109, 0xBFE5555540000000\l  %111 = fsub float %106, %110\l  %112 = fadd float %108, 0x3E2E720200000000\l  %113 = fadd float %112, %111\l  %114 = fadd float %109, %113\l  %115 = fsub float %114, %109\l  %116 = fsub float %113, %115\l  %117 = fmul float %99, %114\l  %118 = fneg float %117\l  %119 = tail call float @llvm.fma.f32(float %99, float %114, float %118)\l  %120 = tail call float @llvm.fma.f32(float %99, float %116, float %119)\l  %121 = tail call float @llvm.fma.f32(float %101, float %114, float %120)\l  %122 = tail call float @llvm.amdgcn.ldexp.f32(float %74, i32 1)\l  %123 = fadd float %117, %121\l  %124 = fsub float %123, %117\l  %125 = fsub float %121, %124\l  %126 = fadd float %93, %123\l  %127 = fsub float %126, %93\l  %128 = fsub float %123, %127\l  %129 = fadd float %122, %125\l  %130 = fadd float %129, %128\l  %131 = fadd float %126, %130\l  %132 = fsub float %131, %126\l  %133 = fsub float %130, %132\l  %134 = fadd float %90, %131\l  %135 = fsub float %134, %90\l  %136 = fsub float %134, %135\l  %137 = fsub float %90, %136\l  %138 = fsub float %131, %135\l  %139 = fadd float %138, %137\l  %140 = fadd float %92, %133\l  %141 = fsub float %140, %92\l  %142 = fsub float %140, %141\l  %143 = fsub float %92, %142\l  %144 = fsub float %133, %141\l  %145 = fadd float %144, %143\l  %146 = fadd float %140, %139\l  %147 = fadd float %134, %146\l  %148 = fsub float %147, %134\l  %149 = fsub float %146, %148\l  %150 = fadd float %145, %149\l  %151 = fadd float %147, %150\l  %152 = fsub float %151, %147\l  %153 = fsub float %150, %152\l  %154 = fmul float %151, 2.000000e+00\l  %155 = fneg float %154\l  %156 = tail call float @llvm.fma.f32(float %151, float 2.000000e+00, float\l... %155)\l  %157 = tail call float @llvm.fma.f32(float %153, float 2.000000e+00, float\l... %156)\l  %158 = fadd float %154, %157\l  %159 = fsub float %158, %154\l  %160 = fsub float %157, %159\l  %161 = tail call float @llvm.fabs.f32(float %154) #3\l  %162 = fcmp oeq float %161, 0x7FF0000000000000\l  %163 = select i1 %162, float %154, float %158\l  %164 = tail call float @llvm.fabs.f32(float %163) #3\l  %165 = fcmp oeq float %164, 0x7FF0000000000000\l  %166 = select i1 %165, float 0.000000e+00, float %160\l  %167 = fcmp oeq float %163, 0x40562E4300000000\l  %168 = select i1 %167, float 0x3EE0000000000000, float 0.000000e+00\l  %169 = fsub float %163, %168\l  %170 = fadd float %168, %166\l  %171 = fmul float %169, 0x3FF7154760000000\l  %172 = tail call float @llvm.rint.f32(float %171)\l  %173 = fcmp ogt float %169, 0x40562E4300000000\l  %174 = fcmp olt float %169, 0xC059D1DA00000000\l  %175 = fneg float %171\l  %176 = tail call float @llvm.fma.f32(float %169, float 0x3FF7154760000000,\l... float %175)\l  %177 = tail call float @llvm.fma.f32(float %169, float 0x3E54AE0BE0000000,\l... float %176)\l  %178 = fsub float %171, %172\l  %179 = fadd float %177, %178\l  %180 = tail call float @llvm.exp2.f32(float %179)\l  %181 = fptosi float %172 to i32\l  %182 = tail call float @llvm.amdgcn.ldexp.f32(float %180, i32 %181)\l  %183 = select i1 %174, float 0.000000e+00, float %182\l  %184 = select i1 %173, float 0x7FF0000000000000, float %183\l  %185 = tail call float @llvm.fma.f32(float %184, float %170, float %184)\l  %186 = tail call float @llvm.fabs.f32(float %184) #3\l  %187 = fcmp oeq float %186, 0x7FF0000000000000\l  %188 = select i1 %187, float %184, float %185\l  %189 = tail call float @llvm.fabs.f32(float %188)\l  %190 = fcmp oeq float %46, 0x7FF0000000000000\l  %191 = fcmp oeq float %45, 0.000000e+00\l  %192 = select i1 %190, float 0x7FF0000000000000, float %189\l  %193 = select i1 %191, float 0.000000e+00, float %192\l  %194 = fcmp uno float %45, 0.000000e+00\l  %195 = select i1 %194, float 0x7FF8000000000000, float %193\l  %196 = fcmp oeq float %45, 1.000000e+00\l  %197 = select i1 %196, float 1.000000e+00, float %195\l  %198 = fadd contract float %39, %197\l  %199 = add nuw nsw i32 %38, 1\l  %200 = icmp eq i32 %199, %4\l  br i1 %200, label %201, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5e88530:s0 -> Node0x5e88360;
	Node0x5e88530:s1 -> Node0x5e88530;
	Node0x5e88360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%201:\l201:                                              \l  %202 = phi float [ 0.000000e+00, %28 ], [ %198, %37 ]\l  %203 = fcmp olt float %202, 0x39F0000000000000\l  %204 = select i1 %203, float 0x41F0000000000000, float 1.000000e+00\l  %205 = fmul float %202, %204\l  %206 = tail call float @llvm.sqrt.f32(float %205)\l  %207 = bitcast float %206 to i32\l  %208 = add nsw i32 %207, -1\l  %209 = bitcast i32 %208 to float\l  %210 = add nsw i32 %207, 1\l  %211 = bitcast i32 %210 to float\l  %212 = tail call i1 @llvm.amdgcn.class.f32(float %205, i32 608)\l  %213 = select i1 %203, float 0x3EF0000000000000, float 1.000000e+00\l  %214 = fneg float %211\l  %215 = tail call float @llvm.fma.f32(float %214, float %206, float %205)\l  %216 = fcmp ogt float %215, 0.000000e+00\l  %217 = fneg float %209\l  %218 = tail call float @llvm.fma.f32(float %217, float %206, float %205)\l  %219 = fcmp ole float %218, 0.000000e+00\l  %220 = select i1 %219, float %209, float %206\l  %221 = select i1 %216, float %211, float %220\l  %222 = fmul float %213, %221\l  %223 = select i1 %212, float %205, float %222\l  %224 = fcmp contract oeq float %223, 0.000000e+00\l  %225 = select i1 %224, float 1.000000e+00, float %223\l  br i1 %34, label %226, label %273\l|{<s0>T|<s1>F}}"];
	Node0x5e88360:s0 -> Node0x5e93230;
	Node0x5e88360:s1 -> Node0x5e87d80;
	Node0x5e93230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%226:\l226:                                              \l  %227 = mul nsw i32 %31, %4\l  %228 = and i32 %4, 1\l  %229 = icmp eq i32 %4, 1\l  br i1 %229, label %259, label %230\l|{<s0>T|<s1>F}}"];
	Node0x5e93230:s0 -> Node0x5e93520;
	Node0x5e93230:s1 -> Node0x5e93570;
	Node0x5e93570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%230:\l230:                                              \l  %231 = and i32 %4, -2\l  br label %232\l}"];
	Node0x5e93570 -> Node0x5e93740;
	Node0x5e93740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%232:\l232:                                              \l  %233 = phi i32 [ 0, %230 ], [ %256, %232 ]\l  %234 = phi i32 [ 0, %230 ], [ %257, %232 ]\l  %235 = add i32 %233, %227\l  %236 = mul i32 %235, %5\l  %237 = add nsw i32 %236, %33\l  %238 = sext i32 %237 to i64\l  %239 = getelementptr inbounds float, float addrspace(1)* %1, i64 %238\l  %240 = load float, float addrspace(1)* %239, align 4, !tbaa !16\l  %241 = fdiv contract float %240, %225\l  store float %241, float addrspace(1)* %239, align 4, !tbaa !16\l  %242 = fsub contract float 1.000000e+00, %241\l  %243 = fdiv contract float %242, %225\l  %244 = getelementptr inbounds float, float addrspace(1)* %2, i64 %238\l  store float %243, float addrspace(1)* %244, align 4, !tbaa !16\l  %245 = or i32 %233, 1\l  %246 = add i32 %245, %227\l  %247 = mul i32 %246, %5\l  %248 = add nsw i32 %247, %33\l  %249 = sext i32 %248 to i64\l  %250 = getelementptr inbounds float, float addrspace(1)* %1, i64 %249\l  %251 = load float, float addrspace(1)* %250, align 4, !tbaa !16\l  %252 = fdiv contract float %251, %225\l  store float %252, float addrspace(1)* %250, align 4, !tbaa !16\l  %253 = fsub contract float 1.000000e+00, %252\l  %254 = fdiv contract float %253, %225\l  %255 = getelementptr inbounds float, float addrspace(1)* %2, i64 %249\l  store float %254, float addrspace(1)* %255, align 4, !tbaa !16\l  %256 = add nuw nsw i32 %233, 2\l  %257 = add i32 %234, 2\l  %258 = icmp eq i32 %257, %231\l  br i1 %258, label %259, label %232, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5e93740:s0 -> Node0x5e93520;
	Node0x5e93740:s1 -> Node0x5e93740;
	Node0x5e93520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%259:\l259:                                              \l  %260 = phi i32 [ 0, %226 ], [ %256, %232 ]\l  %261 = icmp eq i32 %228, 0\l  br i1 %261, label %273, label %262\l|{<s0>T|<s1>F}}"];
	Node0x5e93520:s0 -> Node0x5e87d80;
	Node0x5e93520:s1 -> Node0x5e8ea20;
	Node0x5e8ea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%262:\l262:                                              \l  %263 = add i32 %260, %227\l  %264 = mul i32 %263, %5\l  %265 = add nsw i32 %264, %33\l  %266 = sext i32 %265 to i64\l  %267 = getelementptr inbounds float, float addrspace(1)* %1, i64 %266\l  %268 = load float, float addrspace(1)* %267, align 4, !tbaa !16\l  %269 = fdiv contract float %268, %225\l  store float %269, float addrspace(1)* %267, align 4, !tbaa !16\l  %270 = fsub contract float 1.000000e+00, %269\l  %271 = fdiv contract float %270, %225\l  %272 = getelementptr inbounds float, float addrspace(1)* %2, i64 %266\l  store float %271, float addrspace(1)* %272, align 4, !tbaa !16\l  br label %273\l}"];
	Node0x5e8ea20 -> Node0x5e87d80;
	Node0x5e87d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%273:\l273:                                              \l  ret void\l}"];
}
