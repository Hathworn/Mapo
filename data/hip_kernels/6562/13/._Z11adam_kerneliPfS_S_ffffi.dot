digraph "CFG for '_Z11adam_kerneliPfS_S_ffffi' function" {
	label="CFG for '_Z11adam_kerneliPfS_S_ffffi' function";

	Node0x4a3d9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !4\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %10\l  %27 = mul i32 %26, %19\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %29, %0\l  br i1 %30, label %31, label %453\l|{<s0>T|<s1>F}}"];
	Node0x4a3d9d0:s0 -> Node0x4a40d70;
	Node0x4a3d9d0:s1 -> Node0x4a40e00;
	Node0x4a40d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %35 = sitofp i32 %8 to float\l  %36 = tail call float @llvm.fabs.f32(float %4)\l  %37 = tail call float @llvm.amdgcn.frexp.mant.f32(float %36)\l  %38 = fcmp olt float %37, 0x3FE5555560000000\l  %39 = zext i1 %38 to i32\l  %40 = tail call float @llvm.amdgcn.ldexp.f32(float %37, i32 %39)\l  %41 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %36)\l  %42 = sub nsw i32 %41, %39\l  %43 = fadd float %40, -1.000000e+00\l  %44 = fadd float %40, 1.000000e+00\l  %45 = fadd float %44, -1.000000e+00\l  %46 = fsub float %40, %45\l  %47 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %48 = fmul float %43, %47\l  %49 = fmul float %44, %48\l  %50 = fneg float %49\l  %51 = tail call float @llvm.fma.f32(float %48, float %44, float %50)\l  %52 = tail call float @llvm.fma.f32(float %48, float %46, float %51)\l  %53 = fadd float %49, %52\l  %54 = fsub float %53, %49\l  %55 = fsub float %52, %54\l  %56 = fsub float %43, %53\l  %57 = fsub float %43, %56\l  %58 = fsub float %57, %53\l  %59 = fsub float %58, %55\l  %60 = fadd float %56, %59\l  %61 = fmul float %47, %60\l  %62 = fadd float %48, %61\l  %63 = fsub float %62, %48\l  %64 = fsub float %61, %63\l  %65 = fmul float %62, %62\l  %66 = fneg float %65\l  %67 = tail call float @llvm.fma.f32(float %62, float %62, float %66)\l  %68 = fmul float %64, 2.000000e+00\l  %69 = tail call float @llvm.fma.f32(float %62, float %68, float %67)\l  %70 = fadd float %65, %69\l  %71 = fsub float %70, %65\l  %72 = fsub float %69, %71\l  %73 = tail call float @llvm.fmuladd.f32(float %70, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %70, float %73, float\l... 0x3FD999BDE0000000)\l  %75 = sitofp i32 %42 to float\l  %76 = fmul float %75, 0x3FE62E4300000000\l  %77 = fneg float %76\l  %78 = tail call float @llvm.fma.f32(float %75, float 0x3FE62E4300000000,\l... float %77)\l  %79 = tail call float @llvm.fma.f32(float %75, float 0xBE205C6100000000,\l... float %78)\l  %80 = fadd float %76, %79\l  %81 = fsub float %80, %76\l  %82 = fsub float %79, %81\l  %83 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %84 = fmul float %62, %70\l  %85 = fneg float %84\l  %86 = tail call float @llvm.fma.f32(float %70, float %62, float %85)\l  %87 = tail call float @llvm.fma.f32(float %70, float %64, float %86)\l  %88 = tail call float @llvm.fma.f32(float %72, float %62, float %87)\l  %89 = fadd float %84, %88\l  %90 = fsub float %89, %84\l  %91 = fsub float %88, %90\l  %92 = fmul float %70, %74\l  %93 = fneg float %92\l  %94 = tail call float @llvm.fma.f32(float %70, float %74, float %93)\l  %95 = tail call float @llvm.fma.f32(float %72, float %74, float %94)\l  %96 = fadd float %92, %95\l  %97 = fsub float %96, %92\l  %98 = fsub float %95, %97\l  %99 = fadd float %96, 0x3FE5555540000000\l  %100 = fadd float %99, 0xBFE5555540000000\l  %101 = fsub float %96, %100\l  %102 = fadd float %98, 0x3E2E720200000000\l  %103 = fadd float %102, %101\l  %104 = fadd float %99, %103\l  %105 = fsub float %104, %99\l  %106 = fsub float %103, %105\l  %107 = fmul float %89, %104\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %89, float %104, float %108)\l  %110 = tail call float @llvm.fma.f32(float %89, float %106, float %109)\l  %111 = tail call float @llvm.fma.f32(float %91, float %104, float %110)\l  %112 = tail call float @llvm.amdgcn.ldexp.f32(float %64, i32 1)\l  %113 = fadd float %107, %111\l  %114 = fsub float %113, %107\l  %115 = fsub float %111, %114\l  %116 = fadd float %83, %113\l  %117 = fsub float %116, %83\l  %118 = fsub float %113, %117\l  %119 = fadd float %112, %115\l  %120 = fadd float %119, %118\l  %121 = fadd float %116, %120\l  %122 = fsub float %121, %116\l  %123 = fsub float %120, %122\l  %124 = fadd float %80, %121\l  %125 = fsub float %124, %80\l  %126 = fsub float %124, %125\l  %127 = fsub float %80, %126\l  %128 = fsub float %121, %125\l  %129 = fadd float %128, %127\l  %130 = fadd float %82, %123\l  %131 = fsub float %130, %82\l  %132 = fsub float %130, %131\l  %133 = fsub float %82, %132\l  %134 = fsub float %123, %131\l  %135 = fadd float %134, %133\l  %136 = fadd float %130, %129\l  %137 = fadd float %124, %136\l  %138 = fsub float %137, %124\l  %139 = fsub float %136, %138\l  %140 = fadd float %135, %139\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = fmul float %141, %35\l  %145 = fneg float %144\l  %146 = tail call float @llvm.fma.f32(float %35, float %141, float %145)\l  %147 = tail call float @llvm.fma.f32(float %35, float %143, float %146)\l  %148 = fadd float %144, %147\l  %149 = tail call float @llvm.fabs.f32(float %144) #3\l  %150 = fcmp oeq float %149, 0x7FF0000000000000\l  %151 = select i1 %150, float %144, float %148\l  %152 = fcmp oeq float %151, 0x40562E4300000000\l  %153 = select i1 %152, float 0x3EE0000000000000, float 0.000000e+00\l  %154 = fsub float %151, %153\l  %155 = fmul float %154, 0x3FF7154760000000\l  %156 = tail call float @llvm.rint.f32(float %155)\l  %157 = fcmp ogt float %154, 0x40562E4300000000\l  %158 = fcmp olt float %154, 0xC059D1DA00000000\l  %159 = fneg float %155\l  %160 = tail call float @llvm.fma.f32(float %154, float 0x3FF7154760000000,\l... float %159)\l  %161 = tail call float @llvm.fma.f32(float %154, float 0x3E54AE0BE0000000,\l... float %160)\l  %162 = fsub float %155, %156\l  %163 = fadd float %161, %162\l  %164 = tail call float @llvm.exp2.f32(float %163)\l  %165 = fptosi float %156 to i32\l  %166 = tail call float @llvm.amdgcn.ldexp.f32(float %164, i32 %165)\l  %167 = select i1 %158, float 0.000000e+00, float %166\l  %168 = select i1 %157, float 0x7FF0000000000000, float %167\l  %169 = tail call float @llvm.fabs.f32(float %35)\l  %170 = tail call float @llvm.trunc.f32(float %169)\l  %171 = fcmp oeq float %169, %170\l  %172 = zext i1 %171 to i32\l  %173 = fmul float %170, 5.000000e-01\l  %174 = tail call float @llvm.amdgcn.fract.f32(float %173)\l  %175 = tail call i1 @llvm.amdgcn.class.f32(float %173, i32 516)\l  %176 = select i1 %175, float 0.000000e+00, float %174\l  %177 = fcmp oeq float %176, 0.000000e+00\l  %178 = and i1 %171, %177\l  %179 = zext i1 %178 to i32\l  %180 = add nuw nsw i32 %179, %172\l  %181 = icmp eq i32 %180, 1\l  %182 = icmp ne i32 %180, 0\l  %183 = fcmp oeq float %169, 0x7FF0000000000000\l  br i1 %183, label %184, label %218\l|{<s0>T|<s1>F}}"];
	Node0x4a40d70:s0 -> Node0x4a4a330;
	Node0x4a40d70:s1 -> Node0x4a4a3c0;
	Node0x4a4a330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%184:\l184:                                              \l  %185 = fcmp oeq float %36, 1.000000e+00\l  %186 = fadd float %36, -1.000000e+00\l  %187 = bitcast float %35 to i32\l  %188 = bitcast float %186 to i32\l  %189 = xor i32 %187, %188\l  %190 = icmp sgt i32 %189, -1\l  %191 = select i1 %190, float 0x7FF0000000000000, float 0.000000e+00\l  %192 = select i1 %185, float %36, float %191\l  %193 = fcmp oeq float %36, 0x7FF0000000000000\l  %194 = fcmp oeq float %4, 0.000000e+00\l  %195 = or i1 %194, %193\l  %196 = icmp slt i32 %8, 0\l  %197 = xor i1 %194, %196\l  %198 = select i1 %197, float 0.000000e+00, float 0x7FF0000000000000\l  %199 = select i1 %181, float %4, float 0.000000e+00\l  %200 = tail call float @llvm.copysign.f32(float %198, float %199)\l  %201 = select i1 %195, float %200, float %192\l  %202 = fcmp uno float %4, 0.000000e+00\l  %203 = fcmp oeq float %4, 1.000000e+00\l  %204 = icmp eq i32 %8, 0\l  %205 = or i1 %203, %204\l  %206 = fsub contract float 1.000000e+00, %201\l  %207 = select i1 %202, float 0x7FF8000000000000, float %206\l  %208 = select i1 %205, float 0.000000e+00, float %207\l  %209 = tail call float @llvm.fabs.f32(float %5)\l  %210 = fcmp oeq float %209, 1.000000e+00\l  %211 = fadd float %209, -1.000000e+00\l  %212 = bitcast float %35 to i32\l  %213 = bitcast float %211 to i32\l  %214 = xor i32 %212, %213\l  %215 = icmp sgt i32 %214, -1\l  %216 = select i1 %215, float 0x7FF0000000000000, float 0.000000e+00\l  %217 = select i1 %210, float %209, float %216\l  br label %402\l}"];
	Node0x4a4a330 -> Node0x4a4bae0;
	Node0x4a4a3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%218:\l218:                                              \l  %219 = fcmp uge float %4, 0.000000e+00\l  %220 = select i1 %219, i1 true, i1 %182\l  %221 = tail call float @llvm.fabs.f32(float %168) #3\l  %222 = fcmp oeq float %221, 0x7FF0000000000000\l  %223 = tail call float @llvm.fabs.f32(float %151) #3\l  %224 = fcmp oeq float %223, 0x7FF0000000000000\l  %225 = fsub float %148, %144\l  %226 = fsub float %147, %225\l  %227 = select i1 %224, float 0.000000e+00, float %226\l  %228 = fadd float %153, %227\l  %229 = tail call float @llvm.fma.f32(float %168, float %228, float %168)\l  %230 = select i1 %222, float %168, float %229\l  %231 = fcmp olt float %4, 0.000000e+00\l  %232 = and i1 %231, %181\l  %233 = select i1 %232, float -0.000000e+00, float 0.000000e+00\l  %234 = tail call float @llvm.copysign.f32(float %230, float %233)\l  %235 = select i1 %220, float %234, float 0x7FF8000000000000\l  %236 = fcmp oeq float %36, 0x7FF0000000000000\l  %237 = fcmp oeq float %4, 0.000000e+00\l  %238 = or i1 %237, %236\l  %239 = icmp slt i32 %8, 0\l  %240 = xor i1 %237, %239\l  %241 = select i1 %240, float 0.000000e+00, float 0x7FF0000000000000\l  %242 = select i1 %181, float %4, float 0.000000e+00\l  %243 = tail call float @llvm.copysign.f32(float %241, float %242)\l  %244 = select i1 %238, float %243, float %235\l  %245 = fcmp uno float %4, 0.000000e+00\l  %246 = fcmp oeq float %4, 1.000000e+00\l  %247 = icmp eq i32 %8, 0\l  %248 = or i1 %246, %247\l  %249 = fsub contract float 1.000000e+00, %244\l  %250 = select i1 %245, float 0x7FF8000000000000, float %249\l  %251 = select i1 %248, float 0.000000e+00, float %250\l  %252 = tail call float @llvm.fabs.f32(float %5)\l  %253 = tail call float @llvm.amdgcn.frexp.mant.f32(float %252)\l  %254 = fcmp olt float %253, 0x3FE5555560000000\l  %255 = zext i1 %254 to i32\l  %256 = tail call float @llvm.amdgcn.ldexp.f32(float %253, i32 %255)\l  %257 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %252)\l  %258 = sub nsw i32 %257, %255\l  %259 = fadd float %256, -1.000000e+00\l  %260 = fadd float %256, 1.000000e+00\l  %261 = fadd float %260, -1.000000e+00\l  %262 = fsub float %256, %261\l  %263 = tail call float @llvm.amdgcn.rcp.f32(float %260)\l  %264 = fmul float %259, %263\l  %265 = fmul float %260, %264\l  %266 = fneg float %265\l  %267 = tail call float @llvm.fma.f32(float %264, float %260, float %266)\l  %268 = tail call float @llvm.fma.f32(float %264, float %262, float %267)\l  %269 = fadd float %265, %268\l  %270 = fsub float %269, %265\l  %271 = fsub float %268, %270\l  %272 = fsub float %259, %269\l  %273 = fsub float %259, %272\l  %274 = fsub float %273, %269\l  %275 = fsub float %274, %271\l  %276 = fadd float %272, %275\l  %277 = fmul float %263, %276\l  %278 = fadd float %264, %277\l  %279 = fsub float %278, %264\l  %280 = fsub float %277, %279\l  %281 = fmul float %278, %278\l  %282 = fneg float %281\l  %283 = tail call float @llvm.fma.f32(float %278, float %278, float %282)\l  %284 = fmul float %280, 2.000000e+00\l  %285 = tail call float @llvm.fma.f32(float %278, float %284, float %283)\l  %286 = fadd float %281, %285\l  %287 = fsub float %286, %281\l  %288 = fsub float %285, %287\l  %289 = tail call float @llvm.fmuladd.f32(float %286, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %290 = tail call float @llvm.fmuladd.f32(float %286, float %289, float\l... 0x3FD999BDE0000000)\l  %291 = sitofp i32 %258 to float\l  %292 = fmul float %291, 0x3FE62E4300000000\l  %293 = fneg float %292\l  %294 = tail call float @llvm.fma.f32(float %291, float 0x3FE62E4300000000,\l... float %293)\l  %295 = tail call float @llvm.fma.f32(float %291, float 0xBE205C6100000000,\l... float %294)\l  %296 = fadd float %292, %295\l  %297 = fsub float %296, %292\l  %298 = fsub float %295, %297\l  %299 = tail call float @llvm.amdgcn.ldexp.f32(float %278, i32 1)\l  %300 = fmul float %278, %286\l  %301 = fneg float %300\l  %302 = tail call float @llvm.fma.f32(float %286, float %278, float %301)\l  %303 = tail call float @llvm.fma.f32(float %286, float %280, float %302)\l  %304 = tail call float @llvm.fma.f32(float %288, float %278, float %303)\l  %305 = fadd float %300, %304\l  %306 = fsub float %305, %300\l  %307 = fsub float %304, %306\l  %308 = fmul float %286, %290\l  %309 = fneg float %308\l  %310 = tail call float @llvm.fma.f32(float %286, float %290, float %309)\l  %311 = tail call float @llvm.fma.f32(float %288, float %290, float %310)\l  %312 = fadd float %308, %311\l  %313 = fsub float %312, %308\l  %314 = fsub float %311, %313\l  %315 = fadd float %312, 0x3FE5555540000000\l  %316 = fadd float %315, 0xBFE5555540000000\l  %317 = fsub float %312, %316\l  %318 = fadd float %314, 0x3E2E720200000000\l  %319 = fadd float %318, %317\l  %320 = fadd float %315, %319\l  %321 = fsub float %320, %315\l  %322 = fsub float %319, %321\l  %323 = fmul float %305, %320\l  %324 = fneg float %323\l  %325 = tail call float @llvm.fma.f32(float %305, float %320, float %324)\l  %326 = tail call float @llvm.fma.f32(float %305, float %322, float %325)\l  %327 = tail call float @llvm.fma.f32(float %307, float %320, float %326)\l  %328 = tail call float @llvm.amdgcn.ldexp.f32(float %280, i32 1)\l  %329 = fadd float %323, %327\l  %330 = fsub float %329, %323\l  %331 = fsub float %327, %330\l  %332 = fadd float %299, %329\l  %333 = fsub float %332, %299\l  %334 = fsub float %329, %333\l  %335 = fadd float %328, %331\l  %336 = fadd float %335, %334\l  %337 = fadd float %332, %336\l  %338 = fsub float %337, %332\l  %339 = fsub float %336, %338\l  %340 = fadd float %296, %337\l  %341 = fsub float %340, %296\l  %342 = fsub float %340, %341\l  %343 = fsub float %296, %342\l  %344 = fsub float %337, %341\l  %345 = fadd float %344, %343\l  %346 = fadd float %298, %339\l  %347 = fsub float %346, %298\l  %348 = fsub float %346, %347\l  %349 = fsub float %298, %348\l  %350 = fsub float %339, %347\l  %351 = fadd float %350, %349\l  %352 = fadd float %346, %345\l  %353 = fadd float %340, %352\l  %354 = fsub float %353, %340\l  %355 = fsub float %352, %354\l  %356 = fadd float %351, %355\l  %357 = fadd float %353, %356\l  %358 = fsub float %357, %353\l  %359 = fsub float %356, %358\l  %360 = fmul float %357, %35\l  %361 = fneg float %360\l  %362 = tail call float @llvm.fma.f32(float %35, float %357, float %361)\l  %363 = tail call float @llvm.fma.f32(float %35, float %359, float %362)\l  %364 = fadd float %360, %363\l  %365 = fsub float %364, %360\l  %366 = fsub float %363, %365\l  %367 = tail call float @llvm.fabs.f32(float %360) #3\l  %368 = fcmp oeq float %367, 0x7FF0000000000000\l  %369 = select i1 %368, float %360, float %364\l  %370 = tail call float @llvm.fabs.f32(float %369) #3\l  %371 = fcmp oeq float %370, 0x7FF0000000000000\l  %372 = select i1 %371, float 0.000000e+00, float %366\l  %373 = fcmp oeq float %369, 0x40562E4300000000\l  %374 = select i1 %373, float 0x3EE0000000000000, float 0.000000e+00\l  %375 = fsub float %369, %374\l  %376 = fadd float %374, %372\l  %377 = fmul float %375, 0x3FF7154760000000\l  %378 = tail call float @llvm.rint.f32(float %377)\l  %379 = fcmp ogt float %375, 0x40562E4300000000\l  %380 = fcmp olt float %375, 0xC059D1DA00000000\l  %381 = fneg float %377\l  %382 = tail call float @llvm.fma.f32(float %375, float 0x3FF7154760000000,\l... float %381)\l  %383 = tail call float @llvm.fma.f32(float %375, float 0x3E54AE0BE0000000,\l... float %382)\l  %384 = fsub float %377, %378\l  %385 = fadd float %383, %384\l  %386 = tail call float @llvm.exp2.f32(float %385)\l  %387 = fptosi float %378 to i32\l  %388 = tail call float @llvm.amdgcn.ldexp.f32(float %386, i32 %387)\l  %389 = select i1 %380, float 0.000000e+00, float %388\l  %390 = select i1 %379, float 0x7FF0000000000000, float %389\l  %391 = tail call float @llvm.fma.f32(float %390, float %376, float %390)\l  %392 = tail call float @llvm.fabs.f32(float %390) #3\l  %393 = fcmp oeq float %392, 0x7FF0000000000000\l  %394 = select i1 %393, float %390, float %391\l  %395 = fcmp olt float %5, 0.000000e+00\l  %396 = and i1 %395, %181\l  %397 = select i1 %396, float -0.000000e+00, float 0.000000e+00\l  %398 = tail call float @llvm.copysign.f32(float %394, float %397)\l  %399 = fcmp uge float %5, 0.000000e+00\l  %400 = select i1 %399, i1 true, i1 %182\l  %401 = select i1 %400, float %398, float 0x7FF8000000000000\l  br label %402\l}"];
	Node0x4a4a3c0 -> Node0x4a4bae0;
	Node0x4a4bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%402:\l402:                                              \l  %403 = phi float [ %252, %218 ], [ %209, %184 ]\l  %404 = phi float [ %251, %218 ], [ %208, %184 ]\l  %405 = phi i1 [ %247, %218 ], [ %204, %184 ]\l  %406 = phi i1 [ %239, %218 ], [ %196, %184 ]\l  %407 = phi float [ %401, %218 ], [ %217, %184 ]\l  %408 = fdiv contract float %34, %404\l  %409 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %410 = load float, float addrspace(1)* %409, align 4, !tbaa !16\l  %411 = fcmp oeq float %403, 0x7FF0000000000000\l  %412 = fcmp oeq float %5, 0.000000e+00\l  %413 = or i1 %412, %411\l  %414 = xor i1 %412, %406\l  %415 = select i1 %414, float 0.000000e+00, float 0x7FF0000000000000\l  %416 = select i1 %181, float %5, float 0.000000e+00\l  %417 = tail call float @llvm.copysign.f32(float %415, float %416)\l  %418 = select i1 %413, float %417, float %407\l  %419 = fcmp uno float %5, 0.000000e+00\l  %420 = fcmp oeq float %5, 1.000000e+00\l  %421 = or i1 %420, %405\l  %422 = fsub contract float 1.000000e+00, %418\l  %423 = select i1 %419, float 0x7FF8000000000000, float %422\l  %424 = select i1 %421, float 0.000000e+00, float %423\l  %425 = fdiv contract float %410, %424\l  %426 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %427 = load float, float addrspace(1)* %426, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %428 = fmul contract float %408, %6\l  %429 = fcmp olt float %425, 0x39F0000000000000\l  %430 = select i1 %429, float 0x41F0000000000000, float 1.000000e+00\l  %431 = fmul float %425, %430\l  %432 = tail call float @llvm.sqrt.f32(float %431)\l  %433 = bitcast float %432 to i32\l  %434 = add nsw i32 %433, -1\l  %435 = bitcast i32 %434 to float\l  %436 = add nsw i32 %433, 1\l  %437 = bitcast i32 %436 to float\l  %438 = tail call i1 @llvm.amdgcn.class.f32(float %431, i32 608)\l  %439 = select i1 %429, float 0x3EF0000000000000, float 1.000000e+00\l  %440 = fneg float %437\l  %441 = tail call float @llvm.fma.f32(float %440, float %432, float %431)\l  %442 = fcmp ogt float %441, 0.000000e+00\l  %443 = fneg float %435\l  %444 = tail call float @llvm.fma.f32(float %443, float %432, float %431)\l  %445 = fcmp ole float %444, 0.000000e+00\l  %446 = select i1 %445, float %435, float %432\l  %447 = select i1 %442, float %437, float %446\l  %448 = fmul float %439, %447\l  %449 = select i1 %438, float %431, float %448\l  %450 = fadd contract float %449, %7\l  %451 = fdiv contract float %428, %450\l  %452 = fadd contract float %427, %451\l  store float %452, float addrspace(1)* %426, align 4, !tbaa !16\l  br label %453\l}"];
	Node0x4a4bae0 -> Node0x4a40e00;
	Node0x4a40e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%453:\l453:                                              \l  ret void\l}"];
}
