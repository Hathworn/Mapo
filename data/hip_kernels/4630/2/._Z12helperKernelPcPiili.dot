digraph "CFG for '_Z12helperKernelPcPiili' function" {
	label="CFG for '_Z12helperKernelPcPiili' function";

	Node0x48e07e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = sub nsw i32 %2, %4\l  %19 = icmp slt i32 %17, %18\l  br i1 %19, label %20, label %28\l|{<s0>T|<s1>F}}"];
	Node0x48e07e0:s0 -> Node0x48e2aa0;
	Node0x48e07e0:s1 -> Node0x48e2b30;
	Node0x48e2aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%20:\l20:                                               \l  %21 = udiv i32 %14, %11\l  %22 = mul i32 %21, %11\l  %23 = icmp ugt i32 %14, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %11\l  %27 = icmp sgt i32 %4, 1\l  br label %29\l}"];
	Node0x48e2aa0 -> Node0x48e3040;
	Node0x48e2b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x48e3040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = phi i32 [ %17, %20 ], [ %126, %118 ]\l  %31 = add nsw i32 %30, %4\l  %32 = sext i32 %30 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %32\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !16\l  %35 = sext i32 %31 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !16\l  %38 = icmp eq i8 %34, %37\l  br i1 %38, label %39, label %96\l|{<s0>T|<s1>F}}"];
	Node0x48e3040:s0 -> Node0x48e3f20;
	Node0x48e3040:s1 -> Node0x48e3fb0;
	Node0x48e3f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%39:\l39:                                               \l  %40 = add nsw i32 %30, 1\l  %41 = mul nsw i32 %40, %2\l  %42 = add nsw i32 %31, -1\l  %43 = add nsw i32 %41, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !19\l  %47 = shl nsw i32 %46, 1\l  %48 = mul nsw i32 %30, %2\l  %49 = add nsw i32 %48, %31\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  store i32 %47, i32 addrspace(1)* %51, align 4, !tbaa !19\l  br i1 %27, label %52, label %63\l|{<s0>T|<s1>F}}"];
	Node0x48e3f20:s0 -> Node0x48e4f40;
	Node0x48e3f20:s1 -> Node0x48e4fd0;
	Node0x48e4f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%52:\l52:                                               \l  %53 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !16\l  br label %54\l}"];
	Node0x48e4f40 -> Node0x48e5180;
	Node0x48e5180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %40, %52 ], [ %61, %60 ]\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %56\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !16\l  %59 = icmp eq i8 %58, %53\l  br i1 %59, label %63, label %60\l|{<s0>T|<s1>F}}"];
	Node0x48e5180:s0 -> Node0x48e4fd0;
	Node0x48e5180:s1 -> Node0x48e5240;
	Node0x48e5240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = add nsw i32 %55, 1\l  %62 = icmp slt i32 %61, %31\l  br i1 %62, label %54, label %63, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x48e5240:s0 -> Node0x48e5180;
	Node0x48e5240:s1 -> Node0x48e4fd0;
	Node0x48e4fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%63:\l63:                                               \l  %64 = phi i32 [ %40, %39 ], [ %55, %54 ], [ %61, %60 ]\l  %65 = icmp slt i32 %64, %31\l  br i1 %65, label %66, label %78\l|{<s0>T|<s1>F}}"];
	Node0x48e4fd0:s0 -> Node0x48e3410;
	Node0x48e4fd0:s1 -> Node0x48e3460;
	Node0x48e3410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%66:\l66:                                               \l  %67 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !16\l  %68 = add i32 %64, -1\l  br label %69\l}"];
	Node0x48e3410 -> Node0x48e5f20;
	Node0x48e5f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %42, %66 ], [ %76, %75 ]\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %71\l  %73 = load i8, i8 addrspace(1)* %72, align 1, !tbaa !16\l  %74 = icmp ne i8 %73, %67\l  br i1 %74, label %75, label %78\l|{<s0>T|<s1>F}}"];
	Node0x48e5f20:s0 -> Node0x48e5fe0;
	Node0x48e5f20:s1 -> Node0x48e3460;
	Node0x48e5fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = add nsw i32 %70, -1\l  %77 = icmp slt i32 %64, %70\l  br i1 %77, label %69, label %78, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x48e5fe0:s0 -> Node0x48e5f20;
	Node0x48e5fe0:s1 -> Node0x48e3460;
	Node0x48e3460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%78:\l78:                                               \l  %79 = phi i32 [ %42, %63 ], [ %70, %69 ], [ %68, %75 ]\l  %80 = phi i1 [ true, %63 ], [ %74, %75 ], [ %74, %69 ]\l  %81 = icmp eq i32 %64, %79\l  br i1 %81, label %82, label %84\l|{<s0>T|<s1>F}}"];
	Node0x48e3460:s0 -> Node0x48e68a0;
	Node0x48e3460:s1 -> Node0x48e68f0;
	Node0x48e68a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%82:\l82:                                               \l  %83 = add nuw nsw i32 %47, 1\l  store i32 %83, i32 addrspace(1)* %51, align 4, !tbaa !19\l  br label %118\l}"];
	Node0x48e68a0 -> Node0x48e3180;
	Node0x48e68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%84:\l84:                                               \l  br i1 %80, label %85, label %87\l|{<s0>T|<s1>F}}"];
	Node0x48e68f0:s0 -> Node0x48e6bc0;
	Node0x48e68f0:s1 -> Node0x48e6c10;
	Node0x48e6bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%85:\l85:                                               \l  %86 = add nsw i32 %47, 2\l  store i32 %86, i32 addrspace(1)* %51, align 4, !tbaa !19\l  br label %118\l}"];
	Node0x48e6bc0 -> Node0x48e3180;
	Node0x48e6c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%87:\l87:                                               \l  %88 = add nsw i32 %64, 1\l  %89 = mul nsw i32 %88, %2\l  %90 = add nsw i32 %79, -1\l  %91 = add nsw i32 %90, %89\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !19\l  %95 = sub nsw i32 %47, %94\l  store i32 %95, i32 addrspace(1)* %51, align 4, !tbaa !19\l  br label %118\l}"];
	Node0x48e6c10 -> Node0x48e3180;
	Node0x48e3fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%96:\l96:                                               \l  %97 = mul nsw i32 %30, %2\l  %98 = add nsw i32 %31, -1\l  %99 = add nsw i32 %98, %97\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !19\l  %103 = add nsw i32 %30, 1\l  %104 = mul nsw i32 %103, %2\l  %105 = add nsw i32 %104, %31\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !19\l  %109 = add nsw i32 %108, %102\l  %110 = add nsw i32 %104, %98\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !19\l  %114 = sub i32 %109, %113\l  %115 = add nsw i32 %97, %31\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %116\l  store i32 %114, i32 addrspace(1)* %117, align 4, !tbaa !19\l  br label %118\l}"];
	Node0x48e3fb0 -> Node0x48e3180;
	Node0x48e3180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%118:\l118:                                              \l  %119 = phi i32 [ %83, %82 ], [ %95, %87 ], [ %86, %85 ], [ %114, %96 ]\l  %120 = phi i64 [ %50, %82 ], [ %50, %87 ], [ %50, %85 ], [ %116, %96 ]\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %120\l  %122 = sext i32 %119 to i64\l  %123 = add nsw i64 %122, %3\l  %124 = srem i64 %123, %3\l  %125 = trunc i64 %124 to i32\l  store i32 %125, i32 addrspace(1)* %121, align 4, !tbaa !19\l  %126 = add i32 %26, %30\l  %127 = icmp slt i32 %126, %18\l  br i1 %127, label %29, label %28, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x48e3180:s0 -> Node0x48e3040;
	Node0x48e3180:s1 -> Node0x48e2b30;
}
