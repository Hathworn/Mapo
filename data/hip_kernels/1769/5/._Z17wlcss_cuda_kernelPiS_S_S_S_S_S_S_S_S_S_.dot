digraph "CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_' function";

	Node0x4f73030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = sext i32 %13 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %18 = sext i32 %14 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %15\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %18\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !10\l  %29 = getelementptr i8, i8 addrspace(4)* %25, i64 4\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !19, !invariant.load\l... !9\l  %32 = zext i16 %31 to i32\l  %33 = udiv i32 %28, %32\l  %34 = mul i32 %33, %32\l  %35 = icmp ugt i32 %28, %34\l  %36 = zext i1 %35 to i32\l  %37 = add i32 %33, %36\l  %38 = mul i32 %37, %12\l  %39 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 16\l  %40 = bitcast i8 addrspace(4)* %39 to i32 addrspace(4)*\l  %41 = load i32, i32 addrspace(4)* %40, align 8, !tbaa !20\l  %42 = getelementptr i8, i8 addrspace(4)* %25, i64 6\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 2, !range !19, !invariant.load\l... !9\l  %45 = zext i16 %44 to i32\l  %46 = udiv i32 %41, %45\l  %47 = mul i32 %46, %45\l  %48 = icmp ugt i32 %41, %47\l  %49 = zext i1 %48 to i32\l  %50 = add i32 %46, %49\l  %51 = add i32 %38, %13\l  %52 = mul i32 %50, %51\l  %53 = add i32 %52, %14\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %54\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %59\l  %61 = sext i32 %56 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %61\l  %63 = sext i32 %22 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %63\l  %65 = sext i32 %24 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %65\l  %67 = mul nuw nsw i32 %12, 3\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %71 = add nuw nsw i32 %67, 1\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %75 = add nuw nsw i32 %67, 2\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %79 = icmp sgt i32 %20, 0\l  br i1 %79, label %80, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4f73030:s0 -> Node0x4f79830;
	Node0x4f73030:s1 -> Node0x4f798c0;
	Node0x4f79830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%80:\l80:                                               \l  %81 = icmp sgt i32 %17, 0\l  %82 = add nsw i32 %17, 1\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %83\l  %85 = sext i32 %17 to i64\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %85\l  %87 = and i32 %17, 1\l  %88 = icmp eq i32 %17, 1\l  %89 = and i32 %17, -2\l  %90 = icmp eq i32 %87, 0\l  br label %91\l}"];
	Node0x4f79830 -> Node0x4f79fb0;
	Node0x4f79fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%91:\l91:                                               \l  %92 = phi i32 [ 0, %80 ], [ %136, %132 ]\l  br i1 %81, label %96, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4f79fb0:s0 -> Node0x4f7a1e0;
	Node0x4f79fb0:s1 -> Node0x4f7a270;
	Node0x4f7a270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%93:\l93:                                               \l  %94 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %95 = zext i32 %92 to i64\l  br label %132\l}"];
	Node0x4f7a270 -> Node0x4f7a0a0;
	Node0x4f7a1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%96:\l96:                                               \l  %97 = zext i32 %92 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %66, i64 %97\l  br i1 %88, label %100, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4f7a1e0:s0 -> Node0x4f7a640;
	Node0x4f7a1e0:s1 -> Node0x4f7a690;
	Node0x4f798c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%99:\l99:                                               \l  ret void\l}"];
	Node0x4f7a640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%100:\l100:                                              \l  %101 = phi i32 [ undef, %96 ], [ %195, %193 ]\l  %102 = phi i32 [ 0, %96 ], [ %178, %193 ]\l  br i1 %90, label %132, label %103\l|{<s0>T|<s1>F}}"];
	Node0x4f7a640:s0 -> Node0x4f7a0a0;
	Node0x4f7a640:s1 -> Node0x4f7ae10;
	Node0x4f7ae10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%103:\l103:                                              \l  %104 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !5\l  %105 = zext i32 %102 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %64, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !5\l  %108 = sub nsw i32 %104, %107\l  %109 = tail call i32 @llvm.abs.i32(i32 %108, i1 true)\l  %110 = icmp sgt i32 %109, %78\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %105\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !5\l  br i1 %110, label %116, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4f7ae10:s0 -> Node0x4f7b5d0;
	Node0x4f7ae10:s1 -> Node0x4f7b660;
	Node0x4f7b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%113:\l113:                                              \l  %114 = add nsw i32 %112, %70\l  %115 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  br label %128\l}"];
	Node0x4f7b660 -> Node0x4f7b8a0;
	Node0x4f7b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%116:\l116:                                              \l  %117 = add nuw nsw i32 %102, 1\l  %118 = mul nsw i32 %109, %74\l  %119 = sub nsw i32 %112, %118\l  %120 = zext i32 %117 to i64\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %120\l  %122 = load i32, i32 addrspace(1)* %121, align 4, !tbaa !5\l  %123 = sub nsw i32 %122, %118\l  %124 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %125 = sub nsw i32 %124, %118\l  %126 = tail call i32 @llvm.smax.i32(i32 %123, i32 %125)\l  %127 = tail call i32 @llvm.smax.i32(i32 %119, i32 %126)\l  br label %128\l}"];
	Node0x4f7b5d0 -> Node0x4f7b8a0;
	Node0x4f7b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%128:\l128:                                              \l  %129 = phi i32 [ %124, %116 ], [ %115, %113 ]\l  %130 = phi i32 [ %127, %116 ], [ %114, %113 ]\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %105\l  store i32 %129, i32 addrspace(1)* %131, align 4, !tbaa !5\l  store i32 %130, i32 addrspace(1)* %84, align 4, !tbaa !5\l  br label %132\l}"];
	Node0x4f7b8a0 -> Node0x4f7a0a0;
	Node0x4f7a0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%132:\l132:                                              \l  %133 = phi i64 [ %95, %93 ], [ %97, %100 ], [ %97, %128 ]\l  %134 = phi i32 [ %94, %93 ], [ %101, %100 ], [ %130, %128 ]\l  store i32 %134, i32 addrspace(1)* %86, align 4, !tbaa !5\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %62, i64 %133\l  store i32 %134, i32 addrspace(1)* %135, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %136 = add nuw nsw i32 %92, 1\l  %137 = icmp eq i32 %136, %20\l  br i1 %137, label %99, label %91, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4f7a0a0:s0 -> Node0x4f798c0;
	Node0x4f7a0a0:s1 -> Node0x4f79fb0;
	Node0x4f7a690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi i32 [ %178, %193 ], [ 0, %96 ]\l  %140 = phi i32 [ %197, %193 ], [ 0, %96 ]\l  %141 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !5\l  %142 = zext i32 %139 to i64\l  %143 = getelementptr inbounds i32, i32 addrspace(1)* %64, i64 %142\l  %144 = load i32, i32 addrspace(1)* %143, align 4, !tbaa !5\l  %145 = sub nsw i32 %141, %144\l  %146 = tail call i32 @llvm.abs.i32(i32 %145, i1 true)\l  %147 = icmp sgt i32 %146, %78\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %142\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !5\l  %150 = or i32 %139, 1\l  br i1 %147, label %154, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4f7a690:s0 -> Node0x4f7d6c0;
	Node0x4f7a690:s1 -> Node0x4f7d750;
	Node0x4f7d750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%151:\l151:                                              \l  %152 = add nsw i32 %149, %70\l  %153 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  br label %165\l}"];
	Node0x4f7d750 -> Node0x4f7d990;
	Node0x4f7d6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%154:\l154:                                              \l  %155 = mul nsw i32 %146, %74\l  %156 = sub nsw i32 %149, %155\l  %157 = zext i32 %150 to i64\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %157\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !5\l  %160 = sub nsw i32 %159, %155\l  %161 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %162 = sub nsw i32 %161, %155\l  %163 = tail call i32 @llvm.smax.i32(i32 %160, i32 %162)\l  %164 = tail call i32 @llvm.smax.i32(i32 %156, i32 %163)\l  br label %165\l}"];
	Node0x4f7d6c0 -> Node0x4f7d990;
	Node0x4f7d990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  %166 = phi i32 [ %161, %154 ], [ %153, %151 ]\l  %167 = phi i32 [ %164, %154 ], [ %152, %151 ]\l  %168 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %142\l  store i32 %166, i32 addrspace(1)* %168, align 4, !tbaa !5\l  store i32 %167, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %169 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !5\l  %170 = zext i32 %150 to i64\l  %171 = getelementptr inbounds i32, i32 addrspace(1)* %64, i64 %170\l  %172 = load i32, i32 addrspace(1)* %171, align 4, !tbaa !5\l  %173 = sub nsw i32 %169, %172\l  %174 = tail call i32 @llvm.abs.i32(i32 %173, i1 true)\l  %175 = icmp sgt i32 %174, %78\l  %176 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %170\l  %177 = load i32, i32 addrspace(1)* %176, align 4, !tbaa !5\l  %178 = add nuw nsw i32 %139, 2\l  br i1 %175, label %182, label %179\l|{<s0>T|<s1>F}}"];
	Node0x4f7d990:s0 -> Node0x4f7e9f0;
	Node0x4f7d990:s1 -> Node0x4f7ea40;
	Node0x4f7ea40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%179:\l179:                                              \l  %180 = add nsw i32 %177, %70\l  %181 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  br label %193\l}"];
	Node0x4f7ea40 -> Node0x4f7abf0;
	Node0x4f7e9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%182:\l182:                                              \l  %183 = mul nsw i32 %174, %74\l  %184 = sub nsw i32 %177, %183\l  %185 = zext i32 %178 to i64\l  %186 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %185\l  %187 = load i32, i32 addrspace(1)* %186, align 4, !tbaa !5\l  %188 = sub nsw i32 %187, %183\l  %189 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %190 = sub nsw i32 %189, %183\l  %191 = tail call i32 @llvm.smax.i32(i32 %188, i32 %190)\l  %192 = tail call i32 @llvm.smax.i32(i32 %184, i32 %191)\l  br label %193\l}"];
	Node0x4f7e9f0 -> Node0x4f7abf0;
	Node0x4f7abf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%193:\l193:                                              \l  %194 = phi i32 [ %189, %182 ], [ %181, %179 ]\l  %195 = phi i32 [ %192, %182 ], [ %180, %179 ]\l  %196 = getelementptr inbounds i32, i32 addrspace(1)* %60, i64 %170\l  store i32 %194, i32 addrspace(1)* %196, align 4, !tbaa !5\l  store i32 %195, i32 addrspace(1)* %84, align 4, !tbaa !5\l  %197 = add i32 %140, 2\l  %198 = icmp eq i32 %197, %89\l  br i1 %198, label %100, label %138, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4f7abf0:s0 -> Node0x4f7a640;
	Node0x4f7abf0:s1 -> Node0x4f7a690;
}
