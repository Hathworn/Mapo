digraph "CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_' function";

	Node0x48779b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = zext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %17 = sext i32 %13 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %14\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %17\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !10, !invariant.load\l... !9\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %13, %28\l  %30 = add i32 %29, %12\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %31\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %36\l  %38 = sext i32 %33 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = sext i32 %21 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %40\l  %42 = sext i32 %23 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %42\l  %44 = mul nuw nsw i32 %12, 3\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %48 = add nuw nsw i32 %44, 1\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %52 = add nuw nsw i32 %44, 2\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %56 = icmp sgt i32 %19, 0\l  br i1 %56, label %57, label %76\l|{<s0>T|<s1>F}}"];
	Node0x48779b0:s0 -> Node0x487c8e0;
	Node0x48779b0:s1 -> Node0x487c970;
	Node0x487c8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%57:\l57:                                               \l  %58 = icmp sgt i32 %16, 0\l  %59 = add nsw i32 %16, 1\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %60\l  %62 = sext i32 %16 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %62\l  %64 = and i32 %16, 1\l  %65 = icmp eq i32 %16, 1\l  %66 = and i32 %16, -2\l  %67 = icmp eq i32 %64, 0\l  br label %68\l}"];
	Node0x487c8e0 -> Node0x487d290;
	Node0x487d290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%68:\l68:                                               \l  %69 = phi i32 [ 0, %57 ], [ %113, %109 ]\l  br i1 %58, label %73, label %70\l|{<s0>T|<s1>F}}"];
	Node0x487d290:s0 -> Node0x487d490;
	Node0x487d290:s1 -> Node0x487d520;
	Node0x487d520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%70:\l70:                                               \l  %71 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %72 = zext i32 %69 to i64\l  br label %109\l}"];
	Node0x487d520 -> Node0x487d350;
	Node0x487d490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%73:\l73:                                               \l  %74 = zext i32 %69 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %43, i64 %74\l  br i1 %65, label %77, label %115\l|{<s0>T|<s1>F}}"];
	Node0x487d490:s0 -> Node0x487d8f0;
	Node0x487d490:s1 -> Node0x487d940;
	Node0x487c970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%76:\l76:                                               \l  ret void\l}"];
	Node0x487d8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%77:\l77:                                               \l  %78 = phi i32 [ undef, %73 ], [ %172, %170 ]\l  %79 = phi i32 [ 0, %73 ], [ %155, %170 ]\l  br i1 %67, label %109, label %80\l|{<s0>T|<s1>F}}"];
	Node0x487d8f0:s0 -> Node0x487d350;
	Node0x487d8f0:s1 -> Node0x487e0c0;
	Node0x487e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !5\l  %82 = zext i32 %79 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %41, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !5\l  %85 = sub nsw i32 %81, %84\l  %86 = tail call i32 @llvm.abs.i32(i32 %85, i1 true)\l  %87 = icmp sgt i32 %86, %55\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %82\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !5\l  br i1 %87, label %93, label %90\l|{<s0>T|<s1>F}}"];
	Node0x487e0c0:s0 -> Node0x487e880;
	Node0x487e0c0:s1 -> Node0x487e910;
	Node0x487e910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%90:\l90:                                               \l  %91 = add nsw i32 %89, %47\l  %92 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  br label %105\l}"];
	Node0x487e910 -> Node0x487eb50;
	Node0x487e880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%93:\l93:                                               \l  %94 = add nuw nsw i32 %79, 1\l  %95 = mul nsw i32 %86, %51\l  %96 = sub nsw i32 %89, %95\l  %97 = zext i32 %94 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !5\l  %100 = sub nsw i32 %99, %95\l  %101 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %102 = sub nsw i32 %101, %95\l  %103 = tail call i32 @llvm.smax.i32(i32 %100, i32 %102)\l  %104 = tail call i32 @llvm.smax.i32(i32 %96, i32 %103)\l  br label %105\l}"];
	Node0x487e880 -> Node0x487eb50;
	Node0x487eb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%105:\l105:                                              \l  %106 = phi i32 [ %101, %93 ], [ %92, %90 ]\l  %107 = phi i32 [ %104, %93 ], [ %91, %90 ]\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %82\l  store i32 %106, i32 addrspace(1)* %108, align 4, !tbaa !5\l  store i32 %107, i32 addrspace(1)* %61, align 4, !tbaa !5\l  br label %109\l}"];
	Node0x487eb50 -> Node0x487d350;
	Node0x487d350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%109:\l109:                                              \l  %110 = phi i64 [ %72, %70 ], [ %74, %77 ], [ %74, %105 ]\l  %111 = phi i32 [ %71, %70 ], [ %78, %77 ], [ %107, %105 ]\l  store i32 %111, i32 addrspace(1)* %63, align 4, !tbaa !5\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %110\l  store i32 %111, i32 addrspace(1)* %112, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %113 = add nuw nsw i32 %69, 1\l  %114 = icmp eq i32 %113, %19\l  br i1 %114, label %76, label %68, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x487d350:s0 -> Node0x487c970;
	Node0x487d350:s1 -> Node0x487d290;
	Node0x487d940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi i32 [ %155, %170 ], [ 0, %73 ]\l  %117 = phi i32 [ %174, %170 ], [ 0, %73 ]\l  %118 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !5\l  %119 = zext i32 %116 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %41, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !5\l  %122 = sub nsw i32 %118, %121\l  %123 = tail call i32 @llvm.abs.i32(i32 %122, i1 true)\l  %124 = icmp sgt i32 %123, %55\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %119\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !5\l  %127 = or i32 %116, 1\l  br i1 %124, label %131, label %128\l|{<s0>T|<s1>F}}"];
	Node0x487d940:s0 -> Node0x4880540;
	Node0x487d940:s1 -> Node0x48805d0;
	Node0x48805d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%128:\l128:                                              \l  %129 = add nsw i32 %126, %47\l  %130 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  br label %142\l}"];
	Node0x48805d0 -> Node0x487cf80;
	Node0x4880540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%131:\l131:                                              \l  %132 = mul nsw i32 %123, %51\l  %133 = sub nsw i32 %126, %132\l  %134 = zext i32 %127 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %134\l  %136 = load i32, i32 addrspace(1)* %135, align 4, !tbaa !5\l  %137 = sub nsw i32 %136, %132\l  %138 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %139 = sub nsw i32 %138, %132\l  %140 = tail call i32 @llvm.smax.i32(i32 %137, i32 %139)\l  %141 = tail call i32 @llvm.smax.i32(i32 %133, i32 %140)\l  br label %142\l}"];
	Node0x4880540 -> Node0x487cf80;
	Node0x487cf80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %138, %131 ], [ %130, %128 ]\l  %144 = phi i32 [ %141, %131 ], [ %129, %128 ]\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %119\l  store i32 %143, i32 addrspace(1)* %145, align 4, !tbaa !5\l  store i32 %144, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %146 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !5\l  %147 = zext i32 %127 to i64\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %41, i64 %147\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !5\l  %150 = sub nsw i32 %146, %149\l  %151 = tail call i32 @llvm.abs.i32(i32 %150, i1 true)\l  %152 = icmp sgt i32 %151, %55\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %147\l  %154 = load i32, i32 addrspace(1)* %153, align 4, !tbaa !5\l  %155 = add nuw nsw i32 %116, 2\l  br i1 %152, label %159, label %156\l|{<s0>T|<s1>F}}"];
	Node0x487cf80:s0 -> Node0x4881c90;
	Node0x487cf80:s1 -> Node0x4881ce0;
	Node0x4881ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%156:\l156:                                              \l  %157 = add nsw i32 %154, %47\l  %158 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  br label %170\l}"];
	Node0x4881ce0 -> Node0x487dea0;
	Node0x4881c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%159:\l159:                                              \l  %160 = mul nsw i32 %151, %51\l  %161 = sub nsw i32 %154, %160\l  %162 = zext i32 %155 to i64\l  %163 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %162\l  %164 = load i32, i32 addrspace(1)* %163, align 4, !tbaa !5\l  %165 = sub nsw i32 %164, %160\l  %166 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %167 = sub nsw i32 %166, %160\l  %168 = tail call i32 @llvm.smax.i32(i32 %165, i32 %167)\l  %169 = tail call i32 @llvm.smax.i32(i32 %161, i32 %168)\l  br label %170\l}"];
	Node0x4881c90 -> Node0x487dea0;
	Node0x487dea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  %171 = phi i32 [ %166, %159 ], [ %158, %156 ]\l  %172 = phi i32 [ %169, %159 ], [ %157, %156 ]\l  %173 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %147\l  store i32 %171, i32 addrspace(1)* %173, align 4, !tbaa !5\l  store i32 %172, i32 addrspace(1)* %61, align 4, !tbaa !5\l  %174 = add i32 %117, 2\l  %175 = icmp eq i32 %174, %66\l  br i1 %175, label %77, label %115, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x487dea0:s0 -> Node0x487d8f0;
	Node0x487dea0:s1 -> Node0x487d940;
}
