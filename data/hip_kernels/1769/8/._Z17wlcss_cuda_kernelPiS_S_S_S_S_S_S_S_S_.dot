digraph "CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_' function";

	Node0x5e95bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = sext i32 %12 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %17 = sext i32 %13 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %14\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %17\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr inbounds i8, i8 addrspace(4)* %24, i64 12\l  %26 = bitcast i8 addrspace(4)* %25 to i32 addrspace(4)*\l  %27 = load i32, i32 addrspace(4)* %26, align 4, !tbaa !10\l  %28 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !19, !invariant.load\l... !9\l  %31 = zext i16 %30 to i32\l  %32 = udiv i32 %27, %31\l  %33 = mul i32 %32, %31\l  %34 = icmp ugt i32 %27, %33\l  %35 = zext i1 %34 to i32\l  %36 = add i32 %32, %35\l  %37 = mul i32 %36, %11\l  %38 = getelementptr inbounds i8, i8 addrspace(4)* %24, i64 16\l  %39 = bitcast i8 addrspace(4)* %38 to i32 addrspace(4)*\l  %40 = load i32, i32 addrspace(4)* %39, align 8, !tbaa !20\l  %41 = getelementptr i8, i8 addrspace(4)* %24, i64 6\l  %42 = bitcast i8 addrspace(4)* %41 to i16 addrspace(4)*\l  %43 = load i16, i16 addrspace(4)* %42, align 2, !range !19, !invariant.load\l... !9\l  %44 = zext i16 %43 to i32\l  %45 = udiv i32 %40, %44\l  %46 = mul i32 %45, %44\l  %47 = icmp ugt i32 %40, %46\l  %48 = zext i1 %47 to i32\l  %49 = add i32 %45, %48\l  %50 = add i32 %37, %12\l  %51 = mul i32 %49, %50\l  %52 = add i32 %51, %13\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = add nsw i32 %16, 2\l  %59 = sext i32 %58 to i64\l  %60 = tail call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %59, i64 4)\l  %61 = extractvalue \{ i64, i1 \} %60, 1\l  %62 = extractvalue \{ i64, i1 \} %60, 0\l  %63 = select i1 %61, i64 -1, i64 %62\l  %64 = tail call i64 @llvm.umax.i64(i64 %63, i64 1)\l  %65 = tail call fastcc i8 addrspace(1)* @__ockl_dm_alloc(i64 %64) #13\l  %66 = ptrtoint i8 addrspace(1)* %65 to i64\l  %67 = bitcast i8 addrspace(1)* %65 to i32 addrspace(1)*\l  tail call void @llvm.memset.p1i8.i64(i8 addrspace(1)* align 4 %65, i8 0, i64\l... %63, i1 false)\l  %68 = sext i32 %21 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %68\l  %70 = sext i32 %23 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %70\l  %72 = mul nuw nsw i32 %11, 3\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !5\l  %76 = add nuw nsw i32 %72, 1\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !5\l  %80 = add nuw nsw i32 %72, 2\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !5\l  %84 = icmp sgt i32 %19, 0\l  br i1 %84, label %85, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5e95bc0:s0 -> Node0x5e9bec0;
	Node0x5e95bc0:s1 -> Node0x5e9bf50;
	Node0x5e9bec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%85:\l85:                                               \l  %86 = icmp sgt i32 %16, 0\l  %87 = add nsw i32 %16, 1\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %88\l  %90 = sext i32 %16 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %90\l  %92 = and i32 %16, 1\l  %93 = icmp eq i32 %16, 1\l  %94 = and i32 %16, -2\l  %95 = icmp eq i32 %92, 0\l  br label %96\l}"];
	Node0x5e9bec0 -> Node0x5e9c610;
	Node0x5e9c610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%96:\l96:                                               \l  %97 = phi i32 [ 0, %85 ], [ %143, %139 ]\l  br i1 %86, label %101, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5e9c610:s0 -> Node0x5e9c840;
	Node0x5e9c610:s1 -> Node0x5e9c8d0;
	Node0x5e9c8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%98:\l98:                                               \l  %99 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %100 = zext i32 %97 to i64\l  br label %139\l}"];
	Node0x5e9c8d0 -> Node0x5e9c700;
	Node0x5e9c840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%101:\l101:                                              \l  %102 = zext i32 %97 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %71, i64 %102\l  br i1 %93, label %104, label %145\l|{<s0>T|<s1>F}}"];
	Node0x5e9c840:s0 -> Node0x5e9cca0;
	Node0x5e9c840:s1 -> Node0x5e9ccf0;
	Node0x5e9cca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%104:\l104:                                              \l  %105 = phi i32 [ undef, %101 ], [ %208, %206 ]\l  %106 = phi i32 [ 0, %101 ], [ %191, %206 ]\l  br i1 %95, label %139, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5e9cca0:s0 -> Node0x5e9c700;
	Node0x5e9cca0:s1 -> Node0x5e9d460;
	Node0x5e9d460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%107:\l107:                                              \l  %108 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !5\l  %109 = mul nsw i32 %108, 26\l  %110 = zext i32 %106 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %69, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !5\l  %113 = add nsw i32 %109, %112\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !5\l  %117 = icmp sgt i32 %116, %83\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %110\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !5\l  br i1 %117, label %123, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5e9d460:s0 -> Node0x5e9dc30;
	Node0x5e9d460:s1 -> Node0x5e9dc80;
	Node0x5e9dc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%120:\l120:                                              \l  %121 = add nsw i32 %119, %75\l  %122 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  br label %135\l}"];
	Node0x5e9dc80 -> Node0x5e9dec0;
	Node0x5e9dc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%123:\l123:                                              \l  %124 = add nuw nsw i32 %106, 1\l  %125 = mul nsw i32 %116, %79\l  %126 = sub nsw i32 %119, %125\l  %127 = zext i32 %124 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !5\l  %130 = sub nsw i32 %129, %125\l  %131 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %132 = sub nsw i32 %131, %125\l  %133 = tail call i32 @llvm.smax.i32(i32 %130, i32 %132)\l  %134 = tail call i32 @llvm.smax.i32(i32 %126, i32 %133)\l  br label %135\l}"];
	Node0x5e9dc30 -> Node0x5e9dec0;
	Node0x5e9dec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%135:\l135:                                              \l  %136 = phi i32 [ %131, %123 ], [ %122, %120 ]\l  %137 = phi i32 [ %134, %123 ], [ %121, %120 ]\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %110\l  store i32 %136, i32 addrspace(1)* %138, align 4, !tbaa !5\l  store i32 %137, i32 addrspace(1)* %89, align 4, !tbaa !5\l  br label %139\l}"];
	Node0x5e9dec0 -> Node0x5e9c700;
	Node0x5e9c700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%139:\l139:                                              \l  %140 = phi i64 [ %100, %98 ], [ %102, %104 ], [ %102, %135 ]\l  %141 = phi i32 [ %99, %98 ], [ %105, %104 ], [ %137, %135 ]\l  store i32 %141, i32 addrspace(1)* %91, align 4, !tbaa !5\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %57, i64 %140\l  store i32 %141, i32 addrspace(1)* %142, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %143 = add nuw nsw i32 %97, 1\l  %144 = icmp eq i32 %143, %19\l  br i1 %144, label %212, label %96, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5e9c700:s0 -> Node0x5e9bf50;
	Node0x5e9c700:s1 -> Node0x5e9c610;
	Node0x5e9ccf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%145:\l145:                                              \l  %146 = phi i32 [ %191, %206 ], [ 0, %101 ]\l  %147 = phi i32 [ %210, %206 ], [ 0, %101 ]\l  %148 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !5\l  %149 = mul nsw i32 %148, 26\l  %150 = zext i32 %146 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %69, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !5\l  %153 = add nsw i32 %149, %152\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %154\l  %156 = load i32, i32 addrspace(1)* %155, align 4, !tbaa !5\l  %157 = icmp sgt i32 %156, %83\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %150\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !5\l  %160 = or i32 %146, 1\l  br i1 %157, label %164, label %161\l|{<s0>T|<s1>F}}"];
	Node0x5e9ccf0:s0 -> Node0x5e9fdf0;
	Node0x5e9ccf0:s1 -> Node0x5e9fe80;
	Node0x5e9fe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%161:\l161:                                              \l  %162 = add nsw i32 %159, %75\l  %163 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  br label %175\l}"];
	Node0x5e9fe80 -> Node0x5ea00c0;
	Node0x5e9fdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%164:\l164:                                              \l  %165 = mul nsw i32 %156, %79\l  %166 = sub nsw i32 %159, %165\l  %167 = zext i32 %160 to i64\l  %168 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %167\l  %169 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !5\l  %170 = sub nsw i32 %169, %165\l  %171 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %172 = sub nsw i32 %171, %165\l  %173 = tail call i32 @llvm.smax.i32(i32 %170, i32 %172)\l  %174 = tail call i32 @llvm.smax.i32(i32 %166, i32 %173)\l  br label %175\l}"];
	Node0x5e9fdf0 -> Node0x5ea00c0;
	Node0x5ea00c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%175:\l175:                                              \l  %176 = phi i32 [ %171, %164 ], [ %163, %161 ]\l  %177 = phi i32 [ %174, %164 ], [ %162, %161 ]\l  %178 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %150\l  store i32 %176, i32 addrspace(1)* %178, align 4, !tbaa !5\l  store i32 %177, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %179 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !5\l  %180 = mul nsw i32 %179, 26\l  %181 = zext i32 %160 to i64\l  %182 = getelementptr inbounds i32, i32 addrspace(1)* %69, i64 %181\l  %183 = load i32, i32 addrspace(1)* %182, align 4, !tbaa !5\l  %184 = add nsw i32 %180, %183\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %185\l  %187 = load i32, i32 addrspace(1)* %186, align 4, !tbaa !5\l  %188 = icmp sgt i32 %187, %83\l  %189 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %181\l  %190 = load i32, i32 addrspace(1)* %189, align 4, !tbaa !5\l  %191 = add nuw nsw i32 %146, 2\l  br i1 %188, label %195, label %192\l|{<s0>T|<s1>F}}"];
	Node0x5ea00c0:s0 -> Node0x5ea1220;
	Node0x5ea00c0:s1 -> Node0x5ea1270;
	Node0x5ea1270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%192:\l192:                                              \l  %193 = add nsw i32 %190, %75\l  %194 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  br label %206\l}"];
	Node0x5ea1270 -> Node0x5e9d200;
	Node0x5ea1220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%195:\l195:                                              \l  %196 = mul nsw i32 %187, %79\l  %197 = sub nsw i32 %190, %196\l  %198 = zext i32 %191 to i64\l  %199 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %198\l  %200 = load i32, i32 addrspace(1)* %199, align 4, !tbaa !5\l  %201 = sub nsw i32 %200, %196\l  %202 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %203 = sub nsw i32 %202, %196\l  %204 = tail call i32 @llvm.smax.i32(i32 %201, i32 %203)\l  %205 = tail call i32 @llvm.smax.i32(i32 %197, i32 %204)\l  br label %206\l}"];
	Node0x5ea1220 -> Node0x5e9d200;
	Node0x5e9d200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%206:\l206:                                              \l  %207 = phi i32 [ %202, %195 ], [ %194, %192 ]\l  %208 = phi i32 [ %205, %195 ], [ %193, %192 ]\l  %209 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %181\l  store i32 %207, i32 addrspace(1)* %209, align 4, !tbaa !5\l  store i32 %208, i32 addrspace(1)* %89, align 4, !tbaa !5\l  %210 = add i32 %147, 2\l  %211 = icmp eq i32 %210, %94\l  br i1 %211, label %104, label %145, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5e9d200:s0 -> Node0x5e9cca0;
	Node0x5e9d200:s1 -> Node0x5e9ccf0;
	Node0x5e9bf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%212:\l212:                                              \l  %213 = icmp eq i8 addrspace(1)* %65, addrspacecast (i8* null to i8\l... addrspace(1)*)\l  br i1 %213, label %215, label %214\l|{<s0>T|<s1>F}}"];
	Node0x5e9bf50:s0 -> Node0x5e9d340;
	Node0x5e9bf50:s1 -> Node0x5ea27c0;
	Node0x5ea27c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%214:\l214:                                              \l  tail call fastcc void @__ockl_dm_dealloc(i64 %66) #13\l  br label %215\l}"];
	Node0x5ea27c0 -> Node0x5e9d340;
	Node0x5e9d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%215:\l215:                                              \l  ret void\l}"];
}
