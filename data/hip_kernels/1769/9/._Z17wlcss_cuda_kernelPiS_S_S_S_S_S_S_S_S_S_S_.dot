digraph "CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_S_' function" {
	label="CFG for '_Z17wlcss_cuda_kernelPiS_S_S_S_S_S_S_S_S_S_S_' function";

	Node0x622a170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = sext i32 %14 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %19 = sext i32 %15 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %16\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %19\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %26 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %26, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !10\l  %30 = getelementptr i8, i8 addrspace(4)* %26, i64 4\l  %31 = bitcast i8 addrspace(4)* %30 to i16 addrspace(4)*\l  %32 = load i16, i16 addrspace(4)* %31, align 4, !range !19, !invariant.load\l... !9\l  %33 = zext i16 %32 to i32\l  %34 = udiv i32 %29, %33\l  %35 = mul i32 %34, %33\l  %36 = icmp ugt i32 %29, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = mul i32 %38, %13\l  %40 = getelementptr inbounds i8, i8 addrspace(4)* %26, i64 16\l  %41 = bitcast i8 addrspace(4)* %40 to i32 addrspace(4)*\l  %42 = load i32, i32 addrspace(4)* %41, align 8, !tbaa !20\l  %43 = getelementptr i8, i8 addrspace(4)* %26, i64 6\l  %44 = bitcast i8 addrspace(4)* %43 to i16 addrspace(4)*\l  %45 = load i16, i16 addrspace(4)* %44, align 2, !range !19, !invariant.load\l... !9\l  %46 = zext i16 %45 to i32\l  %47 = udiv i32 %42, %46\l  %48 = mul i32 %47, %46\l  %49 = icmp ugt i32 %42, %48\l  %50 = zext i1 %49 to i32\l  %51 = add i32 %47, %50\l  %52 = add i32 %39, %14\l  %53 = mul i32 %51, %52\l  %54 = add i32 %53, %15\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %55\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %60\l  %62 = sext i32 %57 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = sext i32 %23 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %64\l  %66 = sext i32 %25 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %66\l  %68 = mul nuw nsw i32 %13, 3\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %72 = add nuw nsw i32 %68, 1\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %76 = add nuw nsw i32 %68, 2\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %80 = icmp sgt i32 %21, 0\l  br i1 %80, label %81, label %100\l|{<s0>T|<s1>F}}"];
	Node0x622a170:s0 -> Node0x62309a0;
	Node0x622a170:s1 -> Node0x6230a30;
	Node0x62309a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%81:\l81:                                               \l  %82 = icmp sgt i32 %18, 0\l  %83 = add nsw i32 %18, 1\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %84\l  %86 = sext i32 %18 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %86\l  %88 = and i32 %18, 1\l  %89 = icmp eq i32 %18, 1\l  %90 = and i32 %18, -2\l  %91 = icmp eq i32 %88, 0\l  br label %92\l}"];
	Node0x62309a0 -> Node0x6231120;
	Node0x6231120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%92:\l92:                                               \l  %93 = phi i32 [ 0, %81 ], [ %140, %136 ]\l  br i1 %82, label %97, label %94\l|{<s0>T|<s1>F}}"];
	Node0x6231120:s0 -> Node0x6231350;
	Node0x6231120:s1 -> Node0x62313e0;
	Node0x62313e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%94:\l94:                                               \l  %95 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %96 = zext i32 %93 to i64\l  br label %136\l}"];
	Node0x62313e0 -> Node0x6231210;
	Node0x6231350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%97:\l97:                                               \l  %98 = zext i32 %93 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %67, i64 %98\l  br i1 %89, label %101, label %142\l|{<s0>T|<s1>F}}"];
	Node0x6231350:s0 -> Node0x62317b0;
	Node0x6231350:s1 -> Node0x6231800;
	Node0x6230a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%100:\l100:                                              \l  ret void\l}"];
	Node0x62317b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%101:\l101:                                              \l  %102 = phi i32 [ undef, %97 ], [ %205, %203 ]\l  %103 = phi i32 [ 0, %97 ], [ %188, %203 ]\l  br i1 %91, label %136, label %104\l|{<s0>T|<s1>F}}"];
	Node0x62317b0:s0 -> Node0x6231210;
	Node0x62317b0:s1 -> Node0x6231f80;
	Node0x6231f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%104:\l104:                                              \l  %105 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !5\l  %106 = shl nsw i32 %105, 3\l  %107 = zext i32 %103 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %65, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !5\l  %110 = add nsw i32 %106, %109\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !5\l  %114 = icmp sgt i32 %113, %79\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %107\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !5\l  br i1 %114, label %120, label %117\l|{<s0>T|<s1>F}}"];
	Node0x6231f80:s0 -> Node0x6232720;
	Node0x6231f80:s1 -> Node0x6232770;
	Node0x6232770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%117:\l117:                                              \l  %118 = add nsw i32 %116, %71\l  %119 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  br label %132\l}"];
	Node0x6232770 -> Node0x62329b0;
	Node0x6232720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%120:\l120:                                              \l  %121 = add nuw nsw i32 %103, 1\l  %122 = mul nsw i32 %113, %75\l  %123 = sub nsw i32 %116, %122\l  %124 = zext i32 %121 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %124\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !5\l  %127 = sub nsw i32 %126, %122\l  %128 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %129 = sub nsw i32 %128, %122\l  %130 = tail call i32 @llvm.smax.i32(i32 %127, i32 %129)\l  %131 = tail call i32 @llvm.smax.i32(i32 %123, i32 %130)\l  br label %132\l}"];
	Node0x6232720 -> Node0x62329b0;
	Node0x62329b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%132:\l132:                                              \l  %133 = phi i32 [ %128, %120 ], [ %119, %117 ]\l  %134 = phi i32 [ %131, %120 ], [ %118, %117 ]\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %107\l  store i32 %133, i32 addrspace(1)* %135, align 4, !tbaa !5\l  store i32 %134, i32 addrspace(1)* %85, align 4, !tbaa !5\l  br label %136\l}"];
	Node0x62329b0 -> Node0x6231210;
	Node0x6231210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%136:\l136:                                              \l  %137 = phi i64 [ %96, %94 ], [ %98, %101 ], [ %98, %132 ]\l  %138 = phi i32 [ %95, %94 ], [ %102, %101 ], [ %134, %132 ]\l  store i32 %138, i32 addrspace(1)* %87, align 4, !tbaa !5\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %63, i64 %137\l  store i32 %138, i32 addrspace(1)* %139, align 4, !tbaa !5\l  store i32 0, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %140 = add nuw nsw i32 %93, 1\l  %141 = icmp eq i32 %140, %21\l  br i1 %141, label %100, label %92, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x6231210:s0 -> Node0x6230a30;
	Node0x6231210:s1 -> Node0x6231120;
	Node0x6231800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %188, %203 ], [ 0, %97 ]\l  %144 = phi i32 [ %207, %203 ], [ 0, %97 ]\l  %145 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !5\l  %146 = shl nsw i32 %145, 3\l  %147 = zext i32 %143 to i64\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %65, i64 %147\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !5\l  %150 = add nsw i32 %146, %149\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %151\l  %153 = load i32, i32 addrspace(1)* %152, align 4, !tbaa !5\l  %154 = icmp sgt i32 %153, %79\l  %155 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %147\l  %156 = load i32, i32 addrspace(1)* %155, align 4, !tbaa !5\l  %157 = or i32 %143, 1\l  br i1 %154, label %161, label %158\l|{<s0>T|<s1>F}}"];
	Node0x6231800:s0 -> Node0x62348a0;
	Node0x6231800:s1 -> Node0x6234930;
	Node0x6234930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%158:\l158:                                              \l  %159 = add nsw i32 %156, %71\l  %160 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  br label %172\l}"];
	Node0x6234930 -> Node0x6234b70;
	Node0x62348a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%161:\l161:                                              \l  %162 = mul nsw i32 %153, %75\l  %163 = sub nsw i32 %156, %162\l  %164 = zext i32 %157 to i64\l  %165 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %164\l  %166 = load i32, i32 addrspace(1)* %165, align 4, !tbaa !5\l  %167 = sub nsw i32 %166, %162\l  %168 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %169 = sub nsw i32 %168, %162\l  %170 = tail call i32 @llvm.smax.i32(i32 %167, i32 %169)\l  %171 = tail call i32 @llvm.smax.i32(i32 %163, i32 %170)\l  br label %172\l}"];
	Node0x62348a0 -> Node0x6234b70;
	Node0x6234b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%172:\l172:                                              \l  %173 = phi i32 [ %168, %161 ], [ %160, %158 ]\l  %174 = phi i32 [ %171, %161 ], [ %159, %158 ]\l  %175 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %147\l  store i32 %173, i32 addrspace(1)* %175, align 4, !tbaa !5\l  store i32 %174, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %176 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !5\l  %177 = shl nsw i32 %176, 3\l  %178 = zext i32 %157 to i64\l  %179 = getelementptr inbounds i32, i32 addrspace(1)* %65, i64 %178\l  %180 = load i32, i32 addrspace(1)* %179, align 4, !tbaa !5\l  %181 = add nsw i32 %177, %180\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %182\l  %184 = load i32, i32 addrspace(1)* %183, align 4, !tbaa !5\l  %185 = icmp sgt i32 %184, %79\l  %186 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %178\l  %187 = load i32, i32 addrspace(1)* %186, align 4, !tbaa !5\l  %188 = add nuw nsw i32 %143, 2\l  br i1 %185, label %192, label %189\l|{<s0>T|<s1>F}}"];
	Node0x6234b70:s0 -> Node0x6235cd0;
	Node0x6234b70:s1 -> Node0x6235d20;
	Node0x6235d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%189:\l189:                                              \l  %190 = add nsw i32 %187, %71\l  %191 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  br label %203\l}"];
	Node0x6235d20 -> Node0x6231d60;
	Node0x6235cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%192:\l192:                                              \l  %193 = mul nsw i32 %184, %75\l  %194 = sub nsw i32 %187, %193\l  %195 = zext i32 %188 to i64\l  %196 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %195\l  %197 = load i32, i32 addrspace(1)* %196, align 4, !tbaa !5\l  %198 = sub nsw i32 %197, %193\l  %199 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %200 = sub nsw i32 %199, %193\l  %201 = tail call i32 @llvm.smax.i32(i32 %198, i32 %200)\l  %202 = tail call i32 @llvm.smax.i32(i32 %194, i32 %201)\l  br label %203\l}"];
	Node0x6235cd0 -> Node0x6231d60;
	Node0x6231d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%203:\l203:                                              \l  %204 = phi i32 [ %199, %192 ], [ %191, %189 ]\l  %205 = phi i32 [ %202, %192 ], [ %190, %189 ]\l  %206 = getelementptr inbounds i32, i32 addrspace(1)* %61, i64 %178\l  store i32 %204, i32 addrspace(1)* %206, align 4, !tbaa !5\l  store i32 %205, i32 addrspace(1)* %85, align 4, !tbaa !5\l  %207 = add i32 %144, 2\l  %208 = icmp eq i32 %207, %90\l  br i1 %208, label %101, label %142, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x6231d60:s0 -> Node0x62317b0;
	Node0x6231d60:s1 -> Node0x6231800;
}
