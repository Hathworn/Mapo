digraph "CFG for '_Z8crossFcnPfP12hiprandState' function" {
	label="CFG for '_Z8crossFcnPfP12hiprandState' function";

	Node0x6385510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = zext i32 %3 to i64\l  %5 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 %4, i32 0, i32 0, i32 0\l  %6 = load i32, i32 addrspace(1)* %5, align 8\l  %7 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 %4, i32 0, i32 0, i32 5, i64 0\l  %8 = load i32, i32 addrspace(1)* %7, align 8\l  %9 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %1, i64 %4, i32 0, i32 0, i32 5, i64 4\l  %10 = load i32, i32 addrspace(1)* %9, align 8\l  %11 = lshr i32 %8, 2\l  %12 = xor i32 %11, %8\l  %13 = shl i32 %10, 4\l  %14 = shl i32 %12, 1\l  %15 = xor i32 %13, %14\l  %16 = xor i32 %15, %10\l  %17 = xor i32 %16, %12\l  %18 = add i32 %6, 362437\l  %19 = add i32 %18, %17\l  %20 = uitofp i32 %19 to float\l  %21 = fmul contract float %20, 0x3DF0000000000000\l  %22 = fadd contract float %21, 0x3DF0000000000000\l  %23 = fpext float %22 to double\l  %24 = fcmp contract olt double %23, 8.000000e-01\l  br i1 %24, label %25, label %109\l|{<s0>T|<s1>F}}"];
	Node0x6385510:s0 -> Node0x6387c00;
	Node0x6385510:s1 -> Node0x6387c90;
	Node0x6387c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = and i32 %19, 1\l  %27 = icmp eq i32 %26, 0\l  %28 = mul nuw nsw i32 %3, 10\l  br i1 %27, label %109, label %29\l|{<s0>T|<s1>F}}"];
	Node0x6387c00:s0 -> Node0x6387c90;
	Node0x6387c00:s1 -> Node0x6387fb0;
	Node0x6387fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%29:\l29:                                               \l  %30 = zext i32 %28 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5\l  %33 = add nuw nsw i32 %28, 640\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5\l  store float %36, float addrspace(1)* %31, align 4, !tbaa !5\l  store float %32, float addrspace(1)* %35, align 4, !tbaa !5\l  %37 = or i32 %28, 1\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5\l  %41 = add nuw nsw i32 %28, 641\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5\l  store float %44, float addrspace(1)* %39, align 4, !tbaa !5\l  store float %40, float addrspace(1)* %43, align 4, !tbaa !5\l  %45 = add nuw nsw i32 %28, 2\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5\l  %49 = add nuw nsw i32 %28, 642\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !5\l  store float %52, float addrspace(1)* %47, align 4, !tbaa !5\l  store float %48, float addrspace(1)* %51, align 4, !tbaa !5\l  %53 = add nuw nsw i32 %28, 3\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5\l  %57 = add nuw nsw i32 %28, 643\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5\l  store float %60, float addrspace(1)* %55, align 4, !tbaa !5\l  store float %56, float addrspace(1)* %59, align 4, !tbaa !5\l  %61 = add nuw nsw i32 %28, 4\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5\l  %65 = add nuw nsw i32 %28, 644\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5\l  store float %68, float addrspace(1)* %63, align 4, !tbaa !5\l  store float %64, float addrspace(1)* %67, align 4, !tbaa !5\l  %69 = add nuw nsw i32 %28, 5\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5\l  %73 = add nuw nsw i32 %28, 645\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  store float %76, float addrspace(1)* %71, align 4, !tbaa !5\l  store float %72, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = add nuw nsw i32 %28, 6\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5\l  %81 = add nuw nsw i32 %28, 646\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5\l  store float %84, float addrspace(1)* %79, align 4, !tbaa !5\l  store float %80, float addrspace(1)* %83, align 4, !tbaa !5\l  %85 = add nuw nsw i32 %28, 7\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !5\l  %89 = add nuw nsw i32 %28, 647\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  store float %92, float addrspace(1)* %87, align 4, !tbaa !5\l  store float %88, float addrspace(1)* %91, align 4, !tbaa !5\l  %93 = add nuw nsw i32 %28, 8\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5\l  %97 = add nuw nsw i32 %28, 648\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !5\l  store float %100, float addrspace(1)* %95, align 4, !tbaa !5\l  store float %96, float addrspace(1)* %99, align 4, !tbaa !5\l  %101 = add nuw nsw i32 %28, 9\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5\l  %105 = add nuw nsw i32 %28, 649\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5\l  store float %108, float addrspace(1)* %103, align 4, !tbaa !5\l  store float %104, float addrspace(1)* %107, align 4, !tbaa !5\l  br label %109\l}"];
	Node0x6387fb0 -> Node0x6387c90;
	Node0x6387c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  ret void\l}"];
}
