digraph "CFG for '_Z16mat_to_euler_ZXZPfS_i' function" {
	label="CFG for '_Z16mat_to_euler_ZXZPfS_i' function";

	Node0x481c330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %292\l|{<s0>T|<s1>F}}"];
	Node0x481c330:s0 -> Node0x481e200;
	Node0x481c330:s1 -> Node0x481e290;
	Node0x481e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%14:\l14:                                               \l  %15 = mul nsw i32 %12, 9\l  %16 = add nsw i32 %15, 8\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = fcmp contract ogt float %19, 0x3FEFFFFFC0000000\l  br i1 %20, label %21, label %72\l|{<s0>T|<s1>F}}"];
	Node0x481e200:s0 -> Node0x481f9e0;
	Node0x481e200:s1 -> Node0x481fa70;
	Node0x481f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %12, 3\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  store float 0.000000e+00, float addrspace(1)* %24, align 4, !tbaa !7\l  %25 = add nsw i32 %22, 1\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float 0.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = add nsw i32 %15, 3\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %32 = sext i32 %15 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = tail call float @llvm.fabs.f32(float %34)\l  %36 = tail call float @llvm.fabs.f32(float %31)\l  %37 = tail call float @llvm.minnum.f32(float %35, float %36)\l  %38 = tail call float @llvm.maxnum.f32(float %35, float %36)\l  %39 = fdiv float %37, %38, !fpmath !11\l  %40 = fmul float %39, %39\l  %41 = tail call float @llvm.fmuladd.f32(float %40, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %42 = tail call float @llvm.fmuladd.f32(float %40, float %41, float\l... 0x3FA53F67E0000000)\l  %43 = tail call float @llvm.fmuladd.f32(float %40, float %42, float\l... 0xBFB2FA9AE0000000)\l  %44 = tail call float @llvm.fmuladd.f32(float %40, float %43, float\l... 0x3FBB263640000000)\l  %45 = tail call float @llvm.fmuladd.f32(float %40, float %44, float\l... 0xBFC22C1CC0000000)\l  %46 = tail call float @llvm.fmuladd.f32(float %40, float %45, float\l... 0x3FC99717E0000000)\l  %47 = tail call float @llvm.fmuladd.f32(float %40, float %46, float\l... 0xBFD5554C40000000)\l  %48 = fmul float %40, %47\l  %49 = tail call float @llvm.fmuladd.f32(float %39, float %48, float %39)\l  %50 = fsub float 0x3FF921FB60000000, %49\l  %51 = fcmp ogt float %36, %35\l  %52 = select i1 %51, float %50, float %49\l  %53 = fsub float 0x400921FB60000000, %52\l  %54 = fcmp olt float %34, 0.000000e+00\l  %55 = select i1 %54, float %53, float %52\l  %56 = bitcast float %34 to i32\l  %57 = icmp slt i32 %56, 0\l  %58 = select i1 %57, float 0x400921FB60000000, float 0.000000e+00\l  %59 = fcmp oeq float %31, 0.000000e+00\l  %60 = select i1 %59, float %58, float %55\l  %61 = select i1 %54, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %62 = fcmp oeq float %35, 0x7FF0000000000000\l  %63 = fcmp oeq float %36, 0x7FF0000000000000\l  %64 = and i1 %63, %62\l  %65 = select i1 %64, float %61, float %60\l  %66 = fcmp uno float %34, %31\l  %67 = select i1 %66, float 0x7FF8000000000000, float %65\l  %68 = tail call float @llvm.copysign.f32(float %67, float %31)\l  %69 = add nsw i32 %22, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  store float %68, float addrspace(1)* %71, align 4, !tbaa !7\l  br label %292\l}"];
	Node0x481f9e0 -> Node0x481e290;
	Node0x481fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%72:\l72:                                               \l  %73 = fcmp contract olt float %19, 0xBFEFFFFFC0000000\l  br i1 %73, label %74, label %125\l|{<s0>T|<s1>F}}"];
	Node0x481fa70:s0 -> Node0x48236e0;
	Node0x481fa70:s1 -> Node0x4823770;
	Node0x48236e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%74:\l74:                                               \l  %75 = mul nsw i32 %12, 3\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  store float 0.000000e+00, float addrspace(1)* %77, align 4, !tbaa !7\l  %78 = add nsw i32 %75, 1\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  store float 0x400921FB60000000, float addrspace(1)* %80, align 4, !tbaa !7\l  %81 = add nsw i32 %15, 1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = sext i32 %15 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = tail call float @llvm.fabs.f32(float %87)\l  %89 = tail call float @llvm.fabs.f32(float %84)\l  %90 = tail call float @llvm.minnum.f32(float %88, float %89)\l  %91 = tail call float @llvm.maxnum.f32(float %88, float %89)\l  %92 = fdiv float %90, %91, !fpmath !11\l  %93 = fmul float %92, %92\l  %94 = tail call float @llvm.fmuladd.f32(float %93, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %95 = tail call float @llvm.fmuladd.f32(float %93, float %94, float\l... 0x3FA53F67E0000000)\l  %96 = tail call float @llvm.fmuladd.f32(float %93, float %95, float\l... 0xBFB2FA9AE0000000)\l  %97 = tail call float @llvm.fmuladd.f32(float %93, float %96, float\l... 0x3FBB263640000000)\l  %98 = tail call float @llvm.fmuladd.f32(float %93, float %97, float\l... 0xBFC22C1CC0000000)\l  %99 = tail call float @llvm.fmuladd.f32(float %93, float %98, float\l... 0x3FC99717E0000000)\l  %100 = tail call float @llvm.fmuladd.f32(float %93, float %99, float\l... 0xBFD5554C40000000)\l  %101 = fmul float %93, %100\l  %102 = tail call float @llvm.fmuladd.f32(float %92, float %101, float %92)\l  %103 = fsub float 0x3FF921FB60000000, %102\l  %104 = fcmp ogt float %89, %88\l  %105 = select i1 %104, float %103, float %102\l  %106 = fsub float 0x400921FB60000000, %105\l  %107 = fcmp olt float %87, 0.000000e+00\l  %108 = select i1 %107, float %106, float %105\l  %109 = bitcast float %87 to i32\l  %110 = icmp slt i32 %109, 0\l  %111 = select i1 %110, float 0x400921FB60000000, float 0.000000e+00\l  %112 = fcmp oeq float %84, 0.000000e+00\l  %113 = select i1 %112, float %111, float %108\l  %114 = select i1 %107, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %115 = fcmp oeq float %88, 0x7FF0000000000000\l  %116 = fcmp oeq float %89, 0x7FF0000000000000\l  %117 = and i1 %116, %115\l  %118 = select i1 %117, float %114, float %113\l  %119 = fcmp uno float %87, %84\l  %120 = select i1 %119, float 0x7FF8000000000000, float %118\l  %121 = tail call float @llvm.copysign.f32(float %120, float %84)\l  %122 = add nsw i32 %75, 2\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  store float %121, float addrspace(1)* %124, align 4, !tbaa !7\l  br label %292\l}"];
	Node0x48236e0 -> Node0x481e290;
	Node0x4823770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%125:\l125:                                              \l  %126 = add nsw i32 %15, 2\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %0, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %130 = add nsw i32 %15, 5\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = fneg contract float %133\l  %135 = tail call float @llvm.fabs.f32(float %134)\l  %136 = tail call float @llvm.fabs.f32(float %129)\l  %137 = tail call float @llvm.minnum.f32(float %135, float %136)\l  %138 = tail call float @llvm.maxnum.f32(float %135, float %136)\l  %139 = fdiv float %137, %138, !fpmath !11\l  %140 = fmul float %139, %139\l  %141 = tail call float @llvm.fmuladd.f32(float %140, float\l... 0x3F65A54B00000000, float 0xBF8F4B2180000000)\l  %142 = tail call float @llvm.fmuladd.f32(float %140, float %141, float\l... 0x3FA53F67E0000000)\l  %143 = tail call float @llvm.fmuladd.f32(float %140, float %142, float\l... 0xBFB2FA9AE0000000)\l  %144 = tail call float @llvm.fmuladd.f32(float %140, float %143, float\l... 0x3FBB263640000000)\l  %145 = tail call float @llvm.fmuladd.f32(float %140, float %144, float\l... 0xBFC22C1CC0000000)\l  %146 = tail call float @llvm.fmuladd.f32(float %140, float %145, float\l... 0x3FC99717E0000000)\l  %147 = tail call float @llvm.fmuladd.f32(float %140, float %146, float\l... 0xBFD5554C40000000)\l  %148 = fmul float %140, %147\l  %149 = tail call float @llvm.fmuladd.f32(float %139, float %148, float %139)\l  %150 = fsub float 0x3FF921FB60000000, %149\l  %151 = fcmp ogt float %136, %135\l  %152 = select i1 %151, float %150, float %149\l  %153 = fsub float 0x400921FB60000000, %152\l  %154 = fcmp ogt float %133, 0.000000e+00\l  %155 = select i1 %154, float %153, float %152\l  %156 = bitcast float %134 to i32\l  %157 = icmp slt i32 %156, 0\l  %158 = select i1 %157, float 0x400921FB60000000, float 0.000000e+00\l  %159 = fcmp oeq float %129, 0.000000e+00\l  %160 = select i1 %159, float %158, float %155\l  %161 = select i1 %154, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %162 = fcmp oeq float %135, 0x7FF0000000000000\l  %163 = fcmp oeq float %136, 0x7FF0000000000000\l  %164 = and i1 %163, %162\l  %165 = select i1 %164, float %161, float %160\l  %166 = fcmp uno float %129, %134\l  %167 = select i1 %166, float 0x7FF8000000000000, float %165\l  %168 = tail call float @llvm.copysign.f32(float %167, float %129)\l  %169 = mul nsw i32 %12, 3\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %1, i64 %170\l  store float %168, float addrspace(1)* %171, align 4, !tbaa !7\l  %172 = add nsw i32 %15, 6\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %0, i64 %173\l  %175 = load float, float addrspace(1)* %174, align 4, !tbaa !7\l  %176 = fmul contract float %175, %175\l  %177 = add nsw i32 %15, 7\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %0, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %181 = fmul contract float %180, %180\l  %182 = fadd contract float %176, %181\l  %183 = fcmp olt float %182, 0x39F0000000000000\l  %184 = select i1 %183, float 0x41F0000000000000, float 1.000000e+00\l  %185 = fmul float %182, %184\l  %186 = tail call float @llvm.sqrt.f32(float %185)\l  %187 = bitcast float %186 to i32\l  %188 = add nsw i32 %187, -1\l  %189 = bitcast i32 %188 to float\l  %190 = add nsw i32 %187, 1\l  %191 = bitcast i32 %190 to float\l  %192 = tail call i1 @llvm.amdgcn.class.f32(float %185, i32 608)\l  %193 = select i1 %183, float 0x3EF0000000000000, float 1.000000e+00\l  %194 = fneg float %191\l  %195 = tail call float @llvm.fma.f32(float %194, float %186, float %185)\l  %196 = fcmp ogt float %195, 0.000000e+00\l  %197 = fneg float %189\l  %198 = tail call float @llvm.fma.f32(float %197, float %186, float %185)\l  %199 = fcmp ole float %198, 0.000000e+00\l  %200 = select i1 %199, float %189, float %186\l  %201 = select i1 %196, float %191, float %200\l  %202 = fmul float %193, %201\l  %203 = select i1 %192, float %185, float %202\l  %204 = load float, float addrspace(1)* %18, align 4, !tbaa !7\l  %205 = tail call float @llvm.fabs.f32(float %204)\l  %206 = tail call float @llvm.fabs.f32(float %203)\l  %207 = tail call float @llvm.minnum.f32(float %205, float %206)\l  %208 = tail call float @llvm.maxnum.f32(float %205, float %206)\l  %209 = fdiv float %207, %208, !fpmath !11\l  %210 = fmul float %209, %209\l  %211 = tail call float @llvm.fmuladd.f32(float %210, float\l... 0x3F65A54B00000000, float 0xBF8F4B2180000000)\l  %212 = tail call float @llvm.fmuladd.f32(float %210, float %211, float\l... 0x3FA53F67E0000000)\l  %213 = tail call float @llvm.fmuladd.f32(float %210, float %212, float\l... 0xBFB2FA9AE0000000)\l  %214 = tail call float @llvm.fmuladd.f32(float %210, float %213, float\l... 0x3FBB263640000000)\l  %215 = tail call float @llvm.fmuladd.f32(float %210, float %214, float\l... 0xBFC22C1CC0000000)\l  %216 = tail call float @llvm.fmuladd.f32(float %210, float %215, float\l... 0x3FC99717E0000000)\l  %217 = tail call float @llvm.fmuladd.f32(float %210, float %216, float\l... 0xBFD5554C40000000)\l  %218 = fmul float %210, %217\l  %219 = tail call float @llvm.fmuladd.f32(float %209, float %218, float %209)\l  %220 = fsub float 0x3FF921FB60000000, %219\l  %221 = fcmp ogt float %206, %205\l  %222 = select i1 %221, float %220, float %219\l  %223 = fsub float 0x400921FB60000000, %222\l  %224 = fcmp olt float %204, 0.000000e+00\l  %225 = select i1 %224, float %223, float %222\l  %226 = bitcast float %204 to i32\l  %227 = icmp slt i32 %226, 0\l  %228 = select i1 %227, float 0x400921FB60000000, float 0.000000e+00\l  %229 = fcmp oeq float %203, 0.000000e+00\l  %230 = select i1 %229, float %228, float %225\l  %231 = select i1 %224, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %232 = fcmp oeq float %205, 0x7FF0000000000000\l  %233 = fcmp oeq float %206, 0x7FF0000000000000\l  %234 = and i1 %232, %233\l  %235 = select i1 %234, float %231, float %230\l  %236 = fcmp uno float %204, %203\l  %237 = select i1 %236, float 0x7FF8000000000000, float %235\l  %238 = tail call float @llvm.copysign.f32(float %237, float %203)\l  %239 = add nsw i32 %169, 1\l  %240 = sext i32 %239 to i64\l  %241 = getelementptr inbounds float, float addrspace(1)* %1, i64 %240\l  store float %238, float addrspace(1)* %241, align 4, !tbaa !7\l  %242 = load float, float addrspace(1)* %174, align 4, !tbaa !7\l  %243 = load float, float addrspace(1)* %179, align 4, !tbaa !7\l  %244 = tail call float @llvm.fabs.f32(float %243)\l  %245 = tail call float @llvm.fabs.f32(float %242)\l  %246 = tail call float @llvm.minnum.f32(float %244, float %245)\l  %247 = tail call float @llvm.maxnum.f32(float %244, float %245)\l  %248 = fdiv float %246, %247, !fpmath !11\l  %249 = fmul float %248, %248\l  %250 = tail call float @llvm.fmuladd.f32(float %249, float\l... 0x3F65A54B00000000, float 0xBF8F4B2180000000)\l  %251 = tail call float @llvm.fmuladd.f32(float %249, float %250, float\l... 0x3FA53F67E0000000)\l  %252 = tail call float @llvm.fmuladd.f32(float %249, float %251, float\l... 0xBFB2FA9AE0000000)\l  %253 = tail call float @llvm.fmuladd.f32(float %249, float %252, float\l... 0x3FBB263640000000)\l  %254 = tail call float @llvm.fmuladd.f32(float %249, float %253, float\l... 0xBFC22C1CC0000000)\l  %255 = tail call float @llvm.fmuladd.f32(float %249, float %254, float\l... 0x3FC99717E0000000)\l  %256 = tail call float @llvm.fmuladd.f32(float %249, float %255, float\l... 0xBFD5554C40000000)\l  %257 = fmul float %249, %256\l  %258 = tail call float @llvm.fmuladd.f32(float %248, float %257, float %248)\l  %259 = fsub float 0x3FF921FB60000000, %258\l  %260 = fcmp ogt float %245, %244\l  %261 = select i1 %260, float %259, float %258\l  %262 = fsub float 0x400921FB60000000, %261\l  %263 = fcmp olt float %243, 0.000000e+00\l  %264 = select i1 %263, float %262, float %261\l  %265 = bitcast float %243 to i32\l  %266 = icmp slt i32 %265, 0\l  %267 = select i1 %266, float 0x400921FB60000000, float 0.000000e+00\l  %268 = fcmp oeq float %242, 0.000000e+00\l  %269 = select i1 %268, float %267, float %264\l  %270 = select i1 %263, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %271 = fcmp oeq float %244, 0x7FF0000000000000\l  %272 = fcmp oeq float %245, 0x7FF0000000000000\l  %273 = and i1 %272, %271\l  %274 = select i1 %273, float %270, float %269\l  %275 = fcmp uno float %243, %242\l  %276 = select i1 %275, float 0x7FF8000000000000, float %274\l  %277 = tail call float @llvm.copysign.f32(float %276, float %242)\l  %278 = add nsw i32 %169, 2\l  %279 = sext i32 %278 to i64\l  %280 = getelementptr inbounds float, float addrspace(1)* %1, i64 %279\l  store float %277, float addrspace(1)* %280, align 4, !tbaa !7\l  %281 = fcmp contract olt float %168, 0.000000e+00\l  br i1 %281, label %282, label %284\l|{<s0>T|<s1>F}}"];
	Node0x4823770:s0 -> Node0x482e8d0;
	Node0x4823770:s1 -> Node0x482e920;
	Node0x482e8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%282:\l282:                                              \l  %283 = fadd contract float %168, 0x401921FB60000000\l  store float %283, float addrspace(1)* %171, align 4, !tbaa !7\l  br label %284\l}"];
	Node0x482e8d0 -> Node0x482e920;
	Node0x482e920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%284:\l284:                                              \l  %285 = fcmp contract olt float %238, 0.000000e+00\l  br i1 %285, label %286, label %288\l|{<s0>T|<s1>F}}"];
	Node0x482e920:s0 -> Node0x482ec40;
	Node0x482e920:s1 -> Node0x482ec90;
	Node0x482ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%286:\l286:                                              \l  %287 = fadd contract float %238, 0x401921FB60000000\l  store float %287, float addrspace(1)* %241, align 4, !tbaa !7\l  br label %288\l}"];
	Node0x482ec40 -> Node0x482ec90;
	Node0x482ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%288:\l288:                                              \l  %289 = fcmp contract olt float %277, 0.000000e+00\l  br i1 %289, label %290, label %292\l|{<s0>T|<s1>F}}"];
	Node0x482ec90:s0 -> Node0x482eff0;
	Node0x482ec90:s1 -> Node0x481e290;
	Node0x482eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%290:\l290:                                              \l  %291 = fadd contract float %277, 0x401921FB60000000\l  store float %291, float addrspace(1)* %280, align 4, !tbaa !7\l  br label %292\l}"];
	Node0x482eff0 -> Node0x481e290;
	Node0x481e290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%292:\l292:                                              \l  ret void\l}"];
}
