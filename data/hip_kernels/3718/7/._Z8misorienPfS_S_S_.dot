digraph "CFG for '_Z8misorienPfS_S_S_' function" {
	label="CFG for '_Z8misorienPfS_S_S_' function";

	Node0x5399670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul i32 %5, 9\l  %15 = zext i32 %14 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = getelementptr inbounds float, float addrspace(1)* %16, i64 3\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = getelementptr inbounds float, float addrspace(1)* %16, i64 6\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = getelementptr inbounds float, float addrspace(1)* %16, i64 1\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = getelementptr inbounds float, float addrspace(1)* %16, i64 4\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = getelementptr inbounds float, float addrspace(1)* %16, i64 7\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = getelementptr inbounds float, float addrspace(1)* %16, i64 2\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = getelementptr inbounds float, float addrspace(1)* %16, i64 5\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = getelementptr inbounds float, float addrspace(1)* %16, i64 8\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = mul nuw nsw i32 %12, 9\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %17, %37\l  %39 = fadd contract float %38, 0.000000e+00\l  %40 = getelementptr inbounds float, float addrspace(1)* %36, i64 1\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %23, %41\l  %43 = fadd contract float %39, %42\l  %44 = getelementptr inbounds float, float addrspace(1)* %36, i64 2\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fmul contract float %29, %45\l  %47 = fadd contract float %43, %46\l  %48 = fmul contract float %19, %37\l  %49 = fadd contract float %48, 0.000000e+00\l  %50 = fmul contract float %25, %41\l  %51 = fadd contract float %49, %50\l  %52 = fmul contract float %31, %45\l  %53 = fadd contract float %51, %52\l  %54 = fmul contract float %21, %37\l  %55 = fadd contract float %54, 0.000000e+00\l  %56 = fmul contract float %27, %41\l  %57 = fadd contract float %55, %56\l  %58 = fmul contract float %33, %45\l  %59 = fadd contract float %57, %58\l  %60 = getelementptr inbounds float, float addrspace(1)* %36, i64 3\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = fmul contract float %17, %61\l  %63 = fadd contract float %62, 0.000000e+00\l  %64 = getelementptr inbounds float, float addrspace(1)* %36, i64 4\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fmul contract float %23, %65\l  %67 = fadd contract float %63, %66\l  %68 = getelementptr inbounds float, float addrspace(1)* %36, i64 5\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fmul contract float %29, %69\l  %71 = fadd contract float %67, %70\l  %72 = fmul contract float %19, %61\l  %73 = fadd contract float %72, 0.000000e+00\l  %74 = fmul contract float %25, %65\l  %75 = fadd contract float %73, %74\l  %76 = fmul contract float %31, %69\l  %77 = fadd contract float %75, %76\l  %78 = fmul contract float %21, %61\l  %79 = fadd contract float %78, 0.000000e+00\l  %80 = fmul contract float %27, %65\l  %81 = fadd contract float %79, %80\l  %82 = fmul contract float %33, %69\l  %83 = fadd contract float %81, %82\l  %84 = getelementptr inbounds float, float addrspace(1)* %36, i64 6\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %86 = fmul contract float %17, %85\l  %87 = fadd contract float %86, 0.000000e+00\l  %88 = getelementptr inbounds float, float addrspace(1)* %36, i64 7\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fmul contract float %23, %89\l  %91 = fadd contract float %87, %90\l  %92 = getelementptr inbounds float, float addrspace(1)* %36, i64 8\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fmul contract float %29, %93\l  %95 = fadd contract float %91, %94\l  %96 = fmul contract float %19, %85\l  %97 = fadd contract float %96, 0.000000e+00\l  %98 = fmul contract float %25, %89\l  %99 = fadd contract float %97, %98\l  %100 = fmul contract float %31, %93\l  %101 = fadd contract float %99, %100\l  %102 = fmul contract float %21, %85\l  %103 = fadd contract float %102, 0.000000e+00\l  %104 = fmul contract float %27, %89\l  %105 = fadd contract float %103, %104\l  %106 = fmul contract float %33, %93\l  %107 = fadd contract float %105, %106\l  %108 = getelementptr inbounds float, float addrspace(1)* %1, i64 %15\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = fmul contract float %47, %109\l  %111 = fadd contract float %110, 0.000000e+00\l  %112 = getelementptr inbounds float, float addrspace(1)* %108, i64 1\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fmul contract float %71, %113\l  %115 = fadd contract float %111, %114\l  %116 = getelementptr inbounds float, float addrspace(1)* %108, i64 2\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = fmul contract float %95, %117\l  %119 = fadd contract float %115, %118\l  %120 = getelementptr inbounds float, float addrspace(1)* %108, i64 3\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = getelementptr inbounds float, float addrspace(1)* %108, i64 4\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = getelementptr inbounds float, float addrspace(1)* %108, i64 5\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fmul contract float %53, %121\l  %127 = fadd contract float %126, 0.000000e+00\l  %128 = fmul contract float %77, %123\l  %129 = fadd contract float %127, %128\l  %130 = fmul contract float %101, %125\l  %131 = fadd contract float %129, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %108, i64 6\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = getelementptr inbounds float, float addrspace(1)* %108, i64 7\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = getelementptr inbounds float, float addrspace(1)* %108, i64 8\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fmul contract float %59, %133\l  %139 = fadd contract float %138, 0.000000e+00\l  %140 = fmul contract float %83, %135\l  %141 = fadd contract float %139, %140\l  %142 = fmul contract float %107, %137\l  %143 = fadd contract float %141, %142\l  %144 = fadd contract float %119, %131\l  %145 = fadd contract float %144, %143\l  %146 = fadd contract float %145, -1.000000e+00\l  %147 = fmul contract float %146, 5.000000e-01\l  %148 = fpext float %147 to double\l  %149 = tail call double @llvm.minnum.f64(double %148, double\l... 0x3FEFFFFFFFF24190)\l  %150 = fptrunc double %149 to float\l  %151 = fpext float %150 to double\l  %152 = tail call double @llvm.maxnum.f64(double %151, double\l... 0xBFEFFFFFFFFEA028)\l  %153 = fptrunc double %152 to float\l  %154 = tail call float @llvm.fabs.f32(float %153)\l  %155 = tail call float @llvm.fmuladd.f32(float %154, float -5.000000e-01,\l... float 5.000000e-01)\l  %156 = fmul float %153, %153\l  %157 = fcmp ogt float %154, 5.000000e-01\l  %158 = select i1 %157, float %155, float %156\l  %159 = tail call float @llvm.fmuladd.f32(float %158, float\l... 0x3FA38434E0000000, float 0x3F8BF8BB40000000)\l  %160 = tail call float @llvm.fmuladd.f32(float %158, float %159, float\l... 0x3FA0698780000000)\l  %161 = tail call float @llvm.fmuladd.f32(float %158, float %160, float\l... 0x3FA6C83620000000)\l  %162 = tail call float @llvm.fmuladd.f32(float %158, float %161, float\l... 0x3FB3337900000000)\l  %163 = tail call float @llvm.fmuladd.f32(float %158, float %162, float\l... 0x3FC5555580000000)\l  %164 = fmul float %158, %163\l  %165 = tail call float @llvm.sqrt.f32(float %158)\l  %166 = tail call float @llvm.fmuladd.f32(float %165, float %164, float %165)\l  %167 = fmul float %166, 2.000000e+00\l  %168 = fsub float 0x400921FB60000000, %167\l  %169 = fcmp olt float %153, 0.000000e+00\l  %170 = select i1 %169, float %168, float %167\l  %171 = tail call float @llvm.fmuladd.f32(float %153, float %164, float %153)\l  %172 = fsub float 0x3FF921FB60000000, %171\l  %173 = select i1 %157, float %170, float %172\l  %174 = sext i32 %13 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %0, i64 %174\l  store float %173, float addrspace(1)* %175, align 4, !tbaa !7\l  ret void\l}"];
}
