digraph "CFG for '_Z5gpuItPfS_S_iiiff' function" {
	label="CFG for '_Z5gpuItPfS_S_iiiff' function";

	Node0x5f6be20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = mul nsw i32 %4, %3\l  %19 = mul nsw i32 %18, %5\l  %20 = icmp slt i32 %17, %19\l  br i1 %20, label %21, label %229\l|{<s0>T|<s1>F}}"];
	Node0x5f6be20:s0 -> Node0x5f6de70;
	Node0x5f6be20:s1 -> Node0x5f6df00;
	Node0x5f6de70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%21:\l21:                                               \l  %22 = icmp eq i32 %17, 0\l  br i1 %22, label %23, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5f6de70:s0 -> Node0x5f6e0d0;
	Node0x5f6de70:s1 -> Node0x5f6e120;
	Node0x5f6e0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%23:\l23:                                               \l  %24 = load float, float addrspace(1)* %1, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %27 = fadd contract float %24, %26\l  %28 = fadd contract float %24, %27\l  %29 = sext i32 %3 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = fadd contract float %31, %28\l  %33 = fmul contract float %24, 4.000000e+00\l  %34 = fsub contract float %32, %33\l  %35 = fmul contract float %34, %6\l  %36 = fadd contract float %24, %35\l  store float %36, float addrspace(1)* %0, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f6e0d0 -> Node0x5f703f0;
	Node0x5f6e120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %3, -1\l  %39 = icmp eq i32 %17, %38\l  br i1 %39, label %40, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5f6e120:s0 -> Node0x5f705d0;
	Node0x5f6e120:s1 -> Node0x5f70620;
	Node0x5f705d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%40:\l40:                                               \l  %41 = sext i32 %17 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = add nsw i32 %17, -1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %48 = fadd contract float %43, %47\l  %49 = fadd contract float %43, %48\l  %50 = add nsw i32 %17, %3\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fadd contract float %53, %49\l  %55 = fmul contract float %43, 4.000000e+00\l  %56 = fsub contract float %54, %55\l  %57 = fmul contract float %56, %6\l  %58 = fadd contract float %43, %57\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f705d0 -> Node0x5f703f0;
	Node0x5f70620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%60:\l60:                                               \l  %61 = add nsw i32 %18, -1\l  %62 = icmp eq i32 %17, %61\l  br i1 %62, label %63, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5f70620:s0 -> Node0x5f71460;
	Node0x5f70620:s1 -> Node0x5f714b0;
	Node0x5f71460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%63:\l63:                                               \l  %64 = sext i32 %17 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %67 = add nsw i32 %17, -1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = fadd contract float %66, %70\l  %72 = sub nsw i32 %17, %3\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %76 = fadd contract float %71, %75\l  %77 = fadd contract float %66, %76\l  %78 = fmul contract float %66, 4.000000e+00\l  %79 = fsub contract float %77, %78\l  %80 = fmul contract float %79, %6\l  %81 = fadd contract float %66, %80\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  store float %81, float addrspace(1)* %82, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f71460 -> Node0x5f703f0;
	Node0x5f714b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%83:\l83:                                               \l  %84 = sub nsw i32 %18, %3\l  %85 = icmp eq i32 %17, %84\l  br i1 %85, label %86, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5f714b0:s0 -> Node0x5f724c0;
	Node0x5f714b0:s1 -> Node0x5f72510;
	Node0x5f724c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%86:\l86:                                               \l  %87 = sext i32 %17 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = add nsw i32 %17, 1\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %94 = fadd contract float %89, %93\l  %95 = sub nsw i32 %17, %3\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %99 = fadd contract float %94, %98\l  %100 = fadd contract float %89, %99\l  %101 = fmul contract float %89, 4.000000e+00\l  %102 = fsub contract float %100, %101\l  %103 = fmul contract float %102, %6\l  %104 = fadd contract float %89, %103\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  store float %104, float addrspace(1)* %105, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f724c0 -> Node0x5f703f0;
	Node0x5f72510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%106:\l106:                                              \l  %107 = srem i32 %17, %3\l  %108 = icmp eq i32 %107, 0\l  br i1 %108, label %109, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5f72510:s0 -> Node0x5f73350;
	Node0x5f72510:s1 -> Node0x5f733a0;
	Node0x5f73350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%109:\l109:                                              \l  %110 = sext i32 %17 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %113 = add nsw i32 %17, 1\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %117 = fadd contract float %112, %116\l  %118 = sub nsw i32 %17, %3\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = fadd contract float %117, %121\l  %123 = add nsw i32 %17, %3\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %127 = fadd contract float %122, %126\l  %128 = fmul contract float %112, 4.000000e+00\l  %129 = fsub contract float %127, %128\l  %130 = fmul contract float %129, %6\l  %131 = fadd contract float %112, %130\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  store float %131, float addrspace(1)* %132, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f73350 -> Node0x5f703f0;
	Node0x5f733a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%133:\l133:                                              \l  %134 = icmp eq i32 %107, %38\l  br i1 %134, label %135, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5f733a0:s0 -> Node0x5f747a0;
	Node0x5f733a0:s1 -> Node0x5f747f0;
	Node0x5f747a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%135:\l135:                                              \l  %136 = sext i32 %17 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %139 = add nsw i32 %17, -1\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %1, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %143 = fadd contract float %138, %142\l  %144 = sub nsw i32 %17, %3\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %1, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %148 = fadd contract float %143, %147\l  %149 = add nsw i32 %17, %3\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %1, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %153 = fadd contract float %148, %152\l  %154 = fmul contract float %138, 4.000000e+00\l  %155 = fsub contract float %153, %154\l  %156 = fmul contract float %155, %6\l  %157 = fadd contract float %138, %156\l  %158 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  store float %157, float addrspace(1)* %158, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f747a0 -> Node0x5f703f0;
	Node0x5f747f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%159:\l159:                                              \l  %160 = sub nsw i32 %17, %3\l  %161 = icmp slt i32 %160, 0\l  br i1 %161, label %162, label %186\l|{<s0>T|<s1>F}}"];
	Node0x5f747f0:s0 -> Node0x5f75850;
	Node0x5f747f0:s1 -> Node0x5f758a0;
	Node0x5f75850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%162:\l162:                                              \l  %163 = sext i32 %17 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %1, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %166 = add nsw i32 %17, 1\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %1, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %170 = add nsw i32 %17, -1\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %1, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %174 = fadd contract float %169, %173\l  %175 = fadd contract float %165, %174\l  %176 = add nsw i32 %17, %3\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %1, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %180 = fadd contract float %179, %175\l  %181 = fmul contract float %165, 4.000000e+00\l  %182 = fsub contract float %180, %181\l  %183 = fmul contract float %182, %6\l  %184 = fadd contract float %165, %183\l  %185 = getelementptr inbounds float, float addrspace(1)* %0, i64 %163\l  store float %184, float addrspace(1)* %185, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f75850 -> Node0x5f703f0;
	Node0x5f758a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%186:\l186:                                              \l  %187 = add nsw i32 %17, %3\l  %188 = icmp sgt i32 %187, %18\l  %189 = sext i32 %17 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %1, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !7\l  %192 = add nsw i32 %17, 1\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds float, float addrspace(1)* %1, i64 %193\l  %195 = load float, float addrspace(1)* %194, align 4, !tbaa !7\l  %196 = add nsw i32 %17, -1\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %1, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !7\l  %200 = fadd contract float %195, %199\l  %201 = zext i32 %160 to i64\l  %202 = getelementptr inbounds float, float addrspace(1)* %1, i64 %201\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7\l  %204 = fadd contract float %200, %203\l  br i1 %188, label %205, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5f758a0:s0 -> Node0x5f77140;
	Node0x5f758a0:s1 -> Node0x5f77190;
	Node0x5f77140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%205:\l205:                                              \l  %206 = fadd contract float %191, %204\l  %207 = fmul contract float %191, 4.000000e+00\l  %208 = fsub contract float %206, %207\l  %209 = fmul contract float %208, %6\l  %210 = fadd contract float %191, %209\l  %211 = getelementptr inbounds float, float addrspace(1)* %0, i64 %189\l  store float %210, float addrspace(1)* %211, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f77140 -> Node0x5f703f0;
	Node0x5f77190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%212:\l212:                                              \l  %213 = sext i32 %187 to i64\l  %214 = getelementptr inbounds float, float addrspace(1)* %1, i64 %213\l  %215 = load float, float addrspace(1)* %214, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %216 = fadd contract float %204, %215\l  %217 = fmul contract float %191, 4.000000e+00\l  %218 = fsub contract float %216, %217\l  %219 = fmul contract float %218, %6\l  %220 = fadd contract float %191, %219\l  %221 = getelementptr inbounds float, float addrspace(1)* %0, i64 %189\l  store float %220, float addrspace(1)* %221, align 4, !tbaa !7\l  br label %222\l}"];
	Node0x5f77190 -> Node0x5f703f0;
	Node0x5f703f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%222:\l222:                                              \l  %223 = phi i64 [ %41, %40 ], [ %87, %86 ], [ %136, %135 ], [ %189, %205 ], [\l... %189, %212 ], [ %163, %162 ], [ %110, %109 ], [ %64, %63 ], [ 0, %23 ]\l  %224 = getelementptr inbounds float, float addrspace(1)* %2, i64 %223\l  %225 = load float, float addrspace(1)* %224, align 4, !tbaa !7\l  %226 = fcmp contract une float %225, %7\l  br i1 %226, label %227, label %229\l|{<s0>T|<s1>F}}"];
	Node0x5f703f0:s0 -> Node0x5f78090;
	Node0x5f703f0:s1 -> Node0x5f6df00;
	Node0x5f78090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%227:\l227:                                              \l  %228 = getelementptr inbounds float, float addrspace(1)* %0, i64 %223\l  store float %225, float addrspace(1)* %228, align 4, !tbaa !7\l  br label %229\l}"];
	Node0x5f78090 -> Node0x5f6df00;
	Node0x5f6df00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%229:\l229:                                              \l  ret void\l}"];
}
