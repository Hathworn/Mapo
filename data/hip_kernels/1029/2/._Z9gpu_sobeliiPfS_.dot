digraph "CFG for '_Z9gpu_sobeliiPfS_' function" {
	label="CFG for '_Z9gpu_sobeliiPfS_' function";

	Node0x4758260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = add nsw i32 %0, -2\l  %23 = icmp slt i32 %13, %22\l  %24 = add nsw i32 %1, -2\l  %25 = icmp slt i32 %21, %24\l  %26 = select i1 %23, i1 %25, i1 false\l  br i1 %26, label %27, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4758260:s0 -> Node0x475be50;
	Node0x4758260:s1 -> Node0x475bee0;
	Node0x475be50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %21, %0\l  %29 = add nsw i32 %28, %13\l  %30 = add nsw i32 %21, 1\l  %31 = mul nsw i32 %30, %0\l  %32 = add nsw i32 %13, 1\l  %33 = add nsw i32 %32, %31\l  %34 = mul nuw nsw i32 %20, 18\l  %35 = add nuw nsw i32 %34, %12\l  %36 = sext i32 %29 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %35\l  store float %38, float addrspace(3)* %39, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ne i32 %20, 15\l  br i1 %40, label %55, label %41\l|{<s0>T|<s1>F}}"];
	Node0x475be50:s0 -> Node0x475d450;
	Node0x475be50:s1 -> Node0x475d4e0;
	Node0x475d4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%41:\l41:                                               \l  %42 = add nsw i32 %29, %0\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = add nuw nsw i32 %35, 18\l  %47 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %46\l  store float %45, float addrspace(3)* %47, align 4, !tbaa !7\l  %48 = shl nsw i32 %0, 1\l  %49 = add nsw i32 %29, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = add nuw nsw i32 %35, 36\l  %54 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %53\l  store float %52, float addrspace(3)* %54, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x475d4e0 -> Node0x475d450;
	Node0x475d450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%55:\l55:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = icmp ne i32 %12, 15\l  br i1 %56, label %70, label %57\l|{<s0>T|<s1>F}}"];
	Node0x475d450:s0 -> Node0x475e200;
	Node0x475d450:s1 -> Node0x475e250;
	Node0x475e250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  %58 = add nsw i32 %29, 1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %62 = add nuw nsw i32 %35, 1\l  %63 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %62\l  store float %61, float addrspace(3)* %63, align 4, !tbaa !7\l  %64 = add nsw i32 %29, 2\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = add nuw nsw i32 %35, 2\l  %69 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %68\l  store float %67, float addrspace(3)* %69, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x475e250 -> Node0x475e200;
	Node0x475e200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = select i1 %40, i1 true, i1 %56\l  br i1 %71, label %100, label %72\l|{<s0>T|<s1>F}}"];
	Node0x475e200:s0 -> Node0x475f090;
	Node0x475e200:s1 -> Node0x475f0e0;
	Node0x475f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%72:\l72:                                               \l  %73 = add nsw i32 %29, %0\l  %74 = add nsw i32 %73, 1\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = add nuw nsw i32 %35, 19\l  %79 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %78\l  store float %77, float addrspace(3)* %79, align 4, !tbaa !7\l  %80 = shl nsw i32 %0, 1\l  %81 = add nsw i32 %29, %80\l  %82 = add nsw i32 %81, 1\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %86 = add nuw nsw i32 %35, 37\l  %87 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %86\l  store float %85, float addrspace(3)* %87, align 4, !tbaa !7\l  %88 = add nsw i32 %73, 2\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = add nuw nsw i32 %35, 20\l  %93 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %92\l  store float %91, float addrspace(3)* %93, align 4, !tbaa !7\l  %94 = add nsw i32 %81, 2\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = add nuw nsw i32 %35, 38\l  %99 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ9gpu_sobeliiPfS_E8sh_block, i32 0, i32 %98\l  store float %97, float addrspace(3)* %99, align 4, !tbaa !7\l  br label %100\l}"];
	Node0x475f0e0 -> Node0x475f090;
	Node0x475f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%100:\l100:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %101 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %102 = fadd contract float %101, 0.000000e+00\l  %103 = getelementptr inbounds float, float addrspace(3)* %39, i32 1\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !7\l  %105 = fmul contract float %104, 0.000000e+00\l  %106 = fadd contract float %102, %105\l  %107 = getelementptr inbounds float, float addrspace(3)* %39, i32 2\l  %108 = load float, float addrspace(3)* %107, align 4, !tbaa !7\l  %109 = fsub contract float %106, %108\l  %110 = getelementptr inbounds float, float addrspace(3)* %39, i32 18\l  %111 = load float, float addrspace(3)* %110, align 4, !tbaa !7\l  %112 = fmul contract float %111, 2.000000e+00\l  %113 = fadd contract float %109, %112\l  %114 = getelementptr inbounds float, float addrspace(3)* %39, i32 19\l  %115 = load float, float addrspace(3)* %114, align 4, !tbaa !7\l  %116 = fmul contract float %115, 0.000000e+00\l  %117 = fadd contract float %113, %116\l  %118 = getelementptr inbounds float, float addrspace(3)* %39, i32 20\l  %119 = load float, float addrspace(3)* %118, align 4, !tbaa !7\l  %120 = fmul contract float %119, 2.000000e+00\l  %121 = fsub contract float %117, %120\l  %122 = getelementptr inbounds float, float addrspace(3)* %39, i32 36\l  %123 = load float, float addrspace(3)* %122, align 4, !tbaa !7\l  %124 = fadd contract float %123, %121\l  %125 = getelementptr inbounds float, float addrspace(3)* %39, i32 37\l  %126 = load float, float addrspace(3)* %125, align 4, !tbaa !7\l  %127 = fmul contract float %126, 0.000000e+00\l  %128 = fadd contract float %124, %127\l  %129 = getelementptr inbounds float, float addrspace(3)* %39, i32 38\l  %130 = load float, float addrspace(3)* %129, align 4, !tbaa !7\l  %131 = fsub contract float %128, %130\l  %132 = fmul contract float %104, 2.000000e+00\l  %133 = fadd contract float %102, %132\l  %134 = fadd contract float %108, %133\l  %135 = fmul contract float %111, 0.000000e+00\l  %136 = fadd contract float %134, %135\l  %137 = fadd contract float %136, %116\l  %138 = fmul contract float %119, 0.000000e+00\l  %139 = fadd contract float %137, %138\l  %140 = fsub contract float %139, %123\l  %141 = fmul contract float %126, 2.000000e+00\l  %142 = fsub contract float %140, %141\l  %143 = fsub contract float %142, %130\l  %144 = fmul contract float %131, %131\l  %145 = fmul contract float %143, %143\l  %146 = fadd contract float %144, %145\l  %147 = fcmp olt float %146, 0x39F0000000000000\l  %148 = select i1 %147, float 0x41F0000000000000, float 1.000000e+00\l  %149 = fmul float %146, %148\l  %150 = tail call float @llvm.sqrt.f32(float %149)\l  %151 = bitcast float %150 to i32\l  %152 = add nsw i32 %151, -1\l  %153 = bitcast i32 %152 to float\l  %154 = add nsw i32 %151, 1\l  %155 = bitcast i32 %154 to float\l  %156 = tail call i1 @llvm.amdgcn.class.f32(float %149, i32 608)\l  %157 = select i1 %147, float 0x3EF0000000000000, float 1.000000e+00\l  %158 = fneg float %155\l  %159 = tail call float @llvm.fma.f32(float %158, float %150, float %149)\l  %160 = fcmp ogt float %159, 0.000000e+00\l  %161 = fneg float %153\l  %162 = tail call float @llvm.fma.f32(float %161, float %150, float %149)\l  %163 = fcmp ole float %162, 0.000000e+00\l  %164 = select i1 %163, float %153, float %150\l  %165 = select i1 %160, float %155, float %164\l  %166 = fmul float %157, %165\l  %167 = select i1 %156, float %149, float %166\l  %168 = sext i32 %33 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %3, i64 %168\l  store float %167, float addrspace(1)* %169, align 4, !tbaa !7\l  br label %170\l}"];
	Node0x475f090 -> Node0x475bee0;
	Node0x475bee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  ret void\l}"];
}
