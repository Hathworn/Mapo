; ModuleID = '../data/hip_kernels/4012/0/main.cu'
source_filename = "../data/hip_kernels/4012/0/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z19convolutionParallelPhS_jjii(i8 addrspace(1)* nocapture readonly %0, i8 addrspace(1)* nocapture writeonly %1, i32 %2, i32 %3, i32 %4, i32 %5) local_unnamed_addr #0 {
  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4
  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*
  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5
  %12 = zext i16 %11 to i32
  %13 = mul i32 %7, %12
  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %15 = add i32 %13, %14
  %16 = sub i32 %3, %5
  %17 = add i32 %16, 1
  %18 = add i32 %2, 1
  %19 = sub i32 %18, %5
  %20 = shl i32 %19, 2
  %21 = mul i32 %20, %17
  %22 = icmp slt i32 %15, %21
  br i1 %22, label %23, label %150

23:                                               ; preds = %6
  %24 = shl nsw i32 %17, 2
  %25 = shl i32 %3, 2
  %26 = icmp eq i32 %5, 3
  %27 = icmp eq i32 %5, 5
  %28 = icmp eq i32 %5, 7
  %29 = shl i32 %3, 2
  %30 = add i32 %29, 4
  %31 = shl i32 %3, 2
  %32 = add i32 %31, 8
  %33 = shl i32 %3, 3
  %34 = shl i32 %3, 3
  %35 = shl i32 %3, 3
  %36 = add nuw nsw i32 %35, 4
  %37 = add i32 %33, 8
  %38 = shl i32 %3, 2
  %39 = add i32 %38, 4
  %40 = shl i32 %3, 2
  %41 = add i32 %40, 8
  %42 = shl i32 %3, 2
  %43 = add i32 %42, 12
  %44 = shl i32 %3, 2
  %45 = add i32 %44, 16
  %46 = shl i32 %3, 3
  %47 = shl i32 %3, 3
  %48 = shl i32 %3, 3
  %49 = add nuw nsw i32 %48, 4
  %50 = shl i32 %3, 3
  %51 = add i32 %50, 8
  %52 = shl i32 %3, 3
  %53 = add i32 %52, 12
  %54 = add i32 %46, 16
  %55 = mul i32 %3, 12
  %56 = mul i32 %3, 12
  %57 = add i32 %56, 4
  %58 = mul i32 %3, 12
  %59 = add i32 %58, 8
  %60 = mul i32 %3, 12
  %61 = add i32 %60, 12
  %62 = mul i32 %3, 12
  %63 = add i32 %62, 16
  %64 = shl i32 %3, 4
  %65 = shl i32 %3, 4
  %66 = shl i32 %3, 4
  %67 = add nuw nsw i32 %66, 4
  %68 = shl i32 %3, 4
  %69 = add nuw nsw i32 %68, 8
  %70 = shl i32 %3, 4
  %71 = add nuw nsw i32 %70, 12
  %72 = add i32 %64, 16
  %73 = shl i32 %3, 2
  %74 = add i32 %73, 4
  %75 = shl i32 %3, 2
  %76 = add i32 %75, 8
  %77 = shl i32 %3, 2
  %78 = add i32 %77, 12
  %79 = shl i32 %3, 2
  %80 = add i32 %79, 16
  %81 = shl i32 %3, 2
  %82 = add i32 %81, 20
  %83 = shl i32 %3, 2
  %84 = add i32 %83, 24
  %85 = shl i32 %3, 3
  %86 = shl i32 %3, 3
  %87 = shl i32 %3, 3
  %88 = add nuw nsw i32 %87, 4
  %89 = shl i32 %3, 3
  %90 = add i32 %89, 8
  %91 = shl i32 %3, 3
  %92 = add i32 %91, 12
  %93 = shl i32 %3, 3
  %94 = add i32 %93, 16
  %95 = shl i32 %3, 3
  %96 = add i32 %95, 20
  %97 = add i32 %85, 24
  %98 = mul i32 %3, 12
  %99 = mul i32 %3, 12
  %100 = add i32 %99, 4
  %101 = mul i32 %3, 12
  %102 = add i32 %101, 8
  %103 = mul i32 %3, 12
  %104 = add i32 %103, 12
  %105 = mul i32 %3, 12
  %106 = add i32 %105, 16
  %107 = mul i32 %3, 12
  %108 = add i32 %107, 20
  %109 = mul i32 %3, 12
  %110 = add i32 %109, 24
  %111 = shl i32 %3, 4
  %112 = shl i32 %3, 4
  %113 = shl i32 %3, 4
  %114 = add nuw nsw i32 %113, 4
  %115 = shl i32 %3, 4
  %116 = add nuw nsw i32 %115, 8
  %117 = shl i32 %3, 4
  %118 = add nuw nsw i32 %117, 12
  %119 = shl i32 %3, 4
  %120 = add i32 %119, 16
  %121 = shl i32 %3, 4
  %122 = add i32 %121, 20
  %123 = add i32 %111, 24
  %124 = mul i32 %3, 20
  %125 = mul i32 %3, 20
  %126 = add i32 %125, 4
  %127 = mul i32 %3, 20
  %128 = add i32 %127, 8
  %129 = mul i32 %3, 20
  %130 = add i32 %129, 12
  %131 = mul i32 %3, 20
  %132 = add i32 %131, 16
  %133 = mul i32 %3, 20
  %134 = add i32 %133, 20
  %135 = mul i32 %3, 20
  %136 = add i32 %135, 24
  %137 = mul i32 %3, 24
  %138 = mul i32 %3, 24
  %139 = or i32 %138, 4
  %140 = mul i32 %3, 24
  %141 = add i32 %140, 8
  %142 = mul i32 %3, 24
  %143 = add i32 %142, 12
  %144 = mul i32 %3, 24
  %145 = add i32 %144, 16
  %146 = mul i32 %3, 24
  %147 = add i32 %146, 20
  %148 = mul i32 %3, 24
  %149 = add i32 %148, 24
  br label %151

150:                                              ; preds = %724, %6
  ret void

151:                                              ; preds = %23, %724
  %152 = phi i32 [ %15, %23 ], [ %738, %724 ]
  %153 = freeze i32 %152
  %154 = freeze i32 %24
  %155 = sdiv i32 %153, %154
  %156 = mul i32 %155, %154
  %157 = sub i32 %153, %156
  %158 = mul i32 %25, %155
  %159 = add i32 %158, %157
  br i1 %26, label %160, label %218

160:                                              ; preds = %151
  %161 = zext i32 %159 to i64
  %162 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %161
  %163 = load i8, i8 addrspace(1)* %162, align 1, !tbaa !7
  %164 = uitofp i8 %163 to float
  %165 = add i32 %159, 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %166
  %168 = load i8, i8 addrspace(1)* %167, align 1, !tbaa !7
  %169 = uitofp i8 %168 to float
  %170 = fmul contract float %169, 2.000000e+00
  %171 = fadd contract float %170, %164
  %172 = add i32 %159, 8
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %173
  %175 = load i8, i8 addrspace(1)* %174, align 1, !tbaa !7
  %176 = uitofp i8 %175 to float
  %177 = fsub contract float %171, %176
  %178 = add i32 %25, %159
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %179
  %181 = load i8, i8 addrspace(1)* %180, align 1, !tbaa !7
  %182 = uitofp i8 %181 to float
  %183 = fmul contract float %182, 2.000000e+00
  %184 = fadd contract float %177, %183
  %185 = add i32 %30, %159
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %186
  %188 = load i8, i8 addrspace(1)* %187, align 1, !tbaa !7
  %189 = uitofp i8 %188 to float
  %190 = fmul contract float %189, 2.500000e-01
  %191 = fadd contract float %184, %190
  %192 = add i32 %32, %159
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %193
  %195 = load i8, i8 addrspace(1)* %194, align 1, !tbaa !7
  %196 = uitofp i8 %195 to float
  %197 = fmul contract float %196, -2.000000e+00
  %198 = fadd contract float %191, %197
  %199 = add i32 %34, %159
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %200
  %202 = load i8, i8 addrspace(1)* %201, align 1, !tbaa !7
  %203 = uitofp i8 %202 to float
  %204 = fadd contract float %198, %203
  %205 = add i32 %36, %159
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %206
  %208 = load i8, i8 addrspace(1)* %207, align 1, !tbaa !7
  %209 = uitofp i8 %208 to float
  %210 = fmul contract float %209, -2.000000e+00
  %211 = fadd contract float %204, %210
  %212 = add i32 %37, %159
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %213
  %215 = load i8, i8 addrspace(1)* %214, align 1, !tbaa !7
  %216 = uitofp i8 %215 to float
  %217 = fsub contract float %211, %216
  br label %218

218:                                              ; preds = %160, %151
  %219 = phi float [ 0.000000e+00, %151 ], [ %217, %160 ]
  br i1 %27, label %220, label %387

220:                                              ; preds = %218
  %221 = zext i32 %159 to i64
  %222 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %221
  %223 = load i8, i8 addrspace(1)* %222, align 1, !tbaa !7
  %224 = uitofp i8 %223 to float
  %225 = fmul contract float %224, 5.000000e-01
  %226 = fadd contract float %219, %225
  %227 = add i32 %159, 4
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %228
  %230 = load i8, i8 addrspace(1)* %229, align 1, !tbaa !7
  %231 = uitofp i8 %230 to float
  %232 = fmul contract float %231, 7.500000e-01
  %233 = fadd contract float %226, %232
  %234 = add i32 %159, 8
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %235
  %237 = load i8, i8 addrspace(1)* %236, align 1, !tbaa !7
  %238 = uitofp i8 %237 to float
  %239 = fadd contract float %233, %238
  %240 = add i32 %159, 12
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %241
  %243 = load i8, i8 addrspace(1)* %242, align 1, !tbaa !7
  %244 = uitofp i8 %243 to float
  %245 = fmul contract float %244, -7.500000e-01
  %246 = fadd contract float %239, %245
  %247 = add i32 %159, 16
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %248
  %250 = load i8, i8 addrspace(1)* %249, align 1, !tbaa !7
  %251 = uitofp i8 %250 to float
  %252 = fmul contract float %251, -5.000000e-01
  %253 = fadd contract float %246, %252
  %254 = add i32 %25, %159
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %255
  %257 = load i8, i8 addrspace(1)* %256, align 1, !tbaa !7
  %258 = uitofp i8 %257 to float
  %259 = fmul contract float %258, 7.500000e-01
  %260 = fadd contract float %253, %259
  %261 = add i32 %39, %159
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %262
  %264 = load i8, i8 addrspace(1)* %263, align 1, !tbaa !7
  %265 = uitofp i8 %264 to float
  %266 = fadd contract float %260, %265
  %267 = add i32 %41, %159
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %268
  %270 = load i8, i8 addrspace(1)* %269, align 1, !tbaa !7
  %271 = uitofp i8 %270 to float
  %272 = fmul contract float %271, 2.000000e+00
  %273 = fadd contract float %266, %272
  %274 = add i32 %43, %159
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %275
  %277 = load i8, i8 addrspace(1)* %276, align 1, !tbaa !7
  %278 = uitofp i8 %277 to float
  %279 = fsub contract float %273, %278
  %280 = add i32 %45, %159
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %281
  %283 = load i8, i8 addrspace(1)* %282, align 1, !tbaa !7
  %284 = uitofp i8 %283 to float
  %285 = fmul contract float %284, -7.500000e-01
  %286 = fadd contract float %279, %285
  %287 = add i32 %47, %159
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %288
  %290 = load i8, i8 addrspace(1)* %289, align 1, !tbaa !7
  %291 = uitofp i8 %290 to float
  %292 = fadd contract float %286, %291
  %293 = add i32 %49, %159
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %294
  %296 = load i8, i8 addrspace(1)* %295, align 1, !tbaa !7
  %297 = uitofp i8 %296 to float
  %298 = fmul contract float %297, 2.000000e+00
  %299 = fadd contract float %292, %298
  %300 = add i32 %51, %159
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %301
  %303 = load i8, i8 addrspace(1)* %302, align 1, !tbaa !7
  %304 = uitofp i8 %303 to float
  %305 = fmul contract float %304, 2.500000e-01
  %306 = fadd contract float %299, %305
  %307 = add i32 %53, %159
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %308
  %310 = load i8, i8 addrspace(1)* %309, align 1, !tbaa !7
  %311 = uitofp i8 %310 to float
  %312 = fmul contract float %311, -2.000000e+00
  %313 = fadd contract float %306, %312
  %314 = add i32 %54, %159
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %315
  %317 = load i8, i8 addrspace(1)* %316, align 1, !tbaa !7
  %318 = uitofp i8 %317 to float
  %319 = fsub contract float %313, %318
  %320 = add i32 %55, %159
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %321
  %323 = load i8, i8 addrspace(1)* %322, align 1, !tbaa !7
  %324 = uitofp i8 %323 to float
  %325 = fmul contract float %324, 7.500000e-01
  %326 = fadd contract float %319, %325
  %327 = add i32 %57, %159
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %328
  %330 = load i8, i8 addrspace(1)* %329, align 1, !tbaa !7
  %331 = uitofp i8 %330 to float
  %332 = fadd contract float %326, %331
  %333 = add i32 %59, %159
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %334
  %336 = load i8, i8 addrspace(1)* %335, align 1, !tbaa !7
  %337 = uitofp i8 %336 to float
  %338 = fmul contract float %337, -2.000000e+00
  %339 = fadd contract float %332, %338
  %340 = add i32 %61, %159
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %341
  %343 = load i8, i8 addrspace(1)* %342, align 1, !tbaa !7
  %344 = uitofp i8 %343 to float
  %345 = fsub contract float %339, %344
  %346 = add i32 %63, %159
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %347
  %349 = load i8, i8 addrspace(1)* %348, align 1, !tbaa !7
  %350 = uitofp i8 %349 to float
  %351 = fmul contract float %350, -7.500000e-01
  %352 = fadd contract float %345, %351
  %353 = add i32 %65, %159
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %354
  %356 = load i8, i8 addrspace(1)* %355, align 1, !tbaa !7
  %357 = uitofp i8 %356 to float
  %358 = fmul contract float %357, 5.000000e-01
  %359 = fadd contract float %352, %358
  %360 = add i32 %67, %159
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %361
  %363 = load i8, i8 addrspace(1)* %362, align 1, !tbaa !7
  %364 = uitofp i8 %363 to float
  %365 = fmul contract float %364, 7.500000e-01
  %366 = fadd contract float %359, %365
  %367 = add i32 %69, %159
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %368
  %370 = load i8, i8 addrspace(1)* %369, align 1, !tbaa !7
  %371 = uitofp i8 %370 to float
  %372 = fsub contract float %366, %371
  %373 = add i32 %71, %159
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %374
  %376 = load i8, i8 addrspace(1)* %375, align 1, !tbaa !7
  %377 = uitofp i8 %376 to float
  %378 = fmul contract float %377, -7.500000e-01
  %379 = fadd contract float %372, %378
  %380 = add i32 %72, %159
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %381
  %383 = load i8, i8 addrspace(1)* %382, align 1, !tbaa !7
  %384 = uitofp i8 %383 to float
  %385 = fmul contract float %384, -5.000000e-01
  %386 = fadd contract float %379, %385
  br label %387

387:                                              ; preds = %220, %218
  %388 = phi float [ %219, %218 ], [ %386, %220 ]
  br i1 %28, label %389, label %724

389:                                              ; preds = %387
  %390 = zext i32 %159 to i64
  %391 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %390
  %392 = load i8, i8 addrspace(1)* %391, align 1, !tbaa !7
  %393 = uitofp i8 %392 to float
  %394 = fmul contract float %393, 2.500000e-01
  %395 = fadd contract float %388, %394
  %396 = add i32 %159, 4
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %397
  %399 = load i8, i8 addrspace(1)* %398, align 1, !tbaa !7
  %400 = uitofp i8 %399 to float
  %401 = fmul contract float %400, 0x3FD3333340000000
  %402 = fadd contract float %395, %401
  %403 = add i32 %159, 8
  %404 = zext i32 %403 to i64
  %405 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %404
  %406 = load i8, i8 addrspace(1)* %405, align 1, !tbaa !7
  %407 = uitofp i8 %406 to float
  %408 = fmul contract float %407, 5.000000e-01
  %409 = fadd contract float %402, %408
  %410 = add i32 %159, 12
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %411
  %413 = load i8, i8 addrspace(1)* %412, align 1, !tbaa !7
  %414 = uitofp i8 %413 to float
  %415 = fmul contract float %414, 7.500000e-01
  %416 = fadd contract float %409, %415
  %417 = add i32 %159, 16
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %418
  %420 = load i8, i8 addrspace(1)* %419, align 1, !tbaa !7
  %421 = uitofp i8 %420 to float
  %422 = fmul contract float %421, -5.000000e-01
  %423 = fadd contract float %416, %422
  %424 = add i32 %159, 20
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %425
  %427 = load i8, i8 addrspace(1)* %426, align 1, !tbaa !7
  %428 = uitofp i8 %427 to float
  %429 = fmul contract float %428, 0xBFD3333340000000
  %430 = fadd contract float %423, %429
  %431 = add i32 %159, 24
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %432
  %434 = load i8, i8 addrspace(1)* %433, align 1, !tbaa !7
  %435 = uitofp i8 %434 to float
  %436 = fmul contract float %435, -2.500000e-01
  %437 = fadd contract float %430, %436
  %438 = add i32 %25, %159
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %439
  %441 = load i8, i8 addrspace(1)* %440, align 1, !tbaa !7
  %442 = uitofp i8 %441 to float
  %443 = fmul contract float %442, 0x3FD3333340000000
  %444 = fadd contract float %437, %443
  %445 = add i32 %74, %159
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %446
  %448 = load i8, i8 addrspace(1)* %447, align 1, !tbaa !7
  %449 = uitofp i8 %448 to float
  %450 = fmul contract float %449, 5.000000e-01
  %451 = fadd contract float %444, %450
  %452 = add i32 %76, %159
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %453
  %455 = load i8, i8 addrspace(1)* %454, align 1, !tbaa !7
  %456 = uitofp i8 %455 to float
  %457 = fmul contract float %456, 7.500000e-01
  %458 = fadd contract float %451, %457
  %459 = add i32 %78, %159
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %460
  %462 = load i8, i8 addrspace(1)* %461, align 1, !tbaa !7
  %463 = uitofp i8 %462 to float
  %464 = fadd contract float %458, %463
  %465 = add i32 %80, %159
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %466
  %468 = load i8, i8 addrspace(1)* %467, align 1, !tbaa !7
  %469 = uitofp i8 %468 to float
  %470 = fmul contract float %469, -7.500000e-01
  %471 = fadd contract float %464, %470
  %472 = add i32 %82, %159
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %473
  %475 = load i8, i8 addrspace(1)* %474, align 1, !tbaa !7
  %476 = uitofp i8 %475 to float
  %477 = fmul contract float %476, -5.000000e-01
  %478 = fadd contract float %471, %477
  %479 = add i32 %84, %159
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %480
  %482 = load i8, i8 addrspace(1)* %481, align 1, !tbaa !7
  %483 = uitofp i8 %482 to float
  %484 = fmul contract float %483, 0xBFD3333340000000
  %485 = fadd contract float %478, %484
  %486 = add i32 %86, %159
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %487
  %489 = load i8, i8 addrspace(1)* %488, align 1, !tbaa !7
  %490 = uitofp i8 %489 to float
  %491 = fmul contract float %490, 5.000000e-01
  %492 = fadd contract float %485, %491
  %493 = add i32 %88, %159
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %494
  %496 = load i8, i8 addrspace(1)* %495, align 1, !tbaa !7
  %497 = uitofp i8 %496 to float
  %498 = fmul contract float %497, 7.500000e-01
  %499 = fadd contract float %492, %498
  %500 = add i32 %90, %159
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %501
  %503 = load i8, i8 addrspace(1)* %502, align 1, !tbaa !7
  %504 = uitofp i8 %503 to float
  %505 = fadd contract float %499, %504
  %506 = add i32 %92, %159
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %507
  %509 = load i8, i8 addrspace(1)* %508, align 1, !tbaa !7
  %510 = uitofp i8 %509 to float
  %511 = fmul contract float %510, 2.000000e+00
  %512 = fadd contract float %505, %511
  %513 = add i32 %94, %159
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %514
  %516 = load i8, i8 addrspace(1)* %515, align 1, !tbaa !7
  %517 = uitofp i8 %516 to float
  %518 = fsub contract float %512, %517
  %519 = add i32 %96, %159
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %520
  %522 = load i8, i8 addrspace(1)* %521, align 1, !tbaa !7
  %523 = uitofp i8 %522 to float
  %524 = fmul contract float %523, -7.500000e-01
  %525 = fadd contract float %518, %524
  %526 = add i32 %97, %159
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %527
  %529 = load i8, i8 addrspace(1)* %528, align 1, !tbaa !7
  %530 = uitofp i8 %529 to float
  %531 = fmul contract float %530, -5.000000e-01
  %532 = fadd contract float %525, %531
  %533 = add i32 %98, %159
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %534
  %536 = load i8, i8 addrspace(1)* %535, align 1, !tbaa !7
  %537 = uitofp i8 %536 to float
  %538 = fmul contract float %537, 7.500000e-01
  %539 = fadd contract float %532, %538
  %540 = add i32 %100, %159
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %541
  %543 = load i8, i8 addrspace(1)* %542, align 1, !tbaa !7
  %544 = uitofp i8 %543 to float
  %545 = fadd contract float %539, %544
  %546 = add i32 %102, %159
  %547 = zext i32 %546 to i64
  %548 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %547
  %549 = load i8, i8 addrspace(1)* %548, align 1, !tbaa !7
  %550 = uitofp i8 %549 to float
  %551 = fmul contract float %550, 2.000000e+00
  %552 = fadd contract float %545, %551
  %553 = add i32 %104, %159
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %554
  %556 = load i8, i8 addrspace(1)* %555, align 1, !tbaa !7
  %557 = uitofp i8 %556 to float
  %558 = fmul contract float %557, 2.500000e-01
  %559 = fadd contract float %552, %558
  %560 = add i32 %106, %159
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %561
  %563 = load i8, i8 addrspace(1)* %562, align 1, !tbaa !7
  %564 = uitofp i8 %563 to float
  %565 = fmul contract float %564, -2.000000e+00
  %566 = fadd contract float %559, %565
  %567 = add i32 %108, %159
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %568
  %570 = load i8, i8 addrspace(1)* %569, align 1, !tbaa !7
  %571 = uitofp i8 %570 to float
  %572 = fsub contract float %566, %571
  %573 = add i32 %110, %159
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %574
  %576 = load i8, i8 addrspace(1)* %575, align 1, !tbaa !7
  %577 = uitofp i8 %576 to float
  %578 = fmul contract float %577, -7.500000e-01
  %579 = fadd contract float %572, %578
  %580 = add i32 %112, %159
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %581
  %583 = load i8, i8 addrspace(1)* %582, align 1, !tbaa !7
  %584 = uitofp i8 %583 to float
  %585 = fmul contract float %584, 5.000000e-01
  %586 = fadd contract float %579, %585
  %587 = add i32 %114, %159
  %588 = zext i32 %587 to i64
  %589 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %588
  %590 = load i8, i8 addrspace(1)* %589, align 1, !tbaa !7
  %591 = uitofp i8 %590 to float
  %592 = fmul contract float %591, 7.500000e-01
  %593 = fadd contract float %586, %592
  %594 = add i32 %116, %159
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %595
  %597 = load i8, i8 addrspace(1)* %596, align 1, !tbaa !7
  %598 = uitofp i8 %597 to float
  %599 = fadd contract float %593, %598
  %600 = add i32 %118, %159
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %601
  %603 = load i8, i8 addrspace(1)* %602, align 1, !tbaa !7
  %604 = uitofp i8 %603 to float
  %605 = fmul contract float %604, -2.000000e+00
  %606 = fadd contract float %599, %605
  %607 = add i32 %120, %159
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %608
  %610 = load i8, i8 addrspace(1)* %609, align 1, !tbaa !7
  %611 = uitofp i8 %610 to float
  %612 = fsub contract float %606, %611
  %613 = add i32 %122, %159
  %614 = zext i32 %613 to i64
  %615 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %614
  %616 = load i8, i8 addrspace(1)* %615, align 1, !tbaa !7
  %617 = uitofp i8 %616 to float
  %618 = fmul contract float %617, -7.500000e-01
  %619 = fadd contract float %612, %618
  %620 = add i32 %123, %159
  %621 = zext i32 %620 to i64
  %622 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %621
  %623 = load i8, i8 addrspace(1)* %622, align 1, !tbaa !7
  %624 = uitofp i8 %623 to float
  %625 = fmul contract float %624, -5.000000e-01
  %626 = fadd contract float %619, %625
  %627 = add i32 %124, %159
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %628
  %630 = load i8, i8 addrspace(1)* %629, align 1, !tbaa !7
  %631 = uitofp i8 %630 to float
  %632 = fmul contract float %631, 0x3FD3333340000000
  %633 = fadd contract float %626, %632
  %634 = add i32 %126, %159
  %635 = zext i32 %634 to i64
  %636 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %635
  %637 = load i8, i8 addrspace(1)* %636, align 1, !tbaa !7
  %638 = uitofp i8 %637 to float
  %639 = fmul contract float %638, 5.000000e-01
  %640 = fadd contract float %633, %639
  %641 = add i32 %128, %159
  %642 = zext i32 %641 to i64
  %643 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %642
  %644 = load i8, i8 addrspace(1)* %643, align 1, !tbaa !7
  %645 = uitofp i8 %644 to float
  %646 = fmul contract float %645, 7.500000e-01
  %647 = fadd contract float %640, %646
  %648 = add i32 %130, %159
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %649
  %651 = load i8, i8 addrspace(1)* %650, align 1, !tbaa !7
  %652 = uitofp i8 %651 to float
  %653 = fsub contract float %647, %652
  %654 = add i32 %132, %159
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %655
  %657 = load i8, i8 addrspace(1)* %656, align 1, !tbaa !7
  %658 = uitofp i8 %657 to float
  %659 = fmul contract float %658, -7.500000e-01
  %660 = fadd contract float %653, %659
  %661 = add i32 %134, %159
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %662
  %664 = load i8, i8 addrspace(1)* %663, align 1, !tbaa !7
  %665 = uitofp i8 %664 to float
  %666 = fmul contract float %665, -5.000000e-01
  %667 = fadd contract float %660, %666
  %668 = add i32 %136, %159
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %669
  %671 = load i8, i8 addrspace(1)* %670, align 1, !tbaa !7
  %672 = uitofp i8 %671 to float
  %673 = fmul contract float %672, 0xBFD3333340000000
  %674 = fadd contract float %667, %673
  %675 = add i32 %137, %159
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %676
  %678 = load i8, i8 addrspace(1)* %677, align 1, !tbaa !7
  %679 = uitofp i8 %678 to float
  %680 = fmul contract float %679, 2.500000e-01
  %681 = fadd contract float %674, %680
  %682 = add i32 %139, %159
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %683
  %685 = load i8, i8 addrspace(1)* %684, align 1, !tbaa !7
  %686 = uitofp i8 %685 to float
  %687 = fmul contract float %686, 0x3FD3333340000000
  %688 = fadd contract float %681, %687
  %689 = add i32 %141, %159
  %690 = zext i32 %689 to i64
  %691 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %690
  %692 = load i8, i8 addrspace(1)* %691, align 1, !tbaa !7
  %693 = uitofp i8 %692 to float
  %694 = fmul contract float %693, 5.000000e-01
  %695 = fadd contract float %688, %694
  %696 = add i32 %143, %159
  %697 = zext i32 %696 to i64
  %698 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %697
  %699 = load i8, i8 addrspace(1)* %698, align 1, !tbaa !7
  %700 = uitofp i8 %699 to float
  %701 = fmul contract float %700, -7.500000e-01
  %702 = fadd contract float %695, %701
  %703 = add i32 %145, %159
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %704
  %706 = load i8, i8 addrspace(1)* %705, align 1, !tbaa !7
  %707 = uitofp i8 %706 to float
  %708 = fmul contract float %707, -5.000000e-01
  %709 = fadd contract float %702, %708
  %710 = add i32 %147, %159
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %711
  %713 = load i8, i8 addrspace(1)* %712, align 1, !tbaa !7
  %714 = uitofp i8 %713 to float
  %715 = fmul contract float %714, 0xBFD3333340000000
  %716 = fadd contract float %709, %715
  %717 = add i32 %149, %159
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %718
  %720 = load i8, i8 addrspace(1)* %719, align 1, !tbaa !7
  %721 = uitofp i8 %720 to float
  %722 = fmul contract float %721, -2.500000e-01
  %723 = fadd contract float %716, %722
  br label %724

724:                                              ; preds = %389, %387
  %725 = phi float [ %388, %387 ], [ %723, %389 ]
  %726 = fcmp contract ole float %725, 0.000000e+00
  %727 = select contract i1 %726, float 0.000000e+00, float %725
  %728 = fcmp contract oge float %727, 2.550000e+02
  %729 = add nsw i32 %152, 1
  %730 = and i32 %729, 3
  %731 = icmp eq i32 %730, 0
  %732 = select i1 %731, i1 true, i1 %728
  %733 = fptosi float %727 to i32
  %734 = trunc i32 %733 to i8
  %735 = select i1 %732, i8 -1, i8 %734
  %736 = sext i32 %152 to i64
  %737 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %736
  store i8 %735, i8 addrspace(1)* %737, align 1, !tbaa !7
  %738 = add nsw i32 %152, %4
  %739 = icmp slt i32 %738, %21
  br i1 %739, label %151, label %150, !llvm.loop !10
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #1

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
