digraph "CFG for '_Z4poolPhS_jji' function" {
	label="CFG for '_Z4poolPhS_jji' function";

	Node0x60be1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = shl i32 %14, 2\l  %16 = mul i32 %3, %2\l  %17 = icmp ult i32 %15, %16\l  br i1 %17, label %18, label %23\l|{<s0>T|<s1>F}}"];
	Node0x60be1a0:s0 -> Node0x60c0240;
	Node0x60be1a0:s1 -> Node0x60c02d0;
	Node0x60c0240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = shl i32 %3, 1\l  %20 = shl i32 %3, 3\l  %21 = shl i32 %3, 2\l  %22 = shl nsw i32 %4, 2\l  br label %24\l}"];
	Node0x60c0240 -> Node0x60c06b0;
	Node0x60c02d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x60c06b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %15, %18 ], [ %120, %24 ]\l  %26 = freeze i32 %25\l  %27 = freeze i32 %19\l  %28 = udiv i32 %26, %27\l  %29 = mul i32 %28, %27\l  %30 = sub i32 %26, %29\l  %31 = shl i32 %30, 1\l  %32 = mul i32 %20, %28\l  %33 = add i32 %32, %31\l  %34 = add i32 %33, 4\l  %35 = add i32 %33, %21\l  %36 = add i32 %35, 4\l  %37 = sext i32 %33 to i64\l  %38 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %37\l  %39 = load i8, i8 addrspace(1)* %38, align 1, !tbaa !7\l  %40 = sext i32 %34 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7\l  %43 = sext i32 %35 to i64\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7\l  %46 = sext i32 %36 to i64\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %46\l  %48 = load i8, i8 addrspace(1)* %47, align 1, !tbaa !7\l  %49 = or i32 %33, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7\l  %53 = add i32 %33, 5\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7\l  %57 = or i32 %35, 1\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !7\l  %61 = add i32 %35, 5\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %62\l  %64 = load i8, i8 addrspace(1)* %63, align 1, !tbaa !7\l  %65 = add nsw i32 %33, 2\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !7\l  %69 = add i32 %33, 6\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %70\l  %72 = load i8, i8 addrspace(1)* %71, align 1, !tbaa !7\l  %73 = add nsw i32 %35, 2\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !7\l  %77 = add i32 %35, 6\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !7\l  %81 = add nsw i32 %33, 3\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %82\l  %84 = load i8, i8 addrspace(1)* %83, align 1, !tbaa !7\l  %85 = add i32 %33, 7\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %86\l  %88 = load i8, i8 addrspace(1)* %87, align 1, !tbaa !7\l  %89 = add nsw i32 %35, 3\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %90\l  %92 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !7\l  %93 = add i32 %35, 7\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %94\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !7\l  %97 = tail call i8 @llvm.umax.i8(i8 %42, i8 %39)\l  %98 = tail call i8 @llvm.umax.i8(i8 %56, i8 %52)\l  %99 = tail call i8 @llvm.umax.i8(i8 %72, i8 %68)\l  %100 = tail call i8 @llvm.umax.i8(i8 %88, i8 %84)\l  %101 = tail call i8 @llvm.umax.i8(i8 %45, i8 %97)\l  %102 = tail call i8 @llvm.umax.i8(i8 %60, i8 %98)\l  %103 = tail call i8 @llvm.umax.i8(i8 %76, i8 %99)\l  %104 = tail call i8 @llvm.umax.i8(i8 %92, i8 %100)\l  %105 = tail call i8 @llvm.umax.i8(i8 %48, i8 %101)\l  %106 = tail call i8 @llvm.umax.i8(i8 %64, i8 %102)\l  %107 = tail call i8 @llvm.umax.i8(i8 %80, i8 %103)\l  %108 = tail call i8 @llvm.umax.i8(i8 %96, i8 %104)\l  %109 = sext i32 %25 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %109\l  store i8 %105, i8 addrspace(1)* %110, align 1, !tbaa !7\l  %111 = or i32 %25, 1\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %112\l  store i8 %106, i8 addrspace(1)* %113, align 1, !tbaa !7\l  %114 = or i32 %25, 2\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %115\l  store i8 %107, i8 addrspace(1)* %116, align 1, !tbaa !7\l  %117 = or i32 %25, 3\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %118\l  store i8 %108, i8 addrspace(1)* %119, align 1, !tbaa !7\l  %120 = add nsw i32 %25, %22\l  %121 = icmp ult i32 %120, %16\l  br i1 %121, label %24, label %23, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x60c06b0:s0 -> Node0x60c06b0;
	Node0x60c06b0:s1 -> Node0x60c02d0;
}
