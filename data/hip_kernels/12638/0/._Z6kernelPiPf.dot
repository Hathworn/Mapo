digraph "CFG for '_Z6kernelPiPf' function" {
	label="CFG for '_Z6kernelPiPf' function";

	Node0x5bb80a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul i32 %8, %7\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = shl nsw i32 %11, 1\l  %13 = add nuw nsw i32 %12, 1\l  %14 = sext i32 %12 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %17 = fpext float %16 to double\l  %18 = sext i32 %13 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = fpext float %20 to double\l  %22 = fmul contract double %17, %17\l  %23 = fmul contract double %21, %21\l  %24 = fadd contract double %22, %23\l  %25 = fcmp contract ole double %24, 1.000000e+00\l  %26 = sext i32 %11 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = zext i1 %25 to i32\l  store i32 %28, i32 addrspace(1)* %27, align 4, !tbaa !11\l  ret void\l}"];
}
