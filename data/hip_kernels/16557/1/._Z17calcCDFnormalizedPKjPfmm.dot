digraph "CFG for '_Z17calcCDFnormalizedPKjPfmm' function" {
	label="CFG for '_Z17calcCDFnormalizedPKjPfmm' function";

	Node0x4e9db70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = zext i32 %5 to i64\l  %7 = getelementptr inbounds float, float addrspace(1)* %1, i64 %6\l  %8 = load float, float addrspace(1)* %7, align 4, !tbaa !5\l  %9 = add nuw nsw i32 %5, 1\l  %10 = and i32 %9, 7\l  %11 = icmp ult i32 %5, 7\l  br i1 %11, label %14, label %12\l|{<s0>T|<s1>F}}"];
	Node0x4e9db70:s0 -> Node0x4e9f430;
	Node0x4e9db70:s1 -> Node0x4e9f4c0;
	Node0x4e9f4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%12:\l12:                                               \l  %13 = and i32 %9, -8\l  br label %37\l}"];
	Node0x4e9f4c0 -> Node0x4e9f6c0;
	Node0x4e9f430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = phi float [ undef, %4 ], [ %87, %37 ]\l  %16 = phi i32 [ 0, %4 ], [ %88, %37 ]\l  %17 = phi float [ %8, %4 ], [ %87, %37 ]\l  %18 = icmp eq i32 %10, 0\l  br i1 %18, label %31, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4e9f430:s0 -> Node0x4e9ffd0;
	Node0x4e9f430:s1 -> Node0x4ea0020;
	Node0x4ea0020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %28, %19 ], [ %16, %14 ]\l  %21 = phi float [ %27, %19 ], [ %17, %14 ]\l  %22 = phi i32 [ %29, %19 ], [ 0, %14 ]\l  %23 = zext i32 %20 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %26 = uitofp i32 %25 to float\l  %27 = fadd contract float %21, %26\l  %28 = add nuw nsw i32 %20, 1\l  %29 = add i32 %22, 1\l  %30 = icmp eq i32 %29, %10\l  br i1 %30, label %31, label %19, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4ea0020:s0 -> Node0x4e9ffd0;
	Node0x4ea0020:s1 -> Node0x4ea0020;
	Node0x4e9ffd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = phi float [ %15, %14 ], [ %27, %19 ]\l  %33 = mul i64 %3, %2\l  %34 = uitofp i64 %33 to float\l  %35 = fdiv contract float 1.000000e+00, %34\l  %36 = fmul contract float %35, %32\l  store float %36, float addrspace(1)* %7, align 4, !tbaa !5\l  ret void\l}"];
	Node0x4e9f6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %12 ], [ %88, %37 ]\l  %39 = phi float [ %8, %12 ], [ %87, %37 ]\l  %40 = phi i32 [ 0, %12 ], [ %89, %37 ]\l  %41 = zext i32 %38 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %44 = uitofp i32 %43 to float\l  %45 = fadd contract float %39, %44\l  %46 = or i32 %38, 1\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %50 = uitofp i32 %49 to float\l  %51 = fadd contract float %45, %50\l  %52 = or i32 %38, 2\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %56 = uitofp i32 %55 to float\l  %57 = fadd contract float %51, %56\l  %58 = or i32 %38, 3\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %62 = uitofp i32 %61 to float\l  %63 = fadd contract float %57, %62\l  %64 = or i32 %38, 4\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %68 = uitofp i32 %67 to float\l  %69 = fadd contract float %63, %68\l  %70 = or i32 %38, 5\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %74 = uitofp i32 %73 to float\l  %75 = fadd contract float %69, %74\l  %76 = or i32 %38, 6\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %80 = uitofp i32 %79 to float\l  %81 = fadd contract float %75, %80\l  %82 = or i32 %38, 7\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %86 = uitofp i32 %85 to float\l  %87 = fadd contract float %81, %86\l  %88 = add nuw nsw i32 %38, 8\l  %89 = add i32 %40, 8\l  %90 = icmp eq i32 %89, %13\l  br i1 %90, label %14, label %37, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4e9f6c0:s0 -> Node0x4e9f430;
	Node0x4e9f6c0:s1 -> Node0x4e9f6c0;
}
