digraph "CFG for '_Z11hotspotOpt1PfS_S_fiiifffffff' function" {
	label="CFG for '_Z11hotspotOpt1PfS_S_fiiifffffff' function";

	Node0x4dea890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%14:\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %25 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = mul i32 %24, %28\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %31 = add i32 %29, %30\l  %32 = mul nsw i32 %31, %4\l  %33 = add nsw i32 %32, %23\l  %34 = mul nsw i32 %5, %4\l  %35 = icmp eq i32 %23, 0\l  %36 = add nsw i32 %33, -1\l  %37 = select i1 %35, i32 %32, i32 %36\l  %38 = add nsw i32 %4, -1\l  %39 = icmp ne i32 %23, %38\l  %40 = zext i1 %39 to i32\l  %41 = add nsw i32 %33, %40\l  %42 = icmp eq i32 %31, 0\l  %43 = select i1 %42, i32 0, i32 %4\l  %44 = sub nsw i32 %33, %43\l  %45 = add nsw i32 %5, -1\l  %46 = icmp eq i32 %31, %45\l  %47 = select i1 %46, i32 0, i32 %4\l  %48 = add nsw i32 %33, %47\l  %49 = sext i32 %33 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = add nsw i32 %33, %34\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %51, %13\l  %57 = sext i32 %37 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = fmul contract float %59, %8\l  %61 = fadd contract float %56, %60\l  %62 = sext i32 %41 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %64, %7\l  %66 = fadd contract float %61, %65\l  %67 = sext i32 %48 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fmul contract float %69, %10\l  %71 = fadd contract float %66, %70\l  %72 = sext i32 %44 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = fmul contract float %74, %9\l  %76 = fadd contract float %71, %75\l  %77 = fmul contract float %51, %12\l  %78 = fadd contract float %77, %76\l  %79 = fmul contract float %55, %11\l  %80 = fadd contract float %79, %78\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %82, %3\l  %84 = fadd contract float %83, %80\l  %85 = fmul contract float %11, 8.000000e+01\l  %86 = fadd contract float %85, %84\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nsw i32 %48, %34\l  %89 = add nsw i32 %44, %34\l  %90 = add nsw i32 %41, %34\l  %91 = add nsw i32 %37, %34\l  %92 = icmp sgt i32 %6, 2\l  br i1 %92, label %93, label %167\l|{<s0>T|<s1>F}}"];
	Node0x4dea890:s0 -> Node0x4df2670;
	Node0x4dea890:s1 -> Node0x4df2700;
	Node0x4df2670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%93:\l93:                                               \l  %94 = and i32 %6, 1\l  %95 = icmp eq i32 %6, 3\l  br i1 %95, label %99, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4df2670:s0 -> Node0x4df29c0;
	Node0x4df2670:s1 -> Node0x4df2a10;
	Node0x4df2a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%96:\l96:                                               \l  %97 = and i32 %6, -2\l  %98 = add i32 %97, -4\l  br label %205\l}"];
	Node0x4df2a10 -> Node0x4df2cd0;
	Node0x4df29c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%99:\l99:                                               \l  %100 = phi float [ undef, %93 ], [ %217, %205 ]\l  %101 = phi i64 [ undef, %93 ], [ %255, %205 ]\l  %102 = phi float [ undef, %93 ], [ %257, %205 ]\l  %103 = phi float [ undef, %93 ], [ %281, %205 ]\l  %104 = phi i32 [ undef, %93 ], [ %290, %205 ]\l  %105 = phi i32 [ undef, %93 ], [ %291, %205 ]\l  %106 = phi i32 [ undef, %93 ], [ %292, %205 ]\l  %107 = phi i32 [ undef, %93 ], [ %293, %205 ]\l  %108 = phi i32 [ %91, %93 ], [ %293, %205 ]\l  %109 = phi i32 [ %90, %93 ], [ %292, %205 ]\l  %110 = phi i32 [ %89, %93 ], [ %291, %205 ]\l  %111 = phi i32 [ %88, %93 ], [ %290, %205 ]\l  %112 = phi float [ %55, %93 ], [ %257, %205 ]\l  %113 = phi float [ %51, %93 ], [ %217, %205 ]\l  %114 = phi i32 [ %52, %93 ], [ %254, %205 ]\l  %115 = icmp eq i32 %94, 0\l  br i1 %115, label %157, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4df29c0:s0 -> Node0x4df4060;
	Node0x4df29c0:s1 -> Node0x4df40f0;
	Node0x4df40f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%116:\l116:                                              \l  %117 = add nsw i32 %114, %34\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %1, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7\l  %121 = fmul contract float %112, %13\l  %122 = sext i32 %108 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %1, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7\l  %125 = fmul contract float %124, %8\l  %126 = fadd contract float %121, %125\l  %127 = sext i32 %109 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %130 = fmul contract float %129, %7\l  %131 = fadd contract float %126, %130\l  %132 = sext i32 %111 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %1, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = fmul contract float %134, %10\l  %136 = fadd contract float %131, %135\l  %137 = sext i32 %110 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !7\l  %140 = fmul contract float %139, %9\l  %141 = fadd contract float %136, %140\l  %142 = fmul contract float %113, %12\l  %143 = fadd contract float %142, %141\l  %144 = fmul contract float %120, %11\l  %145 = fadd contract float %144, %143\l  %146 = sext i32 %114 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7\l  %149 = fmul contract float %148, %3\l  %150 = fadd contract float %149, %145\l  %151 = fadd contract float %85, %150\l  %152 = getelementptr inbounds float, float addrspace(1)* %2, i64 %146\l  store float %151, float addrspace(1)* %152, align 4, !tbaa !7\l  %153 = add nsw i32 %111, %34\l  %154 = add nsw i32 %110, %34\l  %155 = add nsw i32 %109, %34\l  %156 = add nsw i32 %108, %34\l  br label %157\l}"];
	Node0x4df40f0 -> Node0x4df4060;
	Node0x4df4060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%157:\l157:                                              \l  %158 = phi float [ %100, %99 ], [ %112, %116 ]\l  %159 = phi i64 [ %101, %99 ], [ %118, %116 ]\l  %160 = phi float [ %102, %99 ], [ %120, %116 ]\l  %161 = phi float [ %103, %99 ], [ %144, %116 ]\l  %162 = phi i32 [ %104, %99 ], [ %153, %116 ]\l  %163 = phi i32 [ %105, %99 ], [ %154, %116 ]\l  %164 = phi i32 [ %106, %99 ], [ %155, %116 ]\l  %165 = phi i32 [ %107, %99 ], [ %156, %116 ]\l  %166 = fmul contract float %158, %12\l  br label %167\l}"];
	Node0x4df4060 -> Node0x4df2700;
	Node0x4df2700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%167:\l167:                                              \l  %168 = phi float [ %161, %157 ], [ %79, %14 ]\l  %169 = phi float [ %166, %157 ], [ %77, %14 ]\l  %170 = phi i64 [ %159, %157 ], [ %53, %14 ]\l  %171 = phi float [ %160, %157 ], [ %55, %14 ]\l  %172 = phi i32 [ %162, %157 ], [ %88, %14 ]\l  %173 = phi i32 [ %163, %157 ], [ %89, %14 ]\l  %174 = phi i32 [ %164, %157 ], [ %90, %14 ]\l  %175 = phi i32 [ %165, %157 ], [ %91, %14 ]\l  %176 = fmul contract float %171, %13\l  %177 = sext i32 %175 to i64\l  %178 = getelementptr inbounds float, float addrspace(1)* %1, i64 %177\l  %179 = load float, float addrspace(1)* %178, align 4, !tbaa !7\l  %180 = fmul contract float %179, %8\l  %181 = fadd contract float %176, %180\l  %182 = sext i32 %174 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %1, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !7\l  %185 = fmul contract float %184, %7\l  %186 = fadd contract float %181, %185\l  %187 = sext i32 %172 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %1, i64 %187\l  %189 = load float, float addrspace(1)* %188, align 4, !tbaa !7\l  %190 = fmul contract float %189, %10\l  %191 = fadd contract float %186, %190\l  %192 = sext i32 %173 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %1, i64 %192\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !7\l  %195 = fmul contract float %194, %9\l  %196 = fadd contract float %191, %195\l  %197 = fadd contract float %169, %196\l  %198 = fadd contract float %168, %197\l  %199 = getelementptr inbounds float, float addrspace(1)* %0, i64 %170\l  %200 = load float, float addrspace(1)* %199, align 4, !tbaa !7\l  %201 = fmul contract float %200, %3\l  %202 = fadd contract float %201, %198\l  %203 = fadd contract float %85, %202\l  %204 = getelementptr inbounds float, float addrspace(1)* %2, i64 %170\l  store float %203, float addrspace(1)* %204, align 4, !tbaa !7\l  ret void\l}"];
	Node0x4df2cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%205:\l205:                                              \l  %206 = phi i32 [ %91, %96 ], [ %293, %205 ]\l  %207 = phi i32 [ %90, %96 ], [ %292, %205 ]\l  %208 = phi i32 [ %89, %96 ], [ %291, %205 ]\l  %209 = phi i32 [ %88, %96 ], [ %290, %205 ]\l  %210 = phi float [ %55, %96 ], [ %257, %205 ]\l  %211 = phi float [ %51, %96 ], [ %217, %205 ]\l  %212 = phi i32 [ %52, %96 ], [ %254, %205 ]\l  %213 = phi i32 [ 0, %96 ], [ %294, %205 ]\l  %214 = add nsw i32 %212, %34\l  %215 = sext i32 %214 to i64\l  %216 = getelementptr inbounds float, float addrspace(1)* %1, i64 %215\l  %217 = load float, float addrspace(1)* %216, align 4, !tbaa !7\l  %218 = fmul contract float %210, %13\l  %219 = sext i32 %206 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %1, i64 %219\l  %221 = load float, float addrspace(1)* %220, align 4, !tbaa !7\l  %222 = fmul contract float %221, %8\l  %223 = fadd contract float %218, %222\l  %224 = sext i32 %207 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %1, i64 %224\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !7\l  %227 = fmul contract float %226, %7\l  %228 = fadd contract float %223, %227\l  %229 = sext i32 %209 to i64\l  %230 = getelementptr inbounds float, float addrspace(1)* %1, i64 %229\l  %231 = load float, float addrspace(1)* %230, align 4, !tbaa !7\l  %232 = fmul contract float %231, %10\l  %233 = fadd contract float %228, %232\l  %234 = sext i32 %208 to i64\l  %235 = getelementptr inbounds float, float addrspace(1)* %1, i64 %234\l  %236 = load float, float addrspace(1)* %235, align 4, !tbaa !7\l  %237 = fmul contract float %236, %9\l  %238 = fadd contract float %233, %237\l  %239 = fmul contract float %211, %12\l  %240 = fadd contract float %239, %238\l  %241 = fmul contract float %217, %11\l  %242 = fadd contract float %241, %240\l  %243 = sext i32 %212 to i64\l  %244 = getelementptr inbounds float, float addrspace(1)* %0, i64 %243\l  %245 = load float, float addrspace(1)* %244, align 4, !tbaa !7\l  %246 = fmul contract float %245, %3\l  %247 = fadd contract float %246, %242\l  %248 = fadd contract float %85, %247\l  %249 = getelementptr inbounds float, float addrspace(1)* %2, i64 %243\l  store float %248, float addrspace(1)* %249, align 4, !tbaa !7\l  %250 = add nsw i32 %209, %34\l  %251 = add nsw i32 %208, %34\l  %252 = add nsw i32 %207, %34\l  %253 = add nsw i32 %206, %34\l  %254 = add nsw i32 %214, %34\l  %255 = sext i32 %254 to i64\l  %256 = getelementptr inbounds float, float addrspace(1)* %1, i64 %255\l  %257 = load float, float addrspace(1)* %256, align 4, !tbaa !7\l  %258 = fmul contract float %217, %13\l  %259 = sext i32 %253 to i64\l  %260 = getelementptr inbounds float, float addrspace(1)* %1, i64 %259\l  %261 = load float, float addrspace(1)* %260, align 4, !tbaa !7\l  %262 = fmul contract float %261, %8\l  %263 = fadd contract float %258, %262\l  %264 = sext i32 %252 to i64\l  %265 = getelementptr inbounds float, float addrspace(1)* %1, i64 %264\l  %266 = load float, float addrspace(1)* %265, align 4, !tbaa !7\l  %267 = fmul contract float %266, %7\l  %268 = fadd contract float %263, %267\l  %269 = sext i32 %250 to i64\l  %270 = getelementptr inbounds float, float addrspace(1)* %1, i64 %269\l  %271 = load float, float addrspace(1)* %270, align 4, !tbaa !7\l  %272 = fmul contract float %271, %10\l  %273 = fadd contract float %268, %272\l  %274 = sext i32 %251 to i64\l  %275 = getelementptr inbounds float, float addrspace(1)* %1, i64 %274\l  %276 = load float, float addrspace(1)* %275, align 4, !tbaa !7\l  %277 = fmul contract float %276, %9\l  %278 = fadd contract float %273, %277\l  %279 = fmul contract float %210, %12\l  %280 = fadd contract float %279, %278\l  %281 = fmul contract float %257, %11\l  %282 = fadd contract float %281, %280\l  %283 = sext i32 %214 to i64\l  %284 = getelementptr inbounds float, float addrspace(1)* %0, i64 %283\l  %285 = load float, float addrspace(1)* %284, align 4, !tbaa !7\l  %286 = fmul contract float %285, %3\l  %287 = fadd contract float %286, %282\l  %288 = fadd contract float %85, %287\l  %289 = getelementptr inbounds float, float addrspace(1)* %2, i64 %283\l  store float %288, float addrspace(1)* %289, align 4, !tbaa !7\l  %290 = add nsw i32 %250, %34\l  %291 = add nsw i32 %251, %34\l  %292 = add nsw i32 %252, %34\l  %293 = add nsw i32 %253, %34\l  %294 = add i32 %213, 2\l  %295 = icmp eq i32 %213, %98\l  br i1 %295, label %99, label %205, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4df2cd0:s0 -> Node0x4df29c0;
	Node0x4df2cd0:s1 -> Node0x4df2cd0;
}
