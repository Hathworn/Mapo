digraph "CFG for '_Z10gSetSparsePfPKmPKfi' function" {
	label="CFG for '_Z10gSetSparsePfPKmPKfi' function";

	Node0x48a3620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = icmp sgt i32 %3, 0\l  br i1 %5, label %6, label %24\l|{<s0>T|<s1>F}}"];
	Node0x48a3620:s0 -> Node0x48a35c0;
	Node0x48a3620:s1 -> Node0x48a3da0;
	Node0x48a35c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l6:                                                \l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %11\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  br label %25\l}"];
	Node0x48a35c0 -> Node0x48a5d10;
	Node0x48a3da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x48a5d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ 0, %6 ], [ %38, %37 ]\l  %27 = add i32 %26, %17\l  %28 = add i32 %27, %16\l  %29 = icmp slt i32 %28, %3\l  br i1 %29, label %30, label %37\l|{<s0>T|<s1>F}}"];
	Node0x48a5d10:s0 -> Node0x48a6110;
	Node0x48a5d10:s1 -> Node0x48a5e60;
	Node0x48a6110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%30:\l30:                                               \l  %31 = sext i32 %28 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %31\l  %35 = load i64, i64 addrspace(1)* %34, align 8, !tbaa !20, !amdgpu.noclobber\l... !5\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float %33, float addrspace(1)* %36, align 4, !tbaa !16\l  br label %37\l}"];
	Node0x48a6110 -> Node0x48a5e60;
	Node0x48a5e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = add i32 %23, %26\l  %39 = icmp slt i32 %38, %3\l  br i1 %39, label %25, label %24, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x48a5e60:s0 -> Node0x48a5d10;
	Node0x48a5e60:s1 -> Node0x48a3da0;
}
