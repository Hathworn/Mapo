digraph "CFG for '_Z7gAddRowPfPKfi' function" {
	label="CFG for '_Z7gAddRowPfPKfi' function";

	Node0x5cfc550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%3:\l  %4 = icmp sgt i32 %2, 0\l  br i1 %4, label %5, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5cfc550:s0 -> Node0x5cfcc90;
	Node0x5cfc550:s1 -> Node0x5cfcd20;
	Node0x5cfcc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%5:\l5:                                                \l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul i32 %14, %10\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  br label %24\l}"];
	Node0x5cfcc90 -> Node0x5cfec20;
	Node0x5cfcd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x5cfec20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %5 ], [ %37, %36 ]\l  %26 = add i32 %25, %16\l  %27 = add i32 %26, %15\l  %28 = icmp slt i32 %27, %2\l  br i1 %28, label %29, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5cfec20:s0 -> Node0x5cff020;
	Node0x5cfec20:s1 -> Node0x5cfed70;
	Node0x5cff020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%29:\l29:                                               \l  %30 = sext i32 %27 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fadd contract float %32, %34\l  store float %35, float addrspace(1)* %33, align 4, !tbaa !16\l  br label %36\l}"];
	Node0x5cff020 -> Node0x5cfed70;
	Node0x5cfed70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = add i32 %22, %25\l  %38 = icmp slt i32 %37, %2\l  br i1 %38, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5cfed70:s0 -> Node0x5cfec20;
	Node0x5cfed70:s1 -> Node0x5cfcd20;
}
