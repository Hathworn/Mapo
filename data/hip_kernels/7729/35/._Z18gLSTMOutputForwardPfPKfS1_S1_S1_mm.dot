digraph "CFG for '_Z18gLSTMOutputForwardPfPKfS1_S1_S1_mm' function" {
	label="CFG for '_Z18gLSTMOutputForwardPfPKfS1_S1_S1_mm' function";

	Node0x53f4030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%7:\l  %8 = icmp eq i64 %5, 0\l  br i1 %8, label %27, label %9\l|{<s0>T|<s1>F}}"];
	Node0x53f4030:s0 -> Node0x53f3280;
	Node0x53f4030:s1 -> Node0x53f47f0;
	Node0x53f47f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%9:\l9:                                                \l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp eq i64 %6, 0\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %13 = trunc i64 %6 to i32\l  %14 = mul i32 %13, 3\l  %15 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !4\l  %21 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %22 = zext i16 %21 to i32\l  %23 = udiv i32 %20, %22\l  %24 = mul i32 %23, %22\l  %25 = icmp ugt i32 %20, %24\l  %26 = zext i1 %25 to i32\l  br label %28\l}"];
	Node0x53f47f0 -> Node0x53f6620;
	Node0x53f3280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x53f6620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %9 ], [ %136, %134 ]\l  %30 = add i32 %29, %10\l  %31 = sext i32 %30 to i64\l  %32 = icmp ult i64 %31, %5\l  br i1 %32, label %33, label %134\l|{<s0>T|<s1>F}}"];
	Node0x53f6620:s0 -> Node0x53f51b0;
	Node0x53f6620:s1 -> Node0x53f6770;
	Node0x53f51b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%33:\l33:                                               \l  %34 = mul i64 %31, %6\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %37 = shl i64 %34, 2\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %37\l  br i1 %11, label %134, label %40\l|{<s0>T|<s1>F}}"];
	Node0x53f51b0:s0 -> Node0x53f6770;
	Node0x53f51b0:s1 -> Node0x53f5270;
	Node0x53f5270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %131, %130 ], [ 0, %33 ]\l  %42 = add i32 %41, %12\l  %43 = sext i32 %42 to i64\l  %44 = icmp ult i64 %43, %6\l  br i1 %44, label %45, label %130\l|{<s0>T|<s1>F}}"];
	Node0x53f5270:s0 -> Node0x53f7410;
	Node0x53f5270:s1 -> Node0x53f7140;
	Node0x53f7410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%45:\l45:                                               \l  %46 = add i32 %42, %14\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %38, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !15\l  %50 = getelementptr inbounds float, float addrspace(1)* %39, i64 %47\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !15\l  %52 = fadd contract float %49, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !15\l  %55 = fadd contract float %52, %54\l  %56 = fcmp contract ult float %55, 0.000000e+00\l  br i1 %56, label %74, label %57\l|{<s0>T|<s1>F}}"];
	Node0x53f7410:s0 -> Node0x53f8cc0;
	Node0x53f7410:s1 -> Node0x53f8d50;
	Node0x53f8d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%57:\l57:                                               \l  %58 = fneg contract float %55\l  %59 = fmul float %55, 0xBFF7154760000000\l  %60 = tail call float @llvm.rint.f32(float %59)\l  %61 = fcmp olt float %55, 0xC0562E4300000000\l  %62 = fcmp ogt float %55, 0x4059D1DA00000000\l  %63 = fneg float %59\l  %64 = tail call float @llvm.fma.f32(float %58, float 0x3FF7154760000000,\l... float %63)\l  %65 = tail call float @llvm.fma.f32(float %58, float 0x3E54AE0BE0000000,\l... float %64)\l  %66 = fsub float %59, %60\l  %67 = fadd float %65, %66\l  %68 = tail call float @llvm.exp2.f32(float %67)\l  %69 = fptosi float %60 to i32\l  %70 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 %69)\l  %71 = select i1 %62, float 0.000000e+00, float %70\l  %72 = select i1 %61, float 0x7FF0000000000000, float %71\l  %73 = fpext float %72 to double\l  br label %90\l}"];
	Node0x53f8d50 -> Node0x53fa190;
	Node0x53f8cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%74:\l74:                                               \l  %75 = fmul float %55, 0x3FF7154760000000\l  %76 = tail call float @llvm.rint.f32(float %75)\l  %77 = fcmp ogt float %55, 0x40562E4300000000\l  %78 = fcmp olt float %55, 0xC059D1DA00000000\l  %79 = fneg float %75\l  %80 = tail call float @llvm.fma.f32(float %55, float 0x3FF7154760000000,\l... float %79)\l  %81 = tail call float @llvm.fma.f32(float %55, float 0x3E54AE0BE0000000,\l... float %80)\l  %82 = fsub float %75, %76\l  %83 = fadd float %81, %82\l  %84 = tail call float @llvm.exp2.f32(float %83)\l  %85 = fptosi float %76 to i32\l  %86 = tail call float @llvm.amdgcn.ldexp.f32(float %84, i32 %85)\l  %87 = select i1 %78, float 0.000000e+00, float %86\l  %88 = select i1 %77, float 0x7FF0000000000000, float %87\l  %89 = fpext float %88 to double\l  br label %90\l}"];
	Node0x53f8cc0 -> Node0x53fa190;
	Node0x53fa190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%90:\l90:                                               \l  %91 = phi double [ %89, %74 ], [ %73, %57 ]\l  %92 = phi double [ %89, %74 ], [ 1.000000e+00, %57 ]\l  %93 = fadd contract double %91, 1.000000e+00\l  %94 = fdiv contract double %92, %93\l  %95 = fptrunc double %94 to float\l  %96 = getelementptr inbounds float, float addrspace(1)* %36, i64 %43\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !15\l  %98 = tail call float @llvm.fabs.f32(float %97)\l  %99 = fcmp olt float %98, 6.250000e-01\l  br i1 %99, label %100, label %108\l|{<s0>T|<s1>F}}"];
	Node0x53fa190:s0 -> Node0x53fb540;
	Node0x53fa190:s1 -> Node0x53fb5d0;
	Node0x53fb540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%100:\l100:                                              \l  %101 = fmul float %97, %97\l  %102 = tail call float @llvm.fmuladd.f32(float %101, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %103 = tail call float @llvm.fmuladd.f32(float %101, float %102, float\l... 0xBFAB8389C0000000)\l  %104 = tail call float @llvm.fmuladd.f32(float %101, float %103, float\l... 0x3FC1107040000000)\l  %105 = tail call float @llvm.fmuladd.f32(float %101, float %104, float\l... 0xBFD5555320000000)\l  %106 = fmul float %98, %105\l  %107 = tail call float @llvm.fmuladd.f32(float %101, float %106, float %98)\l  br label %125\l}"];
	Node0x53fb540 -> Node0x53fc0e0;
	Node0x53fb5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%108:\l108:                                              \l  %109 = fmul float %98, 2.000000e+00\l  %110 = fmul float %109, 0x3FF7154760000000\l  %111 = tail call float @llvm.rint.f32(float %110)\l  %112 = fcmp ogt float %109, 0x40562E4300000000\l  %113 = fneg float %110\l  %114 = tail call float @llvm.fma.f32(float %109, float 0x3FF7154760000000,\l... float %113)\l  %115 = tail call float @llvm.fma.f32(float %109, float 0x3E54AE0BE0000000,\l... float %114)\l  %116 = fsub float %110, %111\l  %117 = fadd float %115, %116\l  %118 = tail call float @llvm.exp2.f32(float %117)\l  %119 = fptosi float %111 to i32\l  %120 = tail call float @llvm.amdgcn.ldexp.f32(float %118, i32 %119)\l  %121 = fadd float %120, 1.000000e+00\l  %122 = select i1 %112, float 0x7FF0000000000000, float %121\l  %123 = tail call float @llvm.amdgcn.rcp.f32(float %122)\l  %124 = tail call float @llvm.fmuladd.f32(float %123, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %125\l}"];
	Node0x53fb5d0 -> Node0x53fc0e0;
	Node0x53fc0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%125:\l125:                                              \l  %126 = phi float [ %107, %100 ], [ %124, %108 ]\l  %127 = tail call float @llvm.copysign.f32(float %126, float %97)\l  %128 = fmul contract float %127, %95\l  %129 = getelementptr inbounds float, float addrspace(1)* %35, i64 %43\l  store float %128, float addrspace(1)* %129, align 4, !tbaa !15\l  br label %130\l}"];
	Node0x53fc0e0 -> Node0x53f7140;
	Node0x53f7140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = add i32 %41, %22\l  %132 = sext i32 %131 to i64\l  %133 = icmp ult i64 %132, %6\l  br i1 %133, label %40, label %134, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x53f7140:s0 -> Node0x53f5270;
	Node0x53f7140:s1 -> Node0x53f6770;
	Node0x53f6770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%134:\l134:                                              \l  %135 = add i32 %23, %29\l  %136 = add i32 %135, %26\l  %137 = sext i32 %136 to i64\l  %138 = icmp ult i64 %137, %5\l  br i1 %138, label %28, label %27, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x53f6770:s0 -> Node0x53f6620;
	Node0x53f6770:s1 -> Node0x53f3280;
}
