digraph "CFG for '_Z37cudaComputeAndNormalizeGradientLengthPhPiS0_i' function" {
	label="CFG for '_Z37cudaComputeAndNormalizeGradientLengthPhPiS0_i' function";

	Node0x56957a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %13, %3\l  %15 = add nsw i32 %13, 1\l  %16 = mul nsw i32 %15, %3\l  %17 = icmp slt i32 %14, %16\l  br i1 %17, label %18, label %60\l|{<s0>T|<s1>F}}"];
	Node0x56957a0:s0 -> Node0x56978c0;
	Node0x56957a0:s1 -> Node0x5697950;
	Node0x56978c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%18:\l18:                                               \l  %19 = and i32 %3, 1\l  %20 = icmp eq i32 %19, 0\l  br i1 %20, label %57, label %21\l|{<s0>T|<s1>F}}"];
	Node0x56978c0:s0 -> Node0x5697be0;
	Node0x56978c0:s1 -> Node0x5697c30;
	Node0x5697c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = sext i32 %14 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7\l  %25 = mul nsw i32 %24, %24\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %22\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7\l  %28 = mul nsw i32 %27, %27\l  %29 = add nuw nsw i32 %28, %25\l  %30 = sitofp i32 %29 to float\l  %31 = icmp eq i32 %29, 0\l  %32 = select i1 %31, float 0x41F0000000000000, float 1.000000e+00\l  %33 = fmul float %32, %30\l  %34 = tail call float @llvm.sqrt.f32(float %33)\l  %35 = bitcast float %34 to i32\l  %36 = add nsw i32 %35, -1\l  %37 = bitcast i32 %36 to float\l  %38 = add nsw i32 %35, 1\l  %39 = bitcast i32 %38 to float\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %33, i32 608)\l  %41 = select i1 %31, float 0x3EF0000000000000, float 1.000000e+00\l  %42 = fneg float %39\l  %43 = tail call float @llvm.fma.f32(float %42, float %34, float %33)\l  %44 = fcmp ogt float %43, 0.000000e+00\l  %45 = fneg float %37\l  %46 = tail call float @llvm.fma.f32(float %45, float %34, float %33)\l  %47 = fcmp ole float %46, 0.000000e+00\l  %48 = select i1 %47, float %37, float %34\l  %49 = select i1 %44, float %39, float %48\l  %50 = fmul float %41, %49\l  %51 = select i1 %40, float %33, float %50\l  %52 = fptosi float %51 to i32\l  %53 = tail call i32 @llvm.smin.i32(i32 %52, i32 255)\l  %54 = trunc i32 %53 to i8\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %22\l  store i8 %54, i8 addrspace(1)* %55, align 1, !tbaa !11\l  %56 = add nsw i32 %14, 1\l  br label %57\l}"];
	Node0x5697c30 -> Node0x5697be0;
	Node0x5697be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%57:\l57:                                               \l  %58 = phi i32 [ %14, %18 ], [ %56, %21 ]\l  %59 = icmp eq i32 %3, 1\l  br i1 %59, label %60, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5697be0:s0 -> Node0x5697950;
	Node0x5697be0:s1 -> Node0x569af80;
	Node0x5697950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%60:\l60:                                               \l  ret void\l}"];
	Node0x569af80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ %132, %61 ], [ %58, %57 ]\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7\l  %66 = mul nsw i32 %65, %65\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %63\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7\l  %69 = mul nsw i32 %68, %68\l  %70 = add nuw nsw i32 %69, %66\l  %71 = sitofp i32 %70 to float\l  %72 = icmp eq i32 %70, 0\l  %73 = select i1 %72, float 0x41F0000000000000, float 1.000000e+00\l  %74 = fmul float %73, %71\l  %75 = tail call float @llvm.sqrt.f32(float %74)\l  %76 = bitcast float %75 to i32\l  %77 = add nsw i32 %76, -1\l  %78 = bitcast i32 %77 to float\l  %79 = add nsw i32 %76, 1\l  %80 = bitcast i32 %79 to float\l  %81 = tail call i1 @llvm.amdgcn.class.f32(float %74, i32 608)\l  %82 = select i1 %72, float 0x3EF0000000000000, float 1.000000e+00\l  %83 = fneg float %80\l  %84 = tail call float @llvm.fma.f32(float %83, float %75, float %74)\l  %85 = fcmp ogt float %84, 0.000000e+00\l  %86 = fneg float %78\l  %87 = tail call float @llvm.fma.f32(float %86, float %75, float %74)\l  %88 = fcmp ole float %87, 0.000000e+00\l  %89 = select i1 %88, float %78, float %75\l  %90 = select i1 %85, float %80, float %89\l  %91 = fmul float %82, %90\l  %92 = select i1 %81, float %74, float %91\l  %93 = fptosi float %92 to i32\l  %94 = tail call i32 @llvm.smin.i32(i32 %93, i32 255)\l  %95 = trunc i32 %94 to i8\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %63\l  store i8 %95, i8 addrspace(1)* %96, align 1, !tbaa !11\l  %97 = add nsw i32 %62, 1\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %98\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7\l  %101 = mul nsw i32 %100, %100\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %98\l  %103 = load i32, i32 addrspace(1)* %102, align 4, !tbaa !7\l  %104 = mul nsw i32 %103, %103\l  %105 = add nuw nsw i32 %104, %101\l  %106 = sitofp i32 %105 to float\l  %107 = icmp eq i32 %105, 0\l  %108 = select i1 %107, float 0x41F0000000000000, float 1.000000e+00\l  %109 = fmul float %108, %106\l  %110 = tail call float @llvm.sqrt.f32(float %109)\l  %111 = bitcast float %110 to i32\l  %112 = add nsw i32 %111, -1\l  %113 = bitcast i32 %112 to float\l  %114 = add nsw i32 %111, 1\l  %115 = bitcast i32 %114 to float\l  %116 = tail call i1 @llvm.amdgcn.class.f32(float %109, i32 608)\l  %117 = select i1 %107, float 0x3EF0000000000000, float 1.000000e+00\l  %118 = fneg float %115\l  %119 = tail call float @llvm.fma.f32(float %118, float %110, float %109)\l  %120 = fcmp ogt float %119, 0.000000e+00\l  %121 = fneg float %113\l  %122 = tail call float @llvm.fma.f32(float %121, float %110, float %109)\l  %123 = fcmp ole float %122, 0.000000e+00\l  %124 = select i1 %123, float %113, float %110\l  %125 = select i1 %120, float %115, float %124\l  %126 = fmul float %117, %125\l  %127 = select i1 %116, float %109, float %126\l  %128 = fptosi float %127 to i32\l  %129 = tail call i32 @llvm.smin.i32(i32 %128, i32 255)\l  %130 = trunc i32 %129 to i8\l  %131 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %98\l  store i8 %130, i8 addrspace(1)* %131, align 1, !tbaa !11\l  %132 = add nsw i32 %62, 2\l  %133 = icmp eq i32 %132, %16\l  br i1 %133, label %60, label %61, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x569af80:s0 -> Node0x5697950;
	Node0x569af80:s1 -> Node0x569af80;
}
