digraph "CFG for '_Z8kernel_1iiPfS_' function" {
	label="CFG for '_Z8kernel_1iiPfS_' function";

	Node0x49a5c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = icmp sgt i32 %1, 0\l  br i1 %6, label %7, label %30\l|{<s0>T|<s1>F}}"];
	Node0x49a5c00:s0 -> Node0x49a7050;
	Node0x49a5c00:s1 -> Node0x49a70e0;
	Node0x49a7050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l7:                                                \l  %8 = and i32 %1, 7\l  %9 = icmp ult i32 %1, 8\l  br i1 %9, label %12, label %10\l|{<s0>T|<s1>F}}"];
	Node0x49a7050:s0 -> Node0x49a5c50;
	Node0x49a7050:s1 -> Node0x49a7430;
	Node0x49a7430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%10:\l10:                                               \l  %11 = and i32 %1, -8\l  br label %34\l}"];
	Node0x49a7430 -> Node0x49a7630;
	Node0x49a5c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%12:\l12:                                               \l  %13 = phi float [ undef, %7 ], [ %92, %34 ]\l  %14 = phi i32 [ 0, %7 ], [ %93, %34 ]\l  %15 = phi float [ 0.000000e+00, %7 ], [ %92, %34 ]\l  %16 = icmp eq i32 %8, 0\l  br i1 %16, label %30, label %17\l|{<s0>T|<s1>F}}"];
	Node0x49a5c50:s0 -> Node0x49a70e0;
	Node0x49a5c50:s1 -> Node0x49a72e0;
	Node0x49a72e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ %27, %17 ], [ %14, %12 ]\l  %19 = phi float [ %26, %17 ], [ %15, %12 ]\l  %20 = phi i32 [ %28, %17 ], [ 0, %12 ]\l  %21 = mul nsw i32 %18, %0\l  %22 = add nsw i32 %21, %5\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %2, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %26 = fadd contract float %19, %25\l  %27 = add nuw nsw i32 %18, 1\l  %28 = add i32 %20, 1\l  %29 = icmp eq i32 %28, %8\l  br i1 %29, label %30, label %17, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x49a72e0:s0 -> Node0x49a70e0;
	Node0x49a72e0:s1 -> Node0x49a72e0;
	Node0x49a70e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  %31 = phi float [ 0.000000e+00, %4 ], [ %13, %12 ], [ %26, %17 ]\l  %32 = zext i32 %5 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  store float %31, float addrspace(1)* %33, align 4, !tbaa !5\l  ret void\l}"];
	Node0x49a7630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %10 ], [ %93, %34 ]\l  %36 = phi float [ 0.000000e+00, %10 ], [ %92, %34 ]\l  %37 = phi i32 [ 0, %10 ], [ %94, %34 ]\l  %38 = mul nsw i32 %35, %0\l  %39 = add nsw i32 %38, %5\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %43 = fadd contract float %36, %42\l  %44 = or i32 %35, 1\l  %45 = mul nsw i32 %44, %0\l  %46 = add nsw i32 %45, %5\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = fadd contract float %43, %49\l  %51 = or i32 %35, 2\l  %52 = mul nsw i32 %51, %0\l  %53 = add nsw i32 %52, %5\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %57 = fadd contract float %50, %56\l  %58 = or i32 %35, 3\l  %59 = mul nsw i32 %58, %0\l  %60 = add nsw i32 %59, %5\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %64 = fadd contract float %57, %63\l  %65 = or i32 %35, 4\l  %66 = mul nsw i32 %65, %0\l  %67 = add nsw i32 %66, %5\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %2, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %71 = fadd contract float %64, %70\l  %72 = or i32 %35, 5\l  %73 = mul nsw i32 %72, %0\l  %74 = add nsw i32 %73, %5\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = fadd contract float %71, %77\l  %79 = or i32 %35, 6\l  %80 = mul nsw i32 %79, %0\l  %81 = add nsw i32 %80, %5\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %85 = fadd contract float %78, %84\l  %86 = or i32 %35, 7\l  %87 = mul nsw i32 %86, %0\l  %88 = add nsw i32 %87, %5\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %92 = fadd contract float %85, %91\l  %93 = add nuw nsw i32 %35, 8\l  %94 = add i32 %37, 8\l  %95 = icmp eq i32 %94, %11\l  br i1 %95, label %12, label %34, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x49a7630:s0 -> Node0x49a5c50;
	Node0x49a7630:s1 -> Node0x49a7630;
}
