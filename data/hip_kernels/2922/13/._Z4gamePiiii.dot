digraph "CFG for '_Z4gamePiiii' function" {
	label="CFG for '_Z4gamePiiii' function";

	Node0x4fb81a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sdiv i32 %13, %3\l  %15 = mul nsw i32 %14, %2\l  %16 = sub nsw i32 %13, %15\l  %17 = icmp slt i32 %14, %3\l  %18 = icmp slt i32 %16, %2\l  %19 = select i1 %17, i1 %18, i1 false\l  br i1 %19, label %20, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4fb81a0:s0 -> Node0x4fba420;
	Node0x4fb81a0:s1 -> Node0x4fba4b0;
	Node0x4fba420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%20:\l20:                                               \l  %21 = sext i32 %13 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = icmp sgt i32 %16, 0\l  br i1 %24, label %25, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4fba420:s0 -> Node0x4fbafc0;
	Node0x4fba420:s1 -> Node0x4fbb050;
	Node0x4fbafc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%25:\l25:                                               \l  %26 = add nsw i32 %13, -1\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %30\l}"];
	Node0x4fbafc0 -> Node0x4fbb050;
	Node0x4fbb050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = phi i32 [ %29, %25 ], [ 0, %20 ]\l  %32 = add nsw i32 %2, -1\l  %33 = icmp sge i32 %16, %32\l  br i1 %33, label %39, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4fbb050:s0 -> Node0x4fba260;
	Node0x4fbb050:s1 -> Node0x4fbbda0;
	Node0x4fbbda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = add nsw i32 %13, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %39\l}"];
	Node0x4fbbda0 -> Node0x4fba260;
	Node0x4fba260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = phi i32 [ %38, %34 ], [ 0, %30 ]\l  %41 = icmp sgt i32 %14, 0\l  br i1 %41, label %42, label %47\l|{<s0>T|<s1>F}}"];
	Node0x4fba260:s0 -> Node0x4fbc2d0;
	Node0x4fba260:s1 -> Node0x4fbc320;
	Node0x4fbc2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%42:\l42:                                               \l  %43 = sub nsw i32 %13, %2\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %47\l}"];
	Node0x4fbc2d0 -> Node0x4fbc320;
	Node0x4fbc320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%47:\l47:                                               \l  %48 = phi i32 [ %46, %42 ], [ 0, %39 ]\l  %49 = add nsw i32 %3, -1\l  %50 = icmp slt i32 %14, %49\l  br i1 %50, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4fbc320:s0 -> Node0x4fbc8b0;
	Node0x4fbc320:s1 -> Node0x4fbc900;
	Node0x4fbc8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = add nsw i32 %13, %2\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %56\l}"];
	Node0x4fbc8b0 -> Node0x4fbc900;
	Node0x4fbc900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%56:\l56:                                               \l  %57 = phi i1 [ %24, %51 ], [ false, %47 ]\l  %58 = phi i1 [ %33, %51 ], [ true, %47 ]\l  %59 = phi i32 [ %55, %51 ], [ 0, %47 ]\l  br i1 %58, label %66, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4fbc900:s0 -> Node0x4fbced0;
	Node0x4fbc900:s1 -> Node0x4fbcf20;
	Node0x4fbcf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%60:\l60:                                               \l  %61 = add nsw i32 %13, %2\l  %62 = add nsw i32 %61, 1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %66\l}"];
	Node0x4fbcf20 -> Node0x4fbced0;
	Node0x4fbced0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%66:\l66:                                               \l  %67 = phi i1 [ %24, %60 ], [ %57, %56 ]\l  %68 = phi i32 [ %65, %60 ], [ 0, %56 ]\l  br i1 %67, label %69, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4fbced0:s0 -> Node0x4fbd700;
	Node0x4fbced0:s1 -> Node0x4fbd750;
	Node0x4fbd700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%69:\l69:                                               \l  %70 = add nsw i32 %13, %2\l  %71 = add nsw i32 %70, -1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %75\l}"];
	Node0x4fbd700 -> Node0x4fbd750;
	Node0x4fbd750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%75:\l75:                                               \l  %76 = phi i32 [ %74, %69 ], [ 0, %66 ]\l  %77 = select i1 %41, i1 %24, i1 false\l  br i1 %77, label %78, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4fbd750:s0 -> Node0x4fbdd00;
	Node0x4fbd750:s1 -> Node0x4fbdd50;
	Node0x4fbdd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%78:\l78:                                               \l  %79 = sub i32 %13, %2\l  %80 = add nsw i32 %79, -1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %84\l}"];
	Node0x4fbdd00 -> Node0x4fbdd50;
	Node0x4fbdd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%84:\l84:                                               \l  %85 = phi i32 [ %83, %78 ], [ 0, %75 ]\l  %86 = xor i1 %41, true\l  %87 = select i1 %86, i1 true, i1 %33\l  br i1 %87, label %94, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4fbdd50:s0 -> Node0x4fbe390;
	Node0x4fbdd50:s1 -> Node0x4fbe3e0;
	Node0x4fbe3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%88:\l88:                                               \l  %89 = sub i32 %13, %2\l  %90 = add i32 %89, 1\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %94\l}"];
	Node0x4fbe3e0 -> Node0x4fbe390;
	Node0x4fbe390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%94:\l94:                                               \l  %95 = phi i32 [ %93, %88 ], [ 0, %84 ]\l  %96 = add i32 %40, %31\l  %97 = add i32 %96, %48\l  %98 = add i32 %97, %59\l  %99 = add i32 %98, %68\l  %100 = add i32 %99, %76\l  %101 = add i32 %100, %85\l  %102 = add i32 %101, %95\l  %103 = icmp eq i32 %23, 1\l  %104 = icmp slt i32 %102, 2\l  %105 = select i1 %103, i1 %104, i1 false\l  %106 = icmp sgt i32 %102, 3\l  %107 = select i1 %105, i1 true, i1 %106\l  br i1 %107, label %112, label %108\l|{<s0>T|<s1>F}}"];
	Node0x4fbe390:s0 -> Node0x4fbf010;
	Node0x4fbe390:s1 -> Node0x4fbf060;
	Node0x4fbf060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%108:\l108:                                              \l  %109 = icmp eq i32 %23, 0\l  %110 = icmp eq i32 %102, 3\l  %111 = select i1 %109, i1 %110, i1 false\l  br i1 %111, label %112, label %114\l|{<s0>T|<s1>F}}"];
	Node0x4fbf060:s0 -> Node0x4fbf010;
	Node0x4fbf060:s1 -> Node0x4fba4b0;
	Node0x4fbf010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%112:\l112:                                              \l  %113 = phi i32 [ 0, %94 ], [ 1, %108 ]\l  store i32 %113, i32 addrspace(1)* %22, align 4, !tbaa !7\l  br label %114\l}"];
	Node0x4fbf010 -> Node0x4fba4b0;
	Node0x4fba4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  ret void\l}"];
}
