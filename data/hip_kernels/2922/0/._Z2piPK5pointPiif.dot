digraph "CFG for '_Z2piPK5pointPiif' function" {
	label="CFG for '_Z2piPK5pointPiif' function";

	Node0x497fac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl nuw nsw i32 %9, 5\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = sub i32 %2, %11\l  %16 = icmp ult i32 %14, %15\l  br i1 %16, label %17, label %244\l|{<s0>T|<s1>F}}"];
	Node0x497fac0:s0 -> Node0x4983a30;
	Node0x497fac0:s1 -> Node0x4984450;
	Node0x4983a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ %242, %17 ], [ 0, %4 ]\l  %19 = mul nuw nsw i32 %18, %9\l  %20 = add i32 %19, %14\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %21, i32 0\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fmul contract float %23, %23\l  %25 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %21, i32 1\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %27 = fmul contract float %26, %26\l  %28 = fadd contract float %24, %27\l  %29 = fcmp contract ole float %28, %3\l  %30 = zext i1 %29 to i32\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %21\l  store i32 %30, i32 addrspace(1)* %31, align 4, !tbaa !13\l  %32 = or i32 %18, 1\l  %33 = mul nuw nsw i32 %32, %9\l  %34 = add i32 %33, %14\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %35, i32 0\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %37, %37\l  %39 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %35, i32 1\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %41 = fmul contract float %40, %40\l  %42 = fadd contract float %38, %41\l  %43 = fcmp contract ole float %42, %3\l  %44 = zext i1 %43 to i32\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  store i32 %44, i32 addrspace(1)* %45, align 4, !tbaa !13\l  %46 = or i32 %18, 2\l  %47 = mul nuw nsw i32 %46, %9\l  %48 = add i32 %47, %14\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %49, i32 0\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %52 = fmul contract float %51, %51\l  %53 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %49, i32 1\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %55 = fmul contract float %54, %54\l  %56 = fadd contract float %52, %55\l  %57 = fcmp contract ole float %56, %3\l  %58 = zext i1 %57 to i32\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %49\l  store i32 %58, i32 addrspace(1)* %59, align 4, !tbaa !13\l  %60 = or i32 %18, 3\l  %61 = mul nuw nsw i32 %60, %9\l  %62 = add i32 %61, %14\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %63, i32 0\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fmul contract float %65, %65\l  %67 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %63, i32 1\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %69 = fmul contract float %68, %68\l  %70 = fadd contract float %66, %69\l  %71 = fcmp contract ole float %70, %3\l  %72 = zext i1 %71 to i32\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  store i32 %72, i32 addrspace(1)* %73, align 4, !tbaa !13\l  %74 = or i32 %18, 4\l  %75 = mul nuw nsw i32 %74, %9\l  %76 = add i32 %75, %14\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %77, i32 0\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %79, %79\l  %81 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %77, i32 1\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %82, %82\l  %84 = fadd contract float %80, %83\l  %85 = fcmp contract ole float %84, %3\l  %86 = zext i1 %85 to i32\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %77\l  store i32 %86, i32 addrspace(1)* %87, align 4, !tbaa !13\l  %88 = or i32 %18, 5\l  %89 = mul nuw nsw i32 %88, %9\l  %90 = add i32 %89, %14\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %91, i32 0\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fmul contract float %93, %93\l  %95 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %91, i32 1\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %97 = fmul contract float %96, %96\l  %98 = fadd contract float %94, %97\l  %99 = fcmp contract ole float %98, %3\l  %100 = zext i1 %99 to i32\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  store i32 %100, i32 addrspace(1)* %101, align 4, !tbaa !13\l  %102 = or i32 %18, 6\l  %103 = mul nuw nsw i32 %102, %9\l  %104 = add i32 %103, %14\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %105, i32 0\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = fmul contract float %107, %107\l  %109 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %105, i32 1\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %111 = fmul contract float %110, %110\l  %112 = fadd contract float %108, %111\l  %113 = fcmp contract ole float %112, %3\l  %114 = zext i1 %113 to i32\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %105\l  store i32 %114, i32 addrspace(1)* %115, align 4, !tbaa !13\l  %116 = or i32 %18, 7\l  %117 = mul nuw nsw i32 %116, %9\l  %118 = add i32 %117, %14\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %119, i32 0\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = fmul contract float %121, %121\l  %123 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %119, i32 1\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %125 = fmul contract float %124, %124\l  %126 = fadd contract float %122, %125\l  %127 = fcmp contract ole float %126, %3\l  %128 = zext i1 %127 to i32\l  %129 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %119\l  store i32 %128, i32 addrspace(1)* %129, align 4, !tbaa !13\l  %130 = or i32 %18, 8\l  %131 = mul nuw nsw i32 %130, %9\l  %132 = add i32 %131, %14\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %133, i32 0\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = fmul contract float %135, %135\l  %137 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %133, i32 1\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %139 = fmul contract float %138, %138\l  %140 = fadd contract float %136, %139\l  %141 = fcmp contract ole float %140, %3\l  %142 = zext i1 %141 to i32\l  %143 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %133\l  store i32 %142, i32 addrspace(1)* %143, align 4, !tbaa !13\l  %144 = or i32 %18, 9\l  %145 = mul nuw nsw i32 %144, %9\l  %146 = add i32 %145, %14\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %147, i32 0\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %150 = fmul contract float %149, %149\l  %151 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %147, i32 1\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %153 = fmul contract float %152, %152\l  %154 = fadd contract float %150, %153\l  %155 = fcmp contract ole float %154, %3\l  %156 = zext i1 %155 to i32\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %147\l  store i32 %156, i32 addrspace(1)* %157, align 4, !tbaa !13\l  %158 = or i32 %18, 10\l  %159 = mul nuw nsw i32 %158, %9\l  %160 = add i32 %159, %14\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %161, i32 0\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %164 = fmul contract float %163, %163\l  %165 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %161, i32 1\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %167 = fmul contract float %166, %166\l  %168 = fadd contract float %164, %167\l  %169 = fcmp contract ole float %168, %3\l  %170 = zext i1 %169 to i32\l  %171 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %161\l  store i32 %170, i32 addrspace(1)* %171, align 4, !tbaa !13\l  %172 = or i32 %18, 11\l  %173 = mul nuw nsw i32 %172, %9\l  %174 = add i32 %173, %14\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %175, i32 0\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %178 = fmul contract float %177, %177\l  %179 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %175, i32 1\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %181 = fmul contract float %180, %180\l  %182 = fadd contract float %178, %181\l  %183 = fcmp contract ole float %182, %3\l  %184 = zext i1 %183 to i32\l  %185 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %175\l  store i32 %184, i32 addrspace(1)* %185, align 4, !tbaa !13\l  %186 = or i32 %18, 12\l  %187 = mul nuw nsw i32 %186, %9\l  %188 = add i32 %187, %14\l  %189 = sext i32 %188 to i64\l  %190 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %189, i32 0\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %192 = fmul contract float %191, %191\l  %193 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %189, i32 1\l  %194 = load float, float addrspace(1)* %193, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %195 = fmul contract float %194, %194\l  %196 = fadd contract float %192, %195\l  %197 = fcmp contract ole float %196, %3\l  %198 = zext i1 %197 to i32\l  %199 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %189\l  store i32 %198, i32 addrspace(1)* %199, align 4, !tbaa !13\l  %200 = or i32 %18, 13\l  %201 = mul nuw nsw i32 %200, %9\l  %202 = add i32 %201, %14\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %203, i32 0\l  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %206 = fmul contract float %205, %205\l  %207 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %203, i32 1\l  %208 = load float, float addrspace(1)* %207, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %209 = fmul contract float %208, %208\l  %210 = fadd contract float %206, %209\l  %211 = fcmp contract ole float %210, %3\l  %212 = zext i1 %211 to i32\l  %213 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %203\l  store i32 %212, i32 addrspace(1)* %213, align 4, !tbaa !13\l  %214 = or i32 %18, 14\l  %215 = mul nuw nsw i32 %214, %9\l  %216 = add i32 %215, %14\l  %217 = sext i32 %216 to i64\l  %218 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %217, i32 0\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %220 = fmul contract float %219, %219\l  %221 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %217, i32 1\l  %222 = load float, float addrspace(1)* %221, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %223 = fmul contract float %222, %222\l  %224 = fadd contract float %220, %223\l  %225 = fcmp contract ole float %224, %3\l  %226 = zext i1 %225 to i32\l  %227 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %217\l  store i32 %226, i32 addrspace(1)* %227, align 4, !tbaa !13\l  %228 = or i32 %18, 15\l  %229 = mul nuw nsw i32 %228, %9\l  %230 = add i32 %229, %14\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %231, i32 0\l  %233 = load float, float addrspace(1)* %232, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %234 = fmul contract float %233, %233\l  %235 = getelementptr inbounds %struct.point, %struct.point addrspace(1)* %0,\l... i64 %231, i32 1\l  %236 = load float, float addrspace(1)* %235, align 4, !tbaa !12,\l... !amdgpu.noclobber !5\l  %237 = fmul contract float %236, %236\l  %238 = fadd contract float %234, %237\l  %239 = fcmp contract ole float %238, %3\l  %240 = zext i1 %239 to i32\l  %241 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %231\l  store i32 %240, i32 addrspace(1)* %241, align 4, !tbaa !13\l  %242 = add nuw nsw i32 %18, 16\l  %243 = icmp eq i32 %242, 32\l  br i1 %243, label %244, label %17, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4983a30:s0 -> Node0x4984450;
	Node0x4983a30:s1 -> Node0x4983a30;
	Node0x4984450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%244:\l244:                                              \l  ret void\l}"];
}
