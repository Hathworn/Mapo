digraph "CFG for '_Z9subsamplePfS_S_S_iiiiiii' function" {
	label="CFG for '_Z9subsamplePfS_S_S_iiiiiii' function";

	Node0x50b73a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%11:\l  %12 = sub nsw i32 %6, %8\l  %13 = sdiv i32 %12, %10\l  %14 = add nsw i32 %13, 1\l  %15 = sub nsw i32 %5, %7\l  %16 = sdiv i32 %15, %9\l  %17 = add nsw i32 %16, 1\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = urem i32 %18, %4\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %21, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !5, !invariant.load !6\l  %30 = zext i16 %29 to i32\l  %31 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 16\l  %32 = bitcast i8 addrspace(4)* %31 to i32 addrspace(4)*\l  %33 = load i32, i32 addrspace(4)* %32, align 8, !tbaa !7\l  %34 = mul i32 %26, %30\l  %35 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %36 = add i32 %34, %35\l  %37 = udiv i32 %33, %30\l  %38 = mul i32 %37, %30\l  %39 = icmp ugt i32 %33, %38\l  %40 = zext i1 %39 to i32\l  %41 = add i32 %37, %40\l  %42 = mul i32 %41, %30\l  %43 = mul nsw i32 %14, %18\l  %44 = mul nsw i32 %43, %17\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = mul i32 %18, %5\l  %48 = mul i32 %47, %6\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = sext i32 %19 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %54 = getelementptr inbounds float, float addrspace(1)* %3, i64 %51\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %56 = icmp sgt i32 %36, %16\l  br i1 %56, label %164, label %57\l|{<s0>T|<s1>F}}"];
	Node0x50b73a0:s0 -> Node0x50bd170;
	Node0x50b73a0:s1 -> Node0x50bd200;
	Node0x50bd200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%57:\l57:                                               \l  %58 = icmp sgt i32 %20, %13\l  %59 = mul i32 %9, %6\l  %60 = icmp sgt i32 %7, 0\l  %61 = icmp sgt i32 %8, 0\l  %62 = sext i32 %6 to i64\l  %63 = and i32 %8, 7\l  %64 = icmp ult i32 %8, 8\l  %65 = and i32 %8, -8\l  %66 = icmp eq i32 %63, 0\l  br label %67\l}"];
	Node0x50bd200 -> Node0x50bb3a0;
	Node0x50bb3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%67:\l67:                                               \l  %68 = phi i32 [ %36, %57 ], [ %162, %161 ]\l  br i1 %58, label %161, label %69\l|{<s0>T|<s1>F}}"];
	Node0x50bb3a0:s0 -> Node0x50bdbf0;
	Node0x50bb3a0:s1 -> Node0x50bdd30;
	Node0x50bdd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%69:\l69:                                               \l  %70 = mul i32 %59, %68\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %50, i64 %71\l  %73 = mul nsw i32 %68, %14\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %46, i64 %74\l  br label %76\l}"];
	Node0x50bdd30 -> Node0x50be1b0;
	Node0x50be1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%76:\l76:                                               \l  %77 = phi i32 [ %20, %69 ], [ %159, %155 ]\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %75, i64 %78\l  br i1 %60, label %80, label %155\l|{<s0>T|<s1>F}}"];
	Node0x50be1b0:s0 -> Node0x50be4c0;
	Node0x50be1b0:s1 -> Node0x50be270;
	Node0x50be4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %77, %10\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %72, i64 %82\l  br label %84\l}"];
	Node0x50be4c0 -> Node0x50be7a0;
	Node0x50be7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%84:\l84:                                               \l  %85 = phi i32 [ %153, %150 ], [ 0, %80 ]\l  %86 = phi float [ %151, %150 ], [ 0.000000e+00, %80 ]\l  %87 = phi float addrspace(1)* [ %152, %150 ], [ %83, %80 ]\l  br i1 %61, label %88, label %150\l|{<s0>T|<s1>F}}"];
	Node0x50be7a0:s0 -> Node0x50bf660;
	Node0x50be7a0:s1 -> Node0x50be890;
	Node0x50bf660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%88:\l88:                                               \l  br i1 %64, label %135, label %89\l|{<s0>T|<s1>F}}"];
	Node0x50bf660:s0 -> Node0x50bf7a0;
	Node0x50bf660:s1 -> Node0x50bf7f0;
	Node0x50bf7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%89:\l89:                                               \l  %90 = phi i32 [ %132, %89 ], [ 0, %88 ]\l  %91 = phi float [ %131, %89 ], [ %86, %88 ]\l  %92 = phi i32 [ %133, %89 ], [ 0, %88 ]\l  %93 = zext i32 %90 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %87, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = fadd contract float %91, %95\l  %97 = or i32 %90, 1\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %87, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !16\l  %101 = fadd contract float %96, %100\l  %102 = or i32 %90, 2\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %87, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !16\l  %106 = fadd contract float %101, %105\l  %107 = or i32 %90, 3\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %87, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !16\l  %111 = fadd contract float %106, %110\l  %112 = or i32 %90, 4\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %87, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !16\l  %116 = fadd contract float %111, %115\l  %117 = or i32 %90, 5\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %87, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !16\l  %121 = fadd contract float %116, %120\l  %122 = or i32 %90, 6\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %87, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !16\l  %126 = fadd contract float %121, %125\l  %127 = or i32 %90, 7\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %87, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !16\l  %131 = fadd contract float %126, %130\l  %132 = add nuw nsw i32 %90, 8\l  %133 = add i32 %92, 8\l  %134 = icmp eq i32 %133, %65\l  br i1 %134, label %135, label %89, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50bf7f0:s0 -> Node0x50bf7a0;
	Node0x50bf7f0:s1 -> Node0x50bf7f0;
	Node0x50bf7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%135:\l135:                                              \l  %136 = phi float [ undef, %88 ], [ %131, %89 ]\l  %137 = phi i32 [ 0, %88 ], [ %132, %89 ]\l  %138 = phi float [ %86, %88 ], [ %131, %89 ]\l  br i1 %66, label %150, label %139\l|{<s0>T|<s1>F}}"];
	Node0x50bf7a0:s0 -> Node0x50be890;
	Node0x50bf7a0:s1 -> Node0x50c1ef0;
	Node0x50c1ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi i32 [ %147, %139 ], [ %137, %135 ]\l  %141 = phi float [ %146, %139 ], [ %138, %135 ]\l  %142 = phi i32 [ %148, %139 ], [ 0, %135 ]\l  %143 = zext i32 %140 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %87, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !16\l  %146 = fadd contract float %141, %145\l  %147 = add nuw nsw i32 %140, 1\l  %148 = add i32 %142, 1\l  %149 = icmp eq i32 %148, %63\l  br i1 %149, label %150, label %139, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x50c1ef0:s0 -> Node0x50be890;
	Node0x50c1ef0:s1 -> Node0x50c1ef0;
	Node0x50be890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%150:\l150:                                              \l  %151 = phi float [ %86, %84 ], [ %136, %135 ], [ %146, %139 ]\l  %152 = getelementptr inbounds float, float addrspace(1)* %87, i64 %62\l  %153 = add nuw nsw i32 %85, 1\l  %154 = icmp eq i32 %153, %7\l  br i1 %154, label %155, label %84, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x50be890:s0 -> Node0x50be270;
	Node0x50be890:s1 -> Node0x50be7a0;
	Node0x50be270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%155:\l155:                                              \l  %156 = phi float [ 0.000000e+00, %76 ], [ %151, %150 ]\l  %157 = fmul contract float %53, %156\l  %158 = fadd contract float %55, %157\l  store float %158, float addrspace(1)* %79, align 4, !tbaa !16\l  %159 = add nuw nsw i32 %77, %25\l  %160 = icmp sgt i32 %159, %13\l  br i1 %160, label %161, label %76, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x50be270:s0 -> Node0x50bdbf0;
	Node0x50be270:s1 -> Node0x50be1b0;
	Node0x50bdbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%161:\l161:                                              \l  %162 = add nsw i32 %68, %42\l  %163 = icmp sgt i32 %162, %16\l  br i1 %163, label %164, label %67, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x50bdbf0:s0 -> Node0x50bd170;
	Node0x50bdbf0:s1 -> Node0x50bb3a0;
	Node0x50bd170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%164:\l164:                                              \l  ret void\l}"];
}
