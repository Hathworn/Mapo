digraph "CFG for '_Z13subgradweightPfS_S_S_iiiiiiif' function" {
	label="CFG for '_Z13subgradweightPfS_S_S_iiiiiiif' function";

	Node0x590f9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%12:\l  %13 = sub nsw i32 %6, %8\l  %14 = sdiv i32 %13, %10\l  %15 = add nsw i32 %14, 1\l  %16 = sub nsw i32 %5, %7\l  %17 = sdiv i32 %16, %9\l  %18 = add nsw i32 %17, 1\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = urem i32 %19, %4\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %28 = getelementptr i8, i8 addrspace(4)* %22, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2, !range !5, !invariant.load !6\l  %31 = zext i16 %30 to i32\l  %32 = mul i32 %18, %15\l  %33 = mul i32 %32, %19\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = mul i32 %19, %5\l  %37 = mul i32 %36, %6\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = mul nuw nsw i32 %27, %26\l  %41 = add nuw nsw i32 %40, %21\l  %42 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %41\l  store float 0.000000e+00, float addrspace(3)* %42, align 4, !tbaa !7\l  %43 = icmp sgt i32 %27, %17\l  br i1 %43, label %157, label %44\l|{<s0>T|<s1>F}}"];
	Node0x590f9c0:s0 -> Node0x5914d90;
	Node0x590f9c0:s1 -> Node0x5914e20;
	Node0x5914e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%44:\l44:                                               \l  %45 = icmp sgt i32 %21, %14\l  %46 = mul i32 %9, %6\l  %47 = sext i32 %7 to i64\l  %48 = icmp sgt i32 %7, 0\l  %49 = sext i32 %8 to i64\l  %50 = icmp sgt i32 %8, 0\l  %51 = sext i32 %6 to i64\l  %52 = and i64 %49, 7\l  %53 = icmp ult i32 %8, 8\l  %54 = and i64 %49, -8\l  %55 = icmp eq i64 %52, 0\l  br label %56\l}"];
	Node0x5914e20 -> Node0x59155c0;
	Node0x59155c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%56:\l56:                                               \l  %57 = phi float [ 0.000000e+00, %44 ], [ %154, %153 ]\l  %58 = phi i32 [ %27, %44 ], [ %155, %153 ]\l  br i1 %45, label %153, label %59\l|{<s0>T|<s1>F}}"];
	Node0x59155c0:s0 -> Node0x59156b0;
	Node0x59155c0:s1 -> Node0x5915910;
	Node0x5915910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%59:\l59:                                               \l  %60 = mul i32 %46, %58\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %39, i64 %61\l  %63 = mul nsw i32 %58, %15\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %35, i64 %64\l  br label %66\l}"];
	Node0x5915910 -> Node0x5913a60;
	Node0x5913a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%66:\l66:                                               \l  %67 = phi float [ %57, %59 ], [ %150, %149 ]\l  %68 = phi i32 [ %21, %59 ], [ %151, %149 ]\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %65, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br i1 %48, label %72, label %149\l|{<s0>T|<s1>F}}"];
	Node0x5913a60:s0 -> Node0x5916ae0;
	Node0x5913a60:s1 -> Node0x5913b50;
	Node0x5916ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%72:\l72:                                               \l  %73 = mul nsw i32 %68, %10\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %62, i64 %74\l  br label %76\l}"];
	Node0x5916ae0 -> Node0x5916dc0;
	Node0x5916dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%76:\l76:                                               \l  %77 = phi float [ %145, %144 ], [ %67, %72 ]\l  %78 = phi i64 [ %147, %144 ], [ 0, %72 ]\l  %79 = phi float addrspace(1)* [ %146, %144 ], [ %75, %72 ]\l  br i1 %50, label %80, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5916dc0:s0 -> Node0x5917230;
	Node0x5916dc0:s1 -> Node0x5916eb0;
	Node0x5917230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%80:\l80:                                               \l  br i1 %53, label %127, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5917230:s0 -> Node0x5917370;
	Node0x5917230:s1 -> Node0x59173c0;
	Node0x59173c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%81:\l81:                                               \l  %82 = phi float [ %123, %81 ], [ %77, %80 ]\l  %83 = phi i64 [ %124, %81 ], [ 0, %80 ]\l  %84 = phi i64 [ %125, %81 ], [ 0, %80 ]\l  %85 = getelementptr inbounds float, float addrspace(1)* %79, i64 %83\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fmul contract float %71, %86\l  %88 = fadd contract float %82, %87\l  %89 = or i64 %83, 1\l  %90 = getelementptr inbounds float, float addrspace(1)* %79, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = fmul contract float %71, %91\l  %93 = fadd contract float %88, %92\l  %94 = or i64 %83, 2\l  %95 = getelementptr inbounds float, float addrspace(1)* %79, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fmul contract float %71, %96\l  %98 = fadd contract float %93, %97\l  %99 = or i64 %83, 3\l  %100 = getelementptr inbounds float, float addrspace(1)* %79, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fmul contract float %71, %101\l  %103 = fadd contract float %98, %102\l  %104 = or i64 %83, 4\l  %105 = getelementptr inbounds float, float addrspace(1)* %79, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = fmul contract float %71, %106\l  %108 = fadd contract float %103, %107\l  %109 = or i64 %83, 5\l  %110 = getelementptr inbounds float, float addrspace(1)* %79, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7\l  %112 = fmul contract float %71, %111\l  %113 = fadd contract float %108, %112\l  %114 = or i64 %83, 6\l  %115 = getelementptr inbounds float, float addrspace(1)* %79, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fmul contract float %71, %116\l  %118 = fadd contract float %113, %117\l  %119 = or i64 %83, 7\l  %120 = getelementptr inbounds float, float addrspace(1)* %79, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7\l  %122 = fmul contract float %71, %121\l  %123 = fadd contract float %118, %122\l  %124 = add nuw nsw i64 %83, 8\l  %125 = add i64 %84, 8\l  %126 = icmp eq i64 %125, %54\l  br i1 %126, label %127, label %81, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59173c0:s0 -> Node0x5917370;
	Node0x59173c0:s1 -> Node0x59173c0;
	Node0x5917370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%127:\l127:                                              \l  %128 = phi float [ undef, %80 ], [ %123, %81 ]\l  %129 = phi float [ %77, %80 ], [ %123, %81 ]\l  %130 = phi i64 [ 0, %80 ], [ %124, %81 ]\l  br i1 %55, label %142, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5917370:s0 -> Node0x5915e50;
	Node0x5917370:s1 -> Node0x5915ea0;
	Node0x5915ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi float [ %138, %131 ], [ %129, %127 ]\l  %133 = phi i64 [ %139, %131 ], [ %130, %127 ]\l  %134 = phi i64 [ %140, %131 ], [ 0, %127 ]\l  %135 = getelementptr inbounds float, float addrspace(1)* %79, i64 %133\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %71, %136\l  %138 = fadd contract float %132, %137\l  %139 = add nuw nsw i64 %133, 1\l  %140 = add i64 %134, 1\l  %141 = icmp eq i64 %140, %52\l  br i1 %141, label %142, label %131, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5915ea0:s0 -> Node0x5915e50;
	Node0x5915ea0:s1 -> Node0x5915ea0;
	Node0x5915e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%142:\l142:                                              \l  %143 = phi float [ %128, %127 ], [ %138, %131 ]\l  store float %143, float addrspace(3)* %42, align 4, !tbaa !7\l  br label %144\l}"];
	Node0x5915e50 -> Node0x5916eb0;
	Node0x5916eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%144:\l144:                                              \l  %145 = phi float [ %143, %142 ], [ %77, %76 ]\l  %146 = getelementptr inbounds float, float addrspace(1)* %79, i64 %51\l  %147 = add nuw nsw i64 %78, 1\l  %148 = icmp eq i64 %147, %47\l  br i1 %148, label %149, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5916eb0:s0 -> Node0x5913b50;
	Node0x5916eb0:s1 -> Node0x5916dc0;
	Node0x5913b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%149:\l149:                                              \l  %150 = phi float [ %67, %66 ], [ %145, %144 ]\l  %151 = add nuw nsw i32 %68, %26\l  %152 = icmp sgt i32 %151, %14\l  br i1 %152, label %153, label %66, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5913b50:s0 -> Node0x59156b0;
	Node0x5913b50:s1 -> Node0x5913a60;
	Node0x59156b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%153:\l153:                                              \l  %154 = phi float [ %57, %56 ], [ %150, %149 ]\l  %155 = add nuw nsw i32 %58, %31\l  %156 = icmp sgt i32 %155, %17\l  br i1 %156, label %157, label %56, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x59156b0:s0 -> Node0x5914d90;
	Node0x59156b0:s1 -> Node0x59155c0;
	Node0x5914d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%157:\l157:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %158 = icmp eq i32 %21, 0\l  %159 = icmp eq i32 %27, 0\l  %160 = select i1 %158, i1 %159, i1 false\l  br i1 %160, label %161, label %234\l|{<s0>T|<s1>F}}"];
	Node0x5914d90:s0 -> Node0x591aff0;
	Node0x5914d90:s1 -> Node0x591b040;
	Node0x591aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%161:\l161:                                              \l  %162 = mul nuw nsw i32 %31, %26\l  %163 = sext i32 %20 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %2, i64 %163\l  %165 = load float, float addrspace(1)* %164, align 4, !tbaa !7\l  %166 = and i32 %162, 7\l  %167 = icmp ult i32 %162, 8\l  br i1 %167, label %216, label %168\l|{<s0>T|<s1>F}}"];
	Node0x591aff0:s0 -> Node0x591b470;
	Node0x591aff0:s1 -> Node0x591b4c0;
	Node0x591b4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%168:\l168:                                              \l  %169 = and i32 %162, 4194296\l  br label %170\l}"];
	Node0x591b4c0 -> Node0x591b690;
	Node0x591b690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%170:\l170:                                              \l  %171 = phi i32 [ 0, %168 ], [ %213, %170 ]\l  %172 = phi float [ %165, %168 ], [ %212, %170 ]\l  %173 = phi i32 [ 0, %168 ], [ %214, %170 ]\l  %174 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %171\l  %175 = load float, float addrspace(3)* %174, align 16, !tbaa !7\l  %176 = fmul contract float %175, %11\l  %177 = fadd contract float %172, %176\l  %178 = or i32 %171, 1\l  %179 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %178\l  %180 = load float, float addrspace(3)* %179, align 4, !tbaa !7\l  %181 = fmul contract float %180, %11\l  %182 = fadd contract float %177, %181\l  %183 = or i32 %171, 2\l  %184 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %183\l  %185 = load float, float addrspace(3)* %184, align 8, !tbaa !7\l  %186 = fmul contract float %185, %11\l  %187 = fadd contract float %182, %186\l  %188 = or i32 %171, 3\l  %189 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %188\l  %190 = load float, float addrspace(3)* %189, align 4, !tbaa !7\l  %191 = fmul contract float %190, %11\l  %192 = fadd contract float %187, %191\l  %193 = or i32 %171, 4\l  %194 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %193\l  %195 = load float, float addrspace(3)* %194, align 16, !tbaa !7\l  %196 = fmul contract float %195, %11\l  %197 = fadd contract float %192, %196\l  %198 = or i32 %171, 5\l  %199 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %198\l  %200 = load float, float addrspace(3)* %199, align 4, !tbaa !7\l  %201 = fmul contract float %200, %11\l  %202 = fadd contract float %197, %201\l  %203 = or i32 %171, 6\l  %204 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %203\l  %205 = load float, float addrspace(3)* %204, align 8, !tbaa !7\l  %206 = fmul contract float %205, %11\l  %207 = fadd contract float %202, %206\l  %208 = or i32 %171, 7\l  %209 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %208\l  %210 = load float, float addrspace(3)* %209, align 4, !tbaa !7\l  %211 = fmul contract float %210, %11\l  %212 = fadd contract float %207, %211\l  %213 = add nuw nsw i32 %171, 8\l  %214 = add i32 %173, 8\l  %215 = icmp eq i32 %214, %169\l  br i1 %215, label %216, label %170, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x591b690:s0 -> Node0x591b470;
	Node0x591b690:s1 -> Node0x591b690;
	Node0x591b470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%216:\l216:                                              \l  %217 = phi float [ undef, %161 ], [ %212, %170 ]\l  %218 = phi i32 [ 0, %161 ], [ %213, %170 ]\l  %219 = phi float [ %165, %161 ], [ %212, %170 ]\l  %220 = icmp eq i32 %166, 0\l  br i1 %220, label %232, label %221\l|{<s0>T|<s1>F}}"];
	Node0x591b470:s0 -> Node0x591d6b0;
	Node0x591b470:s1 -> Node0x591d700;
	Node0x591d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%221:\l221:                                              \l  %222 = phi i32 [ %229, %221 ], [ %218, %216 ]\l  %223 = phi float [ %228, %221 ], [ %219, %216 ]\l  %224 = phi i32 [ %230, %221 ], [ 0, %216 ]\l  %225 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %222\l  %226 = load float, float addrspace(3)* %225, align 4, !tbaa !7\l  %227 = fmul contract float %226, %11\l  %228 = fadd contract float %223, %227\l  %229 = add nuw nsw i32 %222, 1\l  %230 = add i32 %224, 1\l  %231 = icmp eq i32 %230, %166\l  br i1 %231, label %232, label %221, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x591d700:s0 -> Node0x591d6b0;
	Node0x591d700:s1 -> Node0x591d700;
	Node0x591d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%232:\l232:                                              \l  %233 = phi float [ %217, %216 ], [ %228, %221 ]\l  store float %233, float addrspace(1)* %164, align 4, !tbaa !7\l  br label %234\l}"];
	Node0x591d6b0 -> Node0x591b040;
	Node0x591b040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%234:\l234:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  store float 0.000000e+00, float addrspace(3)* %42, align 4, !tbaa !7\l  %235 = icmp slt i32 %41, %32\l  br i1 %235, label %236, label %239\l|{<s0>T|<s1>F}}"];
	Node0x591b040:s0 -> Node0x591e440;
	Node0x591b040:s1 -> Node0x591e490;
	Node0x591e440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%236:\l236:                                              \l  %237 = mul nuw nsw i32 %31, %26\l  br label %249\l}"];
	Node0x591e440 -> Node0x591e620;
	Node0x591e6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%238:\l238:                                              \l  store float %255, float addrspace(3)* %42, align 4, !tbaa !7\l  br label %239\l}"];
	Node0x591e6e0 -> Node0x591e490;
	Node0x591e490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%239:\l239:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %160, label %240, label %322\l|{<s0>T|<s1>F}}"];
	Node0x591e490:s0 -> Node0x591e9e0;
	Node0x591e490:s1 -> Node0x591ea30;
	Node0x591e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%240:\l240:                                              \l  %241 = mul nuw nsw i32 %31, %26\l  %242 = sext i32 %20 to i64\l  %243 = getelementptr inbounds float, float addrspace(1)* %3, i64 %242\l  %244 = load float, float addrspace(1)* %243, align 4, !tbaa !7\l  %245 = and i32 %241, 7\l  %246 = icmp ult i32 %241, 8\l  br i1 %246, label %304, label %247\l|{<s0>T|<s1>F}}"];
	Node0x591e9e0:s0 -> Node0x591eea0;
	Node0x591e9e0:s1 -> Node0x591eef0;
	Node0x591eef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6a8bef70",label="{%247:\l247:                                              \l  %248 = and i32 %241, 4194296\l  br label %258\l}"];
	Node0x591eef0 -> Node0x591f0c0;
	Node0x591e620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%249:\l249:                                              \l  %250 = phi float [ 0.000000e+00, %236 ], [ %255, %249 ]\l  %251 = phi i32 [ %41, %236 ], [ %256, %249 ]\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %35, i64 %252\l  %254 = load float, float addrspace(1)* %253, align 4, !tbaa !7\l  %255 = fadd contract float %254, %250\l  %256 = add i32 %251, %237\l  %257 = icmp slt i32 %256, %32\l  br i1 %257, label %249, label %238, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x591e620:s0 -> Node0x591e620;
	Node0x591e620:s1 -> Node0x591e6e0;
	Node0x591f0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%258:\l258:                                              \l  %259 = phi i32 [ 0, %247 ], [ %301, %258 ]\l  %260 = phi float [ %244, %247 ], [ %300, %258 ]\l  %261 = phi i32 [ 0, %247 ], [ %302, %258 ]\l  %262 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %259\l  %263 = load float, float addrspace(3)* %262, align 16, !tbaa !7\l  %264 = fmul contract float %263, %11\l  %265 = fadd contract float %260, %264\l  %266 = or i32 %259, 1\l  %267 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %266\l  %268 = load float, float addrspace(3)* %267, align 4, !tbaa !7\l  %269 = fmul contract float %268, %11\l  %270 = fadd contract float %265, %269\l  %271 = or i32 %259, 2\l  %272 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %271\l  %273 = load float, float addrspace(3)* %272, align 8, !tbaa !7\l  %274 = fmul contract float %273, %11\l  %275 = fadd contract float %270, %274\l  %276 = or i32 %259, 3\l  %277 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %276\l  %278 = load float, float addrspace(3)* %277, align 4, !tbaa !7\l  %279 = fmul contract float %278, %11\l  %280 = fadd contract float %275, %279\l  %281 = or i32 %259, 4\l  %282 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %281\l  %283 = load float, float addrspace(3)* %282, align 16, !tbaa !7\l  %284 = fmul contract float %283, %11\l  %285 = fadd contract float %280, %284\l  %286 = or i32 %259, 5\l  %287 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %286\l  %288 = load float, float addrspace(3)* %287, align 4, !tbaa !7\l  %289 = fmul contract float %288, %11\l  %290 = fadd contract float %285, %289\l  %291 = or i32 %259, 6\l  %292 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %291\l  %293 = load float, float addrspace(3)* %292, align 8, !tbaa !7\l  %294 = fmul contract float %293, %11\l  %295 = fadd contract float %290, %294\l  %296 = or i32 %259, 7\l  %297 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %296\l  %298 = load float, float addrspace(3)* %297, align 4, !tbaa !7\l  %299 = fmul contract float %298, %11\l  %300 = fadd contract float %295, %299\l  %301 = add nuw nsw i32 %259, 8\l  %302 = add i32 %261, 8\l  %303 = icmp eq i32 %302, %248\l  br i1 %303, label %304, label %258, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x591f0c0:s0 -> Node0x591eea0;
	Node0x591f0c0:s1 -> Node0x591f0c0;
	Node0x591eea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%304:\l304:                                              \l  %305 = phi float [ undef, %240 ], [ %300, %258 ]\l  %306 = phi i32 [ 0, %240 ], [ %301, %258 ]\l  %307 = phi float [ %244, %240 ], [ %300, %258 ]\l  %308 = icmp eq i32 %245, 0\l  br i1 %308, label %320, label %309\l|{<s0>T|<s1>F}}"];
	Node0x591eea0:s0 -> Node0x5916660;
	Node0x591eea0:s1 -> Node0x59166b0;
	Node0x59166b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%309:\l309:                                              \l  %310 = phi i32 [ %317, %309 ], [ %306, %304 ]\l  %311 = phi float [ %316, %309 ], [ %307, %304 ]\l  %312 = phi i32 [ %318, %309 ], [ 0, %304 ]\l  %313 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13subgradweightPfS_S_S_iiiiiiifE4sums, i32 0, i32 %310\l  %314 = load float, float addrspace(3)* %313, align 4, !tbaa !7\l  %315 = fmul contract float %314, %11\l  %316 = fadd contract float %311, %315\l  %317 = add nuw nsw i32 %310, 1\l  %318 = add i32 %312, 1\l  %319 = icmp eq i32 %318, %245\l  br i1 %319, label %320, label %309, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x59166b0:s0 -> Node0x5916660;
	Node0x59166b0:s1 -> Node0x59166b0;
	Node0x5916660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%320:\l320:                                              \l  %321 = phi float [ %305, %304 ], [ %316, %309 ]\l  store float %321, float addrspace(1)* %243, align 4, !tbaa !7\l  br label %322\l}"];
	Node0x5916660 -> Node0x591ea30;
	Node0x591ea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%322:\l322:                                              \l  ret void\l}"];
}
