digraph "CFG for '_Z16gHighwayBackwardPfS_S_PKfS1_S1_S1_m' function" {
	label="CFG for '_Z16gHighwayBackwardPfS_S_PKfS1_S1_S1_m' function";

	Node0x54785c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%8:\l  %9 = icmp eq i64 %7, 0\l  br i1 %9, label %28, label %10\l|{<s0>T|<s1>F}}"];
	Node0x54785c0:s0 -> Node0x5478570;
	Node0x54785c0:s1 -> Node0x5478d80;
	Node0x5478d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = mul i32 %19, %15\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = udiv i32 %18, %15\l  %23 = mul i32 %22, %15\l  %24 = icmp ugt i32 %18, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %15\l  br label %29\l}"];
	Node0x5478d80 -> Node0x547acb0;
	Node0x5478570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x547acb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %10 ], [ %97, %96 ]\l  %31 = add i32 %30, %21\l  %32 = add i32 %31, %20\l  %33 = sext i32 %32 to i64\l  %34 = icmp ult i64 %33, %7\l  br i1 %34, label %35, label %96\l|{<s0>T|<s1>F}}"];
	Node0x547acb0:s0 -> Node0x547b250;
	Node0x547acb0:s1 -> Node0x547ade0;
	Node0x547b250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = fcmp contract ult float %37, 0.000000e+00\l  br i1 %38, label %56, label %39\l|{<s0>T|<s1>F}}"];
	Node0x547b250:s0 -> Node0x547c0b0;
	Node0x547b250:s1 -> Node0x547c140;
	Node0x547c140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%39:\l39:                                               \l  %40 = fneg contract float %37\l  %41 = fmul float %37, 0xBFF7154760000000\l  %42 = tail call float @llvm.rint.f32(float %41)\l  %43 = fcmp olt float %37, 0xC0562E4300000000\l  %44 = fcmp ogt float %37, 0x4059D1DA00000000\l  %45 = fneg float %41\l  %46 = tail call float @llvm.fma.f32(float %40, float 0x3FF7154760000000,\l... float %45)\l  %47 = tail call float @llvm.fma.f32(float %40, float 0x3E54AE0BE0000000,\l... float %46)\l  %48 = fsub float %41, %42\l  %49 = fadd float %47, %48\l  %50 = tail call float @llvm.exp2.f32(float %49)\l  %51 = fptosi float %42 to i32\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 %51)\l  %53 = select i1 %44, float 0.000000e+00, float %52\l  %54 = select i1 %43, float 0x7FF0000000000000, float %53\l  %55 = fpext float %54 to double\l  br label %72\l}"];
	Node0x547c140 -> Node0x547d380;
	Node0x547c0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%56:\l56:                                               \l  %57 = fmul float %37, 0x3FF7154760000000\l  %58 = tail call float @llvm.rint.f32(float %57)\l  %59 = fcmp ogt float %37, 0x40562E4300000000\l  %60 = fcmp olt float %37, 0xC059D1DA00000000\l  %61 = fneg float %57\l  %62 = tail call float @llvm.fma.f32(float %37, float 0x3FF7154760000000,\l... float %61)\l  %63 = tail call float @llvm.fma.f32(float %37, float 0x3E54AE0BE0000000,\l... float %62)\l  %64 = fsub float %57, %58\l  %65 = fadd float %63, %64\l  %66 = tail call float @llvm.exp2.f32(float %65)\l  %67 = fptosi float %58 to i32\l  %68 = tail call float @llvm.amdgcn.ldexp.f32(float %66, i32 %67)\l  %69 = select i1 %60, float 0.000000e+00, float %68\l  %70 = select i1 %59, float 0x7FF0000000000000, float %69\l  %71 = fpext float %70 to double\l  br label %72\l}"];
	Node0x547c0b0 -> Node0x547d380;
	Node0x547d380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%72:\l72:                                               \l  %73 = phi double [ %71, %56 ], [ %55, %39 ]\l  %74 = phi double [ %71, %56 ], [ 1.000000e+00, %39 ]\l  %75 = fadd contract double %73, 1.000000e+00\l  %76 = fdiv contract double %74, %75\l  %77 = fptrunc double %76 to float\l  %78 = getelementptr inbounds float, float addrspace(1)* %6, i64 %33\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fmul contract float %79, %77\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  store float %80, float addrspace(1)* %81, align 4, !tbaa !16\l  %82 = fsub contract float 1.000000e+00, %77\l  %83 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %84 = fmul contract float %82, %83\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  store float %84, float addrspace(1)* %85, align 4, !tbaa !16\l  %86 = fmul contract float %82, %77\l  %87 = getelementptr inbounds float, float addrspace(1)* %3, i64 %33\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = getelementptr inbounds float, float addrspace(1)* %4, i64 %33\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = fsub contract float %88, %90\l  %92 = fmul contract float %86, %91\l  %93 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %94 = fmul contract float %93, %92\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  store float %94, float addrspace(1)* %95, align 4, !tbaa !16\l  br label %96\l}"];
	Node0x547d380 -> Node0x547ade0;
	Node0x547ade0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = add i32 %27, %30\l  %98 = sext i32 %97 to i64\l  %99 = icmp ult i64 %98, %7\l  br i1 %99, label %29, label %28, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x547ade0:s0 -> Node0x547acb0;
	Node0x547ade0:s1 -> Node0x5478570;
}
