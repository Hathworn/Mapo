digraph "CFG for '_Z16gLSTMCellForwardPfPKfS1_S1_S1_S1_mm' function" {
	label="CFG for '_Z16gLSTMCellForwardPfPKfS1_S1_S1_S1_mm' function";

	Node0x54ec0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%8:\l  %9 = icmp eq i64 %6, 0\l  br i1 %9, label %29, label %10\l|{<s0>T|<s1>F}}"];
	Node0x54ec0a0:s0 -> Node0x54ec050;
	Node0x54ec0a0:s1 -> Node0x54ec860;
	Node0x54ec860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%10:\l10:                                               \l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = icmp eq float addrspace(1)* %5, addrspacecast (float* null to float\l... addrspace(1)*)\l  %13 = icmp eq i64 %7, 0\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %15 = trunc i64 %7 to i32\l  %16 = shl i32 %15, 1\l  %17 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !4\l  %23 = load i16, i16 addrspace(4)* %19, align 4, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = udiv i32 %22, %24\l  %26 = mul i32 %25, %24\l  %27 = icmp ugt i32 %22, %26\l  %28 = zext i1 %27 to i32\l  br label %30\l}"];
	Node0x54ec860 -> Node0x54eed80;
	Node0x54ec050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x54eed80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %10 ], [ %210, %208 ]\l  %32 = add i32 %31, %11\l  %33 = sext i32 %32 to i64\l  %34 = icmp ult i64 %33, %6\l  br i1 %34, label %35, label %208\l|{<s0>T|<s1>F}}"];
	Node0x54eed80:s0 -> Node0x54ef260;
	Node0x54eed80:s1 -> Node0x54eee80;
	Node0x54ef260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%35:\l35:                                               \l  br i1 %12, label %40, label %36\l|{<s0>T|<s1>F}}"];
	Node0x54ef260:s0 -> Node0x54ef3a0;
	Node0x54ef260:s1 -> Node0x54ef3f0;
	Node0x54ef3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !15\l  %39 = fcmp contract une float %38, 0.000000e+00\l  br label %40\l}"];
	Node0x54ef3f0 -> Node0x54ef3a0;
	Node0x54ef3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%40:\l40:                                               \l  %41 = phi i1 [ true, %35 ], [ %39, %36 ]\l  %42 = uitofp i1 %41 to float\l  %43 = mul i64 %33, %7\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %46 = shl i64 %43, 2\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  br i1 %13, label %208, label %49\l|{<s0>T|<s1>F}}"];
	Node0x54ef3a0:s0 -> Node0x54eee80;
	Node0x54ef3a0:s1 -> Node0x54f07b0;
	Node0x54f07b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = fsub contract float 1.000000e+00, %42\l  br label %51\l}"];
	Node0x54f07b0 -> Node0x54f0940;
	Node0x54f0940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %49 ], [ %205, %204 ]\l  %53 = add i32 %52, %14\l  %54 = sext i32 %53 to i64\l  %55 = icmp ult i64 %54, %7\l  br i1 %55, label %56, label %204\l|{<s0>T|<s1>F}}"];
	Node0x54f0940:s0 -> Node0x54f0d40;
	Node0x54f0940:s1 -> Node0x54f0a70;
	Node0x54f0d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds float, float addrspace(1)* %47, i64 %54\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !15\l  %59 = getelementptr inbounds float, float addrspace(1)* %48, i64 %54\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !15\l  %61 = fadd contract float %58, %60\l  %62 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !15\l  %64 = fadd contract float %61, %63\l  %65 = fcmp contract ult float %64, 0.000000e+00\l  br i1 %65, label %83, label %66\l|{<s0>T|<s1>F}}"];
	Node0x54f0d40:s0 -> Node0x54ef0e0;
	Node0x54f0d40:s1 -> Node0x54ef130;
	Node0x54ef130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%66:\l66:                                               \l  %67 = fneg contract float %64\l  %68 = fmul float %64, 0xBFF7154760000000\l  %69 = tail call float @llvm.rint.f32(float %68)\l  %70 = fcmp olt float %64, 0xC0562E4300000000\l  %71 = fcmp ogt float %64, 0x4059D1DA00000000\l  %72 = fneg float %68\l  %73 = tail call float @llvm.fma.f32(float %67, float 0x3FF7154760000000,\l... float %72)\l  %74 = tail call float @llvm.fma.f32(float %67, float 0x3E54AE0BE0000000,\l... float %73)\l  %75 = fsub float %68, %69\l  %76 = fadd float %74, %75\l  %77 = tail call float @llvm.exp2.f32(float %76)\l  %78 = fptosi float %69 to i32\l  %79 = tail call float @llvm.amdgcn.ldexp.f32(float %77, i32 %78)\l  %80 = select i1 %71, float 0.000000e+00, float %79\l  %81 = select i1 %70, float 0x7FF0000000000000, float %80\l  %82 = fpext float %81 to double\l  br label %99\l}"];
	Node0x54ef130 -> Node0x54f2e50;
	Node0x54ef0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%83:\l83:                                               \l  %84 = fmul float %64, 0x3FF7154760000000\l  %85 = tail call float @llvm.rint.f32(float %84)\l  %86 = fcmp ogt float %64, 0x40562E4300000000\l  %87 = fcmp olt float %64, 0xC059D1DA00000000\l  %88 = fneg float %84\l  %89 = tail call float @llvm.fma.f32(float %64, float 0x3FF7154760000000,\l... float %88)\l  %90 = tail call float @llvm.fma.f32(float %64, float 0x3E54AE0BE0000000,\l... float %89)\l  %91 = fsub float %84, %85\l  %92 = fadd float %90, %91\l  %93 = tail call float @llvm.exp2.f32(float %92)\l  %94 = fptosi float %85 to i32\l  %95 = tail call float @llvm.amdgcn.ldexp.f32(float %93, i32 %94)\l  %96 = select i1 %87, float 0.000000e+00, float %95\l  %97 = select i1 %86, float 0x7FF0000000000000, float %96\l  %98 = fpext float %97 to double\l  br label %99\l}"];
	Node0x54ef0e0 -> Node0x54f2e50;
	Node0x54f2e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%99:\l99:                                               \l  %100 = phi double [ %98, %83 ], [ %82, %66 ]\l  %101 = phi double [ %98, %83 ], [ 1.000000e+00, %66 ]\l  %102 = fadd contract double %100, 1.000000e+00\l  %103 = fdiv contract double %101, %102\l  %104 = fptrunc double %103 to float\l  %105 = add i32 %53, %15\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %47, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !15\l  %109 = getelementptr inbounds float, float addrspace(1)* %48, i64 %106\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !15\l  %111 = fadd contract float %108, %110\l  %112 = getelementptr inbounds float, float addrspace(1)* %4, i64 %106\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !15\l  %114 = fadd contract float %111, %113\l  %115 = fcmp contract ult float %114, 0.000000e+00\l  br i1 %115, label %133, label %116\l|{<s0>T|<s1>F}}"];
	Node0x54f2e50:s0 -> Node0x54f4480;
	Node0x54f2e50:s1 -> Node0x54f44d0;
	Node0x54f44d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%116:\l116:                                              \l  %117 = fneg contract float %114\l  %118 = fmul float %114, 0xBFF7154760000000\l  %119 = tail call float @llvm.rint.f32(float %118)\l  %120 = fcmp olt float %114, 0xC0562E4300000000\l  %121 = fcmp ogt float %114, 0x4059D1DA00000000\l  %122 = fneg float %118\l  %123 = tail call float @llvm.fma.f32(float %117, float 0x3FF7154760000000,\l... float %122)\l  %124 = tail call float @llvm.fma.f32(float %117, float 0x3E54AE0BE0000000,\l... float %123)\l  %125 = fsub float %118, %119\l  %126 = fadd float %124, %125\l  %127 = tail call float @llvm.exp2.f32(float %126)\l  %128 = fptosi float %119 to i32\l  %129 = tail call float @llvm.amdgcn.ldexp.f32(float %127, i32 %128)\l  %130 = select i1 %121, float 0.000000e+00, float %129\l  %131 = select i1 %120, float 0x7FF0000000000000, float %130\l  %132 = fpext float %131 to double\l  br label %149\l}"];
	Node0x54f44d0 -> Node0x54f1bf0;
	Node0x54f4480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%133:\l133:                                              \l  %134 = fmul float %114, 0x3FF7154760000000\l  %135 = tail call float @llvm.rint.f32(float %134)\l  %136 = fcmp ogt float %114, 0x40562E4300000000\l  %137 = fcmp olt float %114, 0xC059D1DA00000000\l  %138 = fneg float %134\l  %139 = tail call float @llvm.fma.f32(float %114, float 0x3FF7154760000000,\l... float %138)\l  %140 = tail call float @llvm.fma.f32(float %114, float 0x3E54AE0BE0000000,\l... float %139)\l  %141 = fsub float %134, %135\l  %142 = fadd float %140, %141\l  %143 = tail call float @llvm.exp2.f32(float %142)\l  %144 = fptosi float %135 to i32\l  %145 = tail call float @llvm.amdgcn.ldexp.f32(float %143, i32 %144)\l  %146 = select i1 %137, float 0.000000e+00, float %145\l  %147 = select i1 %136, float 0x7FF0000000000000, float %146\l  %148 = fpext float %147 to double\l  br label %149\l}"];
	Node0x54f4480 -> Node0x54f1bf0;
	Node0x54f1bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%149:\l149:                                              \l  %150 = phi double [ %148, %133 ], [ %132, %116 ]\l  %151 = phi double [ %148, %133 ], [ 1.000000e+00, %116 ]\l  %152 = fadd contract double %150, 1.000000e+00\l  %153 = fdiv contract double %151, %152\l  %154 = fptrunc double %153 to float\l  %155 = add i32 %53, %16\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %47, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !15\l  %159 = getelementptr inbounds float, float addrspace(1)* %48, i64 %156\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !15\l  %161 = fadd contract float %158, %160\l  %162 = getelementptr inbounds float, float addrspace(1)* %4, i64 %156\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !15\l  %164 = fadd contract float %161, %163\l  %165 = tail call float @llvm.fabs.f32(float %164)\l  %166 = fcmp olt float %165, 6.250000e-01\l  br i1 %166, label %167, label %175\l|{<s0>T|<s1>F}}"];
	Node0x54f1bf0:s0 -> Node0x54f6bc0;
	Node0x54f1bf0:s1 -> Node0x54f6c50;
	Node0x54f6bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%167:\l167:                                              \l  %168 = fmul float %164, %164\l  %169 = tail call float @llvm.fmuladd.f32(float %168, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %170 = tail call float @llvm.fmuladd.f32(float %168, float %169, float\l... 0xBFAB8389C0000000)\l  %171 = tail call float @llvm.fmuladd.f32(float %168, float %170, float\l... 0x3FC1107040000000)\l  %172 = tail call float @llvm.fmuladd.f32(float %168, float %171, float\l... 0xBFD5555320000000)\l  %173 = fmul float %165, %172\l  %174 = tail call float @llvm.fmuladd.f32(float %168, float %173, float %165)\l  br label %192\l}"];
	Node0x54f6bc0 -> Node0x54f7760;
	Node0x54f6c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%175:\l175:                                              \l  %176 = fmul float %165, 2.000000e+00\l  %177 = fmul float %176, 0x3FF7154760000000\l  %178 = tail call float @llvm.rint.f32(float %177)\l  %179 = fcmp ogt float %176, 0x40562E4300000000\l  %180 = fneg float %177\l  %181 = tail call float @llvm.fma.f32(float %176, float 0x3FF7154760000000,\l... float %180)\l  %182 = tail call float @llvm.fma.f32(float %176, float 0x3E54AE0BE0000000,\l... float %181)\l  %183 = fsub float %177, %178\l  %184 = fadd float %182, %183\l  %185 = tail call float @llvm.exp2.f32(float %184)\l  %186 = fptosi float %178 to i32\l  %187 = tail call float @llvm.amdgcn.ldexp.f32(float %185, i32 %186)\l  %188 = fadd float %187, 1.000000e+00\l  %189 = select i1 %179, float 0x7FF0000000000000, float %188\l  %190 = tail call float @llvm.amdgcn.rcp.f32(float %189)\l  %191 = tail call float @llvm.fmuladd.f32(float %190, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %192\l}"];
	Node0x54f6c50 -> Node0x54f7760;
	Node0x54f7760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%192:\l192:                                              \l  %193 = phi float [ %174, %167 ], [ %191, %175 ]\l  %194 = tail call float @llvm.copysign.f32(float %193, float %164)\l  %195 = getelementptr inbounds float, float addrspace(1)* %45, i64 %54\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !15\l  %197 = fmul contract float %196, %104\l  %198 = fmul contract float %194, %154\l  %199 = fadd contract float %197, %198\l  %200 = fmul contract float %199, %42\l  %201 = fmul contract float %50, %196\l  %202 = fadd contract float %201, %200\l  %203 = getelementptr inbounds float, float addrspace(1)* %44, i64 %54\l  store float %202, float addrspace(1)* %203, align 4, !tbaa !15\l  br label %204\l}"];
	Node0x54f7760 -> Node0x54f0a70;
	Node0x54f0a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%204:\l204:                                              \l  %205 = add i32 %52, %24\l  %206 = sext i32 %205 to i64\l  %207 = icmp ult i64 %206, %7\l  br i1 %207, label %51, label %208, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x54f0a70:s0 -> Node0x54f0940;
	Node0x54f0a70:s1 -> Node0x54eee80;
	Node0x54eee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%208:\l208:                                              \l  %209 = add i32 %25, %31\l  %210 = add i32 %209, %28\l  %211 = sext i32 %210 to i64\l  %212 = icmp ult i64 %211, %6\l  br i1 %212, label %30, label %29, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x54eee80:s0 -> Node0x54eed80;
	Node0x54eee80:s1 -> Node0x54ec050;
}
