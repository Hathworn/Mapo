digraph "CFG for '_Z19gLSTMOutputBackwardPfS_S_S_PKfS1_S1_S1_S1_mm' function" {
	label="CFG for '_Z19gLSTMOutputBackwardPfS_S_S_PKfS1_S1_S1_S1_mm' function";

	Node0x5e76cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%11:\l  %12 = icmp eq i64 %9, 0\l  br i1 %12, label %35, label %13\l|{<s0>T|<s1>F}}"];
	Node0x5e76cc0:s0 -> Node0x5e76e30;
	Node0x5e76cc0:s1 -> Node0x5e76e80;
	Node0x5e76e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%13:\l13:                                               \l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = icmp eq i64 %10, 0\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %17 = trunc i64 %10 to i32\l  %18 = mul i32 %17, 3\l  %19 = icmp eq float addrspace(1)* %0, addrspacecast (float* null to float\l... addrspace(1)*)\l  %20 = icmp eq float addrspace(1)* %1, addrspacecast (float* null to float\l... addrspace(1)*)\l  %21 = icmp eq float addrspace(1)* %2, addrspacecast (float* null to float\l... addrspace(1)*)\l  %22 = icmp eq float addrspace(1)* %3, addrspacecast (float* null to float\l... addrspace(1)*)\l  %23 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %23, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !4\l  %29 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %28, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %28, %32\l  %34 = zext i1 %33 to i32\l  br label %36\l}"];
	Node0x5e76e80 -> Node0x5e7a9f0;
	Node0x5e76e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%35:\l35:                                               \l  ret void\l}"];
	Node0x5e7a9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %13 ], [ %173, %171 ]\l  %38 = add i32 %37, %14\l  %39 = sext i32 %38 to i64\l  %40 = icmp ult i64 %39, %9\l  br i1 %40, label %41, label %171\l|{<s0>T|<s1>F}}"];
	Node0x5e7a9f0:s0 -> Node0x5e7add0;
	Node0x5e7a9f0:s1 -> Node0x5e7ab40;
	Node0x5e7add0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%41:\l41:                                               \l  %42 = mul i64 %39, %10\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = shl i64 %42, 2\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %47 = getelementptr inbounds float, float addrspace(1)* %4, i64 %42\l  %48 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %49 = getelementptr inbounds float, float addrspace(1)* %6, i64 %44\l  %50 = getelementptr inbounds float, float addrspace(1)* %8, i64 %42\l  br i1 %15, label %171, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5e7add0:s0 -> Node0x5e7ab40;
	Node0x5e7add0:s1 -> Node0x5e7b4c0;
	Node0x5e7b4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %168, %167 ], [ 0, %41 ]\l  %53 = add i32 %52, %16\l  %54 = sext i32 %53 to i64\l  %55 = icmp ult i64 %54, %10\l  br i1 %55, label %56, label %167\l|{<s0>T|<s1>F}}"];
	Node0x5e7b4c0:s0 -> Node0x5e7b8c0;
	Node0x5e7b4c0:s1 -> Node0x5e7b5f0;
	Node0x5e7b8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%56:\l56:                                               \l  %57 = add i32 %53, %18\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %48, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !15\l  %61 = getelementptr inbounds float, float addrspace(1)* %49, i64 %58\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !15\l  %63 = fadd contract float %60, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %7, i64 %58\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !15\l  %66 = fadd contract float %63, %65\l  %67 = fcmp contract ult float %66, 0.000000e+00\l  br i1 %67, label %85, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5e7b8c0:s0 -> Node0x5e7d3b0;
	Node0x5e7b8c0:s1 -> Node0x5e7d400;
	Node0x5e7d400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%68:\l68:                                               \l  %69 = fneg contract float %66\l  %70 = fmul float %66, 0xBFF7154760000000\l  %71 = tail call float @llvm.rint.f32(float %70)\l  %72 = fcmp olt float %66, 0xC0562E4300000000\l  %73 = fcmp ogt float %66, 0x4059D1DA00000000\l  %74 = fneg float %70\l  %75 = tail call float @llvm.fma.f32(float %69, float 0x3FF7154760000000,\l... float %74)\l  %76 = tail call float @llvm.fma.f32(float %69, float 0x3E54AE0BE0000000,\l... float %75)\l  %77 = fsub float %70, %71\l  %78 = fadd float %76, %77\l  %79 = tail call float @llvm.exp2.f32(float %78)\l  %80 = fptosi float %71 to i32\l  %81 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 %80)\l  %82 = select i1 %73, float 0.000000e+00, float %81\l  %83 = select i1 %72, float 0x7FF0000000000000, float %82\l  %84 = fpext float %83 to double\l  br label %101\l}"];
	Node0x5e7d400 -> Node0x5e7e680;
	Node0x5e7d3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%85:\l85:                                               \l  %86 = fmul float %66, 0x3FF7154760000000\l  %87 = tail call float @llvm.rint.f32(float %86)\l  %88 = fcmp ogt float %66, 0x40562E4300000000\l  %89 = fcmp olt float %66, 0xC059D1DA00000000\l  %90 = fneg float %86\l  %91 = tail call float @llvm.fma.f32(float %66, float 0x3FF7154760000000,\l... float %90)\l  %92 = tail call float @llvm.fma.f32(float %66, float 0x3E54AE0BE0000000,\l... float %91)\l  %93 = fsub float %86, %87\l  %94 = fadd float %92, %93\l  %95 = tail call float @llvm.exp2.f32(float %94)\l  %96 = fptosi float %87 to i32\l  %97 = tail call float @llvm.amdgcn.ldexp.f32(float %95, i32 %96)\l  %98 = select i1 %89, float 0.000000e+00, float %97\l  %99 = select i1 %88, float 0x7FF0000000000000, float %98\l  %100 = fpext float %99 to double\l  br label %101\l}"];
	Node0x5e7d3b0 -> Node0x5e7e680;
	Node0x5e7e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%101:\l101:                                              \l  %102 = phi double [ %100, %85 ], [ %84, %68 ]\l  %103 = phi double [ %100, %85 ], [ 1.000000e+00, %68 ]\l  %104 = fadd contract double %102, 1.000000e+00\l  %105 = fdiv contract double %103, %104\l  %106 = fptrunc double %105 to float\l  %107 = getelementptr inbounds float, float addrspace(1)* %47, i64 %54\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !15\l  %109 = tail call float @llvm.fabs.f32(float %108)\l  %110 = fcmp olt float %109, 6.250000e-01\l  br i1 %110, label %111, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5e7e680:s0 -> Node0x5e7fa30;
	Node0x5e7e680:s1 -> Node0x5e7fac0;
	Node0x5e7fa30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%111:\l111:                                              \l  %112 = fmul float %108, %108\l  %113 = tail call float @llvm.fmuladd.f32(float %112, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %114 = tail call float @llvm.fmuladd.f32(float %112, float %113, float\l... 0xBFAB8389C0000000)\l  %115 = tail call float @llvm.fmuladd.f32(float %112, float %114, float\l... 0x3FC1107040000000)\l  %116 = tail call float @llvm.fmuladd.f32(float %112, float %115, float\l... 0xBFD5555320000000)\l  %117 = fmul float %109, %116\l  %118 = tail call float @llvm.fmuladd.f32(float %112, float %117, float %109)\l  br label %136\l}"];
	Node0x5e7fa30 -> Node0x5e805d0;
	Node0x5e7fac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%119:\l119:                                              \l  %120 = fmul float %109, 2.000000e+00\l  %121 = fmul float %120, 0x3FF7154760000000\l  %122 = tail call float @llvm.rint.f32(float %121)\l  %123 = fcmp ogt float %120, 0x40562E4300000000\l  %124 = fneg float %121\l  %125 = tail call float @llvm.fma.f32(float %120, float 0x3FF7154760000000,\l... float %124)\l  %126 = tail call float @llvm.fma.f32(float %120, float 0x3E54AE0BE0000000,\l... float %125)\l  %127 = fsub float %121, %122\l  %128 = fadd float %126, %127\l  %129 = tail call float @llvm.exp2.f32(float %128)\l  %130 = fptosi float %122 to i32\l  %131 = tail call float @llvm.amdgcn.ldexp.f32(float %129, i32 %130)\l  %132 = fadd float %131, 1.000000e+00\l  %133 = select i1 %123, float 0x7FF0000000000000, float %132\l  %134 = tail call float @llvm.amdgcn.rcp.f32(float %133)\l  %135 = tail call float @llvm.fmuladd.f32(float %134, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %136\l}"];
	Node0x5e7fac0 -> Node0x5e805d0;
	Node0x5e805d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%136:\l136:                                              \l  %137 = phi float [ %118, %111 ], [ %135, %119 ]\l  %138 = tail call float @llvm.copysign.f32(float %137, float %108)\l  %139 = getelementptr inbounds float, float addrspace(1)* %50, i64 %54\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !15\l  br i1 %19, label %149, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5e805d0:s0 -> Node0x5e81d80;
	Node0x5e805d0:s1 -> Node0x5e81dd0;
	Node0x5e81dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%141:\l141:                                              \l  %142 = fmul contract float %138, %138\l  %143 = fsub contract float 1.000000e+00, %142\l  %144 = fmul contract float %143, %106\l  %145 = fmul contract float %140, %144\l  %146 = getelementptr inbounds float, float addrspace(1)* %43, i64 %54\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !15\l  %148 = fadd contract float %145, %147\l  store float %148, float addrspace(1)* %146, align 4, !tbaa !15\l  br label %149\l}"];
	Node0x5e81dd0 -> Node0x5e81d80;
	Node0x5e81d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%149:\l149:                                              \l  %150 = fmul contract float %138, %106\l  %151 = fsub contract float 1.000000e+00, %106\l  %152 = fmul contract float %151, %150\l  %153 = fmul contract float %140, %152\l  br i1 %20, label %158, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5e81d80:s0 -> Node0x5e825f0;
	Node0x5e81d80:s1 -> Node0x5e82640;
	Node0x5e82640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%154:\l154:                                              \l  %155 = getelementptr inbounds float, float addrspace(1)* %45, i64 %58\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !15\l  %157 = fadd contract float %153, %156\l  store float %157, float addrspace(1)* %155, align 4, !tbaa !15\l  br label %158\l}"];
	Node0x5e82640 -> Node0x5e825f0;
	Node0x5e825f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%158:\l158:                                              \l  br i1 %21, label %163, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5e825f0:s0 -> Node0x5e829e0;
	Node0x5e825f0:s1 -> Node0x5e82a30;
	Node0x5e82a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%159:\l159:                                              \l  %160 = getelementptr inbounds float, float addrspace(1)* %46, i64 %58\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !15\l  %162 = fadd contract float %153, %161\l  store float %162, float addrspace(1)* %160, align 4, !tbaa !15\l  br label %163\l}"];
	Node0x5e82a30 -> Node0x5e829e0;
	Node0x5e829e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%163:\l163:                                              \l  br i1 %22, label %167, label %164\l|{<s0>T|<s1>F}}"];
	Node0x5e829e0:s0 -> Node0x5e7b5f0;
	Node0x5e829e0:s1 -> Node0x5e82dd0;
	Node0x5e82dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%164:\l164:                                              \l  %165 = getelementptr inbounds float, float addrspace(1)* %3, i64 %58\l  %166 = atomicrmw fadd float addrspace(1)* %165, float %153\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %167\l}"];
	Node0x5e82dd0 -> Node0x5e7b5f0;
	Node0x5e7b5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  %168 = add i32 %52, %30\l  %169 = sext i32 %168 to i64\l  %170 = icmp ult i64 %169, %10\l  br i1 %170, label %51, label %171, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5e7b5f0:s0 -> Node0x5e7b4c0;
	Node0x5e7b5f0:s1 -> Node0x5e7ab40;
	Node0x5e7ab40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%171:\l171:                                              \l  %172 = add i32 %31, %37\l  %173 = add i32 %172, %34\l  %174 = sext i32 %173 to i64\l  %175 = icmp ult i64 %174, %9\l  br i1 %175, label %36, label %35, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5e7ab40:s0 -> Node0x5e7a9f0;
	Node0x5e7ab40:s1 -> Node0x5e76e30;
}
