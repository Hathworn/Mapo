digraph "CFG for '_Z11escolhePaisjjPiPdS_' function" {
	label="CFG for '_Z11escolhePaisjjPiPdS_' function";

	Node0x5704be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = icmp ult i32 %17, %0\l  br i1 %24, label %25, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5704be0:s0 -> Node0x5707150;
	Node0x5704be0:s1 -> Node0x57071e0;
	Node0x5707150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %68, %25 ], [ %17, %5 ]\l  %27 = shl nsw i32 %26, 2\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !16\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds double, double addrspace(1)* %3, i64 %31\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !20,\l... !amdgpu.noclobber !5\l  %34 = fcmp contract olt double %33, 1.000000e+04\l  %35 = select i1 %34, double %33, double 1.000000e+04\l  %36 = select i1 %34, i32 %30, i32 -1\l  %37 = add nuw nsw i32 %27, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !16\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %3, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !20,\l... !amdgpu.noclobber !5\l  %44 = fcmp contract olt double %43, %35\l  %45 = select i1 %44, double %43, double %35\l  %46 = select i1 %44, i32 %40, i32 %36\l  %47 = add nuw nsw i32 %27, 2\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !16\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %3, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !20,\l... !amdgpu.noclobber !5\l  %54 = fcmp contract olt double %53, %45\l  %55 = select i1 %54, double %53, double %45\l  %56 = select i1 %54, i32 %50, i32 %46\l  %57 = add nuw nsw i32 %27, 3\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !16\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %3, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !20,\l... !amdgpu.noclobber !5\l  %64 = fcmp contract olt double %63, %55\l  %65 = select i1 %64, i32 %60, i32 %56\l  %66 = sext i32 %26 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %66\l  store i32 %65, i32 addrspace(1)* %67, align 4, !tbaa !16\l  %68 = add nsw i32 %26, %23\l  %69 = icmp ult i32 %68, %0\l  br i1 %69, label %25, label %70, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5707150:s0 -> Node0x5707150;
	Node0x5707150:s1 -> Node0x57071e0;
	Node0x57071e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%70:\l70:                                               \l  ret void\l}"];
}
