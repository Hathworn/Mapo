digraph "CFG for '_Z10popInicialjjPiS_S_' function" {
	label="CFG for '_Z10popInicialjjPiS_S_' function";

	Node0x5b59a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = icmp ult i32 %17, %0\l  br i1 %24, label %25, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5b59a30:s0 -> Node0x5b5bfa0;
	Node0x5b59a30:s1 -> Node0x5b5c030;
	Node0x5b5bfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = icmp eq i32 %1, 0\l  %27 = and i32 %1, 3\l  %28 = icmp ult i32 %1, 4\l  %29 = and i32 %1, -4\l  %30 = icmp eq i32 %27, 0\l  br label %31\l}"];
	Node0x5b5bfa0 -> Node0x5b5c4d0;
	Node0x5b5c4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%31:\l31:                                               \l  %32 = phi i32 [ %17, %25 ], [ %58, %57 ]\l  br i1 %26, label %57, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5b5c4d0:s0 -> Node0x5b5c5c0;
	Node0x5b5c4d0:s1 -> Node0x5b5bac0;
	Node0x5b5bac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%33:\l33:                                               \l  %34 = mul i32 %32, %1\l  br i1 %28, label %36, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5b5bac0:s0 -> Node0x5b5bb50;
	Node0x5b5bac0:s1 -> Node0x5b5ca50;
	Node0x5b5c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%35:\l35:                                               \l  ret void\l}"];
	Node0x5b5bb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %33 ], [ %118, %60 ]\l  br i1 %30, label %57, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5b5bb50:s0 -> Node0x5b5c5c0;
	Node0x5b5bb50:s1 -> Node0x5b5cc90;
	Node0x5b5cc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %54, %38 ], [ %37, %36 ]\l  %40 = phi i32 [ %55, %38 ], [ 0, %36 ]\l  %41 = add i32 %39, %34\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !16\l  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 %39)\l  %46 = add i32 %45, %34\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %42\l  store i32 %49, i32 addrspace(1)* %50, align 4, !tbaa !16\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %42\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !16\l  %53 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !16\l  store i32 %53, i32 addrspace(1)* %51, align 4, !tbaa !16\l  store i32 %52, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %54 = add nuw nsw i32 %39, 1\l  %55 = add i32 %40, 1\l  %56 = icmp eq i32 %55, %27\l  br i1 %56, label %57, label %38, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5b5cc90:s0 -> Node0x5b5c5c0;
	Node0x5b5cc90:s1 -> Node0x5b5cc90;
	Node0x5b5c5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%57:\l57:                                               \l  %58 = add nsw i32 %32, %23\l  %59 = icmp ult i32 %58, %0\l  br i1 %59, label %31, label %35, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5b5c5c0:s0 -> Node0x5b5c4d0;
	Node0x5b5c5c0:s1 -> Node0x5b5c030;
	Node0x5b5ca50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%60:\l60:                                               \l  %61 = phi i32 [ %118, %60 ], [ 0, %33 ]\l  %62 = phi i32 [ %119, %60 ], [ 0, %33 ]\l  %63 = add i32 %61, %34\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !16\l  %67 = tail call i32 @llvm.smax.i32(i32 %66, i32 %61)\l  %68 = add i32 %67, %34\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %64\l  store i32 %71, i32 addrspace(1)* %72, align 4, !tbaa !16\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %64\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !16\l  %75 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !16\l  store i32 %75, i32 addrspace(1)* %73, align 4, !tbaa !16\l  store i32 %74, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %76 = or i32 %61, 1\l  %77 = add i32 %76, %34\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !16\l  %81 = tail call i32 @llvm.smax.i32(i32 %80, i32 %76)\l  %82 = add i32 %81, %34\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !16\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %78\l  store i32 %85, i32 addrspace(1)* %86, align 4, !tbaa !16\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %78\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !16\l  %89 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !16\l  store i32 %89, i32 addrspace(1)* %87, align 4, !tbaa !16\l  store i32 %88, i32 addrspace(1)* %84, align 4, !tbaa !16\l  %90 = or i32 %61, 2\l  %91 = add i32 %90, %34\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !16\l  %95 = tail call i32 @llvm.smax.i32(i32 %94, i32 %90)\l  %96 = add i32 %95, %34\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %92\l  store i32 %99, i32 addrspace(1)* %100, align 4, !tbaa !16\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %92\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !16\l  %103 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  store i32 %103, i32 addrspace(1)* %101, align 4, !tbaa !16\l  store i32 %102, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %104 = or i32 %61, 3\l  %105 = add i32 %104, %34\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !16\l  %109 = tail call i32 @llvm.smax.i32(i32 %108, i32 %104)\l  %110 = add i32 %109, %34\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !16\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %106\l  store i32 %113, i32 addrspace(1)* %114, align 4, !tbaa !16\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %106\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !16\l  %117 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !16\l  store i32 %117, i32 addrspace(1)* %115, align 4, !tbaa !16\l  store i32 %116, i32 addrspace(1)* %112, align 4, !tbaa !16\l  %118 = add nuw nsw i32 %61, 4\l  %119 = add i32 %62, 4\l  %120 = icmp eq i32 %119, %29\l  br i1 %120, label %36, label %60, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5b5ca50:s0 -> Node0x5b5bb50;
	Node0x5b5ca50:s1 -> Node0x5b5ca50;
}
