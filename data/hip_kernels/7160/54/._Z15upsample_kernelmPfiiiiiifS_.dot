digraph "CFG for '_Z15upsample_kernelmPfiiiiiifS_' function" {
	label="CFG for '_Z15upsample_kernelmPfiiiiiifS_' function";

	Node0x48a2d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %11\l  %28 = mul i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = zext i32 %30 to i64\l  %32 = icmp ult i64 %31, %0\l  br i1 %32, label %33, label %82\l|{<s0>T|<s1>F}}"];
	Node0x48a2d90:s0 -> Node0x48a5530;
	Node0x48a2d90:s1 -> Node0x48a55c0;
	Node0x48a5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %6, %2\l  %35 = sext i32 %34 to i64\l  %36 = freeze i64 %31\l  %37 = freeze i64 %35\l  %38 = udiv i64 %36, %37\l  %39 = mul i64 %38, %37\l  %40 = sub i64 %36, %39\l  %41 = trunc i64 %40 to i32\l  %42 = mul nsw i32 %6, %3\l  %43 = sext i32 %42 to i64\l  %44 = freeze i64 %43\l  %45 = udiv i64 %38, %44\l  %46 = mul i64 %45, %44\l  %47 = sub i64 %38, %46\l  %48 = trunc i64 %47 to i32\l  %49 = sext i32 %4 to i64\l  %50 = freeze i64 %49\l  %51 = udiv i64 %45, %50\l  %52 = mul i64 %51, %50\l  %53 = sub i64 %45, %52\l  %54 = trunc i64 %53 to i32\l  %55 = sext i32 %5 to i64\l  %56 = urem i64 %51, %55\l  %57 = trunc i64 %56 to i32\l  %58 = sdiv i32 %41, %6\l  %59 = sdiv i32 %48, %6\l  %60 = mul i32 %57, %4\l  %61 = add i32 %60, %54\l  %62 = mul i32 %61, %3\l  %63 = add i32 %62, %59\l  %64 = mul i32 %63, %2\l  %65 = add i32 %64, %58\l  %66 = icmp eq i32 %7, 0\l  %67 = sext i32 %65 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  br i1 %66, label %76, label %69\l|{<s0>T|<s1>F}}"];
	Node0x48a5530:s0 -> Node0x48a6590;
	Node0x48a5530:s1 -> Node0x48a7ba0;
	Node0x48a7ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%69:\l69:                                               \l  %70 = load float, float addrspace(1)* %68, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %71 = fmul contract float %70, %8\l  %72 = sext i32 %30 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %9, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %75 = fadd contract float %74, %71\l  store float %75, float addrspace(1)* %73, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x48a7ba0 -> Node0x48a55c0;
	Node0x48a6590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%76:\l76:                                               \l  %77 = sext i32 %30 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %9, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %80 = fmul contract float %79, %8\l  %81 = atomicrmw fadd float addrspace(1)* %68, float %80\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %82\l}"];
	Node0x48a6590 -> Node0x48a55c0;
	Node0x48a55c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
