digraph "CFG for 'fDerSigmoid' function" {
	label="CFG for 'fDerSigmoid' function";

	Node0x46b8650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 16\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 8, !tbaa !15\l  %20 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !13, !invariant.load\l... !14\l  %23 = zext i16 %22 to i32\l  %24 = udiv i32 %19, %23\l  %25 = mul i32 %24, %23\l  %26 = icmp ugt i32 %19, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %30 = mul i32 %28, %29\l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %33 = add i32 %30, %31\l  %34 = mul i32 %33, %16\l  %35 = add i32 %34, %32\l  %36 = sext i32 %35 to i64\l  %37 = icmp slt i64 %36, %2\l  br i1 %37, label %38, label %44\l|{<s0>T|<s1>F}}"];
	Node0x46b8650:s0 -> Node0x46bc430;
	Node0x46b8650:s1 -> Node0x46bc4c0;
	Node0x46bc430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !17,\l... !amdgpu.noclobber !14\l  %41 = fmul contract float %40, %40\l  %42 = fsub contract float %40, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !17\l  br label %44\l}"];
	Node0x46bc430 -> Node0x46bc4c0;
	Node0x46bc4c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
