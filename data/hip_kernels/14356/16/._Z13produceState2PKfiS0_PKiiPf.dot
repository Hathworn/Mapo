digraph "CFG for '_Z13produceState2PKfiS0_PKiiPf' function" {
	label="CFG for '_Z13produceState2PKfiS0_PKiiPf' function";

	Node0x4a2df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add nsw i32 %4, %1\l  %9 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %8\l  %10 = bitcast float addrspace(3)* %9 to i8 addrspace(3)*\l  %11 = icmp slt i32 %7, %8\l  br i1 %11, label %12, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4a2df90:s0 -> Node0x4a2d680;
	Node0x4a2df90:s1 -> Node0x4a2f620;
	Node0x4a2d680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%12:\l12:                                               \l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  br label %18\l}"];
	Node0x4a2d680 -> Node0x4a2ff30;
	Node0x4a2ff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%18:\l18:                                               \l  %19 = phi i32 [ %7, %12 ], [ %21, %18 ]\l  %20 = getelementptr inbounds i8, i8 addrspace(3)* %10, i32 %19\l  store i8 0, i8 addrspace(3)* %20, align 1, !tbaa !7\l  %21 = add i32 %19, %17\l  %22 = icmp slt i32 %21, %8\l  br i1 %22, label %18, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4a2ff30:s0 -> Node0x4a2ff30;
	Node0x4a2ff30:s1 -> Node0x4a2f620;
	Node0x4a2f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%23:\l23:                                               \l  %24 = icmp eq i32 %7, 0\l  br i1 %24, label %25, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4a2f620:s0 -> Node0x4a30710;
	Node0x4a2f620:s1 -> Node0x4a30760;
	Node0x4a30710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%25:\l25:                                               \l  store i32 %1, i32 addrspace(3)* @_ZZ13produceState2PKfiS0_PKiiPfE7counter.0,\l... align 4, !tbaa !13\l  br label %26\l}"];
	Node0x4a30710 -> Node0x4a30760;
	Node0x4a30760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%26:\l26:                                               \l  %27 = icmp slt i32 %7, %1\l  br i1 %27, label %28, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4a30760:s0 -> Node0x4a308f0;
	Node0x4a30760:s1 -> Node0x4a30bd0;
	Node0x4a308f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  %29 = zext i32 %7 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !15,\l... !amdgpu.noclobber !6\l  %32 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %7\l  store float %31, float addrspace(3)* %32, align 4, !tbaa !15\l  %33 = getelementptr inbounds i8, i8 addrspace(3)* %10, i32 %7\l  store i8 1, i8 addrspace(3)* %33, align 1, !tbaa !7\l  br label %34\l}"];
	Node0x4a308f0 -> Node0x4a30bd0;
	Node0x4a30bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%34:\l34:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = load i32, i32 addrspace(3)*\l... @_ZZ13produceState2PKfiS0_PKiiPfE7counter.0, align 4, !tbaa !13\l  %36 = icmp slt i32 %35, %8\l  br i1 %36, label %37, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4a30bd0:s0 -> Node0x4a328e0;
	Node0x4a30bd0:s1 -> Node0x4a33040;
	Node0x4a328e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%37:\l37:                                               \l  %38 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %39 = getelementptr i8, i8 addrspace(4)* %38, i64 4\l  %40 = bitcast i8 addrspace(4)* %39 to i16 addrspace(4)*\l  br label %48\l}"];
	Node0x4a328e0 -> Node0x4a33360;
	Node0x4a33040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%41:\l41:                                               \l  br i1 %11, label %42, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4a33040:s0 -> Node0x4a33460;
	Node0x4a33040:s1 -> Node0x4a334b0;
	Node0x4a33460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%42:\l42:                                               \l  %43 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %44 = getelementptr i8, i8 addrspace(4)* %43, i64 4\l  %45 = bitcast i8 addrspace(4)* %44 to i16 addrspace(4)*\l  %46 = load i16, i16 addrspace(4)* %45, align 4, !range !5, !invariant.load !6\l  %47 = zext i16 %46 to i32\l  br label %131\l}"];
	Node0x4a33460 -> Node0x4a33ec0;
	Node0x4a33360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%48:\l48:                                               \l  %49 = phi i32 [ %35, %37 ], [ %129, %128 ]\l  %50 = add nsw i32 %49, %7\l  %51 = sub nsw i32 %50, %1\l  %52 = icmp slt i32 %51, %4\l  br i1 %52, label %53, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4a33360:s0 -> Node0x4a342e0;
	Node0x4a33360:s1 -> Node0x4a34370;
	Node0x4a342e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%53:\l53:                                               \l  %54 = mul nsw i32 %51, 3\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !13, !amdgpu.noclobber\l... !6\l  %58 = add nsw i32 %54, 1\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !13, !amdgpu.noclobber\l... !6\l  %62 = add nsw i32 %54, 2\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !13, !amdgpu.noclobber\l... !6\l  %66 = icmp sgt i32 %61, %49\l  br i1 %66, label %105, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4a342e0:s0 -> Node0x4a34370;
	Node0x4a342e0:s1 -> Node0x4a31810;
	Node0x4a31810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%67:\l67:                                               \l  %68 = icmp slt i32 %57, %61\l  br i1 %68, label %69, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4a31810:s0 -> Node0x4a31860;
	Node0x4a31810:s1 -> Node0x4a350d0;
	Node0x4a31860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%69:\l69:                                               \l  %70 = sub i32 %65, %57\l  br label %92\l}"];
	Node0x4a31860 -> Node0x4a352a0;
	Node0x4a350d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%71:\l71:                                               \l  %72 = phi float [ 0.000000e+00, %67 ], [ %102, %92 ]\l  %73 = fneg contract float %72\l  %74 = fmul float %72, 0xBFF7154760000000\l  %75 = tail call float @llvm.rint.f32(float %74)\l  %76 = fcmp olt float %72, 0xC0562E4300000000\l  %77 = fcmp ogt float %72, 0x4059D1DA00000000\l  %78 = fneg float %74\l  %79 = tail call float @llvm.fma.f32(float %73, float 0x3FF7154760000000,\l... float %78)\l  %80 = tail call float @llvm.fma.f32(float %73, float 0x3E54AE0BE0000000,\l... float %79)\l  %81 = fsub float %74, %75\l  %82 = fadd float %80, %81\l  %83 = tail call float @llvm.exp2.f32(float %82)\l  %84 = fptosi float %75 to i32\l  %85 = tail call float @llvm.amdgcn.ldexp.f32(float %83, i32 %84)\l  %86 = fadd contract float %85, 1.000000e+00\l  %87 = fdiv contract float 1.000000e+00, %86\l  %88 = select i1 %77, float 1.000000e+00, float %87\l  %89 = select i1 %76, float 0.000000e+00, float %88\l  %90 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %50\l  store float %89, float addrspace(3)* %90, align 4, !tbaa !15\l  %91 = getelementptr inbounds i8, i8 addrspace(3)* %10, i32 %50\l  store i8 1, i8 addrspace(3)* %91, align 1, !tbaa !7\l  br label %105\l}"];
	Node0x4a350d0 -> Node0x4a34370;
	Node0x4a352a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%92:\l92:                                               \l  %93 = phi i32 [ %57, %69 ], [ %103, %92 ]\l  %94 = phi float [ 0.000000e+00, %69 ], [ %102, %92 ]\l  %95 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %93\l  %96 = load float, float addrspace(3)* %95, align 4, !tbaa !15\l  %97 = add i32 %70, %93\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %2, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !15,\l... !amdgpu.noclobber !6\l  %101 = fmul contract float %96, %100\l  %102 = fadd contract float %94, %101\l  %103 = add nsw i32 %93, 1\l  %104 = icmp slt i32 %103, %61\l  br i1 %104, label %92, label %71, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4a352a0:s0 -> Node0x4a352a0;
	Node0x4a352a0:s1 -> Node0x4a350d0;
	Node0x4a34370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%105:\l105:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %24, label %106, label %128\l|{<s0>T|<s1>F}}"];
	Node0x4a34370:s0 -> Node0x4a37e90;
	Node0x4a34370:s1 -> Node0x4a33ff0;
	Node0x4a37e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%106:\l106:                                              \l  %107 = load i32, i32 addrspace(3)*\l... @_ZZ13produceState2PKfiS0_PKiiPfE7counter.0, align 4, !tbaa !13\l  %108 = load i16, i16 addrspace(4)* %40, align 4, !range !5, !invariant.load\l... !6\l  %109 = zext i16 %108 to i32\l  %110 = add i32 %107, %109\l  %111 = icmp ult i32 %107, %110\l  %112 = icmp slt i32 %107, %8\l  %113 = select i1 %111, i1 %112, i1 false\l  br i1 %113, label %114, label %128\l|{<s0>T|<s1>F}}"];
	Node0x4a37e90:s0 -> Node0x4a37d20;
	Node0x4a37e90:s1 -> Node0x4a33ff0;
	Node0x4a37d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i32 [ %124, %122 ], [ %107, %106 ]\l  %116 = phi i32 [ %123, %122 ], [ %107, %106 ]\l  %117 = getelementptr inbounds i8, i8 addrspace(3)* %10, i32 %115\l  %118 = load i8, i8 addrspace(3)* %117, align 1, !tbaa !7, !range !18\l  %119 = icmp eq i8 %118, 0\l  br i1 %119, label %122, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4a37d20:s0 -> Node0x4a38460;
	Node0x4a37d20:s1 -> Node0x4a389b0;
	Node0x4a389b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%120:\l120:                                              \l  %121 = add nsw i32 %116, 1\l  store i32 %121, i32 addrspace(3)*\l... @_ZZ13produceState2PKfiS0_PKiiPfE7counter.0, align 4, !tbaa !13\l  br label %122\l}"];
	Node0x4a389b0 -> Node0x4a38460;
	Node0x4a38460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = phi i32 [ %116, %114 ], [ %121, %120 ]\l  %124 = add nuw nsw i32 %115, 1\l  %125 = icmp ult i32 %124, %110\l  %126 = icmp slt i32 %124, %8\l  %127 = select i1 %125, i1 %126, i1 false\l  br i1 %127, label %114, label %128, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4a38460:s0 -> Node0x4a37d20;
	Node0x4a38460:s1 -> Node0x4a33ff0;
	Node0x4a33ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%128:\l128:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %129 = load i32, i32 addrspace(3)*\l... @_ZZ13produceState2PKfiS0_PKiiPfE7counter.0, align 4, !tbaa !13\l  %130 = icmp slt i32 %129, %8\l  br i1 %130, label %48, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4a33ff0:s0 -> Node0x4a33360;
	Node0x4a33ff0:s1 -> Node0x4a33040;
	Node0x4a33ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%131:\l131:                                              \l  %132 = phi i32 [ %7, %42 ], [ %137, %131 ]\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %132\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !15\l  %136 = getelementptr inbounds float, float addrspace(1)* %5, i64 %133\l  store float %135, float addrspace(1)* %136, align 4, !tbaa !15\l  %137 = add i32 %132, %47\l  %138 = icmp slt i32 %137, %8\l  br i1 %138, label %131, label %139, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4a33ec0:s0 -> Node0x4a33ec0;
	Node0x4a33ec0:s1 -> Node0x4a334b0;
	Node0x4a334b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%139:\l139:                                              \l  ret void\l}"];
}
