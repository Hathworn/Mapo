digraph "CFG for '_Z13produceState3PKfiS0_PKiiPf' function" {
	label="CFG for '_Z13produceState3PKfiS0_PKiiPf' function";

	Node0x594c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add nsw i32 %4, %1\l  %9 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %8\l  %10 = icmp slt i32 %7, %1\l  br i1 %10, label %11, label %18\l|{<s0>T|<s1>F}}"];
	Node0x594c230:s0 -> Node0x594b930;
	Node0x594c230:s1 -> Node0x594d850;
	Node0x594b930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%11:\l11:                                               \l  %12 = zext i32 %7 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %15 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %7\l  store float %14, float addrspace(3)* %15, align 4, !tbaa !5\l  %16 = getelementptr inbounds float, float addrspace(3)* %9, i32 %7\l  %17 = bitcast float addrspace(3)* %16 to i32 addrspace(3)*\l  store i32 1, i32 addrspace(3)* %17, align 4, !tbaa !10\l  br label %21\l}"];
	Node0x594b930 -> Node0x594e910;
	Node0x594d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%18:\l18:                                               \l  %19 = getelementptr inbounds float, float addrspace(3)* %9, i32 %7\l  %20 = bitcast float addrspace(3)* %19 to i32 addrspace(3)*\l  store i32 0, i32 addrspace(3)* %20, align 4, !tbaa !10\l  br label %21\l}"];
	Node0x594d850 -> Node0x594e910;
	Node0x594e910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = phi i32 addrspace(3)* [ %20, %18 ], [ %17, %11 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %23 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %24 = getelementptr i8, i8 addrspace(4)* %23, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !12, !invariant.load\l... !9\l  %27 = zext i16 %26 to i32\l  %28 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !10\l  %29 = mul i32 %28, %27\l  %30 = add i32 %29, %7\l  %31 = icmp ult i32 %30, %8\l  br i1 %31, label %32, label %106\l|{<s0>T|<s1>F}}"];
	Node0x594e910:s0 -> Node0x5950380;
	Node0x594e910:s1 -> Node0x5950410;
	Node0x5950380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%32:\l32:                                               \l  %33 = phi i32 [ %104, %101 ], [ %30, %21 ]\l  %34 = phi i32 [ %102, %101 ], [ %28, %21 ]\l  %35 = sub nsw i32 %33, %1\l  %36 = mul nsw i32 %35, 3\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %40 = add nsw i32 %36, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %44 = add nsw i32 %36, 2\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %48 = icmp slt i32 %39, %43\l  br i1 %48, label %54, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5950380:s0 -> Node0x5951160;
	Node0x5950380:s1 -> Node0x59511f0;
	Node0x5951330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = icmp slt i32 %66, %43\l  br i1 %50, label %54, label %51, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5951330:s0 -> Node0x5951160;
	Node0x5951330:s1 -> Node0x5951450;
	Node0x5951450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%51:\l51:                                               \l  br i1 %48, label %52, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5951450:s0 -> Node0x5951700;
	Node0x5951450:s1 -> Node0x59511f0;
	Node0x5951700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%52:\l52:                                               \l  %53 = sub i32 %47, %39\l  br label %88\l}"];
	Node0x5951700 -> Node0x5951890;
	Node0x5951160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %66, %49 ], [ %39, %32 ]\l  %56 = freeze i32 %55\l  %57 = freeze i32 %27\l  %58 = udiv i32 %56, %57\l  %59 = mul i32 %58, %57\l  %60 = sub i32 %56, %59\l  %61 = add i32 %58, 1\l  %62 = getelementptr inbounds float, float addrspace(3)* %9, i32 %60\l  %63 = bitcast float addrspace(3)* %62 to i32 addrspace(3)*\l  %64 = load i32, i32 addrspace(3)* %63, align 4, !tbaa !10\l  %65 = icmp slt i32 %64, %61\l  %66 = add nsw i32 %55, 1\l  br i1 %65, label %101, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5951160:s0 -> Node0x594e600;
	Node0x5951160:s1 -> Node0x5951330;
	Node0x59511f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%67:\l67:                                               \l  %68 = phi float [ 0.000000e+00, %51 ], [ 0.000000e+00, %32 ], [ %98, %88 ]\l  %69 = fneg contract float %68\l  %70 = fmul float %68, 0xBFF7154760000000\l  %71 = tail call float @llvm.rint.f32(float %70)\l  %72 = fcmp olt float %68, 0xC0562E4300000000\l  %73 = fcmp ogt float %68, 0x4059D1DA00000000\l  %74 = fneg float %70\l  %75 = tail call float @llvm.fma.f32(float %69, float 0x3FF7154760000000,\l... float %74)\l  %76 = tail call float @llvm.fma.f32(float %69, float 0x3E54AE0BE0000000,\l... float %75)\l  %77 = fsub float %70, %71\l  %78 = fadd float %76, %77\l  %79 = tail call float @llvm.exp2.f32(float %78)\l  %80 = fptosi float %71 to i32\l  %81 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 %80)\l  %82 = fadd contract float %81, 1.000000e+00\l  %83 = fdiv contract float 1.000000e+00, %82\l  %84 = select i1 %73, float 1.000000e+00, float %83\l  %85 = select i1 %72, float 0.000000e+00, float %84\l  %86 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %33\l  store float %85, float addrspace(3)* %86, align 4, !tbaa !5\l  %87 = add nsw i32 %34, 1\l  store i32 %87, i32 addrspace(3)* %22, align 4, !tbaa !10\l  br label %101\l}"];
	Node0x59511f0 -> Node0x594e600;
	Node0x5951890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%88:\l88:                                               \l  %89 = phi i32 [ %39, %52 ], [ %99, %88 ]\l  %90 = phi float [ 0.000000e+00, %52 ], [ %98, %88 ]\l  %91 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %89\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !5\l  %93 = add i32 %53, %89\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = fmul contract float %92, %96\l  %98 = fadd contract float %90, %97\l  %99 = add nsw i32 %89, 1\l  %100 = icmp slt i32 %99, %43\l  br i1 %100, label %88, label %67, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5951890:s0 -> Node0x5951890;
	Node0x5951890:s1 -> Node0x59511f0;
	Node0x594e600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%101:\l101:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !10\l  %103 = mul i32 %102, %27\l  %104 = add i32 %103, %7\l  %105 = icmp ult i32 %104, %8\l  br i1 %105, label %32, label %106, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x594e600:s0 -> Node0x5950380;
	Node0x594e600:s1 -> Node0x5950410;
	Node0x5950410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%106:\l106:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %107 = icmp slt i32 %7, %8\l  br i1 %107, label %108, label %116\l|{<s0>T|<s1>F}}"];
	Node0x5950410:s0 -> Node0x5955250;
	Node0x5950410:s1 -> Node0x59552a0;
	Node0x5955250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%108:\l108:                                              \l  %109 = phi i32 [ %114, %108 ], [ %7, %106 ]\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %109\l  %112 = load float, float addrspace(3)* %111, align 4, !tbaa !5\l  %113 = getelementptr inbounds float, float addrspace(1)* %5, i64 %110\l  store float %112, float addrspace(1)* %113, align 4, !tbaa !5\l  %114 = add i32 %109, %27\l  %115 = icmp slt i32 %114, %8\l  br i1 %115, label %108, label %116, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5955250:s0 -> Node0x5955250;
	Node0x5955250:s1 -> Node0x59552a0;
	Node0x59552a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%116:\l116:                                              \l  ret void\l}"];
}
