digraph "CFG for '_Z4dualPfS_S_S_S_ffiii' function" {
	label="CFG for '_Z4dualPfS_S_S_S_ffiii' function";

	Node0x472d430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = icmp slt i32 %19, %7\l  %29 = icmp slt i32 %27, %8\l  %30 = select i1 %28, i1 %29, i1 false\l  %31 = icmp sgt i32 %9, 0\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %94\l|{<s0>T|<s1>F}}"];
	Node0x472d430:s0 -> Node0x472fc80;
	Node0x472d430:s1 -> Node0x472fd10;
	Node0x472fc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %27, %7\l  %35 = mul nsw i32 %8, %7\l  %36 = add nsw i32 %19, 1\l  %37 = icmp slt i32 %36, %7\l  %38 = icmp sgt i32 %19, 0\l  %39 = add nsw i32 %27, 1\l  %40 = icmp slt i32 %39, %8\l  %41 = icmp sgt i32 %27, 0\l  %42 = add nsw i32 %27, -1\l  %43 = mul nsw i32 %42, %7\l  %44 = fmul contract float %5, %6\l  %45 = fadd contract float %44, 1.000000e+00\l  br label %46\l}"];
	Node0x472fc80 -> Node0x4732fc0;
	Node0x4732fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %33 ], [ %92, %77 ]\l  %48 = mul nsw i32 %35, %47\l  %49 = add i32 %48, %19\l  %50 = add i32 %49, %34\l  br i1 %37, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4732fc0:s0 -> Node0x47333e0;
	Node0x4732fc0:s1 -> Node0x4733470;
	Node0x47333e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%51:\l51:                                               \l  %52 = sext i32 %50 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x47333e0 -> Node0x4733470;
	Node0x4733470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi contract float [ %54, %51 ], [ 0.000000e+00, %46 ]\l  br i1 %38, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4733470:s0 -> Node0x4733980;
	Node0x4733470:s1 -> Node0x4733a10;
	Node0x4733980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%57:\l57:                                               \l  %58 = add nsw i32 %49, -1\l  %59 = add i32 %58, %34\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x4733980 -> Node0x4733a10;
	Node0x4733a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi contract float [ %62, %57 ], [ 0.000000e+00, %55 ]\l  %65 = fsub contract float %56, %64\l  br i1 %40, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4733a10:s0 -> Node0x4731c50;
	Node0x4733a10:s1 -> Node0x4731ca0;
	Node0x4731c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%66:\l66:                                               \l  %67 = sext i32 %50 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x4731c50 -> Node0x4731ca0;
	Node0x4731ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi contract float [ %69, %66 ], [ 0.000000e+00, %63 ]\l  br i1 %41, label %72, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4731ca0:s0 -> Node0x4734bd0;
	Node0x4731ca0:s1 -> Node0x47330f0;
	Node0x4734bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%72:\l72:                                               \l  %73 = add i32 %49, %43\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %3, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x4734bd0 -> Node0x47330f0;
	Node0x47330f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi contract float [ %76, %72 ], [ 0.000000e+00, %70 ]\l  %79 = fsub contract float %71, %78\l  %80 = sext i32 %50 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %65, %79\l  %84 = fmul contract float %83, %5\l  %85 = fadd contract float %82, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %80\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = fmul contract float %44, %87\l  %89 = fadd contract float %88, %85\l  %90 = fdiv contract float %89, %45\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !7\l  %92 = add nuw nsw i32 %47, 1\l  %93 = icmp eq i32 %92, %9\l  br i1 %93, label %94, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47330f0:s0 -> Node0x472fd10;
	Node0x47330f0:s1 -> Node0x4732fc0;
	Node0x472fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%94:\l94:                                               \l  ret void\l}"];
}
