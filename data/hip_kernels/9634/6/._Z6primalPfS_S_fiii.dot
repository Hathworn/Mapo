digraph "CFG for '_Z6primalPfS_S_fiii' function" {
	label="CFG for '_Z6primalPfS_S_fiii' function";

	Node0x514d250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp slt i32 %16, %4\l  %26 = icmp slt i32 %24, %5\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = icmp sgt i32 %6, 0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %100\l|{<s0>T|<s1>F}}"];
	Node0x514d250:s0 -> Node0x5150e30;
	Node0x514d250:s1 -> Node0x5150ec0;
	Node0x5150e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %24, %4\l  %32 = mul nsw i32 %5, %4\l  %33 = add nsw i32 %16, 1\l  %34 = icmp slt i32 %33, %4\l  %35 = add nsw i32 %24, 1\l  %36 = icmp slt i32 %35, %5\l  %37 = mul nsw i32 %35, %4\l  br label %38\l}"];
	Node0x5150e30 -> Node0x514f150;
	Node0x514f150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %30 ], [ %98, %61 ]\l  %40 = mul nsw i32 %32, %39\l  %41 = add i32 %40, %31\l  %42 = add i32 %41, %16\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  br i1 %34, label %46, label %52\l|{<s0>T|<s1>F}}"];
	Node0x514f150:s0 -> Node0x5151bf0;
	Node0x514f150:s1 -> Node0x5151c80;
	Node0x5151bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  %47 = add i32 %41, %33\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = fsub contract float %50, %45\l  br label %52\l}"];
	Node0x5151bf0 -> Node0x5151c80;
	Node0x5151c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi contract float [ %51, %46 ], [ 0.000000e+00, %38 ]\l  br i1 %36, label %54, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5151c80:s0 -> Node0x51531a0;
	Node0x5151c80:s1 -> Node0x5151610;
	Node0x51531a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  %55 = add i32 %40, %16\l  %56 = add i32 %55, %37\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fsub contract float %59, %45\l  br label %61\l}"];
	Node0x51531a0 -> Node0x5151610;
	Node0x5151610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi contract float [ %60, %54 ], [ 0.000000e+00, %52 ]\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fmul contract float %53, %3\l  %66 = fadd contract float %65, %64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fmul contract float %62, %3\l  %70 = fadd contract float %69, %68\l  %71 = fmul contract float %66, %66\l  %72 = fmul contract float %70, %70\l  %73 = fadd contract float %71, %72\l  %74 = fcmp olt float %73, 0x39F0000000000000\l  %75 = select i1 %74, float 0x41F0000000000000, float 1.000000e+00\l  %76 = fmul float %73, %75\l  %77 = tail call float @llvm.sqrt.f32(float %76)\l  %78 = bitcast float %77 to i32\l  %79 = add nsw i32 %78, -1\l  %80 = bitcast i32 %79 to float\l  %81 = add nsw i32 %78, 1\l  %82 = bitcast i32 %81 to float\l  %83 = tail call i1 @llvm.amdgcn.class.f32(float %76, i32 608)\l  %84 = select i1 %74, float 0x3EF0000000000000, float 1.000000e+00\l  %85 = fneg float %82\l  %86 = tail call float @llvm.fma.f32(float %85, float %77, float %76)\l  %87 = fcmp ogt float %86, 0.000000e+00\l  %88 = fneg float %80\l  %89 = tail call float @llvm.fma.f32(float %88, float %77, float %76)\l  %90 = fcmp ole float %89, 0.000000e+00\l  %91 = select i1 %90, float %80, float %77\l  %92 = select i1 %87, float %82, float %91\l  %93 = fmul float %84, %92\l  %94 = select i1 %83, float %76, float %93\l  %95 = tail call float @llvm.maxnum.f32(float %94, float 1.000000e+00)\l  %96 = fdiv contract float %66, %95\l  store float %96, float addrspace(1)* %63, align 4, !tbaa !7\l  %97 = fdiv contract float %70, %95\l  store float %97, float addrspace(1)* %67, align 4, !tbaa !7\l  %98 = add nuw nsw i32 %39, 1\l  %99 = icmp eq i32 %98, %6\l  br i1 %99, label %100, label %38, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5151610:s0 -> Node0x5150ec0;
	Node0x5151610:s1 -> Node0x514f150;
	Node0x5150ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%100:\l100:                                              \l  ret void\l}"];
}
