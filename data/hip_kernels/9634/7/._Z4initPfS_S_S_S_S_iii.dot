digraph "CFG for '_Z4initPfS_S_S_S_S_iii' function" {
	label="CFG for '_Z4initPfS_S_S_S_S_iii' function";

	Node0x5c55ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %12, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %18, %6\l  %28 = icmp slt i32 %26, %7\l  %29 = select i1 %27, i1 %28, i1 false\l  %30 = icmp sgt i32 %8, 0\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %115\l|{<s0>T|<s1>F}}"];
	Node0x5c55ec0:s0 -> Node0x5c5a600;
	Node0x5c55ec0:s1 -> Node0x5c5a690;
	Node0x5c5a600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %8, 3\l  %34 = icmp ult i32 %8, 4\l  br i1 %34, label %94, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5c5a600:s0 -> Node0x5c5aa70;
	Node0x5c5a600:s1 -> Node0x5c5aac0;
	Node0x5c5aac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %8, -4\l  br label %37\l}"];
	Node0x5c5aac0 -> Node0x5c5acc0;
	Node0x5c5acc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %91, %37 ]\l  %39 = phi i32 [ 0, %35 ], [ %92, %37 ]\l  %40 = mul i32 %38, %7\l  %41 = add i32 %40, %26\l  %42 = mul i32 %41, %6\l  %43 = add i32 %42, %18\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float %46, float addrspace(1)* %47, align 4, !tbaa !7\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  store float %46, float addrspace(1)* %49, align 4, !tbaa !7\l  %50 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  store float 0.000000e+00, float addrspace(1)* %50, align 4, !tbaa !7\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %44\l  store float 0.000000e+00, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = or i32 %38, 1\l  %53 = mul i32 %52, %7\l  %54 = add i32 %53, %26\l  %55 = mul i32 %54, %6\l  %56 = add i32 %55, %18\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %5, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  store float %59, float addrspace(1)* %60, align 4, !tbaa !7\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  store float %59, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  store float %59, float addrspace(1)* %62, align 4, !tbaa !7\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %57\l  store float 0.000000e+00, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %57\l  store float 0.000000e+00, float addrspace(1)* %64, align 4, !tbaa !7\l  %65 = or i32 %38, 2\l  %66 = mul i32 %65, %7\l  %67 = add i32 %66, %26\l  %68 = mul i32 %67, %6\l  %69 = add i32 %68, %18\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %5, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = getelementptr inbounds float, float addrspace(1)* %2, i64 %70\l  store float %72, float addrspace(1)* %74, align 4, !tbaa !7\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  store float %72, float addrspace(1)* %75, align 4, !tbaa !7\l  %76 = getelementptr inbounds float, float addrspace(1)* %3, i64 %70\l  store float 0.000000e+00, float addrspace(1)* %76, align 4, !tbaa !7\l  %77 = getelementptr inbounds float, float addrspace(1)* %4, i64 %70\l  store float 0.000000e+00, float addrspace(1)* %77, align 4, !tbaa !7\l  %78 = or i32 %38, 3\l  %79 = mul i32 %78, %7\l  %80 = add i32 %79, %26\l  %81 = mul i32 %80, %6\l  %82 = add i32 %81, %18\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %5, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  store float %85, float addrspace(1)* %86, align 4, !tbaa !7\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %83\l  store float %85, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  store float %85, float addrspace(1)* %88, align 4, !tbaa !7\l  %89 = getelementptr inbounds float, float addrspace(1)* %3, i64 %83\l  store float 0.000000e+00, float addrspace(1)* %89, align 4, !tbaa !7\l  %90 = getelementptr inbounds float, float addrspace(1)* %4, i64 %83\l  store float 0.000000e+00, float addrspace(1)* %90, align 4, !tbaa !7\l  %91 = add nuw nsw i32 %38, 4\l  %92 = add i32 %39, 4\l  %93 = icmp eq i32 %92, %36\l  br i1 %93, label %94, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c5acc0:s0 -> Node0x5c5aa70;
	Node0x5c5acc0:s1 -> Node0x5c5acc0;
	Node0x5c5aa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%94:\l94:                                               \l  %95 = phi i32 [ 0, %32 ], [ %91, %37 ]\l  %96 = icmp eq i32 %33, 0\l  br i1 %96, label %115, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5c5aa70:s0 -> Node0x5c5a690;
	Node0x5c5aa70:s1 -> Node0x5c5f0b0;
	Node0x5c5f0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi i32 [ %112, %97 ], [ %95, %94 ]\l  %99 = phi i32 [ %113, %97 ], [ 0, %94 ]\l  %100 = mul i32 %98, %7\l  %101 = add i32 %100, %26\l  %102 = mul i32 %101, %6\l  %103 = add i32 %102, %18\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  store float %106, float addrspace(1)* %107, align 4, !tbaa !7\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %104\l  store float %106, float addrspace(1)* %108, align 4, !tbaa !7\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  store float %106, float addrspace(1)* %109, align 4, !tbaa !7\l  %110 = getelementptr inbounds float, float addrspace(1)* %3, i64 %104\l  store float 0.000000e+00, float addrspace(1)* %110, align 4, !tbaa !7\l  %111 = getelementptr inbounds float, float addrspace(1)* %4, i64 %104\l  store float 0.000000e+00, float addrspace(1)* %111, align 4, !tbaa !7\l  %112 = add nuw nsw i32 %98, 1\l  %113 = add i32 %99, 1\l  %114 = icmp eq i32 %113, %33\l  br i1 %114, label %115, label %97, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c5f0b0:s0 -> Node0x5c5a690;
	Node0x5c5f0b0:s1 -> Node0x5c5f0b0;
	Node0x5c5a690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%115:\l115:                                              \l  ret void\l}"];
}
