digraph "CFG for '_Z6primalPfS_PKfS1_S1_dii' function" {
	label="CFG for '_Z6primalPfS_PKfS1_S1_dii' function";

	Node0x4d5e3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul nsw i32 %25, %6\l  %27 = add nsw i32 %26, %17\l  %28 = icmp eq i32 %17, 0\l  br i1 %28, label %29, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4d5e3a0:s0 -> Node0x4d61dc0;
	Node0x4d5e3a0:s1 -> Node0x4d61e50;
	Node0x4d61dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%29:\l29:                                               \l  %30 = sext i32 %27 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %33\l}"];
	Node0x4d61dc0 -> Node0x4d61e50;
	Node0x4d61e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi float [ %32, %29 ], [ 0.000000e+00, %8 ]\l  %35 = icmp sgt i32 %17, 0\l  %36 = add nsw i32 %6, -1\l  %37 = icmp slt i32 %17, %36\l  %38 = and i1 %35, %37\l  br i1 %38, label %39, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4d61e50:s0 -> Node0x4d601f0;
	Node0x4d61e50:s1 -> Node0x4d631c0;
	Node0x4d601f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%39:\l39:                                               \l  %40 = sext i32 %27 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = add nsw i32 %27, -1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fsub contract float %42, %46\l  br label %48\l}"];
	Node0x4d601f0 -> Node0x4d631c0;
	Node0x4d631c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi float [ %47, %39 ], [ %34, %33 ]\l  %50 = icmp eq i32 %17, %36\l  br i1 %50, label %51, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4d631c0:s0 -> Node0x4d63f50;
	Node0x4d631c0:s1 -> Node0x4d63fa0;
	Node0x4d63f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%51:\l51:                                               \l  %52 = add nsw i32 %27, -1\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %3, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fneg contract float %55\l  br label %57\l}"];
	Node0x4d63f50 -> Node0x4d63fa0;
	Node0x4d63fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi float [ %56, %51 ], [ %49, %48 ]\l  %59 = icmp eq i32 %25, 0\l  br i1 %59, label %60, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4d63fa0:s0 -> Node0x4d64510;
	Node0x4d63fa0:s1 -> Node0x4d64560;
	Node0x4d64510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%60:\l60:                                               \l  %61 = sext i32 %27 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %4, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %64\l}"];
	Node0x4d64510 -> Node0x4d64560;
	Node0x4d64560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi float [ %63, %60 ], [ 0.000000e+00, %57 ]\l  %66 = icmp sgt i32 %25, 0\l  %67 = add nsw i32 %7, -1\l  %68 = icmp slt i32 %25, %67\l  %69 = select i1 %66, i1 %68, i1 false\l  br i1 %69, label %70, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4d64560:s0 -> Node0x4d64de0;
	Node0x4d64560:s1 -> Node0x4d64e30;
	Node0x4d64de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%70:\l70:                                               \l  %71 = sext i32 %27 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %4, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = sub nsw i32 %27, %6\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %4, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fsub contract float %73, %77\l  br label %79\l}"];
	Node0x4d64de0 -> Node0x4d64e30;
	Node0x4d64e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = phi float [ %78, %70 ], [ %65, %64 ]\l  %81 = icmp eq i32 %25, %67\l  br i1 %81, label %82, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4d64e30:s0 -> Node0x4d65570;
	Node0x4d64e30:s1 -> Node0x4d655c0;
	Node0x4d65570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%82:\l82:                                               \l  %83 = sub nsw i32 %27, %6\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %4, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = fneg contract float %86\l  br label %88\l}"];
	Node0x4d65570 -> Node0x4d655c0;
	Node0x4d655c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi float [ %87, %82 ], [ %80, %79 ]\l  %90 = sext i32 %27 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = fpext float %92 to double\l  %94 = fadd contract float %58, %89\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = fadd contract float %94, %96\l  %98 = fpext float %97 to double\l  %99 = fmul contract double %98, %5\l  %100 = fadd contract double %99, %93\l  %101 = fadd contract double %5, 1.000000e+00\l  %102 = fdiv contract double %100, %101\l  %103 = fptrunc double %102 to float\l  store float %103, float addrspace(1)* %91, align 4, !tbaa !7\l  %104 = fmul contract float %103, 2.000000e+00\l  %105 = fsub contract float %104, %92\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  store float %105, float addrspace(1)* %106, align 4, !tbaa !7\l  ret void\l}"];
}
