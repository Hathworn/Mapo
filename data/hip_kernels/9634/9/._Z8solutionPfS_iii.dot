digraph "CFG for '_Z8solutionPfS_iii' function" {
	label="CFG for '_Z8solutionPfS_iii' function";

	Node0x52a5e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = add i32 %13, %6\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = icmp slt i32 %14, %2\l  %24 = icmp slt i32 %22, %3\l  %25 = select i1 %23, i1 %24, i1 false\l  %26 = icmp sgt i32 %4, 0\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %91\l|{<s0>T|<s1>F}}"];
	Node0x52a5e40:s0 -> Node0x52a9a30;
	Node0x52a5e40:s1 -> Node0x52a9ac0;
	Node0x52a9a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = and i32 %4, 3\l  %30 = icmp ult i32 %4, 4\l  br i1 %30, label %74, label %31\l|{<s0>T|<s1>F}}"];
	Node0x52a9a30:s0 -> Node0x52a9d80;
	Node0x52a9a30:s1 -> Node0x52a9dd0;
	Node0x52a9dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = and i32 %4, -4\l  br label %33\l}"];
	Node0x52a9dd0 -> Node0x52a8670;
	Node0x52a8670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %31 ], [ %71, %33 ]\l  %35 = phi i32 [ 0, %31 ], [ %72, %33 ]\l  %36 = mul i32 %34, %3\l  %37 = add i32 %36, %22\l  %38 = mul i32 %37, %2\l  %39 = add i32 %38, %14\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %34, 1\l  %45 = mul i32 %44, %3\l  %46 = add i32 %45, %22\l  %47 = mul i32 %46, %2\l  %48 = add i32 %47, %14\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  store float %51, float addrspace(1)* %52, align 4, !tbaa !7\l  %53 = or i32 %34, 2\l  %54 = mul i32 %53, %3\l  %55 = add i32 %54, %22\l  %56 = mul i32 %55, %2\l  %57 = add i32 %56, %14\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  store float %60, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = or i32 %34, 3\l  %63 = mul i32 %62, %3\l  %64 = add i32 %63, %22\l  %65 = mul i32 %64, %2\l  %66 = add i32 %65, %14\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %69, float addrspace(1)* %70, align 4, !tbaa !7\l  %71 = add nuw nsw i32 %34, 4\l  %72 = add i32 %35, 4\l  %73 = icmp eq i32 %72, %32\l  br i1 %73, label %74, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52a8670:s0 -> Node0x52a9d80;
	Node0x52a8670:s1 -> Node0x52a8670;
	Node0x52a9d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %28 ], [ %71, %33 ]\l  %76 = icmp eq i32 %29, 0\l  br i1 %76, label %91, label %77\l|{<s0>T|<s1>F}}"];
	Node0x52a9d80:s0 -> Node0x52a9ac0;
	Node0x52a9d80:s1 -> Node0x52ac770;
	Node0x52ac770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %88, %77 ], [ %75, %74 ]\l  %79 = phi i32 [ %89, %77 ], [ 0, %74 ]\l  %80 = mul i32 %78, %3\l  %81 = add i32 %80, %22\l  %82 = mul i32 %81, %2\l  %83 = add i32 %82, %14\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nuw nsw i32 %78, 1\l  %89 = add i32 %79, 1\l  %90 = icmp eq i32 %89, %29\l  br i1 %90, label %91, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x52ac770:s0 -> Node0x52a9ac0;
	Node0x52ac770:s1 -> Node0x52ac770;
	Node0x52a9ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%91:\l91:                                               \l  ret void\l}"];
}
