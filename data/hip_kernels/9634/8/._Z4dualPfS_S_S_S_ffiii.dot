digraph "CFG for '_Z4dualPfS_S_S_S_ffiii' function" {
	label="CFG for '_Z4dualPfS_S_S_S_ffiii' function";

	Node0x5cb5980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = add i32 %18, %11\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = add i32 %26, %20\l  %28 = icmp slt i32 %19, %7\l  %29 = icmp slt i32 %27, %8\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5cb5980:s0 -> Node0x5cb9fa0;
	Node0x5cb5980:s1 -> Node0x5cba030;
	Node0x5cb9fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = fmul contract float %5, %6\l  %33 = icmp sgt i32 %9, 0\l  br i1 %33, label %34, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5cb9fa0:s0 -> Node0x5cb8290;
	Node0x5cb9fa0:s1 -> Node0x5cba030;
	Node0x5cb8290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  %35 = mul nsw i32 %27, %7\l  %36 = mul nsw i32 %8, %7\l  %37 = add nsw i32 %19, 1\l  %38 = icmp slt i32 %37, %7\l  %39 = icmp sgt i32 %19, 0\l  %40 = add nsw i32 %27, 1\l  %41 = icmp slt i32 %40, %8\l  %42 = icmp sgt i32 %27, 0\l  %43 = add nsw i32 %27, -1\l  %44 = mul nsw i32 %43, %7\l  %45 = fneg contract float %32\l  br label %46\l}"];
	Node0x5cb8290 -> Node0x5cbab30;
	Node0x5cbab30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %34 ], [ %105, %104 ]\l  %48 = mul nsw i32 %36, %47\l  %49 = add i32 %48, %19\l  %50 = add i32 %49, %35\l  br i1 %38, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5cbab30:s0 -> Node0x5cbaf10;
	Node0x5cbab30:s1 -> Node0x5cbafa0;
	Node0x5cbaf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%51:\l51:                                               \l  %52 = sext i32 %50 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x5cbaf10 -> Node0x5cbafa0;
	Node0x5cbafa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  %56 = phi contract float [ %54, %51 ], [ 0.000000e+00, %46 ]\l  br i1 %39, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5cbafa0:s0 -> Node0x5cbbec0;
	Node0x5cbafa0:s1 -> Node0x5cbbf50;
	Node0x5cbbec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%57:\l57:                                               \l  %58 = add nsw i32 %49, -1\l  %59 = add i32 %58, %35\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x5cbbec0 -> Node0x5cbbf50;
	Node0x5cbbf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi contract float [ %62, %57 ], [ 0.000000e+00, %55 ]\l  %65 = fsub contract float %56, %64\l  br i1 %41, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5cbbf50:s0 -> Node0x5cba290;
	Node0x5cbbf50:s1 -> Node0x5cba2e0;
	Node0x5cba290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%66:\l66:                                               \l  %67 = sext i32 %50 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %3, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5cba290 -> Node0x5cba2e0;
	Node0x5cba2e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi contract float [ %69, %66 ], [ 0.000000e+00, %63 ]\l  br i1 %42, label %72, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5cba2e0:s0 -> Node0x5cbd110;
	Node0x5cba2e0:s1 -> Node0x5cbd160;
	Node0x5cbd110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%72:\l72:                                               \l  %73 = add i32 %49, %44\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %3, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  br label %77\l}"];
	Node0x5cbd110 -> Node0x5cbd160;
	Node0x5cbd160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi contract float [ %76, %72 ], [ 0.000000e+00, %70 ]\l  %79 = fsub contract float %71, %78\l  %80 = sext i32 %50 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %65, %79\l  %84 = fmul contract float %83, %5\l  %85 = fadd contract float %82, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %80\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = fsub contract float %85, %87\l  %89 = fcmp contract ogt float %88, %32\l  br i1 %89, label %90, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5cbd160:s0 -> Node0x5cbdb80;
	Node0x5cbd160:s1 -> Node0x5cbdbd0;
	Node0x5cbdb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%90:\l90:                                               \l  %91 = fsub contract float %85, %32\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x5cbdb80 -> Node0x5cbdbd0;
	Node0x5cbdbd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = fcmp contract olt float %88, %45\l  br i1 %94, label %95, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5cbdbd0:s0 -> Node0x5cbdf90;
	Node0x5cbdbd0:s1 -> Node0x5cbdfe0;
	Node0x5cbdf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%95:\l95:                                               \l  %96 = fadd contract float %32, %85\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %96, float addrspace(1)* %97, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x5cbdf90 -> Node0x5cbdfe0;
	Node0x5cbdfe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = tail call float @llvm.fabs.f32(float %88)\l  %100 = fcmp contract ugt float %99, %32\l  br i1 %100, label %104, label %101\l|{<s0>T|<s1>F}}"];
	Node0x5cbdfe0:s0 -> Node0x5cbac20;
	Node0x5cbdfe0:s1 -> Node0x5cbe520;
	Node0x5cbe520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%101:\l101:                                              \l  %102 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %102, float addrspace(1)* %103, align 4, !tbaa !7\l  br label %104\l}"];
	Node0x5cbe520 -> Node0x5cbac20;
	Node0x5cbac20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  %105 = add nuw nsw i32 %47, 1\l  %106 = icmp eq i32 %105, %9\l  br i1 %106, label %107, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5cbac20:s0 -> Node0x5cba030;
	Node0x5cbac20:s1 -> Node0x5cbab30;
	Node0x5cba030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%107:\l107:                                              \l  ret void\l}"];
}
