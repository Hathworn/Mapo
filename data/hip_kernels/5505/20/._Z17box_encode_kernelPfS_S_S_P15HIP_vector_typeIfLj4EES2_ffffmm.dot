digraph "CFG for '_Z17box_encode_kernelPfS_S_S_P15HIP_vector_typeIfLj4EES2_ffffmm' function" {
	label="CFG for '_Z17box_encode_kernelPfS_S_S_P15HIP_vector_typeIfLj4EES2_ffffmm' function";

	Node0x4f985a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = sext i32 %21 to i64\l  %23 = icmp ult i64 %22, %10\l  br i1 %23, label %25, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4f985a0:s0 -> Node0x4f9b120;
	Node0x4f985a0:s1 -> Node0x4f9b1b0;
	Node0x4f9b1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x4f9b120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i64 [ %113, %25 ], [ %22, %12 ]\l  %27 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %26, i32 0, i32 0, i32 0, i64 0\l  %28 = load float, float addrspace(1)* %27, align 16, !tbaa !7\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %26, i32 0, i32 0, i32 0, i64 1\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %26, i32 0, i32 0, i32 0, i64 2\l  %32 = load float, float addrspace(1)* %31, align 8, !tbaa !7\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %5, i64 %26, i32 0, i32 0, i32 0, i64 3\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %26, i32 0, i32 0, i32 0, i64 0\l  %36 = load float, float addrspace(1)* %35, align 16, !tbaa !7\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %26, i32 0, i32 0, i32 0, i64 1\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %26, i32 0, i32 0, i32 0, i64 2\l  %40 = load float, float addrspace(1)* %39, align 8, !tbaa !7\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %26, i32 0, i32 0, i32 0, i64 3\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = fsub contract float %32, %28\l  %44 = fadd contract float %43, 1.000000e+00\l  %45 = fsub contract float %34, %30\l  %46 = fadd contract float %45, 1.000000e+00\l  %47 = fpext float %28 to double\l  %48 = fpext float %44 to double\l  %49 = fmul contract double %48, 5.000000e-01\l  %50 = fadd contract double %49, %47\l  %51 = fptrunc double %50 to float\l  %52 = fpext float %30 to double\l  %53 = fpext float %46 to double\l  %54 = fmul contract double %53, 5.000000e-01\l  %55 = fadd contract double %54, %52\l  %56 = fptrunc double %55 to float\l  %57 = fsub contract float %40, %36\l  %58 = fadd contract float %57, 1.000000e+00\l  %59 = fsub contract float %42, %38\l  %60 = fadd contract float %59, 1.000000e+00\l  %61 = fpext float %36 to double\l  %62 = fpext float %58 to double\l  %63 = fmul contract double %62, 5.000000e-01\l  %64 = fadd contract double %63, %61\l  %65 = fptrunc double %64 to float\l  %66 = fpext float %38 to double\l  %67 = fpext float %60 to double\l  %68 = fmul contract double %67, 5.000000e-01\l  %69 = fadd contract double %68, %66\l  %70 = fptrunc double %69 to float\l  %71 = fsub contract float %65, %51\l  %72 = fmul contract float %71, %6\l  %73 = fdiv contract float %72, %44\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !10\l  %75 = fsub contract float %70, %56\l  %76 = fmul contract float %75, %7\l  %77 = fdiv contract float %76, %46\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !10\l  %79 = fdiv contract float %58, %44\l  %80 = tail call i1 @llvm.amdgcn.class.f32(float %79, i32 144)\l  %81 = select i1 %80, float 0x41F0000000000000, float 1.000000e+00\l  %82 = fmul float %79, %81\l  %83 = tail call float @llvm.log2.f32(float %82)\l  %84 = fmul float %83, 0x3FE62E42E0000000\l  %85 = tail call i1 @llvm.amdgcn.class.f32(float %83, i32 519)\l  %86 = fneg float %84\l  %87 = tail call float @llvm.fma.f32(float %83, float 0x3FE62E42E0000000,\l... float %86)\l  %88 = tail call float @llvm.fma.f32(float %83, float 0x3E6EFA39E0000000,\l... float %87)\l  %89 = fadd float %84, %88\l  %90 = select i1 %85, float %83, float %89\l  %91 = select i1 %80, float 0x40362E4300000000, float 0.000000e+00\l  %92 = fsub float %90, %91\l  %93 = fmul contract float %92, %8\l  %94 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !10\l  %95 = fdiv contract float %60, %46\l  %96 = tail call i1 @llvm.amdgcn.class.f32(float %95, i32 144)\l  %97 = select i1 %96, float 0x41F0000000000000, float 1.000000e+00\l  %98 = fmul float %95, %97\l  %99 = tail call float @llvm.log2.f32(float %98)\l  %100 = fmul float %99, 0x3FE62E42E0000000\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %99, i32 519)\l  %102 = fneg float %100\l  %103 = tail call float @llvm.fma.f32(float %99, float 0x3FE62E42E0000000,\l... float %102)\l  %104 = tail call float @llvm.fma.f32(float %99, float 0x3E6EFA39E0000000,\l... float %103)\l  %105 = fadd float %100, %104\l  %106 = select i1 %101, float %99, float %105\l  %107 = select i1 %96, float 0x40362E4300000000, float 0.000000e+00\l  %108 = fsub float %106, %107\l  %109 = fmul contract float %108, %9\l  %110 = getelementptr inbounds float, float addrspace(1)* %3, i64 %26\l  store float %109, float addrspace(1)* %110, align 4, !tbaa !10\l  %111 = add i64 %26, %11\l  %112 = shl i64 %111, 32\l  %113 = ashr exact i64 %112, 32\l  %114 = icmp ult i64 %113, %10\l  br i1 %114, label %25, label %24, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4f9b120:s0 -> Node0x4f9b120;
	Node0x4f9b120:s1 -> Node0x4f9b1b0;
}
