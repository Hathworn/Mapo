digraph "CFG for '_Z37cunnx_BlockSparse_updateOutput_kernelPfPKfS1_S1_S1_iiii' function" {
	label="CFG for '_Z37cunnx_BlockSparse_updateOutput_kernelPfPKfS1_S1_S1_iiii' function";

	Node0x4e2be40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = mul i32 %16, %8\l  %18 = mul i32 %17, %5\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = mul i32 %18, %7\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = sext i32 %17 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %24\l  %27 = icmp sgt i32 %8, 0\l  br i1 %27, label %28, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4e2be40:s0 -> Node0x4e2ed60;
	Node0x4e2be40:s1 -> Node0x4e2edf0;
	Node0x4e2ed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%28:\l28:                                               \l  %29 = icmp slt i32 %10, %5\l  %30 = icmp sgt i32 %7, 0\l  %31 = and i32 %7, 7\l  %32 = icmp ult i32 %7, 8\l  %33 = and i32 %7, -8\l  %34 = icmp eq i32 %31, 0\l  br label %36\l}"];
	Node0x4e2ed60 -> Node0x4e2e790;
	Node0x4e2edf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%35:\l35:                                               \l  ret void\l}"];
	Node0x4e2e790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %28 ], [ %49, %48 ]\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %26, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  br i1 %29, label %41, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4e2e790:s0 -> Node0x4e2f980;
	Node0x4e2e790:s1 -> Node0x4e2f560;
	Node0x4e2f980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds float, float addrspace(1)* %25, i64 %38\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = fptosi float %43 to i32\l  %45 = add nsw i32 %44, -1\l  %46 = mul nsw i32 %45, %5\l  %47 = mul nsw i32 %37, %5\l  br label %51\l}"];
	Node0x4e2f980 -> Node0x4e30400;
	Node0x4e2f560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%48:\l48:                                               \l  %49 = add nuw nsw i32 %37, 1\l  %50 = icmp eq i32 %49, %8\l  br i1 %50, label %35, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4e2f560:s0 -> Node0x4e2edf0;
	Node0x4e2f560:s1 -> Node0x4e2e790;
	Node0x4e30400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%51:\l51:                                               \l  %52 = phi i32 [ %10, %41 ], [ %83, %77 ]\l  %53 = add nsw i32 %52, %46\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  br i1 %30, label %57, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4e30400:s0 -> Node0x4e30b00;
	Node0x4e30400:s1 -> Node0x4e30780;
	Node0x4e30b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%57:\l57:                                               \l  br i1 %32, label %58, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4e30b00:s0 -> Node0x4e30c40;
	Node0x4e30b00:s1 -> Node0x4e30c90;
	Node0x4e30c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%58:\l58:                                               \l  %59 = phi float [ undef, %57 ], [ %159, %85 ]\l  %60 = phi float [ %56, %57 ], [ %159, %85 ]\l  %61 = phi i32 [ 0, %57 ], [ %160, %85 ]\l  br i1 %34, label %77, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4e30c40:s0 -> Node0x4e30780;
	Node0x4e30c40:s1 -> Node0x4e31460;
	Node0x4e31460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = phi float [ %73, %62 ], [ %60, %58 ]\l  %64 = phi i32 [ %74, %62 ], [ %61, %58 ]\l  %65 = phi i32 [ %75, %62 ], [ 0, %58 ]\l  %66 = mul nsw i32 %64, %8\l  %67 = add i32 %66, %37\l  %68 = mul i32 %67, %5\l  %69 = add nsw i32 %68, %52\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %23, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = fadd contract float %72, %63\l  %74 = add nuw nsw i32 %64, 1\l  %75 = add i32 %65, 1\l  %76 = icmp eq i32 %75, %31\l  br i1 %76, label %77, label %62, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4e31460:s0 -> Node0x4e30780;
	Node0x4e31460:s1 -> Node0x4e31460;
	Node0x4e30780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%77:\l77:                                               \l  %78 = phi float [ %56, %51 ], [ %59, %58 ], [ %73, %62 ]\l  %79 = fmul contract float %40, %78\l  %80 = add nsw i32 %52, %47\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %20, i64 %81\l  store float %79, float addrspace(1)* %82, align 4, !tbaa !7\l  %83 = add nuw nsw i32 %52, %15\l  %84 = icmp slt i32 %83, %5\l  br i1 %84, label %51, label %48, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4e30780:s0 -> Node0x4e30400;
	Node0x4e30780:s1 -> Node0x4e2f560;
	Node0x4e30c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%85:\l85:                                               \l  %86 = phi float [ %159, %85 ], [ %56, %57 ]\l  %87 = phi i32 [ %160, %85 ], [ 0, %57 ]\l  %88 = phi i32 [ %161, %85 ], [ 0, %57 ]\l  %89 = mul nsw i32 %87, %8\l  %90 = add i32 %89, %37\l  %91 = mul i32 %90, %5\l  %92 = add nsw i32 %91, %52\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %23, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = fadd contract float %95, %86\l  %97 = or i32 %87, 1\l  %98 = mul nsw i32 %97, %8\l  %99 = add i32 %98, %37\l  %100 = mul i32 %99, %5\l  %101 = add nsw i32 %100, %52\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %23, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7\l  %105 = fadd contract float %104, %96\l  %106 = or i32 %87, 2\l  %107 = mul nsw i32 %106, %8\l  %108 = add i32 %107, %37\l  %109 = mul i32 %108, %5\l  %110 = add nsw i32 %109, %52\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %23, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = fadd contract float %113, %105\l  %115 = or i32 %87, 3\l  %116 = mul nsw i32 %115, %8\l  %117 = add i32 %116, %37\l  %118 = mul i32 %117, %5\l  %119 = add nsw i32 %118, %52\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %23, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = fadd contract float %122, %114\l  %124 = or i32 %87, 4\l  %125 = mul nsw i32 %124, %8\l  %126 = add i32 %125, %37\l  %127 = mul i32 %126, %5\l  %128 = add nsw i32 %127, %52\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %23, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = fadd contract float %131, %123\l  %133 = or i32 %87, 5\l  %134 = mul nsw i32 %133, %8\l  %135 = add i32 %134, %37\l  %136 = mul i32 %135, %5\l  %137 = add nsw i32 %136, %52\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %23, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7\l  %141 = fadd contract float %140, %132\l  %142 = or i32 %87, 6\l  %143 = mul nsw i32 %142, %8\l  %144 = add i32 %143, %37\l  %145 = mul i32 %144, %5\l  %146 = add nsw i32 %145, %52\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %23, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7\l  %150 = fadd contract float %149, %141\l  %151 = or i32 %87, 7\l  %152 = mul nsw i32 %151, %8\l  %153 = add i32 %152, %37\l  %154 = mul i32 %153, %5\l  %155 = add nsw i32 %154, %52\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %23, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7\l  %159 = fadd contract float %158, %150\l  %160 = add nuw nsw i32 %87, 8\l  %161 = add i32 %88, 8\l  %162 = icmp eq i32 %161, %33\l  br i1 %162, label %58, label %85, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4e30c90:s0 -> Node0x4e30c40;
	Node0x4e30c90:s1 -> Node0x4e30c90;
}
