digraph "CFG for '_Z43cunnx_WindowSparse_accGradParameters_kernelPfS_S_S_S_S_iiiif' function" {
	label="CFG for '_Z43cunnx_WindowSparse_accGradParameters_kernelPfS_S_S_S_S_iiiif' function";

	Node0x604a1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %4, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %22 = fptosi float %21 to i32\l  %23 = add nsw i32 %22, -1\l  %24 = getelementptr inbounds float, float addrspace(1)* %5, i64 %19\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %26 = fptosi float %25 to i32\l  %27 = add nsw i32 %26, -1\l  %28 = mul nsw i32 %18, %6\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %3, i64 %29\l  %31 = mul nsw i32 %18, %7\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = mul nsw i32 %27, %8\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = sext i32 %23 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %36, i64 %37\l  %39 = sext i32 %27 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = icmp slt i32 %12, %6\l  br i1 %41, label %42, label %48\l|{<s0>T|<s1>F}}"];
	Node0x604a1d0:s0 -> Node0x604e8f0;
	Node0x604a1d0:s1 -> Node0x604e980;
	Node0x604e8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %7, 0\l  %44 = and i32 %7, 7\l  %45 = icmp ult i32 %7, 8\l  %46 = and i32 %7, -8\l  %47 = icmp eq i32 %44, 0\l  br label %50\l}"];
	Node0x604e8f0 -> Node0x604ee50;
	Node0x604e980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%48:\l48:                                               \l  %49 = icmp slt i32 %12, %7\l  br i1 %49, label %163, label %162\l|{<s0>T|<s1>F}}"];
	Node0x604e980:s0 -> Node0x604efa0;
	Node0x604e980:s1 -> Node0x604eff0;
	Node0x604ee50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%50:\l50:                                               \l  %51 = phi i32 [ %12, %42 ], [ %75, %74 ]\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %30, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = fmul contract float %54, %10\l  br i1 %43, label %56, label %74\l|{<s0>T|<s1>F}}"];
	Node0x604ee50:s0 -> Node0x604f4e0;
	Node0x604ee50:s1 -> Node0x604f160;
	Node0x604f4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%56:\l56:                                               \l  br i1 %45, label %57, label %77\l|{<s0>T|<s1>F}}"];
	Node0x604f4e0:s0 -> Node0x604f620;
	Node0x604f4e0:s1 -> Node0x604f670;
	Node0x604f620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %56 ], [ %159, %77 ]\l  br i1 %47, label %74, label %59\l|{<s0>T|<s1>F}}"];
	Node0x604f620:s0 -> Node0x604f160;
	Node0x604f620:s1 -> Node0x604f860;
	Node0x604f860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %71, %59 ], [ %58, %57 ]\l  %61 = phi i32 [ %72, %59 ], [ 0, %57 ]\l  %62 = mul nsw i32 %60, %8\l  %63 = add nsw i32 %62, %51\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %38, i64 %64\l  %66 = zext i32 %60 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %33, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fmul contract float %55, %68\l  %70 = atomicrmw fadd float addrspace(1)* %65, float %69\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %71 = add nuw nsw i32 %60, 1\l  %72 = add i32 %61, 1\l  %73 = icmp eq i32 %72, %44\l  br i1 %73, label %74, label %59, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x604f860:s0 -> Node0x604f160;
	Node0x604f860:s1 -> Node0x604f860;
	Node0x604f160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %51, %17\l  %76 = icmp slt i32 %75, %6\l  br i1 %76, label %50, label %48, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x604f160:s0 -> Node0x604ee50;
	Node0x604f160:s1 -> Node0x604e980;
	Node0x604f670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%77:\l77:                                               \l  %78 = phi i32 [ %159, %77 ], [ 0, %56 ]\l  %79 = phi i32 [ %160, %77 ], [ 0, %56 ]\l  %80 = mul nsw i32 %78, %8\l  %81 = add nsw i32 %80, %51\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %38, i64 %82\l  %84 = zext i32 %78 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %33, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fmul contract float %55, %86\l  %88 = atomicrmw fadd float addrspace(1)* %83, float %87\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %89 = or i32 %78, 1\l  %90 = mul nsw i32 %89, %8\l  %91 = add nsw i32 %90, %51\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %38, i64 %92\l  %94 = zext i32 %89 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %33, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fmul contract float %55, %96\l  %98 = atomicrmw fadd float addrspace(1)* %93, float %97\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %99 = or i32 %78, 2\l  %100 = mul nsw i32 %99, %8\l  %101 = add nsw i32 %100, %51\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %38, i64 %102\l  %104 = zext i32 %99 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %33, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = fmul contract float %55, %106\l  %108 = atomicrmw fadd float addrspace(1)* %103, float %107\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %109 = or i32 %78, 3\l  %110 = mul nsw i32 %109, %8\l  %111 = add nsw i32 %110, %51\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %38, i64 %112\l  %114 = zext i32 %109 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %33, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = fmul contract float %55, %116\l  %118 = atomicrmw fadd float addrspace(1)* %113, float %117\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %119 = or i32 %78, 4\l  %120 = mul nsw i32 %119, %8\l  %121 = add nsw i32 %120, %51\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %38, i64 %122\l  %124 = zext i32 %119 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %33, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7\l  %127 = fmul contract float %55, %126\l  %128 = atomicrmw fadd float addrspace(1)* %123, float %127\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %129 = or i32 %78, 5\l  %130 = mul nsw i32 %129, %8\l  %131 = add nsw i32 %130, %51\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %38, i64 %132\l  %134 = zext i32 %129 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %33, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %55, %136\l  %138 = atomicrmw fadd float addrspace(1)* %133, float %137\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %139 = or i32 %78, 6\l  %140 = mul nsw i32 %139, %8\l  %141 = add nsw i32 %140, %51\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %38, i64 %142\l  %144 = zext i32 %139 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %33, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = fmul contract float %55, %146\l  %148 = atomicrmw fadd float addrspace(1)* %143, float %147\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %149 = or i32 %78, 7\l  %150 = mul nsw i32 %149, %8\l  %151 = add nsw i32 %150, %51\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %38, i64 %152\l  %154 = zext i32 %149 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %33, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = fmul contract float %55, %156\l  %158 = atomicrmw fadd float addrspace(1)* %153, float %157\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %159 = add nuw nsw i32 %78, 8\l  %160 = add i32 %79, 8\l  %161 = icmp eq i32 %160, %46\l  br i1 %161, label %57, label %77, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x604f670:s0 -> Node0x604f620;
	Node0x604f670:s1 -> Node0x604f670;
	Node0x604eff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%162:\l162:                                              \l  ret void\l}"];
	Node0x604efa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%163:\l163:                                              \l  %164 = phi i32 [ %171, %163 ], [ %12, %48 ]\l  %165 = zext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %40, i64 %165\l  %167 = getelementptr inbounds float, float addrspace(1)* %33, i64 %165\l  %168 = load float, float addrspace(1)* %167, align 4, !tbaa !7\l  %169 = fmul contract float %168, %10\l  %170 = atomicrmw fadd float addrspace(1)* %166, float %169\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %171 = add nuw nsw i32 %164, %17\l  %172 = icmp slt i32 %171, %7\l  br i1 %172, label %163, label %162, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x604efa0:s0 -> Node0x604efa0;
	Node0x604efa0:s1 -> Node0x604eff0;
}
