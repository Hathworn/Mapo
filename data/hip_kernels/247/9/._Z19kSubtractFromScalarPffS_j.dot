digraph "CFG for '_Z19kSubtractFromScalarPffS_j' function" {
	label="CFG for '_Z19kSubtractFromScalarPffS_j' function";

	Node0x4802480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = icmp ult i32 %16, %3\l  br i1 %17, label %18, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4802480:s0 -> Node0x4804700;
	Node0x4802480:s1 -> Node0x4804790;
	Node0x4804700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  %19 = udiv i32 %13, %10\l  %20 = mul i32 %19, %10\l  %21 = icmp ugt i32 %13, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %10\l  br label %26\l}"];
	Node0x4804700 -> Node0x4804c10;
	Node0x4804790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x4804c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %16, %18 ], [ %33, %26 ]\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %31 = fsub contract float %1, %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  store float %31, float addrspace(1)* %32, align 4, !tbaa !16\l  %33 = add i32 %24, %27\l  %34 = icmp ult i32 %33, %3\l  br i1 %34, label %26, label %25, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4804c10:s0 -> Node0x4804c10;
	Node0x4804c10:s1 -> Node0x4804790;
}
