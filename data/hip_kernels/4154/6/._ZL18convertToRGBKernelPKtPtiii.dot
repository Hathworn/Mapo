digraph "CFG for '_ZL18convertToRGBKernelPKtPtiii' function" {
	label="CFG for '_ZL18convertToRGBKernelPKtPtiii' function";

	Node0x4f35610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = sdiv i32 %2, 8\l  %24 = icmp slt i32 %14, %23\l  %25 = icmp slt i32 %22, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %239\l|{<s0>T|<s1>F}}"];
	Node0x4f35610:s0 -> Node0x4f39110;
	Node0x4f35610:s1 -> Node0x4f391a0;
	Node0x4f39110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %22, %2\l  %29 = shl nsw i32 %14, 3\l  %30 = add nsw i32 %28, %29\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %31\l  %33 = load i16, i16 addrspace(1)* %32, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = zext i16 %33 to i32\l  %35 = add nsw i32 %30, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %36\l  %38 = load i16, i16 addrspace(1)* %37, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = zext i16 %38 to i32\l  %40 = shl nuw i32 %39, 16\l  %41 = or i32 %40, %34\l  %42 = add nsw i32 %30, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %43\l  %45 = load i16, i16 addrspace(1)* %44, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = zext i16 %45 to i32\l  %47 = add nsw i32 %30, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %48\l  %50 = load i16, i16 addrspace(1)* %49, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = zext i16 %50 to i32\l  %52 = shl nuw i32 %51, 16\l  %53 = or i32 %52, %46\l  %54 = add nsw i32 %30, 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %55\l  %57 = load i16, i16 addrspace(1)* %56, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = zext i16 %57 to i32\l  %59 = add nsw i32 %30, 5\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %60\l  %62 = load i16, i16 addrspace(1)* %61, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = zext i16 %62 to i32\l  %64 = shl nuw i32 %63, 16\l  %65 = or i32 %64, %58\l  %66 = add nsw i32 %30, 6\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %67\l  %69 = load i16, i16 addrspace(1)* %68, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = zext i16 %69 to i32\l  %71 = add nsw i32 %30, 7\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %72\l  %74 = load i16, i16 addrspace(1)* %73, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = zext i16 %74 to i32\l  %76 = shl nuw i32 %75, 16\l  %77 = or i32 %76, %70\l  %78 = lshr i32 %39, 4\l  %79 = and i32 %78, 1023\l  %80 = lshr i32 %41, 10\l  %81 = and i32 %80, 1023\l  %82 = mul nuw nsw i32 %81, 1000\l  %83 = and i32 %34, 1023\l  %84 = lshr i32 %51, 4\l  %85 = and i32 %84, 1023\l  %86 = mul nuw nsw i32 %85, 1000\l  %87 = lshr i32 %53, 10\l  %88 = and i32 %87, 1023\l  %89 = and i32 %46, 1023\l  %90 = mul nuw nsw i32 %89, 1000\l  %91 = lshr i32 %63, 4\l  %92 = and i32 %91, 1023\l  %93 = lshr i32 %65, 10\l  %94 = and i32 %93, 1023\l  %95 = mul nuw nsw i32 %94, 1000\l  %96 = and i32 %58, 1023\l  %97 = lshr i32 %75, 4\l  %98 = and i32 %97, 1023\l  %99 = mul nuw nsw i32 %98, 1000\l  %100 = lshr i32 %77, 10\l  %101 = and i32 %100, 1023\l  %102 = and i32 %70, 1023\l  %103 = mul nuw nsw i32 %102, 1000\l  %104 = mul nsw i32 %14, 18\l  %105 = mul nsw i32 %28, 9\l  %106 = sdiv i32 %105, 4\l  %107 = mul nuw nsw i32 %79, 1407\l  %108 = add nsw i32 %107, -720384\l  %109 = mul nuw nsw i32 %79, 716\l  %110 = mul nuw nsw i32 %83, 345\l  %111 = add nuw nsw i32 %110, -543232\l  %112 = add nsw i32 %111, %109\l  %113 = mul nuw nsw i32 %83, 1779\l  %114 = add nsw i32 %113, -910848\l  %115 = add nsw i32 %82, %108\l  %116 = udiv i32 %115, 1000\l  %117 = trunc i32 %116 to i16\l  %118 = add nsw i32 %106, %104\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %119\l  store i16 %117, i16 addrspace(1)* %120, align 2, !tbaa !7\l  %121 = sub nsw i32 %82, %112\l  %122 = udiv i32 %121, 1000\l  %123 = trunc i32 %122 to i16\l  %124 = add nsw i32 %118, 1\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %125\l  store i16 %123, i16 addrspace(1)* %126, align 2, !tbaa !7\l  %127 = add nsw i32 %82, %114\l  %128 = udiv i32 %127, 1000\l  %129 = trunc i32 %128 to i16\l  %130 = add nsw i32 %118, 2\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %131\l  store i16 %129, i16 addrspace(1)* %132, align 2, !tbaa !7\l  %133 = add nsw i32 %108, %90\l  %134 = udiv i32 %133, 1000\l  %135 = trunc i32 %134 to i16\l  %136 = add nsw i32 %118, 3\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %137\l  store i16 %135, i16 addrspace(1)* %138, align 2, !tbaa !7\l  %139 = sub nsw i32 %90, %112\l  %140 = udiv i32 %139, 1000\l  %141 = trunc i32 %140 to i16\l  %142 = add nsw i32 %118, 4\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %143\l  store i16 %141, i16 addrspace(1)* %144, align 2, !tbaa !7\l  %145 = add nsw i32 %90, %114\l  %146 = udiv i32 %145, 1000\l  %147 = trunc i32 %146 to i16\l  %148 = add nsw i32 %118, 5\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %149\l  store i16 %147, i16 addrspace(1)* %150, align 2, !tbaa !7\l  %151 = mul nuw nsw i32 %96, 1407\l  %152 = add nsw i32 %151, -720384\l  %153 = mul nuw nsw i32 %96, 716\l  %154 = mul nuw nsw i32 %88, 345\l  %155 = add nsw i32 %153, -543232\l  %156 = add nsw i32 %155, %154\l  %157 = mul nuw nsw i32 %88, 1779\l  %158 = add nsw i32 %157, -910848\l  %159 = add nsw i32 %152, %86\l  %160 = udiv i32 %159, 1000\l  %161 = trunc i32 %160 to i16\l  %162 = add nsw i32 %118, 6\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %163\l  store i16 %161, i16 addrspace(1)* %164, align 2, !tbaa !7\l  %165 = sub nsw i32 %86, %156\l  %166 = udiv i32 %165, 1000\l  %167 = trunc i32 %166 to i16\l  %168 = add nsw i32 %118, 7\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %169\l  store i16 %167, i16 addrspace(1)* %170, align 2, !tbaa !7\l  %171 = add nsw i32 %158, %86\l  %172 = udiv i32 %171, 1000\l  %173 = trunc i32 %172 to i16\l  %174 = add nsw i32 %118, 8\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %175\l  store i16 %173, i16 addrspace(1)* %176, align 2, !tbaa !7\l  %177 = add nsw i32 %95, %152\l  %178 = udiv i32 %177, 1000\l  %179 = trunc i32 %178 to i16\l  %180 = add nsw i32 %118, 9\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %181\l  store i16 %179, i16 addrspace(1)* %182, align 2, !tbaa !7\l  %183 = sub nsw i32 %95, %156\l  %184 = udiv i32 %183, 1000\l  %185 = trunc i32 %184 to i16\l  %186 = add nsw i32 %118, 10\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %187\l  store i16 %185, i16 addrspace(1)* %188, align 2, !tbaa !7\l  %189 = add nsw i32 %95, %158\l  %190 = udiv i32 %189, 1000\l  %191 = trunc i32 %190 to i16\l  %192 = add nsw i32 %118, 11\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %193\l  store i16 %191, i16 addrspace(1)* %194, align 2, !tbaa !7\l  %195 = mul nuw nsw i32 %101, 1407\l  %196 = add nsw i32 %195, -720384\l  %197 = mul nuw nsw i32 %101, 716\l  %198 = mul nuw nsw i32 %92, 345\l  %199 = add nuw nsw i32 %198, -543232\l  %200 = add nsw i32 %199, %197\l  %201 = mul nuw nsw i32 %92, 1779\l  %202 = add nsw i32 %201, -910848\l  %203 = add nsw i32 %196, %103\l  %204 = udiv i32 %203, 1000\l  %205 = trunc i32 %204 to i16\l  %206 = add nsw i32 %118, 12\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %207\l  store i16 %205, i16 addrspace(1)* %208, align 2, !tbaa !7\l  %209 = sub nsw i32 %103, %200\l  %210 = udiv i32 %209, 1000\l  %211 = trunc i32 %210 to i16\l  %212 = add nsw i32 %118, 13\l  %213 = sext i32 %212 to i64\l  %214 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %213\l  store i16 %211, i16 addrspace(1)* %214, align 2, !tbaa !7\l  %215 = add nsw i32 %202, %103\l  %216 = udiv i32 %215, 1000\l  %217 = trunc i32 %216 to i16\l  %218 = add nsw i32 %118, 14\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %219\l  store i16 %217, i16 addrspace(1)* %220, align 2, !tbaa !7\l  %221 = add nsw i32 %196, %99\l  %222 = udiv i32 %221, 1000\l  %223 = trunc i32 %222 to i16\l  %224 = add nsw i32 %118, 15\l  %225 = sext i32 %224 to i64\l  %226 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %225\l  store i16 %223, i16 addrspace(1)* %226, align 2, !tbaa !7\l  %227 = sub nsw i32 %99, %200\l  %228 = udiv i32 %227, 1000\l  %229 = trunc i32 %228 to i16\l  %230 = add nsw i32 %118, 16\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %231\l  store i16 %229, i16 addrspace(1)* %232, align 2, !tbaa !7\l  %233 = add nsw i32 %99, %202\l  %234 = udiv i32 %233, 1000\l  %235 = trunc i32 %234 to i16\l  %236 = add nsw i32 %118, 17\l  %237 = sext i32 %236 to i64\l  %238 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %237\l  store i16 %235, i16 addrspace(1)* %238, align 2, !tbaa !7\l  br label %239\l}"];
	Node0x4f39110 -> Node0x4f391a0;
	Node0x4f391a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%239:\l239:                                              \l  ret void\l}"];
}
