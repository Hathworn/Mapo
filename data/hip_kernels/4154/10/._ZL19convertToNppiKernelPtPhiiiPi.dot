digraph "CFG for '_ZL19convertToNppiKernelPtPhiiiPi' function" {
	label="CFG for '_ZL19convertToNppiKernelPtPhiiiPi' function";

	Node0x46243b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sdiv i32 %2, 8\l  %25 = icmp slt i32 %15, %24\l  %26 = icmp slt i32 %23, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %312\l|{<s0>T|<s1>F}}"];
	Node0x46243b0:s0 -> Node0x4627f00;
	Node0x46243b0:s1 -> Node0x4627f90;
	Node0x4627f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %23, %2\l  %30 = shl nsw i32 %15, 3\l  %31 = add nsw i32 %29, %30\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %32\l  %34 = load i16, i16 addrspace(1)* %33, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = zext i16 %34 to i32\l  %36 = add nsw i32 %31, 1\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %37\l  %39 = load i16, i16 addrspace(1)* %38, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %40 = zext i16 %39 to i32\l  %41 = shl nuw i32 %40, 16\l  %42 = or i32 %41, %35\l  %43 = add nsw i32 %31, 2\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %44\l  %46 = load i16, i16 addrspace(1)* %45, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = zext i16 %46 to i32\l  %48 = add nsw i32 %31, 3\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %49\l  %51 = load i16, i16 addrspace(1)* %50, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %52 = zext i16 %51 to i32\l  %53 = shl nuw i32 %52, 16\l  %54 = or i32 %53, %47\l  %55 = add nsw i32 %31, 4\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %56\l  %58 = load i16, i16 addrspace(1)* %57, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %59 = zext i16 %58 to i32\l  %60 = add nsw i32 %31, 5\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %61\l  %63 = load i16, i16 addrspace(1)* %62, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %64 = zext i16 %63 to i32\l  %65 = shl nuw i32 %64, 16\l  %66 = or i32 %65, %59\l  %67 = add nsw i32 %31, 6\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %68\l  %70 = load i16, i16 addrspace(1)* %69, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %71 = zext i16 %70 to i32\l  %72 = add nsw i32 %31, 7\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %73\l  %75 = load i16, i16 addrspace(1)* %74, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %76 = zext i16 %75 to i32\l  %77 = shl nuw i32 %76, 16\l  %78 = or i32 %77, %71\l  %79 = lshr i32 %40, 4\l  %80 = and i32 %79, 1023\l  %81 = lshr i32 %42, 10\l  %82 = and i32 %81, 1023\l  %83 = mul nuw nsw i32 %82, 1000\l  %84 = and i32 %35, 1023\l  %85 = lshr i32 %52, 4\l  %86 = and i32 %85, 1023\l  %87 = mul nuw nsw i32 %86, 1000\l  %88 = lshr i32 %54, 10\l  %89 = and i32 %88, 1023\l  %90 = and i32 %47, 1023\l  %91 = mul nuw nsw i32 %90, 1000\l  %92 = lshr i32 %64, 4\l  %93 = and i32 %92, 1023\l  %94 = lshr i32 %66, 10\l  %95 = and i32 %94, 1023\l  %96 = mul nuw nsw i32 %95, 1000\l  %97 = and i32 %59, 1023\l  %98 = lshr i32 %76, 4\l  %99 = and i32 %98, 1023\l  %100 = mul nuw nsw i32 %99, 1000\l  %101 = lshr i32 %78, 10\l  %102 = and i32 %101, 1023\l  %103 = and i32 %71, 1023\l  %104 = mul nuw nsw i32 %103, 1000\l  %105 = mul nsw i32 %15, 18\l  %106 = mul nsw i32 %29, 9\l  %107 = sdiv i32 %106, 4\l  %108 = mul nuw nsw i32 %80, 1407\l  %109 = add nsw i32 %108, -720384\l  %110 = mul nuw nsw i32 %80, 716\l  %111 = mul nuw nsw i32 %84, 345\l  %112 = add nuw nsw i32 %111, -543232\l  %113 = add nsw i32 %112, %110\l  %114 = mul nuw nsw i32 %84, 1779\l  %115 = add nsw i32 %114, -910848\l  %116 = add nsw i32 %83, %109\l  %117 = udiv i32 %116, 1000\l  %118 = sub nsw i32 %83, %113\l  %119 = udiv i32 %118, 1000\l  %120 = add nsw i32 %83, %115\l  %121 = udiv i32 %120, 1000\l  %122 = add nsw i32 %109, %91\l  %123 = udiv i32 %122, 1000\l  %124 = sub nsw i32 %91, %113\l  %125 = udiv i32 %124, 1000\l  %126 = add nsw i32 %91, %115\l  %127 = udiv i32 %126, 1000\l  %128 = and i32 %117, 65535\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %129\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %132 = trunc i32 %131 to i8\l  %133 = add nsw i32 %107, %105\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %134\l  store i8 %132, i8 addrspace(1)* %135, align 1, !tbaa !13\l  %136 = and i32 %119, 65535\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %137\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !11\l  %140 = trunc i32 %139 to i8\l  %141 = add nsw i32 %133, 1\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %142\l  store i8 %140, i8 addrspace(1)* %143, align 1, !tbaa !13\l  %144 = and i32 %121, 65535\l  %145 = zext i32 %144 to i64\l  %146 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %145\l  %147 = load i32, i32 addrspace(1)* %146, align 4, !tbaa !11\l  %148 = trunc i32 %147 to i8\l  %149 = add nsw i32 %133, 2\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %150\l  store i8 %148, i8 addrspace(1)* %151, align 1, !tbaa !13\l  %152 = and i32 %123, 65535\l  %153 = zext i32 %152 to i64\l  %154 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %153\l  %155 = load i32, i32 addrspace(1)* %154, align 4, !tbaa !11\l  %156 = trunc i32 %155 to i8\l  %157 = add nsw i32 %133, 3\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %158\l  store i8 %156, i8 addrspace(1)* %159, align 1, !tbaa !13\l  %160 = and i32 %125, 65535\l  %161 = zext i32 %160 to i64\l  %162 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %161\l  %163 = load i32, i32 addrspace(1)* %162, align 4, !tbaa !11\l  %164 = trunc i32 %163 to i8\l  %165 = add nsw i32 %133, 4\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %166\l  store i8 %164, i8 addrspace(1)* %167, align 1, !tbaa !13\l  %168 = and i32 %127, 65535\l  %169 = zext i32 %168 to i64\l  %170 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %169\l  %171 = load i32, i32 addrspace(1)* %170, align 4, !tbaa !11\l  %172 = trunc i32 %171 to i8\l  %173 = add nsw i32 %133, 5\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %174\l  store i8 %172, i8 addrspace(1)* %175, align 1, !tbaa !13\l  %176 = mul nuw nsw i32 %97, 1407\l  %177 = add nsw i32 %176, -720384\l  %178 = mul nuw nsw i32 %97, 716\l  %179 = mul nuw nsw i32 %89, 345\l  %180 = add nsw i32 %178, -543232\l  %181 = add nsw i32 %180, %179\l  %182 = mul nuw nsw i32 %89, 1779\l  %183 = add nsw i32 %182, -910848\l  %184 = add nsw i32 %177, %87\l  %185 = udiv i32 %184, 1000\l  %186 = sub nsw i32 %87, %181\l  %187 = udiv i32 %186, 1000\l  %188 = add nsw i32 %183, %87\l  %189 = udiv i32 %188, 1000\l  %190 = add nsw i32 %96, %177\l  %191 = udiv i32 %190, 1000\l  %192 = sub nsw i32 %96, %181\l  %193 = udiv i32 %192, 1000\l  %194 = add nsw i32 %96, %183\l  %195 = udiv i32 %194, 1000\l  %196 = and i32 %185, 65535\l  %197 = zext i32 %196 to i64\l  %198 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %197\l  %199 = load i32, i32 addrspace(1)* %198, align 4, !tbaa !11\l  %200 = trunc i32 %199 to i8\l  %201 = add nsw i32 %133, 6\l  %202 = sext i32 %201 to i64\l  %203 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %202\l  store i8 %200, i8 addrspace(1)* %203, align 1, !tbaa !13\l  %204 = and i32 %187, 65535\l  %205 = zext i32 %204 to i64\l  %206 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %205\l  %207 = load i32, i32 addrspace(1)* %206, align 4, !tbaa !11\l  %208 = trunc i32 %207 to i8\l  %209 = add nsw i32 %133, 7\l  %210 = sext i32 %209 to i64\l  %211 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %210\l  store i8 %208, i8 addrspace(1)* %211, align 1, !tbaa !13\l  %212 = and i32 %189, 65535\l  %213 = zext i32 %212 to i64\l  %214 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %213\l  %215 = load i32, i32 addrspace(1)* %214, align 4, !tbaa !11\l  %216 = trunc i32 %215 to i8\l  %217 = add nsw i32 %133, 8\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %218\l  store i8 %216, i8 addrspace(1)* %219, align 1, !tbaa !13\l  %220 = and i32 %191, 65535\l  %221 = zext i32 %220 to i64\l  %222 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %221\l  %223 = load i32, i32 addrspace(1)* %222, align 4, !tbaa !11\l  %224 = trunc i32 %223 to i8\l  %225 = add nsw i32 %133, 9\l  %226 = sext i32 %225 to i64\l  %227 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %226\l  store i8 %224, i8 addrspace(1)* %227, align 1, !tbaa !13\l  %228 = and i32 %193, 65535\l  %229 = zext i32 %228 to i64\l  %230 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %229\l  %231 = load i32, i32 addrspace(1)* %230, align 4, !tbaa !11\l  %232 = trunc i32 %231 to i8\l  %233 = add nsw i32 %133, 10\l  %234 = sext i32 %233 to i64\l  %235 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %234\l  store i8 %232, i8 addrspace(1)* %235, align 1, !tbaa !13\l  %236 = and i32 %195, 65535\l  %237 = zext i32 %236 to i64\l  %238 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %237\l  %239 = load i32, i32 addrspace(1)* %238, align 4, !tbaa !11\l  %240 = trunc i32 %239 to i8\l  %241 = add nsw i32 %133, 11\l  %242 = sext i32 %241 to i64\l  %243 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %242\l  store i8 %240, i8 addrspace(1)* %243, align 1, !tbaa !13\l  %244 = mul nuw nsw i32 %102, 1407\l  %245 = add nsw i32 %244, -720384\l  %246 = mul nuw nsw i32 %102, 716\l  %247 = mul nuw nsw i32 %93, 345\l  %248 = add nuw nsw i32 %247, -543232\l  %249 = add nsw i32 %248, %246\l  %250 = mul nuw nsw i32 %93, 1779\l  %251 = add nsw i32 %250, -910848\l  %252 = add nsw i32 %245, %104\l  %253 = udiv i32 %252, 1000\l  %254 = sub nsw i32 %104, %249\l  %255 = udiv i32 %254, 1000\l  %256 = add nsw i32 %251, %104\l  %257 = udiv i32 %256, 1000\l  %258 = add nsw i32 %245, %100\l  %259 = udiv i32 %258, 1000\l  %260 = sub nsw i32 %100, %249\l  %261 = udiv i32 %260, 1000\l  %262 = add nsw i32 %100, %251\l  %263 = udiv i32 %262, 1000\l  %264 = and i32 %253, 65535\l  %265 = zext i32 %264 to i64\l  %266 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %265\l  %267 = load i32, i32 addrspace(1)* %266, align 4, !tbaa !11\l  %268 = trunc i32 %267 to i8\l  %269 = add nsw i32 %133, 12\l  %270 = sext i32 %269 to i64\l  %271 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %270\l  store i8 %268, i8 addrspace(1)* %271, align 1, !tbaa !13\l  %272 = and i32 %255, 65535\l  %273 = zext i32 %272 to i64\l  %274 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %273\l  %275 = load i32, i32 addrspace(1)* %274, align 4, !tbaa !11\l  %276 = trunc i32 %275 to i8\l  %277 = add nsw i32 %133, 13\l  %278 = sext i32 %277 to i64\l  %279 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %278\l  store i8 %276, i8 addrspace(1)* %279, align 1, !tbaa !13\l  %280 = and i32 %257, 65535\l  %281 = zext i32 %280 to i64\l  %282 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %281\l  %283 = load i32, i32 addrspace(1)* %282, align 4, !tbaa !11\l  %284 = trunc i32 %283 to i8\l  %285 = add nsw i32 %133, 14\l  %286 = sext i32 %285 to i64\l  %287 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %286\l  store i8 %284, i8 addrspace(1)* %287, align 1, !tbaa !13\l  %288 = and i32 %259, 65535\l  %289 = zext i32 %288 to i64\l  %290 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %289\l  %291 = load i32, i32 addrspace(1)* %290, align 4, !tbaa !11\l  %292 = trunc i32 %291 to i8\l  %293 = add nsw i32 %133, 15\l  %294 = sext i32 %293 to i64\l  %295 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %294\l  store i8 %292, i8 addrspace(1)* %295, align 1, !tbaa !13\l  %296 = and i32 %261, 65535\l  %297 = zext i32 %296 to i64\l  %298 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %297\l  %299 = load i32, i32 addrspace(1)* %298, align 4, !tbaa !11\l  %300 = trunc i32 %299 to i8\l  %301 = add nsw i32 %133, 16\l  %302 = sext i32 %301 to i64\l  %303 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %302\l  store i8 %300, i8 addrspace(1)* %303, align 1, !tbaa !13\l  %304 = and i32 %263, 65535\l  %305 = zext i32 %304 to i64\l  %306 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %305\l  %307 = load i32, i32 addrspace(1)* %306, align 4, !tbaa !11\l  %308 = trunc i32 %307 to i8\l  %309 = add nsw i32 %133, 17\l  %310 = sext i32 %309 to i64\l  %311 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %310\l  store i8 %308, i8 addrspace(1)* %311, align 1, !tbaa !13\l  br label %312\l}"];
	Node0x4627f00 -> Node0x4627f90;
	Node0x4627f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%312:\l312:                                              \l  ret void\l}"];
}
