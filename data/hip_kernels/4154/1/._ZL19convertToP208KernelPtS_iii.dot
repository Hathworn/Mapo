digraph "CFG for '_ZL19convertToP208KernelPtS_iii' function" {
	label="CFG for '_ZL19convertToP208KernelPtS_iii' function";

	Node0x4a73830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = sdiv i32 %2, 8\l  %24 = icmp slt i32 %14, %23\l  %25 = icmp slt i32 %22, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %147\l|{<s0>T|<s1>F}}"];
	Node0x4a73830:s0 -> Node0x4a77330;
	Node0x4a73830:s1 -> Node0x4a773c0;
	Node0x4a77330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = shl nsw i32 %14, 3\l  %29 = mul nsw i32 %22, %2\l  %30 = add nsw i32 %29, %28\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %31\l  %33 = load i16, i16 addrspace(1)* %32, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = zext i16 %33 to i32\l  %35 = add nsw i32 %30, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %36\l  %38 = load i16, i16 addrspace(1)* %37, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = zext i16 %38 to i32\l  %40 = shl nuw i32 %39, 16\l  %41 = or i32 %40, %34\l  %42 = add nsw i32 %30, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %43\l  %45 = load i16, i16 addrspace(1)* %44, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = zext i16 %45 to i32\l  %47 = add nsw i32 %30, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %48\l  %50 = load i16, i16 addrspace(1)* %49, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = zext i16 %50 to i32\l  %52 = shl nuw i32 %51, 16\l  %53 = or i32 %52, %46\l  %54 = add nsw i32 %30, 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %55\l  %57 = load i16, i16 addrspace(1)* %56, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = zext i16 %57 to i32\l  %59 = add nsw i32 %30, 5\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %60\l  %62 = load i16, i16 addrspace(1)* %61, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = zext i16 %62 to i32\l  %64 = shl nuw i32 %63, 16\l  %65 = or i32 %64, %58\l  %66 = add nsw i32 %30, 6\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %67\l  %69 = load i16, i16 addrspace(1)* %68, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = zext i16 %69 to i32\l  %71 = add nsw i32 %30, 7\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %72\l  %74 = load i16, i16 addrspace(1)* %73, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = zext i16 %74 to i32\l  %76 = shl nuw i32 %75, 16\l  %77 = or i32 %76, %70\l  %78 = lshr i16 %38, 4\l  %79 = and i16 %78, 1023\l  %80 = lshr i32 %41, 10\l  %81 = and i16 %33, 1023\l  %82 = lshr i16 %50, 4\l  %83 = and i16 %82, 1023\l  %84 = lshr i32 %53, 10\l  %85 = and i16 %45, 1023\l  %86 = lshr i16 %62, 4\l  %87 = and i16 %86, 1023\l  %88 = lshr i32 %65, 10\l  %89 = and i16 %57, 1023\l  %90 = lshr i16 %74, 4\l  %91 = and i16 %90, 1023\l  %92 = lshr i32 %77, 10\l  %93 = and i16 %69, 1023\l  %94 = mul nsw i32 %14, 6\l  %95 = mul nsw i32 %29, 3\l  %96 = sdiv i32 %95, 4\l  %97 = trunc i32 %80 to i16\l  %98 = and i16 %97, 1023\l  %99 = add nsw i32 %96, %94\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %100\l  store i16 %98, i16 addrspace(1)* %101, align 2, !tbaa !7\l  %102 = add nsw i32 %99, 1\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %103\l  store i16 %85, i16 addrspace(1)* %104, align 2, !tbaa !7\l  %105 = add nsw i32 %99, 2\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %106\l  store i16 %83, i16 addrspace(1)* %107, align 2, !tbaa !7\l  %108 = trunc i32 %88 to i16\l  %109 = and i16 %108, 1023\l  %110 = add nsw i32 %99, 3\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %111\l  store i16 %109, i16 addrspace(1)* %112, align 2, !tbaa !7\l  %113 = add nsw i32 %99, 4\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %114\l  store i16 %93, i16 addrspace(1)* %115, align 2, !tbaa !7\l  %116 = add nsw i32 %99, 5\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %117\l  store i16 %91, i16 addrspace(1)* %118, align 2, !tbaa !7\l  %119 = mul nsw i32 %14, 3\l  %120 = sdiv i32 %95, 8\l  %121 = mul nsw i32 %4, %3\l  %122 = add i32 %120, %119\l  %123 = add i32 %122, %121\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %124\l  store i16 %81, i16 addrspace(1)* %125, align 2, !tbaa !7\l  %126 = trunc i32 %84 to i16\l  %127 = and i16 %126, 1023\l  %128 = add nsw i32 %123, 1\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %129\l  store i16 %127, i16 addrspace(1)* %130, align 2, !tbaa !7\l  %131 = add nsw i32 %123, 2\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %132\l  store i16 %87, i16 addrspace(1)* %133, align 2, !tbaa !7\l  %134 = mul nsw i32 %121, 3\l  %135 = sdiv i32 %134, 2\l  %136 = add i32 %122, %135\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %137\l  store i16 %79, i16 addrspace(1)* %138, align 2, !tbaa !7\l  %139 = add nsw i32 %136, 1\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %140\l  store i16 %89, i16 addrspace(1)* %141, align 2, !tbaa !7\l  %142 = trunc i32 %92 to i16\l  %143 = and i16 %142, 1023\l  %144 = add nsw i32 %136, 2\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %145\l  store i16 %143, i16 addrspace(1)* %146, align 2, !tbaa !7\l  br label %147\l}"];
	Node0x4a77330 -> Node0x4a773c0;
	Node0x4a773c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%147:\l147:                                              \l  ret void\l}"];
}
