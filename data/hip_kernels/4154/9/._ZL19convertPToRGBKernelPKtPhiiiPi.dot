digraph "CFG for '_ZL19convertPToRGBKernelPKtPhiiiPi' function" {
	label="CFG for '_ZL19convertPToRGBKernelPKtPhiiiPi' function";

	Node0x5bf54e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = sdiv i32 %2, 2\l  %25 = icmp slt i32 %15, %24\l  %26 = icmp slt i32 %23, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5bf54e0:s0 -> Node0x5bf9030;
	Node0x5bf54e0:s1 -> Node0x5bf90c0;
	Node0x5bf9030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = shl nsw i32 %15, 1\l  %30 = mul nsw i32 %23, %2\l  %31 = add nsw i32 %30, %29\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %32\l  %34 = load i16, i16 addrspace(1)* %33, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %35 = zext i16 %34 to i32\l  %36 = mul nuw nsw i32 %35, 1000\l  %37 = add nsw i32 %31, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %38\l  %40 = load i16, i16 addrspace(1)* %39, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = zext i16 %40 to i32\l  %42 = mul nuw nsw i32 %41, 1000\l  %43 = sdiv i32 %30, 2\l  %44 = mul nsw i32 %4, %2\l  %45 = add i32 %43, %15\l  %46 = add i32 %45, %44\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %47\l  %49 = load i16, i16 addrspace(1)* %48, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %50 = zext i16 %49 to i32\l  %51 = mul nsw i32 %44, 3\l  %52 = sdiv i32 %51, 2\l  %53 = add i32 %45, %52\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %54\l  %56 = load i16, i16 addrspace(1)* %55, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %57 = zext i16 %56 to i32\l  %58 = mul nsw i32 %15, 6\l  %59 = mul i32 %3, 3\l  %60 = mul i32 %59, %23\l  %61 = mul nuw nsw i32 %57, 1407\l  %62 = add nsw i32 %61, -720384\l  %63 = mul nuw nsw i32 %57, 716\l  %64 = mul nuw nsw i32 %50, 345\l  %65 = add nsw i32 %64, -543232\l  %66 = add nsw i32 %65, %63\l  %67 = mul nuw nsw i32 %50, 1779\l  %68 = add nsw i32 %67, -910848\l  %69 = add nsw i32 %62, %36\l  %70 = udiv i32 %69, 1000\l  %71 = sub nsw i32 %36, %66\l  %72 = udiv i32 %71, 1000\l  %73 = add nsw i32 %68, %36\l  %74 = udiv i32 %73, 1000\l  %75 = add nsw i32 %62, %42\l  %76 = udiv i32 %75, 1000\l  %77 = sub nsw i32 %42, %66\l  %78 = udiv i32 %77, 1000\l  %79 = add nsw i32 %68, %42\l  %80 = udiv i32 %79, 1000\l  %81 = and i32 %70, 65535\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %82\l  %84 = load i32, i32 addrspace(1)* %83, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %85 = trunc i32 %84 to i8\l  %86 = add nsw i32 %60, %58\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %87\l  store i8 %85, i8 addrspace(1)* %88, align 1, !tbaa !13\l  %89 = and i32 %72, 65535\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !11\l  %93 = trunc i32 %92 to i8\l  %94 = add nsw i32 %86, 1\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %95\l  store i8 %93, i8 addrspace(1)* %96, align 1, !tbaa !13\l  %97 = and i32 %74, 65535\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %98\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !11\l  %101 = trunc i32 %100 to i8\l  %102 = add nsw i32 %86, 2\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %103\l  store i8 %101, i8 addrspace(1)* %104, align 1, !tbaa !13\l  %105 = and i32 %76, 65535\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !11\l  %109 = trunc i32 %108 to i8\l  %110 = add nsw i32 %86, 3\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %111\l  store i8 %109, i8 addrspace(1)* %112, align 1, !tbaa !13\l  %113 = and i32 %78, 65535\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !11\l  %117 = trunc i32 %116 to i8\l  %118 = add nsw i32 %86, 4\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %119\l  store i8 %117, i8 addrspace(1)* %120, align 1, !tbaa !13\l  %121 = and i32 %80, 65535\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !11\l  %125 = trunc i32 %124 to i8\l  %126 = add nsw i32 %86, 5\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %127\l  store i8 %125, i8 addrspace(1)* %128, align 1, !tbaa !13\l  br label %129\l}"];
	Node0x5bf9030 -> Node0x5bf90c0;
	Node0x5bf90c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  ret void\l}"];
}
