digraph "CFG for '_ZL17resizeBatchKernelPKtiiPhS1_S1_iiPi' function" {
	label="CFG for '_ZL17resizeBatchKernelPKtiiPhS1_S1_iiPi' function";

	Node0x5943b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = sdiv i32 %2, %7\l  switch i32 %27, label %443 [\l    i32 4, label %28\l    i32 6, label %199\l    i32 2, label %266\l  ]\l|{<s0>def|<s1>4|<s2>6|<s3>2}}"];
	Node0x5943b30:s0 -> Node0x5947f90;
	Node0x5943b30:s1 -> Node0x5948050;
	Node0x5943b30:s2 -> Node0x5948110;
	Node0x5943b30:s3 -> Node0x59481d0;
	Node0x5948050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%28:\l28:                                               \l  %29 = sdiv i32 %6, 6\l  %30 = icmp slt i32 %18, %29\l  %31 = icmp slt i32 %26, %7\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %443\l|{<s0>T|<s1>F}}"];
	Node0x5948050:s0 -> Node0x59460f0;
	Node0x5948050:s1 -> Node0x5947f90;
	Node0x59460f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %26, %1\l  %35 = shl nsw i32 %34, 2\l  %36 = shl nsw i32 %18, 5\l  %37 = add nsw i32 %35, %36\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %38\l  %40 = load i16, i16 addrspace(1)* %39, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = zext i16 %40 to i32\l  %42 = or i32 %37, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %43\l  %45 = load i16, i16 addrspace(1)* %44, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = zext i16 %45 to i32\l  %47 = shl nuw i32 %46, 16\l  %48 = or i32 %47, %41\l  %49 = add nsw i32 %37, 6\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %50\l  %52 = load i16, i16 addrspace(1)* %51, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = lshr i32 %46, 4\l  %54 = and i32 %53, 1023\l  %55 = lshr i32 %48, 10\l  %56 = and i32 %55, 1023\l  %57 = and i32 %41, 1023\l  %58 = and i16 %52, 1023\l  %59 = add nsw i32 %37, 10\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %60\l  %62 = load i16, i16 addrspace(1)* %61, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = zext i16 %62 to i32\l  %64 = add nsw i32 %37, 11\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %65\l  %67 = load i16, i16 addrspace(1)* %66, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %68 = zext i16 %67 to i32\l  %69 = shl nuw i32 %68, 16\l  %70 = or i32 %69, %63\l  %71 = add nsw i32 %37, 12\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %72\l  %74 = load i16, i16 addrspace(1)* %73, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %75 = lshr i32 %68, 4\l  %76 = and i32 %75, 1023\l  %77 = lshr i32 %70, 10\l  %78 = and i32 %77, 1023\l  %79 = and i16 %74, 1023\l  %80 = add nsw i32 %37, 16\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %81\l  %83 = load i16, i16 addrspace(1)* %82, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %84 = zext i16 %83 to i64\l  %85 = add nsw i32 %37, 17\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %86\l  %88 = load i16, i16 addrspace(1)* %87, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %89 = zext i16 %88 to i64\l  %90 = shl nuw nsw i64 %89, 16\l  %91 = or i64 %90, %84\l  %92 = add nsw i32 %37, 21\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %93\l  %95 = load i16, i16 addrspace(1)* %94, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %96 = add nsw i32 %37, 22\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %97\l  %99 = load i16, i16 addrspace(1)* %98, align 2, !tbaa !7, !amdgpu.noclobber\l... !5\l  %100 = zext i16 %99 to i32\l  %101 = add nsw i32 %37, 23\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %102\l  %104 = load i16, i16 addrspace(1)* %103, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = zext i16 %104 to i32\l  %106 = shl nuw i32 %105, 16\l  %107 = or i32 %106, %100\l  %108 = lshr i64 %91, 10\l  %109 = and i64 %108, 1023\l  %110 = lshr i16 %95, 4\l  %111 = and i16 %110, 1023\l  %112 = lshr i32 %107, 10\l  %113 = and i32 %112, 1023\l  %114 = and i32 %100, 1023\l  %115 = add nsw i32 %37, 27\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %116\l  %118 = load i16, i16 addrspace(1)* %117, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = lshr i16 %118, 4\l  %120 = and i16 %119, 1023\l  %121 = mul nsw i32 %18, 6\l  %122 = mul nsw i32 %26, %6\l  %123 = zext i32 %56 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %126 = trunc i32 %125 to i8\l  %127 = add nsw i32 %122, %121\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %128\l  store i8 %126, i8 addrspace(1)* %129, align 1, !tbaa !13\l  %130 = zext i16 %58 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !11\l  %133 = trunc i32 %132 to i8\l  %134 = add nsw i32 %127, 1\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %135\l  store i8 %133, i8 addrspace(1)* %136, align 1, !tbaa !13\l  %137 = zext i32 %76 to i64\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %137\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !11\l  %140 = trunc i32 %139 to i8\l  %141 = add nsw i32 %127, 2\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %142\l  store i8 %140, i8 addrspace(1)* %143, align 1, !tbaa !13\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %109\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !11\l  %146 = trunc i32 %145 to i8\l  %147 = add nsw i32 %127, 3\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %148\l  store i8 %146, i8 addrspace(1)* %149, align 1, !tbaa !13\l  %150 = zext i32 %114 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !11\l  %153 = trunc i32 %152 to i8\l  %154 = add nsw i32 %127, 4\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %155\l  store i8 %153, i8 addrspace(1)* %156, align 1, !tbaa !13\l  %157 = zext i16 %120 to i64\l  %158 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %157\l  %159 = load i32, i32 addrspace(1)* %158, align 4, !tbaa !11\l  %160 = trunc i32 %159 to i8\l  %161 = add nsw i32 %127, 5\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %162\l  store i8 %160, i8 addrspace(1)* %163, align 1, !tbaa !13\l  %164 = mul nsw i32 %18, 3\l  %165 = sdiv i32 %122, 2\l  %166 = zext i32 %57 to i64\l  %167 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %166\l  %168 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !11\l  %169 = trunc i32 %168 to i8\l  %170 = add nsw i32 %165, %164\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %171\l  store i8 %169, i8 addrspace(1)* %172, align 1, !tbaa !13\l  %173 = zext i32 %78 to i64\l  %174 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %173\l  %175 = load i32, i32 addrspace(1)* %174, align 4, !tbaa !11\l  %176 = trunc i32 %175 to i8\l  %177 = add nsw i32 %170, 1\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %178\l  store i8 %176, i8 addrspace(1)* %179, align 1, !tbaa !13\l  %180 = zext i16 %111 to i64\l  %181 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %180\l  %182 = load i32, i32 addrspace(1)* %181, align 4, !tbaa !11\l  %183 = trunc i32 %182 to i8\l  %184 = add nsw i32 %170, 2\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %185\l  store i8 %183, i8 addrspace(1)* %186, align 1, !tbaa !13\l  %187 = zext i32 %54 to i64\l  %188 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %187\l  %189 = load i32, i32 addrspace(1)* %188, align 4, !tbaa !11\l  %190 = trunc i32 %189 to i8\l  %191 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %171\l  store i8 %190, i8 addrspace(1)* %191, align 1, !tbaa !13\l  %192 = zext i16 %79 to i64\l  %193 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %192\l  %194 = load i32, i32 addrspace(1)* %193, align 4, !tbaa !11\l  %195 = trunc i32 %194 to i8\l  %196 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %178\l  store i8 %195, i8 addrspace(1)* %196, align 1, !tbaa !13\l  %197 = zext i32 %113 to i64\l  %198 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %197\l  br label %437\l}"];
	Node0x59460f0 -> Node0x5950750;
	Node0x5948110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%199:\l199:                                              \l  %200 = sdiv i32 %6, 2\l  %201 = icmp slt i32 %18, %200\l  %202 = icmp slt i32 %26, %7\l  %203 = select i1 %201, i1 %202, i1 false\l  br i1 %203, label %204, label %443\l|{<s0>T|<s1>F}}"];
	Node0x5948110:s0 -> Node0x5950ab0;
	Node0x5948110:s1 -> Node0x5947f90;
	Node0x5950ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%204:\l204:                                              \l  %205 = mul nsw i32 %26, %1\l  %206 = mul nsw i32 %205, 6\l  %207 = shl nsw i32 %18, 4\l  %208 = add nsw i32 %206, %207\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %209\l  %211 = load i16, i16 addrspace(1)* %210, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %212 = zext i16 %211 to i32\l  %213 = or i32 %208, 1\l  %214 = sext i32 %213 to i64\l  %215 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %214\l  %216 = load i16, i16 addrspace(1)* %215, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %217 = zext i16 %216 to i32\l  %218 = shl nuw i32 %217, 16\l  %219 = or i32 %218, %212\l  %220 = lshr i32 %217, 4\l  %221 = and i32 %220, 1023\l  %222 = lshr i32 %219, 10\l  %223 = and i32 %222, 1023\l  %224 = and i32 %212, 1023\l  %225 = add nsw i32 %208, 8\l  %226 = sext i32 %225 to i64\l  %227 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %226\l  %228 = load i16, i16 addrspace(1)* %227, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %229 = zext i16 %228 to i64\l  %230 = add nsw i32 %208, 9\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %231\l  %233 = load i16, i16 addrspace(1)* %232, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %234 = zext i16 %233 to i64\l  %235 = shl nuw nsw i64 %234, 16\l  %236 = or i64 %235, %229\l  %237 = lshr i64 %236, 10\l  %238 = and i64 %237, 1023\l  %239 = shl nsw i32 %18, 1\l  %240 = mul nsw i32 %26, %6\l  %241 = zext i32 %223 to i64\l  %242 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %241\l  %243 = load i32, i32 addrspace(1)* %242, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %244 = trunc i32 %243 to i8\l  %245 = add nsw i32 %240, %239\l  %246 = sext i32 %245 to i64\l  %247 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %246\l  store i8 %244, i8 addrspace(1)* %247, align 1, !tbaa !13\l  %248 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %238\l  %249 = load i32, i32 addrspace(1)* %248, align 4, !tbaa !11\l  %250 = trunc i32 %249 to i8\l  %251 = add nsw i32 %245, 1\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %252\l  store i8 %250, i8 addrspace(1)* %253, align 1, !tbaa !13\l  %254 = sdiv i32 %240, 2\l  %255 = zext i32 %224 to i64\l  %256 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %255\l  %257 = load i32, i32 addrspace(1)* %256, align 4, !tbaa !11\l  %258 = trunc i32 %257 to i8\l  %259 = add nsw i32 %254, %18\l  %260 = sext i32 %259 to i64\l  %261 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %260\l  store i8 %258, i8 addrspace(1)* %261, align 1, !tbaa !13\l  %262 = zext i32 %221 to i64\l  %263 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %262\l  %264 = add nsw i32 %259, 1\l  %265 = sext i32 %264 to i64\l  br label %437\l}"];
	Node0x5950ab0 -> Node0x5950750;
	Node0x59481d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%266:\l266:                                              \l  %267 = sdiv i32 %6, 6\l  %268 = icmp slt i32 %18, %267\l  %269 = icmp slt i32 %26, %7\l  %270 = select i1 %268, i1 %269, i1 false\l  br i1 %270, label %271, label %443\l|{<s0>T|<s1>F}}"];
	Node0x59481d0:s0 -> Node0x5945460;
	Node0x59481d0:s1 -> Node0x5947f90;
	Node0x5945460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%271:\l271:                                              \l  %272 = mul nsw i32 %26, %1\l  %273 = shl nsw i32 %272, 1\l  %274 = shl nsw i32 %18, 4\l  %275 = add nsw i32 %273, %274\l  %276 = sext i32 %275 to i64\l  %277 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %276\l  %278 = load i16, i16 addrspace(1)* %277, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %279 = zext i16 %278 to i32\l  %280 = or i32 %275, 1\l  %281 = sext i32 %280 to i64\l  %282 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %281\l  %283 = load i16, i16 addrspace(1)* %282, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %284 = zext i16 %283 to i32\l  %285 = shl nuw i32 %284, 16\l  %286 = or i32 %285, %279\l  %287 = add nsw i32 %275, 3\l  %288 = sext i32 %287 to i64\l  %289 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %288\l  %290 = load i16, i16 addrspace(1)* %289, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %291 = add nsw i32 %275, 5\l  %292 = sext i32 %291 to i64\l  %293 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %292\l  %294 = load i16, i16 addrspace(1)* %293, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %295 = add nsw i32 %275, 6\l  %296 = sext i32 %295 to i64\l  %297 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %296\l  %298 = load i16, i16 addrspace(1)* %297, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %299 = zext i16 %298 to i32\l  %300 = add nsw i32 %275, 7\l  %301 = sext i32 %300 to i64\l  %302 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %301\l  %303 = load i16, i16 addrspace(1)* %302, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %304 = zext i16 %303 to i32\l  %305 = shl nuw i32 %304, 16\l  %306 = or i32 %305, %299\l  %307 = lshr i32 %284, 4\l  %308 = and i32 %307, 1023\l  %309 = lshr i32 %286, 10\l  %310 = and i32 %309, 1023\l  %311 = and i32 %279, 1023\l  %312 = lshr i16 %290, 4\l  %313 = and i16 %312, 1023\l  %314 = lshr i16 %294, 4\l  %315 = and i16 %314, 1023\l  %316 = lshr i32 %306, 10\l  %317 = and i32 %316, 1023\l  %318 = and i32 %299, 1023\l  %319 = add nsw i32 %275, 8\l  %320 = sext i32 %319 to i64\l  %321 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %320\l  %322 = load i16, i16 addrspace(1)* %321, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %323 = zext i16 %322 to i64\l  %324 = add nsw i32 %275, 9\l  %325 = sext i32 %324 to i64\l  %326 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %325\l  %327 = load i16, i16 addrspace(1)* %326, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %328 = zext i16 %327 to i64\l  %329 = shl nuw nsw i64 %328, 16\l  %330 = or i64 %329, %323\l  %331 = add nsw i32 %275, 10\l  %332 = sext i32 %331 to i64\l  %333 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %332\l  %334 = load i16, i16 addrspace(1)* %333, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %335 = zext i16 %334 to i32\l  %336 = add nsw i32 %275, 11\l  %337 = sext i32 %336 to i64\l  %338 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %337\l  %339 = load i16, i16 addrspace(1)* %338, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %340 = zext i16 %339 to i32\l  %341 = shl nuw i32 %340, 16\l  %342 = or i32 %341, %335\l  %343 = add nsw i32 %275, 12\l  %344 = sext i32 %343 to i64\l  %345 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %344\l  %346 = load i16, i16 addrspace(1)* %345, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %347 = add nsw i32 %275, 14\l  %348 = sext i32 %347 to i64\l  %349 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %348\l  %350 = load i16, i16 addrspace(1)* %349, align 2, !tbaa !7,\l... !amdgpu.noclobber !5\l  %351 = lshr i64 %330, 10\l  %352 = and i64 %351, 1023\l  %353 = lshr i32 %340, 4\l  %354 = and i32 %353, 1023\l  %355 = lshr i32 %342, 10\l  %356 = and i32 %355, 1023\l  %357 = and i16 %346, 1023\l  %358 = and i16 %350, 1023\l  %359 = mul nsw i32 %18, 6\l  %360 = mul nsw i32 %26, %6\l  %361 = zext i32 %310 to i64\l  %362 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %361\l  %363 = load i32, i32 addrspace(1)* %362, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %364 = trunc i32 %363 to i8\l  %365 = add nsw i32 %360, %359\l  %366 = sext i32 %365 to i64\l  %367 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %366\l  store i8 %364, i8 addrspace(1)* %367, align 1, !tbaa !13\l  %368 = zext i16 %313 to i64\l  %369 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %368\l  %370 = load i32, i32 addrspace(1)* %369, align 4, !tbaa !11\l  %371 = trunc i32 %370 to i8\l  %372 = add nsw i32 %365, 1\l  %373 = sext i32 %372 to i64\l  %374 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %373\l  store i8 %371, i8 addrspace(1)* %374, align 1, !tbaa !13\l  %375 = zext i32 %318 to i64\l  %376 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %375\l  %377 = load i32, i32 addrspace(1)* %376, align 4, !tbaa !11\l  %378 = trunc i32 %377 to i8\l  %379 = add nsw i32 %365, 2\l  %380 = sext i32 %379 to i64\l  %381 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %380\l  store i8 %378, i8 addrspace(1)* %381, align 1, !tbaa !13\l  %382 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %352\l  %383 = load i32, i32 addrspace(1)* %382, align 4, !tbaa !11\l  %384 = trunc i32 %383 to i8\l  %385 = add nsw i32 %365, 3\l  %386 = sext i32 %385 to i64\l  %387 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %386\l  store i8 %384, i8 addrspace(1)* %387, align 1, !tbaa !13\l  %388 = zext i32 %354 to i64\l  %389 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %388\l  %390 = load i32, i32 addrspace(1)* %389, align 4, !tbaa !11\l  %391 = trunc i32 %390 to i8\l  %392 = add nsw i32 %365, 4\l  %393 = sext i32 %392 to i64\l  %394 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %393\l  store i8 %391, i8 addrspace(1)* %394, align 1, !tbaa !13\l  %395 = zext i16 %358 to i64\l  %396 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %395\l  %397 = load i32, i32 addrspace(1)* %396, align 4, !tbaa !11\l  %398 = trunc i32 %397 to i8\l  %399 = add nsw i32 %365, 5\l  %400 = sext i32 %399 to i64\l  %401 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %400\l  store i8 %398, i8 addrspace(1)* %401, align 1, !tbaa !13\l  %402 = mul nsw i32 %18, 3\l  %403 = sdiv i32 %360, 2\l  %404 = zext i32 %311 to i64\l  %405 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %404\l  %406 = load i32, i32 addrspace(1)* %405, align 4, !tbaa !11\l  %407 = trunc i32 %406 to i8\l  %408 = add nsw i32 %403, %402\l  %409 = sext i32 %408 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %409\l  store i8 %407, i8 addrspace(1)* %410, align 1, !tbaa !13\l  %411 = zext i16 %315 to i64\l  %412 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %411\l  %413 = load i32, i32 addrspace(1)* %412, align 4, !tbaa !11\l  %414 = trunc i32 %413 to i8\l  %415 = add nsw i32 %408, 1\l  %416 = sext i32 %415 to i64\l  %417 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %416\l  store i8 %414, i8 addrspace(1)* %417, align 1, !tbaa !13\l  %418 = zext i32 %356 to i64\l  %419 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %418\l  %420 = load i32, i32 addrspace(1)* %419, align 4, !tbaa !11\l  %421 = trunc i32 %420 to i8\l  %422 = add nsw i32 %408, 2\l  %423 = sext i32 %422 to i64\l  %424 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 %423\l  store i8 %421, i8 addrspace(1)* %424, align 1, !tbaa !13\l  %425 = zext i32 %308 to i64\l  %426 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %425\l  %427 = load i32, i32 addrspace(1)* %426, align 4, !tbaa !11\l  %428 = trunc i32 %427 to i8\l  %429 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %409\l  store i8 %428, i8 addrspace(1)* %429, align 1, !tbaa !13\l  %430 = zext i32 %317 to i64\l  %431 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %430\l  %432 = load i32, i32 addrspace(1)* %431, align 4, !tbaa !11\l  %433 = trunc i32 %432 to i8\l  %434 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %416\l  store i8 %433, i8 addrspace(1)* %434, align 1, !tbaa !13\l  %435 = zext i16 %357 to i64\l  %436 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %435\l  br label %437\l}"];
	Node0x5945460 -> Node0x5950750;
	Node0x5950750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%437:\l437:                                              \l  %438 = phi i64 [ %423, %271 ], [ %265, %204 ], [ %185, %33 ]\l  %439 = phi i32 addrspace(1)* [ %436, %271 ], [ %263, %204 ], [ %198, %33 ]\l  %440 = load i32, i32 addrspace(1)* %439, align 4, !tbaa !11\l  %441 = trunc i32 %440 to i8\l  %442 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 %438\l  store i8 %441, i8 addrspace(1)* %442, align 1, !tbaa !13\l  br label %443\l}"];
	Node0x5950750 -> Node0x5947f90;
	Node0x5947f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%443:\l443:                                              \l  ret void\l}"];
}
