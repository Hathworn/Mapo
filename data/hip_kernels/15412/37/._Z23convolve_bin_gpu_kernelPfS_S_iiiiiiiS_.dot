digraph "CFG for '_Z23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_' function" {
	label="CFG for '_Z23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_' function";

	Node0x4fe23c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = freeze i32 %20\l  %22 = freeze i32 %3\l  %23 = sdiv i32 %21, %22\l  %24 = mul i32 %23, %22\l  %25 = sub i32 %21, %24\l  %26 = freeze i32 %4\l  %27 = sdiv i32 %23, %26\l  %28 = mul i32 %27, %26\l  %29 = sub i32 %23, %28\l  %30 = sdiv i32 %18, %3\l  %31 = sdiv i32 %30, %4\l  %32 = add i32 %12, 1\l  %33 = mul i32 %32, %17\l  %34 = add i32 %33, -1\l  %35 = sdiv i32 %34, %3\l  %36 = sdiv i32 %35, %4\l  %37 = mul nsw i32 %7, %7\l  %38 = mul nsw i32 %37, %5\l  %39 = sdiv i32 %38, 32\l  %40 = icmp sgt i32 %31, %36\l  br i1 %40, label %51, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4fe23c0:s0 -> Node0x4fe55f0;
	Node0x4fe23c0:s1 -> Node0x4fe5680;
	Node0x4fe5680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%41:\l41:                                               \l  %42 = icmp sgt i32 %19, %39\l  br label %43\l}"];
	Node0x4fe5680 -> Node0x4fe5850;
	Node0x4fe5850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %31, %41 ], [ %70, %69 ]\l  br i1 %42, label %69, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4fe5850:s0 -> Node0x4fe5940;
	Node0x4fe5850:s1 -> Node0x4fe5a80;
	Node0x4fe5a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = mul nsw i32 %44, %9\l  %47 = sdiv i32 %46, 32\l  %48 = sub nsw i32 %44, %31\l  %49 = mul nsw i32 %48, %9\l  %50 = sdiv i32 %49, 32\l  br label %72\l}"];
	Node0x4fe5a80 -> Node0x4fe5e90;
	Node0x4fe55f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = icmp sgt i32 %5, 0\l  br i1 %52, label %53, label %237\l|{<s0>T|<s1>F}}"];
	Node0x4fe55f0:s0 -> Node0x4fe62b0;
	Node0x4fe55f0:s1 -> Node0x4fe6340;
	Node0x4fe62b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%53:\l53:                                               \l  %54 = mul i32 %4, %3\l  %55 = sdiv i32 %54, 32\l  %56 = icmp sgt i32 %19, %55\l  %57 = icmp sge i32 %27, %6\l  %58 = icmp slt i32 %7, 1\l  %59 = sub i32 %29, %8\l  %60 = icmp sgt i32 %7, 0\l  %61 = sub i32 %25, %8\l  %62 = sub nsw i32 %27, %31\l  %63 = mul nsw i32 %62, %9\l  %64 = select i1 %57, i1 true, i1 %58\l  %65 = and i32 %7, 1\l  %66 = icmp eq i32 %7, 1\l  %67 = and i32 %7, -2\l  %68 = icmp eq i32 %65, 0\l  br label %83\l}"];
	Node0x4fe62b0 -> Node0x4fe6fa0;
	Node0x4fe5940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%69:\l69:                                               \l  %70 = add nsw i32 %44, 1\l  %71 = icmp slt i32 %44, %36\l  br i1 %71, label %43, label %51, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x4fe5940:s0 -> Node0x4fe5850;
	Node0x4fe5940:s1 -> Node0x4fe55f0;
	Node0x4fe5e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%72:\l72:                                               \l  %73 = phi i32 [ %19, %45 ], [ %81, %72 ]\l  %74 = add nsw i32 %73, %47\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = bitcast float addrspace(1)* %76 to i32 addrspace(1)*\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !9, !amdgpu.noclobber\l... !5\l  %79 = add nsw i32 %73, %50\l  %80 = getelementptr inbounds [1729 x i32], [1729 x i32] addrspace(3)*\l... @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E14weights_shared, i32 0, i32 %79\l  store i32 %78, i32 addrspace(3)* %80, align 4, !tbaa !9\l  %81 = add nuw nsw i32 %73, %17\l  %82 = icmp sgt i32 %81, %39\l  br i1 %82, label %69, label %72, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4fe5e90:s0 -> Node0x4fe5940;
	Node0x4fe5e90:s1 -> Node0x4fe5e90;
	Node0x4fe6fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%83:\l83:                                               \l  %84 = phi i32 [ 0, %53 ], [ %235, %232 ]\l  %85 = phi i32 [ 0, %53 ], [ %234, %232 ]\l  %86 = phi i32 [ 0, %53 ], [ %233, %232 ]\l  %87 = mul i32 %54, %84\l  %88 = freeze i32 %87\l  %89 = sdiv i32 %88, 32\l  %90 = mul i32 %89, 32\l  %91 = sub i32 %88, %90\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %56, label %92, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4fe6fa0:s0 -> Node0x4fe90d0;
	Node0x4fe6fa0:s1 -> Node0x4fe9120;
	Node0x4fe90d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%92:\l92:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %64, label %232, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4fe90d0:s0 -> Node0x4fe88f0;
	Node0x4fe90d0:s1 -> Node0x4fe93d0;
	Node0x4fe93d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%93:\l93:                                               \l  %94 = mul i32 %84, %7\l  br label %105\l}"];
	Node0x4fe93d0 -> Node0x4fe9560;
	Node0x4fe9120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%95:\l95:                                               \l  %96 = phi i32 [ %103, %95 ], [ %19, %83 ]\l  %97 = add nsw i32 %96, %89\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = bitcast float addrspace(1)* %99 to i32 addrspace(1)*\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !9,\l... !amdgpu.noclobber !5\l  %102 = getelementptr inbounds [5409 x i32], [5409 x i32] addrspace(3)*\l... @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E12input_shared, i32 0, i32 %96\l  store i32 %101, i32 addrspace(3)* %102, align 4, !tbaa !9\l  %103 = add nuw nsw i32 %96, %17\l  %104 = icmp sgt i32 %103, %55\l  br i1 %104, label %92, label %95, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4fe9120:s0 -> Node0x4fe90d0;
	Node0x4fe9120:s1 -> Node0x4fe9120;
	Node0x4fe9560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%105:\l105:                                              \l  %106 = phi i32 [ 0, %93 ], [ %230, %227 ]\l  %107 = phi i32 [ %85, %93 ], [ %229, %227 ]\l  %108 = phi i32 [ %86, %93 ], [ %228, %227 ]\l  %109 = add i32 %59, %106\l  br i1 %60, label %110, label %227\l|{<s0>T|<s1>F}}"];
	Node0x4fe9560:s0 -> Node0x4fea1c0;
	Node0x4fe9560:s1 -> Node0x4fe9e40;
	Node0x4fea1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%110:\l110:                                              \l  %111 = icmp sgt i32 %109, -1\l  %112 = icmp slt i32 %109, %4\l  %113 = add i32 %106, %94\l  %114 = mul i32 %113, %7\l  %115 = add i32 %114, %63\l  %116 = mul nsw i32 %109, %3\l  %117 = add i32 %116, %91\l  br i1 %66, label %191, label %118\l|{<s0>T|<s1>F}}"];
	Node0x4fea1c0:s0 -> Node0x4fea6f0;
	Node0x4fea1c0:s1 -> Node0x4fea740;
	Node0x4fea740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = phi i32 [ %188, %185 ], [ 0, %110 ]\l  %120 = phi i32 [ %187, %185 ], [ %107, %110 ]\l  %121 = phi i32 [ %186, %185 ], [ %108, %110 ]\l  %122 = phi i32 [ %189, %185 ], [ 0, %110 ]\l  %123 = add i32 %61, %119\l  %124 = icmp sgt i32 %123, -1\l  %125 = select i1 %111, i1 %124, i1 false\l  %126 = select i1 %125, i1 %112, i1 false\l  %127 = icmp slt i32 %123, %3\l  %128 = select i1 %126, i1 %127, i1 false\l  br i1 %128, label %129, label %152\l|{<s0>T|<s1>F}}"];
	Node0x4fea740:s0 -> Node0x4fe6b00;
	Node0x4fea740:s1 -> Node0x4fe6b90;
	Node0x4fe6b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%129:\l129:                                              \l  %130 = add i32 %115, %119\l  %131 = and i32 %130, 7\l  %132 = ashr i32 %130, 3\l  %133 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([1729 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E14weights_shared\l... to i8 addrspace(3)*), i32 %132\l  %134 = load i8, i8 addrspace(3)* %133, align 1, !tbaa !15\l  %135 = zext i8 %134 to i32\l  %136 = shl nuw nsw i32 1, %131\l  %137 = and i32 %136, %135\l  %138 = icmp eq i32 %137, 0\l  %139 = add i32 %117, %123\l  %140 = and i32 %139, 7\l  %141 = ashr i32 %139, 3\l  %142 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([5409 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E12input_shared to\l... i8 addrspace(3)*), i32 %141\l  %143 = load i8, i8 addrspace(3)* %142, align 1, !tbaa !15\l  %144 = zext i8 %143 to i32\l  %145 = shl nuw nsw i32 1, %140\l  %146 = and i32 %145, %144\l  %147 = icmp ne i32 %146, 0\l  %148 = xor i1 %138, %147\l  %149 = zext i1 %148 to i32\l  %150 = add nsw i32 %120, %149\l  %151 = add nsw i32 %121, 1\l  br label %152\l}"];
	Node0x4fe6b00 -> Node0x4fe6b90;
	Node0x4fe6b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  %153 = phi i32 [ %151, %129 ], [ %121, %118 ]\l  %154 = phi i32 [ %150, %129 ], [ %120, %118 ]\l  %155 = or i32 %119, 1\l  %156 = add i32 %61, %155\l  %157 = icmp sgt i32 %156, -1\l  %158 = select i1 %111, i1 %157, i1 false\l  %159 = select i1 %158, i1 %112, i1 false\l  %160 = icmp slt i32 %156, %3\l  %161 = select i1 %159, i1 %160, i1 false\l  br i1 %161, label %162, label %185\l|{<s0>T|<s1>F}}"];
	Node0x4fe6b90:s0 -> Node0x4fed350;
	Node0x4fe6b90:s1 -> Node0x4fea8b0;
	Node0x4fed350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%162:\l162:                                              \l  %163 = add i32 %115, %155\l  %164 = and i32 %163, 7\l  %165 = ashr i32 %163, 3\l  %166 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([1729 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E14weights_shared\l... to i8 addrspace(3)*), i32 %165\l  %167 = load i8, i8 addrspace(3)* %166, align 1, !tbaa !15\l  %168 = zext i8 %167 to i32\l  %169 = shl nuw nsw i32 1, %164\l  %170 = and i32 %169, %168\l  %171 = icmp eq i32 %170, 0\l  %172 = add i32 %117, %156\l  %173 = and i32 %172, 7\l  %174 = ashr i32 %172, 3\l  %175 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([5409 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E12input_shared to\l... i8 addrspace(3)*), i32 %174\l  %176 = load i8, i8 addrspace(3)* %175, align 1, !tbaa !15\l  %177 = zext i8 %176 to i32\l  %178 = shl nuw nsw i32 1, %173\l  %179 = and i32 %178, %177\l  %180 = icmp ne i32 %179, 0\l  %181 = xor i1 %171, %180\l  %182 = zext i1 %181 to i32\l  %183 = add nsw i32 %154, %182\l  %184 = add nsw i32 %153, 1\l  br label %185\l}"];
	Node0x4fed350 -> Node0x4fea8b0;
	Node0x4fea8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%185:\l185:                                              \l  %186 = phi i32 [ %184, %162 ], [ %153, %152 ]\l  %187 = phi i32 [ %183, %162 ], [ %154, %152 ]\l  %188 = add nuw nsw i32 %119, 2\l  %189 = add i32 %122, 2\l  %190 = icmp eq i32 %189, %67\l  br i1 %190, label %191, label %118, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4fea8b0:s0 -> Node0x4fea6f0;
	Node0x4fea8b0:s1 -> Node0x4fea740;
	Node0x4fea6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%191:\l191:                                              \l  %192 = phi i32 [ undef, %110 ], [ %186, %185 ]\l  %193 = phi i32 [ undef, %110 ], [ %187, %185 ]\l  %194 = phi i32 [ 0, %110 ], [ %188, %185 ]\l  %195 = phi i32 [ %107, %110 ], [ %187, %185 ]\l  %196 = phi i32 [ %108, %110 ], [ %186, %185 ]\l  br i1 %68, label %227, label %197\l|{<s0>T|<s1>F}}"];
	Node0x4fea6f0:s0 -> Node0x4fe9e40;
	Node0x4fea6f0:s1 -> Node0x4fee850;
	Node0x4fee850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%197:\l197:                                              \l  %198 = add i32 %61, %194\l  %199 = icmp sgt i32 %198, -1\l  %200 = select i1 %111, i1 %199, i1 false\l  %201 = select i1 %200, i1 %112, i1 false\l  %202 = icmp slt i32 %198, %3\l  %203 = select i1 %201, i1 %202, i1 false\l  br i1 %203, label %204, label %227\l|{<s0>T|<s1>F}}"];
	Node0x4fee850:s0 -> Node0x4feed10;
	Node0x4fee850:s1 -> Node0x4fe9e40;
	Node0x4feed10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%204:\l204:                                              \l  %205 = add i32 %115, %194\l  %206 = and i32 %205, 7\l  %207 = ashr i32 %205, 3\l  %208 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([1729 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E14weights_shared\l... to i8 addrspace(3)*), i32 %207\l  %209 = load i8, i8 addrspace(3)* %208, align 1, !tbaa !15\l  %210 = zext i8 %209 to i32\l  %211 = shl nuw nsw i32 1, %206\l  %212 = and i32 %211, %210\l  %213 = icmp eq i32 %212, 0\l  %214 = add i32 %117, %198\l  %215 = and i32 %214, 7\l  %216 = ashr i32 %214, 3\l  %217 = getelementptr inbounds i8, i8 addrspace(3)* bitcast ([5409 x i32]\l... addrspace(3)* @_ZZ23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_E12input_shared to\l... i8 addrspace(3)*), i32 %216\l  %218 = load i8, i8 addrspace(3)* %217, align 1, !tbaa !15\l  %219 = zext i8 %218 to i32\l  %220 = shl nuw nsw i32 1, %215\l  %221 = and i32 %220, %219\l  %222 = icmp ne i32 %221, 0\l  %223 = xor i1 %213, %222\l  %224 = zext i1 %223 to i32\l  %225 = add nsw i32 %195, %224\l  %226 = add nsw i32 %196, 1\l  br label %227\l}"];
	Node0x4feed10 -> Node0x4fe9e40;
	Node0x4fe9e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%227:\l227:                                              \l  %228 = phi i32 [ %108, %105 ], [ %192, %191 ], [ %226, %204 ], [ %196, %197 ]\l  %229 = phi i32 [ %107, %105 ], [ %193, %191 ], [ %225, %204 ], [ %195, %197 ]\l  %230 = add nuw nsw i32 %106, 1\l  %231 = icmp eq i32 %230, %7\l  br i1 %231, label %232, label %105, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4fe9e40:s0 -> Node0x4fe88f0;
	Node0x4fe9e40:s1 -> Node0x4fe9560;
	Node0x4fe88f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%232:\l232:                                              \l  %233 = phi i32 [ %86, %92 ], [ %228, %227 ]\l  %234 = phi i32 [ %85, %92 ], [ %229, %227 ]\l  %235 = add nuw nsw i32 %84, 1\l  %236 = icmp eq i32 %235, %5\l  br i1 %236, label %237, label %83, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4fe88f0:s0 -> Node0x4fe6340;
	Node0x4fe88f0:s1 -> Node0x4fe6fa0;
	Node0x4fe6340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%237:\l237:                                              \l  %238 = phi i32 [ 0, %51 ], [ %233, %232 ]\l  %239 = phi i32 [ 0, %51 ], [ %234, %232 ]\l  %240 = mul i32 %27, %4\l  %241 = add i32 %240, %29\l  %242 = mul i32 %241, %3\l  %243 = add i32 %242, %25\l  %244 = shl i32 %239, 1\l  %245 = sub i32 %244, %238\l  %246 = sext i32 %243 to i64\l  %247 = getelementptr inbounds float, float addrspace(1)* %2, i64 %246\l  %248 = sitofp i32 %245 to float\l  %249 = sext i32 %27 to i64\l  %250 = getelementptr inbounds float, float addrspace(1)* %10, i64 %249\l  %251 = load float, float addrspace(1)* %250, align 4, !tbaa !19,\l... !amdgpu.noclobber !5\l  %252 = fmul contract float %251, %248\l  %253 = atomicrmw fadd float addrspace(1)* %247, float %252\l... syncscope(\"agent-one-as\") monotonic, align 4\l  ret void\l}"];
}
