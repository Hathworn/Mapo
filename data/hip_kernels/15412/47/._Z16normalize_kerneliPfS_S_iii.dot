digraph "CFG for '_Z16normalize_kerneliPfS_S_iii' function" {
	label="CFG for '_Z16normalize_kerneliPfS_S_iii' function";

	Node0x555a8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %53\l|{<s0>T|<s1>F}}"];
	Node0x555a8a0:s0 -> Node0x555c7d0;
	Node0x555a8a0:s1 -> Node0x555c860;
	Node0x555c7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = sdiv i32 %16, %6\l  %20 = srem i32 %19, %5\l  %21 = sext i32 %16 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = sext i32 %20 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = fsub contract float %23, %26\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %24\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = fadd contract float %29, 0x3EE4F8B580000000\l  %31 = fcmp olt float %30, 0x39F0000000000000\l  %32 = select i1 %31, float 0x41F0000000000000, float 1.000000e+00\l  %33 = fmul float %30, %32\l  %34 = tail call float @llvm.sqrt.f32(float %33)\l  %35 = bitcast float %34 to i32\l  %36 = add nsw i32 %35, -1\l  %37 = bitcast i32 %36 to float\l  %38 = add nsw i32 %35, 1\l  %39 = bitcast i32 %38 to float\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %33, i32 608)\l  %41 = select i1 %31, float 0x3EF0000000000000, float 1.000000e+00\l  %42 = fneg float %39\l  %43 = tail call float @llvm.fma.f32(float %42, float %34, float %33)\l  %44 = fcmp ogt float %43, 0.000000e+00\l  %45 = fneg float %37\l  %46 = tail call float @llvm.fma.f32(float %45, float %34, float %33)\l  %47 = fcmp ole float %46, 0.000000e+00\l  %48 = select i1 %47, float %37, float %34\l  %49 = select i1 %44, float %39, float %48\l  %50 = fmul float %41, %49\l  %51 = select i1 %40, float %33, float %50\l  %52 = fdiv contract float %27, %51\l  store float %52, float addrspace(1)* %22, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x555c7d0 -> Node0x555c860;
	Node0x555c860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
