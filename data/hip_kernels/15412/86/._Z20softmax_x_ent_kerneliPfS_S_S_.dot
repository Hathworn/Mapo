digraph "CFG for '_Z20softmax_x_ent_kerneliPfS_S_S_' function" {
	label="CFG for '_Z20softmax_x_ent_kerneliPfS_S_S_' function";

	Node0x57cdc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = add i32 %21, %6\l  %23 = mul i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %0\l  br i1 %26, label %27, label %54\l|{<s0>T|<s1>F}}"];
	Node0x57cdc20:s0 -> Node0x57d0490;
	Node0x57cdc20:s1 -> Node0x57d0520;
	Node0x57d0490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%27:\l27:                                               \l  %28 = sext i32 %25 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = fcmp contract une float %30, 0.000000e+00\l  br i1 %33, label %34, label %49\l|{<s0>T|<s1>F}}"];
	Node0x57d0490:s0 -> Node0x57d22f0;
	Node0x57d0490:s1 -> Node0x57d2340;
	Node0x57d22f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%34:\l34:                                               \l  %35 = tail call i1 @llvm.amdgcn.class.f32(float %32, i32 144)\l  %36 = select i1 %35, float 0x41F0000000000000, float 1.000000e+00\l  %37 = fmul float %32, %36\l  %38 = tail call float @llvm.log2.f32(float %37)\l  %39 = fmul float %38, 0x3FE62E42E0000000\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %38, i32 519)\l  %41 = fneg float %39\l  %42 = tail call float @llvm.fma.f32(float %38, float 0x3FE62E42E0000000,\l... float %41)\l  %43 = tail call float @llvm.fma.f32(float %38, float 0x3E6EFA39E0000000,\l... float %42)\l  %44 = fadd float %39, %43\l  %45 = select i1 %40, float %38, float %44\l  %46 = select i1 %35, float 0x40362E4300000000, float 0.000000e+00\l  %47 = fsub float %45, %46\l  %48 = fneg contract float %47\l  br label %49\l}"];
	Node0x57d22f0 -> Node0x57d2340;
	Node0x57d2340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%49:\l49:                                               \l  %50 = phi contract float [ %48, %34 ], [ 0.000000e+00, %27 ]\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %28\l  store float %50, float addrspace(1)* %51, align 4, !tbaa !16\l  %52 = fsub contract float %30, %32\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %28\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !16\l  br label %54\l}"];
	Node0x57d2340 -> Node0x57d0520;
	Node0x57d0520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
