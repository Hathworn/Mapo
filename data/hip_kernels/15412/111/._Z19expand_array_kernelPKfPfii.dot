digraph "CFG for '_Z19expand_array_kernelPKfPfii' function" {
	label="CFG for '_Z19expand_array_kernelPKfPfii' function";

	Node0x59d9e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  %15 = icmp sgt i32 %3, 0\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %91\l|{<s0>T|<s1>F}}"];
	Node0x59d9e20:s0 -> Node0x59da9d0;
	Node0x59d9e20:s1 -> Node0x59dbfb0;
	Node0x59da9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = sext i32 %13 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = and i32 %3, 7\l  %21 = icmp ult i32 %3, 8\l  br i1 %21, label %77, label %22\l|{<s0>T|<s1>F}}"];
	Node0x59da9d0:s0 -> Node0x59dc380;
	Node0x59da9d0:s1 -> Node0x59dc3d0;
	Node0x59dc3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %3, -8\l  br label %24\l}"];
	Node0x59dc3d0 -> Node0x59dc5d0;
	Node0x59dc5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %22 ], [ %74, %24 ]\l  %26 = phi i32 [ 0, %22 ], [ %75, %24 ]\l  %27 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %28 = mul nsw i32 %25, %2\l  %29 = add nsw i32 %28, %13\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  store float %27, float addrspace(1)* %31, align 4, !tbaa !7\l  %32 = or i32 %25, 1\l  %33 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %34 = mul nsw i32 %32, %2\l  %35 = add nsw i32 %34, %13\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  store float %33, float addrspace(1)* %37, align 4, !tbaa !7\l  %38 = or i32 %25, 2\l  %39 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %40 = mul nsw i32 %38, %2\l  %41 = add nsw i32 %40, %13\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  store float %39, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %25, 3\l  %45 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %46 = mul nsw i32 %44, %2\l  %47 = add nsw i32 %46, %13\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  store float %45, float addrspace(1)* %49, align 4, !tbaa !7\l  %50 = or i32 %25, 4\l  %51 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %52 = mul nsw i32 %50, %2\l  %53 = add nsw i32 %52, %13\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  store float %51, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = or i32 %25, 5\l  %57 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %58 = mul nsw i32 %56, %2\l  %59 = add nsw i32 %58, %13\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  store float %57, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = or i32 %25, 6\l  %63 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %64 = mul nsw i32 %62, %2\l  %65 = add nsw i32 %64, %13\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  store float %63, float addrspace(1)* %67, align 4, !tbaa !7\l  %68 = or i32 %25, 7\l  %69 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %70 = mul nsw i32 %68, %2\l  %71 = add nsw i32 %70, %13\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  store float %69, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = add nuw nsw i32 %25, 8\l  %75 = add i32 %26, 8\l  %76 = icmp eq i32 %75, %23\l  br i1 %76, label %77, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59dc5d0:s0 -> Node0x59dc380;
	Node0x59dc5d0:s1 -> Node0x59dc5d0;
	Node0x59dc380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %17 ], [ %74, %24 ]\l  %79 = icmp eq i32 %20, 0\l  br i1 %79, label %91, label %80\l|{<s0>T|<s1>F}}"];
	Node0x59dc380:s0 -> Node0x59dbfb0;
	Node0x59dc380:s1 -> Node0x59df600;
	Node0x59df600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = phi i32 [ %88, %80 ], [ %78, %77 ]\l  %82 = phi i32 [ %89, %80 ], [ 0, %77 ]\l  %83 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %84 = mul nsw i32 %81, %2\l  %85 = add nsw i32 %84, %13\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  store float %83, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nuw nsw i32 %81, 1\l  %89 = add i32 %82, 1\l  %90 = icmp eq i32 %89, %20\l  br i1 %90, label %91, label %80, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x59df600:s0 -> Node0x59dbfb0;
	Node0x59df600:s1 -> Node0x59df600;
	Node0x59dbfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%91:\l91:                                               \l  ret void\l}"];
}
