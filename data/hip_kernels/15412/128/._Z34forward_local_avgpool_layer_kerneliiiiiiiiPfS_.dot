digraph "CFG for '_Z34forward_local_avgpool_layer_kerneliiiiiiiiPfS_' function" {
	label="CFG for '_Z34forward_local_avgpool_layer_kerneliiiiiiiiPfS_' function";

	Node0x54a87d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l  %11 = sub i32 %1, %6\l  %12 = add i32 %11, %7\l  %13 = sdiv i32 %12, %5\l  %14 = add nsw i32 %13, 1\l  %15 = sub i32 %2, %6\l  %16 = add i32 %15, %7\l  %17 = sdiv i32 %16, %4\l  %18 = add nsw i32 %17, 1\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !4\l  %25 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !13, !invariant.load\l... !14\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %24, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %20\l  %35 = add i32 %34, %19\l  %36 = mul i32 %35, %28\l  %37 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %38 = add i32 %36, %37\l  %39 = icmp slt i32 %38, %0\l  br i1 %39, label %40, label %193\l|{<s0>T|<s1>F}}"];
	Node0x54a87d0:s0 -> Node0x54ac140;
	Node0x54a87d0:s1 -> Node0x54ac1d0;
	Node0x54ac140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%40:\l40:                                               \l  %41 = freeze i32 %38\l  %42 = freeze i32 %18\l  %43 = sdiv i32 %41, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %41, %44\l  %46 = freeze i32 %14\l  %47 = sdiv i32 %43, %46\l  %48 = mul i32 %47, %46\l  %49 = sub i32 %43, %48\l  %50 = freeze i32 %47\l  %51 = sdiv i32 %7, -2\l  %52 = mul nsw i32 %50, %14\l  %53 = add nsw i32 %52, %49\l  %54 = mul nsw i32 %53, %18\l  %55 = add nsw i32 %54, %45\l  %56 = icmp sgt i32 %6, 0\l  br i1 %56, label %57, label %186\l|{<s0>T|<s1>F}}"];
	Node0x54ac140:s0 -> Node0x54acbc0;
	Node0x54ac140:s1 -> Node0x54acc10;
	Node0x54acbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %49, %5\l  %59 = add nsw i32 %58, %51\l  %60 = mul nsw i32 %45, %4\l  %61 = add nsw i32 %60, %51\l  %62 = mul nsw i32 %50, %1\l  %63 = and i32 %6, 3\l  %64 = icmp ult i32 %6, 4\l  %65 = and i32 %6, -4\l  %66 = icmp eq i32 %63, 0\l  br label %67\l}"];
	Node0x54acbc0 -> Node0x54abae0;
	Node0x54abae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%67:\l67:                                               \l  %68 = phi float [ 0.000000e+00, %57 ], [ %183, %181 ]\l  %69 = phi i32 [ 0, %57 ], [ %182, %181 ]\l  %70 = phi i32 [ 0, %57 ], [ %184, %181 ]\l  %71 = add nsw i32 %59, %70\l  %72 = add nsw i32 %71, %62\l  %73 = mul nsw i32 %72, %2\l  %74 = icmp sgt i32 %71, -1\l  %75 = icmp slt i32 %71, %1\l  br i1 %64, label %151, label %76\l|{<s0>T|<s1>F}}"];
	Node0x54abae0:s0 -> Node0x54ae6c0;
	Node0x54abae0:s1 -> Node0x54ae750;
	Node0x54ae750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = phi float [ %147, %145 ], [ %68, %67 ]\l  %78 = phi i32 [ %146, %145 ], [ %69, %67 ]\l  %79 = phi i32 [ %148, %145 ], [ 0, %67 ]\l  %80 = phi i32 [ %149, %145 ], [ 0, %67 ]\l  %81 = add nsw i32 %61, %79\l  %82 = add nsw i32 %81, %73\l  br i1 %74, label %83, label %94\l|{<s0>T|<s1>F}}"];
	Node0x54ae750:s0 -> Node0x54aee80;
	Node0x54ae750:s1 -> Node0x54aef10;
	Node0x54aee80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%83:\l83:                                               \l  %84 = icmp sgt i32 %81, -1\l  %85 = select i1 %75, i1 %84, i1 false\l  %86 = icmp slt i32 %81, %2\l  %87 = select i1 %85, i1 %86, i1 false\l  br i1 %87, label %88, label %94\l|{<s0>T|<s1>F}}"];
	Node0x54aee80:s0 -> Node0x54af300;
	Node0x54aee80:s1 -> Node0x54aef10;
	Node0x54af300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%88:\l88:                                               \l  %89 = add nsw i32 %78, 1\l  %90 = sext i32 %82 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %8, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %93 = fadd contract float %77, %92\l  br label %94\l}"];
	Node0x54af300 -> Node0x54aef10;
	Node0x54aef10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%94:\l94:                                               \l  %95 = phi i32 [ %89, %88 ], [ %78, %83 ], [ %78, %76 ]\l  %96 = phi float [ %93, %88 ], [ %77, %83 ], [ %77, %76 ]\l  %97 = or i32 %79, 1\l  %98 = add nsw i32 %61, %97\l  %99 = add nsw i32 %98, %73\l  br i1 %74, label %100, label %111\l|{<s0>T|<s1>F}}"];
	Node0x54aef10:s0 -> Node0x54b0220;
	Node0x54aef10:s1 -> Node0x54b0270;
	Node0x54b0220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%100:\l100:                                              \l  %101 = icmp sgt i32 %98, -1\l  %102 = select i1 %75, i1 %101, i1 false\l  %103 = icmp slt i32 %98, %2\l  %104 = select i1 %102, i1 %103, i1 false\l  br i1 %104, label %105, label %111\l|{<s0>T|<s1>F}}"];
	Node0x54b0220:s0 -> Node0x54b0630;
	Node0x54b0220:s1 -> Node0x54b0270;
	Node0x54b0630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%105:\l105:                                              \l  %106 = add nsw i32 %95, 1\l  %107 = sext i32 %99 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %8, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %110 = fadd contract float %96, %109\l  br label %111\l}"];
	Node0x54b0630 -> Node0x54b0270;
	Node0x54b0270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%111:\l111:                                              \l  %112 = phi i32 [ %106, %105 ], [ %95, %100 ], [ %95, %94 ]\l  %113 = phi float [ %110, %105 ], [ %96, %100 ], [ %96, %94 ]\l  %114 = or i32 %79, 2\l  %115 = add nsw i32 %61, %114\l  %116 = add nsw i32 %115, %73\l  br i1 %74, label %117, label %128\l|{<s0>T|<s1>F}}"];
	Node0x54b0270:s0 -> Node0x54b13a0;
	Node0x54b0270:s1 -> Node0x54b13f0;
	Node0x54b13a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%117:\l117:                                              \l  %118 = icmp sgt i32 %115, -1\l  %119 = select i1 %75, i1 %118, i1 false\l  %120 = icmp slt i32 %115, %2\l  %121 = select i1 %119, i1 %120, i1 false\l  br i1 %121, label %122, label %128\l|{<s0>T|<s1>F}}"];
	Node0x54b13a0:s0 -> Node0x54b17b0;
	Node0x54b13a0:s1 -> Node0x54b13f0;
	Node0x54b17b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%122:\l122:                                              \l  %123 = add nsw i32 %112, 1\l  %124 = sext i32 %116 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %8, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %127 = fadd contract float %113, %126\l  br label %128\l}"];
	Node0x54b17b0 -> Node0x54b13f0;
	Node0x54b13f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%128:\l128:                                              \l  %129 = phi i32 [ %123, %122 ], [ %112, %117 ], [ %112, %111 ]\l  %130 = phi float [ %127, %122 ], [ %113, %117 ], [ %113, %111 ]\l  %131 = or i32 %79, 3\l  %132 = add nsw i32 %61, %131\l  %133 = add nsw i32 %132, %73\l  br i1 %74, label %134, label %145\l|{<s0>T|<s1>F}}"];
	Node0x54b13f0:s0 -> Node0x54ad4f0;
	Node0x54b13f0:s1 -> Node0x54ae8c0;
	Node0x54ad4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%134:\l134:                                              \l  %135 = icmp sgt i32 %132, -1\l  %136 = select i1 %75, i1 %135, i1 false\l  %137 = icmp slt i32 %132, %2\l  %138 = select i1 %136, i1 %137, i1 false\l  br i1 %138, label %139, label %145\l|{<s0>T|<s1>F}}"];
	Node0x54ad4f0:s0 -> Node0x54ad540;
	Node0x54ad4f0:s1 -> Node0x54ae8c0;
	Node0x54ad540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%139:\l139:                                              \l  %140 = add nsw i32 %129, 1\l  %141 = sext i32 %133 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %8, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %144 = fadd contract float %130, %143\l  br label %145\l}"];
	Node0x54ad540 -> Node0x54ae8c0;
	Node0x54ae8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%145:\l145:                                              \l  %146 = phi i32 [ %140, %139 ], [ %129, %134 ], [ %129, %128 ]\l  %147 = phi float [ %144, %139 ], [ %130, %134 ], [ %130, %128 ]\l  %148 = add nuw nsw i32 %79, 4\l  %149 = add i32 %80, 4\l  %150 = icmp eq i32 %149, %65\l  br i1 %150, label %151, label %76, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x54ae8c0:s0 -> Node0x54ae6c0;
	Node0x54ae8c0:s1 -> Node0x54ae750;
	Node0x54ae6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%151:\l151:                                              \l  %152 = phi i32 [ undef, %67 ], [ %146, %145 ]\l  %153 = phi float [ undef, %67 ], [ %147, %145 ]\l  %154 = phi float [ %68, %67 ], [ %147, %145 ]\l  %155 = phi i32 [ %69, %67 ], [ %146, %145 ]\l  %156 = phi i32 [ 0, %67 ], [ %148, %145 ]\l  br i1 %66, label %181, label %157\l|{<s0>T|<s1>F}}"];
	Node0x54ae6c0:s0 -> Node0x54ae070;
	Node0x54ae6c0:s1 -> Node0x54b36a0;
	Node0x54b36a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  %158 = phi float [ %177, %175 ], [ %154, %151 ]\l  %159 = phi i32 [ %176, %175 ], [ %155, %151 ]\l  %160 = phi i32 [ %178, %175 ], [ %156, %151 ]\l  %161 = phi i32 [ %179, %175 ], [ 0, %151 ]\l  %162 = add nsw i32 %61, %160\l  %163 = add nsw i32 %162, %73\l  br i1 %74, label %164, label %175\l|{<s0>T|<s1>F}}"];
	Node0x54b36a0:s0 -> Node0x54b3c90;
	Node0x54b36a0:s1 -> Node0x54b37a0;
	Node0x54b3c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%164:\l164:                                              \l  %165 = icmp sgt i32 %162, -1\l  %166 = select i1 %75, i1 %165, i1 false\l  %167 = icmp slt i32 %162, %2\l  %168 = select i1 %166, i1 %167, i1 false\l  br i1 %168, label %169, label %175\l|{<s0>T|<s1>F}}"];
	Node0x54b3c90:s0 -> Node0x54b4050;
	Node0x54b3c90:s1 -> Node0x54b37a0;
	Node0x54b4050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%169:\l169:                                              \l  %170 = add nsw i32 %159, 1\l  %171 = sext i32 %163 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %8, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %174 = fadd contract float %158, %173\l  br label %175\l}"];
	Node0x54b4050 -> Node0x54b37a0;
	Node0x54b37a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%175:\l175:                                              \l  %176 = phi i32 [ %170, %169 ], [ %159, %164 ], [ %159, %157 ]\l  %177 = phi float [ %174, %169 ], [ %158, %164 ], [ %158, %157 ]\l  %178 = add nuw nsw i32 %160, 1\l  %179 = add i32 %161, 1\l  %180 = icmp eq i32 %179, %63\l  br i1 %180, label %181, label %157, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x54b37a0:s0 -> Node0x54ae070;
	Node0x54b37a0:s1 -> Node0x54b36a0;
	Node0x54ae070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%181:\l181:                                              \l  %182 = phi i32 [ %152, %151 ], [ %176, %175 ]\l  %183 = phi float [ %153, %151 ], [ %177, %175 ]\l  %184 = add nuw nsw i32 %70, 1\l  %185 = icmp eq i32 %184, %6\l  br i1 %185, label %186, label %67, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x54ae070:s0 -> Node0x54acc10;
	Node0x54ae070:s1 -> Node0x54abae0;
	Node0x54acc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%186:\l186:                                              \l  %187 = phi i32 [ 0, %40 ], [ %182, %181 ]\l  %188 = phi float [ 0.000000e+00, %40 ], [ %183, %181 ]\l  %189 = sitofp i32 %187 to float\l  %190 = fdiv contract float %188, %189\l  %191 = sext i32 %55 to i64\l  %192 = getelementptr inbounds float, float addrspace(1)* %9, i64 %191\l  store float %190, float addrspace(1)* %192, align 4, !tbaa !16\l  br label %193\l}"];
	Node0x54acc10 -> Node0x54ac1d0;
	Node0x54ac1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%193:\l193:                                              \l  ret void\l}"];
}
