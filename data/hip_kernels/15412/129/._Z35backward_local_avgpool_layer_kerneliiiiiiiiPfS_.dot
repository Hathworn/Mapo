digraph "CFG for '_Z35backward_local_avgpool_layer_kerneliiiiiiiiPfS_' function" {
	label="CFG for '_Z35backward_local_avgpool_layer_kerneliiiiiiiiPfS_' function";

	Node0x4e78810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%10:\l  %11 = sub i32 %1, %6\l  %12 = add i32 %11, %7\l  %13 = sdiv i32 %12, %5\l  %14 = add nsw i32 %13, 1\l  %15 = sub i32 %2, %6\l  %16 = add i32 %15, %7\l  %17 = sdiv i32 %16, %4\l  %18 = add nsw i32 %17, 1\l  %19 = add nsw i32 %6, -1\l  %20 = sdiv i32 %19, %4\l  %21 = sdiv i32 %19, %5\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr inbounds i8, i8 addrspace(4)* %24, i64 12\l  %26 = bitcast i8 addrspace(4)* %25 to i32 addrspace(4)*\l  %27 = load i32, i32 addrspace(4)* %26, align 4, !tbaa !4\l  %28 = getelementptr i8, i8 addrspace(4)* %24, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !13, !invariant.load\l... !14\l  %31 = zext i16 %30 to i32\l  %32 = udiv i32 %27, %31\l  %33 = mul i32 %32, %31\l  %34 = icmp ugt i32 %27, %33\l  %35 = zext i1 %34 to i32\l  %36 = add i32 %32, %35\l  %37 = mul i32 %36, %23\l  %38 = add i32 %37, %22\l  %39 = mul i32 %38, %31\l  %40 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %41 = add i32 %39, %40\l  %42 = icmp slt i32 %41, %0\l  br i1 %42, label %43, label %201\l|{<s0>T|<s1>F}}"];
	Node0x4e78810:s0 -> Node0x4e7c5d0;
	Node0x4e78810:s1 -> Node0x4e7c660;
	Node0x4e7c5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%43:\l43:                                               \l  %44 = freeze i32 %41\l  %45 = freeze i32 %2\l  %46 = sdiv i32 %44, %45\l  %47 = sdiv i32 %7, -2\l  %48 = icmp slt i32 %21, 0\l  br i1 %48, label %190, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4e7c5d0:s0 -> Node0x4e7ca60;
	Node0x4e7c5d0:s1 -> Node0x4e7cab0;
	Node0x4e7cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%49:\l49:                                               \l  %50 = sub nsw i32 0, %21\l  %51 = freeze i32 %46\l  %52 = freeze i32 %1\l  %53 = sdiv i32 %51, %52\l  %54 = freeze i32 %53\l  %55 = mul i32 %53, %52\l  %56 = sub i32 %51, %55\l  %57 = mul i32 %46, %45\l  %58 = sub i32 %44, %57\l  %59 = sub i32 0, %20\l  %60 = icmp slt i32 %20, 0\l  %61 = sub nsw i32 %58, %47\l  %62 = sub nsw i32 %56, %47\l  %63 = mul nsw i32 %54, %14\l  %64 = tail call i32 @llvm.abs.i32(i32 %20, i1 false)\l  %65 = add i32 %20, %64\l  %66 = add i32 %65, 1\l  %67 = and i32 %66, 3\l  %68 = icmp eq i32 %67, 0\l  %69 = icmp ult i32 %65, 3\l  br label %70\l}"];
	Node0x4e7cab0 -> Node0x4e7daa0;
	Node0x4e7daa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %49 ], [ %187, %185 ]\l  %72 = phi float [ 0.000000e+00, %49 ], [ %186, %185 ]\l  %73 = phi i32 [ %50, %49 ], [ %188, %185 ]\l  br i1 %60, label %185, label %74\l|{<s0>T|<s1>F}}"];
	Node0x4e7daa0:s0 -> Node0x4e7dba0;
	Node0x4e7daa0:s1 -> Node0x4e7e970;
	Node0x4e7e970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%74:\l74:                                               \l  %75 = sdiv i32 %61, %4\l  %76 = sdiv i32 %62, %5\l  %77 = add nsw i32 %76, %73\l  %78 = add nsw i32 %77, %63\l  %79 = mul nsw i32 %78, %18\l  %80 = icmp sgt i32 %77, -1\l  %81 = icmp sle i32 %77, %13\l  br i1 %68, label %106, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4e7e970:s0 -> Node0x4e7eea0;
	Node0x4e7e970:s1 -> Node0x4e7eef0;
	Node0x4e7eef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i32 [ %102, %100 ], [ %71, %74 ]\l  %84 = phi float [ %101, %100 ], [ %72, %74 ]\l  %85 = phi i32 [ %103, %100 ], [ %59, %74 ]\l  %86 = phi i32 [ %104, %100 ], [ 0, %74 ]\l  %87 = add nsw i32 %75, %85\l  %88 = add nsw i32 %79, %87\l  %89 = icmp sgt i32 %87, -1\l  br i1 %89, label %90, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4e7eef0:s0 -> Node0x4e7f6b0;
	Node0x4e7eef0:s1 -> Node0x4e7f060;
	Node0x4e7f6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%90:\l90:                                               \l  %91 = icmp sle i32 %87, %17\l  %92 = select i1 %91, i1 %80, i1 false\l  %93 = select i1 %92, i1 %81, i1 false\l  br i1 %93, label %94, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4e7f6b0:s0 -> Node0x4e7f9e0;
	Node0x4e7f6b0:s1 -> Node0x4e7f060;
	Node0x4e7f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%94:\l94:                                               \l  %95 = add nsw i32 %83, 1\l  %96 = sext i32 %88 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %8, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %99 = fadd contract float %84, %98\l  br label %100\l}"];
	Node0x4e7f9e0 -> Node0x4e7f060;
	Node0x4e7f060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi float [ %99, %94 ], [ %84, %90 ], [ %84, %82 ]\l  %102 = phi i32 [ %95, %94 ], [ %83, %90 ], [ %83, %82 ]\l  %103 = add i32 %85, 1\l  %104 = add i32 %86, 1\l  %105 = icmp eq i32 %104, %67\l  br i1 %105, label %106, label %82, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4e7f060:s0 -> Node0x4e7eea0;
	Node0x4e7f060:s1 -> Node0x4e7eef0;
	Node0x4e7eea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%106:\l106:                                              \l  %107 = phi float [ undef, %74 ], [ %101, %100 ]\l  %108 = phi i32 [ undef, %74 ], [ %102, %100 ]\l  %109 = phi i32 [ %71, %74 ], [ %102, %100 ]\l  %110 = phi float [ %72, %74 ], [ %101, %100 ]\l  %111 = phi i32 [ %59, %74 ], [ %103, %100 ]\l  br i1 %69, label %185, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4e7eea0:s0 -> Node0x4e7dba0;
	Node0x4e7eea0:s1 -> Node0x4e81190;
	Node0x4e81190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%112:\l112:                                              \l  %113 = phi i32 [ %182, %180 ], [ %109, %106 ]\l  %114 = phi float [ %181, %180 ], [ %110, %106 ]\l  %115 = phi i32 [ %183, %180 ], [ %111, %106 ]\l  %116 = add nsw i32 %75, %115\l  %117 = add nsw i32 %79, %116\l  %118 = icmp sgt i32 %116, -1\l  br i1 %118, label %119, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4e81190:s0 -> Node0x4e81720;
	Node0x4e81190:s1 -> Node0x4e817b0;
	Node0x4e81720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%119:\l119:                                              \l  %120 = icmp sle i32 %116, %17\l  %121 = select i1 %120, i1 %80, i1 false\l  %122 = select i1 %121, i1 %81, i1 false\l  br i1 %122, label %123, label %129\l|{<s0>T|<s1>F}}"];
	Node0x4e81720:s0 -> Node0x4e81ae0;
	Node0x4e81720:s1 -> Node0x4e817b0;
	Node0x4e81ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%123:\l123:                                              \l  %124 = add nsw i32 %113, 1\l  %125 = sext i32 %117 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %8, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %128 = fadd contract float %114, %127\l  br label %129\l}"];
	Node0x4e81ae0 -> Node0x4e817b0;
	Node0x4e817b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%129:\l129:                                              \l  %130 = phi float [ %128, %123 ], [ %114, %119 ], [ %114, %112 ]\l  %131 = phi i32 [ %124, %123 ], [ %113, %119 ], [ %113, %112 ]\l  %132 = add i32 %115, 1\l  %133 = add nsw i32 %75, %132\l  %134 = add nsw i32 %79, %133\l  %135 = icmp sgt i32 %133, -1\l  br i1 %135, label %136, label %146\l|{<s0>T|<s1>F}}"];
	Node0x4e817b0:s0 -> Node0x4e7d930;
	Node0x4e817b0:s1 -> Node0x4e82d30;
	Node0x4e7d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%136:\l136:                                              \l  %137 = icmp sle i32 %133, %17\l  %138 = select i1 %137, i1 %80, i1 false\l  %139 = select i1 %138, i1 %81, i1 false\l  br i1 %139, label %140, label %146\l|{<s0>T|<s1>F}}"];
	Node0x4e7d930:s0 -> Node0x4e83060;
	Node0x4e7d930:s1 -> Node0x4e82d30;
	Node0x4e83060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%140:\l140:                                              \l  %141 = add nsw i32 %131, 1\l  %142 = sext i32 %134 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %8, i64 %142\l  %144 = load float, float addrspace(1)* %143, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %145 = fadd contract float %130, %144\l  br label %146\l}"];
	Node0x4e83060 -> Node0x4e82d30;
	Node0x4e82d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%146:\l146:                                              \l  %147 = phi float [ %145, %140 ], [ %130, %136 ], [ %130, %129 ]\l  %148 = phi i32 [ %141, %140 ], [ %131, %136 ], [ %131, %129 ]\l  %149 = add i32 %115, 2\l  %150 = add nsw i32 %75, %149\l  %151 = add nsw i32 %79, %150\l  %152 = icmp sgt i32 %150, -1\l  br i1 %152, label %153, label %163\l|{<s0>T|<s1>F}}"];
	Node0x4e82d30:s0 -> Node0x4e83850;
	Node0x4e82d30:s1 -> Node0x4e838a0;
	Node0x4e83850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%153:\l153:                                              \l  %154 = icmp sle i32 %150, %17\l  %155 = select i1 %154, i1 %80, i1 false\l  %156 = select i1 %155, i1 %81, i1 false\l  br i1 %156, label %157, label %163\l|{<s0>T|<s1>F}}"];
	Node0x4e83850:s0 -> Node0x4e83bd0;
	Node0x4e83850:s1 -> Node0x4e838a0;
	Node0x4e83bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%157:\l157:                                              \l  %158 = add nsw i32 %148, 1\l  %159 = sext i32 %151 to i64\l  %160 = getelementptr inbounds float, float addrspace(1)* %8, i64 %159\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %162 = fadd contract float %147, %161\l  br label %163\l}"];
	Node0x4e83bd0 -> Node0x4e838a0;
	Node0x4e838a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%163:\l163:                                              \l  %164 = phi float [ %162, %157 ], [ %147, %153 ], [ %147, %146 ]\l  %165 = phi i32 [ %158, %157 ], [ %148, %153 ], [ %148, %146 ]\l  %166 = add i32 %115, 3\l  %167 = add nsw i32 %75, %166\l  %168 = add nsw i32 %79, %167\l  %169 = icmp sgt i32 %167, -1\l  br i1 %169, label %170, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4e838a0:s0 -> Node0x4e843f0;
	Node0x4e838a0:s1 -> Node0x4e81290;
	Node0x4e843f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%170:\l170:                                              \l  %171 = icmp sle i32 %167, %17\l  %172 = select i1 %171, i1 %80, i1 false\l  %173 = select i1 %172, i1 %81, i1 false\l  br i1 %173, label %174, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4e843f0:s0 -> Node0x4e846e0;
	Node0x4e843f0:s1 -> Node0x4e81290;
	Node0x4e846e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%174:\l174:                                              \l  %175 = add nsw i32 %165, 1\l  %176 = sext i32 %168 to i64\l  %177 = getelementptr inbounds float, float addrspace(1)* %8, i64 %176\l  %178 = load float, float addrspace(1)* %177, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %179 = fadd contract float %164, %178\l  br label %180\l}"];
	Node0x4e846e0 -> Node0x4e81290;
	Node0x4e81290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%180:\l180:                                              \l  %181 = phi float [ %179, %174 ], [ %164, %170 ], [ %164, %163 ]\l  %182 = phi i32 [ %175, %174 ], [ %165, %170 ], [ %165, %163 ]\l  %183 = add i32 %115, 4\l  %184 = icmp eq i32 %166, %64\l  br i1 %184, label %185, label %112, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4e81290:s0 -> Node0x4e7dba0;
	Node0x4e81290:s1 -> Node0x4e81190;
	Node0x4e7dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%185:\l185:                                              \l  %186 = phi float [ %72, %70 ], [ %107, %106 ], [ %181, %180 ]\l  %187 = phi i32 [ %71, %70 ], [ %108, %106 ], [ %182, %180 ]\l  %188 = add i32 %73, 1\l  %189 = icmp eq i32 %73, %21\l  br i1 %189, label %190, label %70, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4e7dba0:s0 -> Node0x4e7ca60;
	Node0x4e7dba0:s1 -> Node0x4e7daa0;
	Node0x4e7ca60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%190:\l190:                                              \l  %191 = phi float [ 0.000000e+00, %43 ], [ %186, %185 ]\l  %192 = phi i32 [ 0, %43 ], [ %187, %185 ]\l  %193 = icmp sgt i32 %192, 0\l  br i1 %193, label %194, label %201\l|{<s0>T|<s1>F}}"];
	Node0x4e7ca60:s0 -> Node0x4e854c0;
	Node0x4e7ca60:s1 -> Node0x4e7c660;
	Node0x4e854c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%194:\l194:                                              \l  %195 = sitofp i32 %192 to float\l  %196 = fdiv contract float %191, %195\l  %197 = sext i32 %41 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %9, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %200 = fadd contract float %196, %199\l  store float %200, float addrspace(1)* %198, align 4, !tbaa !16\l  br label %201\l}"];
	Node0x4e854c0 -> Node0x4e7c660;
	Node0x4e7c660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%201:\l201:                                              \l  ret void\l}"];
}
