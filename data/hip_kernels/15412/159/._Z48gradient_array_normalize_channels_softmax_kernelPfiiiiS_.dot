digraph "CFG for '_Z48gradient_array_normalize_channels_softmax_kernelPfiiiiS_' function" {
	label="CFG for '_Z48gradient_array_normalize_channels_softmax_kernelPfiiiiS_' function";

	Node0x45115c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = freeze i32 %15\l  %17 = srem i32 %16, %4\l  %18 = icmp slt i32 %16, %1\l  %19 = icmp sgt i32 %3, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %122\l|{<s0>T|<s1>F}}"];
	Node0x45115c0:s0 -> Node0x4513760;
	Node0x45115c0:s1 -> Node0x45137f0;
	Node0x4513760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = sub nsw i32 %16, %17\l  %23 = mul nsw i32 %22, %3\l  %24 = add i32 %23, %17\l  %25 = and i32 %3, 3\l  %26 = icmp ult i32 %3, 4\l  br i1 %26, label %98, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4513760:s0 -> Node0x4513c60;
	Node0x4513760:s1 -> Node0x4513cb0;
	Node0x4513cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i32 %3, -4\l  br label %29\l}"];
	Node0x4513cb0 -> Node0x4513eb0;
	Node0x4513eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %27 ], [ %95, %29 ]\l  %31 = phi i32 [ 0, %27 ], [ %96, %29 ]\l  %32 = mul nsw i32 %30, %4\l  %33 = add i32 %24, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = fsub contract float 1.000000e+00, %38\l  %40 = fmul contract float %38, %39\l  %41 = fmul contract float %36, %40\l  %42 = fcmp uno float %41, 0.000000e+00\l  %43 = tail call float @llvm.fabs.f32(float %41) #3\l  %44 = fcmp oeq float %43, 0x7FF0000000000000\l  %45 = select i1 %42, i1 true, i1 %44\l  %46 = select i1 %45, float 0.000000e+00, float %41\l  store float %46, float addrspace(1)* %35, align 4, !tbaa !7\l  %47 = or i32 %30, 1\l  %48 = mul nsw i32 %47, %4\l  %49 = add i32 %24, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = fsub contract float 1.000000e+00, %54\l  %56 = fmul contract float %54, %55\l  %57 = fmul contract float %52, %56\l  %58 = fcmp uno float %57, 0.000000e+00\l  %59 = tail call float @llvm.fabs.f32(float %57) #3\l  %60 = fcmp oeq float %59, 0x7FF0000000000000\l  %61 = select i1 %58, i1 true, i1 %60\l  %62 = select i1 %61, float 0.000000e+00, float %57\l  store float %62, float addrspace(1)* %51, align 4, !tbaa !7\l  %63 = or i32 %30, 2\l  %64 = mul nsw i32 %63, %4\l  %65 = add i32 %24, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %5, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = fsub contract float 1.000000e+00, %70\l  %72 = fmul contract float %70, %71\l  %73 = fmul contract float %68, %72\l  %74 = fcmp uno float %73, 0.000000e+00\l  %75 = tail call float @llvm.fabs.f32(float %73) #3\l  %76 = fcmp oeq float %75, 0x7FF0000000000000\l  %77 = select i1 %74, i1 true, i1 %76\l  %78 = select i1 %77, float 0.000000e+00, float %73\l  store float %78, float addrspace(1)* %67, align 4, !tbaa !7\l  %79 = or i32 %30, 3\l  %80 = mul nsw i32 %79, %4\l  %81 = add i32 %24, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %5, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = fsub contract float 1.000000e+00, %86\l  %88 = fmul contract float %86, %87\l  %89 = fmul contract float %84, %88\l  %90 = fcmp uno float %89, 0.000000e+00\l  %91 = tail call float @llvm.fabs.f32(float %89) #3\l  %92 = fcmp oeq float %91, 0x7FF0000000000000\l  %93 = select i1 %90, i1 true, i1 %92\l  %94 = select i1 %93, float 0.000000e+00, float %89\l  store float %94, float addrspace(1)* %83, align 4, !tbaa !7\l  %95 = add nuw nsw i32 %30, 4\l  %96 = add i32 %31, 4\l  %97 = icmp eq i32 %96, %28\l  br i1 %97, label %98, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4513eb0:s0 -> Node0x4513c60;
	Node0x4513eb0:s1 -> Node0x4513eb0;
	Node0x4513c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%98:\l98:                                               \l  %99 = phi i32 [ 0, %21 ], [ %95, %29 ]\l  %100 = icmp eq i32 %25, 0\l  br i1 %100, label %122, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4513c60:s0 -> Node0x45137f0;
	Node0x4513c60:s1 -> Node0x4518460;
	Node0x4518460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %119, %101 ], [ %99, %98 ]\l  %103 = phi i32 [ %120, %101 ], [ 0, %98 ]\l  %104 = mul nsw i32 %102, %4\l  %105 = add i32 %24, %104\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %5, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7\l  %111 = fsub contract float 1.000000e+00, %110\l  %112 = fmul contract float %110, %111\l  %113 = fmul contract float %108, %112\l  %114 = fcmp uno float %113, 0.000000e+00\l  %115 = tail call float @llvm.fabs.f32(float %113) #3\l  %116 = fcmp oeq float %115, 0x7FF0000000000000\l  %117 = select i1 %114, i1 true, i1 %116\l  %118 = select i1 %117, float 0.000000e+00, float %113\l  store float %118, float addrspace(1)* %107, align 4, !tbaa !7\l  %119 = add nuw nsw i32 %102, 1\l  %120 = add i32 %103, 1\l  %121 = icmp eq i32 %120, %25\l  br i1 %121, label %122, label %101, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4518460:s0 -> Node0x45137f0;
	Node0x4518460:s1 -> Node0x4518460;
	Node0x45137f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%122:\l122:                                              \l  ret void\l}"];
}
