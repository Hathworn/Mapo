digraph "CFG for '_Z25mult_inverse_array_kernelPKfPfif' function" {
	label="CFG for '_Z25mult_inverse_array_kernelPKfPfif' function";

	Node0x468f280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %193\l|{<s0>T|<s1>F}}"];
	Node0x468f280:s0 -> Node0x46911d0;
	Node0x468f280:s1 -> Node0x4691260;
	Node0x46911d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = fcmp contract olt float %18, 0.000000e+00\l  %20 = tail call float @llvm.fabs.f32(float %18)\l  %21 = tail call float @llvm.amdgcn.frexp.mant.f32(float %20)\l  %22 = fcmp olt float %21, 0x3FE5555560000000\l  %23 = zext i1 %22 to i32\l  %24 = tail call float @llvm.amdgcn.ldexp.f32(float %21, i32 %23)\l  %25 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %20)\l  %26 = sub nsw i32 %25, %23\l  %27 = fadd float %24, -1.000000e+00\l  %28 = fadd float %24, 1.000000e+00\l  %29 = fadd float %28, -1.000000e+00\l  %30 = fsub float %24, %29\l  %31 = tail call float @llvm.amdgcn.rcp.f32(float %28)\l  %32 = fmul float %27, %31\l  %33 = fmul float %28, %32\l  %34 = fneg float %33\l  %35 = tail call float @llvm.fma.f32(float %32, float %28, float %34)\l  %36 = tail call float @llvm.fma.f32(float %32, float %30, float %35)\l  %37 = fadd float %33, %36\l  %38 = fsub float %37, %33\l  %39 = fsub float %36, %38\l  %40 = fsub float %27, %37\l  %41 = fsub float %27, %40\l  %42 = fsub float %41, %37\l  %43 = fsub float %42, %39\l  %44 = fadd float %40, %43\l  %45 = fmul float %31, %44\l  %46 = fadd float %32, %45\l  %47 = fsub float %46, %32\l  %48 = fsub float %45, %47\l  %49 = fmul float %46, %46\l  %50 = fneg float %49\l  %51 = tail call float @llvm.fma.f32(float %46, float %46, float %50)\l  %52 = fmul float %48, 2.000000e+00\l  %53 = tail call float @llvm.fma.f32(float %46, float %52, float %51)\l  %54 = fadd float %49, %53\l  %55 = fsub float %54, %49\l  %56 = fsub float %53, %55\l  %57 = tail call float @llvm.fmuladd.f32(float %54, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %58 = tail call float @llvm.fmuladd.f32(float %54, float %57, float\l... 0x3FD999BDE0000000)\l  %59 = sitofp i32 %26 to float\l  %60 = fmul float %59, 0x3FE62E4300000000\l  %61 = fneg float %60\l  %62 = tail call float @llvm.fma.f32(float %59, float 0x3FE62E4300000000,\l... float %61)\l  %63 = tail call float @llvm.fma.f32(float %59, float 0xBE205C6100000000,\l... float %62)\l  %64 = fadd float %60, %63\l  %65 = fsub float %64, %60\l  %66 = fsub float %63, %65\l  %67 = tail call float @llvm.amdgcn.ldexp.f32(float %46, i32 1)\l  %68 = fmul float %46, %54\l  %69 = fneg float %68\l  %70 = tail call float @llvm.fma.f32(float %54, float %46, float %69)\l  %71 = tail call float @llvm.fma.f32(float %54, float %48, float %70)\l  %72 = tail call float @llvm.fma.f32(float %56, float %46, float %71)\l  %73 = fadd float %68, %72\l  %74 = fsub float %73, %68\l  %75 = fsub float %72, %74\l  %76 = fmul float %54, %58\l  %77 = fneg float %76\l  %78 = tail call float @llvm.fma.f32(float %54, float %58, float %77)\l  %79 = tail call float @llvm.fma.f32(float %56, float %58, float %78)\l  %80 = fadd float %76, %79\l  %81 = fsub float %80, %76\l  %82 = fsub float %79, %81\l  %83 = fadd float %80, 0x3FE5555540000000\l  %84 = fadd float %83, 0xBFE5555540000000\l  %85 = fsub float %80, %84\l  %86 = fadd float %82, 0x3E2E720200000000\l  %87 = fadd float %86, %85\l  %88 = fadd float %83, %87\l  %89 = fsub float %88, %83\l  %90 = fsub float %87, %89\l  %91 = fmul float %73, %88\l  %92 = fneg float %91\l  %93 = tail call float @llvm.fma.f32(float %73, float %88, float %92)\l  %94 = tail call float @llvm.fma.f32(float %73, float %90, float %93)\l  %95 = tail call float @llvm.fma.f32(float %75, float %88, float %94)\l  %96 = tail call float @llvm.amdgcn.ldexp.f32(float %48, i32 1)\l  %97 = fadd float %91, %95\l  %98 = fsub float %97, %91\l  %99 = fsub float %95, %98\l  %100 = fadd float %67, %97\l  %101 = fsub float %100, %67\l  %102 = fsub float %97, %101\l  %103 = fadd float %96, %99\l  %104 = fadd float %103, %102\l  %105 = fadd float %100, %104\l  %106 = fsub float %105, %100\l  %107 = fsub float %104, %106\l  %108 = fadd float %64, %105\l  %109 = fsub float %108, %64\l  %110 = fsub float %108, %109\l  %111 = fsub float %64, %110\l  %112 = fsub float %105, %109\l  %113 = fadd float %112, %111\l  %114 = fadd float %66, %107\l  %115 = fsub float %114, %66\l  %116 = fsub float %114, %115\l  %117 = fsub float %66, %116\l  %118 = fsub float %107, %115\l  %119 = fadd float %118, %117\l  %120 = fadd float %114, %113\l  %121 = fadd float %108, %120\l  %122 = fsub float %121, %108\l  %123 = fsub float %120, %122\l  %124 = fadd float %119, %123\l  %125 = fadd float %121, %124\l  %126 = fsub float %125, %121\l  %127 = fsub float %124, %126\l  %128 = fmul float %125, %3\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %3, float %125, float %129)\l  %131 = tail call float @llvm.fma.f32(float %3, float %127, float %130)\l  %132 = fadd float %128, %131\l  %133 = fsub float %132, %128\l  %134 = fsub float %131, %133\l  %135 = tail call float @llvm.fabs.f32(float %128) #3\l  %136 = fcmp oeq float %135, 0x7FF0000000000000\l  %137 = select i1 %136, float %128, float %132\l  %138 = tail call float @llvm.fabs.f32(float %137) #3\l  %139 = fcmp oeq float %138, 0x7FF0000000000000\l  %140 = select i1 %139, float 0.000000e+00, float %134\l  %141 = fcmp oeq float %137, 0x40562E4300000000\l  %142 = select i1 %141, float 0x3EE0000000000000, float 0.000000e+00\l  %143 = fsub float %137, %142\l  %144 = fadd float %142, %140\l  %145 = fmul float %143, 0x3FF7154760000000\l  %146 = tail call float @llvm.rint.f32(float %145)\l  %147 = fcmp ogt float %143, 0x40562E4300000000\l  %148 = fcmp olt float %143, 0xC059D1DA00000000\l  %149 = fneg float %145\l  %150 = tail call float @llvm.fma.f32(float %143, float 0x3FF7154760000000,\l... float %149)\l  %151 = tail call float @llvm.fma.f32(float %143, float 0x3E54AE0BE0000000,\l... float %150)\l  %152 = fsub float %145, %146\l  %153 = fadd float %151, %152\l  %154 = tail call float @llvm.exp2.f32(float %153)\l  %155 = fptosi float %146 to i32\l  %156 = tail call float @llvm.amdgcn.ldexp.f32(float %154, i32 %155)\l  %157 = select i1 %148, float 0.000000e+00, float %156\l  %158 = select i1 %147, float 0x7FF0000000000000, float %157\l  %159 = tail call float @llvm.fma.f32(float %158, float %144, float %158)\l  %160 = tail call float @llvm.fabs.f32(float %158) #3\l  %161 = fcmp oeq float %160, 0x7FF0000000000000\l  %162 = select i1 %161, float %158, float %159\l  %163 = tail call float @llvm.fabs.f32(float %3)\l  %164 = tail call float @llvm.fabs.f32(float %162)\l  %165 = fcmp oeq float %163, 0x7FF0000000000000\l  br i1 %165, label %166, label %175\l|{<s0>T|<s1>F}}"];
	Node0x46911d0:s0 -> Node0x469a470;
	Node0x46911d0:s1 -> Node0x469a4c0;
	Node0x469a470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%166:\l166:                                              \l  %167 = fcmp oeq float %20, 1.000000e+00\l  %168 = fadd float %20, -1.000000e+00\l  %169 = bitcast float %3 to i32\l  %170 = bitcast float %168 to i32\l  %171 = xor i32 %170, %169\l  %172 = icmp sgt i32 %171, -1\l  %173 = select i1 %172, float 0x7FF0000000000000, float 0.000000e+00\l  %174 = select i1 %167, float %20, float %173\l  br label %175\l}"];
	Node0x469a470 -> Node0x469a4c0;
	Node0x469a4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%175:\l175:                                              \l  %176 = phi float [ %164, %15 ], [ %174, %166 ]\l  %177 = fcmp oeq float %20, 0x7FF0000000000000\l  %178 = fcmp oeq float %18, 0.000000e+00\l  %179 = or i1 %178, %177\l  %180 = fcmp olt float %3, 0.000000e+00\l  %181 = xor i1 %180, %178\l  %182 = select i1 %181, float 0.000000e+00, float 0x7FF0000000000000\l  %183 = select i1 %179, float %182, float %176\l  %184 = fcmp uno float %20, %3\l  %185 = select i1 %184, float 0x7FF8000000000000, float %183\l  %186 = fcmp oeq float %20, 1.000000e+00\l  %187 = fcmp oeq float %3, 0.000000e+00\l  %188 = or i1 %187, %186\l  %189 = select i1 %188, float 1.000000e+00, float %185\l  %190 = fneg contract float %189\l  %191 = select contract i1 %19, float %190, float %189\l  %192 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  store float %191, float addrspace(1)* %192, align 4, !tbaa !7\l  br label %193\l}"];
	Node0x469a4c0 -> Node0x4691260;
	Node0x4691260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%193:\l193:                                              \l  ret void\l}"];
}
