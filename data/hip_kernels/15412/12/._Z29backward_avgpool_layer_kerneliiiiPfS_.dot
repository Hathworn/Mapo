digraph "CFG for '_Z29backward_avgpool_layer_kerneliiiiPfS_' function" {
	label="CFG for '_Z29backward_avgpool_layer_kerneliiiiPfS_' function";

	Node0x47ac0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !4\l  %13 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !13, !invariant.load\l... !14\l  %16 = zext i16 %15 to i32\l  %17 = udiv i32 %12, %16\l  %18 = mul i32 %17, %16\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %8\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %16\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %26 = add i32 %24, %25\l  %27 = freeze i32 %26\l  %28 = icmp slt i32 %27, %0\l  br i1 %28, label %29, label %94\l|{<s0>T|<s1>F}}"];
	Node0x47ac0e0:s0 -> Node0x47ae9a0;
	Node0x47ac0e0:s1 -> Node0x47aea30;
	Node0x47ae9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %2, %1\l  %31 = icmp sgt i32 %30, 0\l  br i1 %31, label %32, label %94\l|{<s0>T|<s1>F}}"];
	Node0x47ae9a0:s0 -> Node0x47aec90;
	Node0x47ae9a0:s1 -> Node0x47aea30;
	Node0x47aec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %27, %30\l  %34 = sext i32 %27 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %36 = sitofp i32 %30 to float\l  %37 = and i32 %30, 3\l  %38 = icmp ult i32 %30, 4\l  br i1 %38, label %78, label %39\l|{<s0>T|<s1>F}}"];
	Node0x47aec90:s0 -> Node0x47af230;
	Node0x47aec90:s1 -> Node0x47af280;
	Node0x47af280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%39:\l39:                                               \l  %40 = and i32 %30, -4\l  br label %41\l}"];
	Node0x47af280 -> Node0x47af480;
	Node0x47af480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi i32 [ 0, %39 ], [ %75, %41 ]\l  %43 = phi i32 [ 0, %39 ], [ %76, %41 ]\l  %44 = add nsw i32 %42, %33\l  %45 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %46 = fdiv contract float %45, %36\l  %47 = sext i32 %44 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16\l  %50 = fadd contract float %49, %46\l  store float %50, float addrspace(1)* %48, align 4, !tbaa !16\l  %51 = or i32 %42, 1\l  %52 = add nsw i32 %51, %33\l  %53 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %54 = fdiv contract float %53, %36\l  %55 = sext i32 %52 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %4, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !16\l  %58 = fadd contract float %57, %54\l  store float %58, float addrspace(1)* %56, align 4, !tbaa !16\l  %59 = or i32 %42, 2\l  %60 = add nsw i32 %59, %33\l  %61 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %62 = fdiv contract float %61, %36\l  %63 = sext i32 %60 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fadd contract float %65, %62\l  store float %66, float addrspace(1)* %64, align 4, !tbaa !16\l  %67 = or i32 %42, 3\l  %68 = add nsw i32 %67, %33\l  %69 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %70 = fdiv contract float %69, %36\l  %71 = sext i32 %68 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %4, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = fadd contract float %73, %70\l  store float %74, float addrspace(1)* %72, align 4, !tbaa !16\l  %75 = add nuw nsw i32 %42, 4\l  %76 = add i32 %43, 4\l  %77 = icmp eq i32 %76, %40\l  br i1 %77, label %78, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x47af480:s0 -> Node0x47af230;
	Node0x47af480:s1 -> Node0x47af480;
	Node0x47af230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%78:\l78:                                               \l  %79 = phi i32 [ 0, %32 ], [ %75, %41 ]\l  %80 = icmp eq i32 %37, 0\l  br i1 %80, label %94, label %81\l|{<s0>T|<s1>F}}"];
	Node0x47af230:s0 -> Node0x47aea30;
	Node0x47af230:s1 -> Node0x47b1800;
	Node0x47b1800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %91, %81 ], [ %79, %78 ]\l  %83 = phi i32 [ %92, %81 ], [ 0, %78 ]\l  %84 = add nsw i32 %82, %33\l  %85 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %86 = fdiv contract float %85, %36\l  %87 = sext i32 %84 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %4, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = fadd contract float %89, %86\l  store float %90, float addrspace(1)* %88, align 4, !tbaa !16\l  %91 = add nuw nsw i32 %82, 1\l  %92 = add i32 %83, 1\l  %93 = icmp eq i32 %92, %37\l  br i1 %93, label %94, label %81, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x47b1800:s0 -> Node0x47aea30;
	Node0x47b1800:s1 -> Node0x47b1800;
	Node0x47aea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%94:\l94:                                               \l  ret void\l}"];
}
