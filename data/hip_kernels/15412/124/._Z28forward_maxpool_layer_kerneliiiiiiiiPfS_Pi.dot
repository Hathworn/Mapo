digraph "CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiiPfS_Pi' function" {
	label="CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiiPfS_Pi' function";

	Node0x4fffa00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%11:\l  %12 = sub i32 %1, %6\l  %13 = add i32 %12, %7\l  %14 = sdiv i32 %13, %5\l  %15 = add nsw i32 %14, 1\l  %16 = sub i32 %2, %6\l  %17 = add i32 %16, %7\l  %18 = sdiv i32 %17, %4\l  %19 = add nsw i32 %18, 1\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %22, i64 12\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 4, !tbaa !4\l  %26 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 4, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = udiv i32 %25, %29\l  %31 = mul i32 %30, %29\l  %32 = icmp ugt i32 %25, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %21\l  %36 = add i32 %35, %20\l  %37 = mul i32 %36, %29\l  %38 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %39 = add i32 %37, %38\l  %40 = icmp slt i32 %39, %0\l  br i1 %40, label %41, label %195\l|{<s0>T|<s1>F}}"];
	Node0x4fffa00:s0 -> Node0x5003400;
	Node0x4fffa00:s1 -> Node0x5003490;
	Node0x5003400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%41:\l41:                                               \l  %42 = freeze i32 %39\l  %43 = freeze i32 %19\l  %44 = sdiv i32 %42, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %42, %45\l  %47 = freeze i32 %15\l  %48 = sdiv i32 %44, %47\l  %49 = mul i32 %48, %47\l  %50 = sub i32 %44, %49\l  %51 = freeze i32 %48\l  %52 = sdiv i32 %7, -2\l  %53 = mul nsw i32 %51, %15\l  %54 = add nsw i32 %53, %50\l  %55 = mul nsw i32 %54, %19\l  %56 = add nsw i32 %55, %46\l  %57 = icmp sgt i32 %6, 0\l  br i1 %57, label %58, label %187\l|{<s0>T|<s1>F}}"];
	Node0x5003400:s0 -> Node0x5003e80;
	Node0x5003400:s1 -> Node0x5003ed0;
	Node0x5003e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%58:\l58:                                               \l  %59 = mul nsw i32 %50, %5\l  %60 = add nsw i32 %59, %52\l  %61 = mul nsw i32 %46, %4\l  %62 = add nsw i32 %61, %52\l  %63 = mul nsw i32 %51, %1\l  %64 = and i32 %6, 3\l  %65 = icmp ult i32 %6, 4\l  %66 = and i32 %6, -4\l  %67 = icmp eq i32 %64, 0\l  br label %68\l}"];
	Node0x5003e80 -> Node0x50047b0;
	Node0x50047b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%68:\l68:                                               \l  %69 = phi float [ 0xFFF0000000000000, %58 ], [ %184, %182 ]\l  %70 = phi i32 [ -1, %58 ], [ %183, %182 ]\l  %71 = phi i32 [ 0, %58 ], [ %185, %182 ]\l  %72 = add nsw i32 %60, %71\l  %73 = add nsw i32 %72, %63\l  %74 = mul nsw i32 %73, %2\l  %75 = icmp sgt i32 %72, -1\l  %76 = icmp slt i32 %72, %1\l  br i1 %65, label %152, label %77\l|{<s0>T|<s1>F}}"];
	Node0x50047b0:s0 -> Node0x5005980;
	Node0x50047b0:s1 -> Node0x5005a10;
	Node0x5005a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%77:\l77:                                               \l  %78 = phi float [ %148, %144 ], [ %69, %68 ]\l  %79 = phi i32 [ %147, %144 ], [ %70, %68 ]\l  %80 = phi i32 [ %149, %144 ], [ 0, %68 ]\l  %81 = phi i32 [ %150, %144 ], [ 0, %68 ]\l  %82 = add nsw i32 %62, %80\l  %83 = add nsw i32 %82, %74\l  br i1 %75, label %84, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5005a10:s0 -> Node0x5006140;
	Node0x5005a10:s1 -> Node0x50061d0;
	Node0x5006140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%84:\l84:                                               \l  %85 = icmp sgt i32 %82, -1\l  %86 = select i1 %76, i1 %85, i1 false\l  %87 = icmp slt i32 %82, %2\l  %88 = select i1 %86, i1 %87, i1 false\l  br i1 %88, label %89, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5006140:s0 -> Node0x50065c0;
	Node0x5006140:s1 -> Node0x50061d0;
	Node0x50065c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%89:\l89:                                               \l  %90 = sext i32 %83 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %8, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %93\l}"];
	Node0x50065c0 -> Node0x50061d0;
	Node0x50061d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%93:\l93:                                               \l  %94 = phi contract float [ %92, %89 ], [ 0xFFF0000000000000, %84 ], [\l... 0xFFF0000000000000, %77 ]\l  %95 = fcmp contract ogt float %94, %78\l  %96 = select i1 %95, i32 %83, i32 %79\l  %97 = select contract i1 %95, float %94, float %78\l  %98 = or i32 %80, 1\l  %99 = add nsw i32 %62, %98\l  %100 = add nsw i32 %99, %74\l  br i1 %75, label %101, label %110\l|{<s0>T|<s1>F}}"];
	Node0x50061d0:s0 -> Node0x50074e0;
	Node0x50061d0:s1 -> Node0x5007530;
	Node0x50074e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%101:\l101:                                              \l  %102 = icmp sgt i32 %99, -1\l  %103 = select i1 %76, i1 %102, i1 false\l  %104 = icmp slt i32 %99, %2\l  %105 = select i1 %103, i1 %104, i1 false\l  br i1 %105, label %106, label %110\l|{<s0>T|<s1>F}}"];
	Node0x50074e0:s0 -> Node0x50078f0;
	Node0x50074e0:s1 -> Node0x5007530;
	Node0x50078f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%106:\l106:                                              \l  %107 = sext i32 %100 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %8, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %110\l}"];
	Node0x50078f0 -> Node0x5007530;
	Node0x5007530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%110:\l110:                                              \l  %111 = phi contract float [ %109, %106 ], [ 0xFFF0000000000000, %101 ], [\l... 0xFFF0000000000000, %93 ]\l  %112 = fcmp contract ogt float %111, %97\l  %113 = select i1 %112, i32 %100, i32 %96\l  %114 = select contract i1 %112, float %111, float %97\l  %115 = or i32 %80, 2\l  %116 = add nsw i32 %62, %115\l  %117 = add nsw i32 %116, %74\l  br i1 %75, label %118, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5007530:s0 -> Node0x5008660;
	Node0x5007530:s1 -> Node0x50086b0;
	Node0x5008660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%118:\l118:                                              \l  %119 = icmp sgt i32 %116, -1\l  %120 = select i1 %76, i1 %119, i1 false\l  %121 = icmp slt i32 %116, %2\l  %122 = select i1 %120, i1 %121, i1 false\l  br i1 %122, label %123, label %127\l|{<s0>T|<s1>F}}"];
	Node0x5008660:s0 -> Node0x5008a70;
	Node0x5008660:s1 -> Node0x50086b0;
	Node0x5008a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%123:\l123:                                              \l  %124 = sext i32 %117 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %8, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %127\l}"];
	Node0x5008a70 -> Node0x50086b0;
	Node0x50086b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%127:\l127:                                              \l  %128 = phi contract float [ %126, %123 ], [ 0xFFF0000000000000, %118 ], [\l... 0xFFF0000000000000, %110 ]\l  %129 = fcmp contract ogt float %128, %114\l  %130 = select i1 %129, i32 %117, i32 %113\l  %131 = select contract i1 %129, float %128, float %114\l  %132 = or i32 %80, 3\l  %133 = add nsw i32 %62, %132\l  %134 = add nsw i32 %133, %74\l  br i1 %75, label %135, label %144\l|{<s0>T|<s1>F}}"];
	Node0x50086b0:s0 -> Node0x5004740;
	Node0x50086b0:s1 -> Node0x5005b80;
	Node0x5004740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%135:\l135:                                              \l  %136 = icmp sgt i32 %133, -1\l  %137 = select i1 %76, i1 %136, i1 false\l  %138 = icmp slt i32 %133, %2\l  %139 = select i1 %137, i1 %138, i1 false\l  br i1 %139, label %140, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5004740:s0 -> Node0x50099a0;
	Node0x5004740:s1 -> Node0x5005b80;
	Node0x50099a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%140:\l140:                                              \l  %141 = sext i32 %134 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %8, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %144\l}"];
	Node0x50099a0 -> Node0x5005b80;
	Node0x5005b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%144:\l144:                                              \l  %145 = phi contract float [ %143, %140 ], [ 0xFFF0000000000000, %135 ], [\l... 0xFFF0000000000000, %127 ]\l  %146 = fcmp contract ogt float %145, %131\l  %147 = select i1 %146, i32 %134, i32 %130\l  %148 = select contract i1 %146, float %145, float %131\l  %149 = add nuw nsw i32 %80, 4\l  %150 = add i32 %81, 4\l  %151 = icmp eq i32 %150, %66\l  br i1 %151, label %152, label %77, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5005b80:s0 -> Node0x5005980;
	Node0x5005b80:s1 -> Node0x5005a10;
	Node0x5005980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%152:\l152:                                              \l  %153 = phi i32 [ undef, %68 ], [ %147, %144 ]\l  %154 = phi float [ undef, %68 ], [ %148, %144 ]\l  %155 = phi float [ %69, %68 ], [ %148, %144 ]\l  %156 = phi i32 [ %70, %68 ], [ %147, %144 ]\l  %157 = phi i32 [ 0, %68 ], [ %149, %144 ]\l  br i1 %67, label %182, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5005980:s0 -> Node0x5005300;
	Node0x5005980:s1 -> Node0x500a960;
	Node0x500a960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi float [ %178, %174 ], [ %155, %152 ]\l  %160 = phi i32 [ %177, %174 ], [ %156, %152 ]\l  %161 = phi i32 [ %179, %174 ], [ %157, %152 ]\l  %162 = phi i32 [ %180, %174 ], [ 0, %152 ]\l  %163 = add nsw i32 %62, %161\l  %164 = add nsw i32 %163, %74\l  br i1 %75, label %165, label %174\l|{<s0>T|<s1>F}}"];
	Node0x500a960:s0 -> Node0x500af50;
	Node0x500a960:s1 -> Node0x500aa60;
	Node0x500af50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%165:\l165:                                              \l  %166 = icmp sgt i32 %163, -1\l  %167 = select i1 %76, i1 %166, i1 false\l  %168 = icmp slt i32 %163, %2\l  %169 = select i1 %167, i1 %168, i1 false\l  br i1 %169, label %170, label %174\l|{<s0>T|<s1>F}}"];
	Node0x500af50:s0 -> Node0x500b310;
	Node0x500af50:s1 -> Node0x500aa60;
	Node0x500b310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%170:\l170:                                              \l  %171 = sext i32 %164 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %8, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %174\l}"];
	Node0x500b310 -> Node0x500aa60;
	Node0x500aa60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%174:\l174:                                              \l  %175 = phi contract float [ %173, %170 ], [ 0xFFF0000000000000, %165 ], [\l... 0xFFF0000000000000, %158 ]\l  %176 = fcmp contract ogt float %175, %159\l  %177 = select i1 %176, i32 %164, i32 %160\l  %178 = select contract i1 %176, float %175, float %159\l  %179 = add nuw nsw i32 %161, 1\l  %180 = add i32 %162, 1\l  %181 = icmp eq i32 %180, %64\l  br i1 %181, label %182, label %158, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x500aa60:s0 -> Node0x5005300;
	Node0x500aa60:s1 -> Node0x500a960;
	Node0x5005300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%182:\l182:                                              \l  %183 = phi i32 [ %153, %152 ], [ %177, %174 ]\l  %184 = phi float [ %154, %152 ], [ %178, %174 ]\l  %185 = add nuw nsw i32 %71, 1\l  %186 = icmp eq i32 %185, %6\l  br i1 %186, label %187, label %68, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5005300:s0 -> Node0x5003ed0;
	Node0x5005300:s1 -> Node0x50047b0;
	Node0x5003ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%187:\l187:                                              \l  %188 = phi i32 [ -1, %41 ], [ %183, %182 ]\l  %189 = phi float [ 0xFFF0000000000000, %41 ], [ %184, %182 ]\l  %190 = sext i32 %56 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %9, i64 %190\l  store float %189, float addrspace(1)* %191, align 4, !tbaa !16\l  %192 = icmp eq i32 addrspace(1)* %10, addrspacecast (i32* null to i32\l... addrspace(1)*)\l  br i1 %192, label %195, label %193\l|{<s0>T|<s1>F}}"];
	Node0x5003ed0:s0 -> Node0x5003490;
	Node0x5003ed0:s1 -> Node0x500c930;
	Node0x500c930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%193:\l193:                                              \l  %194 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %190\l  store i32 %188, i32 addrspace(1)* %194, align 4, !tbaa !25\l  br label %195\l}"];
	Node0x500c930 -> Node0x5003490;
	Node0x5003490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%195:\l195:                                              \l  ret void\l}"];
}
