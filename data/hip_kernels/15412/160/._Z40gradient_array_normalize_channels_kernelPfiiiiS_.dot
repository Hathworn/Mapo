digraph "CFG for '_Z40gradient_array_normalize_channels_kernelPfiiiiS_' function" {
	label="CFG for '_Z40gradient_array_normalize_channels_kernelPfiiiiS_' function";

	Node0x463d2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = freeze i32 %15\l  %17 = srem i32 %16, %4\l  %18 = icmp slt i32 %16, %1\l  %19 = icmp sgt i32 %3, 0\l  %20 = select i1 %18, i1 %19, i1 false\l  br i1 %20, label %21, label %102\l|{<s0>T|<s1>F}}"];
	Node0x463d2b0:s0 -> Node0x463f450;
	Node0x463d2b0:s1 -> Node0x463f4e0;
	Node0x463f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = sub nsw i32 %16, %17\l  %23 = mul nsw i32 %22, %3\l  %24 = add i32 %23, %17\l  %25 = and i32 %3, 3\l  %26 = icmp ult i32 %3, 4\l  br i1 %26, label %82, label %27\l|{<s0>T|<s1>F}}"];
	Node0x463f450:s0 -> Node0x463f950;
	Node0x463f450:s1 -> Node0x463f9a0;
	Node0x463f9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i32 %3, -4\l  br label %29\l}"];
	Node0x463f9a0 -> Node0x463fba0;
	Node0x463fba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %27 ], [ %79, %78 ]\l  %31 = phi i32 [ 0, %27 ], [ %80, %78 ]\l  %32 = mul nsw i32 %30, %4\l  %33 = add i32 %24, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = fcmp contract ogt float %36, 0.000000e+00\l  br i1 %37, label %38, label %42\l|{<s0>T|<s1>F}}"];
	Node0x463fba0:s0 -> Node0x4640ef0;
	Node0x463fba0:s1 -> Node0x4640f80;
	Node0x4640ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %41 = fmul contract float %36, %40\l  store float %41, float addrspace(1)* %39, align 4, !tbaa !7\l  br label %42\l}"];
	Node0x4640ef0 -> Node0x4640f80;
	Node0x4640f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = or i32 %30, 1\l  %44 = mul nsw i32 %43, %4\l  %45 = add i32 %24, %44\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %49 = fcmp contract ogt float %48, 0.000000e+00\l  br i1 %49, label %50, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4640f80:s0 -> Node0x4641d30;
	Node0x4640f80:s1 -> Node0x4641d80;
	Node0x4641d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds float, float addrspace(1)* %5, i64 %46\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fmul contract float %48, %52\l  store float %53, float addrspace(1)* %51, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x4641d30 -> Node0x4641d80;
	Node0x4641d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = or i32 %30, 2\l  %56 = mul nsw i32 %55, %4\l  %57 = add i32 %24, %56\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fcmp contract ogt float %60, 0.000000e+00\l  br i1 %61, label %62, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4641d80:s0 -> Node0x4642540;
	Node0x4641d80:s1 -> Node0x4642590;
	Node0x4642540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fmul contract float %60, %64\l  store float %65, float addrspace(1)* %63, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x4642540 -> Node0x4642590;
	Node0x4642590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = or i32 %30, 3\l  %68 = mul nsw i32 %67, %4\l  %69 = add i32 %24, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = fcmp contract ogt float %72, 0.000000e+00\l  br i1 %73, label %74, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4642590:s0 -> Node0x4642f00;
	Node0x4642590:s1 -> Node0x463fc90;
	Node0x4642f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%74:\l74:                                               \l  %75 = getelementptr inbounds float, float addrspace(1)* %5, i64 %70\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %72, %76\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !7\l  br label %78\l}"];
	Node0x4642f00 -> Node0x463fc90;
	Node0x463fc90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%78:\l78:                                               \l  %79 = add nuw nsw i32 %30, 4\l  %80 = add i32 %31, 4\l  %81 = icmp eq i32 %80, %28\l  br i1 %81, label %82, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x463fc90:s0 -> Node0x463f950;
	Node0x463fc90:s1 -> Node0x463fba0;
	Node0x463f950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%82:\l82:                                               \l  %83 = phi i32 [ 0, %21 ], [ %79, %78 ]\l  %84 = icmp eq i32 %25, 0\l  br i1 %84, label %102, label %85\l|{<s0>T|<s1>F}}"];
	Node0x463f950:s0 -> Node0x463f4e0;
	Node0x463f950:s1 -> Node0x46436c0;
	Node0x46436c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi i32 [ %99, %98 ], [ %83, %82 ]\l  %87 = phi i32 [ %100, %98 ], [ 0, %82 ]\l  %88 = mul nsw i32 %86, %4\l  %89 = add i32 %24, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fcmp contract ogt float %92, 0.000000e+00\l  br i1 %93, label %94, label %98\l|{<s0>T|<s1>F}}"];
	Node0x46436c0:s0 -> Node0x4643ca0;
	Node0x46436c0:s1 -> Node0x46437c0;
	Node0x4643ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%94:\l94:                                               \l  %95 = getelementptr inbounds float, float addrspace(1)* %5, i64 %90\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fmul contract float %92, %96\l  store float %97, float addrspace(1)* %95, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x4643ca0 -> Node0x46437c0;
	Node0x46437c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = add nuw nsw i32 %86, 1\l  %100 = add i32 %87, 1\l  %101 = icmp eq i32 %100, %25\l  br i1 %101, label %102, label %85, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x46437c0:s0 -> Node0x463f4e0;
	Node0x46437c0:s1 -> Node0x46436c0;
	Node0x463f4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%102:\l102:                                              \l  ret void\l}"];
}
