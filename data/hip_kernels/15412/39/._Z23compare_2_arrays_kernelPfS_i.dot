digraph "CFG for '_Z23compare_2_arrays_kernelPfS_i' function" {
	label="CFG for '_Z23compare_2_arrays_kernelPfS_i' function";

	Node0x57761c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %505\l|{<s0>T|<s1>F}}"];
	Node0x57761c0:s0 -> Node0x5778100;
	Node0x57761c0:s1 -> Node0x5778190;
	Node0x5778100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = getelementptr inbounds float, float addrspace(1)* %1, i64 %15\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = fsub contract float %17, %19\l  %21 = tail call float @llvm.fabs.f32(float %20)\l  %22 = fmul contract float %21, 1.000000e+02\l  %23 = tail call float @llvm.fabs.f32(float %17)\l  %24 = fdiv contract float %22, %23\l  %25 = fcmp contract ogt float %24, 1.000000e+01\l  br i1 %25, label %26, label %505\l|{<s0>T|<s1>F}}"];
	Node0x5778100:s0 -> Node0x577a3c0;
	Node0x5778100:s1 -> Node0x5778190;
	Node0x577a3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%26:\l26:                                               \l  %27 = fpext float %17 to double\l  %28 = fpext float %19 to double\l  %29 = fpext float %24 to double\l  %30 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %31 = getelementptr inbounds i8, i8 addrspace(4)* %30, i64 24\l  %32 = bitcast i8 addrspace(4)* %31 to i64 addrspace(4)*\l  %33 = load i64, i64 addrspace(4)* %32, align 8, !tbaa !11\l  %34 = inttoptr i64 %33 to i8 addrspace(1)*\l  %35 = addrspacecast i8 addrspace(1)* %34 to i8*\l  %36 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %37 = extractelement \<2 x i64\> %36, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([44 x i8], [44 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %38, label %42\l|{<s0>T|<s1>F}}"];
	Node0x577a3c0:s0 -> Node0x577b540;
	Node0x577a3c0:s1 -> Node0x577bf30;
	Node0x577b540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%38:\l38:                                               \l  %39 = and i64 %37, -225\l  %40 = or i64 %39, 32\l  %41 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %40, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %483\l}"];
	Node0x577b540 -> Node0x577c1f0;
	Node0x577bf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%42:\l42:                                               \l  %43 = and i64 %37, 2\l  %44 = and i64 %37, -3\l  %45 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %44, i64 0\l  br label %46\l}"];
	Node0x577bf30 -> Node0x577cd90;
	Node0x577cd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%46:\l46:                                               \l  %47 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([44 x i8], [44 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([44 x i8], [44 x i8] addrspace(4)*\l... @.str, i64 0, i64 43) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([44 x i8]* addrspacecast ([44 x i8] addrspace(4)* @.str to [44 x i8]*) to\l... i64)), i64 1))), %42 ], [ %480, %472 ]\l  %48 = phi i8 addrspace(4)* [ getelementptr inbounds ([44 x i8], [44 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %42 ], [ %481, %472 ]\l  %49 = phi \<2 x i64\> [ %45, %42 ], [ %479, %472 ]\l  %50 = icmp ugt i64 %47, 56\l  %51 = extractelement \<2 x i64\> %49, i64 0\l  %52 = or i64 %51, %43\l  %53 = insertelement \<2 x i64\> poison, i64 %52, i64 0\l  %54 = select i1 %50, \<2 x i64\> %49, \<2 x i64\> %53\l  %55 = tail call i64 @llvm.umin.i64(i64 %47, i64 56)\l  %56 = trunc i64 %55 to i32\l  %57 = extractelement \<2 x i64\> %54, i64 0\l  %58 = icmp ugt i32 %56, 7\l  br i1 %58, label %61, label %59\l|{<s0>T|<s1>F}}"];
	Node0x577cd90:s0 -> Node0x577dd00;
	Node0x577cd90:s1 -> Node0x577dd90;
	Node0x577dd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%59:\l59:                                               \l  %60 = icmp eq i32 %56, 0\l  br i1 %60, label %114, label %101\l|{<s0>T|<s1>F}}"];
	Node0x577dd90:s0 -> Node0x577df90;
	Node0x577dd90:s1 -> Node0x577dfe0;
	Node0x577dd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%61:\l61:                                               \l  %62 = load i8, i8 addrspace(4)* %48, align 1, !tbaa !15\l  %63 = zext i8 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 1\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !15\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw nsw i64 %66, 8\l  %68 = or i64 %67, %63\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 2\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !15\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 16\l  %73 = or i64 %68, %72\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 3\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !15\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw nsw i64 %76, 24\l  %78 = or i64 %73, %77\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 4\l  %80 = load i8, i8 addrspace(4)* %79, align 1, !tbaa !15\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 32\l  %83 = or i64 %78, %82\l  %84 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 5\l  %85 = load i8, i8 addrspace(4)* %84, align 1, !tbaa !15\l  %86 = zext i8 %85 to i64\l  %87 = shl nuw nsw i64 %86, 40\l  %88 = or i64 %83, %87\l  %89 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 6\l  %90 = load i8, i8 addrspace(4)* %89, align 1, !tbaa !15\l  %91 = zext i8 %90 to i64\l  %92 = shl nuw nsw i64 %91, 48\l  %93 = or i64 %88, %92\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 7\l  %95 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !15\l  %96 = zext i8 %95 to i64\l  %97 = shl nuw i64 %96, 56\l  %98 = or i64 %93, %97\l  %99 = add nsw i32 %56, -8\l  %100 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 8\l  br label %114\l}"];
	Node0x577dd00 -> Node0x577df90;
	Node0x577dfe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ %112, %101 ], [ 0, %59 ]\l  %103 = phi i64 [ %111, %101 ], [ 0, %59 ]\l  %104 = zext i32 %102 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 %104\l  %106 = load i8, i8 addrspace(4)* %105, align 1, !tbaa !15\l  %107 = zext i8 %106 to i64\l  %108 = shl i32 %102, 3\l  %109 = zext i32 %108 to i64\l  %110 = shl nuw i64 %107, %109\l  %111 = or i64 %110, %103\l  %112 = add nuw nsw i32 %102, 1\l  %113 = icmp eq i32 %112, %56\l  br i1 %113, label %114, label %101, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x577dfe0:s0 -> Node0x577df90;
	Node0x577dfe0:s1 -> Node0x577dfe0;
	Node0x577df90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%114:\l114:                                              \l  %115 = phi i8 addrspace(4)* [ %100, %61 ], [ %48, %59 ], [ %48, %101 ]\l  %116 = phi i32 [ %99, %61 ], [ 0, %59 ], [ 0, %101 ]\l  %117 = phi i64 [ %98, %61 ], [ 0, %59 ], [ %111, %101 ]\l  %118 = icmp ugt i32 %116, 7\l  br i1 %118, label %121, label %119\l|{<s0>T|<s1>F}}"];
	Node0x577df90:s0 -> Node0x5780c90;
	Node0x577df90:s1 -> Node0x5780ce0;
	Node0x5780ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%119:\l119:                                              \l  %120 = icmp eq i32 %116, 0\l  br i1 %120, label %174, label %161\l|{<s0>T|<s1>F}}"];
	Node0x5780ce0:s0 -> Node0x5780eb0;
	Node0x5780ce0:s1 -> Node0x5780f00;
	Node0x5780c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%121:\l121:                                              \l  %122 = load i8, i8 addrspace(4)* %115, align 1, !tbaa !15\l  %123 = zext i8 %122 to i64\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 1\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !15\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw nsw i64 %126, 8\l  %128 = or i64 %127, %123\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 2\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !15\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 16\l  %133 = or i64 %128, %132\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 3\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !15\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 24\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 4\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !15\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 32\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 5\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !15\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw nsw i64 %146, 40\l  %148 = or i64 %143, %147\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 6\l  %150 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !15\l  %151 = zext i8 %150 to i64\l  %152 = shl nuw nsw i64 %151, 48\l  %153 = or i64 %148, %152\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 7\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !15\l  %156 = zext i8 %155 to i64\l  %157 = shl nuw i64 %156, 56\l  %158 = or i64 %153, %157\l  %159 = add nsw i32 %116, -8\l  %160 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 8\l  br label %174\l}"];
	Node0x5780c90 -> Node0x5780eb0;
	Node0x5780f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%161:\l161:                                              \l  %162 = phi i32 [ %172, %161 ], [ 0, %119 ]\l  %163 = phi i64 [ %171, %161 ], [ 0, %119 ]\l  %164 = zext i32 %162 to i64\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %115, i64 %164\l  %166 = load i8, i8 addrspace(4)* %165, align 1, !tbaa !15\l  %167 = zext i8 %166 to i64\l  %168 = shl i32 %162, 3\l  %169 = zext i32 %168 to i64\l  %170 = shl nuw i64 %167, %169\l  %171 = or i64 %170, %163\l  %172 = add nuw nsw i32 %162, 1\l  %173 = icmp eq i32 %172, %116\l  br i1 %173, label %174, label %161\l|{<s0>T|<s1>F}}"];
	Node0x5780f00:s0 -> Node0x5780eb0;
	Node0x5780f00:s1 -> Node0x5780f00;
	Node0x5780eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%174:\l174:                                              \l  %175 = phi i8 addrspace(4)* [ %160, %121 ], [ %115, %119 ], [ %115, %161 ]\l  %176 = phi i32 [ %159, %121 ], [ 0, %119 ], [ 0, %161 ]\l  %177 = phi i64 [ %158, %121 ], [ 0, %119 ], [ %171, %161 ]\l  %178 = icmp ugt i32 %176, 7\l  br i1 %178, label %181, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5780eb0:s0 -> Node0x57833e0;
	Node0x5780eb0:s1 -> Node0x5783430;
	Node0x5783430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%179:\l179:                                              \l  %180 = icmp eq i32 %176, 0\l  br i1 %180, label %234, label %221\l|{<s0>T|<s1>F}}"];
	Node0x5783430:s0 -> Node0x57835c0;
	Node0x5783430:s1 -> Node0x5783610;
	Node0x57833e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%181:\l181:                                              \l  %182 = load i8, i8 addrspace(4)* %175, align 1, !tbaa !15\l  %183 = zext i8 %182 to i64\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 1\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !15\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw nsw i64 %186, 8\l  %188 = or i64 %187, %183\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 2\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !15\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 16\l  %193 = or i64 %188, %192\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 3\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !15\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 24\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 4\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !15\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 32\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 5\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !15\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw nsw i64 %206, 40\l  %208 = or i64 %203, %207\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 6\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !15\l  %211 = zext i8 %210 to i64\l  %212 = shl nuw nsw i64 %211, 48\l  %213 = or i64 %208, %212\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 7\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !15\l  %216 = zext i8 %215 to i64\l  %217 = shl nuw i64 %216, 56\l  %218 = or i64 %213, %217\l  %219 = add nsw i32 %176, -8\l  %220 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 8\l  br label %234\l}"];
	Node0x57833e0 -> Node0x57835c0;
	Node0x5783610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%221:\l221:                                              \l  %222 = phi i32 [ %232, %221 ], [ 0, %179 ]\l  %223 = phi i64 [ %231, %221 ], [ 0, %179 ]\l  %224 = zext i32 %222 to i64\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %175, i64 %224\l  %226 = load i8, i8 addrspace(4)* %225, align 1, !tbaa !15\l  %227 = zext i8 %226 to i64\l  %228 = shl i32 %222, 3\l  %229 = zext i32 %228 to i64\l  %230 = shl nuw i64 %227, %229\l  %231 = or i64 %230, %223\l  %232 = add nuw nsw i32 %222, 1\l  %233 = icmp eq i32 %232, %176\l  br i1 %233, label %234, label %221\l|{<s0>T|<s1>F}}"];
	Node0x5783610:s0 -> Node0x57835c0;
	Node0x5783610:s1 -> Node0x5783610;
	Node0x57835c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%234:\l234:                                              \l  %235 = phi i8 addrspace(4)* [ %220, %181 ], [ %175, %179 ], [ %175, %221 ]\l  %236 = phi i32 [ %219, %181 ], [ 0, %179 ], [ 0, %221 ]\l  %237 = phi i64 [ %218, %181 ], [ 0, %179 ], [ %231, %221 ]\l  %238 = icmp ugt i32 %236, 7\l  br i1 %238, label %241, label %239\l|{<s0>T|<s1>F}}"];
	Node0x57835c0:s0 -> Node0x5785660;
	Node0x57835c0:s1 -> Node0x57856b0;
	Node0x57856b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%239:\l239:                                              \l  %240 = icmp eq i32 %236, 0\l  br i1 %240, label %294, label %281\l|{<s0>T|<s1>F}}"];
	Node0x57856b0:s0 -> Node0x5785840;
	Node0x57856b0:s1 -> Node0x5785890;
	Node0x5785660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%241:\l241:                                              \l  %242 = load i8, i8 addrspace(4)* %235, align 1, !tbaa !15\l  %243 = zext i8 %242 to i64\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 1\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !15\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw nsw i64 %246, 8\l  %248 = or i64 %247, %243\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 2\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !15\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 16\l  %253 = or i64 %248, %252\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 3\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !15\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 24\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 4\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !15\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 32\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 5\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !15\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw nsw i64 %266, 40\l  %268 = or i64 %263, %267\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 6\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !15\l  %271 = zext i8 %270 to i64\l  %272 = shl nuw nsw i64 %271, 48\l  %273 = or i64 %268, %272\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 7\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !15\l  %276 = zext i8 %275 to i64\l  %277 = shl nuw i64 %276, 56\l  %278 = or i64 %273, %277\l  %279 = add nsw i32 %236, -8\l  %280 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 8\l  br label %294\l}"];
	Node0x5785660 -> Node0x5785840;
	Node0x5785890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%281:\l281:                                              \l  %282 = phi i32 [ %292, %281 ], [ 0, %239 ]\l  %283 = phi i64 [ %291, %281 ], [ 0, %239 ]\l  %284 = zext i32 %282 to i64\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %235, i64 %284\l  %286 = load i8, i8 addrspace(4)* %285, align 1, !tbaa !15\l  %287 = zext i8 %286 to i64\l  %288 = shl i32 %282, 3\l  %289 = zext i32 %288 to i64\l  %290 = shl nuw i64 %287, %289\l  %291 = or i64 %290, %283\l  %292 = add nuw nsw i32 %282, 1\l  %293 = icmp eq i32 %292, %236\l  br i1 %293, label %294, label %281\l|{<s0>T|<s1>F}}"];
	Node0x5785890:s0 -> Node0x5785840;
	Node0x5785890:s1 -> Node0x5785890;
	Node0x5785840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%294:\l294:                                              \l  %295 = phi i8 addrspace(4)* [ %280, %241 ], [ %235, %239 ], [ %235, %281 ]\l  %296 = phi i32 [ %279, %241 ], [ 0, %239 ], [ 0, %281 ]\l  %297 = phi i64 [ %278, %241 ], [ 0, %239 ], [ %291, %281 ]\l  %298 = icmp ugt i32 %296, 7\l  br i1 %298, label %301, label %299\l|{<s0>T|<s1>F}}"];
	Node0x5785840:s0 -> Node0x57880e0;
	Node0x5785840:s1 -> Node0x5788130;
	Node0x5788130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%299:\l299:                                              \l  %300 = icmp eq i32 %296, 0\l  br i1 %300, label %354, label %341\l|{<s0>T|<s1>F}}"];
	Node0x5788130:s0 -> Node0x57882c0;
	Node0x5788130:s1 -> Node0x5788310;
	Node0x57880e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%301:\l301:                                              \l  %302 = load i8, i8 addrspace(4)* %295, align 1, !tbaa !15\l  %303 = zext i8 %302 to i64\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 1\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !15\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 8\l  %308 = or i64 %307, %303\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 2\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !15\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 16\l  %313 = or i64 %308, %312\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 3\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !15\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 24\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 4\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !15\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 32\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 5\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !15\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw nsw i64 %326, 40\l  %328 = or i64 %323, %327\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 6\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !15\l  %331 = zext i8 %330 to i64\l  %332 = shl nuw nsw i64 %331, 48\l  %333 = or i64 %328, %332\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 7\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !15\l  %336 = zext i8 %335 to i64\l  %337 = shl nuw i64 %336, 56\l  %338 = or i64 %333, %337\l  %339 = add nsw i32 %296, -8\l  %340 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 8\l  br label %354\l}"];
	Node0x57880e0 -> Node0x57882c0;
	Node0x5788310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%341:\l341:                                              \l  %342 = phi i32 [ %352, %341 ], [ 0, %299 ]\l  %343 = phi i64 [ %351, %341 ], [ 0, %299 ]\l  %344 = zext i32 %342 to i64\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %295, i64 %344\l  %346 = load i8, i8 addrspace(4)* %345, align 1, !tbaa !15\l  %347 = zext i8 %346 to i64\l  %348 = shl i32 %342, 3\l  %349 = zext i32 %348 to i64\l  %350 = shl nuw i64 %347, %349\l  %351 = or i64 %350, %343\l  %352 = add nuw nsw i32 %342, 1\l  %353 = icmp eq i32 %352, %296\l  br i1 %353, label %354, label %341\l|{<s0>T|<s1>F}}"];
	Node0x5788310:s0 -> Node0x57882c0;
	Node0x5788310:s1 -> Node0x5788310;
	Node0x57882c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%354:\l354:                                              \l  %355 = phi i8 addrspace(4)* [ %340, %301 ], [ %295, %299 ], [ %295, %341 ]\l  %356 = phi i32 [ %339, %301 ], [ 0, %299 ], [ 0, %341 ]\l  %357 = phi i64 [ %338, %301 ], [ 0, %299 ], [ %351, %341 ]\l  %358 = icmp ugt i32 %356, 7\l  br i1 %358, label %361, label %359\l|{<s0>T|<s1>F}}"];
	Node0x57882c0:s0 -> Node0x578ad70;
	Node0x57882c0:s1 -> Node0x578adc0;
	Node0x578adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%359:\l359:                                              \l  %360 = icmp eq i32 %356, 0\l  br i1 %360, label %414, label %401\l|{<s0>T|<s1>F}}"];
	Node0x578adc0:s0 -> Node0x578af50;
	Node0x578adc0:s1 -> Node0x578afa0;
	Node0x578ad70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%361:\l361:                                              \l  %362 = load i8, i8 addrspace(4)* %355, align 1, !tbaa !15\l  %363 = zext i8 %362 to i64\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 1\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !15\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 8\l  %368 = or i64 %367, %363\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 2\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !15\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 16\l  %373 = or i64 %368, %372\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 3\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !15\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 24\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 4\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !15\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 32\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 5\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !15\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw nsw i64 %386, 40\l  %388 = or i64 %383, %387\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 6\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !15\l  %391 = zext i8 %390 to i64\l  %392 = shl nuw nsw i64 %391, 48\l  %393 = or i64 %388, %392\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 7\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !15\l  %396 = zext i8 %395 to i64\l  %397 = shl nuw i64 %396, 56\l  %398 = or i64 %393, %397\l  %399 = add nsw i32 %356, -8\l  %400 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 8\l  br label %414\l}"];
	Node0x578ad70 -> Node0x578af50;
	Node0x578afa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%401:\l401:                                              \l  %402 = phi i32 [ %412, %401 ], [ 0, %359 ]\l  %403 = phi i64 [ %411, %401 ], [ 0, %359 ]\l  %404 = zext i32 %402 to i64\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %355, i64 %404\l  %406 = load i8, i8 addrspace(4)* %405, align 1, !tbaa !15\l  %407 = zext i8 %406 to i64\l  %408 = shl i32 %402, 3\l  %409 = zext i32 %408 to i64\l  %410 = shl nuw i64 %407, %409\l  %411 = or i64 %410, %403\l  %412 = add nuw nsw i32 %402, 1\l  %413 = icmp eq i32 %412, %356\l  br i1 %413, label %414, label %401\l|{<s0>T|<s1>F}}"];
	Node0x578afa0:s0 -> Node0x578af50;
	Node0x578afa0:s1 -> Node0x578afa0;
	Node0x578af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%414:\l414:                                              \l  %415 = phi i8 addrspace(4)* [ %400, %361 ], [ %355, %359 ], [ %355, %401 ]\l  %416 = phi i32 [ %399, %361 ], [ 0, %359 ], [ 0, %401 ]\l  %417 = phi i64 [ %398, %361 ], [ 0, %359 ], [ %411, %401 ]\l  %418 = icmp ugt i32 %416, 7\l  br i1 %418, label %421, label %419\l|{<s0>T|<s1>F}}"];
	Node0x578af50:s0 -> Node0x578d5d0;
	Node0x578af50:s1 -> Node0x578d620;
	Node0x578d620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%419:\l419:                                              \l  %420 = icmp eq i32 %416, 0\l  br i1 %420, label %472, label %459\l|{<s0>T|<s1>F}}"];
	Node0x578d620:s0 -> Node0x577d230;
	Node0x578d620:s1 -> Node0x578d7b0;
	Node0x578d5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%421:\l421:                                              \l  %422 = load i8, i8 addrspace(4)* %415, align 1, !tbaa !15\l  %423 = zext i8 %422 to i64\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 1\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !15\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 8\l  %428 = or i64 %427, %423\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 2\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !15\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 16\l  %433 = or i64 %428, %432\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 3\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !15\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 24\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 4\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !15\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 32\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 5\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !15\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw nsw i64 %446, 40\l  %448 = or i64 %443, %447\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 6\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !15\l  %451 = zext i8 %450 to i64\l  %452 = shl nuw nsw i64 %451, 48\l  %453 = or i64 %448, %452\l  %454 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 7\l  %455 = load i8, i8 addrspace(4)* %454, align 1, !tbaa !15\l  %456 = zext i8 %455 to i64\l  %457 = shl nuw i64 %456, 56\l  %458 = or i64 %453, %457\l  br label %472\l}"];
	Node0x578d5d0 -> Node0x577d230;
	Node0x578d7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%459:\l459:                                              \l  %460 = phi i32 [ %470, %459 ], [ 0, %419 ]\l  %461 = phi i64 [ %469, %459 ], [ 0, %419 ]\l  %462 = zext i32 %460 to i64\l  %463 = getelementptr inbounds i8, i8 addrspace(4)* %415, i64 %462\l  %464 = load i8, i8 addrspace(4)* %463, align 1, !tbaa !15\l  %465 = zext i8 %464 to i64\l  %466 = shl i32 %460, 3\l  %467 = zext i32 %466 to i64\l  %468 = shl nuw i64 %465, %467\l  %469 = or i64 %468, %461\l  %470 = add nuw nsw i32 %460, 1\l  %471 = icmp eq i32 %470, %416\l  br i1 %471, label %472, label %459\l|{<s0>T|<s1>F}}"];
	Node0x578d7b0:s0 -> Node0x577d230;
	Node0x578d7b0:s1 -> Node0x578d7b0;
	Node0x577d230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%472:\l472:                                              \l  %473 = phi i64 [ %458, %421 ], [ 0, %419 ], [ %469, %459 ]\l  %474 = shl nuw nsw i64 %55, 2\l  %475 = add nuw nsw i64 %474, 28\l  %476 = and i64 %475, 480\l  %477 = and i64 %57, -225\l  %478 = or i64 %477, %476\l  %479 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %478, i64 noundef %117, i64 noundef %177, i64 noundef %237, i64\l... noundef %297, i64 noundef %357, i64 noundef %417, i64 noundef %473) #10\l  %480 = sub i64 %47, %55\l  %481 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 %55\l  %482 = icmp eq i64 %480, 0\l  br i1 %482, label %483, label %46\l|{<s0>T|<s1>F}}"];
	Node0x577d230:s0 -> Node0x577c1f0;
	Node0x577d230:s1 -> Node0x577cd90;
	Node0x577c1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%483:\l483:                                              \l  %484 = phi \<2 x i64\> [ %41, %38 ], [ %479, %472 ]\l  %485 = extractelement \<2 x i64\> %484, i64 0\l  %486 = zext i32 %12 to i64\l  %487 = and i64 %485, -225\l  %488 = or i64 %487, 32\l  %489 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %488, i64 noundef %486, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %490 = extractelement \<2 x i64\> %489, i64 0\l  %491 = bitcast double %27 to i64\l  %492 = and i64 %490, -225\l  %493 = or i64 %492, 32\l  %494 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %493, i64 noundef %491, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %495 = extractelement \<2 x i64\> %494, i64 0\l  %496 = bitcast double %28 to i64\l  %497 = and i64 %495, -225\l  %498 = or i64 %497, 32\l  %499 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %498, i64 noundef %496, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %500 = extractelement \<2 x i64\> %499, i64 0\l  %501 = bitcast double %29 to i64\l  %502 = and i64 %500, -227\l  %503 = or i64 %502, 34\l  %504 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %35,\l... i64 noundef %503, i64 noundef %501, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %505\l}"];
	Node0x577c1f0 -> Node0x5778190;
	Node0x5778190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%505:\l505:                                              \l  ret void\l}"];
}
