digraph "CFG for '_Z5multiPiS_S_i' function" {
	label="CFG for '_Z5multiPiS_S_i' function";

	Node0x5990f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  %25 = mul nsw i32 %13, %3\l  br i1 %24, label %26, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5990f80:s0 -> Node0x5994ac0;
	Node0x5990f80:s1 -> Node0x5994b50;
	Node0x5994ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %100, %26 ], [ 0, %4 ]\l  %28 = phi i32 [ %99, %26 ], [ 0, %4 ]\l  %29 = add nsw i32 %27, %25\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = mul nsw i32 %27, %3\l  %34 = add nsw i32 %33, %21\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %38 = mul nsw i32 %37, %32\l  %39 = add nsw i32 %38, %28\l  %40 = or i32 %27, 1\l  %41 = add nsw i32 %40, %25\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %42\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = mul nsw i32 %40, %3\l  %46 = add nsw i32 %45, %21\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %50 = mul nsw i32 %49, %44\l  %51 = add nsw i32 %50, %39\l  %52 = add nuw nsw i32 %27, 2\l  %53 = add nsw i32 %52, %25\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %57 = mul nsw i32 %52, %3\l  %58 = add nsw i32 %57, %21\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %62 = mul nsw i32 %61, %56\l  %63 = add nsw i32 %62, %51\l  %64 = add nuw nsw i32 %27, 3\l  %65 = add nsw i32 %64, %25\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %69 = mul nsw i32 %64, %3\l  %70 = add nsw i32 %69, %21\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = mul nsw i32 %73, %68\l  %75 = add nsw i32 %74, %63\l  %76 = add nuw nsw i32 %27, 4\l  %77 = add nsw i32 %76, %25\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %81 = mul nsw i32 %76, %3\l  %82 = add nsw i32 %81, %21\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = mul nsw i32 %85, %80\l  %87 = add nsw i32 %86, %75\l  %88 = add nuw nsw i32 %27, 5\l  %89 = add nsw i32 %88, %25\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %93 = mul nsw i32 %88, %3\l  %94 = add nsw i32 %93, %21\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = mul nsw i32 %97, %92\l  %99 = add nsw i32 %98, %87\l  %100 = add nuw nsw i32 %27, 6\l  %101 = icmp eq i32 %100, 1500\l  br i1 %101, label %102, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5994ac0:s0 -> Node0x5994b50;
	Node0x5994ac0:s1 -> Node0x5994ac0;
	Node0x5994b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%102:\l102:                                              \l  %103 = phi i32 [ 0, %4 ], [ %99, %26 ]\l  %104 = add nsw i32 %25, %21\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %105\l  store i32 %103, i32 addrspace(1)* %106, align 4, !tbaa !7\l  ret void\l}"];
}
