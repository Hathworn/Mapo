digraph "CFG for '_Z29THCudaTensor_kernel_indexFillPfPlS_lilllf' function" {
	label="CFG for '_Z29THCudaTensor_kernel_indexFillPfPlS_lilllf' function";

	Node0x60b1270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %10, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %20, %21\l  %24 = mul i32 %23, %15\l  %25 = add i32 %24, %22\l  %26 = freeze i32 %25\l  %27 = sdiv i64 %6, %5\l  %28 = sext i32 %26 to i64\l  %29 = icmp sgt i64 %27, %28\l  %30 = icmp sgt i64 %5, 0\l  %31 = and i1 %29, %30\l  br i1 %31, label %32, label %88\l|{<s0>T|<s1>F}}"];
	Node0x60b1270:s0 -> Node0x60b5780;
	Node0x60b1270:s1 -> Node0x60b5810;
	Node0x60b5780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = icmp sgt i64 %3, 0\l  %34 = sext i32 %4 to i64\l  %35 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %34\l  %36 = load i64, i64 addrspace(1)* %35, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %37\l}"];
	Node0x60b5780 -> Node0x60b5e20;
	Node0x60b5e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%37:\l37:                                               \l  %38 = phi i64 [ 0, %32 ], [ %51, %39 ]\l  br i1 %33, label %53, label %39\l|{<s0>T|<s1>F}}"];
	Node0x60b5e20:s0 -> Node0x60b6060;
	Node0x60b5e20:s1 -> Node0x60b5f20;
	Node0x60b5f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %37 ], [ %83, %81 ]\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !11\l  %44 = fadd contract float %43, -1.000000e+00\l  %45 = fptosi float %44 to i32\l  %46 = sext i32 %45 to i64\l  %47 = mul nsw i64 %36, %46\l  %48 = add nsw i64 %47, %41\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  store float %8, float addrspace(1)* %49, align 4, !tbaa !11\l  %50 = add nuw nsw i64 %38, 1\l  %51 = and i64 %50, 4294967295\l  %52 = icmp slt i64 %51, %5\l  br i1 %52, label %37, label %88, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x60b5f20:s0 -> Node0x60b5e20;
	Node0x60b5f20:s1 -> Node0x60b5810;
	Node0x60b6060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i64 [ %86, %81 ], [ 0, %37 ]\l  %55 = phi i32 [ %85, %81 ], [ %26, %37 ]\l  %56 = phi i32 [ %83, %81 ], [ 0, %37 ]\l  %57 = trunc i64 %54 to i32\l  %58 = icmp slt i32 %57, %4\l  br i1 %58, label %59, label %71\l|{<s0>T|<s1>F}}"];
	Node0x60b6060:s0 -> Node0x60b8160;
	Node0x60b6060:s1 -> Node0x60b81f0;
	Node0x60b8160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%59:\l59:                                               \l  %60 = sext i32 %55 to i64\l  %61 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %54\l  %62 = load i64, i64 addrspace(1)* %61, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = sdiv i64 %62, %7\l  %64 = sdiv i64 %60, %63\l  %65 = mul nsw i64 %64, %63\l  %66 = trunc i64 %65 to i32\l  %67 = sub i32 %55, %66\l  %68 = mul nsw i64 %64, %62\l  %69 = trunc i64 %68 to i32\l  %70 = add i32 %56, %69\l  br label %81\l}"];
	Node0x60b8160 -> Node0x60b6200;
	Node0x60b81f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%71:\l71:                                               \l  %72 = icmp sgt i32 %57, %4\l  br i1 %72, label %73, label %81\l|{<s0>T|<s1>F}}"];
	Node0x60b81f0:s0 -> Node0x60b9210;
	Node0x60b81f0:s1 -> Node0x60b6200;
	Node0x60b9210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%73:\l73:                                               \l  %74 = sext i32 %55 to i64\l  %75 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %54\l  %76 = load i64, i64 addrspace(1)* %75, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %77 = srem i64 %74, %76\l  %78 = trunc i64 %77 to i32\l  %79 = add i32 %56, %55\l  %80 = sub i32 %79, %78\l  br label %81\l}"];
	Node0x60b9210 -> Node0x60b6200;
	Node0x60b6200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = phi i32 [ %67, %59 ], [ %78, %73 ], [ %55, %71 ]\l  %83 = phi i32 [ %70, %59 ], [ %80, %73 ], [ %56, %71 ]\l  %84 = add nuw nsw i64 %54, 1\l  %85 = freeze i32 %82\l  %86 = and i64 %84, 4294967295\l  %87 = icmp slt i64 %86, %3\l  br i1 %87, label %53, label %39, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x60b6200:s0 -> Node0x60b6060;
	Node0x60b6200:s1 -> Node0x60b5f20;
	Node0x60b5810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%88:\l88:                                               \l  ret void\l}"];
}
