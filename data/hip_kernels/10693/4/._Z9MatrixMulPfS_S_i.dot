digraph "CFG for '_Z9MatrixMulPfS_S_i' function" {
	label="CFG for '_Z9MatrixMulPfS_S_i' function";

	Node0x5d0c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 1\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = icmp sgt i32 %3, 0\l  br i1 %9, label %10, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5d0c7c0:s0 -> Node0x5d0c810;
	Node0x5d0c7c0:s1 -> Node0x5d0e040;
	Node0x5d0c810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = shl i32 %11, 1\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = add i32 %12, %13\l  %15 = mul i32 %14, %3\l  %16 = add i32 %15, %8\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !5\l  %20 = and i32 %3, 7\l  %21 = icmp ult i32 %3, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5d0c810:s0 -> Node0x5d0f290;
	Node0x5d0c810:s1 -> Node0x5d0f320;
	Node0x5d0f320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %3, -8\l  br label %47\l}"];
	Node0x5d0f320 -> Node0x5d0f520;
	Node0x5d0f290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi float [ %19, %10 ], [ %145, %47 ]\l  %26 = phi i32 [ 0, %10 ], [ %146, %47 ]\l  %27 = icmp eq i32 %20, 0\l  br i1 %27, label %46, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5d0f290:s0 -> Node0x5d0e040;
	Node0x5d0f290:s1 -> Node0x5d0f870;
	Node0x5d0f870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi float [ %42, %28 ], [ %25, %24 ]\l  %30 = phi i32 [ %43, %28 ], [ %26, %24 ]\l  %31 = phi i32 [ %44, %28 ], [ 0, %24 ]\l  %32 = add i32 %30, %15\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5\l  %36 = mul nsw i32 %30, %3\l  %37 = add i32 %36, %8\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5\l  %41 = fmul contract float %35, %40\l  %42 = fadd contract float %29, %41\l  store float %42, float addrspace(1)* %18, align 4, !tbaa !5\l  %43 = add nuw nsw i32 %30, 1\l  %44 = add i32 %31, 1\l  %45 = icmp eq i32 %44, %20\l  br i1 %45, label %46, label %28, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5d0f870:s0 -> Node0x5d0e040;
	Node0x5d0f870:s1 -> Node0x5d0f870;
	Node0x5d0e040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%46:\l46:                                               \l  ret void\l}"];
	Node0x5d0f520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi float [ %19, %22 ], [ %145, %47 ]\l  %49 = phi i32 [ 0, %22 ], [ %146, %47 ]\l  %50 = phi i32 [ 0, %22 ], [ %147, %47 ]\l  %51 = add i32 %49, %15\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5\l  %55 = mul nsw i32 %49, %3\l  %56 = add i32 %55, %8\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5\l  %60 = fmul contract float %54, %59\l  %61 = fadd contract float %48, %60\l  store float %61, float addrspace(1)* %18, align 4, !tbaa !5\l  %62 = or i32 %49, 1\l  %63 = add i32 %62, %15\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5\l  %67 = mul nsw i32 %62, %3\l  %68 = add i32 %67, %8\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !5\l  %72 = fmul contract float %66, %71\l  %73 = fadd contract float %61, %72\l  store float %73, float addrspace(1)* %18, align 4, !tbaa !5\l  %74 = or i32 %49, 2\l  %75 = add i32 %74, %15\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5\l  %79 = mul nsw i32 %74, %3\l  %80 = add i32 %79, %8\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !5\l  %84 = fmul contract float %78, %83\l  %85 = fadd contract float %73, %84\l  store float %85, float addrspace(1)* %18, align 4, !tbaa !5\l  %86 = or i32 %49, 3\l  %87 = add i32 %86, %15\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5\l  %91 = mul nsw i32 %86, %3\l  %92 = add i32 %91, %8\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !5\l  %96 = fmul contract float %90, %95\l  %97 = fadd contract float %85, %96\l  store float %97, float addrspace(1)* %18, align 4, !tbaa !5\l  %98 = or i32 %49, 4\l  %99 = add i32 %98, %15\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5\l  %103 = mul nsw i32 %98, %3\l  %104 = add i32 %103, %8\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5\l  %108 = fmul contract float %102, %107\l  %109 = fadd contract float %97, %108\l  store float %109, float addrspace(1)* %18, align 4, !tbaa !5\l  %110 = or i32 %49, 5\l  %111 = add i32 %110, %15\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !5\l  %115 = mul nsw i32 %110, %3\l  %116 = add i32 %115, %8\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %1, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !5\l  %120 = fmul contract float %114, %119\l  %121 = fadd contract float %109, %120\l  store float %121, float addrspace(1)* %18, align 4, !tbaa !5\l  %122 = or i32 %49, 6\l  %123 = add i32 %122, %15\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %0, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5\l  %127 = mul nsw i32 %122, %3\l  %128 = add i32 %127, %8\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5\l  %132 = fmul contract float %126, %131\l  %133 = fadd contract float %121, %132\l  store float %133, float addrspace(1)* %18, align 4, !tbaa !5\l  %134 = or i32 %49, 7\l  %135 = add i32 %134, %15\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %0, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !5\l  %139 = mul nsw i32 %134, %3\l  %140 = add i32 %139, %8\l  %141 = zext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %1, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !5\l  %144 = fmul contract float %138, %143\l  %145 = fadd contract float %133, %144\l  store float %145, float addrspace(1)* %18, align 4, !tbaa !5\l  %146 = add nuw nsw i32 %49, 8\l  %147 = add i32 %50, 8\l  %148 = icmp eq i32 %147, %23\l  br i1 %148, label %24, label %47, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5d0f520:s0 -> Node0x5d0f290;
	Node0x5d0f520:s1 -> Node0x5d0f520;
}
