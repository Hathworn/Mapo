digraph "CFG for '_Z2k0PfS_ii' function" {
	label="CFG for '_Z2k0PfS_ii' function";

	Node0x56dddd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = add i32 %13, 1\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = add i32 %22, 1\l  %24 = add nsw i32 %3, -1\l  %25 = icmp ult i32 %14, %24\l  br i1 %25, label %26, label %93\l|{<s0>T|<s1>F}}"];
	Node0x56dddd0:s0 -> Node0x56e1940;
	Node0x56dddd0:s1 -> Node0x56e19d0;
	Node0x56e1940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%26:\l26:                                               \l  %27 = icmp uge i32 %23, %24\l  %28 = icmp eq i32 %14, 0\l  %29 = select i1 %27, i1 true, i1 %28\l  %30 = icmp eq i32 %23, 0\l  %31 = or i1 %30, %29\l  br i1 %31, label %93, label %32\l|{<s0>T|<s1>F}}"];
	Node0x56e1940:s0 -> Node0x56e19d0;
	Node0x56e1940:s1 -> Node0x56e1e60;
	Node0x56e1e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%32:\l32:                                               \l  %33 = mul i32 %14, %2\l  %34 = add i32 %33, %23\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %37, 0x3FC99999A0000000\l  %39 = mul i32 %13, %2\l  %40 = add i32 %23, %39\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %43, 0x3FB99999A0000000\l  %45 = fadd contract float %38, %44\l  %46 = add nuw i32 %22, 2\l  %47 = add i32 %46, %39\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %50, 0x3FB99999A0000000\l  %52 = fadd contract float %45, %51\l  %53 = add i32 %33, %46\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fmul contract float %56, 0x3FB99999A0000000\l  %58 = fadd contract float %52, %57\l  %59 = add nuw i32 %13, 2\l  %60 = mul i32 %59, %2\l  %61 = add i32 %60, %46\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fmul contract float %64, 0x3FB99999A0000000\l  %66 = fadd contract float %58, %65\l  %67 = add i32 %60, %23\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = fmul contract float %70, 0x3FB99999A0000000\l  %72 = fadd contract float %66, %71\l  %73 = add i32 %60, %22\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %77 = fmul contract float %76, 0x3FB99999A0000000\l  %78 = fadd contract float %72, %77\l  %79 = add i32 %33, %22\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %82, 0x3FB99999A0000000\l  %84 = fadd contract float %78, %83\l  %85 = add i32 %39, %22\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fmul contract float %88, 0x3FB99999A0000000\l  %90 = fadd contract float %84, %89\l  %91 = fmul contract float %90, 0x3FEE666660000000\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x56e1e60 -> Node0x56e19d0;
	Node0x56e19d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  ret void\l}"];
}
