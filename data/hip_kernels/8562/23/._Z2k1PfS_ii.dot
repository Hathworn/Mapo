digraph "CFG for '_Z2k1PfS_ii' function" {
	label="CFG for '_Z2k1PfS_ii' function";

	Node0x4a4c7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add nuw nsw i32 %12, 1\l  %14 = add i32 %13, %11\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add nuw nsw i32 %21, 1\l  %23 = add i32 %22, %20\l  %24 = add nsw i32 %3, -1\l  %25 = icmp ult i32 %14, %24\l  br i1 %25, label %26, label %160\l|{<s0>T|<s1>F}}"];
	Node0x4a4c7f0:s0 -> Node0x4a50360;
	Node0x4a4c7f0:s1 -> Node0x4a503f0;
	Node0x4a50360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%26:\l26:                                               \l  %27 = icmp uge i32 %23, %24\l  %28 = icmp eq i32 %14, 0\l  %29 = select i1 %27, i1 true, i1 %28\l  %30 = icmp eq i32 %23, 0\l  %31 = or i1 %30, %29\l  br i1 %31, label %160, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4a50360:s0 -> Node0x4a503f0;
	Node0x4a50360:s1 -> Node0x4a50880;
	Node0x4a50880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = add nuw nsw i32 %19, 2\l  %34 = add nuw nsw i32 %33, %21\l  %35 = add nuw nsw i32 %34, 1\l  %36 = shl nuw nsw i32 %33, 1\l  %37 = add nuw nsw i32 %36, %21\l  %38 = add nuw nsw i32 %37, 1\l  %39 = add i32 %20, 1\l  %40 = mul i32 %5, %2\l  %41 = add i32 %39, %40\l  %42 = add i32 %20, %40\l  %43 = mul nsw i32 %42, %2\l  %44 = add nsw i32 %43, %20\l  %45 = add i32 %22, %44\l  %46 = mul nsw i32 %41, %2\l  %47 = add nsw i32 %46, %20\l  %48 = add i32 %22, %47\l  %49 = add nsw i32 %41, 1\l  %50 = mul nsw i32 %49, %2\l  %51 = add nsw i32 %50, %20\l  %52 = add i32 %22, %51\l  %53 = add i32 %39, %5\l  %54 = icmp slt i32 %53, %24\l  br i1 %54, label %55, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4a50880:s0 -> Node0x4a4ea80;
	Node0x4a50880:s1 -> Node0x4a51760;
	Node0x4a4ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%55:\l55:                                               \l  %56 = sext i32 %45 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %22\l  store float %58, float addrspace(3)* %59, align 4, !tbaa !7\l  %60 = sext i32 %48 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %35\l  store float %62, float addrspace(3)* %63, align 4, !tbaa !7\l  %64 = sext i32 %52 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %38\l  store float %66, float addrspace(3)* %67, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x4a4ea80 -> Node0x4a51760;
	Node0x4a51760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%68:\l68:                                               \l  %69 = icmp eq i32 %5, 0\l  br i1 %69, label %70, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4a51760:s0 -> Node0x4a52c50;
	Node0x4a51760:s1 -> Node0x4a52ca0;
	Node0x4a52c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%70:\l70:                                               \l  %71 = add i32 %44, %21\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %21\l  store float %74, float addrspace(3)* %75, align 4, !tbaa !7\l  %76 = add i32 %47, %21\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %34\l  store float %79, float addrspace(3)* %80, align 4, !tbaa !7\l  %81 = add i32 %51, %21\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_data,\l... i32 0, i32 %37\l  store float %84, float addrspace(3)* %85, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x4a52c50 -> Node0x4a52ca0;
	Node0x4a52ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%86:\l86:                                               \l  %87 = add nsw i32 %3, -3\l  %88 = sub i32 %87, %20\l  %89 = icmp eq i32 %21, %88\l  %90 = add nsw i32 %19, -1\l  %91 = icmp eq i32 %21, %90\l  %92 = select i1 %89, i1 true, i1 %91\l  br i1 %92, label %97, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4a52ca0:s0 -> Node0x4a53c70;
	Node0x4a52ca0:s1 -> Node0x4a53cc0;
	Node0x4a53cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%93:\l93:                                               \l  %94 = add nuw nsw i32 %21, 2\l  %95 = add nuw nsw i32 %34, 2\l  %96 = add nuw nsw i32 %37, 2\l  br label %116\l}"];
	Node0x4a53cc0 -> Node0x4a53fb0;
	Node0x4a53c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%97:\l97:                                               \l  %98 = add nsw i32 %45, 1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %0, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = add nuw nsw i32 %21, 2\l  %103 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %102\l  store float %101, float addrspace(3)* %103, align 4, !tbaa !7\l  %104 = add nsw i32 %48, 1\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = add nuw nsw i32 %34, 2\l  %109 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %108\l  store float %107, float addrspace(3)* %109, align 4, !tbaa !7\l  %110 = add nsw i32 %52, 1\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = add nuw nsw i32 %37, 2\l  %115 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %114\l  store float %113, float addrspace(3)* %115, align 4, !tbaa !7\l  br label %116\l}"];
	Node0x4a53c70 -> Node0x4a53fb0;
	Node0x4a53fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%116:\l116:                                              \l  %117 = phi i32 [ %96, %93 ], [ %114, %97 ]\l  %118 = phi i32 [ %95, %93 ], [ %108, %97 ]\l  %119 = phi i32 [ %94, %93 ], [ %102, %97 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %120 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %35\l  %121 = load float, float addrspace(3)* %120, align 4, !tbaa !7\l  %122 = fmul contract float %121, 0x3FC99999A0000000\l  %123 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %21\l  %124 = load float, float addrspace(3)* %123, align 4, !tbaa !7\l  %125 = fmul contract float %124, 0x3FB99999A0000000\l  %126 = fadd contract float %122, %125\l  %127 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %119\l  %128 = load float, float addrspace(3)* %127, align 4, !tbaa !7\l  %129 = fmul contract float %128, 0x3FB99999A0000000\l  %130 = fadd contract float %126, %129\l  %131 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %22\l  %132 = load float, float addrspace(3)* %131, align 4, !tbaa !7\l  %133 = fmul contract float %132, 0x3FB99999A0000000\l  %134 = fadd contract float %130, %133\l  %135 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %118\l  %136 = load float, float addrspace(3)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %136, 0x3FB99999A0000000\l  %138 = fadd contract float %134, %137\l  %139 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %34\l  %140 = load float, float addrspace(3)* %139, align 4, !tbaa !7\l  %141 = fmul contract float %140, 0x3FB99999A0000000\l  %142 = fadd contract float %138, %141\l  %143 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %38\l  %144 = load float, float addrspace(3)* %143, align 4, !tbaa !7\l  %145 = fmul contract float %144, 0x3FB99999A0000000\l  %146 = fadd contract float %142, %145\l  %147 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %37\l  %148 = load float, float addrspace(3)* %147, align 4, !tbaa !7\l  %149 = fmul contract float %148, 0x3FB99999A0000000\l  %150 = fadd contract float %146, %149\l  %151 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @s_data, i32 0, i32 %117\l  %152 = load float, float addrspace(3)* %151, align 4, !tbaa !7\l  %153 = fmul contract float %152, 0x3FB99999A0000000\l  %154 = fadd contract float %150, %153\l  %155 = fmul contract float %154, 0x3FEE666660000000\l  %156 = mul i32 %14, %3\l  %157 = add i32 %156, %23\l  %158 = zext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  store float %155, float addrspace(1)* %159, align 4, !tbaa !7\l  br label %160\l}"];
	Node0x4a53fb0 -> Node0x4a503f0;
	Node0x4a503f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%160:\l160:                                              \l  ret void\l}"];
}
