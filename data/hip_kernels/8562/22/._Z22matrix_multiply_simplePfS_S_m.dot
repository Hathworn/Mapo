digraph "CFG for '_Z22matrix_multiply_simplePfS_S_m' function" {
	label="CFG for '_Z22matrix_multiply_simplePfS_S_m' function";

	Node0x6448660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sext i32 %13 to i64\l  %15 = icmp ult i64 %14, %3\l  br i1 %15, label %16, label %47\l|{<s0>T|<s1>F}}"];
	Node0x6448660:s0 -> Node0x644a620;
	Node0x6448660:s1 -> Node0x644a6b0;
	Node0x644a620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l16:                                               \l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = sext i32 %24 to i64\l  %26 = icmp ult i64 %25, %3\l  br i1 %26, label %27, label %47\l|{<s0>T|<s1>F}}"];
	Node0x644a620:s0 -> Node0x644c300;
	Node0x644a620:s1 -> Node0x644a6b0;
	Node0x644c300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = mul i64 %14, %3\l  br label %32\l}"];
	Node0x644c300 -> Node0x644c4d0;
	Node0x644c590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%29:\l29:                                               \l  %30 = add i64 %28, %25\l  %31 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  store float %43, float addrspace(1)* %31, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x644c590 -> Node0x644a6b0;
	Node0x644c4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64 [ 0, %27 ], [ %45, %32 ]\l  %34 = phi float [ 0.000000e+00, %27 ], [ %43, %32 ]\l  %35 = add i64 %33, %28\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = mul i64 %33, %3\l  %39 = add i64 %38, %25\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %37, %41\l  %43 = fadd contract float %34, %42\l  %44 = add nuw nsw i64 %33, 1\l  %45 = and i64 %44, 4294967295\l  %46 = icmp ult i64 %45, %3\l  br i1 %46, label %32, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x644c4d0:s0 -> Node0x644c4d0;
	Node0x644c4d0:s1 -> Node0x644c590;
	Node0x644a6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%47:\l47:                                               \l  ret void\l}"];
}
