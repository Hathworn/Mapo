digraph "CFG for '__ockl_dm_dealloc' function" {
	label="CFG for '__ockl_dm_dealloc' function";

	Node0x57998e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%1:\l  %2 = and i64 %0, 4095\l  %3 = icmp eq i64 %2, 0\l  br i1 %3, label %4, label %21\l|{<s0>T|<s1>F}}"];
	Node0x57998e0:s0 -> Node0x5798230;
	Node0x57998e0:s1 -> Node0x5798280;
	Node0x5798230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%4:\l4:                                                \l  %5 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 24\l  %7 = bitcast i8 addrspace(4)* %6 to i64 addrspace(4)*\l  %8 = load i64, i64 addrspace(4)* %7, align 8, !tbaa !4\l  %9 = inttoptr i64 %8 to i8 addrspace(1)*\l  %10 = addrspacecast i8 addrspace(1)* %9 to i8*\l  %11 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %10,\l... i64 noundef %0, i64 noundef 0) #12\l  %12 = tail call i32 @llvm.read_register.i32(metadata !8) #13\l  %13 = tail call i32 @llvm.read_register.i32(metadata !9) #13\l  %14 = tail call i32 @llvm.amdgcn.mbcnt.lo(i32 %13, i32 0)\l  %15 = tail call i32 @llvm.amdgcn.mbcnt.hi(i32 %12, i32 %14)\l  %16 = tail call i64 @llvm.read_register.i64(metadata !10) #13\l  %17 = icmp eq i32 %15, 0\l  br i1 %17, label %18, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5798230:s0 -> Node0x57a46c0;
	Node0x5798230:s1 -> Node0x57a4750;
	Node0x57a46c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%18:\l18:                                               \l  %19 = tail call i64 @llvm.ctpop.i64(i64 %16), !range !11\l  %20 = atomicrmw sub i64 addrspace(1)* getelementptr inbounds (%0, %0\l... addrspace(1)* @0, i64 0, i32 9), i64 %19 syncscope(\"agent-one-as\") monotonic,\l... align 8\l  br label %106\l}"];
	Node0x57a46c0 -> Node0x57a4750;
	Node0x5798280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  %22 = and i64 %0, -2097152\l  %23 = inttoptr i64 %22 to %5 addrspace(1)*\l  %24 = getelementptr inbounds %5, %5 addrspace(1)* %23, i64 0, i32 0\l  %25 = load i32, i32 addrspace(1)* %24, align 2097152, !tbaa !12\l  %26 = getelementptr inbounds %5, %5 addrspace(1)* %23, i64 0, i32 1\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !15\l  %28 = zext i32 %25 to i64\l  %29 = icmp ult i32 %27, 256\l  %30 = zext i32 %27 to i64\l  %31 = getelementptr inbounds %0, %0 addrspace(1)* @0, i64 0, i32 5, i64 %28,\l... i64 %30\l  %32 = add i32 %27, -256\l  %33 = lshr i32 %32, 8\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds %0, %0 addrspace(1)* @0, i64 0, i32 5, i64 %28,\l... i64 %34, i32 0\l  %36 = and i32 %27, 255\l  %37 = zext i32 %36 to i64\l  %38 = trunc i64 %0 to i32\l  %39 = and i32 %38, 2097151\l  %40 = lshr i32 %25, 1\l  %41 = add nuw i32 %40, 4\l  %42 = and i32 %41, 31\l  %43 = shl nuw i32 1, %42\l  %44 = and i32 %25, 1\l  %45 = icmp eq i32 %44, 0\l  %46 = lshr i32 %43, 1\l  %47 = select i1 %45, i32 0, i32 %46\l  %48 = add nuw i32 %47, %43\l  %49 = getelementptr inbounds [16 x %4], [16 x %4] addrspace(4)* @1, i64 0,\l... i64 %28, i32 3\l  br label %50\l}"];
	Node0x5798280 -> Node0x57a6240;
	Node0x57a6240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi i32 [ 1, %21 ], [ %102, %101 ]\l  %52 = tail call i32 asm sideeffect \"\l  %53 = icmp eq i32 %51, 0\l  br i1 %53, label %101, label %54\l|{<s0>T|<s1>F}}"];
	Node0x57a6240:s0 -> Node0x57a6370;
	Node0x57a6240:s1 -> Node0x57a7b70;
	Node0x57a7b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%54:\l54:                                               \l  %55 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %25)\l  %56 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %27)\l  %57 = icmp eq i32 %25, %55\l  %58 = icmp eq i32 %27, %56\l  %59 = select i1 %57, i1 %58, i1 false\l  br i1 %59, label %60, label %101\l|{<s0>T|<s1>F}}"];
	Node0x57a7b70:s0 -> Node0x57a81b0;
	Node0x57a7b70:s1 -> Node0x57a6370;
	Node0x57a81b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%60:\l60:                                               \l  %61 = tail call i32 @llvm.read_register.i32(metadata !8) #13\l  %62 = tail call i32 @llvm.read_register.i32(metadata !9) #13\l  %63 = tail call i32 @llvm.amdgcn.mbcnt.lo(i32 %62, i32 0)\l  %64 = tail call i32 @llvm.amdgcn.mbcnt.hi(i32 %61, i32 %63)\l  %65 = tail call i64 @llvm.read_register.i64(metadata !10) #13\l  %66 = tail call i64 @llvm.ctpop.i64(i64 %65), !range !11\l  %67 = trunc i64 %66 to i32\l  %68 = icmp ne i32 %64, 0\l  %69 = select i1 %68, i1 true, i1 %29\l  %70 = select i1 %68, %3 addrspace(1)* null, %3 addrspace(1)* %31\l  br i1 %69, label %75, label %71\l|{<s0>T|<s1>F}}"];
	Node0x57a81b0:s0 -> Node0x57a9300;
	Node0x57a81b0:s1 -> Node0x57a9350;
	Node0x57a9350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%71:\l71:                                               \l  %72 = load atomic i64, i64 addrspace(1)* %35 syncscope(\"agent-one-as\")\l... monotonic, align 8\l  %73 = inttoptr i64 %72 to %3 addrspace(1)*\l  %74 = getelementptr inbounds %3, %3 addrspace(1)* %73, i64 %37\l  br label %75\l}"];
	Node0x57a9350 -> Node0x57a9300;
	Node0x57a9300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%75:\l75:                                               \l  %76 = phi %3 addrspace(1)* [ %74, %71 ], [ %70, %60 ]\l  %77 = ptrtoint %3 addrspace(1)* %76 to i64\l  %78 = trunc i64 %77 to i32\l  %79 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %78)\l  %80 = lshr i64 %77, 32\l  %81 = trunc i64 %80 to i32\l  %82 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %81)\l  %83 = load i32, i32 addrspace(4)* %49, align 4, !tbaa !17\l  %84 = sub i32 %39, %83\l  %85 = udiv i32 %84, %48\l  %86 = and i32 %85, 31\l  %87 = shl nuw i32 1, %86\l  %88 = xor i32 %87, -1\l  %89 = lshr i32 %85, 5\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds %5, %5 addrspace(1)* %23, i64 0, i32 4, i64 %90\l  %92 = atomicrmw and i32 addrspace(1)* %91, i32 %88 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br i1 %68, label %101, label %93\l|{<s0>T|<s1>F}}"];
	Node0x57a9300:s0 -> Node0x57a6370;
	Node0x57a9300:s1 -> Node0x57aa1e0;
	Node0x57aa1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%93:\l93:                                               \l  %94 = insertelement \<2 x i32\> undef, i32 %79, i64 0\l  %95 = insertelement \<2 x i32\> %94, i32 %82, i64 1\l  %96 = bitcast \<2 x i32\> %95 to i64\l  %97 = inttoptr i64 %96 to i8 addrspace(1)*\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %97, i64 16\l  %99 = bitcast i8 addrspace(1)* %98 to i32 addrspace(1)*\l  %100 = atomicrmw sub i32 addrspace(1)* %99, i32 %67\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %101\l}"];
	Node0x57aa1e0 -> Node0x57a6370;
	Node0x57a6370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi i32 [ 0, %50 ], [ 1, %54 ], [ 0, %93 ], [ 0, %75 ]\l  %103 = tail call i32 asm sideeffect \"\l  %104 = tail call i64 @llvm.amdgcn.icmp.i64.i32(i32 noundef %103, i32 noundef\l... 0, i32 noundef 33) #6\l  %105 = icmp eq i64 %104, 0\l  br i1 %105, label %106, label %50\l|{<s0>T|<s1>F}}"];
	Node0x57a6370:s0 -> Node0x57a4750;
	Node0x57a6370:s1 -> Node0x57a6240;
	Node0x57a4750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%106:\l106:                                              \l  ret void\l}"];
}
