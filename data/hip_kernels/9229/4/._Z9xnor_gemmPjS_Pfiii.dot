digraph "CFG for '_Z9xnor_gemmPjS_Pfiii' function" {
	label="CFG for '_Z9xnor_gemmPjS_Pfiii' function";

	Node0x55367a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = shl nsw i32 %5, 4\l  %12 = mul nsw i32 %11, %7\l  %13 = shl nsw i32 %8, 4\l  %14 = add nsw i32 %12, %13\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  %17 = sdiv i32 %4, 16\l  %18 = icmp sgt i32 %4, 15\l  br i1 %18, label %19, label %66\l|{<s0>T|<s1>F}}"];
	Node0x55367a0:s0 -> Node0x5538d10;
	Node0x55367a0:s1 -> Node0x5538da0;
	Node0x5538d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%19:\l19:                                               \l  %20 = mul i32 %7, %4\l  %21 = mul nsw i32 %9, %4\l  %22 = add nsw i32 %21, %10\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 %10\l  %25 = mul nsw i32 %9, %5\l  %26 = add nsw i32 %25, %10\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 %9, i32 %10\l  %29 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 0\l  %30 = getelementptr i32, i32 addrspace(1)* %0, i64 %23\l  %31 = getelementptr i32, i32 addrspace(1)* %1, i64 %27\l  %32 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 0, i32 %10\l  %33 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 1\l  %34 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 1, i32 %10\l  %35 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 2\l  %36 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 2, i32 %10\l  %37 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 3\l  %38 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 3, i32 %10\l  %39 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 4\l  %40 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 4, i32 %10\l  %41 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 5\l  %42 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 5, i32 %10\l  %43 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 6\l  %44 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 6, i32 %10\l  %45 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 7\l  %46 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 7, i32 %10\l  %47 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 8\l  %48 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 8, i32 %10\l  %49 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 9\l  %50 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 9, i32 %10\l  %51 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 10\l  %52 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 10, i32 %10\l  %53 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 11\l  %54 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 11, i32 %10\l  %55 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 12\l  %56 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 12, i32 %10\l  %57 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 13\l  %58 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 13, i32 %10\l  %59 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 14\l  %60 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 14, i32 %10\l  %61 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2As, i32 0, i32 %9, i32 15\l  %62 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9xnor_gemmPjS_PfiiiE2Bs, i32 0, i32 15, i32 %10\l  br label %70\l}"];
	Node0x5538d10 -> Node0x553b510;
	Node0x553b5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%63:\l63:                                               \l  %64 = uitofp i32 %162 to float\l  %65 = fmul contract float %64, 2.000000e+00\l  br label %66\l}"];
	Node0x553b5d0 -> Node0x5538da0;
	Node0x5538da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%66:\l66:                                               \l  %67 = phi float [ 0.000000e+00, %6 ], [ %65, %63 ]\l  %68 = add nsw i32 %13, %10\l  %69 = icmp slt i32 %68, %5\l  br i1 %69, label %165, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5538da0:s0 -> Node0x553c640;
	Node0x5538da0:s1 -> Node0x553c6d0;
	Node0x553b510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %19 ], [ %162, %70 ]\l  %72 = phi i32 [ 0, %19 ], [ %163, %70 ]\l  %73 = add i32 %72, %20\l  %74 = shl i32 %73, 4\l  %75 = sext i32 %74 to i64\l  %76 = mul nsw i32 %72, %11\l  %77 = add nsw i32 %76, %13\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr i32, i32 addrspace(1)* %30, i64 %75\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  store i32 %80, i32 addrspace(3)* %24, align 4, !tbaa !5\l  %81 = getelementptr i32, i32 addrspace(1)* %31, i64 %78\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  store i32 %82, i32 addrspace(3)* %28, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = load i32, i32 addrspace(3)* %29, align 16, !tbaa !5\l  %84 = load i32, i32 addrspace(3)* %32, align 4, !tbaa !5\l  %85 = xor i32 %84, %83\l  %86 = tail call i32 @llvm.ctpop.i32(i32 %85), !range !10\l  %87 = add i32 %86, %71\l  %88 = load i32, i32 addrspace(3)* %33, align 4, !tbaa !5\l  %89 = load i32, i32 addrspace(3)* %34, align 4, !tbaa !5\l  %90 = xor i32 %89, %88\l  %91 = tail call i32 @llvm.ctpop.i32(i32 %90), !range !10\l  %92 = add i32 %91, %87\l  %93 = load i32, i32 addrspace(3)* %35, align 8, !tbaa !5\l  %94 = load i32, i32 addrspace(3)* %36, align 4, !tbaa !5\l  %95 = xor i32 %94, %93\l  %96 = tail call i32 @llvm.ctpop.i32(i32 %95), !range !10\l  %97 = add i32 %96, %92\l  %98 = load i32, i32 addrspace(3)* %37, align 4, !tbaa !5\l  %99 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !5\l  %100 = xor i32 %99, %98\l  %101 = tail call i32 @llvm.ctpop.i32(i32 %100), !range !10\l  %102 = add i32 %101, %97\l  %103 = load i32, i32 addrspace(3)* %39, align 16, !tbaa !5\l  %104 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !5\l  %105 = xor i32 %104, %103\l  %106 = tail call i32 @llvm.ctpop.i32(i32 %105), !range !10\l  %107 = add i32 %106, %102\l  %108 = load i32, i32 addrspace(3)* %41, align 4, !tbaa !5\l  %109 = load i32, i32 addrspace(3)* %42, align 4, !tbaa !5\l  %110 = xor i32 %109, %108\l  %111 = tail call i32 @llvm.ctpop.i32(i32 %110), !range !10\l  %112 = add i32 %111, %107\l  %113 = load i32, i32 addrspace(3)* %43, align 8, !tbaa !5\l  %114 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !5\l  %115 = xor i32 %114, %113\l  %116 = tail call i32 @llvm.ctpop.i32(i32 %115), !range !10\l  %117 = add i32 %116, %112\l  %118 = load i32, i32 addrspace(3)* %45, align 4, !tbaa !5\l  %119 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !5\l  %120 = xor i32 %119, %118\l  %121 = tail call i32 @llvm.ctpop.i32(i32 %120), !range !10\l  %122 = add i32 %121, %117\l  %123 = load i32, i32 addrspace(3)* %47, align 16, !tbaa !5\l  %124 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !5\l  %125 = xor i32 %124, %123\l  %126 = tail call i32 @llvm.ctpop.i32(i32 %125), !range !10\l  %127 = add i32 %126, %122\l  %128 = load i32, i32 addrspace(3)* %49, align 4, !tbaa !5\l  %129 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !5\l  %130 = xor i32 %129, %128\l  %131 = tail call i32 @llvm.ctpop.i32(i32 %130), !range !10\l  %132 = add i32 %131, %127\l  %133 = load i32, i32 addrspace(3)* %51, align 8, !tbaa !5\l  %134 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !5\l  %135 = xor i32 %134, %133\l  %136 = tail call i32 @llvm.ctpop.i32(i32 %135), !range !10\l  %137 = add i32 %136, %132\l  %138 = load i32, i32 addrspace(3)* %53, align 4, !tbaa !5\l  %139 = load i32, i32 addrspace(3)* %54, align 4, !tbaa !5\l  %140 = xor i32 %139, %138\l  %141 = tail call i32 @llvm.ctpop.i32(i32 %140), !range !10\l  %142 = add i32 %141, %137\l  %143 = load i32, i32 addrspace(3)* %55, align 16, !tbaa !5\l  %144 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !5\l  %145 = xor i32 %144, %143\l  %146 = tail call i32 @llvm.ctpop.i32(i32 %145), !range !10\l  %147 = add i32 %146, %142\l  %148 = load i32, i32 addrspace(3)* %57, align 4, !tbaa !5\l  %149 = load i32, i32 addrspace(3)* %58, align 4, !tbaa !5\l  %150 = xor i32 %149, %148\l  %151 = tail call i32 @llvm.ctpop.i32(i32 %150), !range !10\l  %152 = add i32 %151, %147\l  %153 = load i32, i32 addrspace(3)* %59, align 8, !tbaa !5\l  %154 = load i32, i32 addrspace(3)* %60, align 4, !tbaa !5\l  %155 = xor i32 %154, %153\l  %156 = tail call i32 @llvm.ctpop.i32(i32 %155), !range !10\l  %157 = add i32 %156, %152\l  %158 = load i32, i32 addrspace(3)* %61, align 4, !tbaa !5\l  %159 = load i32, i32 addrspace(3)* %62, align 4, !tbaa !5\l  %160 = xor i32 %159, %158\l  %161 = tail call i32 @llvm.ctpop.i32(i32 %160), !range !10\l  %162 = add i32 %161, %157\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %163 = add nuw nsw i32 %72, 1\l  %164 = icmp eq i32 %163, %17\l  br i1 %164, label %63, label %70, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x553b510:s0 -> Node0x553b5d0;
	Node0x553b510:s1 -> Node0x553b510;
	Node0x553c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%165:\l165:                                              \l  %166 = shl nsw i32 %7, 4\l  %167 = add nsw i32 %166, %9\l  %168 = icmp slt i32 %167, %3\l  br i1 %168, label %169, label %178\l|{<s0>T|<s1>F}}"];
	Node0x553c640:s0 -> Node0x5542e10;
	Node0x553c640:s1 -> Node0x553c6d0;
	Node0x5542e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%169:\l169:                                              \l  %170 = shl nsw i32 %4, 5\l  %171 = sitofp i32 %170 to float\l  %172 = fsub contract float %67, %171\l  %173 = fneg contract float %172\l  %174 = mul nsw i32 %9, %5\l  %175 = add nsw i32 %174, %10\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds float, float addrspace(1)* %16, i64 %176\l  store float %173, float addrspace(1)* %177, align 4, !tbaa !13\l  br label %178\l}"];
	Node0x5542e10 -> Node0x553c6d0;
	Node0x553c6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%178:\l178:                                              \l  ret void\l}"];
}
