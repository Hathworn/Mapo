digraph "CFG for '_Z23concatenate_rows_kernelPfPji' function" {
	label="CFG for '_Z23concatenate_rows_kernelPfPji' function";

	Node0x4aa01b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %178\l|{<s0>T|<s1>F}}"];
	Node0x4aa01b0:s0 -> Node0x4aa20f0;
	Node0x4aa01b0:s1 -> Node0x4aa2180;
	Node0x4aa20f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = shl nsw i32 %12, 5\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = fcmp contract oge float %18, 0.000000e+00\l  %20 = zext i1 %19 to i32\l  %21 = getelementptr inbounds float, float addrspace(1)* %17, i64 1\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = fcmp contract oge float %22, 0.000000e+00\l  %24 = select i1 %23, i32 2, i32 0\l  %25 = or i32 %24, %20\l  %26 = getelementptr inbounds float, float addrspace(1)* %17, i64 2\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fcmp contract oge float %27, 0.000000e+00\l  %29 = select i1 %28, i32 4, i32 0\l  %30 = or i32 %25, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %17, i64 3\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fcmp contract oge float %32, 0.000000e+00\l  %34 = select i1 %33, i32 8, i32 0\l  %35 = or i32 %30, %34\l  %36 = getelementptr inbounds float, float addrspace(1)* %17, i64 4\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fcmp contract oge float %37, 0.000000e+00\l  %39 = select i1 %38, i32 16, i32 0\l  %40 = or i32 %35, %39\l  %41 = getelementptr inbounds float, float addrspace(1)* %17, i64 5\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fcmp contract oge float %42, 0.000000e+00\l  %44 = select i1 %43, i32 32, i32 0\l  %45 = or i32 %40, %44\l  %46 = getelementptr inbounds float, float addrspace(1)* %17, i64 6\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fcmp contract oge float %47, 0.000000e+00\l  %49 = select i1 %48, i32 64, i32 0\l  %50 = or i32 %45, %49\l  %51 = getelementptr inbounds float, float addrspace(1)* %17, i64 7\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fcmp contract oge float %52, 0.000000e+00\l  %54 = select i1 %53, i32 128, i32 0\l  %55 = or i32 %50, %54\l  %56 = getelementptr inbounds float, float addrspace(1)* %17, i64 8\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fcmp contract oge float %57, 0.000000e+00\l  %59 = select i1 %58, i32 256, i32 0\l  %60 = or i32 %55, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %17, i64 9\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fcmp contract oge float %62, 0.000000e+00\l  %64 = select i1 %63, i32 512, i32 0\l  %65 = or i32 %60, %64\l  %66 = getelementptr inbounds float, float addrspace(1)* %17, i64 10\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fcmp contract oge float %67, 0.000000e+00\l  %69 = select i1 %68, i32 1024, i32 0\l  %70 = or i32 %65, %69\l  %71 = getelementptr inbounds float, float addrspace(1)* %17, i64 11\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = fcmp contract oge float %72, 0.000000e+00\l  %74 = select i1 %73, i32 2048, i32 0\l  %75 = or i32 %70, %74\l  %76 = getelementptr inbounds float, float addrspace(1)* %17, i64 12\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fcmp contract oge float %77, 0.000000e+00\l  %79 = select i1 %78, i32 4096, i32 0\l  %80 = or i32 %75, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %17, i64 13\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fcmp contract oge float %82, 0.000000e+00\l  %84 = select i1 %83, i32 8192, i32 0\l  %85 = or i32 %80, %84\l  %86 = getelementptr inbounds float, float addrspace(1)* %17, i64 14\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fcmp contract oge float %87, 0.000000e+00\l  %89 = select i1 %88, i32 16384, i32 0\l  %90 = or i32 %85, %89\l  %91 = getelementptr inbounds float, float addrspace(1)* %17, i64 15\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %93 = fcmp contract oge float %92, 0.000000e+00\l  %94 = select i1 %93, i32 32768, i32 0\l  %95 = or i32 %90, %94\l  %96 = getelementptr inbounds float, float addrspace(1)* %17, i64 16\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = fcmp contract oge float %97, 0.000000e+00\l  %99 = select i1 %98, i32 65536, i32 0\l  %100 = or i32 %95, %99\l  %101 = getelementptr inbounds float, float addrspace(1)* %17, i64 17\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fcmp contract oge float %102, 0.000000e+00\l  %104 = select i1 %103, i32 131072, i32 0\l  %105 = or i32 %100, %104\l  %106 = getelementptr inbounds float, float addrspace(1)* %17, i64 18\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %108 = fcmp contract oge float %107, 0.000000e+00\l  %109 = select i1 %108, i32 262144, i32 0\l  %110 = or i32 %105, %109\l  %111 = getelementptr inbounds float, float addrspace(1)* %17, i64 19\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %113 = fcmp contract oge float %112, 0.000000e+00\l  %114 = select i1 %113, i32 524288, i32 0\l  %115 = or i32 %110, %114\l  %116 = getelementptr inbounds float, float addrspace(1)* %17, i64 20\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = fcmp contract oge float %117, 0.000000e+00\l  %119 = select i1 %118, i32 1048576, i32 0\l  %120 = or i32 %115, %119\l  %121 = getelementptr inbounds float, float addrspace(1)* %17, i64 21\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = fcmp contract oge float %122, 0.000000e+00\l  %124 = select i1 %123, i32 2097152, i32 0\l  %125 = or i32 %120, %124\l  %126 = getelementptr inbounds float, float addrspace(1)* %17, i64 22\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %128 = fcmp contract oge float %127, 0.000000e+00\l  %129 = select i1 %128, i32 4194304, i32 0\l  %130 = or i32 %125, %129\l  %131 = getelementptr inbounds float, float addrspace(1)* %17, i64 23\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = fcmp contract oge float %132, 0.000000e+00\l  %134 = select i1 %133, i32 8388608, i32 0\l  %135 = or i32 %130, %134\l  %136 = getelementptr inbounds float, float addrspace(1)* %17, i64 24\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fcmp contract oge float %137, 0.000000e+00\l  %139 = select i1 %138, i32 16777216, i32 0\l  %140 = or i32 %135, %139\l  %141 = getelementptr inbounds float, float addrspace(1)* %17, i64 25\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %143 = fcmp contract oge float %142, 0.000000e+00\l  %144 = select i1 %143, i32 33554432, i32 0\l  %145 = or i32 %140, %144\l  %146 = getelementptr inbounds float, float addrspace(1)* %17, i64 26\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = fcmp contract oge float %147, 0.000000e+00\l  %149 = select i1 %148, i32 67108864, i32 0\l  %150 = or i32 %145, %149\l  %151 = getelementptr inbounds float, float addrspace(1)* %17, i64 27\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %153 = fcmp contract oge float %152, 0.000000e+00\l  %154 = select i1 %153, i32 134217728, i32 0\l  %155 = or i32 %150, %154\l  %156 = getelementptr inbounds float, float addrspace(1)* %17, i64 28\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %158 = fcmp contract oge float %157, 0.000000e+00\l  %159 = select i1 %158, i32 268435456, i32 0\l  %160 = or i32 %155, %159\l  %161 = getelementptr inbounds float, float addrspace(1)* %17, i64 29\l  %162 = load float, float addrspace(1)* %161, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %163 = fcmp contract oge float %162, 0.000000e+00\l  %164 = select i1 %163, i32 536870912, i32 0\l  %165 = or i32 %160, %164\l  %166 = getelementptr inbounds float, float addrspace(1)* %17, i64 30\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = fcmp contract oge float %167, 0.000000e+00\l  %169 = select i1 %168, i32 1073741824, i32 0\l  %170 = or i32 %165, %169\l  %171 = getelementptr inbounds float, float addrspace(1)* %17, i64 31\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %173 = fcmp contract oge float %172, 0.000000e+00\l  %174 = select i1 %173, i32 -2147483648, i32 0\l  %175 = or i32 %170, %174\l  %176 = sext i32 %12 to i64\l  %177 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %176\l  store i32 %175, i32 addrspace(1)* %177, align 4, !tbaa !11\l  br label %178\l}"];
	Node0x4aa20f0 -> Node0x4aa2180;
	Node0x4aa2180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%178:\l178:                                              \l  ret void\l}"];
}
