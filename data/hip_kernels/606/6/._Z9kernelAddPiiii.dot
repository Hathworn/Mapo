digraph "CFG for '_Z9kernelAddPiiii' function" {
	label="CFG for '_Z9kernelAddPiiii' function";

	Node0x56de740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %12, %2\l  %14 = add i32 %13, %11\l  %15 = icmp slt i32 %14, %3\l  %16 = icmp sgt i32 %1, 0\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %69\l|{<s0>T|<s1>F}}"];
	Node0x56de740:s0 -> Node0x56df2f0;
	Node0x56de740:s1 -> Node0x56e0940;
	Node0x56df2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = sext i32 %14 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7\l  %22 = and i32 %1, 7\l  %23 = icmp ult i32 %1, 8\l  br i1 %23, label %55, label %24\l|{<s0>T|<s1>F}}"];
	Node0x56df2f0:s0 -> Node0x56e0e80;
	Node0x56df2f0:s1 -> Node0x56e0f10;
	Node0x56e0f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %1, -8\l  br label %26\l}"];
	Node0x56e0f10 -> Node0x56e1110;
	Node0x56e1110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi i32 [ %21, %24 ], [ %52, %26 ]\l  %28 = phi i32 [ 0, %24 ], [ %53, %26 ]\l  %29 = mul nsw i32 %27, %27\l  %30 = add nsw i32 %29, %27\l  %31 = mul nsw i32 %30, %27\l  %32 = mul nsw i32 %31, %31\l  %33 = add nsw i32 %32, %31\l  %34 = mul nsw i32 %33, %31\l  %35 = mul nsw i32 %34, %34\l  %36 = add nsw i32 %35, %34\l  %37 = mul nsw i32 %36, %34\l  %38 = mul nsw i32 %37, %37\l  %39 = add nsw i32 %38, %37\l  %40 = mul nsw i32 %39, %37\l  %41 = mul nsw i32 %40, %40\l  %42 = add nsw i32 %41, %40\l  %43 = mul nsw i32 %42, %40\l  %44 = mul nsw i32 %43, %43\l  %45 = add nsw i32 %44, %43\l  %46 = mul nsw i32 %45, %43\l  %47 = mul nsw i32 %46, %46\l  %48 = add nsw i32 %47, %46\l  %49 = mul nsw i32 %48, %46\l  %50 = mul nsw i32 %49, %49\l  %51 = add nsw i32 %50, %49\l  %52 = mul nsw i32 %51, %49\l  %53 = add i32 %28, 8\l  %54 = icmp eq i32 %53, %25\l  br i1 %54, label %55, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56e1110:s0 -> Node0x56e0e80;
	Node0x56e1110:s1 -> Node0x56e1110;
	Node0x56e0e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%55:\l55:                                               \l  %56 = phi i32 [ undef, %18 ], [ %52, %26 ]\l  %57 = phi i32 [ %21, %18 ], [ %52, %26 ]\l  %58 = icmp eq i32 %22, 0\l  br i1 %58, label %67, label %59\l|{<s0>T|<s1>F}}"];
	Node0x56e0e80:s0 -> Node0x56e2b20;
	Node0x56e0e80:s1 -> Node0x56e2b70;
	Node0x56e2b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %64, %59 ], [ %57, %55 ]\l  %61 = phi i32 [ %65, %59 ], [ 0, %55 ]\l  %62 = mul nsw i32 %60, %60\l  %63 = add nsw i32 %62, %60\l  %64 = mul nsw i32 %63, %60\l  %65 = add i32 %61, 1\l  %66 = icmp eq i32 %65, %22\l  br i1 %66, label %67, label %59, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56e2b70:s0 -> Node0x56e2b20;
	Node0x56e2b70:s1 -> Node0x56e2b70;
	Node0x56e2b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%67:\l67:                                               \l  %68 = phi i32 [ %56, %55 ], [ %64, %59 ]\l  store i32 %68, i32 addrspace(1)* %20, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x56e2b20 -> Node0x56e0940;
	Node0x56e0940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%69:\l69:                                               \l  ret void\l}"];
}
