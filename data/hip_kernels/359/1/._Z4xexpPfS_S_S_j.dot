digraph "CFG for '_Z4xexpPfS_S_S_j' function" {
	label="CFG for '_Z4xexpPfS_S_S_j' function";

	Node0x5f43750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = zext i32 %4 to i64\l  %20 = icmp ult i32 %17, %4\l  br i1 %20, label %21, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5f43750:s0 -> Node0x5f45a80;
	Node0x5f43750:s1 -> Node0x5f45b10;
	Node0x5f45a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = zext i32 %17 to i64\l  %23 = mul i32 %18, %11\l  %24 = icmp ugt i32 %14, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %18, %25\l  %27 = mul i32 %26, %11\l  %28 = zext i32 %27 to i64\l  br label %30\l}"];
	Node0x5f45a80 -> Node0x5f45fe0;
	Node0x5f45b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x5f45fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i64 [ %22, %21 ], [ %42, %30 ]\l  %32 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = fsub contract float %35, %37\l  %39 = tail call float @llvm.exp.f32(float %38)\l  %40 = fmul contract float %33, %39\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %40, float addrspace(1)* %41, align 4, !tbaa !16\l  %42 = add i64 %31, %28\l  %43 = icmp ult i64 %42, %19\l  br i1 %43, label %30, label %29, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5f45fe0:s0 -> Node0x5f45fe0;
	Node0x5f45fe0:s1 -> Node0x5f45b10;
}
