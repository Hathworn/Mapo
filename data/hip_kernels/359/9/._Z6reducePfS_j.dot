digraph "CFG for '_Z6reducePfS_j' function" {
	label="CFG for '_Z6reducePfS_j' function";

	Node0x46adee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = shl i32 %5, 1\l  %15 = mul i32 %14, %10\l  %16 = add i32 %15, %4\l  %17 = shl nuw nsw i32 %10, 1\l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %17, %22\l  %24 = icmp ult i32 %16, %2\l  br i1 %24, label %25, label %43\l|{<s0>T|<s1>F}}"];
	Node0x46adee0:s0 -> Node0x46aec80;
	Node0x46adee0:s1 -> Node0x46b0650;
	Node0x46aec80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %41, %39 ], [ %16, %3 ]\l  %27 = phi float [ %40, %39 ], [ 0.000000e+00, %3 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = fadd contract float %27, %30\l  %32 = add i32 %26, %10\l  %33 = icmp ult i32 %32, %2\l  br i1 %33, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x46aec80:s0 -> Node0x46b01c0;
	Node0x46aec80:s1 -> Node0x46b07c0;
	Node0x46b01c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%34:\l34:                                               \l  %35 = zext i32 %32 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %38 = fadd contract float %31, %37\l  br label %39\l}"];
	Node0x46b01c0 -> Node0x46b07c0;
	Node0x46b07c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi float [ %38, %34 ], [ %31, %25 ]\l  %41 = add i32 %26, %23\l  %42 = icmp ult i32 %41, %2\l  br i1 %42, label %25, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x46b07c0:s0 -> Node0x46aec80;
	Node0x46b07c0:s1 -> Node0x46b0650;
	Node0x46b0650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %3 ], [ %40, %39 ]\l  %45 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %4\l  store float %44, float addrspace(3)* %45, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ugt i16 %9, 1023\l  br i1 %46, label %47, label %56\l|{<s0>T|<s1>F}}"];
	Node0x46b0650:s0 -> Node0x46b3260;
	Node0x46b0650:s1 -> Node0x46b32f0;
	Node0x46b3260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%47:\l47:                                               \l  %48 = icmp ult i32 %4, 512\l  br i1 %48, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x46b3260:s0 -> Node0x46b34f0;
	Node0x46b3260:s1 -> Node0x46b3540;
	Node0x46b34f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 512\l  %51 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %50\l  %52 = load float, float addrspace(3)* %51, align 4, !tbaa !16\l  %53 = fadd contract float %44, %52\l  store float %53, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %54\l}"];
	Node0x46b34f0 -> Node0x46b3540;
	Node0x46b3540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  %55 = phi float [ %53, %49 ], [ %44, %47 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %56\l}"];
	Node0x46b3540 -> Node0x46b32f0;
	Node0x46b32f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = phi float [ %55, %54 ], [ %44, %43 ]\l  %58 = icmp ugt i16 %9, 511\l  br i1 %58, label %59, label %68\l|{<s0>T|<s1>F}}"];
	Node0x46b32f0:s0 -> Node0x46b3dd0;
	Node0x46b32f0:s1 -> Node0x46b3e20;
	Node0x46b3dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%59:\l59:                                               \l  %60 = icmp ult i32 %4, 256\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x46b3dd0:s0 -> Node0x46b3fb0;
	Node0x46b3dd0:s1 -> Node0x46b4000;
	Node0x46b3fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %4, 256\l  %63 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !16\l  %65 = fadd contract float %57, %64\l  store float %65, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %66\l}"];
	Node0x46b3fb0 -> Node0x46b4000;
	Node0x46b4000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%66:\l66:                                               \l  %67 = phi float [ %65, %61 ], [ %57, %59 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %68\l}"];
	Node0x46b4000 -> Node0x46b3e20;
	Node0x46b3e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%68:\l68:                                               \l  %69 = phi float [ %67, %66 ], [ %57, %56 ]\l  %70 = icmp ugt i16 %9, 255\l  br i1 %70, label %71, label %80\l|{<s0>T|<s1>F}}"];
	Node0x46b3e20:s0 -> Node0x46b4ac0;
	Node0x46b3e20:s1 -> Node0x46b4b10;
	Node0x46b4ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%71:\l71:                                               \l  %72 = icmp ult i32 %4, 128\l  br i1 %72, label %73, label %78\l|{<s0>T|<s1>F}}"];
	Node0x46b4ac0:s0 -> Node0x46b4ca0;
	Node0x46b4ac0:s1 -> Node0x46b4cf0;
	Node0x46b4ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %4, 128\l  %75 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !16\l  %77 = fadd contract float %69, %76\l  store float %77, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %78\l}"];
	Node0x46b4ca0 -> Node0x46b4cf0;
	Node0x46b4cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%78:\l78:                                               \l  %79 = phi float [ %77, %73 ], [ %69, %71 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %80\l}"];
	Node0x46b4cf0 -> Node0x46b4b10;
	Node0x46b4b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %78 ], [ %69, %68 ]\l  %82 = icmp ugt i16 %9, 127\l  br i1 %82, label %83, label %92\l|{<s0>T|<s1>F}}"];
	Node0x46b4b10:s0 -> Node0x46b5540;
	Node0x46b4b10:s1 -> Node0x46b5590;
	Node0x46b5540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%83:\l83:                                               \l  %84 = icmp ult i32 %4, 64\l  br i1 %84, label %85, label %90\l|{<s0>T|<s1>F}}"];
	Node0x46b5540:s0 -> Node0x46b5750;
	Node0x46b5540:s1 -> Node0x46b57a0;
	Node0x46b5750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %4, 64\l  %87 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !16\l  %89 = fadd contract float %81, %88\l  store float %89, float addrspace(3)* %45, align 4, !tbaa !16\l  br label %90\l}"];
	Node0x46b5750 -> Node0x46b57a0;
	Node0x46b57a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%90:\l90:                                               \l  %91 = phi float [ %89, %85 ], [ %81, %83 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %92\l}"];
	Node0x46b57a0 -> Node0x46b5590;
	Node0x46b5590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%92:\l92:                                               \l  %93 = phi float [ %91, %90 ], [ %81, %80 ]\l  %94 = icmp ult i32 %4, 32\l  br i1 %94, label %95, label %154\l|{<s0>T|<s1>F}}"];
	Node0x46b5590:s0 -> Node0x46b5ff0;
	Node0x46b5590:s1 -> Node0x46b6040;
	Node0x46b5ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%95:\l95:                                               \l  %96 = icmp ugt i16 %9, 63\l  br i1 %96, label %97, label %104\l|{<s0>T|<s1>F}}"];
	Node0x46b5ff0:s0 -> Node0x46b6200;
	Node0x46b5ff0:s1 -> Node0x46b6250;
	Node0x46b6200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%97:\l97:                                               \l  %98 = add nuw nsw i32 %4, 32\l  %99 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %98\l  %100 = addrspacecast float addrspace(3)* %99 to float*\l  %101 = load volatile float, float* %100, align 4, !tbaa !16\l  %102 = fadd contract float %93, %101\l  %103 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %102, float* %103, align 4, !tbaa !16\l  br label %104\l}"];
	Node0x46b6200 -> Node0x46b6250;
	Node0x46b6250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%104:\l104:                                              \l  %105 = phi float [ %102, %97 ], [ %93, %95 ]\l  %106 = icmp ugt i16 %9, 31\l  br i1 %106, label %107, label %114\l|{<s0>T|<s1>F}}"];
	Node0x46b6250:s0 -> Node0x46b68f0;
	Node0x46b6250:s1 -> Node0x46b6940;
	Node0x46b68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%107:\l107:                                              \l  %108 = add nuw nsw i32 %4, 16\l  %109 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %108\l  %110 = addrspacecast float addrspace(3)* %109 to float*\l  %111 = load volatile float, float* %110, align 4, !tbaa !16\l  %112 = fadd contract float %105, %111\l  %113 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %112, float* %113, align 4, !tbaa !16\l  br label %114\l}"];
	Node0x46b68f0 -> Node0x46b6940;
	Node0x46b6940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%114:\l114:                                              \l  %115 = phi float [ %112, %107 ], [ %105, %104 ]\l  %116 = icmp ugt i16 %9, 15\l  br i1 %116, label %117, label %124\l|{<s0>T|<s1>F}}"];
	Node0x46b6940:s0 -> Node0x46b7010;
	Node0x46b6940:s1 -> Node0x46b7060;
	Node0x46b7010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%117:\l117:                                              \l  %118 = add nuw nsw i32 %4, 8\l  %119 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %118\l  %120 = addrspacecast float addrspace(3)* %119 to float*\l  %121 = load volatile float, float* %120, align 4, !tbaa !16\l  %122 = fadd contract float %115, %121\l  %123 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %122, float* %123, align 4, !tbaa !16\l  br label %124\l}"];
	Node0x46b7010 -> Node0x46b7060;
	Node0x46b7060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%124:\l124:                                              \l  %125 = phi float [ %122, %117 ], [ %115, %114 ]\l  %126 = icmp ugt i16 %9, 7\l  br i1 %126, label %127, label %134\l|{<s0>T|<s1>F}}"];
	Node0x46b7060:s0 -> Node0x46b7730;
	Node0x46b7060:s1 -> Node0x46b7780;
	Node0x46b7730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%127:\l127:                                              \l  %128 = add nuw nsw i32 %4, 4\l  %129 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %128\l  %130 = addrspacecast float addrspace(3)* %129 to float*\l  %131 = load volatile float, float* %130, align 4, !tbaa !16\l  %132 = fadd contract float %125, %131\l  %133 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %132, float* %133, align 4, !tbaa !16\l  br label %134\l}"];
	Node0x46b7730 -> Node0x46b7780;
	Node0x46b7780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%134:\l134:                                              \l  %135 = phi float [ %132, %127 ], [ %125, %124 ]\l  %136 = icmp ugt i16 %9, 3\l  br i1 %136, label %137, label %144\l|{<s0>T|<s1>F}}"];
	Node0x46b7780:s0 -> Node0x46b8290;
	Node0x46b7780:s1 -> Node0x46b82e0;
	Node0x46b8290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%137:\l137:                                              \l  %138 = add nuw nsw i32 %4, 2\l  %139 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %138\l  %140 = addrspacecast float addrspace(3)* %139 to float*\l  %141 = load volatile float, float* %140, align 4, !tbaa !16\l  %142 = fadd contract float %135, %141\l  %143 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %142, float* %143, align 4, !tbaa !16\l  br label %144\l}"];
	Node0x46b8290 -> Node0x46b82e0;
	Node0x46b82e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%144:\l144:                                              \l  %145 = phi float [ %142, %137 ], [ %135, %134 ]\l  %146 = icmp ugt i16 %9, 1\l  br i1 %146, label %147, label %154\l|{<s0>T|<s1>F}}"];
	Node0x46b82e0:s0 -> Node0x46b8980;
	Node0x46b82e0:s1 -> Node0x46b6040;
	Node0x46b8980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%147:\l147:                                              \l  %148 = add nuw nsw i32 %4, 1\l  %149 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sdata,\l... i32 0, i32 %148\l  %150 = addrspacecast float addrspace(3)* %149 to float*\l  %151 = load volatile float, float* %150, align 4, !tbaa !16\l  %152 = fadd contract float %145, %151\l  %153 = addrspacecast float addrspace(3)* %45 to float*\l  store volatile float %152, float* %153, align 4, !tbaa !16\l  br label %154\l}"];
	Node0x46b8980 -> Node0x46b6040;
	Node0x46b6040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%154:\l154:                                              \l  %155 = icmp eq i32 %4, 0\l  br i1 %155, label %156, label %160\l|{<s0>T|<s1>F}}"];
	Node0x46b6040:s0 -> Node0x46b8f70;
	Node0x46b6040:s1 -> Node0x46b8fc0;
	Node0x46b8f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%156:\l156:                                              \l  %157 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %158 = zext i32 %5 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  store float %157, float addrspace(1)* %159, align 4, !tbaa !16\l  br label %160\l}"];
	Node0x46b8f70 -> Node0x46b8fc0;
	Node0x46b8fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%160:\l160:                                              \l  ret void\l}"];
}
