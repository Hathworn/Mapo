digraph "CFG for '_Z14inclusive_scanPKjPji' function" {
	label="CFG for '_Z14inclusive_scanPKjPji' function";

	Node0x5858330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5858330:s0 -> Node0x585a230;
	Node0x5858330:s1 -> Node0x585a2c0;
	Node0x585a230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%14:\l14:                                               \l  %15 = zext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %18 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %11\l  store i32 %17, i32 addrspace(3)* %18, align 4, !tbaa !7\l  br label %19\l}"];
	Node0x585a230 -> Node0x585a2c0;
	Node0x585a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = icmp eq i32 %11, 0\l  br i1 %20, label %21, label %23\l|{<s0>T|<s1>F}}"];
	Node0x585a2c0:s0 -> Node0x585b610;
	Node0x585a2c0:s1 -> Node0x585b660;
	Node0x585b610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%21:\l21:                                               \l  %22 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @XY, i32 0, i32 0), align 4, !tbaa !7\l  br label %25\l}"];
	Node0x585b610 -> Node0x585bae0;
	Node0x585b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %11\l  br label %30\l}"];
	Node0x585b660 -> Node0x585bc60;
	Node0x585bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  %26 = phi i32 [ %22, %21 ], [ %36, %30 ]\l  %27 = zext i32 %12 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  store i32 %26, i32 addrspace(1)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = icmp ult i32 %11, %4\l  br i1 %29, label %39, label %46\l|{<s0>T|<s1>F}}"];
	Node0x585bae0:s0 -> Node0x585c310;
	Node0x585bae0:s1 -> Node0x585c3a0;
	Node0x585bc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ 1, %23 ], [ %37, %30 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = sub i32 %11, %31\l  %33 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %32\l  %34 = load i32, i32 addrspace(3)* %33, align 4, !tbaa !7\l  %35 = load i32, i32 addrspace(3)* %24, align 4, !tbaa !7\l  %36 = add nsw i32 %35, %34\l  store i32 %36, i32 addrspace(3)* %24, align 4, !tbaa !7\l  %37 = shl nuw nsw i32 %31, 1\l  %38 = icmp ult i32 %11, %37\l  br i1 %38, label %25, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x585bc60:s0 -> Node0x585bae0;
	Node0x585bc60:s1 -> Node0x585bc60;
	Node0x585c310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %11\l  %41 = mul nuw nsw i32 %11, %9\l  %42 = add nuw nsw i32 %41, 3\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7\l  store i32 %45, i32 addrspace(3)* %40, align 4, !tbaa !7\l  br label %46\l}"];
	Node0x585c310 -> Node0x585c3a0;
	Node0x585c3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%46:\l46:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = icmp eq i32 %4, 0\l  br i1 %47, label %48, label %49\l|{<s0>T|<s1>F}}"];
	Node0x585c3a0:s0 -> Node0x585d4e0;
	Node0x585c3a0:s1 -> Node0x585d530;
	Node0x585d4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%48:\l48:                                               \l  ret void\l}"];
	Node0x585d530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i32 [ %55, %49 ], [ 0, %46 ]\l  %51 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %50\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !7\l  %53 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7\l  %54 = add i32 %53, %52\l  store i32 %54, i32 addrspace(1)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = add nuw nsw i32 %50, 1\l  %56 = icmp eq i32 %55, %4\l  br i1 %56, label %48, label %49, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x585d530:s0 -> Node0x585d4e0;
	Node0x585d530:s1 -> Node0x585d530;
}
