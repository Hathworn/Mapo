digraph "CFG for '_Z26work_efficient_scan_kernelPiS_i' function" {
	label="CFG for '_Z26work_efficient_scan_kernelPiS_i' function";

	Node0x5a584d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5a584d0:s0 -> Node0x5a5a410;
	Node0x5a584d0:s1 -> Node0x5a5a4a0;
	Node0x5a5a410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %18 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %11\l  store i32 %17, i32 addrspace(3)* %18, align 4, !tbaa !7\l  br label %19\l}"];
	Node0x5a5a410 -> Node0x5a5a4a0;
	Node0x5a5a4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%19:\l19:                                               \l  %20 = icmp ugt i16 %8, 1\l  %21 = shl nuw nsw i32 %11, 1\l  %22 = add nuw nsw i32 %21, 2\l  br i1 %20, label %26, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5a5a4a0:s0 -> Node0x5a5b9a0;
	Node0x5a5a4a0:s1 -> Node0x5a5b9f0;
	Node0x5a5b9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%23:\l23:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %24 = shl nuw nsw i32 %22, 6\l  %25 = icmp eq i32 %11, 0\l  br i1 %25, label %41, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5a5b9f0:s0 -> Node0x5a5bf60;
	Node0x5a5b9f0:s1 -> Node0x5a5bfb0;
	Node0x5a5b9a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %39, %38 ], [ 1, %19 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = mul i32 %27, %22\l  %29 = add i32 %28, -1\l  %30 = icmp ult i32 %29, %9\l  br i1 %30, label %31, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5a5b9a0:s0 -> Node0x5a5c630;
	Node0x5a5b9a0:s1 -> Node0x5a5c120;
	Node0x5a5c630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%31:\l31:                                               \l  %32 = sub i32 %29, %27\l  %33 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %32\l  %34 = load i32, i32 addrspace(3)* %33, align 4, !tbaa !7\l  %35 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %29\l  %36 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !7\l  %37 = add nsw i32 %36, %34\l  store i32 %37, i32 addrspace(3)* %35, align 4, !tbaa !7\l  br label %38\l}"];
	Node0x5a5c630 -> Node0x5a5c120;
	Node0x5a5c120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = shl i32 %27, 1\l  %40 = icmp ult i32 %39, %9\l  br i1 %40, label %26, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a5c120:s0 -> Node0x5a5b9a0;
	Node0x5a5c120:s1 -> Node0x5a5b9f0;
	Node0x5a5bf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %24, 63\l  %43 = add nsw i32 %24, -1\l  %44 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %43\l  %45 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !7\l  %46 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %42\l  %47 = load i32, i32 addrspace(3)* %46, align 4, !tbaa !7\l  %48 = add nsw i32 %47, %45\l  store i32 %48, i32 addrspace(3)* %46, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x5a5bf60 -> Node0x5a5bfb0;
	Node0x5a5bfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = shl nuw nsw i32 %22, 5\l  %51 = icmp ult i32 %11, 3\l  br i1 %51, label %52, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5a5bfb0:s0 -> Node0x5a5d6d0;
	Node0x5a5bfb0:s1 -> Node0x5a5d720;
	Node0x5a5d6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%52:\l52:                                               \l  %53 = add nuw nsw i32 %50, 31\l  %54 = add nsw i32 %50, -1\l  %55 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %54\l  %56 = load i32, i32 addrspace(3)* %55, align 4, !tbaa !7\l  %57 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %53\l  %58 = load i32, i32 addrspace(3)* %57, align 4, !tbaa !7\l  %59 = add nsw i32 %58, %56\l  store i32 %59, i32 addrspace(3)* %57, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x5a5d6d0 -> Node0x5a5d720;
	Node0x5a5d720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%60:\l60:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = shl nuw nsw i32 %22, 4\l  %62 = icmp ult i32 %11, 7\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5a5d720:s0 -> Node0x5a5e050;
	Node0x5a5d720:s1 -> Node0x5a5e0a0;
	Node0x5a5e050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%63:\l63:                                               \l  %64 = add nuw nsw i32 %61, 15\l  %65 = add nsw i32 %61, -1\l  %66 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %65\l  %67 = load i32, i32 addrspace(3)* %66, align 4, !tbaa !7\l  %68 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %64\l  %69 = load i32, i32 addrspace(3)* %68, align 4, !tbaa !7\l  %70 = add nsw i32 %69, %67\l  store i32 %70, i32 addrspace(3)* %68, align 4, !tbaa !7\l  br label %71\l}"];
	Node0x5a5e050 -> Node0x5a5e0a0;
	Node0x5a5e0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = shl nuw nsw i32 %22, 3\l  %73 = icmp ult i32 %11, 15\l  br i1 %73, label %74, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5a5e0a0:s0 -> Node0x5a5ebc0;
	Node0x5a5e0a0:s1 -> Node0x5a5ec10;
	Node0x5a5ebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%74:\l74:                                               \l  %75 = add nuw nsw i32 %72, 7\l  %76 = add nsw i32 %72, -1\l  %77 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %76\l  %78 = load i32, i32 addrspace(3)* %77, align 4, !tbaa !7\l  %79 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %75\l  %80 = load i32, i32 addrspace(3)* %79, align 4, !tbaa !7\l  %81 = add nsw i32 %80, %78\l  store i32 %81, i32 addrspace(3)* %79, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x5a5ebc0 -> Node0x5a5ec10;
	Node0x5a5ec10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = shl nuw nsw i32 %22, 2\l  %84 = icmp ult i32 %11, 31\l  br i1 %84, label %85, label %93\l|{<s0>T|<s1>F}}"];
	Node0x5a5ec10:s0 -> Node0x5a5f4b0;
	Node0x5a5ec10:s1 -> Node0x5a5f500;
	Node0x5a5f4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %83, 3\l  %87 = add nsw i32 %83, -1\l  %88 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %87\l  %89 = load i32, i32 addrspace(3)* %88, align 4, !tbaa !7\l  %90 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %86\l  %91 = load i32, i32 addrspace(3)* %90, align 4, !tbaa !7\l  %92 = add nsw i32 %91, %89\l  store i32 %92, i32 addrspace(3)* %90, align 4, !tbaa !7\l  br label %93\l}"];
	Node0x5a5f4b0 -> Node0x5a5f500;
	Node0x5a5f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%93:\l93:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %94 = shl nuw nsw i32 %22, 1\l  %95 = icmp ult i32 %11, 63\l  br i1 %95, label %96, label %104\l|{<s0>T|<s1>F}}"];
	Node0x5a5f500:s0 -> Node0x5a5fda0;
	Node0x5a5f500:s1 -> Node0x5a5fdf0;
	Node0x5a5fda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%96:\l96:                                               \l  %97 = add nuw nsw i32 %94, 1\l  %98 = add nsw i32 %94, -1\l  %99 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %98\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !7\l  %101 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %97\l  %102 = load i32, i32 addrspace(3)* %101, align 4, !tbaa !7\l  %103 = add nsw i32 %102, %100\l  store i32 %103, i32 addrspace(3)* %101, align 4, !tbaa !7\l  br label %104\l}"];
	Node0x5a5fda0 -> Node0x5a5fdf0;
	Node0x5a5fdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%104:\l104:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %105 = icmp ult i32 %11, 127\l  br i1 %105, label %106, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5a5fdf0:s0 -> Node0x5a60600;
	Node0x5a5fdf0:s1 -> Node0x5a60650;
	Node0x5a60600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%106:\l106:                                              \l  %107 = add nuw nsw i32 %21, 1\l  %108 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %107\l  %109 = load i32, i32 addrspace(3)* %108, align 4, !tbaa !7\l  %110 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %22\l  %111 = load i32, i32 addrspace(3)* %110, align 4, !tbaa !7\l  %112 = add nsw i32 %111, %109\l  store i32 %112, i32 addrspace(3)* %110, align 4, !tbaa !7\l  br label %113\l}"];
	Node0x5a60600 -> Node0x5a60650;
	Node0x5a60650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%113:\l113:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %114 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %11\l  %115 = load i32, i32 addrspace(3)* %114, align 4, !tbaa !7\l  %116 = sext i32 %12 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %116\l  store i32 %115, i32 addrspace(1)* %117, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %118 = icmp ult i32 %11, %4\l  br i1 %118, label %119, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5a60650:s0 -> Node0x5a61240;
	Node0x5a60650:s1 -> Node0x5a61290;
	Node0x5a61240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%119:\l119:                                              \l  %120 = mul nuw nsw i32 %11, %9\l  %121 = add nsw i32 %9, -1\l  %122 = add nsw i32 %121, %120\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !7\l  store i32 %125, i32 addrspace(3)* %114, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x5a61240 -> Node0x5a61290;
	Node0x5a61290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%126:\l126:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %127 = icmp eq i32 %4, 0\l  br i1 %127, label %151, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5a61290:s0 -> Node0x5a619c0;
	Node0x5a61290:s1 -> Node0x5a61a10;
	Node0x5a61a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%128:\l128:                                              \l  %129 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !7\l  %130 = and i32 %4, 7\l  %131 = icmp ult i32 %4, 8\l  br i1 %131, label %134, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5a61a10:s0 -> Node0x5a5e3f0;
	Node0x5a61a10:s1 -> Node0x5a5e440;
	Node0x5a5e440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%132:\l132:                                              \l  %133 = and i32 %4, -8\l  br label %152\l}"];
	Node0x5a5e440 -> Node0x5a62320;
	Node0x5a5e3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%134:\l134:                                              \l  %135 = phi i32 [ undef, %128 ], [ %186, %152 ]\l  %136 = phi i32 [ %129, %128 ], [ %186, %152 ]\l  %137 = phi i32 [ 0, %128 ], [ %187, %152 ]\l  %138 = icmp eq i32 %130, 0\l  br i1 %138, label %149, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5a5e3f0:s0 -> Node0x5a62b00;
	Node0x5a5e3f0:s1 -> Node0x5a62b90;
	Node0x5a62b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%139:\l139:                                              \l  %140 = phi i32 [ %145, %139 ], [ %136, %134 ]\l  %141 = phi i32 [ %146, %139 ], [ %137, %134 ]\l  %142 = phi i32 [ %147, %139 ], [ 0, %134 ]\l  %143 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %141\l  %144 = load i32, i32 addrspace(3)* %143, align 4, !tbaa !7\l  %145 = add nsw i32 %140, %144\l  %146 = add nuw i32 %141, 1\l  %147 = add i32 %142, 1\l  %148 = icmp eq i32 %147, %130\l  br i1 %148, label %149, label %139, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a62b90:s0 -> Node0x5a62b00;
	Node0x5a62b90:s1 -> Node0x5a62b90;
	Node0x5a62b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%149:\l149:                                              \l  %150 = phi i32 [ %135, %134 ], [ %145, %139 ]\l  store i32 %150, i32 addrspace(1)* %117, align 4, !tbaa !7\l  br label %151\l}"];
	Node0x5a62b00 -> Node0x5a619c0;
	Node0x5a619c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%151:\l151:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x5a62320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%152:\l152:                                              \l  %153 = phi i32 [ %129, %132 ], [ %186, %152 ]\l  %154 = phi i32 [ 0, %132 ], [ %187, %152 ]\l  %155 = phi i32 [ 0, %132 ], [ %188, %152 ]\l  %156 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %154\l  %157 = load i32, i32 addrspace(3)* %156, align 4, !tbaa !7\l  %158 = add nsw i32 %153, %157\l  %159 = or i32 %154, 1\l  %160 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %159\l  %161 = load i32, i32 addrspace(3)* %160, align 4, !tbaa !7\l  %162 = add nsw i32 %158, %161\l  %163 = or i32 %154, 2\l  %164 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %163\l  %165 = load i32, i32 addrspace(3)* %164, align 4, !tbaa !7\l  %166 = add nsw i32 %162, %165\l  %167 = or i32 %154, 3\l  %168 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %167\l  %169 = load i32, i32 addrspace(3)* %168, align 4, !tbaa !7\l  %170 = add nsw i32 %166, %169\l  %171 = or i32 %154, 4\l  %172 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %171\l  %173 = load i32, i32 addrspace(3)* %172, align 4, !tbaa !7\l  %174 = add nsw i32 %170, %173\l  %175 = or i32 %154, 5\l  %176 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %175\l  %177 = load i32, i32 addrspace(3)* %176, align 4, !tbaa !7\l  %178 = add nsw i32 %174, %177\l  %179 = or i32 %154, 6\l  %180 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %179\l  %181 = load i32, i32 addrspace(3)* %180, align 4, !tbaa !7\l  %182 = add nsw i32 %178, %181\l  %183 = or i32 %154, 7\l  %184 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @XY, i32 0,\l... i32 %183\l  %185 = load i32, i32 addrspace(3)* %184, align 4, !tbaa !7\l  %186 = add nsw i32 %182, %185\l  %187 = add nuw i32 %154, 8\l  %188 = add i32 %155, 8\l  %189 = icmp eq i32 %188, %133\l  br i1 %189, label %134, label %152, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5a62320:s0 -> Node0x5a5e3f0;
	Node0x5a62320:s1 -> Node0x5a62320;
}
