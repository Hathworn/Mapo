digraph "CFG for '_Z13counting_sortPiS_i' function" {
	label="CFG for '_Z13counting_sortPiS_i' function";

	Node0x5422540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5422540:s0 -> Node0x54232d0;
	Node0x5422540:s1 -> Node0x54244d0;
	Node0x54232d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = icmp sgt i32 %2, 0\l  %16 = sext i32 %12 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7\l  br i1 %15, label %19, label %143\l|{<s0>T|<s1>F}}"];
	Node0x54232d0:s0 -> Node0x54249f0;
	Node0x54232d0:s1 -> Node0x5424a80;
	Node0x54249f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  br i1 %21, label %118, label %22\l|{<s0>T|<s1>F}}"];
	Node0x54249f0:s0 -> Node0x5424d10;
	Node0x54249f0:s1 -> Node0x5424d60;
	Node0x5424d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %2, -8\l  br label %24\l}"];
	Node0x5424d60 -> Node0x5424f60;
	Node0x5424f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %22 ], [ %114, %24 ]\l  %26 = phi i32 [ 0, %22 ], [ %115, %24 ]\l  %27 = phi i32 [ 0, %22 ], [ %116, %24 ]\l  %28 = zext i32 %26 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = icmp slt i32 %30, %18\l  %32 = icmp eq i32 %18, %30\l  %33 = icmp slt i32 %26, %12\l  %34 = select i1 %32, i1 %33, i1 false\l  %35 = select i1 %31, i1 true, i1 %34\l  %36 = zext i1 %35 to i32\l  %37 = add nuw nsw i32 %25, %36\l  %38 = or i32 %26, 1\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = icmp slt i32 %41, %18\l  %43 = icmp eq i32 %18, %41\l  %44 = icmp slt i32 %38, %12\l  %45 = select i1 %43, i1 %44, i1 false\l  %46 = select i1 %42, i1 true, i1 %45\l  %47 = zext i1 %46 to i32\l  %48 = add nuw nsw i32 %37, %47\l  %49 = or i32 %26, 2\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %53 = icmp slt i32 %52, %18\l  %54 = icmp eq i32 %18, %52\l  %55 = icmp slt i32 %49, %12\l  %56 = select i1 %54, i1 %55, i1 false\l  %57 = select i1 %53, i1 true, i1 %56\l  %58 = zext i1 %57 to i32\l  %59 = add nuw nsw i32 %48, %58\l  %60 = or i32 %26, 3\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %64 = icmp slt i32 %63, %18\l  %65 = icmp eq i32 %18, %63\l  %66 = icmp slt i32 %60, %12\l  %67 = select i1 %65, i1 %66, i1 false\l  %68 = select i1 %64, i1 true, i1 %67\l  %69 = zext i1 %68 to i32\l  %70 = add nuw nsw i32 %59, %69\l  %71 = or i32 %26, 4\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %75 = icmp slt i32 %74, %18\l  %76 = icmp eq i32 %18, %74\l  %77 = icmp slt i32 %71, %12\l  %78 = select i1 %76, i1 %77, i1 false\l  %79 = select i1 %75, i1 true, i1 %78\l  %80 = zext i1 %79 to i32\l  %81 = add nuw nsw i32 %70, %80\l  %82 = or i32 %26, 5\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %86 = icmp slt i32 %85, %18\l  %87 = icmp eq i32 %18, %85\l  %88 = icmp slt i32 %82, %12\l  %89 = select i1 %87, i1 %88, i1 false\l  %90 = select i1 %86, i1 true, i1 %89\l  %91 = zext i1 %90 to i32\l  %92 = add nuw nsw i32 %81, %91\l  %93 = or i32 %26, 6\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %97 = icmp slt i32 %96, %18\l  %98 = icmp eq i32 %18, %96\l  %99 = icmp slt i32 %93, %12\l  %100 = select i1 %98, i1 %99, i1 false\l  %101 = select i1 %97, i1 true, i1 %100\l  %102 = zext i1 %101 to i32\l  %103 = add nuw nsw i32 %92, %102\l  %104 = or i32 %26, 7\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = icmp slt i32 %107, %18\l  %109 = icmp eq i32 %18, %107\l  %110 = icmp slt i32 %104, %12\l  %111 = select i1 %109, i1 %110, i1 false\l  %112 = select i1 %108, i1 true, i1 %111\l  %113 = zext i1 %112 to i32\l  %114 = add nuw nsw i32 %103, %113\l  %115 = add nuw nsw i32 %26, 8\l  %116 = add i32 %27, 8\l  %117 = icmp eq i32 %116, %23\l  br i1 %117, label %118, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5424f60:s0 -> Node0x5424d10;
	Node0x5424f60:s1 -> Node0x5424f60;
	Node0x5424d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%118:\l118:                                              \l  %119 = phi i32 [ undef, %19 ], [ %114, %24 ]\l  %120 = phi i32 [ 0, %19 ], [ %114, %24 ]\l  %121 = phi i32 [ 0, %19 ], [ %115, %24 ]\l  %122 = icmp eq i32 %20, 0\l  br i1 %122, label %140, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5424d10:s0 -> Node0x542a070;
	Node0x5424d10:s1 -> Node0x542a0c0;
	Node0x542a0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi i32 [ %136, %123 ], [ %120, %118 ]\l  %125 = phi i32 [ %137, %123 ], [ %121, %118 ]\l  %126 = phi i32 [ %138, %123 ], [ 0, %118 ]\l  %127 = zext i32 %125 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %130 = icmp slt i32 %129, %18\l  %131 = icmp eq i32 %18, %129\l  %132 = icmp slt i32 %125, %12\l  %133 = select i1 %131, i1 %132, i1 false\l  %134 = select i1 %130, i1 true, i1 %133\l  %135 = zext i1 %134 to i32\l  %136 = add nuw nsw i32 %124, %135\l  %137 = add nuw nsw i32 %125, 1\l  %138 = add i32 %126, 1\l  %139 = icmp eq i32 %138, %20\l  br i1 %139, label %140, label %123, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x542a0c0:s0 -> Node0x542a070;
	Node0x542a0c0:s1 -> Node0x542a0c0;
	Node0x542a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%140:\l140:                                              \l  %141 = phi i32 [ %119, %118 ], [ %136, %123 ]\l  %142 = zext i32 %141 to i64\l  br label %143\l}"];
	Node0x542a070 -> Node0x5424a80;
	Node0x5424a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%143:\l143:                                              \l  %144 = phi i64 [ 0, %14 ], [ %142, %140 ]\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %144\l  store i32 %18, i32 addrspace(1)* %145, align 4, !tbaa !7\l  br label %146\l}"];
	Node0x5424a80 -> Node0x54244d0;
	Node0x54244d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%146:\l146:                                              \l  ret void\l}"];
}
