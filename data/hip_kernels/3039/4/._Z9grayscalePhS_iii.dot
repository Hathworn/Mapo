digraph "CFG for '_Z9grayscalePhS_iii' function" {
	label="CFG for '_Z9grayscalePhS_iii' function";

	Node0x63f1ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 2, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %14, %3\l  %24 = icmp slt i32 %22, %2\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %71\l|{<s0>T|<s1>F}}"];
	Node0x63f1ab0:s0 -> Node0x63f5520;
	Node0x63f1ab0:s1 -> Node0x63f55b0;
	Node0x63f5520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %14, %2\l  %28 = add nsw i32 %27, %22\l  %29 = mul nsw i32 %28, %4\l  %30 = add nsw i32 %29, 2\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %34 = uitofp i8 %33 to float\l  %35 = add nsw i32 %29, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %39 = uitofp i8 %38 to float\l  %40 = sext i32 %29 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = uitofp i8 %42 to float\l  %44 = fmul contract float %34, 0x3FD926E980000000\l  %45 = fmul contract float %39, 0x3FE89BA5E0000000\l  %46 = fadd contract float %44, %45\l  %47 = fmul contract float %43, 0x3FC83126E0000000\l  %48 = fadd contract float %46, %47\l  %49 = fcmp contract oge float %48, 2.550000e+02\l  %50 = select contract i1 %49, float 2.550000e+02, float %48\l  %51 = fptoui float %50 to i8\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %31\l  store i8 %51, i8 addrspace(1)* %52, align 1, !tbaa !7\l  %53 = fmul contract float %34, 0x3FD6560420000000\l  %54 = fmul contract float %39, 0x3FE5F3B640000000\l  %55 = fadd contract float %53, %54\l  %56 = fmul contract float %43, 0x3FC5810620000000\l  %57 = fadd contract float %55, %56\l  %58 = fcmp contract oge float %57, 2.550000e+02\l  %59 = select contract i1 %58, float 2.550000e+02, float %57\l  %60 = fptoui float %59 to i8\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %36\l  store i8 %60, i8 addrspace(1)* %61, align 1, !tbaa !7\l  %62 = fmul contract float %34, 0x3FD16872C0000000\l  %63 = fmul contract float %39, 0x3FE1168720000000\l  %64 = fadd contract float %62, %63\l  %65 = fmul contract float %43, 0x3FC0C49BA0000000\l  %66 = fadd contract float %64, %65\l  %67 = fcmp contract oge float %66, 2.550000e+02\l  %68 = select contract i1 %67, float 2.550000e+02, float %66\l  %69 = fptoui float %68 to i8\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %40\l  store i8 %69, i8 addrspace(1)* %70, align 1, !tbaa !7\l  br label %71\l}"];
	Node0x63f5520 -> Node0x63f55b0;
	Node0x63f55b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
