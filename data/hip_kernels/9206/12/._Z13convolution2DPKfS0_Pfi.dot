digraph "CFG for '_Z13convolution2DPKfS0_Pfi' function" {
	label="CFG for '_Z13convolution2DPKfS0_Pfi' function";

	Node0x4521720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = freeze i32 %5\l  %7 = freeze i32 %3\l  %8 = udiv i32 %6, %7\l  %9 = mul i32 %8, %7\l  %10 = sub i32 %6, %9\l  %11 = mul nsw i32 %8, %3\l  %12 = add nsw i32 %11, %10\l  %13 = icmp slt i32 %8, %3\l  %14 = icmp slt i32 %10, %3\l  %15 = and i1 %13, %14\l  br i1 %15, label %16, label %137\l|{<s0>T|<s1>F}}"];
	Node0x4521720:s0 -> Node0x4521770;
	Node0x4521720:s1 -> Node0x4522b00;
	Node0x4521770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%16:\l16:                                               \l  %17 = add nsw i32 %8, -1\l  %18 = add nsw i32 %10, -1\l  %19 = icmp uge i32 %5, %3\l  %20 = mul nsw i32 %17, %3\l  %21 = icmp ne i32 %10, 0\l  %22 = and i1 %21, %19\l  br i1 %22, label %99, label %107\l|{<s0>T|<s1>F}}"];
	Node0x4521770:s0 -> Node0x4523630;
	Node0x4521770:s1 -> Node0x45236c0;
	Node0x4523800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%23:\l23:                                               \l  %24 = add nsw i32 %18, %11\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 3\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fmul contract float %27, %29\l  %31 = fadd contract float %133, %30\l  br label %32\l}"];
	Node0x4523800 -> Node0x4524c90;
	Node0x4524c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = phi float [ %31, %23 ], [ %133, %132 ]\l  %34 = sext i32 %12 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 4\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %39 = fmul contract float %36, %38\l  %40 = fadd contract float %33, %39\l  %41 = add nuw nsw i32 %10, 1\l  %42 = icmp slt i32 %41, %3\l  br i1 %42, label %43, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4524c90:s0 -> Node0x4525550;
	Node0x4524c90:s1 -> Node0x45255e0;
	Node0x4525550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%43:\l43:                                               \l  %44 = add nsw i32 %41, %11\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 5\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = fmul contract float %47, %49\l  %51 = fadd contract float %40, %50\l  br label %52\l}"];
	Node0x4525550 -> Node0x45255e0;
	Node0x45255e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = phi float [ %51, %43 ], [ %40, %32 ]\l  %54 = add nuw nsw i32 %8, 1\l  %55 = icmp slt i32 %54, %3\l  %56 = mul nsw i32 %54, %3\l  %57 = icmp ne i32 %10, 0\l  %58 = select i1 %55, i1 %57, i1 false\l  %59 = icmp sle i32 %10, %3\l  %60 = select i1 %58, i1 %59, i1 false\l  br i1 %60, label %61, label %70\l|{<s0>T|<s1>F}}"];
	Node0x45255e0:s0 -> Node0x4526150;
	Node0x45255e0:s1 -> Node0x45261a0;
	Node0x4526150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%61:\l61:                                               \l  %62 = add nsw i32 %18, %56\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 6\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %68 = fmul contract float %65, %67\l  %69 = fadd contract float %53, %68\l  br label %70\l}"];
	Node0x4526150 -> Node0x45261a0;
	Node0x45261a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%70:\l70:                                               \l  %71 = phi float [ %69, %61 ], [ %53, %52 ]\l  br i1 %55, label %72, label %81\l|{<s0>T|<s1>F}}"];
	Node0x45261a0:s0 -> Node0x4526b10;
	Node0x45261a0:s1 -> Node0x4526b60;
	Node0x4526b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%72:\l72:                                               \l  %73 = add nsw i32 %10, %56\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 7\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %79 = fmul contract float %76, %78\l  %80 = fadd contract float %71, %79\l  br label %81\l}"];
	Node0x4526b10 -> Node0x4526b60;
	Node0x4526b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%81:\l81:                                               \l  %82 = phi float [ %80, %72 ], [ %71, %70 ]\l  %83 = add nuw nsw i32 %10, 1\l  %84 = icmp slt i32 %83, %3\l  %85 = select i1 %55, i1 %84, i1 false\l  br i1 %85, label %86, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4526b60:s0 -> Node0x4527410;
	Node0x4526b60:s1 -> Node0x4527460;
	Node0x4527410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%86:\l86:                                               \l  %87 = add nsw i32 %83, %56\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 8\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = fmul contract float %90, %92\l  %94 = fadd contract float %82, %93\l  br label %95\l}"];
	Node0x4527410 -> Node0x4527460;
	Node0x4527460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %86 ], [ %82, %81 ]\l  %97 = sext i32 %12 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %2, i64 %97\l  store float %96, float addrspace(1)* %98, align 4, !tbaa !5\l  br label %137\l}"];
	Node0x4527460 -> Node0x4522b00;
	Node0x4523630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%99:\l99:                                               \l  %100 = add nsw i32 %18, %20\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %104 = load float, float addrspace(1)* %1, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = fmul contract float %103, %104\l  %106 = fadd contract float %105, 0.000000e+00\l  br label %107\l}"];
	Node0x4523630 -> Node0x45236c0;
	Node0x45236c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%107:\l107:                                              \l  %108 = phi float [ %106, %99 ], [ 0.000000e+00, %16 ]\l  br i1 %19, label %109, label %118\l|{<s0>T|<s1>F}}"];
	Node0x45236c0:s0 -> Node0x4528c90;
	Node0x45236c0:s1 -> Node0x4528ce0;
	Node0x4528c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%109:\l109:                                              \l  %110 = add nsw i32 %10, %20\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %116 = fmul contract float %113, %115\l  %117 = fadd contract float %108, %116\l  br label %118\l}"];
	Node0x4528c90 -> Node0x4528ce0;
	Node0x4528ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%118:\l118:                                              \l  %119 = phi float [ %117, %109 ], [ %108, %107 ]\l  %120 = add nuw nsw i32 %10, 1\l  %121 = icmp ult i32 %120, %3\l  %122 = select i1 %19, i1 %121, i1 false\l  br i1 %122, label %123, label %132\l|{<s0>T|<s1>F}}"];
	Node0x4528ce0:s0 -> Node0x45295c0;
	Node0x4528ce0:s1 -> Node0x4522c40;
	Node0x45295c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%123:\l123:                                              \l  %124 = add nsw i32 %120, %20\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 2\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %130 = fmul contract float %127, %129\l  %131 = fadd contract float %119, %130\l  br label %132\l}"];
	Node0x45295c0 -> Node0x4522c40;
	Node0x4522c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%132:\l132:                                              \l  %133 = phi float [ %131, %123 ], [ %119, %118 ]\l  %134 = icmp ne i32 %10, 0\l  %135 = icmp sle i32 %10, %3\l  %136 = and i1 %134, %135\l  br i1 %136, label %23, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4522c40:s0 -> Node0x4523800;
	Node0x4522c40:s1 -> Node0x4524c90;
	Node0x4522b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  ret void\l}"];
}
