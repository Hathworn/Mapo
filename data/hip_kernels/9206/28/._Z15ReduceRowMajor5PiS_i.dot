digraph "CFG for '_Z15ReduceRowMajor5PiS_i' function" {
	label="CFG for '_Z15ReduceRowMajor5PiS_i' function";

	Node0x64b4c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %11\l  store i32 0, i32 addrspace(3)* %13, align 4, !tbaa !7\l  %14 = icmp ult i32 %12, %2\l  br i1 %14, label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x64b4c90:s0 -> Node0x64b6e50;
	Node0x64b4c90:s1 -> Node0x64b6ee0;
	Node0x64b6e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%15:\l15:                                               \l  %16 = zext i32 %12 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  store i32 %18, i32 addrspace(3)* %13, align 4, !tbaa !7\l  br label %19\l}"];
	Node0x64b6e50 -> Node0x64b6ee0;
	Node0x64b6ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = icmp ugt i16 %8, 63\l  br i1 %20, label %23, label %21\l|{<s0>T|<s1>F}}"];
	Node0x64b6ee0:s0 -> Node0x64b8310;
	Node0x64b6ee0:s1 -> Node0x64b8360;
	Node0x64b8360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%21:\l21:                                               \l  %22 = icmp ult i32 %11, 32\l  br i1 %22, label %35, label %75\l|{<s0>T|<s1>F}}"];
	Node0x64b8360:s0 -> Node0x64b8560;
	Node0x64b8360:s1 -> Node0x64b85b0;
	Node0x64b8310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %25, %33 ], [ %9, %19 ]\l  %25 = lshr i32 %24, 1\l  %26 = icmp ult i32 %11, %25\l  br i1 %26, label %27, label %33\l|{<s0>T|<s1>F}}"];
	Node0x64b8310:s0 -> Node0x64b89b0;
	Node0x64b8310:s1 -> Node0x64b8720;
	Node0x64b89b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%27:\l27:                                               \l  %28 = add nuw nsw i32 %25, %11\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %28\l  %30 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !7\l  %31 = load i32, i32 addrspace(3)* %13, align 4, !tbaa !7\l  %32 = add nsw i32 %31, %30\l  store i32 %32, i32 addrspace(3)* %13, align 4, !tbaa !7\l  br label %33\l}"];
	Node0x64b89b0 -> Node0x64b8720;
	Node0x64b8720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = icmp ugt i32 %24, 127\l  br i1 %34, label %23, label %21, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x64b8720:s0 -> Node0x64b8310;
	Node0x64b8720:s1 -> Node0x64b8360;
	Node0x64b8560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%35:\l35:                                               \l  %36 = add nuw nsw i32 %11, 32\l  %37 = icmp slt i32 %36, %2\l  br i1 %37, label %38, label %45\l|{<s0>T|<s1>F}}"];
	Node0x64b8560:s0 -> Node0x64b9450;
	Node0x64b8560:s1 -> Node0x64b94a0;
	Node0x64b9450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %36\l  %40 = addrspacecast i32 addrspace(3)* %39 to i32*\l  %41 = load volatile i32, i32* %40, align 4, !tbaa !7\l  %42 = addrspacecast i32 addrspace(3)* %13 to i32*\l  %43 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %44 = add nsw i32 %43, %41\l  store volatile i32 %44, i32* %42, align 4, !tbaa !7\l  br label %45\l}"];
	Node0x64b9450 -> Node0x64b94a0;
	Node0x64b94a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%45:\l45:                                               \l  %46 = add nuw nsw i32 %11, 16\l  %47 = icmp slt i32 %46, %2\l  br i1 %47, label %48, label %55\l|{<s0>T|<s1>F}}"];
	Node0x64b94a0:s0 -> Node0x64b9b10;
	Node0x64b94a0:s1 -> Node0x64b9b60;
	Node0x64b9b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %46\l  %50 = addrspacecast i32 addrspace(3)* %49 to i32*\l  %51 = load volatile i32, i32* %50, align 4, !tbaa !7\l  %52 = addrspacecast i32 addrspace(3)* %13 to i32*\l  %53 = load volatile i32, i32* %52, align 4, !tbaa !7\l  %54 = add nsw i32 %53, %51\l  store volatile i32 %54, i32* %52, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x64b9b10 -> Node0x64b9b60;
	Node0x64b9b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%55:\l55:                                               \l  %56 = add nuw nsw i32 %11, 8\l  %57 = icmp slt i32 %56, %2\l  br i1 %57, label %58, label %65\l|{<s0>T|<s1>F}}"];
	Node0x64b9b60:s0 -> Node0x64ba1c0;
	Node0x64b9b60:s1 -> Node0x64ba210;
	Node0x64ba1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %56\l  %60 = addrspacecast i32 addrspace(3)* %59 to i32*\l  %61 = load volatile i32, i32* %60, align 4, !tbaa !7\l  %62 = addrspacecast i32 addrspace(3)* %13 to i32*\l  %63 = load volatile i32, i32* %62, align 4, !tbaa !7\l  %64 = add nsw i32 %63, %61\l  store volatile i32 %64, i32* %62, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x64ba1c0 -> Node0x64ba210;
	Node0x64ba210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%65:\l65:                                               \l  %66 = add nuw nsw i32 %11, 4\l  %67 = icmp slt i32 %66, %2\l  br i1 %67, label %68, label %75\l|{<s0>T|<s1>F}}"];
	Node0x64ba210:s0 -> Node0x64b8f00;
	Node0x64ba210:s1 -> Node0x64b85b0;
	Node0x64b8f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %66\l  %70 = addrspacecast i32 addrspace(3)* %69 to i32*\l  %71 = load volatile i32, i32* %70, align 4, !tbaa !7\l  %72 = addrspacecast i32 addrspace(3)* %13 to i32*\l  %73 = load volatile i32, i32* %72, align 4, !tbaa !7\l  %74 = add nsw i32 %73, %71\l  store volatile i32 %74, i32* %72, align 4, !tbaa !7\l  br label %75\l}"];
	Node0x64b8f00 -> Node0x64b85b0;
	Node0x64b85b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%75:\l75:                                               \l  %76 = icmp eq i32 %11, 0\l  br i1 %76, label %77, label %94\l|{<s0>T|<s1>F}}"];
	Node0x64b85b0:s0 -> Node0x64bb040;
	Node0x64b85b0:s1 -> Node0x64bb090;
	Node0x64bb040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%77:\l77:                                               \l  %78 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !7\l  %79 = shl i32 %4, 2\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  store i32 %78, i32 addrspace(1)* %81, align 4, !tbaa !7\l  %82 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 1), align 4, !tbaa !7\l  %83 = add nuw nsw i32 %79, 1\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %84\l  store i32 %82, i32 addrspace(1)* %85, align 4, !tbaa !7\l  %86 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 2), align 4, !tbaa !7\l  %87 = add nuw nsw i32 %79, 2\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %88\l  store i32 %86, i32 addrspace(1)* %89, align 4, !tbaa !7\l  %90 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 3), align 4, !tbaa !7\l  %91 = add nuw nsw i32 %79, 3\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %92\l  store i32 %90, i32 addrspace(1)* %93, align 4, !tbaa !7\l  br label %94\l}"];
	Node0x64bb040 -> Node0x64bb090;
	Node0x64bb090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%94:\l94:                                               \l  ret void\l}"];
}
