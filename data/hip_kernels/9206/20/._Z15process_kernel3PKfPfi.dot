digraph "CFG for '_Z15process_kernel3PKfPfi' function" {
	label="CFG for '_Z15process_kernel3PKfPfi' function";

	Node0x48c6f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 16\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 8, !tbaa !15\l  %21 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = udiv i32 %20, %24\l  %26 = mul i32 %25, %24\l  %27 = icmp ugt i32 %20, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %4\l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %33 = add i32 %30, %31\l  %34 = mul i32 %33, %17\l  %35 = add i32 %34, %32\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %37 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %38 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %39 = getelementptr i8, i8 addrspace(4)* %5, i64 8\l  %40 = bitcast i8 addrspace(4)* %39 to i16 addrspace(4)*\l  %41 = load i16, i16 addrspace(4)* %40, align 4, !range !13, !invariant.load\l... !14\l  %42 = zext i16 %41 to i32\l  %43 = mul i32 %35, %42\l  %44 = add i32 %43, %36\l  %45 = mul i32 %44, %24\l  %46 = add i32 %45, %37\l  %47 = mul i32 %46, %12\l  %48 = add i32 %47, %38\l  %49 = icmp slt i32 %48, %2\l  br i1 %49, label %50, label %76\l|{<s0>T|<s1>F}}"];
	Node0x48c6f80:s0 -> Node0x48cbf20;
	Node0x48c6f80:s1 -> Node0x48cbfb0;
	Node0x48cbf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%50:\l50:                                               \l  %51 = sext i32 %48 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !17,\l... !amdgpu.noclobber !14\l  %54 = fcmp olt float %53, 0x39F0000000000000\l  %55 = select i1 %54, float 0x41F0000000000000, float 1.000000e+00\l  %56 = fmul float %53, %55\l  %57 = tail call float @llvm.sqrt.f32(float %56)\l  %58 = bitcast float %57 to i32\l  %59 = add nsw i32 %58, -1\l  %60 = bitcast i32 %59 to float\l  %61 = add nsw i32 %58, 1\l  %62 = bitcast i32 %61 to float\l  %63 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 608)\l  %64 = select i1 %54, float 0x3EF0000000000000, float 1.000000e+00\l  %65 = fneg float %62\l  %66 = tail call float @llvm.fma.f32(float %65, float %57, float %56)\l  %67 = fcmp ogt float %66, 0.000000e+00\l  %68 = fneg float %60\l  %69 = tail call float @llvm.fma.f32(float %68, float %57, float %56)\l  %70 = fcmp ole float %69, 0.000000e+00\l  %71 = select i1 %70, float %60, float %57\l  %72 = select i1 %67, float %62, float %71\l  %73 = fmul float %64, %72\l  %74 = select i1 %63, float %56, float %73\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  store float %74, float addrspace(1)* %75, align 4, !tbaa !17\l  br label %76\l}"];
	Node0x48cbf20 -> Node0x48cbfb0;
	Node0x48cbfb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  ret void\l}"];
}
