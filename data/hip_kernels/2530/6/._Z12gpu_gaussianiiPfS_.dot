digraph "CFG for '_Z12gpu_gaussianiiPfS_' function" {
	label="CFG for '_Z12gpu_gaussianiiPfS_' function";

	Node0x61baa80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = mul nsw i32 %21, %0\l  %23 = add nsw i32 %22, %13\l  %24 = add nsw i32 %21, 1\l  %25 = mul nsw i32 %24, %0\l  %26 = add nsw i32 %13, 1\l  %27 = add nsw i32 %25, %26\l  %28 = mul nuw nsw i32 %20, 18\l  %29 = add nuw nsw i32 %28, %12\l  %30 = icmp ne i32 %13, 0\l  %31 = and i32 %26, 15\l  %32 = icmp eq i32 %31, 0\l  %33 = select i1 %30, i1 %32, i1 false\l  br i1 %33, label %34, label %47\l|{<s0>T|<s1>F}}"];
	Node0x61baa80:s0 -> Node0x61bec20;
	Node0x61baa80:s1 -> Node0x61becb0;
	Node0x61bec20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = add nsw i32 %23, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nuw nsw i32 %29, 1\l  %40 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %39\l  store float %38, float addrspace(3)* %40, align 4, !tbaa !7\l  %41 = add nsw i32 %23, 2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = add nuw nsw i32 %29, 2\l  %46 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %45\l  store float %44, float addrspace(3)* %46, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x61bec20 -> Node0x61becb0;
	Node0x61becb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = icmp ne i32 %21, 0\l  %49 = and i32 %24, 15\l  %50 = icmp eq i32 %49, 0\l  %51 = select i1 %48, i1 %50, i1 false\l  br i1 %51, label %52, label %66\l|{<s0>T|<s1>F}}"];
	Node0x61becb0:s0 -> Node0x61bf260;
	Node0x61becb0:s1 -> Node0x61c0100;
	Node0x61bf260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%52:\l52:                                               \l  %53 = add nsw i32 %23, %0\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = add nuw nsw i32 %29, 18\l  %58 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %57\l  store float %56, float addrspace(3)* %58, align 4, !tbaa !7\l  %59 = shl nsw i32 %0, 1\l  %60 = add nsw i32 %23, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = add nuw nsw i32 %29, 36\l  %65 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %64\l  store float %63, float addrspace(3)* %65, align 4, !tbaa !7\l  br label %66\l}"];
	Node0x61bf260 -> Node0x61c0100;
	Node0x61c0100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = select i1 %33, i1 %48, i1 false\l  %68 = select i1 %67, i1 %50, i1 false\l  br i1 %68, label %69, label %97\l|{<s0>T|<s1>F}}"];
	Node0x61c0100:s0 -> Node0x61c04e0;
	Node0x61c0100:s1 -> Node0x61c0f60;
	Node0x61c04e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%69:\l69:                                               \l  %70 = add nsw i32 %23, %0\l  %71 = add nsw i32 %70, 1\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = add nuw nsw i32 %29, 19\l  %76 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %75\l  store float %74, float addrspace(3)* %76, align 4, !tbaa !7\l  %77 = add nsw i32 %70, 2\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = add nuw nsw i32 %29, 20\l  %82 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %81\l  store float %80, float addrspace(3)* %82, align 4, !tbaa !7\l  %83 = shl nsw i32 %0, 1\l  %84 = add nsw i32 %23, %83\l  %85 = add nsw i32 %84, 1\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = add nuw nsw i32 %29, 37\l  %90 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %89\l  store float %88, float addrspace(3)* %90, align 4, !tbaa !7\l  %91 = add nsw i32 %84, 2\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = add nuw nsw i32 %29, 38\l  %96 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %95\l  store float %94, float addrspace(3)* %96, align 4, !tbaa !7\l  br label %97\l}"];
	Node0x61c04e0 -> Node0x61c0f60;
	Node0x61c0f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = sext i32 %23 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %2, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %101 = getelementptr inbounds [324 x float], [324 x float] addrspace(3)*\l... @_ZZ12gpu_gaussianiiPfS_E8sh_block, i32 0, i32 %29\l  store float %100, float addrspace(3)* %101, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = add nsw i32 %0, -2\l  %103 = icmp slt i32 %13, %102\l  %104 = add nsw i32 %1, -2\l  %105 = icmp slt i32 %21, %104\l  %106 = select i1 %103, i1 %105, i1 false\l  br i1 %106, label %107, label %145\l|{<s0>T|<s1>F}}"];
	Node0x61c0f60:s0 -> Node0x61c2c90;
	Node0x61c0f60:s1 -> Node0x61c2d20;
	Node0x61c2c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%107:\l107:                                              \l  %108 = load float, float addrspace(3)* %101, align 4, !tbaa !7\l  %109 = fmul contract float %108, 6.250000e-02\l  %110 = fadd contract float %109, 0.000000e+00\l  %111 = getelementptr inbounds float, float addrspace(3)* %101, i32 1\l  %112 = load float, float addrspace(3)* %111, align 4, !tbaa !7\l  %113 = fmul contract float %112, 1.250000e-01\l  %114 = fadd contract float %110, %113\l  %115 = getelementptr inbounds float, float addrspace(3)* %101, i32 2\l  %116 = load float, float addrspace(3)* %115, align 4, !tbaa !7\l  %117 = fmul contract float %116, 6.250000e-02\l  %118 = fadd contract float %114, %117\l  %119 = getelementptr inbounds float, float addrspace(3)* %101, i32 18\l  %120 = load float, float addrspace(3)* %119, align 4, !tbaa !7\l  %121 = fmul contract float %120, 1.250000e-01\l  %122 = fadd contract float %118, %121\l  %123 = getelementptr inbounds float, float addrspace(3)* %101, i32 19\l  %124 = load float, float addrspace(3)* %123, align 4, !tbaa !7\l  %125 = fmul contract float %124, 2.500000e-01\l  %126 = fadd contract float %122, %125\l  %127 = getelementptr inbounds float, float addrspace(3)* %101, i32 20\l  %128 = load float, float addrspace(3)* %127, align 4, !tbaa !7\l  %129 = fmul contract float %128, 1.250000e-01\l  %130 = fadd contract float %126, %129\l  %131 = getelementptr inbounds float, float addrspace(3)* %101, i32 36\l  %132 = load float, float addrspace(3)* %131, align 4, !tbaa !7\l  %133 = fmul contract float %132, 6.250000e-02\l  %134 = fadd contract float %130, %133\l  %135 = getelementptr inbounds float, float addrspace(3)* %101, i32 37\l  %136 = load float, float addrspace(3)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %136, 1.250000e-01\l  %138 = fadd contract float %134, %137\l  %139 = getelementptr inbounds float, float addrspace(3)* %101, i32 38\l  %140 = load float, float addrspace(3)* %139, align 4, !tbaa !7\l  %141 = fmul contract float %140, 6.250000e-02\l  %142 = fadd contract float %138, %141\l  %143 = sext i32 %27 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %3, i64 %143\l  store float %142, float addrspace(1)* %144, align 4, !tbaa !7\l  br label %145\l}"];
	Node0x61c2c90 -> Node0x61c2d20;
	Node0x61c2d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%145:\l145:                                              \l  ret void\l}"];
}
