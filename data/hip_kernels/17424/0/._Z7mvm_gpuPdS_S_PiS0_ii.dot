digraph "CFG for '_Z7mvm_gpuPdS_S_PiS0_ii' function" {
	label="CFG for '_Z7mvm_gpuPdS_S_PiS0_ii' function";

	Node0x6280bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %6\l  br i1 %17, label %18, label %146\l|{<s0>T|<s1>F}}"];
	Node0x6280bb0:s0 -> Node0x6282ae0;
	Node0x6280bb0:s1 -> Node0x6282b70;
	Node0x6282ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%18:\l18:                                               \l  %19 = sext i32 %16 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %19\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = add nsw i32 %23, %21\l  %25 = icmp sgt i32 %23, 0\l  br i1 %25, label %26, label %146\l|{<s0>T|<s1>F}}"];
	Node0x6282ae0:s0 -> Node0x6283e40;
	Node0x6282ae0:s1 -> Node0x6282b70;
	Node0x6283e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%26:\l26:                                               \l  %27 = icmp sgt i32 %5, 0\l  %28 = and i32 %5, 7\l  %29 = icmp ult i32 %5, 8\l  %30 = and i32 %5, -8\l  %31 = icmp eq i32 %28, 0\l  br label %32\l}"];
	Node0x6283e40 -> Node0x62842e0;
	Node0x62842e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = phi i32 [ %21, %26 ], [ %58, %57 ]\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  store double 0.000000e+00, double addrspace(1)* %35, align 8, !tbaa !11\l  br i1 %27, label %36, label %57\l|{<s0>T|<s1>F}}"];
	Node0x62842e0:s0 -> Node0x6285370;
	Node0x62842e0:s1 -> Node0x6282a00;
	Node0x6285370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%36:\l36:                                               \l  %37 = mul nsw i32 %33, %5\l  br i1 %29, label %38, label %60\l|{<s0>T|<s1>F}}"];
	Node0x6285370:s0 -> Node0x6285540;
	Node0x6285370:s1 -> Node0x6285590;
	Node0x6285540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%38:\l38:                                               \l  %39 = phi double [ 0.000000e+00, %36 ], [ %142, %60 ]\l  %40 = phi i32 [ 0, %36 ], [ %143, %60 ]\l  br i1 %31, label %57, label %41\l|{<s0>T|<s1>F}}"];
	Node0x6285540:s0 -> Node0x6282a00;
	Node0x6285540:s1 -> Node0x62858a0;
	Node0x62858a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi double [ %53, %41 ], [ %39, %38 ]\l  %43 = phi i32 [ %54, %41 ], [ %40, %38 ]\l  %44 = phi i32 [ %55, %41 ], [ 0, %38 ]\l  %45 = add nsw i32 %43, %37\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !11\l  %49 = zext i32 %43 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !11\l  %52 = fmul contract double %48, %51\l  %53 = fadd contract double %42, %52\l  store double %53, double addrspace(1)* %35, align 8, !tbaa !11\l  %54 = add nuw nsw i32 %43, 1\l  %55 = add i32 %44, 1\l  %56 = icmp eq i32 %55, %28\l  br i1 %56, label %57, label %41, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x62858a0:s0 -> Node0x6282a00;
	Node0x62858a0:s1 -> Node0x62858a0;
	Node0x6282a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%57:\l57:                                               \l  %58 = add nsw i32 %33, 1\l  %59 = icmp slt i32 %58, %24\l  br i1 %59, label %32, label %146, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6282a00:s0 -> Node0x62842e0;
	Node0x6282a00:s1 -> Node0x6282b70;
	Node0x6285590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%60:\l60:                                               \l  %61 = phi double [ %142, %60 ], [ 0.000000e+00, %36 ]\l  %62 = phi i32 [ %143, %60 ], [ 0, %36 ]\l  %63 = phi i32 [ %144, %60 ], [ 0, %36 ]\l  %64 = add nsw i32 %62, %37\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !11\l  %68 = zext i32 %62 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !11\l  %71 = fmul contract double %67, %70\l  %72 = fadd contract double %61, %71\l  store double %72, double addrspace(1)* %35, align 8, !tbaa !11\l  %73 = or i32 %62, 1\l  %74 = add nsw i32 %73, %37\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !11\l  %78 = zext i32 %73 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !11\l  %81 = fmul contract double %77, %80\l  %82 = fadd contract double %72, %81\l  store double %82, double addrspace(1)* %35, align 8, !tbaa !11\l  %83 = or i32 %62, 2\l  %84 = add nsw i32 %83, %37\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %0, i64 %85\l  %87 = load double, double addrspace(1)* %86, align 8, !tbaa !11\l  %88 = zext i32 %83 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %1, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !11\l  %91 = fmul contract double %87, %90\l  %92 = fadd contract double %82, %91\l  store double %92, double addrspace(1)* %35, align 8, !tbaa !11\l  %93 = or i32 %62, 3\l  %94 = add nsw i32 %93, %37\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds double, double addrspace(1)* %0, i64 %95\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !11\l  %98 = zext i32 %93 to i64\l  %99 = getelementptr inbounds double, double addrspace(1)* %1, i64 %98\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !11\l  %101 = fmul contract double %97, %100\l  %102 = fadd contract double %92, %101\l  store double %102, double addrspace(1)* %35, align 8, !tbaa !11\l  %103 = or i32 %62, 4\l  %104 = add nsw i32 %103, %37\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %0, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !11\l  %108 = zext i32 %103 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %1, i64 %108\l  %110 = load double, double addrspace(1)* %109, align 8, !tbaa !11\l  %111 = fmul contract double %107, %110\l  %112 = fadd contract double %102, %111\l  store double %112, double addrspace(1)* %35, align 8, !tbaa !11\l  %113 = or i32 %62, 5\l  %114 = add nsw i32 %113, %37\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds double, double addrspace(1)* %0, i64 %115\l  %117 = load double, double addrspace(1)* %116, align 8, !tbaa !11\l  %118 = zext i32 %113 to i64\l  %119 = getelementptr inbounds double, double addrspace(1)* %1, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !11\l  %121 = fmul contract double %117, %120\l  %122 = fadd contract double %112, %121\l  store double %122, double addrspace(1)* %35, align 8, !tbaa !11\l  %123 = or i32 %62, 6\l  %124 = add nsw i32 %123, %37\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds double, double addrspace(1)* %0, i64 %125\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !11\l  %128 = zext i32 %123 to i64\l  %129 = getelementptr inbounds double, double addrspace(1)* %1, i64 %128\l  %130 = load double, double addrspace(1)* %129, align 8, !tbaa !11\l  %131 = fmul contract double %127, %130\l  %132 = fadd contract double %122, %131\l  store double %132, double addrspace(1)* %35, align 8, !tbaa !11\l  %133 = or i32 %62, 7\l  %134 = add nsw i32 %133, %37\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds double, double addrspace(1)* %0, i64 %135\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !11\l  %138 = zext i32 %133 to i64\l  %139 = getelementptr inbounds double, double addrspace(1)* %1, i64 %138\l  %140 = load double, double addrspace(1)* %139, align 8, !tbaa !11\l  %141 = fmul contract double %137, %140\l  %142 = fadd contract double %132, %141\l  store double %142, double addrspace(1)* %35, align 8, !tbaa !11\l  %143 = add nuw nsw i32 %62, 8\l  %144 = add i32 %63, 8\l  %145 = icmp eq i32 %144, %30\l  br i1 %145, label %38, label %60, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x6285590:s0 -> Node0x6285540;
	Node0x6285590:s1 -> Node0x6285590;
	Node0x6282b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%146:\l146:                                              \l  ret void\l}"];
}
