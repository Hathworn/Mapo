digraph "CFG for '_Z4copyPfPKfi' function" {
	label="CFG for '_Z4copyPfPKfi' function";

	Node0x5abcb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %2\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5abcb60:s0 -> Node0x5abe4c0;
	Node0x5abcb60:s1 -> Node0x5abee70;
	Node0x5abe4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = udiv i32 %12, %9\l  %19 = mul i32 %18, %9\l  %20 = icmp ugt i32 %12, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  br label %25\l}"];
	Node0x5abe4c0 -> Node0x5abf2f0;
	Node0x5abee70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x5abf2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %15, %17 ], [ %69, %25 ]\l  %27 = mul nsw i32 %26, 6\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %31 = shl nsw i32 %26, 3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  store float %30, float addrspace(1)* %33, align 4, !tbaa !16\l  %34 = or i32 %27, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16\l  %38 = add nuw nsw i32 %31, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  store float %37, float addrspace(1)* %40, align 4, !tbaa !16\l  %41 = add nsw i32 %27, 2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = add nuw nsw i32 %31, 2\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  store float %44, float addrspace(1)* %47, align 4, !tbaa !16\l  %48 = add nsw i32 %27, 3\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = add nuw nsw i32 %31, 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !16\l  %55 = add nsw i32 %27, 4\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !16\l  %59 = add nuw nsw i32 %31, 5\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  store float %58, float addrspace(1)* %61, align 4, !tbaa !16\l  %62 = add nsw i32 %27, 5\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = add nuw nsw i32 %31, 6\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %65, float addrspace(1)* %68, align 4, !tbaa !16\l  %69 = add i32 %23, %26\l  %70 = icmp slt i32 %69, %2\l  br i1 %70, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5abf2f0:s0 -> Node0x5abf2f0;
	Node0x5abf2f0:s1 -> Node0x5abee70;
}
