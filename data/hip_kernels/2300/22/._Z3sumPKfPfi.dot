digraph "CFG for '_Z3sumPKfPfi' function" {
	label="CFG for '_Z3sumPKfPfi' function";

	Node0x56c17d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = icmp sgt i32 %2, 0\l  br i1 %4, label %5, label %26\l|{<s0>T|<s1>F}}"];
	Node0x56c17d0:s0 -> Node0x56c1f10;
	Node0x56c17d0:s1 -> Node0x56c1fa0;
	Node0x56c1f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%5:\l5:                                                \l  %6 = and i32 %2, 7\l  %7 = icmp ult i32 %2, 8\l  br i1 %7, label %10, label %8\l|{<s0>T|<s1>F}}"];
	Node0x56c1f10:s0 -> Node0x56c2230;
	Node0x56c1f10:s1 -> Node0x56c2280;
	Node0x56c2280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%8:\l8:                                                \l  %9 = and i32 %2, -8\l  br label %28\l}"];
	Node0x56c2280 -> Node0x56c1ec0;
	Node0x56c2230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = phi float [ undef, %5 ], [ %70, %28 ]\l  %12 = phi i32 [ 0, %5 ], [ %71, %28 ]\l  %13 = phi float [ 0.000000e+00, %5 ], [ %70, %28 ]\l  %14 = icmp eq i32 %6, 0\l  br i1 %14, label %26, label %15\l|{<s0>T|<s1>F}}"];
	Node0x56c2230:s0 -> Node0x56c1fa0;
	Node0x56c2230:s1 -> Node0x56c3730;
	Node0x56c3730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i32 [ %23, %15 ], [ %12, %10 ]\l  %17 = phi float [ %22, %15 ], [ %13, %10 ]\l  %18 = phi i32 [ %24, %15 ], [ 0, %10 ]\l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %22 = fadd contract float %17, %21\l  %23 = add nuw nsw i32 %16, 1\l  %24 = add i32 %18, 1\l  %25 = icmp eq i32 %24, %6\l  br i1 %25, label %26, label %15, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x56c3730:s0 -> Node0x56c1fa0;
	Node0x56c3730:s1 -> Node0x56c3730;
	Node0x56c1fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = phi float [ 0.000000e+00, %3 ], [ %11, %10 ], [ %22, %15 ]\l  store float %27, float addrspace(1)* %1, align 4, !tbaa !4\l  ret void\l}"];
	Node0x56c1ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %8 ], [ %71, %28 ]\l  %30 = phi float [ 0.000000e+00, %8 ], [ %70, %28 ]\l  %31 = phi i32 [ 0, %8 ], [ %72, %28 ]\l  %32 = zext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %35 = fadd contract float %30, %34\l  %36 = or i32 %29, 1\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %40 = fadd contract float %35, %39\l  %41 = or i32 %29, 2\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %45 = fadd contract float %40, %44\l  %46 = or i32 %29, 3\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %50 = fadd contract float %45, %49\l  %51 = or i32 %29, 4\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %55 = fadd contract float %50, %54\l  %56 = or i32 %29, 5\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %60 = fadd contract float %55, %59\l  %61 = or i32 %29, 6\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %65 = fadd contract float %60, %64\l  %66 = or i32 %29, 7\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %70 = fadd contract float %65, %69\l  %71 = add nuw nsw i32 %29, 8\l  %72 = add i32 %31, 8\l  %73 = icmp eq i32 %72, %9\l  br i1 %73, label %10, label %28, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56c1ec0:s0 -> Node0x56c2230;
	Node0x56c1ec0:s1 -> Node0x56c1ec0;
}
