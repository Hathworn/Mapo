digraph "CFG for '_Z13average_snipsPKdPKiS2_S2_PKfS4_Pf' function" {
	label="CFG for '_Z13average_snipsPKdPKiS2_S2_PKfS4_Pf' function";

	Node0x47a6560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%7:\l  %8 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = icmp sgt i32 %9, 0\l  br i1 %19, label %20, label %120\l|{<s0>T|<s1>F}}"];
	Node0x47a6560:s0 -> Node0x47a9850;
	Node0x47a6560:s1 -> Node0x47a98e0;
	Node0x47a9850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %23 = fptosi double %22 to i32\l  %24 = mul i32 %18, %23\l  %25 = and i32 %9, 1\l  %26 = icmp eq i32 %9, 1\l  br i1 %26, label %90, label %27\l|{<s0>T|<s1>F}}"];
	Node0x47a9850:s0 -> Node0x47a9e20;
	Node0x47a9850:s1 -> Node0x47a9eb0;
	Node0x47a9eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%27:\l27:                                               \l  %28 = and i32 %9, -2\l  br label %29\l}"];
	Node0x47a9eb0 -> Node0x47aa080;
	Node0x47aa080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %27 ], [ %87, %86 ]\l  %31 = phi i32 [ 0, %27 ], [ %88, %86 ]\l  %32 = zext i32 %30 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %35 = icmp eq i32 %34, %18\l  br i1 %35, label %36, label %58\l|{<s0>T|<s1>F}}"];
	Node0x47aa080:s0 -> Node0x47aa890;
	Node0x47aa080:s1 -> Node0x47aa920;
	Node0x47aa890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %32\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %39 = mul nsw i32 %38, %15\l  %40 = add nsw i32 %39, %17\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %44 = mul i32 %30, %15\l  %45 = add i32 %44, %17\l  %46 = mul i32 %45, %12\l  %47 = add i32 %46, %16\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !12\l  %51 = add i32 %43, %24\l  %52 = mul i32 %51, %12\l  %53 = add i32 %52, %16\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %6, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !12\l  %57 = fadd contract float %50, %56\l  store float %57, float addrspace(1)* %55, align 4, !tbaa !12\l  br label %58\l}"];
	Node0x47aa890 -> Node0x47aa920;
	Node0x47aa920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = or i32 %30, 1\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %63 = icmp eq i32 %62, %18\l  br i1 %63, label %64, label %86\l|{<s0>T|<s1>F}}"];
	Node0x47aa920:s0 -> Node0x47ac6d0;
	Node0x47aa920:s1 -> Node0x47aa170;
	Node0x47ac6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%64:\l64:                                               \l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %60\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %67 = mul nsw i32 %66, %15\l  %68 = add nsw i32 %67, %17\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %72 = mul i32 %59, %15\l  %73 = add i32 %72, %17\l  %74 = mul i32 %73, %12\l  %75 = add i32 %74, %16\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %4, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !12\l  %79 = add i32 %71, %24\l  %80 = mul i32 %79, %12\l  %81 = add i32 %80, %16\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %6, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !12\l  %85 = fadd contract float %78, %84\l  store float %85, float addrspace(1)* %83, align 4, !tbaa !12\l  br label %86\l}"];
	Node0x47ac6d0 -> Node0x47aa170;
	Node0x47aa170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = add nuw nsw i32 %30, 2\l  %88 = add i32 %31, 2\l  %89 = icmp eq i32 %88, %28\l  br i1 %89, label %90, label %29, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47aa170:s0 -> Node0x47a9e20;
	Node0x47aa170:s1 -> Node0x47aa080;
	Node0x47a9e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%90:\l90:                                               \l  %91 = phi i32 [ 0, %20 ], [ %87, %86 ]\l  %92 = icmp eq i32 %25, 0\l  br i1 %92, label %120, label %93\l|{<s0>T|<s1>F}}"];
	Node0x47a9e20:s0 -> Node0x47a98e0;
	Node0x47a9e20:s1 -> Node0x47adaa0;
	Node0x47adaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%93:\l93:                                               \l  %94 = zext i32 %91 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %97 = icmp eq i32 %96, %18\l  br i1 %97, label %98, label %120\l|{<s0>T|<s1>F}}"];
	Node0x47adaa0:s0 -> Node0x47addb0;
	Node0x47adaa0:s1 -> Node0x47a98e0;
	Node0x47addb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%98:\l98:                                               \l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %94\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %101 = mul nsw i32 %100, %15\l  %102 = add nsw i32 %101, %17\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %106 = mul i32 %91, %15\l  %107 = add i32 %106, %17\l  %108 = mul i32 %107, %12\l  %109 = add i32 %108, %16\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %4, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !12\l  %113 = add i32 %105, %24\l  %114 = mul i32 %113, %12\l  %115 = add i32 %114, %16\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %6, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !12\l  %119 = fadd contract float %112, %118\l  store float %119, float addrspace(1)* %117, align 4, !tbaa !12\l  br label %120\l}"];
	Node0x47addb0 -> Node0x47a98e0;
	Node0x47a98e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%120:\l120:                                              \l  ret void\l}"];
}
