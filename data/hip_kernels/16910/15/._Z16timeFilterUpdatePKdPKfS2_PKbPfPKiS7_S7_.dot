digraph "CFG for '_Z16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_' function" {
	label="CFG for '_Z16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_' function";

	Node0x525b040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %18 = fptosi double %17 to i32\l  %19 = freeze i32 %18\l  %20 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %22 = fptosi double %21 to i32\l  %23 = icmp slt i32 %9, %22\l  %24 = icmp sgt i32 %19, 0\l  %25 = and i1 %23, %24\l  br i1 %25, label %26, label %104\l|{<s0>T|<s1>F}}"];
	Node0x525b040:s0 -> Node0x525ded0;
	Node0x525b040:s1 -> Node0x525df60;
	Node0x525ded0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%26:\l26:                                               \l  %27 = and i32 %19, 3\l  %28 = icmp ult i32 %19, 4\l  br i1 %28, label %84, label %29\l|{<s0>T|<s1>F}}"];
	Node0x525ded0:s0 -> Node0x525e220;
	Node0x525ded0:s1 -> Node0x525e270;
	Node0x525e270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%29:\l29:                                               \l  %30 = and i32 %19, -4\l  br label %31\l}"];
	Node0x525e270 -> Node0x525e470;
	Node0x525e470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %29 ], [ %81, %31 ]\l  %33 = phi i32 [ 0, %29 ], [ %82, %31 ]\l  %34 = mul i32 %32, %15\l  %35 = add i32 %34, %10\l  %36 = mul i32 %35, %22\l  %37 = add i32 %36, %9\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %41 = mul nsw i32 %32, %22\l  %42 = add nsw i32 %41, %9\l  %43 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %42\l  %44 = addrspacecast float addrspace(3)* %43 to float*\l  store volatile float %40, float* %44, align 4, !tbaa !10\l  %45 = or i32 %32, 1\l  %46 = mul i32 %45, %15\l  %47 = add i32 %46, %10\l  %48 = mul i32 %47, %22\l  %49 = add i32 %48, %9\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %53 = mul nsw i32 %45, %22\l  %54 = add nsw i32 %53, %9\l  %55 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %54\l  %56 = addrspacecast float addrspace(3)* %55 to float*\l  store volatile float %52, float* %56, align 4, !tbaa !10\l  %57 = or i32 %32, 2\l  %58 = mul i32 %57, %15\l  %59 = add i32 %58, %10\l  %60 = mul i32 %59, %22\l  %61 = add i32 %60, %9\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %65 = mul nsw i32 %57, %22\l  %66 = add nsw i32 %65, %9\l  %67 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %66\l  %68 = addrspacecast float addrspace(3)* %67 to float*\l  store volatile float %64, float* %68, align 4, !tbaa !10\l  %69 = or i32 %32, 3\l  %70 = mul i32 %69, %15\l  %71 = add i32 %70, %10\l  %72 = mul i32 %71, %22\l  %73 = add i32 %72, %9\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %77 = mul nsw i32 %69, %22\l  %78 = add nsw i32 %77, %9\l  %79 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %78\l  %80 = addrspacecast float addrspace(3)* %79 to float*\l  store volatile float %76, float* %80, align 4, !tbaa !10\l  %81 = add nuw nsw i32 %32, 4\l  %82 = add i32 %33, 4\l  %83 = icmp eq i32 %82, %30\l  br i1 %83, label %84, label %31, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x525e470:s0 -> Node0x525e220;
	Node0x525e470:s1 -> Node0x525e470;
	Node0x525e220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%84:\l84:                                               \l  %85 = phi i32 [ 0, %26 ], [ %81, %31 ]\l  %86 = icmp eq i32 %27, 0\l  br i1 %86, label %104, label %87\l|{<s0>T|<s1>F}}"];
	Node0x525e220:s0 -> Node0x525df60;
	Node0x525e220:s1 -> Node0x5261440;
	Node0x5261440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%87:\l87:                                               \l  %88 = phi i32 [ %101, %87 ], [ %85, %84 ]\l  %89 = phi i32 [ %102, %87 ], [ 0, %84 ]\l  %90 = mul i32 %88, %15\l  %91 = add i32 %90, %10\l  %92 = mul i32 %91, %22\l  %93 = add i32 %92, %9\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %97 = mul nsw i32 %88, %22\l  %98 = add nsw i32 %97, %9\l  %99 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %98\l  %100 = addrspacecast float addrspace(3)* %99 to float*\l  store volatile float %96, float* %100, align 4, !tbaa !10\l  %101 = add nuw nsw i32 %88, 1\l  %102 = add i32 %89, 1\l  %103 = icmp eq i32 %102, %27\l  br i1 %103, label %104, label %87, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5261440:s0 -> Node0x525df60;
	Node0x5261440:s1 -> Node0x5261440;
	Node0x525df60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%104:\l104:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %105 = bitcast i32 addrspace(1)* %7 to \<2 x i32\> addrspace(1)*\l  %106 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %105, align 4, !tbaa !16\l  %107 = extractelement \<2 x i32\> %106, i64 0\l  %108 = extractelement \<2 x i32\> %106, i64 1\l  %109 = icmp slt i32 %108, %107\l  br i1 %109, label %110, label %274\l|{<s0>T|<s1>F}}"];
	Node0x525df60:s0 -> Node0x5262ce0;
	Node0x525df60:s1 -> Node0x5262d70;
	Node0x5262ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%110:\l110:                                              \l  %111 = mul nsw i32 %10, %15\l  %112 = sub nsw i32 %12, %22\l  %113 = icmp sgt i32 %22, 0\l  %114 = mul nsw i32 %10, %12\l  %115 = and i32 %22, 7\l  %116 = icmp ult i32 %22, 8\l  %117 = and i32 %22, -8\l  %118 = icmp eq i32 %115, 0\l  br label %119\l}"];
	Node0x5262ce0 -> Node0x52633c0;
	Node0x52633c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%119:\l119:                                              \l  %120 = phi i32 [ %108, %110 ], [ %272, %271 ]\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %121\l  %123 = load i32, i32 addrspace(1)* %122, align 4, !tbaa !16,\l... !amdgpu.noclobber !9\l  %124 = add nsw i32 %123, %111\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %125\l  %127 = load i8, i8 addrspace(1)* %126, align 1, !tbaa !18, !range !20,\l... !amdgpu.noclobber !9\l  %128 = icmp eq i8 %127, 0\l  br i1 %128, label %271, label %129\l|{<s0>T|<s1>F}}"];
	Node0x52633c0:s0 -> Node0x52634b0;
	Node0x52633c0:s1 -> Node0x52603c0;
	Node0x52603c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%129:\l129:                                              \l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %121\l  %131 = load i32, i32 addrspace(1)* %130, align 4, !tbaa !16,\l... !amdgpu.noclobber !9\l  %132 = sub nsw i32 %131, %22\l  %133 = add nsw i32 %132, %9\l  %134 = icmp sgt i32 %133, -1\l  %135 = icmp slt i32 %133, %112\l  %136 = select i1 %134, i1 %135, i1 false\l  br i1 %136, label %137, label %271\l|{<s0>T|<s1>F}}"];
	Node0x52603c0:s0 -> Node0x5264d20;
	Node0x52603c0:s1 -> Node0x52634b0;
	Node0x5264d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%137:\l137:                                              \l  br i1 %24, label %138, label %266\l|{<s0>T|<s1>F}}"];
	Node0x5264d20:s0 -> Node0x5264e60;
	Node0x5264d20:s1 -> Node0x5264eb0;
	Node0x5264e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%138:\l138:                                              \l  %139 = phi float [ %263, %262 ], [ 0.000000e+00, %137 ]\l  %140 = phi i32 [ %264, %262 ], [ 0, %137 ]\l  br i1 %113, label %141, label %262\l|{<s0>T|<s1>F}}"];
	Node0x5264e60:s0 -> Node0x5265cd0;
	Node0x5264e60:s1 -> Node0x5265020;
	Node0x5265cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%141:\l141:                                              \l  %142 = mul nsw i32 %140, %22\l  %143 = mul i32 %140, %15\l  %144 = add i32 %143, %10\l  %145 = mul i32 %144, %12\l  %146 = add i32 %145, %133\l  br i1 %116, label %241, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5265cd0:s0 -> Node0x52660e0;
	Node0x5265cd0:s1 -> Node0x5266130;
	Node0x5266130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%147:\l147:                                              \l  %148 = phi float [ %237, %147 ], [ %139, %141 ]\l  %149 = phi i32 [ %238, %147 ], [ 0, %141 ]\l  %150 = phi i32 [ %239, %147 ], [ 0, %141 ]\l  %151 = add nsw i32 %149, %142\l  %152 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %151\l  %153 = addrspacecast float addrspace(3)* %152 to float*\l  %154 = load volatile float, float* %153, align 4, !tbaa !10\l  %155 = add i32 %146, %149\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %1, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !10\l  %159 = fmul contract float %154, %158\l  %160 = fadd contract float %148, %159\l  %161 = or i32 %149, 1\l  %162 = add nsw i32 %161, %142\l  %163 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %162\l  %164 = addrspacecast float addrspace(3)* %163 to float*\l  %165 = load volatile float, float* %164, align 4, !tbaa !10\l  %166 = add i32 %146, %161\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %1, i64 %167\l  %169 = load float, float addrspace(1)* %168, align 4, !tbaa !10\l  %170 = fmul contract float %165, %169\l  %171 = fadd contract float %160, %170\l  %172 = or i32 %149, 2\l  %173 = add nsw i32 %172, %142\l  %174 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %173\l  %175 = addrspacecast float addrspace(3)* %174 to float*\l  %176 = load volatile float, float* %175, align 4, !tbaa !10\l  %177 = add i32 %146, %172\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %1, i64 %178\l  %180 = load float, float addrspace(1)* %179, align 4, !tbaa !10\l  %181 = fmul contract float %176, %180\l  %182 = fadd contract float %171, %181\l  %183 = or i32 %149, 3\l  %184 = add nsw i32 %183, %142\l  %185 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %184\l  %186 = addrspacecast float addrspace(3)* %185 to float*\l  %187 = load volatile float, float* %186, align 4, !tbaa !10\l  %188 = add i32 %146, %183\l  %189 = sext i32 %188 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %1, i64 %189\l  %191 = load float, float addrspace(1)* %190, align 4, !tbaa !10\l  %192 = fmul contract float %187, %191\l  %193 = fadd contract float %182, %192\l  %194 = or i32 %149, 4\l  %195 = add nsw i32 %194, %142\l  %196 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %195\l  %197 = addrspacecast float addrspace(3)* %196 to float*\l  %198 = load volatile float, float* %197, align 4, !tbaa !10\l  %199 = add i32 %146, %194\l  %200 = sext i32 %199 to i64\l  %201 = getelementptr inbounds float, float addrspace(1)* %1, i64 %200\l  %202 = load float, float addrspace(1)* %201, align 4, !tbaa !10\l  %203 = fmul contract float %198, %202\l  %204 = fadd contract float %193, %203\l  %205 = or i32 %149, 5\l  %206 = add nsw i32 %205, %142\l  %207 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %206\l  %208 = addrspacecast float addrspace(3)* %207 to float*\l  %209 = load volatile float, float* %208, align 4, !tbaa !10\l  %210 = add i32 %146, %205\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds float, float addrspace(1)* %1, i64 %211\l  %213 = load float, float addrspace(1)* %212, align 4, !tbaa !10\l  %214 = fmul contract float %209, %213\l  %215 = fadd contract float %204, %214\l  %216 = or i32 %149, 6\l  %217 = add nsw i32 %216, %142\l  %218 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %217\l  %219 = addrspacecast float addrspace(3)* %218 to float*\l  %220 = load volatile float, float* %219, align 4, !tbaa !10\l  %221 = add i32 %146, %216\l  %222 = sext i32 %221 to i64\l  %223 = getelementptr inbounds float, float addrspace(1)* %1, i64 %222\l  %224 = load float, float addrspace(1)* %223, align 4, !tbaa !10\l  %225 = fmul contract float %220, %224\l  %226 = fadd contract float %215, %225\l  %227 = or i32 %149, 7\l  %228 = add nsw i32 %227, %142\l  %229 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %228\l  %230 = addrspacecast float addrspace(3)* %229 to float*\l  %231 = load volatile float, float* %230, align 4, !tbaa !10\l  %232 = add i32 %146, %227\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %1, i64 %233\l  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !10\l  %236 = fmul contract float %231, %235\l  %237 = fadd contract float %226, %236\l  %238 = add nuw nsw i32 %149, 8\l  %239 = add i32 %150, 8\l  %240 = icmp eq i32 %239, %117\l  br i1 %240, label %241, label %147, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5266130:s0 -> Node0x52660e0;
	Node0x5266130:s1 -> Node0x5266130;
	Node0x52660e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%241:\l241:                                              \l  %242 = phi float [ undef, %141 ], [ %237, %147 ]\l  %243 = phi float [ %139, %141 ], [ %237, %147 ]\l  %244 = phi i32 [ 0, %141 ], [ %238, %147 ]\l  br i1 %118, label %262, label %245\l|{<s0>T|<s1>F}}"];
	Node0x52660e0:s0 -> Node0x5265020;
	Node0x52660e0:s1 -> Node0x5269a60;
	Node0x5269a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%245:\l245:                                              \l  %246 = phi float [ %258, %245 ], [ %243, %241 ]\l  %247 = phi i32 [ %259, %245 ], [ %244, %241 ]\l  %248 = phi i32 [ %260, %245 ], [ 0, %241 ]\l  %249 = add nsw i32 %247, %142\l  %250 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ16timeFilterUpdatePKdPKfS2_PKbPfPKiS7_S7_E2sW, i32 0, i32 %249\l  %251 = addrspacecast float addrspace(3)* %250 to float*\l  %252 = load volatile float, float* %251, align 4, !tbaa !10\l  %253 = add i32 %146, %247\l  %254 = sext i32 %253 to i64\l  %255 = getelementptr inbounds float, float addrspace(1)* %1, i64 %254\l  %256 = load float, float addrspace(1)* %255, align 4, !tbaa !10\l  %257 = fmul contract float %252, %256\l  %258 = fadd contract float %246, %257\l  %259 = add nuw nsw i32 %247, 1\l  %260 = add i32 %248, 1\l  %261 = icmp eq i32 %260, %115\l  br i1 %261, label %262, label %245, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5269a60:s0 -> Node0x5265020;
	Node0x5269a60:s1 -> Node0x5269a60;
	Node0x5265020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%262:\l262:                                              \l  %263 = phi float [ %139, %138 ], [ %242, %241 ], [ %258, %245 ]\l  %264 = add nuw nsw i32 %140, 1\l  %265 = icmp eq i32 %264, %19\l  br i1 %265, label %266, label %138, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5265020:s0 -> Node0x5264eb0;
	Node0x5265020:s1 -> Node0x5264e60;
	Node0x5264eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%266:\l266:                                              \l  %267 = phi float [ 0.000000e+00, %137 ], [ %263, %262 ]\l  %268 = add nsw i32 %133, %114\l  %269 = sext i32 %268 to i64\l  %270 = getelementptr inbounds float, float addrspace(1)* %4, i64 %269\l  store float %267, float addrspace(1)* %270, align 4, !tbaa !10\l  br label %271\l}"];
	Node0x5264eb0 -> Node0x52634b0;
	Node0x52634b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%271:\l271:                                              \l  %272 = add nsw i32 %120, 1\l  %273 = icmp slt i32 %272, %107\l  br i1 %273, label %119, label %274, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x52634b0:s0 -> Node0x52633c0;
	Node0x52634b0:s1 -> Node0x5262d70;
	Node0x5262d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%274:\l274:                                              \l  ret void\l}"];
}
