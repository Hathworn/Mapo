digraph "CFG for '_Z15subtract_spikesPKdPKiS2_PKfS2_PfS4_S4_' function" {
	label="CFG for '_Z15subtract_spikesPKdPKiS2_PKfS2_PfS4_S4_' function";

	Node0x49b9ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%8:\l  %9 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fptosi double %9 to i32\l  %11 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %12 = load double, double addrspace(1)* %11, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %13 = fptosi double %12 to i32\l  %14 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %15 = load double, double addrspace(1)* %14, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = fptosi double %15 to i32\l  %17 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %19 = fptosi double %18 to i32\l  %20 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %22 = fptosi double %21 to i32\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 1\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = add i32 %25, %26\l  %28 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %29 = icmp slt i32 %27, %28\l  br i1 %29, label %30, label %234\l|{<s0>T|<s1>F}}"];
	Node0x49b9ac0:s0 -> Node0x49bd3c0;
	Node0x49b9ac0:s1 -> Node0x49bd450;
	Node0x49bd3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%30:\l30:                                               \l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %32 = icmp slt i32 %31, %16\l  %33 = icmp sgt i32 %22, 0\l  %34 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %35 = getelementptr i8, i8 addrspace(4)* %34, i64 6\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = getelementptr inbounds i8, i8 addrspace(4)* %34, i64 12\l  %38 = bitcast i8 addrspace(4)* %37 to i32 addrspace(4)*\l  %39 = load i32, i32 addrspace(4)* %38, align 4, !tbaa !12\l  %40 = getelementptr i8, i8 addrspace(4)* %34, i64 4\l  %41 = bitcast i8 addrspace(4)* %40 to i16 addrspace(4)*\l  %42 = load i16, i16 addrspace(4)* %41, align 4, !range !21, !invariant.load\l... !8\l  %43 = zext i16 %42 to i32\l  %44 = udiv i32 %39, %43\l  %45 = mul i32 %44, %43\l  %46 = icmp ugt i32 %39, %45\l  %47 = zext i1 %46 to i32\l  %48 = and i32 %22, 7\l  %49 = icmp ult i32 %22, 8\l  %50 = and i32 %22, -8\l  %51 = icmp eq i32 %48, 0\l  br label %52\l}"];
	Node0x49bd3c0 -> Node0x49bee60;
	Node0x49bee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %27, %30 ], [ %232, %230 ]\l  br i1 %32, label %54, label %230\l|{<s0>T|<s1>F}}"];
	Node0x49bee60:s0 -> Node0x49bf0d0;
	Node0x49bee60:s1 -> Node0x49bef90;
	Node0x49bf0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  %55 = sext i32 %53 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %55\l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %55\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %60 = load i16, i16 addrspace(4)* %36, align 2, !range !21, !invariant.load\l... !8\l  %61 = zext i16 %60 to i32\l  br label %62\l}"];
	Node0x49bf0d0 -> Node0x49bfc30;
	Node0x49bfc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%62:\l62:                                               \l  %63 = phi i32 [ %31, %54 ], [ %228, %217 ]\l  br i1 %33, label %64, label %217\l|{<s0>T|<s1>F}}"];
	Node0x49bfc30:s0 -> Node0x49bfe70;
	Node0x49bfc30:s1 -> Node0x49bfd30;
	Node0x49bfe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%64:\l64:                                               \l  %65 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  br i1 %49, label %192, label %66\l|{<s0>T|<s1>F}}"];
	Node0x49bfe70:s0 -> Node0x49bdeb0;
	Node0x49bfe70:s1 -> Node0x49bdf40;
	Node0x49bdf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%66:\l66:                                               \l  %67 = phi float [ %188, %66 ], [ 0.000000e+00, %64 ]\l  %68 = phi i32 [ %189, %66 ], [ 0, %64 ]\l  %69 = phi i32 [ %190, %66 ], [ 0, %64 ]\l  %70 = mul i32 %68, %19\l  %71 = add i32 %65, %70\l  %72 = mul i32 %71, %13\l  %73 = add i32 %72, %23\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %6, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !22\l  %77 = mul i32 %71, %16\l  %78 = add i32 %77, %63\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %7, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !22\l  %82 = fmul contract float %76, %81\l  %83 = fadd contract float %67, %82\l  %84 = or i32 %68, 1\l  %85 = mul i32 %84, %19\l  %86 = add i32 %65, %85\l  %87 = mul i32 %86, %13\l  %88 = add i32 %87, %23\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %6, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !22\l  %92 = mul i32 %86, %16\l  %93 = add i32 %92, %63\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %7, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !22\l  %97 = fmul contract float %91, %96\l  %98 = fadd contract float %83, %97\l  %99 = or i32 %68, 2\l  %100 = mul i32 %99, %19\l  %101 = add i32 %65, %100\l  %102 = mul i32 %101, %13\l  %103 = add i32 %102, %23\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %6, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !22\l  %107 = mul i32 %101, %16\l  %108 = add i32 %107, %63\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %7, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !22\l  %112 = fmul contract float %106, %111\l  %113 = fadd contract float %98, %112\l  %114 = or i32 %68, 3\l  %115 = mul i32 %114, %19\l  %116 = add i32 %65, %115\l  %117 = mul i32 %116, %13\l  %118 = add i32 %117, %23\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %6, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !22\l  %122 = mul i32 %116, %16\l  %123 = add i32 %122, %63\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %7, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !22\l  %127 = fmul contract float %121, %126\l  %128 = fadd contract float %113, %127\l  %129 = or i32 %68, 4\l  %130 = mul i32 %129, %19\l  %131 = add i32 %65, %130\l  %132 = mul i32 %131, %13\l  %133 = add i32 %132, %23\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %6, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !22\l  %137 = mul i32 %131, %16\l  %138 = add i32 %137, %63\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds float, float addrspace(1)* %7, i64 %139\l  %141 = load float, float addrspace(1)* %140, align 4, !tbaa !22\l  %142 = fmul contract float %136, %141\l  %143 = fadd contract float %128, %142\l  %144 = or i32 %68, 5\l  %145 = mul i32 %144, %19\l  %146 = add i32 %65, %145\l  %147 = mul i32 %146, %13\l  %148 = add i32 %147, %23\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %6, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !22\l  %152 = mul i32 %146, %16\l  %153 = add i32 %152, %63\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %7, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !22\l  %157 = fmul contract float %151, %156\l  %158 = fadd contract float %143, %157\l  %159 = or i32 %68, 6\l  %160 = mul i32 %159, %19\l  %161 = add i32 %65, %160\l  %162 = mul i32 %161, %13\l  %163 = add i32 %162, %23\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %6, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !22\l  %167 = mul i32 %161, %16\l  %168 = add i32 %167, %63\l  %169 = sext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %7, i64 %169\l  %171 = load float, float addrspace(1)* %170, align 4, !tbaa !22\l  %172 = fmul contract float %166, %171\l  %173 = fadd contract float %158, %172\l  %174 = or i32 %68, 7\l  %175 = mul i32 %174, %19\l  %176 = add i32 %65, %175\l  %177 = mul i32 %176, %13\l  %178 = add i32 %177, %23\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %6, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !22\l  %182 = mul i32 %176, %16\l  %183 = add i32 %182, %63\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %7, i64 %184\l  %186 = load float, float addrspace(1)* %185, align 4, !tbaa !22\l  %187 = fmul contract float %181, %186\l  %188 = fadd contract float %173, %187\l  %189 = add nuw nsw i32 %68, 8\l  %190 = add i32 %69, 8\l  %191 = icmp eq i32 %190, %50\l  br i1 %191, label %192, label %66, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x49bdf40:s0 -> Node0x49bdeb0;
	Node0x49bdf40:s1 -> Node0x49bdf40;
	Node0x49bdeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%192:\l192:                                              \l  %193 = phi float [ undef, %64 ], [ %188, %66 ]\l  %194 = phi float [ 0.000000e+00, %64 ], [ %188, %66 ]\l  %195 = phi i32 [ 0, %64 ], [ %189, %66 ]\l  br i1 %51, label %217, label %196\l|{<s0>T|<s1>F}}"];
	Node0x49bdeb0:s0 -> Node0x49bfd30;
	Node0x49bdeb0:s1 -> Node0x49c6700;
	Node0x49c6700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%196:\l196:                                              \l  %197 = phi float [ %213, %196 ], [ %194, %192 ]\l  %198 = phi i32 [ %214, %196 ], [ %195, %192 ]\l  %199 = phi i32 [ %215, %196 ], [ 0, %192 ]\l  %200 = mul i32 %198, %19\l  %201 = add i32 %65, %200\l  %202 = mul i32 %201, %13\l  %203 = add i32 %202, %23\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %6, i64 %204\l  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !22\l  %207 = mul i32 %201, %16\l  %208 = add i32 %207, %63\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds float, float addrspace(1)* %7, i64 %209\l  %211 = load float, float addrspace(1)* %210, align 4, !tbaa !22\l  %212 = fmul contract float %206, %211\l  %213 = fadd contract float %197, %212\l  %214 = add nuw nsw i32 %198, 1\l  %215 = add i32 %199, 1\l  %216 = icmp eq i32 %215, %48\l  br i1 %216, label %217, label %196, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x49c6700:s0 -> Node0x49bfd30;
	Node0x49c6700:s1 -> Node0x49c6700;
	Node0x49bfd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%217:\l217:                                              \l  %218 = phi float [ 0.000000e+00, %62 ], [ %193, %192 ], [ %213, %196 ]\l  %219 = load float, float addrspace(1)* %57, align 4, !tbaa !22\l  %220 = fmul contract float %218, %219\l  %221 = mul nsw i32 %63, %10\l  %222 = add i32 %221, %23\l  %223 = add i32 %222, %59\l  %224 = sext i32 %223 to i64\l  %225 = getelementptr inbounds float, float addrspace(1)* %5, i64 %224\l  %226 = load float, float addrspace(1)* %225, align 4, !tbaa !22\l  %227 = fsub contract float %226, %220\l  store float %227, float addrspace(1)* %225, align 4, !tbaa !22\l  %228 = add i32 %63, %61\l  %229 = icmp slt i32 %228, %16\l  br i1 %229, label %62, label %230, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x49bfd30:s0 -> Node0x49bfc30;
	Node0x49bfd30:s1 -> Node0x49bef90;
	Node0x49bef90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%230:\l230:                                              \l  %231 = add i32 %44, %53\l  %232 = add i32 %231, %47\l  %233 = icmp slt i32 %232, %28\l  br i1 %233, label %52, label %234, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x49bef90:s0 -> Node0x49bee60;
	Node0x49bef90:s1 -> Node0x49bd450;
	Node0x49bd450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%234:\l234:                                              \l  ret void\l}"];
}
