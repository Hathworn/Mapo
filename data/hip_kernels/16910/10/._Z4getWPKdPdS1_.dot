digraph "CFG for '_Z4getWPKdPdS1_' function" {
	label="CFG for '_Z4getWPKdPdS1_' function";

	Node0x5272f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%3:\l  %4 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %5 = load double, double addrspace(1)* %4, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %6 = fptosi double %5 to i32\l  %7 = freeze i32 %6\l  %8 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %9 = load double, double addrspace(1)* %8, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fptosi double %9 to i32\l  %11 = freeze i32 %10\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %14 = fptosi double %13 to i32\l  %15 = getelementptr inbounds double, double addrspace(1)* %0, i64 11\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %17 = fptosi double %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = icmp sgt i32 %7, 0\l  br i1 %20, label %21, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5272f90:s0 -> Node0x5275e40;
	Node0x5272f90:s1 -> Node0x5275ed0;
	Node0x5275e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %19, %7\l  %23 = mul nsw i32 %22, %7\l  %24 = and i32 %7, 7\l  %25 = icmp ult i32 %7, 8\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5275e40:s0 -> Node0x52762b0;
	Node0x5275e40:s1 -> Node0x5276300;
	Node0x5276300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%26:\l26:                                               \l  %27 = and i32 %7, -8\l  br label %54\l}"];
	Node0x5276300 -> Node0x5276500;
	Node0x52762b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%28:\l28:                                               \l  %29 = phi i32 [ 0, %21 ], [ %128, %54 ]\l  %30 = icmp eq i32 %24, 0\l  br i1 %30, label %45, label %31\l|{<s0>T|<s1>F}}"];
	Node0x52762b0:s0 -> Node0x5275ed0;
	Node0x52762b0:s1 -> Node0x5276730;
	Node0x5276730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%31:\l31:                                               \l  %32 = phi i32 [ %42, %31 ], [ %29, %28 ]\l  %33 = phi i32 [ %43, %31 ], [ 0, %28 ]\l  %34 = mul nsw i32 %32, %7\l  %35 = add nsw i32 %34, %18\l  %36 = add nsw i32 %35, %23\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %40 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %35\l  %41 = addrspacecast double addrspace(3)* %40 to double*\l  store volatile double %39, double* %41, align 8, !tbaa !4\l  %42 = add nuw nsw i32 %32, 1\l  %43 = add i32 %33, 1\l  %44 = icmp eq i32 %43, %24\l  br i1 %44, label %45, label %31, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5276730:s0 -> Node0x5275ed0;
	Node0x5276730:s1 -> Node0x5276730;
	Node0x5275ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%45:\l45:                                               \l  %46 = icmp sgt i32 %11, 0\l  br i1 %46, label %47, label %194\l|{<s0>T|<s1>F}}"];
	Node0x5275ed0:s0 -> Node0x5277520;
	Node0x5275ed0:s1 -> Node0x5277570;
	Node0x5277520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%47:\l47:                                               \l  %48 = mul nsw i32 %19, %7\l  %49 = add nsw i32 %48, %18\l  %50 = and i32 %11, 3\l  %51 = icmp ult i32 %11, 4\l  br i1 %51, label %176, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5277520:s0 -> Node0x52778f0;
	Node0x5277520:s1 -> Node0x5277940;
	Node0x5277940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%52:\l52:                                               \l  %53 = and i32 %11, -4\l  br label %131\l}"];
	Node0x5277940 -> Node0x5277b10;
	Node0x5276500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %26 ], [ %128, %54 ]\l  %56 = phi i32 [ 0, %26 ], [ %129, %54 ]\l  %57 = mul nsw i32 %55, %7\l  %58 = add nsw i32 %57, %18\l  %59 = add nsw i32 %58, %23\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %1, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %63 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %58\l  %64 = addrspacecast double addrspace(3)* %63 to double*\l  store volatile double %62, double* %64, align 8, !tbaa !4\l  %65 = or i32 %55, 1\l  %66 = mul nsw i32 %65, %7\l  %67 = add nsw i32 %66, %18\l  %68 = add nsw i32 %67, %23\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds double, double addrspace(1)* %1, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %72 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %67\l  %73 = addrspacecast double addrspace(3)* %72 to double*\l  store volatile double %71, double* %73, align 8, !tbaa !4\l  %74 = or i32 %55, 2\l  %75 = mul nsw i32 %74, %7\l  %76 = add nsw i32 %75, %18\l  %77 = add nsw i32 %76, %23\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %81 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %76\l  %82 = addrspacecast double addrspace(3)* %81 to double*\l  store volatile double %80, double* %82, align 8, !tbaa !4\l  %83 = or i32 %55, 3\l  %84 = mul nsw i32 %83, %7\l  %85 = add nsw i32 %84, %18\l  %86 = add nsw i32 %85, %23\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %1, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %90 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %85\l  %91 = addrspacecast double addrspace(3)* %90 to double*\l  store volatile double %89, double* %91, align 8, !tbaa !4\l  %92 = or i32 %55, 4\l  %93 = mul nsw i32 %92, %7\l  %94 = add nsw i32 %93, %18\l  %95 = add nsw i32 %94, %23\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds double, double addrspace(1)* %1, i64 %96\l  %98 = load double, double addrspace(1)* %97, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %99 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %94\l  %100 = addrspacecast double addrspace(3)* %99 to double*\l  store volatile double %98, double* %100, align 8, !tbaa !4\l  %101 = or i32 %55, 5\l  %102 = mul nsw i32 %101, %7\l  %103 = add nsw i32 %102, %18\l  %104 = add nsw i32 %103, %23\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds double, double addrspace(1)* %1, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %108 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %103\l  %109 = addrspacecast double addrspace(3)* %108 to double*\l  store volatile double %107, double* %109, align 8, !tbaa !4\l  %110 = or i32 %55, 6\l  %111 = mul nsw i32 %110, %7\l  %112 = add nsw i32 %111, %18\l  %113 = add nsw i32 %112, %23\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds double, double addrspace(1)* %1, i64 %114\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %117 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %112\l  %118 = addrspacecast double addrspace(3)* %117 to double*\l  store volatile double %116, double* %118, align 8, !tbaa !4\l  %119 = or i32 %55, 7\l  %120 = mul nsw i32 %119, %7\l  %121 = add nsw i32 %120, %18\l  %122 = add nsw i32 %121, %23\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds double, double addrspace(1)* %1, i64 %123\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %126 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %121\l  %127 = addrspacecast double addrspace(3)* %126 to double*\l  store volatile double %125, double* %127, align 8, !tbaa !4\l  %128 = add nuw nsw i32 %55, 8\l  %129 = add i32 %56, 8\l  %130 = icmp eq i32 %129, %27\l  br i1 %130, label %28, label %54, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5276500:s0 -> Node0x52762b0;
	Node0x5276500:s1 -> Node0x5276500;
	Node0x5277b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%131:\l131:                                              \l  %132 = phi i32 [ 0, %52 ], [ %173, %131 ]\l  %133 = phi i32 [ 0, %52 ], [ %174, %131 ]\l  %134 = mul nsw i32 %132, %7\l  %135 = mul nsw i32 %134, %14\l  %136 = add nsw i32 %49, %135\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds double, double addrspace(1)* %2, i64 %137\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %140 = add nsw i32 %134, %18\l  %141 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %140\l  %142 = addrspacecast double addrspace(3)* %141 to double*\l  store volatile double %139, double* %142, align 8, !tbaa !4\l  %143 = or i32 %132, 1\l  %144 = mul nsw i32 %143, %7\l  %145 = mul nsw i32 %144, %14\l  %146 = add nsw i32 %49, %145\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds double, double addrspace(1)* %2, i64 %147\l  %149 = load double, double addrspace(1)* %148, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %150 = add nsw i32 %144, %18\l  %151 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %150\l  %152 = addrspacecast double addrspace(3)* %151 to double*\l  store volatile double %149, double* %152, align 8, !tbaa !4\l  %153 = or i32 %132, 2\l  %154 = mul nsw i32 %153, %7\l  %155 = mul nsw i32 %154, %14\l  %156 = add nsw i32 %49, %155\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds double, double addrspace(1)* %2, i64 %157\l  %159 = load double, double addrspace(1)* %158, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %160 = add nsw i32 %154, %18\l  %161 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %160\l  %162 = addrspacecast double addrspace(3)* %161 to double*\l  store volatile double %159, double* %162, align 8, !tbaa !4\l  %163 = or i32 %132, 3\l  %164 = mul nsw i32 %163, %7\l  %165 = mul nsw i32 %164, %14\l  %166 = add nsw i32 %49, %165\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds double, double addrspace(1)* %2, i64 %167\l  %169 = load double, double addrspace(1)* %168, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %170 = add nsw i32 %164, %18\l  %171 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %170\l  %172 = addrspacecast double addrspace(3)* %171 to double*\l  store volatile double %169, double* %172, align 8, !tbaa !4\l  %173 = add nuw nsw i32 %132, 4\l  %174 = add i32 %133, 4\l  %175 = icmp eq i32 %174, %53\l  br i1 %175, label %176, label %131, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5277b10:s0 -> Node0x52778f0;
	Node0x5277b10:s1 -> Node0x5277b10;
	Node0x52778f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%176:\l176:                                              \l  %177 = phi i32 [ 0, %47 ], [ %173, %131 ]\l  %178 = icmp eq i32 %50, 0\l  br i1 %178, label %194, label %179\l|{<s0>T|<s1>F}}"];
	Node0x52778f0:s0 -> Node0x5277570;
	Node0x52778f0:s1 -> Node0x527d3a0;
	Node0x527d3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%179:\l179:                                              \l  %180 = phi i32 [ %191, %179 ], [ %177, %176 ]\l  %181 = phi i32 [ %192, %179 ], [ 0, %176 ]\l  %182 = mul nsw i32 %180, %7\l  %183 = mul nsw i32 %182, %14\l  %184 = add nsw i32 %49, %183\l  %185 = sext i32 %184 to i64\l  %186 = getelementptr inbounds double, double addrspace(1)* %2, i64 %185\l  %187 = load double, double addrspace(1)* %186, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %188 = add nsw i32 %182, %18\l  %189 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %188\l  %190 = addrspacecast double addrspace(3)* %189 to double*\l  store volatile double %187, double* %190, align 8, !tbaa !4\l  %191 = add nuw nsw i32 %180, 1\l  %192 = add i32 %181, 1\l  %193 = icmp eq i32 %192, %50\l  br i1 %193, label %194, label %179, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x527d3a0:s0 -> Node0x5277570;
	Node0x527d3a0:s1 -> Node0x527d3a0;
	Node0x5277570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%194:\l194:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %46, label %195, label %543\l|{<s0>T|<s1>F}}"];
	Node0x5277570:s0 -> Node0x527e150;
	Node0x5277570:s1 -> Node0x527e1e0;
	Node0x527e150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%195:\l195:                                              \l  %196 = icmp eq i32 %18, 0\l  %197 = and i32 %7, 7\l  %198 = icmp ult i32 %7, 8\l  %199 = and i32 %7, -8\l  %200 = icmp eq i32 %197, 0\l  %201 = and i32 %7, 7\l  %202 = icmp ult i32 %7, 8\l  %203 = and i32 %7, -8\l  %204 = icmp eq i32 %201, 0\l  %205 = and i32 %7, 3\l  %206 = icmp ult i32 %7, 4\l  %207 = and i32 %7, -4\l  %208 = icmp eq i32 %205, 0\l  br label %209\l}"];
	Node0x527e150 -> Node0x527ea70;
	Node0x527ea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%209:\l209:                                              \l  %210 = phi i32 [ 0, %195 ], [ %541, %540 ]\l  %211 = mul nsw i32 %210, %7\l  %212 = add nsw i32 %211, %18\l  %213 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %212\l  %214 = addrspacecast double addrspace(3)* %213 to double*\l  br label %217\l}"];
	Node0x527ea70 -> Node0x527ef40;
	Node0x527f000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%215:\l215:                                              \l  br i1 %20, label %216, label %540\l|{<s0>T|<s1>F}}"];
	Node0x527f000:s0 -> Node0x527f090;
	Node0x527f000:s1 -> Node0x527eb30;
	Node0x527f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%216:\l216:                                              \l  br i1 %206, label %521, label %468\l|{<s0>T|<s1>F}}"];
	Node0x527f090:s0 -> Node0x527f190;
	Node0x527f090:s1 -> Node0x527f1e0;
	Node0x527ef40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%217:\l217:                                              \l  %218 = phi i32 [ 0, %209 ], [ %466, %465 ]\l  br i1 %20, label %219, label %344\l|{<s0>T|<s1>F}}"];
	Node0x527ef40:s0 -> Node0x527f460;
	Node0x527ef40:s1 -> Node0x527f4f0;
	Node0x527f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%219:\l219:                                              \l  br i1 %198, label %322, label %220\l|{<s0>T|<s1>F}}"];
	Node0x527f460:s0 -> Node0x527f630;
	Node0x527f460:s1 -> Node0x527f680;
	Node0x527f680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%220:\l220:                                              \l  %221 = phi double [ %318, %220 ], [ 0.000000e+00, %219 ]\l  %222 = phi i32 [ %319, %220 ], [ 0, %219 ]\l  %223 = phi i32 [ %320, %220 ], [ 0, %219 ]\l  %224 = mul nsw i32 %222, %7\l  %225 = add nsw i32 %224, %18\l  %226 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %225\l  %227 = addrspacecast double addrspace(3)* %226 to double*\l  %228 = load volatile double, double* %227, align 8, !tbaa !4\l  %229 = add nsw i32 %222, %211\l  %230 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %229\l  %231 = addrspacecast double addrspace(3)* %230 to double*\l  %232 = load volatile double, double* %231, align 8, !tbaa !4\l  %233 = fmul contract double %228, %232\l  %234 = fadd contract double %221, %233\l  %235 = or i32 %222, 1\l  %236 = mul nsw i32 %235, %7\l  %237 = add nsw i32 %236, %18\l  %238 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %237\l  %239 = addrspacecast double addrspace(3)* %238 to double*\l  %240 = load volatile double, double* %239, align 8, !tbaa !4\l  %241 = add nsw i32 %235, %211\l  %242 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %241\l  %243 = addrspacecast double addrspace(3)* %242 to double*\l  %244 = load volatile double, double* %243, align 8, !tbaa !4\l  %245 = fmul contract double %240, %244\l  %246 = fadd contract double %234, %245\l  %247 = or i32 %222, 2\l  %248 = mul nsw i32 %247, %7\l  %249 = add nsw i32 %248, %18\l  %250 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %249\l  %251 = addrspacecast double addrspace(3)* %250 to double*\l  %252 = load volatile double, double* %251, align 8, !tbaa !4\l  %253 = add nsw i32 %247, %211\l  %254 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %253\l  %255 = addrspacecast double addrspace(3)* %254 to double*\l  %256 = load volatile double, double* %255, align 8, !tbaa !4\l  %257 = fmul contract double %252, %256\l  %258 = fadd contract double %246, %257\l  %259 = or i32 %222, 3\l  %260 = mul nsw i32 %259, %7\l  %261 = add nsw i32 %260, %18\l  %262 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %261\l  %263 = addrspacecast double addrspace(3)* %262 to double*\l  %264 = load volatile double, double* %263, align 8, !tbaa !4\l  %265 = add nsw i32 %259, %211\l  %266 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %265\l  %267 = addrspacecast double addrspace(3)* %266 to double*\l  %268 = load volatile double, double* %267, align 8, !tbaa !4\l  %269 = fmul contract double %264, %268\l  %270 = fadd contract double %258, %269\l  %271 = or i32 %222, 4\l  %272 = mul nsw i32 %271, %7\l  %273 = add nsw i32 %272, %18\l  %274 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %273\l  %275 = addrspacecast double addrspace(3)* %274 to double*\l  %276 = load volatile double, double* %275, align 8, !tbaa !4\l  %277 = add nsw i32 %271, %211\l  %278 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %277\l  %279 = addrspacecast double addrspace(3)* %278 to double*\l  %280 = load volatile double, double* %279, align 8, !tbaa !4\l  %281 = fmul contract double %276, %280\l  %282 = fadd contract double %270, %281\l  %283 = or i32 %222, 5\l  %284 = mul nsw i32 %283, %7\l  %285 = add nsw i32 %284, %18\l  %286 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %285\l  %287 = addrspacecast double addrspace(3)* %286 to double*\l  %288 = load volatile double, double* %287, align 8, !tbaa !4\l  %289 = add nsw i32 %283, %211\l  %290 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %289\l  %291 = addrspacecast double addrspace(3)* %290 to double*\l  %292 = load volatile double, double* %291, align 8, !tbaa !4\l  %293 = fmul contract double %288, %292\l  %294 = fadd contract double %282, %293\l  %295 = or i32 %222, 6\l  %296 = mul nsw i32 %295, %7\l  %297 = add nsw i32 %296, %18\l  %298 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %297\l  %299 = addrspacecast double addrspace(3)* %298 to double*\l  %300 = load volatile double, double* %299, align 8, !tbaa !4\l  %301 = add nsw i32 %295, %211\l  %302 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %301\l  %303 = addrspacecast double addrspace(3)* %302 to double*\l  %304 = load volatile double, double* %303, align 8, !tbaa !4\l  %305 = fmul contract double %300, %304\l  %306 = fadd contract double %294, %305\l  %307 = or i32 %222, 7\l  %308 = mul nsw i32 %307, %7\l  %309 = add nsw i32 %308, %18\l  %310 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %309\l  %311 = addrspacecast double addrspace(3)* %310 to double*\l  %312 = load volatile double, double* %311, align 8, !tbaa !4\l  %313 = add nsw i32 %307, %211\l  %314 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %313\l  %315 = addrspacecast double addrspace(3)* %314 to double*\l  %316 = load volatile double, double* %315, align 8, !tbaa !4\l  %317 = fmul contract double %312, %316\l  %318 = fadd contract double %306, %317\l  %319 = add nuw nsw i32 %222, 8\l  %320 = add i32 %223, 8\l  %321 = icmp eq i32 %320, %199\l  br i1 %321, label %322, label %220, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x527f680:s0 -> Node0x527f630;
	Node0x527f680:s1 -> Node0x527f680;
	Node0x527f630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%322:\l322:                                              \l  %323 = phi double [ undef, %219 ], [ %318, %220 ]\l  %324 = phi double [ 0.000000e+00, %219 ], [ %318, %220 ]\l  %325 = phi i32 [ 0, %219 ], [ %319, %220 ]\l  br i1 %200, label %344, label %326\l|{<s0>T|<s1>F}}"];
	Node0x527f630:s0 -> Node0x527f4f0;
	Node0x527f630:s1 -> Node0x5284b00;
	Node0x5284b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%326:\l326:                                              \l  %327 = phi double [ %340, %326 ], [ %324, %322 ]\l  %328 = phi i32 [ %341, %326 ], [ %325, %322 ]\l  %329 = phi i32 [ %342, %326 ], [ 0, %322 ]\l  %330 = mul nsw i32 %328, %7\l  %331 = add nsw i32 %330, %18\l  %332 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %331\l  %333 = addrspacecast double addrspace(3)* %332 to double*\l  %334 = load volatile double, double* %333, align 8, !tbaa !4\l  %335 = add nsw i32 %328, %211\l  %336 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %335\l  %337 = addrspacecast double addrspace(3)* %336 to double*\l  %338 = load volatile double, double* %337, align 8, !tbaa !4\l  %339 = fmul contract double %334, %338\l  %340 = fadd contract double %327, %339\l  %341 = add nuw nsw i32 %328, 1\l  %342 = add i32 %329, 1\l  %343 = icmp eq i32 %342, %197\l  br i1 %343, label %344, label %326, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5284b00:s0 -> Node0x527f4f0;
	Node0x5284b00:s1 -> Node0x5284b00;
	Node0x527f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%344:\l344:                                              \l  %345 = phi double [ 0.000000e+00, %217 ], [ %323, %322 ], [ %340, %326 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %346 = icmp ult i32 %218, 99\l  br i1 %346, label %347, label %465\l|{<s0>T|<s1>F}}"];
	Node0x527f4f0:s0 -> Node0x5286660;
	Node0x527f4f0:s1 -> Node0x527f320;
	Node0x5286660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%347:\l347:                                              \l  store volatile double %345, double* %214, align 8, !tbaa !4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %196, label %348, label %462\l|{<s0>T|<s1>F}}"];
	Node0x5286660:s0 -> Node0x5286960;
	Node0x5286660:s1 -> Node0x52869b0;
	Node0x5286960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%348:\l348:                                              \l  br i1 %20, label %349, label %438\l|{<s0>T|<s1>F}}"];
	Node0x5286960:s0 -> Node0x5286ab0;
	Node0x5286960:s1 -> Node0x5286b00;
	Node0x5286ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%349:\l349:                                              \l  br i1 %202, label %420, label %350\l|{<s0>T|<s1>F}}"];
	Node0x5286ab0:s0 -> Node0x5286c40;
	Node0x5286ab0:s1 -> Node0x5286c90;
	Node0x5286c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%350:\l350:                                              \l  %351 = phi double [ %416, %350 ], [ 0x3EE4F8B580000000, %349 ]\l  %352 = phi i32 [ %417, %350 ], [ 0, %349 ]\l  %353 = phi i32 [ %418, %350 ], [ 0, %349 ]\l  %354 = add nsw i32 %352, %211\l  %355 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %354\l  %356 = addrspacecast double addrspace(3)* %355 to double*\l  %357 = load volatile double, double* %356, align 8, !tbaa !4\l  %358 = load volatile double, double* %356, align 8, !tbaa !4\l  %359 = fmul contract double %357, %358\l  %360 = fadd contract double %351, %359\l  %361 = or i32 %352, 1\l  %362 = add nsw i32 %361, %211\l  %363 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %362\l  %364 = addrspacecast double addrspace(3)* %363 to double*\l  %365 = load volatile double, double* %364, align 8, !tbaa !4\l  %366 = load volatile double, double* %364, align 8, !tbaa !4\l  %367 = fmul contract double %365, %366\l  %368 = fadd contract double %360, %367\l  %369 = or i32 %352, 2\l  %370 = add nsw i32 %369, %211\l  %371 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %370\l  %372 = addrspacecast double addrspace(3)* %371 to double*\l  %373 = load volatile double, double* %372, align 8, !tbaa !4\l  %374 = load volatile double, double* %372, align 8, !tbaa !4\l  %375 = fmul contract double %373, %374\l  %376 = fadd contract double %368, %375\l  %377 = or i32 %352, 3\l  %378 = add nsw i32 %377, %211\l  %379 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %378\l  %380 = addrspacecast double addrspace(3)* %379 to double*\l  %381 = load volatile double, double* %380, align 8, !tbaa !4\l  %382 = load volatile double, double* %380, align 8, !tbaa !4\l  %383 = fmul contract double %381, %382\l  %384 = fadd contract double %376, %383\l  %385 = or i32 %352, 4\l  %386 = add nsw i32 %385, %211\l  %387 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %386\l  %388 = addrspacecast double addrspace(3)* %387 to double*\l  %389 = load volatile double, double* %388, align 8, !tbaa !4\l  %390 = load volatile double, double* %388, align 8, !tbaa !4\l  %391 = fmul contract double %389, %390\l  %392 = fadd contract double %384, %391\l  %393 = or i32 %352, 5\l  %394 = add nsw i32 %393, %211\l  %395 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %394\l  %396 = addrspacecast double addrspace(3)* %395 to double*\l  %397 = load volatile double, double* %396, align 8, !tbaa !4\l  %398 = load volatile double, double* %396, align 8, !tbaa !4\l  %399 = fmul contract double %397, %398\l  %400 = fadd contract double %392, %399\l  %401 = or i32 %352, 6\l  %402 = add nsw i32 %401, %211\l  %403 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %402\l  %404 = addrspacecast double addrspace(3)* %403 to double*\l  %405 = load volatile double, double* %404, align 8, !tbaa !4\l  %406 = load volatile double, double* %404, align 8, !tbaa !4\l  %407 = fmul contract double %405, %406\l  %408 = fadd contract double %400, %407\l  %409 = or i32 %352, 7\l  %410 = add nsw i32 %409, %211\l  %411 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %410\l  %412 = addrspacecast double addrspace(3)* %411 to double*\l  %413 = load volatile double, double* %412, align 8, !tbaa !4\l  %414 = load volatile double, double* %412, align 8, !tbaa !4\l  %415 = fmul contract double %413, %414\l  %416 = fadd contract double %408, %415\l  %417 = add nuw nsw i32 %352, 8\l  %418 = add i32 %353, 8\l  %419 = icmp eq i32 %418, %203\l  br i1 %419, label %420, label %350, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5286c90:s0 -> Node0x5286c40;
	Node0x5286c90:s1 -> Node0x5286c90;
	Node0x5286c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%420:\l420:                                              \l  %421 = phi double [ undef, %349 ], [ %416, %350 ]\l  %422 = phi double [ 0x3EE4F8B580000000, %349 ], [ %416, %350 ]\l  %423 = phi i32 [ 0, %349 ], [ %417, %350 ]\l  br i1 %204, label %438, label %424\l|{<s0>T|<s1>F}}"];
	Node0x5286c40:s0 -> Node0x5286b00;
	Node0x5286c40:s1 -> Node0x5289c00;
	Node0x5289c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%424:\l424:                                              \l  %425 = phi double [ %434, %424 ], [ %422, %420 ]\l  %426 = phi i32 [ %435, %424 ], [ %423, %420 ]\l  %427 = phi i32 [ %436, %424 ], [ 0, %420 ]\l  %428 = add nsw i32 %426, %211\l  %429 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %428\l  %430 = addrspacecast double addrspace(3)* %429 to double*\l  %431 = load volatile double, double* %430, align 8, !tbaa !4\l  %432 = load volatile double, double* %430, align 8, !tbaa !4\l  %433 = fmul contract double %431, %432\l  %434 = fadd contract double %425, %433\l  %435 = add nuw nsw i32 %426, 1\l  %436 = add i32 %427, 1\l  %437 = icmp eq i32 %436, %201\l  br i1 %437, label %438, label %424, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5289c00:s0 -> Node0x5286b00;
	Node0x5289c00:s1 -> Node0x5289c00;
	Node0x5286b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%438:\l438:                                              \l  %439 = phi double [ 0x3EE4F8B580000000, %348 ], [ %421, %420 ], [ %434, %424\l... ]\l  %440 = fcmp olt double %439, 0x1000000000000000\l  %441 = select i1 %440, double 0x4FF0000000000000, double 1.000000e+00\l  %442 = fmul double %439, %441\l  %443 = tail call double @llvm.amdgcn.rsq.f64(double %442)\l  %444 = fmul double %442, %443\l  %445 = fmul double %443, 5.000000e-01\l  %446 = fneg double %445\l  %447 = tail call double @llvm.fma.f64(double %446, double %444, double\l... 5.000000e-01)\l  %448 = tail call double @llvm.fma.f64(double %445, double %447, double %445)\l  %449 = tail call double @llvm.fma.f64(double %444, double %447, double %444)\l  %450 = fneg double %449\l  %451 = tail call double @llvm.fma.f64(double %450, double %449, double %442)\l  %452 = tail call double @llvm.fma.f64(double %451, double %448, double %449)\l  %453 = fneg double %452\l  %454 = tail call double @llvm.fma.f64(double %453, double %452, double %442)\l  %455 = tail call double @llvm.fma.f64(double %454, double %448, double %452)\l  %456 = select i1 %440, double 0x37F0000000000000, double 1.000000e+00\l  %457 = fmul double %456, %455\l  %458 = fcmp oeq double %442, 0.000000e+00\l  %459 = fcmp oeq double %442, 0x7FF0000000000000\l  %460 = or i1 %458, %459\l  %461 = select i1 %460, double %442, double %457\l  store volatile double %461, double* addrspacecast (double addrspace(3)*\l... getelementptr inbounds ([1 x double], [1 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2xN, i32 0, i32 0) to double*), align 8, !tbaa !4\l  br label %462\l}"];
	Node0x5286b00 -> Node0x52869b0;
	Node0x52869b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%462:\l462:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %463 = load volatile double, double* addrspacecast (double addrspace(3)*\l... getelementptr inbounds ([1 x double], [1 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2xN, i32 0, i32 0) to double*), align 8, !tbaa !4\l  %464 = fdiv contract double %345, %463\l  store volatile double %464, double* %214, align 8, !tbaa !4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %465\l}"];
	Node0x52869b0 -> Node0x527f320;
	Node0x527f320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%465:\l465:                                              \l  %466 = add nuw nsw i32 %218, 1\l  %467 = icmp eq i32 %466, 100\l  br i1 %467, label %215, label %217, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x527f320:s0 -> Node0x527f000;
	Node0x527f320:s1 -> Node0x527ef40;
	Node0x527f1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%468:\l468:                                              \l  %469 = phi i32 [ %518, %468 ], [ 0, %216 ]\l  %470 = phi i32 [ %519, %468 ], [ 0, %216 ]\l  %471 = add nsw i32 %469, %211\l  %472 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %471\l  %473 = addrspacecast double addrspace(3)* %472 to double*\l  %474 = load volatile double, double* %473, align 8, !tbaa !4\l  %475 = fmul contract double %345, %474\l  %476 = mul nsw i32 %469, %7\l  %477 = add nsw i32 %476, %18\l  %478 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %477\l  %479 = addrspacecast double addrspace(3)* %478 to double*\l  %480 = load volatile double, double* %479, align 8, !tbaa !4\l  %481 = fsub contract double %480, %475\l  store volatile double %481, double* %479, align 8, !tbaa !4\l  %482 = or i32 %469, 1\l  %483 = add nsw i32 %482, %211\l  %484 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %483\l  %485 = addrspacecast double addrspace(3)* %484 to double*\l  %486 = load volatile double, double* %485, align 8, !tbaa !4\l  %487 = fmul contract double %345, %486\l  %488 = mul nsw i32 %482, %7\l  %489 = add nsw i32 %488, %18\l  %490 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %489\l  %491 = addrspacecast double addrspace(3)* %490 to double*\l  %492 = load volatile double, double* %491, align 8, !tbaa !4\l  %493 = fsub contract double %492, %487\l  store volatile double %493, double* %491, align 8, !tbaa !4\l  %494 = or i32 %469, 2\l  %495 = add nsw i32 %494, %211\l  %496 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %495\l  %497 = addrspacecast double addrspace(3)* %496 to double*\l  %498 = load volatile double, double* %497, align 8, !tbaa !4\l  %499 = fmul contract double %345, %498\l  %500 = mul nsw i32 %494, %7\l  %501 = add nsw i32 %500, %18\l  %502 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %501\l  %503 = addrspacecast double addrspace(3)* %502 to double*\l  %504 = load volatile double, double* %503, align 8, !tbaa !4\l  %505 = fsub contract double %504, %499\l  store volatile double %505, double* %503, align 8, !tbaa !4\l  %506 = or i32 %469, 3\l  %507 = add nsw i32 %506, %211\l  %508 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %507\l  %509 = addrspacecast double addrspace(3)* %508 to double*\l  %510 = load volatile double, double* %509, align 8, !tbaa !4\l  %511 = fmul contract double %345, %510\l  %512 = mul nsw i32 %506, %7\l  %513 = add nsw i32 %512, %18\l  %514 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %513\l  %515 = addrspacecast double addrspace(3)* %514 to double*\l  %516 = load volatile double, double* %515, align 8, !tbaa !4\l  %517 = fsub contract double %516, %511\l  store volatile double %517, double* %515, align 8, !tbaa !4\l  %518 = add nuw nsw i32 %469, 4\l  %519 = add i32 %470, 4\l  %520 = icmp eq i32 %519, %207\l  br i1 %520, label %521, label %468, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x527f1e0:s0 -> Node0x527f190;
	Node0x527f1e0:s1 -> Node0x527f1e0;
	Node0x527f190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%521:\l521:                                              \l  %522 = phi i32 [ 0, %216 ], [ %518, %468 ]\l  br i1 %208, label %540, label %523\l|{<s0>T|<s1>F}}"];
	Node0x527f190:s0 -> Node0x527eb30;
	Node0x527f190:s1 -> Node0x5281ec0;
	Node0x5281ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%523:\l523:                                              \l  %524 = phi i32 [ %537, %523 ], [ %522, %521 ]\l  %525 = phi i32 [ %538, %523 ], [ 0, %521 ]\l  %526 = add nsw i32 %524, %211\l  %527 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %526\l  %528 = addrspacecast double addrspace(3)* %527 to double*\l  %529 = load volatile double, double* %528, align 8, !tbaa !4\l  %530 = fmul contract double %345, %529\l  %531 = mul nsw i32 %524, %7\l  %532 = add nsw i32 %531, %18\l  %533 = getelementptr inbounds [5041 x double], [5041 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E4swtw, i32 0, i32 %532\l  %534 = addrspacecast double addrspace(3)* %533 to double*\l  %535 = load volatile double, double* %534, align 8, !tbaa !4\l  %536 = fsub contract double %535, %530\l  store volatile double %536, double* %534, align 8, !tbaa !4\l  %537 = add nuw nsw i32 %524, 1\l  %538 = add i32 %525, 1\l  %539 = icmp eq i32 %538, %205\l  br i1 %539, label %540, label %523, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5281ec0:s0 -> Node0x527eb30;
	Node0x5281ec0:s1 -> Node0x5281ec0;
	Node0x527eb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%540:\l540:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %541 = add nuw nsw i32 %210, 1\l  %542 = icmp eq i32 %541, %11\l  br i1 %542, label %543, label %209, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x527eb30:s0 -> Node0x527e1e0;
	Node0x527eb30:s1 -> Node0x527ea70;
	Node0x527e1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%543:\l543:                                              \l  %544 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %17\l  %545 = addrspacecast double addrspace(3)* %544 to double*\l  %546 = load volatile double, double* %545, align 8, !tbaa !4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %547 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %18\l  %548 = addrspacecast double addrspace(3)* %547 to double*\l  %549 = load volatile double, double* %548, align 8, !tbaa !4\l  %550 = fneg contract double %549\l  %551 = tail call double @llvm.copysign.f64(double 1.000000e+00, double %546)\l  %552 = fmul contract double %551, %550\l  store volatile double %552, double* %548, align 8, !tbaa !4\l  br i1 %46, label %553, label %623\l|{<s0>T|<s1>F}}"];
	Node0x527e1e0:s0 -> Node0x5284120;
	Node0x527e1e0:s1 -> Node0x52841b0;
	Node0x5284120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%553:\l553:                                              \l  %554 = mul nsw i32 %19, %7\l  %555 = add nsw i32 %554, %18\l  %556 = and i32 %11, 3\l  %557 = icmp ult i32 %11, 4\l  br i1 %557, label %605, label %558\l|{<s0>T|<s1>F}}"];
	Node0x5284120:s0 -> Node0x5284530;
	Node0x5284120:s1 -> Node0x5284580;
	Node0x5284580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%558:\l558:                                              \l  %559 = and i32 %11, -4\l  br label %560\l}"];
	Node0x5284580 -> Node0x5292ad0;
	Node0x5292ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%560:\l560:                                              \l  %561 = phi i32 [ 0, %558 ], [ %602, %560 ]\l  %562 = phi i32 [ 0, %558 ], [ %603, %560 ]\l  %563 = mul nsw i32 %561, %7\l  %564 = add nsw i32 %563, %18\l  %565 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %564\l  %566 = addrspacecast double addrspace(3)* %565 to double*\l  %567 = load volatile double, double* %566, align 8, !tbaa !4\l  %568 = mul nsw i32 %563, %14\l  %569 = add nsw i32 %555, %568\l  %570 = sext i32 %569 to i64\l  %571 = getelementptr inbounds double, double addrspace(1)* %2, i64 %570\l  store double %567, double addrspace(1)* %571, align 8, !tbaa !4\l  %572 = or i32 %561, 1\l  %573 = mul nsw i32 %572, %7\l  %574 = add nsw i32 %573, %18\l  %575 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %574\l  %576 = addrspacecast double addrspace(3)* %575 to double*\l  %577 = load volatile double, double* %576, align 8, !tbaa !4\l  %578 = mul nsw i32 %573, %14\l  %579 = add nsw i32 %555, %578\l  %580 = sext i32 %579 to i64\l  %581 = getelementptr inbounds double, double addrspace(1)* %2, i64 %580\l  store double %577, double addrspace(1)* %581, align 8, !tbaa !4\l  %582 = or i32 %561, 2\l  %583 = mul nsw i32 %582, %7\l  %584 = add nsw i32 %583, %18\l  %585 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %584\l  %586 = addrspacecast double addrspace(3)* %585 to double*\l  %587 = load volatile double, double* %586, align 8, !tbaa !4\l  %588 = mul nsw i32 %583, %14\l  %589 = add nsw i32 %555, %588\l  %590 = sext i32 %589 to i64\l  %591 = getelementptr inbounds double, double addrspace(1)* %2, i64 %590\l  store double %587, double addrspace(1)* %591, align 8, !tbaa !4\l  %592 = or i32 %561, 3\l  %593 = mul nsw i32 %592, %7\l  %594 = add nsw i32 %593, %18\l  %595 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %594\l  %596 = addrspacecast double addrspace(3)* %595 to double*\l  %597 = load volatile double, double* %596, align 8, !tbaa !4\l  %598 = mul nsw i32 %593, %14\l  %599 = add nsw i32 %555, %598\l  %600 = sext i32 %599 to i64\l  %601 = getelementptr inbounds double, double addrspace(1)* %2, i64 %600\l  store double %597, double addrspace(1)* %601, align 8, !tbaa !4\l  %602 = add nuw nsw i32 %561, 4\l  %603 = add i32 %562, 4\l  %604 = icmp eq i32 %603, %559\l  br i1 %604, label %605, label %560, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5292ad0:s0 -> Node0x5284530;
	Node0x5292ad0:s1 -> Node0x5292ad0;
	Node0x5284530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%605:\l605:                                              \l  %606 = phi i32 [ 0, %553 ], [ %602, %560 ]\l  %607 = icmp eq i32 %556, 0\l  br i1 %607, label %623, label %608\l|{<s0>T|<s1>F}}"];
	Node0x5284530:s0 -> Node0x52841b0;
	Node0x5284530:s1 -> Node0x5295590;
	Node0x5295590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%608:\l608:                                              \l  %609 = phi i32 [ %620, %608 ], [ %606, %605 ]\l  %610 = phi i32 [ %621, %608 ], [ 0, %605 ]\l  %611 = mul nsw i32 %609, %7\l  %612 = add nsw i32 %611, %18\l  %613 = getelementptr inbounds [213 x double], [213 x double] addrspace(3)*\l... @_ZZ4getWPKdPdS1_E2sW, i32 0, i32 %612\l  %614 = addrspacecast double addrspace(3)* %613 to double*\l  %615 = load volatile double, double* %614, align 8, !tbaa !4\l  %616 = mul nsw i32 %611, %14\l  %617 = add nsw i32 %555, %616\l  %618 = sext i32 %617 to i64\l  %619 = getelementptr inbounds double, double addrspace(1)* %2, i64 %618\l  store double %615, double addrspace(1)* %619, align 8, !tbaa !4\l  %620 = add nuw nsw i32 %609, 1\l  %621 = add i32 %610, 1\l  %622 = icmp eq i32 %621, %556\l  br i1 %622, label %623, label %608, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5295590:s0 -> Node0x52841b0;
	Node0x5295590:s1 -> Node0x5295590;
	Node0x52841b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%623:\l623:                                              \l  ret void\l}"];
}
