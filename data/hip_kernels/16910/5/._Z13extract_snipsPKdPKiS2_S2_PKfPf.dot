digraph "CFG for '_Z13extract_snipsPKdPKiS2_S2_PKfPf' function" {
	label="CFG for '_Z13extract_snipsPKdPKiS2_S2_PKfPf' function";

	Node0x453dac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%6:\l  %7 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fptosi double %10 to i32\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %14 = fptosi double %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 1\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %19 = icmp sgt i32 %18, 0\l  br i1 %19, label %20, label %58\l|{<s0>T|<s1>F}}"];
	Node0x453dac0:s0 -> Node0x45408e0;
	Node0x453dac0:s1 -> Node0x4540970;
	Node0x45408e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%20:\l20:                                               \l  %21 = tail call i32 @llvm.smin.i32(i32 %18, i32 5000)\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y()\l  %23 = icmp sge i32 %22, %14\l  %24 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %25 = getelementptr i8, i8 addrspace(4)* %24, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  br label %27\l}"];
	Node0x45408e0 -> Node0x4541290;
	Node0x4541290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %20 ], [ %56, %55 ]\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %32 = icmp ne i32 %31, %16\l  %33 = select i1 %32, i1 true, i1 %23\l  br i1 %33, label %55, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4541290:s0 -> Node0x45413c0;
	Node0x4541290:s1 -> Node0x4540520;
	Node0x4540520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %29\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %37 = mul i32 %28, %14\l  %38 = load i16, i16 addrspace(4)* %26, align 2, !range !12, !invariant.load\l... !8\l  %39 = zext i16 %38 to i32\l  br label %40\l}"];
	Node0x4540520 -> Node0x4542500;
	Node0x4542500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %22, %34 ], [ %53, %40 ]\l  %42 = mul nsw i32 %41, %8\l  %43 = add i32 %42, %15\l  %44 = add i32 %43, %36\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !13\l  %48 = add i32 %41, %37\l  %49 = mul i32 %48, %11\l  %50 = add i32 %49, %15\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  store float %47, float addrspace(1)* %52, align 4, !tbaa !13\l  %53 = add i32 %41, %39\l  %54 = icmp slt i32 %53, %14\l  br i1 %54, label %40, label %55, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4542500:s0 -> Node0x4542500;
	Node0x4542500:s1 -> Node0x45413c0;
	Node0x45413c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%55:\l55:                                               \l  %56 = add nuw nsw i32 %28, 1\l  %57 = icmp eq i32 %56, %21\l  br i1 %57, label %58, label %27, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x45413c0:s0 -> Node0x4540970;
	Node0x45413c0:s1 -> Node0x4541290;
	Node0x4540970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%58:\l58:                                               \l  ret void\l}"];
}
