digraph "CFG for '_Z10bestFilterPKdPKbPKiPKfS6_PiPf' function" {
	label="CFG for '_Z10bestFilterPKdPKbPKiPKfS6_PiPf' function";

	Node0x4e77880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%7:\l  %8 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !9, !invariant.load !8\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %16, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !10\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %25 = mul i32 %24, %20\l  %26 = udiv i32 %23, %20\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %28 = add nsw i32 %25, %27\l  %29 = icmp slt i32 %28, %9\l  br i1 %29, label %30, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4e77880:s0 -> Node0x4e7ae10;
	Node0x4e77880:s1 -> Node0x4e7aea0;
	Node0x4e7ae10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%30:\l30:                                               \l  %31 = mul i32 %26, %20\l  %32 = icmp ugt i32 %23, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %26, %33\l  %35 = icmp sgt i32 %12, 0\l  %36 = mul nsw i32 %34, %20\l  %37 = and i32 %12, 1\l  %38 = icmp eq i32 %12, 1\l  %39 = and i32 %12, -2\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x4e7ae10 -> Node0x4e7b6d0;
	Node0x4e7b6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = phi i32 [ %28, %30 ], [ %113, %110 ]\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !20\l  %46 = fmul contract float %45, %45\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %43\l  store i32 0, i32 addrspace(1)* %47, align 4, !tbaa !22\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !22\l  br i1 %35, label %50, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4e7b6d0:s0 -> Node0x4e7c610;
	Node0x4e7b6d0:s1 -> Node0x4e7b7c0;
	Node0x4e7c610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%50:\l50:                                               \l  br i1 %38, label %91, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4e7c610:s0 -> Node0x4e7c750;
	Node0x4e7c610:s1 -> Node0x4e7c7a0;
	Node0x4e7c7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi float [ %87, %86 ], [ %46, %50 ]\l  %53 = phi i32 [ %88, %86 ], [ 0, %50 ]\l  %54 = phi i32 [ %89, %86 ], [ 0, %50 ]\l  %55 = mul nsw i32 %53, %15\l  %56 = add nsw i32 %55, %49\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !24, !range !26,\l... !amdgpu.noclobber !8\l  %60 = icmp eq i8 %59, 0\l  br i1 %60, label %69, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4e7c7a0:s0 -> Node0x4e7d300;
	Node0x4e7c7a0:s1 -> Node0x4e7d350;
	Node0x4e7d350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%61:\l61:                                               \l  %62 = mul nsw i32 %53, %9\l  %63 = add nsw i32 %62, %42\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %3, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !20\l  %67 = fcmp contract olt float %66, %52\l  br i1 %67, label %68, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4e7d350:s0 -> Node0x4e7b2a0;
	Node0x4e7d350:s1 -> Node0x4e7d300;
	Node0x4e7b2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%68:\l68:                                               \l  store i32 %53, i32 addrspace(1)* %47, align 4, !tbaa !22\l  br label %69\l}"];
	Node0x4e7b2a0 -> Node0x4e7d300;
	Node0x4e7d300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi float [ %66, %68 ], [ %52, %61 ], [ %52, %51 ]\l  %71 = or i32 %53, 1\l  %72 = mul nsw i32 %71, %15\l  %73 = add nsw i32 %72, %49\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !24, !range !26,\l... !amdgpu.noclobber !8\l  %77 = icmp eq i8 %76, 0\l  br i1 %77, label %86, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4e7d300:s0 -> Node0x4e7c8e0;
	Node0x4e7d300:s1 -> Node0x4e7f2a0;
	Node0x4e7f2a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%78:\l78:                                               \l  %79 = mul nsw i32 %71, %9\l  %80 = add nsw i32 %79, %42\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %3, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !20\l  %84 = fcmp contract olt float %83, %70\l  br i1 %84, label %85, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4e7f2a0:s0 -> Node0x4e7f6d0;
	Node0x4e7f2a0:s1 -> Node0x4e7c8e0;
	Node0x4e7f6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%85:\l85:                                               \l  store i32 %71, i32 addrspace(1)* %47, align 4, !tbaa !22\l  br label %86\l}"];
	Node0x4e7f6d0 -> Node0x4e7c8e0;
	Node0x4e7c8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi float [ %83, %85 ], [ %70, %78 ], [ %70, %69 ]\l  %88 = add nuw nsw i32 %53, 2\l  %89 = add i32 %54, 2\l  %90 = icmp eq i32 %89, %39\l  br i1 %90, label %91, label %51, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x4e7c8e0:s0 -> Node0x4e7c750;
	Node0x4e7c8e0:s1 -> Node0x4e7c7a0;
	Node0x4e7c750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%91:\l91:                                               \l  %92 = phi float [ undef, %50 ], [ %87, %86 ]\l  %93 = phi float [ %46, %50 ], [ %87, %86 ]\l  %94 = phi i32 [ 0, %50 ], [ %88, %86 ]\l  br i1 %40, label %110, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4e7c750:s0 -> Node0x4e7b7c0;
	Node0x4e7c750:s1 -> Node0x4e802a0;
	Node0x4e802a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%95:\l95:                                               \l  %96 = mul nsw i32 %94, %15\l  %97 = add nsw i32 %96, %49\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %98\l  %100 = load i8, i8 addrspace(1)* %99, align 1, !tbaa !24, !range !26,\l... !amdgpu.noclobber !8\l  %101 = icmp eq i8 %100, 0\l  br i1 %101, label %110, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4e802a0:s0 -> Node0x4e7b7c0;
	Node0x4e802a0:s1 -> Node0x4e806d0;
	Node0x4e806d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%102:\l102:                                              \l  %103 = mul nsw i32 %94, %9\l  %104 = add nsw i32 %103, %42\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %3, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !20\l  %108 = fcmp contract olt float %107, %93\l  br i1 %108, label %109, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4e806d0:s0 -> Node0x4e80b00;
	Node0x4e806d0:s1 -> Node0x4e7b7c0;
	Node0x4e80b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%109:\l109:                                              \l  store i32 %94, i32 addrspace(1)* %47, align 4, !tbaa !22\l  br label %110\l}"];
	Node0x4e80b00 -> Node0x4e7b7c0;
	Node0x4e7b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%110:\l110:                                              \l  %111 = phi float [ %46, %41 ], [ %92, %91 ], [ %107, %109 ], [ %93, %102 ],\l... [ %93, %95 ]\l  %112 = getelementptr inbounds float, float addrspace(1)* %6, i64 %43\l  store float %111, float addrspace(1)* %112, align 4, !tbaa !20\l  %113 = add nsw i32 %42, %36\l  %114 = icmp slt i32 %113, %9\l  br i1 %114, label %41, label %115, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x4e7b7c0:s0 -> Node0x4e7b6d0;
	Node0x4e7b7c0:s1 -> Node0x4e7aea0;
	Node0x4e7aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%115:\l115:                                              \l  ret void\l}"];
}
