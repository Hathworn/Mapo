digraph "CFG for '_Z6Conv1DPKdPKfS2_Pf' function" {
	label="CFG for '_Z6Conv1DPKdPKfS2_Pf' function";

	Node0x53dab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 14\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %11 = fptosi double %10 to i32\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %14 = fptosi double %13 to i32\l  %15 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = fptosi double %16 to i32\l  %18 = mul nsw i32 %14, %11\l  %19 = icmp slt i32 %5, %18\l  br i1 %19, label %20, label %26\l|{<s0>T|<s1>F}}"];
	Node0x53dab20:s0 -> Node0x53dd8d0;
	Node0x53dab20:s1 -> Node0x53dd960;
	Node0x53dd8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%20:\l20:                                               \l  %21 = zext i32 %5 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %24 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %5\l  %25 = addrspacecast float addrspace(3)* %24 to float*\l  store volatile float %23, float* %25, align 4, !tbaa !10\l  br label %26\l}"];
	Node0x53dd8d0 -> Node0x53dd960;
	Node0x53dd960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = add nsw i32 %8, -1024\l  %28 = sub i32 %27, %14\l  %29 = icmp slt i32 %28, 0\l  br i1 %29, label %147, label %30\l|{<s0>T|<s1>F}}"];
	Node0x53dd960:s0 -> Node0x53dea60;
	Node0x53dd960:s1 -> Node0x53deab0;
	Node0x53deab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%30:\l30:                                               \l  %31 = icmp slt i32 %5, %14\l  %32 = mul nsw i32 %6, %8\l  %33 = add i32 %32, %5\l  %34 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %5\l  %35 = addrspacecast float addrspace(3)* %34 to float*\l  %36 = add i32 %5, %14\l  %37 = add i32 %36, %32\l  %38 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %36\l  %39 = addrspacecast float addrspace(3)* %38 to float*\l  %40 = icmp sgt i32 %11, 0\l  %41 = icmp sgt i32 %14, 0\l  %42 = mul i32 %17, %8\l  %43 = and i32 %14, 3\l  %44 = icmp ult i32 %14, 4\l  %45 = and i32 %14, -4\l  %46 = icmp eq i32 %43, 0\l  br label %47\l}"];
	Node0x53deab0 -> Node0x53df6c0;
	Node0x53df6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %30 ], [ %145, %144 ]\l  br i1 %31, label %49, label %54\l|{<s0>T|<s1>F}}"];
	Node0x53df6c0:s0 -> Node0x53df8f0;
	Node0x53df6c0:s1 -> Node0x53df980;
	Node0x53df8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%49:\l49:                                               \l  %50 = add i32 %33, %48\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !10\l  store volatile float %53, float* %35, align 4, !tbaa !10\l  br label %54\l}"];
	Node0x53df8f0 -> Node0x53df980;
	Node0x53df980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%54:\l54:                                               \l  %55 = add i32 %37, %48\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !10\l  store volatile float %58, float* %39, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %40, label %59, label %144\l|{<s0>T|<s1>F}}"];
	Node0x53df980:s0 -> Node0x53e0210;
	Node0x53df980:s1 -> Node0x53df7b0;
	Node0x53e0210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%59:\l59:                                               \l  %60 = add i32 %33, %48\l  br label %61\l}"];
	Node0x53e0210 -> Node0x53e03a0;
	Node0x53e03a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %59 ], [ %142, %136 ]\l  br i1 %41, label %63, label %136\l|{<s0>T|<s1>F}}"];
	Node0x53e03a0:s0 -> Node0x53e0560;
	Node0x53e03a0:s1 -> Node0x53e0460;
	Node0x53e0560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%63:\l63:                                               \l  %64 = mul nsw i32 %62, %14\l  br i1 %44, label %115, label %65\l|{<s0>T|<s1>F}}"];
	Node0x53e0560:s0 -> Node0x53ded10;
	Node0x53e0560:s1 -> Node0x53ded60;
	Node0x53ded60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%65:\l65:                                               \l  %66 = phi float [ %111, %65 ], [ 0.000000e+00, %63 ]\l  %67 = phi i32 [ %112, %65 ], [ 0, %63 ]\l  %68 = phi i32 [ %113, %65 ], [ 0, %63 ]\l  %69 = add nsw i32 %67, %64\l  %70 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %69\l  %71 = addrspacecast float addrspace(3)* %70 to float*\l  %72 = load volatile float, float* %71, align 4, !tbaa !10\l  %73 = add nuw nsw i32 %67, %5\l  %74 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %73\l  %75 = addrspacecast float addrspace(3)* %74 to float*\l  %76 = load volatile float, float* %75, align 4, !tbaa !10\l  %77 = fmul contract float %72, %76\l  %78 = fadd contract float %66, %77\l  %79 = or i32 %67, 1\l  %80 = add nsw i32 %79, %64\l  %81 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %80\l  %82 = addrspacecast float addrspace(3)* %81 to float*\l  %83 = load volatile float, float* %82, align 4, !tbaa !10\l  %84 = add nuw nsw i32 %79, %5\l  %85 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %84\l  %86 = addrspacecast float addrspace(3)* %85 to float*\l  %87 = load volatile float, float* %86, align 4, !tbaa !10\l  %88 = fmul contract float %83, %87\l  %89 = fadd contract float %78, %88\l  %90 = or i32 %67, 2\l  %91 = add nsw i32 %90, %64\l  %92 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %91\l  %93 = addrspacecast float addrspace(3)* %92 to float*\l  %94 = load volatile float, float* %93, align 4, !tbaa !10\l  %95 = add nuw nsw i32 %90, %5\l  %96 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %95\l  %97 = addrspacecast float addrspace(3)* %96 to float*\l  %98 = load volatile float, float* %97, align 4, !tbaa !10\l  %99 = fmul contract float %94, %98\l  %100 = fadd contract float %89, %99\l  %101 = or i32 %67, 3\l  %102 = add nsw i32 %101, %64\l  %103 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %102\l  %104 = addrspacecast float addrspace(3)* %103 to float*\l  %105 = load volatile float, float* %104, align 4, !tbaa !10\l  %106 = add nuw nsw i32 %101, %5\l  %107 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %106\l  %108 = addrspacecast float addrspace(3)* %107 to float*\l  %109 = load volatile float, float* %108, align 4, !tbaa !10\l  %110 = fmul contract float %105, %109\l  %111 = fadd contract float %100, %110\l  %112 = add nuw nsw i32 %67, 4\l  %113 = add i32 %68, 4\l  %114 = icmp eq i32 %113, %45\l  br i1 %114, label %115, label %65, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x53ded60:s0 -> Node0x53ded10;
	Node0x53ded60:s1 -> Node0x53ded60;
	Node0x53ded10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%115:\l115:                                              \l  %116 = phi float [ undef, %63 ], [ %111, %65 ]\l  %117 = phi float [ 0.000000e+00, %63 ], [ %111, %65 ]\l  %118 = phi i32 [ 0, %63 ], [ %112, %65 ]\l  br i1 %46, label %136, label %119\l|{<s0>T|<s1>F}}"];
	Node0x53ded10:s0 -> Node0x53e0460;
	Node0x53ded10:s1 -> Node0x53e35b0;
	Node0x53e35b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi float [ %132, %119 ], [ %117, %115 ]\l  %121 = phi i32 [ %133, %119 ], [ %118, %115 ]\l  %122 = phi i32 [ %134, %119 ], [ 0, %115 ]\l  %123 = add nsw i32 %121, %64\l  %124 = getelementptr inbounds [486 x float], [486 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %123\l  %125 = addrspacecast float addrspace(3)* %124 to float*\l  %126 = load volatile float, float* %125, align 4, !tbaa !10\l  %127 = add nuw nsw i32 %121, %5\l  %128 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %127\l  %129 = addrspacecast float addrspace(3)* %128 to float*\l  %130 = load volatile float, float* %129, align 4, !tbaa !10\l  %131 = fmul contract float %126, %130\l  %132 = fadd contract float %120, %131\l  %133 = add nuw nsw i32 %121, 1\l  %134 = add nuw nsw i32 %122, 1\l  %135 = icmp eq i32 %134, %43\l  br i1 %135, label %136, label %119, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x53e35b0:s0 -> Node0x53e0460;
	Node0x53e35b0:s1 -> Node0x53e35b0;
	Node0x53e0460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%136:\l136:                                              \l  %137 = phi float [ 0.000000e+00, %61 ], [ %116, %115 ], [ %132, %119 ]\l  %138 = mul i32 %42, %62\l  %139 = add i32 %60, %138\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %140\l  store float %137, float addrspace(1)* %141, align 4, !tbaa !10\l  %142 = add nuw nsw i32 %62, 1\l  %143 = icmp eq i32 %142, %11\l  br i1 %143, label %144, label %61, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x53e0460:s0 -> Node0x53df7b0;
	Node0x53e0460:s1 -> Node0x53e03a0;
	Node0x53df7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%144:\l144:                                              \l  %145 = add nuw nsw i32 %48, 1024\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %146 = icmp sgt i32 %145, %28\l  br i1 %146, label %147, label %47, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x53df7b0:s0 -> Node0x53dea60;
	Node0x53df7b0:s1 -> Node0x53df6c0;
	Node0x53dea60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%147:\l147:                                              \l  ret void\l}"];
}
