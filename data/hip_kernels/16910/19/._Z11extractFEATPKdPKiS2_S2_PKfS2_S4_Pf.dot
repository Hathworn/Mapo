digraph "CFG for '_Z11extractFEATPKdPKiS2_S2_PKfS2_S4_Pf' function" {
	label="CFG for '_Z11extractFEATPKdPKiS2_S2_PKfS2_S4_Pf' function";

	Node0x486cb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %13 = fptosi double %12 to i32\l  %14 = getelementptr inbounds double, double addrspace(1)* %0, i64 5\l  %15 = load double, double addrspace(1)* %14, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %16 = fptosi double %15 to i32\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !10, !invariant.load\l... !9\l  %21 = zext i16 %20 to i32\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !11\l  %25 = mul i32 %11, %21\l  %26 = udiv i32 %24, %21\l  %27 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %29 = fptrunc double %28 to float\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 1\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !20, !amdgpu.noclobber\l... !9\l  %32 = add i32 %25, %9\l  %33 = add i32 %32, %31\l  %34 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !20, !amdgpu.noclobber\l... !9\l  %35 = icmp slt i32 %33, %34\l  br i1 %35, label %36, label %131\l|{<s0>T|<s1>F}}"];
	Node0x486cb80:s0 -> Node0x4871470;
	Node0x486cb80:s1 -> Node0x4871500;
	Node0x4871470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = mul i32 %26, %21\l  %38 = icmp ugt i32 %24, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %26, %39\l  %41 = mul nsw i32 %40, %21\l  br label %42\l}"];
	Node0x4871470 -> Node0x48718f0;
	Node0x48718f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %33, %36 ], [ %129, %42 ]\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !20, !amdgpu.noclobber\l... !9\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %44\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !20, !amdgpu.noclobber\l... !9\l  %49 = mul nsw i32 %48, %16\l  %50 = add nsw i32 %49, %10\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !20, !amdgpu.noclobber\l... !9\l  %54 = mul nsw i32 %53, %13\l  %55 = add i32 %54, %46\l  %56 = sext i32 %53 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %6, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !22\l  %59 = fdiv contract float %29, %58\l  %60 = fmul contract float %58, %58\l  %61 = fdiv contract float %29, %60\l  %62 = fadd contract float %61, 1.000000e+00\l  %63 = fcmp olt float %62, 0x39F0000000000000\l  %64 = select i1 %63, float 0x41F0000000000000, float 1.000000e+00\l  %65 = fmul float %62, %64\l  %66 = tail call float @llvm.sqrt.f32(float %65)\l  %67 = bitcast float %66 to i32\l  %68 = add nsw i32 %67, -1\l  %69 = bitcast i32 %68 to float\l  %70 = add nsw i32 %67, 1\l  %71 = bitcast i32 %70 to float\l  %72 = tail call i1 @llvm.amdgcn.class.f32(float %65, i32 608)\l  %73 = select i1 %63, float 0x3EF0000000000000, float 1.000000e+00\l  %74 = fneg float %71\l  %75 = tail call float @llvm.fma.f32(float %74, float %66, float %65)\l  %76 = fcmp ogt float %75, 0.000000e+00\l  %77 = fneg float %69\l  %78 = tail call float @llvm.fma.f32(float %77, float %66, float %65)\l  %79 = fcmp ole float %78, 0.000000e+00\l  %80 = select i1 %79, float %69, float %66\l  %81 = select i1 %76, float %71, float %80\l  %82 = fmul float %73, %81\l  %83 = select i1 %72, float %65, float %82\l  %84 = add i32 %55, -3\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !22\l  %88 = fadd contract float %87, %59\l  %89 = fdiv contract float %88, %83\l  %90 = tail call float @llvm.maxnum.f32(float %89, float 0.000000e+00)\l  %91 = add i32 %55, -2\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %4, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !22\l  %95 = fadd contract float %94, %59\l  %96 = fdiv contract float %95, %83\l  %97 = tail call float @llvm.maxnum.f32(float %90, float %96)\l  %98 = add i32 %55, -1\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %4, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !22\l  %102 = fadd contract float %101, %59\l  %103 = fdiv contract float %102, %83\l  %104 = tail call float @llvm.maxnum.f32(float %97, float %103)\l  %105 = sext i32 %55 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %4, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !22\l  %108 = fadd contract float %107, %59\l  %109 = fdiv contract float %108, %83\l  %110 = tail call float @llvm.maxnum.f32(float %104, float %109)\l  %111 = add i32 %55, 1\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %4, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !22\l  %115 = fadd contract float %114, %59\l  %116 = fdiv contract float %115, %83\l  %117 = tail call float @llvm.maxnum.f32(float %110, float %116)\l  %118 = add i32 %55, 2\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %4, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !22\l  %122 = fadd contract float %121, %59\l  %123 = fdiv contract float %122, %83\l  %124 = tail call float @llvm.maxnum.f32(float %117, float %123)\l  %125 = mul nsw i32 %43, %16\l  %126 = add nsw i32 %125, %10\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %7, i64 %127\l  store float %124, float addrspace(1)* %128, align 4, !tbaa !22\l  %129 = add nsw i32 %43, %41\l  %130 = icmp slt i32 %129, %34\l  br i1 %130, label %42, label %131, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x48718f0:s0 -> Node0x48718f0;
	Node0x48718f0:s1 -> Node0x4871500;
	Node0x4871500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%131:\l131:                                              \l  ret void\l}"];
}
