digraph "CFG for '_Z16bestFilterUpdatePKdPKfS2_PfS3_PiPKiS6_S6_' function" {
	label="CFG for '_Z16bestFilterUpdatePKdPKfS2_PfS3_PiPKiS6_S6_' function";

	Node0x4ef9cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%9:\l  %10 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fptosi double %10 to i32\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %14 = fptosi double %13 to i32\l  %15 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %17 = fptrunc double %16 to float\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 1\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !9, !amdgpu.noclobber\l... !8\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = add i32 %19, %20\l  %22 = load i32, i32 addrspace(1)* %8, align 4, !tbaa !9, !amdgpu.noclobber !8\l  %23 = icmp slt i32 %21, %22\l  br i1 %23, label %24, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4ef9cf0:s0 -> Node0x4efd9f0;
	Node0x4ef9cf0:s1 -> Node0x4efda80;
	Node0x4efd9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !11\l  %28 = fptosi double %26 to i32\l  %29 = sext i32 %21 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !9, !amdgpu.noclobber\l... !8\l  %32 = sub nsw i32 %31, %28\l  %33 = add nsw i32 %32, %27\l  %34 = icmp sgt i32 %33, -1\l  %35 = icmp slt i32 %33, %11\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4efd9f0:s0 -> Node0x4efcd30;
	Node0x4efd9f0:s1 -> Node0x4efda80;
	Node0x4efcd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%37:\l37:                                               \l  %38 = icmp sgt i32 %14, 0\l  br i1 %38, label %39, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4efcd30:s0 -> Node0x4efe8b0;
	Node0x4efcd30:s1 -> Node0x4efe900;
	Node0x4efe8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%39:\l39:                                               \l  %40 = fadd contract float %17, 1.000000e+00\l  %41 = and i32 %14, 1\l  %42 = icmp eq i32 %14, 1\l  br i1 %42, label %96, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4efe8b0:s0 -> Node0x4eff630;
	Node0x4efe8b0:s1 -> Node0x4eff6c0;
	Node0x4eff6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%43:\l43:                                               \l  %44 = and i32 %14, -2\l  br label %45\l}"];
	Node0x4eff6c0 -> Node0x4eff8c0;
	Node0x4eff8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %43 ], [ %93, %45 ]\l  %47 = phi i32 [ 0, %43 ], [ %92, %45 ]\l  %48 = phi float [ 0.000000e+00, %43 ], [ %91, %45 ]\l  %49 = phi i32 [ 0, %43 ], [ %94, %45 ]\l  %50 = mul nsw i32 %46, %11\l  %51 = add nsw i32 %50, %33\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %55 = tail call float @llvm.maxnum.f32(float %54, float 0.000000e+00)\l  %56 = zext i32 %46 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %59 = fmul contract float %58, %17\l  %60 = fadd contract float %55, %59\l  %61 = fmul contract float %60, %60\l  %62 = fdiv contract float %61, %40\l  %63 = fmul contract float %58, %59\l  %64 = fsub contract float %62, %63\l  %65 = fpext float %64 to double\l  %66 = fpext float %48 to double\l  %67 = fadd contract double %66, 0x3EB0C6F7A0B5ED8D\l  %68 = fcmp contract olt double %67, %65\l  %69 = select i1 %68, float %64, float %48\l  %70 = select i1 %68, i32 %46, i32 %47\l  %71 = or i32 %46, 1\l  %72 = mul nsw i32 %71, %11\l  %73 = add nsw i32 %72, %33\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %77 = tail call float @llvm.maxnum.f32(float %76, float 0.000000e+00)\l  %78 = zext i32 %71 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %81 = fmul contract float %80, %17\l  %82 = fadd contract float %77, %81\l  %83 = fmul contract float %82, %82\l  %84 = fdiv contract float %83, %40\l  %85 = fmul contract float %80, %81\l  %86 = fsub contract float %84, %85\l  %87 = fpext float %86 to double\l  %88 = fpext float %69 to double\l  %89 = fadd contract double %88, 0x3EB0C6F7A0B5ED8D\l  %90 = fcmp contract olt double %89, %87\l  %91 = select i1 %90, float %86, float %69\l  %92 = select i1 %90, i32 %71, i32 %70\l  %93 = add nuw nsw i32 %46, 2\l  %94 = add i32 %49, 2\l  %95 = icmp eq i32 %94, %44\l  br i1 %95, label %96, label %45, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4eff8c0:s0 -> Node0x4eff630;
	Node0x4eff8c0:s1 -> Node0x4eff8c0;
	Node0x4eff630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%96:\l96:                                               \l  %97 = phi float [ undef, %39 ], [ %91, %45 ]\l  %98 = phi i32 [ undef, %39 ], [ %92, %45 ]\l  %99 = phi i32 [ 0, %39 ], [ %93, %45 ]\l  %100 = phi i32 [ 0, %39 ], [ %92, %45 ]\l  %101 = phi float [ 0.000000e+00, %39 ], [ %91, %45 ]\l  %102 = icmp eq i32 %41, 0\l  br i1 %102, label %125, label %103\l|{<s0>T|<s1>F}}"];
	Node0x4eff630:s0 -> Node0x4efe900;
	Node0x4eff630:s1 -> Node0x4f02d30;
	Node0x4f02d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%103:\l103:                                              \l  %104 = mul nsw i32 %99, %11\l  %105 = add nsw i32 %104, %33\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %109 = tail call float @llvm.maxnum.f32(float %108, float 0.000000e+00)\l  %110 = zext i32 %99 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %2, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %113 = fmul contract float %112, %17\l  %114 = fadd contract float %109, %113\l  %115 = fmul contract float %114, %114\l  %116 = fdiv contract float %115, %40\l  %117 = fmul contract float %112, %113\l  %118 = fsub contract float %116, %117\l  %119 = fpext float %118 to double\l  %120 = fpext float %101 to double\l  %121 = fadd contract double %120, 0x3EB0C6F7A0B5ED8D\l  %122 = fcmp contract olt double %121, %119\l  %123 = select i1 %122, float %118, float %101\l  %124 = select i1 %122, i32 %99, i32 %100\l  br label %125\l}"];
	Node0x4f02d30 -> Node0x4efe900;
	Node0x4efe900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%125:\l125:                                              \l  %126 = phi float [ 0.000000e+00, %37 ], [ %97, %96 ], [ %123, %103 ]\l  %127 = phi i32 [ 0, %37 ], [ %98, %96 ], [ %124, %103 ]\l  %128 = zext i32 %33 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %3, i64 %128\l  store float %126, float addrspace(1)* %129, align 4, !tbaa !12\l  %130 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %128\l  store i32 %127, i32 addrspace(1)* %130, align 4, !tbaa !9\l  br label %131\l}"];
	Node0x4efe900 -> Node0x4efda80;
	Node0x4efda80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%131:\l131:                                              \l  ret void\l}"];
}
