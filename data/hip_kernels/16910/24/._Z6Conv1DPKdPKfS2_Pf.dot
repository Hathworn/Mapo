digraph "CFG for '_Z6Conv1DPKdPKfS2_Pf' function" {
	label="CFG for '_Z6Conv1DPKdPKfS2_Pf' function";

	Node0x4fe00b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 3\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %11 = fptosi double %10 to i32\l  %12 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %13 = load double, double addrspace(1)* %12, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %14 = fptosi double %13 to i32\l  %15 = mul nsw i32 %14, %11\l  %16 = icmp slt i32 %5, %15\l  br i1 %16, label %17, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4fe00b0:s0 -> Node0x4fe1450;
	Node0x4fe00b0:s1 -> Node0x4fe2ce0;
	Node0x4fe1450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%17:\l17:                                               \l  %18 = zext i32 %5 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %21 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %5\l  %22 = addrspacecast float addrspace(3)* %21 to float*\l  store volatile float %20, float* %22, align 4, !tbaa !10\l  br label %23\l}"];
	Node0x4fe1450 -> Node0x4fe2ce0;
	Node0x4fe2ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%23:\l23:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %24 = add nsw i32 %8, -1024\l  %25 = sub i32 %24, %11\l  %26 = icmp slt i32 %25, 0\l  br i1 %26, label %165, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4fe2ce0:s0 -> Node0x4fe3de0;
	Node0x4fe2ce0:s1 -> Node0x4fe3e30;
	Node0x4fe3e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%27:\l27:                                               \l  %28 = icmp slt i32 %5, %11\l  %29 = mul nsw i32 %6, %8\l  %30 = add i32 %29, %5\l  %31 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %5\l  %32 = addrspacecast float addrspace(3)* %31 to float*\l  %33 = add nsw i32 %5, %11\l  %34 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %33\l  %35 = addrspacecast float addrspace(3)* %34 to float*\l  %36 = icmp sgt i32 %14, 0\l  %37 = icmp sgt i32 %11, 0\l  %38 = and i32 %11, 3\l  %39 = icmp ult i32 %11, 4\l  %40 = and i32 %11, -4\l  %41 = icmp eq i32 %38, 0\l  br label %42\l}"];
	Node0x4fe3e30 -> Node0x4fe4920;
	Node0x4fe4920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %27 ], [ %163, %138 ]\l  br i1 %28, label %44, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4fe4920:s0 -> Node0x4fe4b50;
	Node0x4fe4920:s1 -> Node0x4fe4be0;
	Node0x4fe4b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%44:\l44:                                               \l  %45 = add i32 %30, %43\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !10\l  store volatile float %48, float* %32, align 4, !tbaa !10\l  br label %49\l}"];
	Node0x4fe4b50 -> Node0x4fe4be0;
	Node0x4fe4be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%49:\l49:                                               \l  %50 = or i32 %43, %5\l  %51 = add i32 %50, %29\l  %52 = add i32 %51, %11\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !10\l  store volatile float %55, float* %35, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %36, label %56, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4fe4be0:s0 -> Node0x4fe5590;
	Node0x4fe4be0:s1 -> Node0x4fe4a10;
	Node0x4fe5590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%56:\l56:                                               \l  %57 = phi float [ %135, %132 ], [ 0.000000e+00, %49 ]\l  %58 = phi i32 [ %136, %132 ], [ 0, %49 ]\l  br i1 %37, label %59, label %132\l|{<s0>T|<s1>F}}"];
	Node0x4fe5590:s0 -> Node0x4fe6300;
	Node0x4fe5590:s1 -> Node0x4fe5690;
	Node0x4fe6300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%59:\l59:                                               \l  %60 = mul nsw i32 %58, %11\l  br i1 %39, label %111, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4fe6300:s0 -> Node0x4fe64d0;
	Node0x4fe6300:s1 -> Node0x4fe6520;
	Node0x4fe6520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%61:\l61:                                               \l  %62 = phi float [ %107, %61 ], [ 0.000000e+00, %59 ]\l  %63 = phi i32 [ %108, %61 ], [ 0, %59 ]\l  %64 = phi i32 [ %109, %61 ], [ 0, %59 ]\l  %65 = add nsw i32 %63, %60\l  %66 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %65\l  %67 = addrspacecast float addrspace(3)* %66 to float*\l  %68 = load volatile float, float* %67, align 4, !tbaa !10\l  %69 = add nuw nsw i32 %63, %5\l  %70 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %69\l  %71 = addrspacecast float addrspace(3)* %70 to float*\l  %72 = load volatile float, float* %71, align 4, !tbaa !10\l  %73 = fmul contract float %68, %72\l  %74 = fadd contract float %62, %73\l  %75 = or i32 %63, 1\l  %76 = add nsw i32 %75, %60\l  %77 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %76\l  %78 = addrspacecast float addrspace(3)* %77 to float*\l  %79 = load volatile float, float* %78, align 4, !tbaa !10\l  %80 = add nuw nsw i32 %75, %5\l  %81 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %80\l  %82 = addrspacecast float addrspace(3)* %81 to float*\l  %83 = load volatile float, float* %82, align 4, !tbaa !10\l  %84 = fmul contract float %79, %83\l  %85 = fadd contract float %74, %84\l  %86 = or i32 %63, 2\l  %87 = add nsw i32 %86, %60\l  %88 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %87\l  %89 = addrspacecast float addrspace(3)* %88 to float*\l  %90 = load volatile float, float* %89, align 4, !tbaa !10\l  %91 = add nuw nsw i32 %86, %5\l  %92 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %91\l  %93 = addrspacecast float addrspace(3)* %92 to float*\l  %94 = load volatile float, float* %93, align 4, !tbaa !10\l  %95 = fmul contract float %90, %94\l  %96 = fadd contract float %85, %95\l  %97 = or i32 %63, 3\l  %98 = add nsw i32 %97, %60\l  %99 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %98\l  %100 = addrspacecast float addrspace(3)* %99 to float*\l  %101 = load volatile float, float* %100, align 4, !tbaa !10\l  %102 = add nuw nsw i32 %97, %5\l  %103 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %102\l  %104 = addrspacecast float addrspace(3)* %103 to float*\l  %105 = load volatile float, float* %104, align 4, !tbaa !10\l  %106 = fmul contract float %101, %105\l  %107 = fadd contract float %96, %106\l  %108 = add nuw nsw i32 %63, 4\l  %109 = add i32 %64, 4\l  %110 = icmp eq i32 %109, %40\l  br i1 %110, label %111, label %61, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4fe6520:s0 -> Node0x4fe64d0;
	Node0x4fe6520:s1 -> Node0x4fe6520;
	Node0x4fe64d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%111:\l111:                                              \l  %112 = phi float [ undef, %59 ], [ %107, %61 ]\l  %113 = phi float [ 0.000000e+00, %59 ], [ %107, %61 ]\l  %114 = phi i32 [ 0, %59 ], [ %108, %61 ]\l  br i1 %41, label %132, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4fe64d0:s0 -> Node0x4fe5690;
	Node0x4fe64d0:s1 -> Node0x4fe8900;
	Node0x4fe8900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = phi float [ %128, %115 ], [ %113, %111 ]\l  %117 = phi i32 [ %129, %115 ], [ %114, %111 ]\l  %118 = phi i32 [ %130, %115 ], [ 0, %111 ]\l  %119 = add nsw i32 %117, %60\l  %120 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE2sW, i32 0, i32 %119\l  %121 = addrspacecast float addrspace(3)* %120 to float*\l  %122 = load volatile float, float* %121, align 4, !tbaa !10\l  %123 = add nuw nsw i32 %117, %5\l  %124 = getelementptr inbounds [1105 x float], [1105 x float] addrspace(3)*\l... @_ZZ6Conv1DPKdPKfS2_PfE5sdata, i32 0, i32 %123\l  %125 = addrspacecast float addrspace(3)* %124 to float*\l  %126 = load volatile float, float* %125, align 4, !tbaa !10\l  %127 = fmul contract float %122, %126\l  %128 = fadd contract float %116, %127\l  %129 = add nuw nsw i32 %117, 1\l  %130 = add nuw nsw i32 %118, 1\l  %131 = icmp eq i32 %130, %38\l  br i1 %131, label %132, label %115, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4fe8900:s0 -> Node0x4fe5690;
	Node0x4fe8900:s1 -> Node0x4fe8900;
	Node0x4fe5690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%132:\l132:                                              \l  %133 = phi float [ 0.000000e+00, %56 ], [ %112, %111 ], [ %128, %115 ]\l  %134 = fmul contract float %133, %133\l  %135 = fadd contract float %57, %134\l  %136 = add nuw nsw i32 %58, 1\l  %137 = icmp eq i32 %136, %14\l  br i1 %137, label %138, label %56, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4fe5690:s0 -> Node0x4fe4a10;
	Node0x4fe5690:s1 -> Node0x4fe5590;
	Node0x4fe4a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%138:\l138:                                              \l  %139 = phi float [ 0.000000e+00, %49 ], [ %135, %132 ]\l  %140 = fcmp olt float %139, 0x39F0000000000000\l  %141 = select i1 %140, float 0x41F0000000000000, float 1.000000e+00\l  %142 = fmul float %139, %141\l  %143 = tail call float @llvm.sqrt.f32(float %142)\l  %144 = bitcast float %143 to i32\l  %145 = add nsw i32 %144, -1\l  %146 = bitcast i32 %145 to float\l  %147 = add nsw i32 %144, 1\l  %148 = bitcast i32 %147 to float\l  %149 = tail call i1 @llvm.amdgcn.class.f32(float %142, i32 608)\l  %150 = select i1 %140, float 0x3EF0000000000000, float 1.000000e+00\l  %151 = fneg float %148\l  %152 = tail call float @llvm.fma.f32(float %151, float %143, float %142)\l  %153 = fcmp ogt float %152, 0.000000e+00\l  %154 = fneg float %146\l  %155 = tail call float @llvm.fma.f32(float %154, float %143, float %142)\l  %156 = fcmp ole float %155, 0.000000e+00\l  %157 = select i1 %156, float %146, float %143\l  %158 = select i1 %153, float %148, float %157\l  %159 = fmul float %150, %158\l  %160 = select i1 %149, float %142, float %159\l  %161 = sext i32 %51 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %3, i64 %161\l  store float %160, float addrspace(1)* %162, align 4, !tbaa !10\l  %163 = add nuw nsw i32 %43, 1024\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %164 = icmp sgt i32 %163, %25\l  br i1 %164, label %165, label %42, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4fe4a10:s0 -> Node0x4fe3de0;
	Node0x4fe4a10:s1 -> Node0x4fe4920;
	Node0x4fe3de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%165:\l165:                                              \l  ret void\l}"];
}
