digraph "CFG for '_Z17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_Pf' function" {
	label="CFG for '_Z17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_Pf' function";

	Node0x4934d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%13:\l  %14 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fptosi double %17 to i32\l  %19 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = fptosi double %20 to i32\l  %22 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %24 = fptosi double %23 to i32\l  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %27 = fptosi double %26 to i32\l  %28 = getelementptr inbounds double, double addrspace(1)* %0, i64 10\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %30 = fptosi double %29 to i32\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %34 = icmp eq i32 %32, 0\l  br i1 %34, label %35, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4934d30:s0 -> Node0x4938db0;
	Node0x4934d30:s1 -> Node0x4938e40;
	Node0x4938db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %39 = mul nsw i32 %38, %30\l  %40 = add nsw i32 %39, %31\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %44 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2iU, i32 0, i32\l... %31\l  %45 = addrspacecast i32 addrspace(3)* %44 to i32*\l  store volatile i32 %43, i32* %45, align 4, !tbaa !10\l  br label %46\l}"];
	Node0x4938db0 -> Node0x4938e40;
	Node0x4938e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%46:\l46:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2iU, i32 0, i32\l... %31\l  %48 = addrspacecast i32 addrspace(3)* %47 to i32*\l  %49 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %50 = mul i32 %32, %24\l  %51 = add i32 %50, %33\l  %52 = mul i32 %51, %21\l  %53 = add i32 %49, %52\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %7, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %57 = mul nsw i32 %32, %30\l  %58 = add nsw i32 %57, %31\l  %59 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sU, i32 0, i32\l... %58\l  %60 = addrspacecast float addrspace(3)* %59 to float*\l  store volatile float %56, float* %60, align 4, !tbaa !12\l  %61 = icmp slt i32 %31, %18\l  br i1 %61, label %62, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4938e40:s0 -> Node0x493a020;
	Node0x4938e40:s1 -> Node0x493b1a0;
	Node0x493a020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%62:\l62:                                               \l  %63 = mul i32 %51, %18\l  %64 = mul nsw i32 %32, %18\l  %65 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %66 = getelementptr i8, i8 addrspace(4)* %65, i64 4\l  %67 = bitcast i8 addrspace(4)* %66 to i16 addrspace(4)*\l  br label %68\l}"];
	Node0x493a020 -> Node0x493b920;
	Node0x493b920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%68:\l68:                                               \l  %69 = phi i32 [ %31, %62 ], [ %84, %68 ]\l  %70 = add i32 %69, %63\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %6, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %74 = add nsw i32 %69, %64\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %74\l  %77 = addrspacecast float addrspace(3)* %76 to float*\l  store volatile float %73, float* %77, align 4, !tbaa !12\l  %78 = getelementptr inbounds float, float addrspace(1)* %11, i64 %75\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !12,\l... !amdgpu.noclobber !8\l  %80 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %74\l  %81 = addrspacecast float addrspace(3)* %80 to float*\l  store volatile float %79, float* %81, align 4, !tbaa !12\l  %82 = load i16, i16 addrspace(4)* %67, align 4, !range !14, !invariant.load\l... !8\l  %83 = zext i16 %82 to i32\l  %84 = add i32 %69, %83\l  %85 = icmp slt i32 %84, %18\l  br i1 %85, label %68, label %86, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x493b920:s0 -> Node0x493b920;
	Node0x493b920:s1 -> Node0x493b1a0;
	Node0x493b1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%86:\l86:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %87 = icmp sgt i32 %27, 0\l  br i1 %87, label %88, label %100\l|{<s0>T|<s1>F}}"];
	Node0x493b1a0:s0 -> Node0x493cb20;
	Node0x493b1a0:s1 -> Node0x493cb70;
	Node0x493cb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%88:\l88:                                               \l  %89 = icmp sgt i32 %18, 0\l  %90 = mul nsw i32 %32, %18\l  %91 = and i32 %18, 7\l  %92 = icmp ult i32 %18, 8\l  %93 = and i32 %18, -8\l  %94 = icmp eq i32 %91, 0\l  br label %95\l}"];
	Node0x493cb20 -> Node0x493d010;
	Node0x493d010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%95:\l95:                                               \l  %96 = phi float [ 0.000000e+00, %88 ], [ %235, %227 ]\l  %97 = phi i32 [ 0, %88 ], [ %236, %227 ]\l  br i1 %89, label %98, label %227\l|{<s0>T|<s1>F}}"];
	Node0x493d010:s0 -> Node0x493ddb0;
	Node0x493d010:s1 -> Node0x493db50;
	Node0x493ddb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%98:\l98:                                               \l  %99 = mul nsw i32 %97, %18\l  br i1 %92, label %206, label %112\l|{<s0>T|<s1>F}}"];
	Node0x493ddb0:s0 -> Node0x493df80;
	Node0x493ddb0:s1 -> Node0x493dfd0;
	Node0x493cb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%100:\l100:                                              \l  %101 = phi float [ 0.000000e+00, %86 ], [ %235, %227 ]\l  %102 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %103 = icmp sgt i32 %102, 0\l  br i1 %103, label %104, label %402\l|{<s0>T|<s1>F}}"];
	Node0x493cb70:s0 -> Node0x493e2f0;
	Node0x493cb70:s1 -> Node0x493e380;
	Node0x493e2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%104:\l104:                                              \l  %105 = icmp sgt i32 %18, 0\l  %106 = mul nsw i32 %32, %18\l  %107 = mul i32 %30, %27\l  %108 = and i32 %18, 7\l  %109 = icmp ult i32 %18, 8\l  %110 = and i32 %18, -8\l  %111 = icmp eq i32 %108, 0\l  br label %238\l}"];
	Node0x493e2f0 -> Node0x493e8b0;
	Node0x493dfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%112:\l112:                                              \l  %113 = phi float [ %202, %112 ], [ 0.000000e+00, %98 ]\l  %114 = phi i32 [ %203, %112 ], [ 0, %98 ]\l  %115 = phi i32 [ %204, %112 ], [ 0, %98 ]\l  %116 = add nsw i32 %114, %99\l  %117 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %116\l  %118 = addrspacecast float addrspace(3)* %117 to float*\l  %119 = load volatile float, float* %118, align 4, !tbaa !12\l  %120 = add nsw i32 %114, %90\l  %121 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %120\l  %122 = addrspacecast float addrspace(3)* %121 to float*\l  %123 = load volatile float, float* %122, align 4, !tbaa !12\l  %124 = fmul contract float %119, %123\l  %125 = fadd contract float %113, %124\l  %126 = or i32 %114, 1\l  %127 = add nsw i32 %126, %99\l  %128 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %127\l  %129 = addrspacecast float addrspace(3)* %128 to float*\l  %130 = load volatile float, float* %129, align 4, !tbaa !12\l  %131 = add nsw i32 %126, %90\l  %132 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %131\l  %133 = addrspacecast float addrspace(3)* %132 to float*\l  %134 = load volatile float, float* %133, align 4, !tbaa !12\l  %135 = fmul contract float %130, %134\l  %136 = fadd contract float %125, %135\l  %137 = or i32 %114, 2\l  %138 = add nsw i32 %137, %99\l  %139 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %138\l  %140 = addrspacecast float addrspace(3)* %139 to float*\l  %141 = load volatile float, float* %140, align 4, !tbaa !12\l  %142 = add nsw i32 %137, %90\l  %143 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %142\l  %144 = addrspacecast float addrspace(3)* %143 to float*\l  %145 = load volatile float, float* %144, align 4, !tbaa !12\l  %146 = fmul contract float %141, %145\l  %147 = fadd contract float %136, %146\l  %148 = or i32 %114, 3\l  %149 = add nsw i32 %148, %99\l  %150 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %149\l  %151 = addrspacecast float addrspace(3)* %150 to float*\l  %152 = load volatile float, float* %151, align 4, !tbaa !12\l  %153 = add nsw i32 %148, %90\l  %154 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %153\l  %155 = addrspacecast float addrspace(3)* %154 to float*\l  %156 = load volatile float, float* %155, align 4, !tbaa !12\l  %157 = fmul contract float %152, %156\l  %158 = fadd contract float %147, %157\l  %159 = or i32 %114, 4\l  %160 = add nsw i32 %159, %99\l  %161 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %160\l  %162 = addrspacecast float addrspace(3)* %161 to float*\l  %163 = load volatile float, float* %162, align 4, !tbaa !12\l  %164 = add nsw i32 %159, %90\l  %165 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %164\l  %166 = addrspacecast float addrspace(3)* %165 to float*\l  %167 = load volatile float, float* %166, align 4, !tbaa !12\l  %168 = fmul contract float %163, %167\l  %169 = fadd contract float %158, %168\l  %170 = or i32 %114, 5\l  %171 = add nsw i32 %170, %99\l  %172 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %171\l  %173 = addrspacecast float addrspace(3)* %172 to float*\l  %174 = load volatile float, float* %173, align 4, !tbaa !12\l  %175 = add nsw i32 %170, %90\l  %176 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %175\l  %177 = addrspacecast float addrspace(3)* %176 to float*\l  %178 = load volatile float, float* %177, align 4, !tbaa !12\l  %179 = fmul contract float %174, %178\l  %180 = fadd contract float %169, %179\l  %181 = or i32 %114, 6\l  %182 = add nsw i32 %181, %99\l  %183 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %182\l  %184 = addrspacecast float addrspace(3)* %183 to float*\l  %185 = load volatile float, float* %184, align 4, !tbaa !12\l  %186 = add nsw i32 %181, %90\l  %187 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %186\l  %188 = addrspacecast float addrspace(3)* %187 to float*\l  %189 = load volatile float, float* %188, align 4, !tbaa !12\l  %190 = fmul contract float %185, %189\l  %191 = fadd contract float %180, %190\l  %192 = or i32 %114, 7\l  %193 = add nsw i32 %192, %99\l  %194 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %193\l  %195 = addrspacecast float addrspace(3)* %194 to float*\l  %196 = load volatile float, float* %195, align 4, !tbaa !12\l  %197 = add nsw i32 %192, %90\l  %198 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %197\l  %199 = addrspacecast float addrspace(3)* %198 to float*\l  %200 = load volatile float, float* %199, align 4, !tbaa !12\l  %201 = fmul contract float %196, %200\l  %202 = fadd contract float %191, %201\l  %203 = add nuw nsw i32 %114, 8\l  %204 = add i32 %115, 8\l  %205 = icmp eq i32 %204, %93\l  br i1 %205, label %206, label %112, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x493dfd0:s0 -> Node0x493df80;
	Node0x493dfd0:s1 -> Node0x493dfd0;
	Node0x493df80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%206:\l206:                                              \l  %207 = phi float [ undef, %98 ], [ %202, %112 ]\l  %208 = phi float [ 0.000000e+00, %98 ], [ %202, %112 ]\l  %209 = phi i32 [ 0, %98 ], [ %203, %112 ]\l  br i1 %94, label %227, label %210\l|{<s0>T|<s1>F}}"];
	Node0x493df80:s0 -> Node0x493db50;
	Node0x493df80:s1 -> Node0x49426b0;
	Node0x49426b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%210:\l210:                                              \l  %211 = phi float [ %223, %210 ], [ %208, %206 ]\l  %212 = phi i32 [ %224, %210 ], [ %209, %206 ]\l  %213 = phi i32 [ %225, %210 ], [ 0, %206 ]\l  %214 = add nsw i32 %212, %99\l  %215 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sW, i32 0, i32\l... %214\l  %216 = addrspacecast float addrspace(3)* %215 to float*\l  %217 = load volatile float, float* %216, align 4, !tbaa !12\l  %218 = add nsw i32 %212, %90\l  %219 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %218\l  %220 = addrspacecast float addrspace(3)* %219 to float*\l  %221 = load volatile float, float* %220, align 4, !tbaa !12\l  %222 = fmul contract float %217, %221\l  %223 = fadd contract float %211, %222\l  %224 = add nuw nsw i32 %212, 1\l  %225 = add i32 %213, 1\l  %226 = icmp eq i32 %225, %91\l  br i1 %226, label %227, label %210, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x49426b0:s0 -> Node0x493db50;
	Node0x49426b0:s1 -> Node0x49426b0;
	Node0x493db50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%227:\l227:                                              \l  %228 = phi float [ 0.000000e+00, %95 ], [ %207, %206 ], [ %223, %210 ]\l  %229 = mul nsw i32 %97, %30\l  %230 = add nsw i32 %229, %31\l  %231 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE2sU, i32 0, i32\l... %230\l  %232 = addrspacecast float addrspace(3)* %231 to float*\l  %233 = load volatile float, float* %232, align 4, !tbaa !12\l  %234 = fmul contract float %228, %233\l  %235 = fadd contract float %96, %234\l  %236 = add nuw nsw i32 %97, 1\l  %237 = icmp eq i32 %236, %27\l  br i1 %237, label %100, label %95, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x493db50:s0 -> Node0x493cb70;
	Node0x493db50:s1 -> Node0x493d010;
	Node0x493e8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%238:\l238:                                              \l  %239 = phi i32 [ 0, %104 ], [ %400, %399 ]\l  %240 = zext i32 %239 to i64\l  %241 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %240\l  %242 = load i32, i32 addrspace(1)* %241, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %243 = icmp eq i32 %242, %33\l  br i1 %243, label %244, label %399\l|{<s0>T|<s1>F}}"];
	Node0x493e8b0:s0 -> Node0x4943d30;
	Node0x493e8b0:s1 -> Node0x49439a0;
	Node0x4943d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%244:\l244:                                              \l  %245 = getelementptr inbounds float, float addrspace(1)* %5, i64 %240\l  %246 = load float, float addrspace(1)* %245, align 4, !tbaa !12\l  %247 = fmul contract float %101, %246\l  br i1 %105, label %248, label %393\l|{<s0>T|<s1>F}}"];
	Node0x4943d30:s0 -> Node0x4944010;
	Node0x4943d30:s1 -> Node0x4944060;
	Node0x4944010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%248:\l248:                                              \l  %249 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %240\l  %250 = load i32, i32 addrspace(1)* %249, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  br i1 %109, label %369, label %251\l|{<s0>T|<s1>F}}"];
	Node0x4944010:s0 -> Node0x49442b0;
	Node0x4944010:s1 -> Node0x4944340;
	Node0x4944340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%251:\l251:                                              \l  %252 = phi float [ %365, %251 ], [ %247, %248 ]\l  %253 = phi i32 [ %366, %251 ], [ 0, %248 ]\l  %254 = phi i32 [ %367, %251 ], [ 0, %248 ]\l  %255 = add nsw i32 %250, %253\l  %256 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %257 = mul nsw i32 %256, %15\l  %258 = add nsw i32 %255, %257\l  %259 = sext i32 %258 to i64\l  %260 = getelementptr inbounds float, float addrspace(1)* %2, i64 %259\l  %261 = load float, float addrspace(1)* %260, align 4, !tbaa !12\l  %262 = add nsw i32 %253, %106\l  %263 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %262\l  %264 = addrspacecast float addrspace(3)* %263 to float*\l  %265 = load volatile float, float* %264, align 4, !tbaa !12\l  %266 = fmul contract float %261, %265\l  %267 = fadd contract float %252, %266\l  %268 = or i32 %253, 1\l  %269 = add nsw i32 %250, %268\l  %270 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %271 = mul nsw i32 %270, %15\l  %272 = add nsw i32 %269, %271\l  %273 = sext i32 %272 to i64\l  %274 = getelementptr inbounds float, float addrspace(1)* %2, i64 %273\l  %275 = load float, float addrspace(1)* %274, align 4, !tbaa !12\l  %276 = add nsw i32 %268, %106\l  %277 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %276\l  %278 = addrspacecast float addrspace(3)* %277 to float*\l  %279 = load volatile float, float* %278, align 4, !tbaa !12\l  %280 = fmul contract float %275, %279\l  %281 = fadd contract float %267, %280\l  %282 = or i32 %253, 2\l  %283 = add nsw i32 %250, %282\l  %284 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %285 = mul nsw i32 %284, %15\l  %286 = add nsw i32 %283, %285\l  %287 = sext i32 %286 to i64\l  %288 = getelementptr inbounds float, float addrspace(1)* %2, i64 %287\l  %289 = load float, float addrspace(1)* %288, align 4, !tbaa !12\l  %290 = add nsw i32 %282, %106\l  %291 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %290\l  %292 = addrspacecast float addrspace(3)* %291 to float*\l  %293 = load volatile float, float* %292, align 4, !tbaa !12\l  %294 = fmul contract float %289, %293\l  %295 = fadd contract float %281, %294\l  %296 = or i32 %253, 3\l  %297 = add nsw i32 %250, %296\l  %298 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %299 = mul nsw i32 %298, %15\l  %300 = add nsw i32 %297, %299\l  %301 = sext i32 %300 to i64\l  %302 = getelementptr inbounds float, float addrspace(1)* %2, i64 %301\l  %303 = load float, float addrspace(1)* %302, align 4, !tbaa !12\l  %304 = add nsw i32 %296, %106\l  %305 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %304\l  %306 = addrspacecast float addrspace(3)* %305 to float*\l  %307 = load volatile float, float* %306, align 4, !tbaa !12\l  %308 = fmul contract float %303, %307\l  %309 = fadd contract float %295, %308\l  %310 = or i32 %253, 4\l  %311 = add nsw i32 %250, %310\l  %312 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %313 = mul nsw i32 %312, %15\l  %314 = add nsw i32 %311, %313\l  %315 = sext i32 %314 to i64\l  %316 = getelementptr inbounds float, float addrspace(1)* %2, i64 %315\l  %317 = load float, float addrspace(1)* %316, align 4, !tbaa !12\l  %318 = add nsw i32 %310, %106\l  %319 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %318\l  %320 = addrspacecast float addrspace(3)* %319 to float*\l  %321 = load volatile float, float* %320, align 4, !tbaa !12\l  %322 = fmul contract float %317, %321\l  %323 = fadd contract float %309, %322\l  %324 = or i32 %253, 5\l  %325 = add nsw i32 %250, %324\l  %326 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %327 = mul nsw i32 %326, %15\l  %328 = add nsw i32 %325, %327\l  %329 = sext i32 %328 to i64\l  %330 = getelementptr inbounds float, float addrspace(1)* %2, i64 %329\l  %331 = load float, float addrspace(1)* %330, align 4, !tbaa !12\l  %332 = add nsw i32 %324, %106\l  %333 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %332\l  %334 = addrspacecast float addrspace(3)* %333 to float*\l  %335 = load volatile float, float* %334, align 4, !tbaa !12\l  %336 = fmul contract float %331, %335\l  %337 = fadd contract float %323, %336\l  %338 = or i32 %253, 6\l  %339 = add nsw i32 %250, %338\l  %340 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %341 = mul nsw i32 %340, %15\l  %342 = add nsw i32 %339, %341\l  %343 = sext i32 %342 to i64\l  %344 = getelementptr inbounds float, float addrspace(1)* %2, i64 %343\l  %345 = load float, float addrspace(1)* %344, align 4, !tbaa !12\l  %346 = add nsw i32 %338, %106\l  %347 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %346\l  %348 = addrspacecast float addrspace(3)* %347 to float*\l  %349 = load volatile float, float* %348, align 4, !tbaa !12\l  %350 = fmul contract float %345, %349\l  %351 = fadd contract float %337, %350\l  %352 = or i32 %253, 7\l  %353 = add nsw i32 %250, %352\l  %354 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %355 = mul nsw i32 %354, %15\l  %356 = add nsw i32 %353, %355\l  %357 = sext i32 %356 to i64\l  %358 = getelementptr inbounds float, float addrspace(1)* %2, i64 %357\l  %359 = load float, float addrspace(1)* %358, align 4, !tbaa !12\l  %360 = add nsw i32 %352, %106\l  %361 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %360\l  %362 = addrspacecast float addrspace(3)* %361 to float*\l  %363 = load volatile float, float* %362, align 4, !tbaa !12\l  %364 = fmul contract float %359, %363\l  %365 = fadd contract float %351, %364\l  %366 = add nuw nsw i32 %253, 8\l  %367 = add i32 %254, 8\l  %368 = icmp eq i32 %367, %110\l  br i1 %368, label %369, label %251, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4944340:s0 -> Node0x49442b0;
	Node0x4944340:s1 -> Node0x4944340;
	Node0x49442b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%369:\l369:                                              \l  %370 = phi float [ undef, %248 ], [ %365, %251 ]\l  %371 = phi float [ %247, %248 ], [ %365, %251 ]\l  %372 = phi i32 [ 0, %248 ], [ %366, %251 ]\l  br i1 %111, label %393, label %373\l|{<s0>T|<s1>F}}"];
	Node0x49442b0:s0 -> Node0x4944060;
	Node0x49442b0:s1 -> Node0x4949970;
	Node0x4949970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%373:\l373:                                              \l  %374 = phi float [ %389, %373 ], [ %371, %369 ]\l  %375 = phi i32 [ %390, %373 ], [ %372, %369 ]\l  %376 = phi i32 [ %391, %373 ], [ 0, %369 ]\l  %377 = add nsw i32 %250, %375\l  %378 = load volatile i32, i32* %48, align 4, !tbaa !10\l  %379 = mul nsw i32 %378, %15\l  %380 = add nsw i32 %377, %379\l  %381 = sext i32 %380 to i64\l  %382 = getelementptr inbounds float, float addrspace(1)* %2, i64 %381\l  %383 = load float, float addrspace(1)* %382, align 4, !tbaa !12\l  %384 = add nsw i32 %375, %106\l  %385 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ17computePCfeaturesPKdPKiPKfS2_S2_S4_S4_S4_S4_S2_S2_S4_PfE4sPCA, i32 0,\l... i32 %384\l  %386 = addrspacecast float addrspace(3)* %385 to float*\l  %387 = load volatile float, float* %386, align 4, !tbaa !12\l  %388 = fmul contract float %383, %387\l  %389 = fadd contract float %374, %388\l  %390 = add nuw nsw i32 %375, 1\l  %391 = add i32 %376, 1\l  %392 = icmp eq i32 %391, %108\l  br i1 %392, label %393, label %373, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4949970:s0 -> Node0x4944060;
	Node0x4949970:s1 -> Node0x4949970;
	Node0x4944060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%393:\l393:                                              \l  %394 = phi float [ %247, %244 ], [ %370, %369 ], [ %389, %373 ]\l  %395 = mul i32 %107, %239\l  %396 = add nsw i32 %395, %58\l  %397 = sext i32 %396 to i64\l  %398 = getelementptr inbounds float, float addrspace(1)* %12, i64 %397\l  store float %394, float addrspace(1)* %398, align 4, !tbaa !12\l  br label %399\l}"];
	Node0x4944060 -> Node0x49439a0;
	Node0x49439a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%399:\l399:                                              \l  %400 = add nuw nsw i32 %239, 1\l  %401 = icmp eq i32 %400, %102\l  br i1 %401, label %402, label %238, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x49439a0:s0 -> Node0x493e380;
	Node0x49439a0:s1 -> Node0x493e8b0;
	Node0x493e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%402:\l402:                                              \l  ret void\l}"];
}
