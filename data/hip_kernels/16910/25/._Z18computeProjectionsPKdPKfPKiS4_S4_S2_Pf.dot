digraph "CFG for '_Z18computeProjectionsPKdPKfPKiS4_S4_S2_Pf' function" {
	label="CFG for '_Z18computeProjectionsPKdPKfPKiS4_S4_S2_Pf' function";

	Node0x541d070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%7:\l  %8 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = freeze i32 %12\l  %14 = getelementptr inbounds double, double addrspace(1)* %0, i64 3\l  %15 = load double, double addrspace(1)* %14, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %16 = fptosi double %15 to i32\l  %17 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %19 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = fptosi double %20 to i32\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %25 = icmp slt i32 %22, %16\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x541d070:s0 -> Node0x5420720;
	Node0x541d070:s1 -> Node0x54207b0;
	Node0x54207b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%26:\l26:                                               \l  %27 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %45\l}"];
	Node0x54207b0 -> Node0x5420b10;
	Node0x5420720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%28:\l28:                                               \l  %29 = mul nsw i32 %23, %16\l  %30 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %31 = getelementptr i8, i8 addrspace(4)* %30, i64 4\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  br label %33\l}"];
	Node0x5420720 -> Node0x541f570;
	Node0x541f570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %22, %28 ], [ %43, %33 ]\l  %35 = add nsw i32 %34, %29\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %39 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %35\l  %40 = addrspacecast float addrspace(3)* %39 to float*\l  store volatile float %38, float* %40, align 4, !tbaa !10\l  %41 = load i16, i16 addrspace(4)* %32, align 4, !range !12, !invariant.load\l... !8\l  %42 = zext i16 %41 to i32\l  %43 = add i32 %34, %42\l  %44 = icmp slt i32 %43, %16\l  br i1 %44, label %33, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x541f570:s0 -> Node0x541f570;
	Node0x541f570:s1 -> Node0x5420b10;
	Node0x5420b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%45:\l45:                                               \l  %46 = phi i8 addrspace(4)* [ %27, %26 ], [ %30, %33 ]\l  %47 = getelementptr i8, i8 addrspace(4)* %46, i64 4\l  %48 = bitcast i8 addrspace(4)* %47 to i16 addrspace(4)*\l  %49 = load i16, i16 addrspace(4)* %48, align 4, !range !12, !invariant.load\l... !8\l  %50 = zext i16 %49 to i32\l  %51 = mul nuw nsw i32 %23, %50\l  %52 = add nuw nsw i32 %51, %22\l  %53 = icmp slt i32 %52, %16\l  br i1 %53, label %54, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5420b10:s0 -> Node0x5422d40;
	Node0x5420b10:s1 -> Node0x5422dd0;
	Node0x5422d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%54:\l54:                                               \l  %55 = sext i32 %24 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !15, !amdgpu.noclobber\l... !8\l  %58 = icmp sgt i32 %13, 0\l  %59 = mul nsw i32 %57, %13\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %55\l  %61 = add nsw i32 %21, -1\l  %62 = getelementptr i8, i8 addrspace(4)* %46, i64 6\l  %63 = bitcast i8 addrspace(4)* %62 to i16 addrspace(4)*\l  %64 = load i16, i16 addrspace(4)* %63, align 2\l  %65 = zext i16 %64 to i32\l  %66 = mul nuw nsw i32 %65, %50\l  %67 = and i32 %13, 3\l  %68 = icmp ult i32 %13, 4\l  %69 = and i32 %13, -4\l  %70 = icmp eq i32 %67, 0\l  br label %71\l}"];
	Node0x5422d40 -> Node0x5423b60;
	Node0x5423b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%71:\l71:                                               \l  %72 = phi i32 [ %52, %54 ], [ %160, %159 ]\l  br i1 %58, label %73, label %159\l|{<s0>T|<s1>F}}"];
	Node0x5423b60:s0 -> Node0x5423dd0;
	Node0x5423b60:s1 -> Node0x5423c90;
	Node0x5423dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%73:\l73:                                               \l  %74 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !15, !amdgpu.noclobber\l... !8\l  %75 = add i32 %61, %72\l  %76 = add i32 %75, %74\l  br i1 %68, label %138, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5423dd0:s0 -> Node0x54246b0;
	Node0x5423dd0:s1 -> Node0x5424740;
	Node0x5424740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%77:\l77:                                               \l  %78 = phi i32 [ %135, %77 ], [ 0, %73 ]\l  %79 = phi i32 [ %136, %77 ], [ 0, %73 ]\l  %80 = add nsw i32 %78, %59\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !15, !amdgpu.noclobber\l... !8\l  %84 = mul nsw i32 %83, %9\l  %85 = add i32 %76, %84\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %89 = mul nsw i32 %78, %16\l  %90 = add nsw i32 %89, %72\l  %91 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %90\l  %92 = addrspacecast float addrspace(3)* %91 to float*\l  store volatile float %88, float* %92, align 4, !tbaa !10\l  %93 = or i32 %78, 1\l  %94 = add nsw i32 %93, %59\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !15, !amdgpu.noclobber\l... !8\l  %98 = mul nsw i32 %97, %9\l  %99 = add i32 %76, %98\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %103 = mul nsw i32 %93, %16\l  %104 = add nsw i32 %103, %72\l  %105 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %104\l  %106 = addrspacecast float addrspace(3)* %105 to float*\l  store volatile float %102, float* %106, align 4, !tbaa !10\l  %107 = or i32 %78, 2\l  %108 = add nsw i32 %107, %59\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !15,\l... !amdgpu.noclobber !8\l  %112 = mul nsw i32 %111, %9\l  %113 = add i32 %76, %112\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %117 = mul nsw i32 %107, %16\l  %118 = add nsw i32 %117, %72\l  %119 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %118\l  %120 = addrspacecast float addrspace(3)* %119 to float*\l  store volatile float %116, float* %120, align 4, !tbaa !10\l  %121 = or i32 %78, 3\l  %122 = add nsw i32 %121, %59\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %123\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !15,\l... !amdgpu.noclobber !8\l  %126 = mul nsw i32 %125, %9\l  %127 = add i32 %76, %126\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %131 = mul nsw i32 %121, %16\l  %132 = add nsw i32 %131, %72\l  %133 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %132\l  %134 = addrspacecast float addrspace(3)* %133 to float*\l  store volatile float %130, float* %134, align 4, !tbaa !10\l  %135 = add nuw nsw i32 %78, 4\l  %136 = add i32 %79, 4\l  %137 = icmp eq i32 %136, %69\l  br i1 %137, label %138, label %77, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5424740:s0 -> Node0x54246b0;
	Node0x5424740:s1 -> Node0x5424740;
	Node0x54246b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%138:\l138:                                              \l  %139 = phi i32 [ 0, %73 ], [ %135, %77 ]\l  br i1 %70, label %159, label %140\l|{<s0>T|<s1>F}}"];
	Node0x54246b0:s0 -> Node0x5423c90;
	Node0x54246b0:s1 -> Node0x5427500;
	Node0x5427500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%140:\l140:                                              \l  %141 = phi i32 [ %156, %140 ], [ %139, %138 ]\l  %142 = phi i32 [ %157, %140 ], [ 0, %138 ]\l  %143 = add nsw i32 %141, %59\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %144\l  %146 = load i32, i32 addrspace(1)* %145, align 4, !tbaa !15,\l... !amdgpu.noclobber !8\l  %147 = mul nsw i32 %146, %9\l  %148 = add i32 %76, %147\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %152 = mul nsw i32 %141, %16\l  %153 = add nsw i32 %152, %72\l  %154 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %153\l  %155 = addrspacecast float addrspace(3)* %154 to float*\l  store volatile float %151, float* %155, align 4, !tbaa !10\l  %156 = add nuw nsw i32 %141, 1\l  %157 = add i32 %142, 1\l  %158 = icmp eq i32 %157, %67\l  br i1 %158, label %159, label %140, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5427500:s0 -> Node0x5423c90;
	Node0x5427500:s1 -> Node0x5427500;
	Node0x5423c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%159:\l159:                                              \l  %160 = add i32 %66, %72\l  %161 = icmp slt i32 %160, %16\l  br i1 %161, label %71, label %162, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5423c90:s0 -> Node0x5423b60;
	Node0x5423c90:s1 -> Node0x5422dd0;
	Node0x5422dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%162:\l162:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %163 = icmp sgt i32 %16, 0\l  br i1 %163, label %164, label %287\l|{<s0>T|<s1>F}}"];
	Node0x5422dd0:s0 -> Node0x5428850;
	Node0x5422dd0:s1 -> Node0x54288e0;
	Node0x5428850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%164:\l164:                                              \l  %165 = mul nsw i32 %22, %16\l  %166 = mul nsw i32 %23, %16\l  %167 = and i32 %16, 7\l  %168 = icmp ult i32 %16, 8\l  br i1 %168, label %265, label %169\l|{<s0>T|<s1>F}}"];
	Node0x5428850:s0 -> Node0x5428c60;
	Node0x5428850:s1 -> Node0x5428cb0;
	Node0x5428cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%169:\l169:                                              \l  %170 = and i32 %16, -8\l  br label %171\l}"];
	Node0x5428cb0 -> Node0x5428eb0;
	Node0x5428eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%171:\l171:                                              \l  %172 = phi float [ 0.000000e+00, %169 ], [ %261, %171 ]\l  %173 = phi i32 [ 0, %169 ], [ %262, %171 ]\l  %174 = phi i32 [ 0, %169 ], [ %263, %171 ]\l  %175 = add nsw i32 %173, %165\l  %176 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %175\l  %177 = addrspacecast float addrspace(3)* %176 to float*\l  %178 = load volatile float, float* %177, align 4, !tbaa !10\l  %179 = add nsw i32 %173, %166\l  %180 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %179\l  %181 = addrspacecast float addrspace(3)* %180 to float*\l  %182 = load volatile float, float* %181, align 4, !tbaa !10\l  %183 = fmul contract float %178, %182\l  %184 = fadd contract float %172, %183\l  %185 = or i32 %173, 1\l  %186 = add nsw i32 %185, %165\l  %187 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %186\l  %188 = addrspacecast float addrspace(3)* %187 to float*\l  %189 = load volatile float, float* %188, align 4, !tbaa !10\l  %190 = add nsw i32 %185, %166\l  %191 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %190\l  %192 = addrspacecast float addrspace(3)* %191 to float*\l  %193 = load volatile float, float* %192, align 4, !tbaa !10\l  %194 = fmul contract float %189, %193\l  %195 = fadd contract float %184, %194\l  %196 = or i32 %173, 2\l  %197 = add nsw i32 %196, %165\l  %198 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %197\l  %199 = addrspacecast float addrspace(3)* %198 to float*\l  %200 = load volatile float, float* %199, align 4, !tbaa !10\l  %201 = add nsw i32 %196, %166\l  %202 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %201\l  %203 = addrspacecast float addrspace(3)* %202 to float*\l  %204 = load volatile float, float* %203, align 4, !tbaa !10\l  %205 = fmul contract float %200, %204\l  %206 = fadd contract float %195, %205\l  %207 = or i32 %173, 3\l  %208 = add nsw i32 %207, %165\l  %209 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %208\l  %210 = addrspacecast float addrspace(3)* %209 to float*\l  %211 = load volatile float, float* %210, align 4, !tbaa !10\l  %212 = add nsw i32 %207, %166\l  %213 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %212\l  %214 = addrspacecast float addrspace(3)* %213 to float*\l  %215 = load volatile float, float* %214, align 4, !tbaa !10\l  %216 = fmul contract float %211, %215\l  %217 = fadd contract float %206, %216\l  %218 = or i32 %173, 4\l  %219 = add nsw i32 %218, %165\l  %220 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %219\l  %221 = addrspacecast float addrspace(3)* %220 to float*\l  %222 = load volatile float, float* %221, align 4, !tbaa !10\l  %223 = add nsw i32 %218, %166\l  %224 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %223\l  %225 = addrspacecast float addrspace(3)* %224 to float*\l  %226 = load volatile float, float* %225, align 4, !tbaa !10\l  %227 = fmul contract float %222, %226\l  %228 = fadd contract float %217, %227\l  %229 = or i32 %173, 5\l  %230 = add nsw i32 %229, %165\l  %231 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %230\l  %232 = addrspacecast float addrspace(3)* %231 to float*\l  %233 = load volatile float, float* %232, align 4, !tbaa !10\l  %234 = add nsw i32 %229, %166\l  %235 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %234\l  %236 = addrspacecast float addrspace(3)* %235 to float*\l  %237 = load volatile float, float* %236, align 4, !tbaa !10\l  %238 = fmul contract float %233, %237\l  %239 = fadd contract float %228, %238\l  %240 = or i32 %173, 6\l  %241 = add nsw i32 %240, %165\l  %242 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %241\l  %243 = addrspacecast float addrspace(3)* %242 to float*\l  %244 = load volatile float, float* %243, align 4, !tbaa !10\l  %245 = add nsw i32 %240, %166\l  %246 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %245\l  %247 = addrspacecast float addrspace(3)* %246 to float*\l  %248 = load volatile float, float* %247, align 4, !tbaa !10\l  %249 = fmul contract float %244, %248\l  %250 = fadd contract float %239, %249\l  %251 = or i32 %173, 7\l  %252 = add nsw i32 %251, %165\l  %253 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %252\l  %254 = addrspacecast float addrspace(3)* %253 to float*\l  %255 = load volatile float, float* %254, align 4, !tbaa !10\l  %256 = add nsw i32 %251, %166\l  %257 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %256\l  %258 = addrspacecast float addrspace(3)* %257 to float*\l  %259 = load volatile float, float* %258, align 4, !tbaa !10\l  %260 = fmul contract float %255, %259\l  %261 = fadd contract float %250, %260\l  %262 = add nuw nsw i32 %173, 8\l  %263 = add i32 %174, 8\l  %264 = icmp eq i32 %263, %170\l  br i1 %264, label %265, label %171, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5428eb0:s0 -> Node0x5428c60;
	Node0x5428eb0:s1 -> Node0x5428eb0;
	Node0x5428c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%265:\l265:                                              \l  %266 = phi float [ undef, %164 ], [ %261, %171 ]\l  %267 = phi float [ 0.000000e+00, %164 ], [ %261, %171 ]\l  %268 = phi i32 [ 0, %164 ], [ %262, %171 ]\l  %269 = icmp eq i32 %167, 0\l  br i1 %269, label %287, label %270\l|{<s0>T|<s1>F}}"];
	Node0x5428c60:s0 -> Node0x54288e0;
	Node0x5428c60:s1 -> Node0x541d270;
	Node0x541d270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%270:\l270:                                              \l  %271 = phi float [ %283, %270 ], [ %267, %265 ]\l  %272 = phi i32 [ %284, %270 ], [ %268, %265 ]\l  %273 = phi i32 [ %285, %270 ], [ 0, %265 ]\l  %274 = add nsw i32 %272, %165\l  %275 = getelementptr inbounds [1377 x float], [1377 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sD, i32 0, i32 %274\l  %276 = addrspacecast float addrspace(3)* %275 to float*\l  %277 = load volatile float, float* %276, align 4, !tbaa !10\l  %278 = add nsw i32 %272, %166\l  %279 = getelementptr inbounds [243 x float], [243 x float] addrspace(3)*\l... @_ZZ18computeProjectionsPKdPKfPKiS4_S4_S2_PfE2sW, i32 0, i32 %278\l  %280 = addrspacecast float addrspace(3)* %279 to float*\l  %281 = load volatile float, float* %280, align 4, !tbaa !10\l  %282 = fmul contract float %277, %281\l  %283 = fadd contract float %271, %282\l  %284 = add nuw nsw i32 %272, 1\l  %285 = add i32 %273, 1\l  %286 = icmp eq i32 %285, %167\l  br i1 %286, label %287, label %270, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x541d270:s0 -> Node0x54288e0;
	Node0x541d270:s1 -> Node0x541d270;
	Node0x54288e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%287:\l287:                                              \l  %288 = phi float [ 0.000000e+00, %162 ], [ %266, %265 ], [ %283, %270 ]\l  %289 = fptosi double %18 to i32\l  %290 = mul i32 %24, %13\l  %291 = add i32 %290, %22\l  %292 = mul i32 %291, %289\l  %293 = add i32 %292, %23\l  %294 = sext i32 %293 to i64\l  %295 = getelementptr inbounds float, float addrspace(1)* %6, i64 %294\l  store float %288, float addrspace(1)* %295, align 4, !tbaa !10\l  ret void\l}"];
}
