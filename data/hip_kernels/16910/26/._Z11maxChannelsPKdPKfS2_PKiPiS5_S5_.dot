digraph "CFG for '_Z11maxChannelsPKdPKfS2_PKiPiS5_S5_' function" {
	label="CFG for '_Z11maxChannelsPKdPKfS2_PKiPiS5_S5_' function";

	Node0x4dca4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%7:\l  %8 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 3\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fptosi double %17 to i32\l  %19 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = fptosi double %20 to i32\l  %22 = getelementptr inbounds double, double addrspace(1)* %0, i64 5\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %24 = fptrunc double %23 to float\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %28 = getelementptr i8, i8 addrspace(4)* %27, i64 4\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 4, !range !10, !invariant.load\l... !8\l  %31 = zext i16 %30 to i32\l  %32 = getelementptr inbounds i8, i8 addrspace(4)* %27, i64 12\l  %33 = bitcast i8 addrspace(4)* %32 to i32 addrspace(4)*\l  %34 = load i32, i32 addrspace(4)* %33, align 4, !tbaa !11\l  %35 = mul i32 %26, %31\l  %36 = add i32 %35, %25\l  %37 = add i32 %18, %21\l  %38 = sub i32 %9, %37\l  %39 = icmp slt i32 %36, %38\l  br i1 %39, label %40, label %102\l|{<s0>T|<s1>F}}"];
	Node0x4dca4e0:s0 -> Node0x4dce1c0;
	Node0x4dca4e0:s1 -> Node0x4dce250;
	Node0x4dce1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%40:\l40:                                               \l  %41 = icmp sgt i32 %12, 0\l  %42 = icmp sgt i32 %15, 1\l  %43 = udiv i32 %34, %31\l  %44 = mul i32 %43, %31\l  %45 = icmp ugt i32 %34, %44\l  %46 = zext i1 %45 to i32\l  %47 = add i32 %43, %46\l  %48 = mul i32 %47, %31\l  br label %49\l}"];
	Node0x4dce1c0 -> Node0x4dce820;
	Node0x4dce820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%49:\l49:                                               \l  %50 = phi i32 [ %36, %40 ], [ %100, %99 ]\l  br i1 %41, label %51, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4dce820:s0 -> Node0x4dcea50;
	Node0x4dce820:s1 -> Node0x4dce910;
	Node0x4dcea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%51:\l51:                                               \l  %52 = phi i32 [ %97, %96 ], [ 0, %49 ]\l  %53 = mul nsw i32 %52, %15\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !20\l  %57 = mul nsw i32 %56, %9\l  %58 = add nsw i32 %57, %50\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !22\l  %62 = fpext float %61 to double\l  br i1 %42, label %65, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4dcea50:s0 -> Node0x4dcf4d0;
	Node0x4dcea50:s1 -> Node0x4dcf560;
	Node0x4dcf6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = icmp eq i32 %77, %15\l  br i1 %64, label %78, label %65, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4dcf6a0:s0 -> Node0x4dcf560;
	Node0x4dcf6a0:s1 -> Node0x4dcf4d0;
	Node0x4dcf4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ %77, %63 ], [ 1, %51 ]\l  %67 = add nsw i32 %66, %53\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !20\l  %71 = mul nsw i32 %70, %9\l  %72 = add nsw i32 %71, %50\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !22\l  %76 = fcmp contract ogt float %75, %61\l  %77 = add nuw nsw i32 %66, 1\l  br i1 %76, label %96, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4dcf4d0:s0 -> Node0x4dcebc0;
	Node0x4dcf4d0:s1 -> Node0x4dcf6a0;
	Node0x4dcf560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%78:\l78:                                               \l  %79 = fcmp contract ogt float %61, %24\l  br i1 %79, label %80, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4dcf560:s0 -> Node0x4dd0fe0;
	Node0x4dcf560:s1 -> Node0x4dcebc0;
	Node0x4dd0fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%80:\l80:                                               \l  %81 = add nsw i32 %58, -1\l  %82 = add i32 %81, %21\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !22\l  %86 = fpext float %85 to double\l  %87 = fadd contract double %62, 0xBEB0C6F7A0B5ED8D\l  %88 = fcmp contract olt double %87, %86\l  br i1 %88, label %89, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4dd0fe0:s0 -> Node0x4dd1f20;
	Node0x4dd0fe0:s1 -> Node0x4dcebc0;
	Node0x4dd1f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%89:\l89:                                               \l  %90 = atomicrmw add i32 addrspace(1)* %6, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %91 = icmp slt i32 %90, 10000\l  br i1 %91, label %92, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4dd1f20:s0 -> Node0x4dd2140;
	Node0x4dd1f20:s1 -> Node0x4dcebc0;
	Node0x4dd2140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%92:\l92:                                               \l  %93 = sext i32 %90 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %93\l  store i32 %50, i32 addrspace(1)* %94, align 4, !tbaa !20\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %93\l  store i32 %56, i32 addrspace(1)* %95, align 4, !tbaa !20\l  br label %96\l}"];
	Node0x4dd2140 -> Node0x4dcebc0;
	Node0x4dcebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%96:\l96:                                               \l  %97 = add nuw nsw i32 %52, 1\l  %98 = icmp eq i32 %97, %12\l  br i1 %98, label %99, label %51, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x4dcebc0:s0 -> Node0x4dce910;
	Node0x4dcebc0:s1 -> Node0x4dcea50;
	Node0x4dce910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%99:\l99:                                               \l  %100 = add i32 %48, %50\l  %101 = icmp slt i32 %100, %38\l  br i1 %101, label %49, label %102, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x4dce910:s0 -> Node0x4dce820;
	Node0x4dce910:s1 -> Node0x4dce250;
	Node0x4dce250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%102:\l102:                                              \l  ret void\l}"];
}
