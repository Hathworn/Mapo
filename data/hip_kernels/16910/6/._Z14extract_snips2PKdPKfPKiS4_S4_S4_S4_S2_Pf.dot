digraph "CFG for '_Z14extract_snips2PKdPKfPKiS4_S4_S4_S4_S2_Pf' function" {
	label="CFG for '_Z14extract_snips2PKdPKfPKiS4_S4_S4_S4_S2_Pf' function";

	Node0x45a8b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%9:\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 13\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fptosi double %17 to i32\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 1\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %23 = icmp sgt i32 %22, 0\l  br i1 %23, label %24, label %108\l|{<s0>T|<s1>F}}"];
	Node0x45a8b60:s0 -> Node0x45ac530;
	Node0x45a8b60:s1 -> Node0x45ac5c0;
	Node0x45ac530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%24:\l24:                                               \l  %25 = tail call i32 @llvm.smin.i32(i32 %22, i32 5000)\l  %26 = getelementptr inbounds double, double addrspace(1)* %0, i64 10\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %28 = fptosi double %27 to i32\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y()\l  %30 = mul nsw i32 %20, %28\l  %31 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %32 = getelementptr i8, i8 addrspace(4)* %31, i64 6\l  %33 = bitcast i8 addrspace(4)* %32 to i16 addrspace(4)*\l  br label %34\l}"];
	Node0x45ac530 -> Node0x45abad0;
	Node0x45abad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %24 ], [ %106, %105 ]\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %39 = icmp eq i32 %38, %20\l  br i1 %39, label %40, label %105\l|{<s0>T|<s1>F}}"];
	Node0x45abad0:s0 -> Node0x45add60;
	Node0x45abad0:s1 -> Node0x45abb20;
	Node0x45add60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %36\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %46 = freeze i32 %45\l  %47 = freeze i32 %18\l  %48 = sdiv i32 %46, %47\l  %49 = mul i32 %48, %47\l  %50 = sub i32 %46, %49\l  %51 = icmp sgt i32 %29, %50\l  br i1 %51, label %105, label %52\l|{<s0>T|<s1>F}}"];
	Node0x45add60:s0 -> Node0x45abb20;
	Node0x45add60:s1 -> Node0x45ae490;
	Node0x45ae490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %54 = sitofp i32 %50 to double\l  %55 = fadd contract double %54, 1.000000e+00\l  %56 = mul nsw i32 %48, %12\l  %57 = add nsw i32 %56, %19\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %7, i64 %58\l  %60 = mul i32 %35, %15\l  %61 = load i16, i16 addrspace(4)* %33, align 2, !range !12, !invariant.load\l... !8\l  %62 = zext i16 %61 to i32\l  br label %63\l}"];
	Node0x45ae490 -> Node0x45af6a0;
	Node0x45af6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i32 [ %29, %52 ], [ %103, %63 ]\l  %65 = load float, float addrspace(1)* %53, align 4, !tbaa !13\l  %66 = fpext float %65 to double\l  %67 = fdiv contract double %66, %55\l  %68 = fcmp olt double %67, 0x1000000000000000\l  %69 = select i1 %68, double 0x4FF0000000000000, double 1.000000e+00\l  %70 = fmul double %67, %69\l  %71 = tail call double @llvm.amdgcn.rsq.f64(double %70)\l  %72 = fmul double %70, %71\l  %73 = fmul double %71, 5.000000e-01\l  %74 = fneg double %73\l  %75 = tail call double @llvm.fma.f64(double %74, double %72, double\l... 5.000000e-01)\l  %76 = tail call double @llvm.fma.f64(double %73, double %75, double %73)\l  %77 = tail call double @llvm.fma.f64(double %72, double %75, double %72)\l  %78 = fneg double %77\l  %79 = tail call double @llvm.fma.f64(double %78, double %77, double %70)\l  %80 = tail call double @llvm.fma.f64(double %79, double %76, double %77)\l  %81 = fneg double %80\l  %82 = tail call double @llvm.fma.f64(double %81, double %80, double %70)\l  %83 = tail call double @llvm.fma.f64(double %82, double %76, double %80)\l  %84 = select i1 %68, double 0x37F0000000000000, double 1.000000e+00\l  %85 = fmul double %84, %83\l  %86 = fcmp oeq double %70, 0.000000e+00\l  %87 = fcmp oeq double %70, 0x7FF0000000000000\l  %88 = or i1 %86, %87\l  %89 = select i1 %88, double %70, double %85\l  %90 = load float, float addrspace(1)* %59, align 4, !tbaa !13\l  %91 = fpext float %90 to double\l  %92 = fmul contract double %89, %91\l  %93 = fptrunc double %92 to float\l  %94 = add nsw i32 %64, %30\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %98 = add i32 %97, %60\l  %99 = mul i32 %98, %12\l  %100 = add i32 %99, %19\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %8, i64 %101\l  store float %93, float addrspace(1)* %102, align 4, !tbaa !13\l  %103 = add i32 %64, %62\l  %104 = icmp sgt i32 %103, %50\l  br i1 %104, label %105, label %63, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x45af6a0:s0 -> Node0x45abb20;
	Node0x45af6a0:s1 -> Node0x45af6a0;
	Node0x45abb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%105:\l105:                                              \l  %106 = add nuw nsw i32 %35, 1\l  %107 = icmp eq i32 %106, %25\l  br i1 %107, label %108, label %34, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x45abb20:s0 -> Node0x45ac5c0;
	Node0x45abb20:s1 -> Node0x45abad0;
	Node0x45ac5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%108:\l108:                                              \l  ret void\l}"];
}
