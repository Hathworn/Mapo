digraph "CFG for '_Z8blankdWUPKdS0_PKiS2_Pd' function" {
	label="CFG for '_Z8blankdWUPKdS0_PKiS2_Pd' function";

	Node0x6196710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %7 = load double, double addrspace(1)* %6, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = getelementptr inbounds double, double addrspace(1)* %0, i64 10\l  %10 = load double, double addrspace(1)* %9, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %11 = fptosi double %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = icmp slt i32 %13, %11\l  br i1 %15, label %16, label %45\l|{<s0>T|<s1>F}}"];
	Node0x6196710:s0 -> Node0x61997e0;
	Node0x6196710:s1 -> Node0x6199870;
	Node0x61997e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %19 = fptosi double %18 to i32\l  %20 = sext i32 %14 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %23 = mul nsw i32 %22, %11\l  %24 = mul i32 %14, %19\l  %25 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %26 = getelementptr i8, i8 addrspace(4)* %25, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !12, !invariant.load\l... !8\l  %29 = zext i16 %28 to i32\l  br label %30\l}"];
	Node0x61997e0 -> Node0x619a670;
	Node0x619a670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %13, %16 ], [ %43, %30 ]\l  %32 = add nsw i32 %23, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !10, !amdgpu.noclobber\l... !8\l  %36 = add i32 %35, %24\l  %37 = mul i32 %36, %8\l  %38 = add i32 %37, %12\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !4\l  %42 = getelementptr inbounds double, double addrspace(1)* %4, i64 %39\l  store double %41, double addrspace(1)* %42, align 8, !tbaa !4\l  %43 = add i32 %31, %29\l  %44 = icmp slt i32 %43, %11\l  br i1 %44, label %30, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x619a670:s0 -> Node0x619a670;
	Node0x619a670:s1 -> Node0x6199870;
	Node0x6199870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%45:\l45:                                               \l  ret void\l}"];
}
