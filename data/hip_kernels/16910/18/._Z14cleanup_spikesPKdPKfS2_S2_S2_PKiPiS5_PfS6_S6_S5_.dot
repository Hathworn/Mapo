digraph "CFG for '_Z14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_' function" {
	label="CFG for '_Z14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_' function";

	Node0x5cc04e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%12:\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = add nsw i32 %15, -1\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %20 = fptosi double %19 to i32\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !10, !invariant.load\l... !8\l  %25 = zext i16 %24 to i32\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 12\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 4, !tbaa !11\l  %29 = mul i32 %18, %25\l  %30 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %32 = fptrunc double %31 to float\l  %33 = sub i32 %20, %15\l  %34 = add i32 %33, -1023\l  %35 = icmp sgt i32 %29, %34\l  br i1 %35, label %126, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5cc04e0:s0 -> Node0x5cc2260;
	Node0x5cc04e0:s1 -> Node0x5cc4410;
	Node0x5cc4410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%36:\l36:                                               \l  %37 = shl nsw i32 %16, 1\l  %38 = icmp slt i32 %17, %37\l  %39 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_E5sdata, i32 0, i32 %17\l  %40 = addrspacecast float addrspace(3)* %39 to float*\l  %41 = add i32 %37, %17\l  %42 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_E5sdata, i32 0, i32 %41\l  %43 = addrspacecast float addrspace(3)* %42 to float*\l  %44 = add nsw i32 %16, %17\l  %45 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_E5sdata, i32 0, i32 %44\l  %46 = addrspacecast float addrspace(3)* %45 to float*\l  %47 = fmul contract float %32, %32\l  %48 = sub i32 1, %15\l  %49 = icmp slt i32 %48, %15\l  br label %50\l}"];
	Node0x5cc4410 -> Node0x5cc4d90;
	Node0x5cc4d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%50:\l50:                                               \l  %51 = phi i32 [ %29, %36 ], [ %124, %117 ]\l  br i1 %38, label %52, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5cc4d90:s0 -> Node0x5cc4f20;
	Node0x5cc4d90:s1 -> Node0x5cc4fb0;
	Node0x5cc4f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%52:\l52:                                               \l  %53 = add nsw i32 %51, %17\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %3, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !20\l  store volatile float %56, float* %40, align 4, !tbaa !20\l  br label %57\l}"];
	Node0x5cc4f20 -> Node0x5cc4fb0;
	Node0x5cc4fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%57:\l57:                                               \l  %58 = add i32 %41, %51\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %3, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !20\l  store volatile float %61, float* %43, align 4, !tbaa !20\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = load volatile float, float* %46, align 4, !tbaa !20\l  %63 = fcmp contract ogt float %62, %47\l  br i1 %63, label %64, label %117\l|{<s0>T|<s1>F}}"];
	Node0x5cc4fb0:s0 -> Node0x5cc6170;
	Node0x5cc4fb0:s1 -> Node0x5cc4e80;
	Node0x5cc6170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%64:\l64:                                               \l  br i1 %49, label %67, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5cc6170:s0 -> Node0x5cc40a0;
	Node0x5cc6170:s1 -> Node0x5cc40f0;
	Node0x5cc4230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = icmp slt i32 %74, %15\l  br i1 %66, label %67, label %75, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5cc4230:s0 -> Node0x5cc40a0;
	Node0x5cc4230:s1 -> Node0x5cc40f0;
	Node0x5cc40a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %74, %65 ], [ %48, %64 ]\l  %69 = add nsw i32 %68, %44\l  %70 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfS2_S2_S2_PKiPiS5_PfS6_S6_S5_E5sdata, i32 0, i32 %69\l  %71 = addrspacecast float addrspace(3)* %70 to float*\l  %72 = load volatile float, float* %71, align 4, !tbaa !20\l  %73 = fcmp contract ogt float %72, %62\l  %74 = add nsw i32 %68, 1\l  br i1 %73, label %117, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5cc40a0:s0 -> Node0x5cc4e80;
	Node0x5cc40a0:s1 -> Node0x5cc4230;
	Node0x5cc40f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%75:\l75:                                               \l  %76 = atomicrmw add i32 addrspace(1)* %11, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %77 = icmp slt i32 %76, 100000\l  br i1 %77, label %78, label %117\l|{<s0>T|<s1>F}}"];
	Node0x5cc40f0:s0 -> Node0x5cc7010;
	Node0x5cc40f0:s1 -> Node0x5cc4e80;
	Node0x5cc7010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%78:\l78:                                               \l  %79 = add nsw i32 %51, %44\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !24\l  %83 = sext i32 %76 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %83\l  store i32 %79, i32 addrspace(1)* %84, align 4, !tbaa !24\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %83\l  store i32 %82, i32 addrspace(1)* %85, align 4, !tbaa !24\l  %86 = mul nsw i32 %82, %20\l  %87 = add nsw i32 %86, %79\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !20\l  %91 = getelementptr inbounds float, float addrspace(1)* %9, i64 %83\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !20\l  %92 = fcmp olt float %62, 0x39F0000000000000\l  %93 = select i1 %92, float 0x41F0000000000000, float 1.000000e+00\l  %94 = fmul float %62, %93\l  %95 = tail call float @llvm.sqrt.f32(float %94)\l  %96 = bitcast float %95 to i32\l  %97 = add nsw i32 %96, -1\l  %98 = bitcast i32 %97 to float\l  %99 = add nsw i32 %96, 1\l  %100 = bitcast i32 %99 to float\l  %101 = tail call i1 @llvm.amdgcn.class.f32(float %94, i32 608)\l  %102 = select i1 %92, float 0x3EF0000000000000, float 1.000000e+00\l  %103 = fneg float %100\l  %104 = tail call float @llvm.fma.f32(float %103, float %95, float %94)\l  %105 = fcmp ogt float %104, 0.000000e+00\l  %106 = fneg float %98\l  %107 = tail call float @llvm.fma.f32(float %106, float %95, float %94)\l  %108 = fcmp ole float %107, 0.000000e+00\l  %109 = select i1 %108, float %98, float %95\l  %110 = select i1 %105, float %100, float %109\l  %111 = fmul float %102, %110\l  %112 = select i1 %101, float %94, float %111\l  %113 = getelementptr inbounds float, float addrspace(1)* %8, i64 %83\l  store float %112, float addrspace(1)* %113, align 4, !tbaa !20\l  %114 = getelementptr inbounds float, float addrspace(1)* %4, i64 %80\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !20\l  %116 = getelementptr inbounds float, float addrspace(1)* %10, i64 %83\l  store float %115, float addrspace(1)* %116, align 4, !tbaa !20\l  br label %117\l}"];
	Node0x5cc7010 -> Node0x5cc4e80;
	Node0x5cc4e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%117:\l117:                                              \l  %118 = udiv i32 %28, %25\l  %119 = mul i32 %118, %25\l  %120 = icmp ugt i32 %28, %119\l  %121 = zext i1 %120 to i32\l  %122 = add i32 %118, %121\l  %123 = mul i32 %122, %25\l  %124 = add i32 %123, %51\l  %125 = icmp sgt i32 %124, %34\l  br i1 %125, label %126, label %50, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5cc4e80:s0 -> Node0x5cc2260;
	Node0x5cc4e80:s1 -> Node0x5cc4d90;
	Node0x5cc2260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%126:\l126:                                              \l  ret void\l}"];
}
