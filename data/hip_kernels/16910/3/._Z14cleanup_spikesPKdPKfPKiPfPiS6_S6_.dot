digraph "CFG for '_Z14cleanup_spikesPKdPKfPKiPfPiS6_S6_' function" {
	label="CFG for '_Z14cleanup_spikesPKdPKfPKiPfPiS6_S6_' function";

	Node0x5f4f260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%7:\l  %8 = getelementptr inbounds double, double addrspace(1)* %0, i64 4\l  %9 = load double, double addrspace(1)* %8, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fptosi double %9 to i32\l  %11 = add nsw i32 %10, -1\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !10, !invariant.load\l... !8\l  %20 = zext i16 %19 to i32\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %16, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !11\l  %24 = mul i32 %13, %20\l  %25 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %27 = fptrunc double %26 to float\l  %28 = sub i32 %15, %10\l  %29 = add i32 %28, -1023\l  %30 = icmp sgt i32 %24, %29\l  br i1 %30, label %97, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5f4f260:s0 -> Node0x5f528e0;
	Node0x5f4f260:s1 -> Node0x5f52970;
	Node0x5f52970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%31:\l31:                                               \l  %32 = shl nsw i32 %11, 1\l  %33 = icmp slt i32 %12, %32\l  %34 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfPKiPfPiS6_S6_E5sdata, i32 0, i32 %12\l  %35 = addrspacecast float addrspace(3)* %34 to float*\l  %36 = add i32 %32, %12\l  %37 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfPKiPfPiS6_S6_E5sdata, i32 0, i32 %36\l  %38 = addrspacecast float addrspace(3)* %37 to float*\l  %39 = add nsw i32 %11, %12\l  %40 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfPKiPfPiS6_S6_E5sdata, i32 0, i32 %39\l  %41 = addrspacecast float addrspace(3)* %40 to float*\l  %42 = fmul contract float %27, %27\l  %43 = sub i32 1, %10\l  %44 = icmp slt i32 %43, %10\l  br label %45\l}"];
	Node0x5f52970 -> Node0x5f52d50;
	Node0x5f52d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%45:\l45:                                               \l  %46 = phi i32 [ %24, %31 ], [ %95, %88 ]\l  br i1 %33, label %47, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5f52d50:s0 -> Node0x5f535d0;
	Node0x5f52d50:s1 -> Node0x5f53660;
	Node0x5f535d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%47:\l47:                                               \l  %48 = add nsw i32 %46, %12\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !20\l  store volatile float %51, float* %35, align 4, !tbaa !20\l  br label %52\l}"];
	Node0x5f535d0 -> Node0x5f53660;
	Node0x5f53660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = add i32 %36, %46\l  %54 = icmp slt i32 %53, %15\l  br i1 %54, label %55, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5f53660:s0 -> Node0x5f54310;
	Node0x5f53660:s1 -> Node0x5f54360;
	Node0x5f54310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%55:\l55:                                               \l  %56 = sext i32 %53 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !20\l  br label %59\l}"];
	Node0x5f54310 -> Node0x5f54360;
	Node0x5f54360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%59:\l59:                                               \l  %60 = phi float [ %58, %55 ], [ 0.000000e+00, %52 ]\l  store volatile float %60, float* %38, align 4, !tbaa !20\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = load volatile float, float* %41, align 4, !tbaa !20\l  %62 = add nsw i32 %46, %39\l  %63 = fcmp contract ogt float %61, %42\l  %64 = icmp slt i32 %62, %28\l  %65 = select i1 %63, i1 %64, i1 false\l  br i1 %65, label %66, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5f54360:s0 -> Node0x5f52bf0;
	Node0x5f54360:s1 -> Node0x5f534d0;
	Node0x5f52bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%66:\l66:                                               \l  br i1 %44, label %69, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5f52bf0:s0 -> Node0x5f55ab0;
	Node0x5f52bf0:s1 -> Node0x5f55b00;
	Node0x5f55c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = icmp slt i32 %76, %10\l  br i1 %68, label %69, label %77, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5f55c40:s0 -> Node0x5f55ab0;
	Node0x5f55c40:s1 -> Node0x5f55b00;
	Node0x5f55ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  %70 = phi i32 [ %76, %67 ], [ %43, %66 ]\l  %71 = add nsw i32 %70, %39\l  %72 = getelementptr inbounds [1187 x float], [1187 x float] addrspace(3)*\l... @_ZZ14cleanup_spikesPKdPKfPKiPfPiS6_S6_E5sdata, i32 0, i32 %71\l  %73 = addrspacecast float addrspace(3)* %72 to float*\l  %74 = load volatile float, float* %73, align 4, !tbaa !20\l  %75 = fcmp contract ogt float %74, %61\l  %76 = add nsw i32 %70, 1\l  br i1 %75, label %88, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5f55ab0:s0 -> Node0x5f534d0;
	Node0x5f55ab0:s1 -> Node0x5f55c40;
	Node0x5f55b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%77:\l77:                                               \l  %78 = atomicrmw add i32 addrspace(1)* %6, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %79 = icmp slt i32 %78, 5000\l  br i1 %79, label %80, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5f55b00:s0 -> Node0x5f56140;
	Node0x5f55b00:s1 -> Node0x5f534d0;
	Node0x5f56140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%80:\l80:                                               \l  %81 = sext i32 %78 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %81\l  store i32 %62, i32 addrspace(1)* %82, align 4, !tbaa !24\l  %83 = sext i32 %62 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !24\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %81\l  store i32 %85, i32 addrspace(1)* %86, align 4, !tbaa !24\l  %87 = getelementptr inbounds float, float addrspace(1)* %3, i64 %81\l  store float %61, float addrspace(1)* %87, align 4, !tbaa !20\l  br label %88\l}"];
	Node0x5f56140 -> Node0x5f534d0;
	Node0x5f534d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%88:\l88:                                               \l  %89 = udiv i32 %23, %20\l  %90 = mul i32 %89, %20\l  %91 = icmp ugt i32 %23, %90\l  %92 = zext i1 %91 to i32\l  %93 = add i32 %89, %92\l  %94 = mul i32 %93, %20\l  %95 = add i32 %94, %46\l  %96 = icmp sgt i32 %95, %29\l  br i1 %96, label %97, label %45, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5f534d0:s0 -> Node0x5f528e0;
	Node0x5f534d0:s1 -> Node0x5f52d50;
	Node0x5f528e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%97:\l97:                                               \l  ret void\l}"];
}
