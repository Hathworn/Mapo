digraph "CFG for '_Z10bestFilterPKdPKbPKiS4_PKfPiPf' function" {
	label="CFG for '_Z10bestFilterPKdPKbPKiS4_PKfPiPf' function";

	Node0x572a820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%7:\l  %8 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %9 = fptosi double %8 to i32\l  %10 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %11 = load double, double addrspace(1)* %10, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !9, !invariant.load !8\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !10\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = mul i32 %21, %17\l  %23 = udiv i32 %20, %17\l  %24 = getelementptr inbounds double, double addrspace(1)* %0, i64 7\l  %25 = load double, double addrspace(1)* %24, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %26 = fptosi double %25 to i32\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %28 = add nsw i32 %22, %27\l  %29 = icmp slt i32 %28, %9\l  br i1 %29, label %30, label %112\l|{<s0>T|<s1>F}}"];
	Node0x572a820:s0 -> Node0x572ddb0;
	Node0x572a820:s1 -> Node0x572de40;
	Node0x572ddb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%30:\l30:                                               \l  %31 = mul i32 %23, %17\l  %32 = icmp ugt i32 %20, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %23, %33\l  %35 = icmp sgt i32 %12, 0\l  %36 = mul nsw i32 %34, %17\l  %37 = and i32 %12, 1\l  %38 = icmp eq i32 %12, 1\l  %39 = and i32 %12, -2\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x572ddb0 -> Node0x572e670;
	Node0x572e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = phi i32 [ %28, %30 ], [ %110, %107 ]\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %43\l  store i32 0, i32 addrspace(1)* %44, align 4, !tbaa !20\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %43\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !20\l  br i1 %35, label %47, label %107\l|{<s0>T|<s1>F}}"];
	Node0x572e670:s0 -> Node0x572f2d0;
	Node0x572e670:s1 -> Node0x572e760;
	Node0x572f2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%47:\l47:                                               \l  br i1 %38, label %88, label %48\l|{<s0>T|<s1>F}}"];
	Node0x572f2d0:s0 -> Node0x572f410;
	Node0x572f2d0:s1 -> Node0x572f460;
	Node0x572f460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi float [ %84, %83 ], [ 0.000000e+00, %47 ]\l  %50 = phi i32 [ %85, %83 ], [ 0, %47 ]\l  %51 = phi i32 [ %86, %83 ], [ 0, %47 ]\l  %52 = mul nsw i32 %50, %26\l  %53 = add nsw i32 %52, %46\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %57 = icmp eq i8 %56, 0\l  br i1 %57, label %66, label %58\l|{<s0>T|<s1>F}}"];
	Node0x572f460:s0 -> Node0x5730a10;
	Node0x572f460:s1 -> Node0x5730a60;
	Node0x5730a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%58:\l58:                                               \l  %59 = mul nsw i32 %50, %9\l  %60 = add nsw i32 %59, %42\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %4, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !25\l  %64 = fcmp contract ogt float %63, %49\l  br i1 %64, label %65, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5730a60:s0 -> Node0x572e0a0;
	Node0x5730a60:s1 -> Node0x5730a10;
	Node0x572e0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%65:\l65:                                               \l  store i32 %50, i32 addrspace(1)* %44, align 4, !tbaa !20\l  br label %66\l}"];
	Node0x572e0a0 -> Node0x5730a10;
	Node0x5730a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi float [ %63, %65 ], [ %49, %58 ], [ %49, %48 ]\l  %68 = or i32 %50, 1\l  %69 = mul nsw i32 %68, %26\l  %70 = add nsw i32 %69, %46\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %71\l  %73 = load i8, i8 addrspace(1)* %72, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %74 = icmp eq i8 %73, 0\l  br i1 %74, label %83, label %75\l|{<s0>T|<s1>F}}"];
	Node0x5730a10:s0 -> Node0x572f5a0;
	Node0x5730a10:s1 -> Node0x5732500;
	Node0x5732500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%75:\l75:                                               \l  %76 = mul nsw i32 %68, %9\l  %77 = add nsw i32 %76, %42\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %4, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !25\l  %81 = fcmp contract ogt float %80, %67\l  br i1 %81, label %82, label %83\l|{<s0>T|<s1>F}}"];
	Node0x5732500:s0 -> Node0x5732f40;
	Node0x5732500:s1 -> Node0x572f5a0;
	Node0x5732f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%82:\l82:                                               \l  store i32 %68, i32 addrspace(1)* %44, align 4, !tbaa !20\l  br label %83\l}"];
	Node0x5732f40 -> Node0x572f5a0;
	Node0x572f5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi float [ %80, %82 ], [ %67, %75 ], [ %67, %66 ]\l  %85 = add nuw nsw i32 %50, 2\l  %86 = add i32 %51, 2\l  %87 = icmp eq i32 %86, %39\l  br i1 %87, label %88, label %48, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x572f5a0:s0 -> Node0x572f410;
	Node0x572f5a0:s1 -> Node0x572f460;
	Node0x572f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%88:\l88:                                               \l  %89 = phi float [ undef, %47 ], [ %84, %83 ]\l  %90 = phi float [ 0.000000e+00, %47 ], [ %84, %83 ]\l  %91 = phi i32 [ 0, %47 ], [ %85, %83 ]\l  br i1 %40, label %107, label %92\l|{<s0>T|<s1>F}}"];
	Node0x572f410:s0 -> Node0x572e760;
	Node0x572f410:s1 -> Node0x5733b10;
	Node0x5733b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%92:\l92:                                               \l  %93 = mul nsw i32 %91, %26\l  %94 = add nsw i32 %93, %46\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !22, !range !24,\l... !amdgpu.noclobber !8\l  %98 = icmp eq i8 %97, 0\l  br i1 %98, label %107, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5733b10:s0 -> Node0x572e760;
	Node0x5733b10:s1 -> Node0x5733f40;
	Node0x5733f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%99:\l99:                                               \l  %100 = mul nsw i32 %91, %9\l  %101 = add nsw i32 %100, %42\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %4, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !25\l  %105 = fcmp contract ogt float %104, %90\l  br i1 %105, label %106, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5733f40:s0 -> Node0x5734370;
	Node0x5733f40:s1 -> Node0x572e760;
	Node0x5734370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%106:\l106:                                              \l  store i32 %91, i32 addrspace(1)* %44, align 4, !tbaa !20\l  br label %107\l}"];
	Node0x5734370 -> Node0x572e760;
	Node0x572e760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%107:\l107:                                              \l  %108 = phi float [ 0.000000e+00, %41 ], [ %89, %88 ], [ %104, %106 ], [ %90,\l... %99 ], [ %90, %92 ]\l  %109 = getelementptr inbounds float, float addrspace(1)* %6, i64 %43\l  store float %108, float addrspace(1)* %109, align 4, !tbaa !25\l  %110 = add nsw i32 %42, %36\l  %111 = icmp slt i32 %110, %9\l  br i1 %111, label %41, label %112, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x572e760:s0 -> Node0x572e670;
	Node0x572e760:s1 -> Node0x572de40;
	Node0x572de40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%112:\l112:                                              \l  ret void\l}"];
}
