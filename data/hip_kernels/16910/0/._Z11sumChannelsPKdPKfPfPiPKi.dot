digraph "CFG for '_Z11sumChannelsPKdPKfPfPiPKi' function" {
	label="CFG for '_Z11sumChannelsPKdPKfPfPiPKi' function";

	Node0x5a8fc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%5:\l  %6 = getelementptr inbounds double, double addrspace(1)* %0, i64 10\l  %7 = load double, double addrspace(1)* %6, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fptosi double %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %12 = fptosi double %11 to i32\l  %13 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %14 = load double, double addrspace(1)* %13, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %15 = fptosi double %14 to i32\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 13\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %18 = fptosi double %17 to i32\l  %19 = getelementptr inbounds double, double addrspace(1)* %0, i64 14\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %21 = fptosi double %20 to i32\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !10, !invariant.load\l... !8\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %22, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !11\l  %30 = mul i32 %10, %26\l  %31 = add i32 %30, %9\l  %32 = icmp slt i32 %31, %12\l  br i1 %32, label %33, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5a8fc30:s0 -> Node0x5a92670;
	Node0x5a8fc30:s1 -> Node0x5a92700;
	Node0x5a92670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%33:\l33:                                               \l  %34 = icmp sgt i32 %15, 0\l  %35 = icmp sgt i32 %21, 0\l  %36 = icmp sgt i32 %18, 0\l  %37 = udiv i32 %29, %26\l  %38 = mul i32 %37, %26\l  %39 = icmp ugt i32 %29, %38\l  %40 = zext i1 %39 to i32\l  %41 = add i32 %37, %40\l  %42 = mul i32 %41, %26\l  %43 = and i32 %18, 1\l  %44 = icmp eq i32 %18, 1\l  %45 = and i32 %18, -2\l  %46 = icmp eq i32 %43, 0\l  br label %47\l}"];
	Node0x5a92670 -> Node0x5a93f50;
	Node0x5a93f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%47:\l47:                                               \l  %48 = phi i32 [ %31, %33 ], [ %149, %148 ]\l  br i1 %34, label %49, label %148\l|{<s0>T|<s1>F}}"];
	Node0x5a93f50:s0 -> Node0x5a94180;
	Node0x5a93f50:s1 -> Node0x5a94040;
	Node0x5a94180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%49:\l49:                                               \l  %50 = phi i32 [ %146, %138 ], [ 0, %47 ]\l  br i1 %35, label %51, label %138\l|{<s0>T|<s1>F}}"];
	Node0x5a94180:s0 -> Node0x5a94430;
	Node0x5a94180:s1 -> Node0x5a942f0;
	Node0x5a94430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%51:\l51:                                               \l  %52 = mul nsw i32 %50, %8\l  br label %53\l}"];
	Node0x5a94430 -> Node0x5a94600;
	Node0x5a94600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  %54 = phi float [ 0.000000e+00, %51 ], [ %135, %133 ]\l  %55 = phi i32 [ 0, %51 ], [ %136, %133 ]\l  %56 = phi i32 [ 0, %51 ], [ %134, %133 ]\l  br i1 %36, label %57, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5a94600:s0 -> Node0x5a954c0;
	Node0x5a94600:s1 -> Node0x5a95140;
	Node0x5a954c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%57:\l57:                                               \l  %58 = mul i32 %55, %15\l  %59 = mul nsw i32 %55, %18\l  br i1 %44, label %106, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5a954c0:s0 -> Node0x5a95720;
	Node0x5a954c0:s1 -> Node0x5a95770;
	Node0x5a95770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi float [ %103, %60 ], [ %54, %57 ]\l  %62 = phi float [ %95, %60 ], [ 0.000000e+00, %57 ]\l  %63 = phi i32 [ %102, %60 ], [ %56, %57 ]\l  %64 = phi i32 [ %97, %60 ], [ 0, %57 ]\l  %65 = phi i32 [ %104, %60 ], [ 0, %57 ]\l  %66 = add nsw i32 %64, %52\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !20\l  %70 = add i32 %69, %58\l  %71 = mul i32 %70, %12\l  %72 = add i32 %71, %48\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !22\l  %76 = fadd contract float %62, %75\l  %77 = fmul contract float %76, %76\l  %78 = or i32 %64, 1\l  %79 = sitofp i32 %78 to float\l  %80 = fdiv contract float %77, %79\l  %81 = fcmp contract ogt float %80, %61\l  %82 = add nsw i32 %64, %59\l  %83 = select i1 %81, i32 %82, i32 %63\l  %84 = select i1 %81, float %80, float %61\l  %85 = add nsw i32 %78, %52\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !20\l  %89 = add i32 %88, %58\l  %90 = mul i32 %89, %12\l  %91 = add i32 %90, %48\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !22\l  %95 = fadd contract float %76, %94\l  %96 = fmul contract float %95, %95\l  %97 = add nuw nsw i32 %64, 2\l  %98 = sitofp i32 %97 to float\l  %99 = fdiv contract float %96, %98\l  %100 = fcmp contract ogt float %99, %84\l  %101 = add nsw i32 %78, %59\l  %102 = select i1 %100, i32 %101, i32 %83\l  %103 = select i1 %100, float %99, float %84\l  %104 = add i32 %65, 2\l  %105 = icmp eq i32 %104, %45\l  br i1 %105, label %106, label %60, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5a95770:s0 -> Node0x5a95720;
	Node0x5a95770:s1 -> Node0x5a95770;
	Node0x5a95720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%106:\l106:                                              \l  %107 = phi i32 [ undef, %57 ], [ %102, %60 ]\l  %108 = phi float [ undef, %57 ], [ %103, %60 ]\l  %109 = phi float [ %54, %57 ], [ %103, %60 ]\l  %110 = phi float [ 0.000000e+00, %57 ], [ %95, %60 ]\l  %111 = phi i32 [ %56, %57 ], [ %102, %60 ]\l  %112 = phi i32 [ 0, %57 ], [ %97, %60 ]\l  br i1 %46, label %133, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5a95720:s0 -> Node0x5a95140;
	Node0x5a95720:s1 -> Node0x5a98dc0;
	Node0x5a98dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%113:\l113:                                              \l  %114 = add nsw i32 %112, %52\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !20\l  %118 = add i32 %117, %58\l  %119 = mul i32 %118, %12\l  %120 = add i32 %119, %48\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %1, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !22\l  %124 = fadd contract float %110, %123\l  %125 = fmul contract float %124, %124\l  %126 = add nuw nsw i32 %112, 1\l  %127 = sitofp i32 %126 to float\l  %128 = fdiv contract float %125, %127\l  %129 = fcmp contract ogt float %128, %109\l  %130 = add nsw i32 %112, %59\l  %131 = select i1 %129, i32 %130, i32 %111\l  %132 = select i1 %129, float %128, float %109\l  br label %133\l}"];
	Node0x5a98dc0 -> Node0x5a95140;
	Node0x5a95140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%133:\l133:                                              \l  %134 = phi i32 [ %56, %53 ], [ %107, %106 ], [ %131, %113 ]\l  %135 = phi float [ %54, %53 ], [ %108, %106 ], [ %132, %113 ]\l  %136 = add nuw nsw i32 %55, 1\l  %137 = icmp eq i32 %136, %21\l  br i1 %137, label %138, label %53, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5a95140:s0 -> Node0x5a942f0;
	Node0x5a95140:s1 -> Node0x5a94600;
	Node0x5a942f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%138:\l138:                                              \l  %139 = phi i32 [ 0, %49 ], [ %134, %133 ]\l  %140 = phi float [ 0.000000e+00, %49 ], [ %135, %133 ]\l  %141 = mul nsw i32 %50, %12\l  %142 = add nsw i32 %141, %48\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %2, i64 %143\l  store float %140, float addrspace(1)* %144, align 4, !tbaa !22\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %143\l  store i32 %139, i32 addrspace(1)* %145, align 4, !tbaa !20\l  %146 = add nuw nsw i32 %50, 1\l  %147 = icmp eq i32 %146, %15\l  br i1 %147, label %148, label %49, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5a942f0:s0 -> Node0x5a94040;
	Node0x5a942f0:s1 -> Node0x5a94180;
	Node0x5a94040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%148:\l148:                                              \l  %149 = add i32 %42, %48\l  %150 = icmp slt i32 %149, %12\l  br i1 %150, label %47, label %151, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x5a94040:s0 -> Node0x5a93f50;
	Node0x5a94040:s1 -> Node0x5a92700;
	Node0x5a92700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%151:\l151:                                              \l  ret void\l}"];
}
