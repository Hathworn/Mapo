digraph "CFG for '_Z11spaceFilterPKdPKfS2_PKiS4_Pf' function" {
	label="CFG for '_Z11spaceFilterPKdPKfS2_PKiS4_Pf' function";

	Node0x5483010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = load double, double addrspace(1)* %0, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %10 = fptosi double %9 to i32\l  %11 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %12 = load double, double addrspace(1)* %11, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %13 = fptosi double %12 to i32\l  %14 = getelementptr inbounds double, double addrspace(1)* %0, i64 6\l  %15 = load double, double addrspace(1)* %14, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %16 = fptosi double %15 to i32\l  %17 = getelementptr inbounds double, double addrspace(1)* %0, i64 10\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %19 = fptosi double %18 to i32\l  %20 = getelementptr inbounds double, double addrspace(1)* %0, i64 9\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %22 = fptosi double %21 to i32\l  %23 = icmp slt i32 %7, %19\l  br i1 %23, label %24, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5483010:s0 -> Node0x5485f10;
	Node0x5483010:s1 -> Node0x5485fa0;
	Node0x5485f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%24:\l24:                                               \l  %25 = sext i32 %8 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %28 = mul nsw i32 %27, %19\l  %29 = add nsw i32 %28, %7\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !10, !amdgpu.noclobber\l... !9\l  %33 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %7\l  %34 = addrspacecast i32 addrspace(3)* %33 to i32*\l  store volatile i32 %32, i32* %34, align 4, !tbaa !10\l  br label %35\l}"];
	Node0x5485f10 -> Node0x5485fa0;
	Node0x5485fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = mul nsw i32 %19, %16\l  %37 = icmp slt i32 %7, %36\l  br i1 %37, label %38, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5485fa0:s0 -> Node0x54873f0;
	Node0x5485fa0:s1 -> Node0x5487440;
	Node0x54873f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%38:\l38:                                               \l  %39 = freeze i32 %7\l  %40 = freeze i32 %19\l  %41 = sdiv i32 %39, %40\l  %42 = mul i32 %41, %40\l  %43 = sub i32 %39, %42\l  %44 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %43\l  %45 = addrspacecast i32 addrspace(3)* %44 to i32*\l  %46 = load volatile i32, i32* %45, align 4, !tbaa !10\l  %47 = mul i32 %41, %13\l  %48 = add i32 %47, %8\l  %49 = mul i32 %48, %22\l  %50 = add i32 %49, %46\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !12,\l... !amdgpu.noclobber !9\l  %54 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %7\l  %55 = addrspacecast float addrspace(3)* %54 to float*\l  store volatile float %53, float* %55, align 4, !tbaa !12\l  br label %56\l}"];
	Node0x54873f0 -> Node0x5487440;
	Node0x5487440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %57 = icmp slt i32 %7, %10\l  br i1 %57, label %58, label %240\l|{<s0>T|<s1>F}}"];
	Node0x5487440:s0 -> Node0x5488940;
	Node0x5487440:s1 -> Node0x5488990;
	Node0x5488940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%58:\l58:                                               \l  %59 = icmp sgt i32 %16, 0\l  %60 = icmp sgt i32 %19, 0\l  %61 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %62 = getelementptr i8, i8 addrspace(4)* %61, i64 4\l  %63 = bitcast i8 addrspace(4)* %62 to i16 addrspace(4)*\l  %64 = load i16, i16 addrspace(4)* %63, align 4, !range !14, !invariant.load\l... !9\l  %65 = zext i16 %64 to i32\l  %66 = and i32 %19, 7\l  %67 = icmp ult i32 %19, 8\l  %68 = and i32 %19, -8\l  %69 = icmp eq i32 %66, 0\l  br label %70\l}"];
	Node0x5488940 -> Node0x5489660;
	Node0x5489660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%70:\l70:                                               \l  %71 = phi i32 [ %7, %58 ], [ %238, %237 ]\l  br i1 %59, label %72, label %237\l|{<s0>T|<s1>F}}"];
	Node0x5489660:s0 -> Node0x54898d0;
	Node0x5489660:s1 -> Node0x5489790;
	Node0x54898d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%72:\l72:                                               \l  %73 = phi i32 [ %235, %227 ], [ 0, %70 ]\l  br i1 %60, label %74, label %227\l|{<s0>T|<s1>F}}"];
	Node0x54898d0:s0 -> Node0x5489b80;
	Node0x54898d0:s1 -> Node0x5489a40;
	Node0x5489b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%74:\l74:                                               \l  %75 = mul nsw i32 %73, %19\l  br i1 %67, label %202, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5489b80:s0 -> Node0x5489d50;
	Node0x5489b80:s1 -> Node0x5489da0;
	Node0x5489da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%76:\l76:                                               \l  %77 = phi float [ %198, %76 ], [ 0.000000e+00, %74 ]\l  %78 = phi i32 [ %199, %76 ], [ 0, %74 ]\l  %79 = phi i32 [ %200, %76 ], [ 0, %74 ]\l  %80 = add nsw i32 %78, %75\l  %81 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %80\l  %82 = addrspacecast float addrspace(3)* %81 to float*\l  %83 = load volatile float, float* %82, align 4, !tbaa !12\l  %84 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %78\l  %85 = addrspacecast i32 addrspace(3)* %84 to i32*\l  %86 = load volatile i32, i32* %85, align 4, !tbaa !10\l  %87 = mul nsw i32 %86, %10\l  %88 = add nsw i32 %87, %71\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !12\l  %92 = fmul contract float %83, %91\l  %93 = fadd contract float %77, %92\l  %94 = or i32 %78, 1\l  %95 = add nsw i32 %94, %75\l  %96 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %95\l  %97 = addrspacecast float addrspace(3)* %96 to float*\l  %98 = load volatile float, float* %97, align 4, !tbaa !12\l  %99 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %94\l  %100 = addrspacecast i32 addrspace(3)* %99 to i32*\l  %101 = load volatile i32, i32* %100, align 4, !tbaa !10\l  %102 = mul nsw i32 %101, %10\l  %103 = add nsw i32 %102, %71\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !12\l  %107 = fmul contract float %98, %106\l  %108 = fadd contract float %93, %107\l  %109 = or i32 %78, 2\l  %110 = add nsw i32 %109, %75\l  %111 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %110\l  %112 = addrspacecast float addrspace(3)* %111 to float*\l  %113 = load volatile float, float* %112, align 4, !tbaa !12\l  %114 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %109\l  %115 = addrspacecast i32 addrspace(3)* %114 to i32*\l  %116 = load volatile i32, i32* %115, align 4, !tbaa !10\l  %117 = mul nsw i32 %116, %10\l  %118 = add nsw i32 %117, %71\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !12\l  %122 = fmul contract float %113, %121\l  %123 = fadd contract float %108, %122\l  %124 = or i32 %78, 3\l  %125 = add nsw i32 %124, %75\l  %126 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %125\l  %127 = addrspacecast float addrspace(3)* %126 to float*\l  %128 = load volatile float, float* %127, align 4, !tbaa !12\l  %129 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %124\l  %130 = addrspacecast i32 addrspace(3)* %129 to i32*\l  %131 = load volatile i32, i32* %130, align 4, !tbaa !10\l  %132 = mul nsw i32 %131, %10\l  %133 = add nsw i32 %132, %71\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !12\l  %137 = fmul contract float %128, %136\l  %138 = fadd contract float %123, %137\l  %139 = or i32 %78, 4\l  %140 = add nsw i32 %139, %75\l  %141 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %140\l  %142 = addrspacecast float addrspace(3)* %141 to float*\l  %143 = load volatile float, float* %142, align 4, !tbaa !12\l  %144 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %139\l  %145 = addrspacecast i32 addrspace(3)* %144 to i32*\l  %146 = load volatile i32, i32* %145, align 4, !tbaa !10\l  %147 = mul nsw i32 %146, %10\l  %148 = add nsw i32 %147, %71\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %1, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !12\l  %152 = fmul contract float %143, %151\l  %153 = fadd contract float %138, %152\l  %154 = or i32 %78, 5\l  %155 = add nsw i32 %154, %75\l  %156 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %155\l  %157 = addrspacecast float addrspace(3)* %156 to float*\l  %158 = load volatile float, float* %157, align 4, !tbaa !12\l  %159 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %154\l  %160 = addrspacecast i32 addrspace(3)* %159 to i32*\l  %161 = load volatile i32, i32* %160, align 4, !tbaa !10\l  %162 = mul nsw i32 %161, %10\l  %163 = add nsw i32 %162, %71\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %1, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !12\l  %167 = fmul contract float %158, %166\l  %168 = fadd contract float %153, %167\l  %169 = or i32 %78, 6\l  %170 = add nsw i32 %169, %75\l  %171 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %170\l  %172 = addrspacecast float addrspace(3)* %171 to float*\l  %173 = load volatile float, float* %172, align 4, !tbaa !12\l  %174 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %169\l  %175 = addrspacecast i32 addrspace(3)* %174 to i32*\l  %176 = load volatile i32, i32* %175, align 4, !tbaa !10\l  %177 = mul nsw i32 %176, %10\l  %178 = add nsw i32 %177, %71\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %1, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !12\l  %182 = fmul contract float %173, %181\l  %183 = fadd contract float %168, %182\l  %184 = or i32 %78, 7\l  %185 = add nsw i32 %184, %75\l  %186 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %185\l  %187 = addrspacecast float addrspace(3)* %186 to float*\l  %188 = load volatile float, float* %187, align 4, !tbaa !12\l  %189 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %184\l  %190 = addrspacecast i32 addrspace(3)* %189 to i32*\l  %191 = load volatile i32, i32* %190, align 4, !tbaa !10\l  %192 = mul nsw i32 %191, %10\l  %193 = add nsw i32 %192, %71\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds float, float addrspace(1)* %1, i64 %194\l  %196 = load float, float addrspace(1)* %195, align 4, !tbaa !12\l  %197 = fmul contract float %188, %196\l  %198 = fadd contract float %183, %197\l  %199 = add nuw nsw i32 %78, 8\l  %200 = add i32 %79, 8\l  %201 = icmp eq i32 %200, %68\l  br i1 %201, label %202, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5489da0:s0 -> Node0x5489d50;
	Node0x5489da0:s1 -> Node0x5489da0;
	Node0x5489d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%202:\l202:                                              \l  %203 = phi float [ undef, %74 ], [ %198, %76 ]\l  %204 = phi float [ 0.000000e+00, %74 ], [ %198, %76 ]\l  %205 = phi i32 [ 0, %74 ], [ %199, %76 ]\l  br i1 %69, label %227, label %206\l|{<s0>T|<s1>F}}"];
	Node0x5489d50:s0 -> Node0x5489a40;
	Node0x5489d50:s1 -> Node0x548f730;
	Node0x548f730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%206:\l206:                                              \l  %207 = phi float [ %223, %206 ], [ %204, %202 ]\l  %208 = phi i32 [ %224, %206 ], [ %205, %202 ]\l  %209 = phi i32 [ %225, %206 ], [ 0, %202 ]\l  %210 = add nsw i32 %208, %75\l  %211 = getelementptr inbounds [96 x float], [96 x float] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2sU, i32 0, i32 %210\l  %212 = addrspacecast float addrspace(3)* %211 to float*\l  %213 = load volatile float, float* %212, align 4, !tbaa !12\l  %214 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ11spaceFilterPKdPKfS2_PKiS4_PfE2iU, i32 0, i32 %208\l  %215 = addrspacecast i32 addrspace(3)* %214 to i32*\l  %216 = load volatile i32, i32* %215, align 4, !tbaa !10\l  %217 = mul nsw i32 %216, %10\l  %218 = add nsw i32 %217, %71\l  %219 = sext i32 %218 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %1, i64 %219\l  %221 = load float, float addrspace(1)* %220, align 4, !tbaa !12\l  %222 = fmul contract float %213, %221\l  %223 = fadd contract float %207, %222\l  %224 = add nuw nsw i32 %208, 1\l  %225 = add i32 %209, 1\l  %226 = icmp eq i32 %225, %66\l  br i1 %226, label %227, label %206, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x548f730:s0 -> Node0x5489a40;
	Node0x548f730:s1 -> Node0x548f730;
	Node0x5489a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%227:\l227:                                              \l  %228 = phi float [ 0.000000e+00, %72 ], [ %203, %202 ], [ %223, %206 ]\l  %229 = mul i32 %73, %13\l  %230 = add i32 %229, %8\l  %231 = mul i32 %230, %10\l  %232 = add i32 %231, %71\l  %233 = sext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %5, i64 %233\l  store float %228, float addrspace(1)* %234, align 4, !tbaa !12\l  %235 = add nuw nsw i32 %73, 1\l  %236 = icmp eq i32 %235, %16\l  br i1 %236, label %237, label %72, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5489a40:s0 -> Node0x5489790;
	Node0x5489a40:s1 -> Node0x54898d0;
	Node0x5489790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%237:\l237:                                              \l  %238 = add i32 %71, %65\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %239 = icmp slt i32 %238, %10\l  br i1 %239, label %70, label %240, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5489790:s0 -> Node0x5489660;
	Node0x5489790:s1 -> Node0x5488990;
	Node0x5488990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%240:\l240:                                              \l  ret void\l}"];
}
