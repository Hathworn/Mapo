digraph "CFG for '_Z17ap_multiplicationPfPiS_S_i' function" {
	label="CFG for '_Z17ap_multiplicationPfPiS_S_i' function";

	Node0x5527990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %3, i64 %15\l  store float 0.000000e+00, float addrspace(1)* %16, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = icmp slt i32 %14, %4\l  br i1 %17, label %18, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5527990:s0 -> Node0x552a8f0;
	Node0x5527990:s1 -> Node0x552a980;
	Node0x552a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %14, 3\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %20\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %2, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %28 = fmul contract float %22, %27\l  %29 = load float, float addrspace(1)* %16, align 4, !tbaa !7\l  %30 = fadd contract float %29, %28\l  store float %30, float addrspace(1)* %16, align 4, !tbaa !7\l  %31 = add nsw i32 %19, 1\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %32\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %40 = fmul contract float %34, %39\l  %41 = fadd contract float %30, %40\l  store float %41, float addrspace(1)* %16, align 4, !tbaa !7\l  %42 = add nsw i32 %19, 2\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = fmul contract float %45, %50\l  %52 = fadd contract float %41, %51\l  store float %52, float addrspace(1)* %16, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %53\l}"];
	Node0x552a8f0 -> Node0x552a980;
	Node0x552a980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  ret void\l}"];
}
