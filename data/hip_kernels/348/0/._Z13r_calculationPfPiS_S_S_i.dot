digraph "CFG for '_Z13r_calculationPfPiS_S_S_i' function" {
	label="CFG for '_Z13r_calculationPfPiS_S_S_i' function";

	Node0x5b108d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5b108d0:s0 -> Node0x5b111b0;
	Node0x5b108d0:s1 -> Node0x5b128a0;
	Node0x5b111b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %15, 3\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %3, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = fmul contract float %21, %26\l  %28 = fadd contract float %27, 0.000000e+00\l  %29 = add nsw i32 %18, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %30\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = fmul contract float %32, %37\l  %39 = fadd contract float %28, %38\l  %40 = add nsw i32 %18, 2\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fmul contract float %43, %48\l  %50 = fadd contract float %39, %49\l  %51 = sext i32 %15 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fsub contract float %53, %50\l  %55 = getelementptr inbounds float, float addrspace(1)* %4, i64 %51\l  store float %54, float addrspace(1)* %55, align 4, !tbaa !7\l  br label %56\l}"];
	Node0x5b111b0 -> Node0x5b128a0;
	Node0x5b128a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  ret void\l}"];
}
