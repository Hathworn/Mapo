digraph "CFG for '_Z12mandelKernelddddiPjiiii' function" {
	label="CFG for '_Z12mandelKernelddddiPjiiii' function";

	Node0x45f0a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = mul nsw i32 %27, %8\l  %29 = add nsw i32 %28, %9\l  %30 = sitofp i32 %19 to double\l  %31 = fmul contract double %30, %0\l  %32 = fadd contract double %31, %2\l  %33 = add nsw i32 %7, -1\l  %34 = sitofp i32 %33 to double\l  %35 = sitofp i32 %29 to double\l  %36 = fsub contract double %34, %35\l  %37 = fmul contract double %36, %1\l  %38 = fadd contract double %37, %3\l  br label %39\l}"];
	Node0x45f0a20 -> Node0x45f3260;
	Node0x45f3260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi double [ 0.000000e+00, %10 ], [ %49, %39 ]\l  %41 = phi double [ 0.000000e+00, %10 ], [ %46, %39 ]\l  %42 = phi i32 [ 0, %10 ], [ %50, %39 ]\l  %43 = fmul contract double %41, %41\l  %44 = fmul contract double %40, %40\l  %45 = fsub contract double %43, %44\l  %46 = fadd contract double %32, %45\l  %47 = fmul contract double %40, %41\l  %48 = fmul contract double %47, 2.000000e+00\l  %49 = fadd contract double %38, %48\l  %50 = add nuw nsw i32 %42, 1\l  %51 = fmul contract double %46, %46\l  %52 = fmul contract double %49, %49\l  %53 = fadd contract double %51, %52\l  %54 = icmp slt i32 %50, %4\l  %55 = fcmp contract ole double %53, 4.000000e+00\l  %56 = select i1 %54, i1 %55, i1 false\l  br i1 %56, label %39, label %57, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x45f3260:s0 -> Node0x45f3260;
	Node0x45f3260:s1 -> Node0x45f6dd0;
	Node0x45f6dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%57:\l57:                                               \l  %58 = icmp eq i32 %50, %4\l  %59 = select i1 %58, i32 0, i32 %50\l  %60 = mul nsw i32 %27, %6\l  %61 = add nsw i32 %60, %19\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %62\l  store i32 %59, i32 addrspace(1)* %63, align 4, !tbaa !9\l  ret void\l}"];
}
