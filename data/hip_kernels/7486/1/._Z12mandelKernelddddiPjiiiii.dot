digraph "CFG for '_Z12mandelKernelddddiPjiiiii' function" {
	label="CFG for '_Z12mandelKernelddddiPjiiiii' function";

	Node0x58edb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = shl nsw i32 %10, 3\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %21, %28\l  %30 = add i32 %29, %27\l  %31 = mul nsw i32 %30, %8\l  %32 = add nsw i32 %31, %9\l  %33 = icmp slt i32 %32, %7\l  br i1 %33, label %34, label %69\l|{<s0>T|<s1>F}}"];
	Node0x58edb30:s0 -> Node0x58f02f0;
	Node0x58edb30:s1 -> Node0x58f2640;
	Node0x58f02f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  %35 = sitofp i32 %20 to double\l  %36 = fmul contract double %35, %0\l  %37 = fadd contract double %36, %2\l  %38 = add nsw i32 %7, -1\l  %39 = sitofp i32 %38 to double\l  %40 = sitofp i32 %32 to double\l  %41 = fsub contract double %39, %40\l  %42 = fmul contract double %41, %1\l  %43 = fadd contract double %42, %3\l  br label %44\l}"];
	Node0x58f02f0 -> Node0x58f2c30;
	Node0x58f2c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi double [ 0.000000e+00, %34 ], [ %54, %44 ]\l  %46 = phi double [ 0.000000e+00, %34 ], [ %51, %44 ]\l  %47 = phi i32 [ 0, %34 ], [ %55, %44 ]\l  %48 = fmul contract double %46, %46\l  %49 = fmul contract double %45, %45\l  %50 = fsub contract double %48, %49\l  %51 = fadd contract double %37, %50\l  %52 = fmul contract double %45, %46\l  %53 = fmul contract double %52, 2.000000e+00\l  %54 = fadd contract double %43, %53\l  %55 = add nuw nsw i32 %47, 1\l  %56 = fmul contract double %51, %51\l  %57 = fmul contract double %54, %54\l  %58 = fadd contract double %56, %57\l  %59 = icmp slt i32 %55, %4\l  %60 = fcmp contract ole double %58, 4.000000e+00\l  %61 = select i1 %59, i1 %60, i1 false\l  br i1 %61, label %44, label %62, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x58f2c30:s0 -> Node0x58f2c30;
	Node0x58f2c30:s1 -> Node0x58f4290;
	Node0x58f4290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%62:\l62:                                               \l  %63 = icmp eq i32 %55, %4\l  %64 = select i1 %63, i32 0, i32 %55\l  %65 = mul nsw i32 %30, %6\l  %66 = add nsw i32 %65, %20\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %67\l  store i32 %64, i32 addrspace(1)* %68, align 4, !tbaa !9\l  br label %69\l}"];
	Node0x58f4290 -> Node0x58f2640;
	Node0x58f2640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%69:\l69:                                               \l  ret void\l}"];
}
