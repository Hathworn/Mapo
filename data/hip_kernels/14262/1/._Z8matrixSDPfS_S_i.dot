digraph "CFG for '_Z8matrixSDPfS_S_i' function" {
	label="CFG for '_Z8matrixSDPfS_S_i' function";

	Node0x648e630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = mul nsw i32 %21, %3\l  %23 = add nsw i32 %13, %22\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = zext i32 %5 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = fsub contract float %26, %29\l  %31 = tail call float @llvm.fabs.f32(float %30)\l  %32 = tail call float @llvm.amdgcn.frexp.mant.f32(float %31)\l  %33 = fcmp olt float %32, 0x3FE5555560000000\l  %34 = zext i1 %33 to i32\l  %35 = tail call float @llvm.amdgcn.ldexp.f32(float %32, i32 %34)\l  %36 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %31)\l  %37 = sub nsw i32 %36, %34\l  %38 = fadd float %35, -1.000000e+00\l  %39 = fadd float %35, 1.000000e+00\l  %40 = fadd float %39, -1.000000e+00\l  %41 = fsub float %35, %40\l  %42 = tail call float @llvm.amdgcn.rcp.f32(float %39)\l  %43 = fmul float %38, %42\l  %44 = fmul float %39, %43\l  %45 = fneg float %44\l  %46 = tail call float @llvm.fma.f32(float %43, float %39, float %45)\l  %47 = tail call float @llvm.fma.f32(float %43, float %41, float %46)\l  %48 = fadd float %44, %47\l  %49 = fsub float %48, %44\l  %50 = fsub float %47, %49\l  %51 = fsub float %38, %48\l  %52 = fsub float %38, %51\l  %53 = fsub float %52, %48\l  %54 = fsub float %53, %50\l  %55 = fadd float %51, %54\l  %56 = fmul float %42, %55\l  %57 = fadd float %43, %56\l  %58 = fsub float %57, %43\l  %59 = fsub float %56, %58\l  %60 = fmul float %57, %57\l  %61 = fneg float %60\l  %62 = tail call float @llvm.fma.f32(float %57, float %57, float %61)\l  %63 = fmul float %59, 2.000000e+00\l  %64 = tail call float @llvm.fma.f32(float %57, float %63, float %62)\l  %65 = fadd float %60, %64\l  %66 = fsub float %65, %60\l  %67 = fsub float %64, %66\l  %68 = tail call float @llvm.fmuladd.f32(float %65, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %69 = tail call float @llvm.fmuladd.f32(float %65, float %68, float\l... 0x3FD999BDE0000000)\l  %70 = sitofp i32 %37 to float\l  %71 = fmul float %70, 0x3FE62E4300000000\l  %72 = fneg float %71\l  %73 = tail call float @llvm.fma.f32(float %70, float 0x3FE62E4300000000,\l... float %72)\l  %74 = tail call float @llvm.fma.f32(float %70, float 0xBE205C6100000000,\l... float %73)\l  %75 = fadd float %71, %74\l  %76 = fsub float %75, %71\l  %77 = fsub float %74, %76\l  %78 = tail call float @llvm.amdgcn.ldexp.f32(float %57, i32 1)\l  %79 = fmul float %57, %65\l  %80 = fneg float %79\l  %81 = tail call float @llvm.fma.f32(float %65, float %57, float %80)\l  %82 = tail call float @llvm.fma.f32(float %65, float %59, float %81)\l  %83 = tail call float @llvm.fma.f32(float %67, float %57, float %82)\l  %84 = fadd float %79, %83\l  %85 = fsub float %84, %79\l  %86 = fsub float %83, %85\l  %87 = fmul float %65, %69\l  %88 = fneg float %87\l  %89 = tail call float @llvm.fma.f32(float %65, float %69, float %88)\l  %90 = tail call float @llvm.fma.f32(float %67, float %69, float %89)\l  %91 = fadd float %87, %90\l  %92 = fsub float %91, %87\l  %93 = fsub float %90, %92\l  %94 = fadd float %91, 0x3FE5555540000000\l  %95 = fadd float %94, 0xBFE5555540000000\l  %96 = fsub float %91, %95\l  %97 = fadd float %93, 0x3E2E720200000000\l  %98 = fadd float %97, %96\l  %99 = fadd float %94, %98\l  %100 = fsub float %99, %94\l  %101 = fsub float %98, %100\l  %102 = fmul float %84, %99\l  %103 = fneg float %102\l  %104 = tail call float @llvm.fma.f32(float %84, float %99, float %103)\l  %105 = tail call float @llvm.fma.f32(float %84, float %101, float %104)\l  %106 = tail call float @llvm.fma.f32(float %86, float %99, float %105)\l  %107 = tail call float @llvm.amdgcn.ldexp.f32(float %59, i32 1)\l  %108 = fadd float %102, %106\l  %109 = fsub float %108, %102\l  %110 = fsub float %106, %109\l  %111 = fadd float %78, %108\l  %112 = fsub float %111, %78\l  %113 = fsub float %108, %112\l  %114 = fadd float %107, %110\l  %115 = fadd float %114, %113\l  %116 = fadd float %111, %115\l  %117 = fsub float %116, %111\l  %118 = fsub float %115, %117\l  %119 = fadd float %75, %116\l  %120 = fsub float %119, %75\l  %121 = fsub float %119, %120\l  %122 = fsub float %75, %121\l  %123 = fsub float %116, %120\l  %124 = fadd float %123, %122\l  %125 = fadd float %77, %118\l  %126 = fsub float %125, %77\l  %127 = fsub float %125, %126\l  %128 = fsub float %77, %127\l  %129 = fsub float %118, %126\l  %130 = fadd float %129, %128\l  %131 = fadd float %125, %124\l  %132 = fadd float %119, %131\l  %133 = fsub float %132, %119\l  %134 = fsub float %131, %133\l  %135 = fadd float %130, %134\l  %136 = fadd float %132, %135\l  %137 = fsub float %136, %132\l  %138 = fsub float %135, %137\l  %139 = fmul float %136, 2.000000e+00\l  %140 = fneg float %139\l  %141 = tail call float @llvm.fma.f32(float %136, float 2.000000e+00, float\l... %140)\l  %142 = tail call float @llvm.fma.f32(float %138, float 2.000000e+00, float\l... %141)\l  %143 = fadd float %139, %142\l  %144 = fsub float %143, %139\l  %145 = fsub float %142, %144\l  %146 = tail call float @llvm.fabs.f32(float %139) #4\l  %147 = fcmp oeq float %146, 0x7FF0000000000000\l  %148 = select i1 %147, float %139, float %143\l  %149 = tail call float @llvm.fabs.f32(float %148) #4\l  %150 = fcmp oeq float %149, 0x7FF0000000000000\l  %151 = select i1 %150, float 0.000000e+00, float %145\l  %152 = fcmp oeq float %148, 0x40562E4300000000\l  %153 = select i1 %152, float 0x3EE0000000000000, float 0.000000e+00\l  %154 = fsub float %148, %153\l  %155 = fadd float %153, %151\l  %156 = fmul float %154, 0x3FF7154760000000\l  %157 = tail call float @llvm.rint.f32(float %156)\l  %158 = fcmp ogt float %154, 0x40562E4300000000\l  %159 = fcmp olt float %154, 0xC059D1DA00000000\l  %160 = fneg float %156\l  %161 = tail call float @llvm.fma.f32(float %154, float 0x3FF7154760000000,\l... float %160)\l  %162 = tail call float @llvm.fma.f32(float %154, float 0x3E54AE0BE0000000,\l... float %161)\l  %163 = fsub float %156, %157\l  %164 = fadd float %162, %163\l  %165 = tail call float @llvm.exp2.f32(float %164)\l  %166 = fptosi float %157 to i32\l  %167 = tail call float @llvm.amdgcn.ldexp.f32(float %165, i32 %166)\l  %168 = select i1 %159, float 0.000000e+00, float %167\l  %169 = select i1 %158, float 0x7FF0000000000000, float %168\l  %170 = tail call float @llvm.fma.f32(float %169, float %155, float %169)\l  %171 = tail call float @llvm.fabs.f32(float %169) #4\l  %172 = fcmp oeq float %171, 0x7FF0000000000000\l  %173 = select i1 %172, float %169, float %170\l  %174 = tail call float @llvm.fabs.f32(float %173)\l  %175 = fcmp oeq float %31, 0x7FF0000000000000\l  %176 = fcmp oeq float %30, 0.000000e+00\l  %177 = select i1 %175, float 0x7FF0000000000000, float %174\l  %178 = select i1 %176, float 0.000000e+00, float %177\l  %179 = fcmp uno float %30, 0.000000e+00\l  %180 = select i1 %179, float 0x7FF8000000000000, float %178\l  %181 = fcmp oeq float %30, 1.000000e+00\l  %182 = select i1 %181, float 1.000000e+00, float %180\l  %183 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sdata1, i32 0, i32 %20\l  store float %182, float addrspace(3)* %183, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %184 = icmp ugt i16 %17, 1\l  br i1 %184, label %187, label %185\l|{<s0>T|<s1>F}}"];
	Node0x648e630:s0 -> Node0x649bac0;
	Node0x648e630:s1 -> Node0x649bb50;
	Node0x649bb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%185:\l185:                                              \l  %186 = icmp eq i32 %20, 0\l  br i1 %186, label %203, label %229\l|{<s0>T|<s1>F}}"];
	Node0x649bb50:s0 -> Node0x649bd20;
	Node0x649bb50:s1 -> Node0x649bd70;
	Node0x649bac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%187:\l187:                                              \l  %188 = phi i32 [ %191, %201 ], [ 1, %4 ]\l  %189 = add i32 %188, %20\l  %190 = icmp ult i32 %189, %3\l  %191 = shl i32 %188, 1\l  br i1 %190, label %192, label %201\l|{<s0>T|<s1>F}}"];
	Node0x649bac0:s0 -> Node0x649c1d0;
	Node0x649bac0:s1 -> Node0x649bee0;
	Node0x649c1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%192:\l192:                                              \l  %193 = add i32 %191, 1023\l  %194 = and i32 %193, %20\l  %195 = icmp eq i32 %194, 0\l  br i1 %195, label %196, label %201\l|{<s0>T|<s1>F}}"];
	Node0x649c1d0:s0 -> Node0x649c480;
	Node0x649c1d0:s1 -> Node0x649bee0;
	Node0x649c480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%196:\l196:                                              \l  %197 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @sdata1, i32 0, i32 %189\l  %198 = load float, float addrspace(3)* %197, align 4, !tbaa !7\l  %199 = load float, float addrspace(3)* %183, align 4, !tbaa !7\l  %200 = fadd contract float %198, %199\l  store float %200, float addrspace(3)* %183, align 4, !tbaa !7\l  br label %201\l}"];
	Node0x649c480 -> Node0x649bee0;
	Node0x649bee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%201:\l201:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %202 = icmp ult i32 %191, %18\l  br i1 %202, label %187, label %185, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x649bee0:s0 -> Node0x649bac0;
	Node0x649bee0:s1 -> Node0x649bb50;
	Node0x649bd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%203:\l203:                                              \l  %204 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @sdata1, i32 0, i32 0), align 4, !tbaa !7\l  %205 = sitofp i32 %3 to float\l  %206 = fdiv contract float %204, %205\l  %207 = fcmp olt float %206, 0x39F0000000000000\l  %208 = select i1 %207, float 0x41F0000000000000, float 1.000000e+00\l  %209 = fmul float %206, %208\l  %210 = tail call float @llvm.sqrt.f32(float %209)\l  %211 = bitcast float %210 to i32\l  %212 = add nsw i32 %211, -1\l  %213 = bitcast i32 %212 to float\l  %214 = add nsw i32 %211, 1\l  %215 = bitcast i32 %214 to float\l  %216 = tail call i1 @llvm.amdgcn.class.f32(float %209, i32 608)\l  %217 = select i1 %207, float 0x3EF0000000000000, float 1.000000e+00\l  %218 = fneg float %215\l  %219 = tail call float @llvm.fma.f32(float %218, float %210, float %209)\l  %220 = fcmp ogt float %219, 0.000000e+00\l  %221 = fneg float %213\l  %222 = tail call float @llvm.fma.f32(float %221, float %210, float %209)\l  %223 = fcmp ole float %222, 0.000000e+00\l  %224 = select i1 %223, float %213, float %210\l  %225 = select i1 %220, float %215, float %224\l  %226 = fmul float %217, %225\l  %227 = select i1 %216, float %209, float %226\l  %228 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  store float %227, float addrspace(1)* %228, align 4, !tbaa !7\l  br label %229\l}"];
	Node0x649bd20 -> Node0x649bd70;
	Node0x649bd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%229:\l229:                                              \l  ret void\l}"];
}
