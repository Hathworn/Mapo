digraph "CFG for '_Z7flip_2DPfmmii' function" {
	label="CFG for '_Z7flip_2DPfmmii' function";

	Node0x52e1720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = zext i32 %14 to i64\l  %16 = mul i64 %2, %1\l  %17 = freeze i64 %15\l  %18 = freeze i64 %2\l  %19 = udiv i64 %17, %18\l  %20 = mul i64 %19, %18\l  %21 = sub i64 %17, %20\l  %22 = icmp ugt i64 %16, %15\l  br i1 %22, label %23, label %55\l|{<s0>T|<s1>F}}"];
	Node0x52e1720:s0 -> Node0x52e3a10;
	Node0x52e1720:s1 -> Node0x52e3aa0;
	Node0x52e3a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%23:\l23:                                               \l  %24 = icmp ne i32 %4, 0\l  %25 = lshr i64 %2, 1\l  %26 = icmp ult i64 %21, %25\l  %27 = select i1 %24, i1 %26, i1 false\l  br i1 %27, label %28, label %39\l|{<s0>T|<s1>F}}"];
	Node0x52e3a10:s0 -> Node0x52e3ea0;
	Node0x52e3a10:s1 -> Node0x52e3ef0;
	Node0x52e3ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%28:\l28:                                               \l  %29 = mul i64 %19, %2\l  %30 = add i64 %29, %16\l  %31 = add i64 %30, %21\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = xor i64 %21, -1\l  %34 = add i64 %33, %2\l  %35 = add i64 %34, %30\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store float %38, float addrspace(1)* %32, align 4, !tbaa !7\l  store float %37, float addrspace(1)* %36, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %39\l}"];
	Node0x52e3ea0 -> Node0x52e3ef0;
	Node0x52e3ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%39:\l39:                                               \l  %40 = icmp ne i32 %3, 0\l  %41 = lshr i64 %1, 1\l  %42 = icmp ult i64 %19, %41\l  %43 = select i1 %40, i1 %42, i1 false\l  br i1 %43, label %44, label %55\l|{<s0>T|<s1>F}}"];
	Node0x52e3ef0:s0 -> Node0x52e5bd0;
	Node0x52e3ef0:s1 -> Node0x52e3aa0;
	Node0x52e5bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = mul i64 %19, %2\l  %46 = add i64 %45, %21\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = xor i64 %19, -1\l  %49 = add i64 %48, %1\l  %50 = mul i64 %49, %2\l  %51 = add i64 %50, %21\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %54 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  store float %54, float addrspace(1)* %47, align 4, !tbaa !7\l  store float %53, float addrspace(1)* %52, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %55\l}"];
	Node0x52e5bd0 -> Node0x52e3aa0;
	Node0x52e3aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  ret void\l}"];
}
