digraph "CFG for '_Z16gussain_filter_yPfS_immmif' function" {
	label="CFG for '_Z16gussain_filter_yPfS_immmif' function";

	Node0x4c1e510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = zext i32 %17 to i64\l  %19 = mul i64 %5, %4\l  %20 = mul i64 %19, %3\l  %21 = freeze i64 %18\l  %22 = freeze i64 %5\l  %23 = udiv i64 %21, %22\l  %24 = mul i64 %23, %22\l  %25 = sub i64 %21, %24\l  %26 = urem i64 %23, %4\l  %27 = udiv i64 %18, %19\l  %28 = urem i64 %27, %3\l  %29 = udiv i64 %18, %20\l  %30 = icmp ult i64 %3, 2\l  %31 = select i1 %30, i64 2, i64 3\l  %32 = mul i64 %20, %31\l  %33 = icmp ugt i64 %32, %18\l  br i1 %33, label %34, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4c1e510:s0 -> Node0x4c20330;
	Node0x4c1e510:s1 -> Node0x4c20e60;
	Node0x4c20330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %6, 0\l  %36 = icmp slt i32 %2, 0\l  br i1 %35, label %37, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4c20330:s0 -> Node0x4c210c0;
	Node0x4c20330:s1 -> Node0x4c21110;
	Node0x4c210c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%37:\l37:                                               \l  br i1 %36, label %46, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4c210c0:s0 -> Node0x4c21250;
	Node0x4c210c0:s1 -> Node0x4c212a0;
	Node0x4c212a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%38:\l38:                                               \l  %39 = sub nsw i32 0, %2\l  %40 = trunc i64 %26 to i32\l  %41 = add i64 %4, -1\l  %42 = mul i64 %29, %20\l  %43 = mul i64 %28, %19\l  %44 = add i64 %43, %25\l  %45 = add i64 %44, %42\l  br label %49\l}"];
	Node0x4c212a0 -> Node0x4c217e0;
	Node0x4c21250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %37 ], [ %69, %62 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  br label %120\l}"];
	Node0x4c21250 -> Node0x4c22b80;
	Node0x4c217e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%49:\l49:                                               \l  %50 = phi i32 [ %39, %38 ], [ %70, %62 ]\l  %51 = phi float [ 0.000000e+00, %38 ], [ %69, %62 ]\l  %52 = add i32 %50, %40\l  %53 = icmp slt i32 %52, 0\l  br i1 %53, label %62, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4c217e0:s0 -> Node0x4c22320;
	Node0x4c217e0:s1 -> Node0x4c22ec0;
	Node0x4c22ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%54:\l54:                                               \l  %55 = zext i32 %52 to i64\l  %56 = icmp ult i64 %41, %55\l  br i1 %56, label %62, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4c22ec0:s0 -> Node0x4c22320;
	Node0x4c22ec0:s1 -> Node0x4c23100;
	Node0x4c23100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%57:\l57:                                               \l  %58 = mul i64 %55, %5\l  %59 = add i64 %45, %58\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  br label %62\l}"];
	Node0x4c23100 -> Node0x4c22320;
	Node0x4c22320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%62:\l62:                                               \l  %63 = phi float [ %61, %57 ], [ %7, %54 ], [ %7, %49 ]\l  %64 = add nsw i32 %50, %2\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = fmul contract float %67, %63\l  %69 = fadd contract float %51, %68\l  %70 = add i32 %50, 1\l  %71 = icmp eq i32 %50, %2\l  br i1 %71, label %46, label %49, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c22320:s0 -> Node0x4c21250;
	Node0x4c22320:s1 -> Node0x4c217e0;
	Node0x4c21110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%72:\l72:                                               \l  br i1 %36, label %83, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4c21110:s0 -> Node0x4c20dc0;
	Node0x4c21110:s1 -> Node0x4c249a0;
	Node0x4c249a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%73:\l73:                                               \l  %74 = sub nsw i32 0, %2\l  %75 = trunc i64 %26 to i32\l  %76 = shl nsw i32 %75, 1\l  %77 = add nsw i32 %76, -2\l  %78 = sub nsw i32 1, %75\l  %79 = mul i64 %29, %20\l  %80 = mul i64 %28, %19\l  %81 = add i64 %80, %25\l  %82 = add i64 %81, %79\l  br label %86\l}"];
	Node0x4c249a0 -> Node0x4c24fd0;
	Node0x4c20dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%83:\l83:                                               \l  %84 = phi float [ 0.000000e+00, %72 ], [ %117, %105 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  store float %84, float addrspace(1)* %85, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  br label %120\l}"];
	Node0x4c20dc0 -> Node0x4c22b80;
	Node0x4c24fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i32 [ %74, %73 ], [ %118, %105 ]\l  %88 = phi float [ 0.000000e+00, %73 ], [ %117, %105 ]\l  %89 = add i32 %87, %75\l  %90 = freeze i32 %89\l  %91 = icmp slt i32 %90, 0\l  br i1 %91, label %92, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4c24fd0:s0 -> Node0x4c25960;
	Node0x4c24fd0:s1 -> Node0x4c259b0;
	Node0x4c25960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%92:\l92:                                               \l  %93 = srem i32 %90, %77\l  %94 = icmp sgt i32 %93, %78\l  %95 = add nsw i32 %93, %77\l  %96 = sub nsw i32 0, %93\l  %97 = select i1 %94, i32 %96, i32 %95\l  br label %105\l}"];
	Node0x4c25960 -> Node0x4c25090;
	Node0x4c259b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%98:\l98:                                               \l  %99 = icmp slt i32 %90, %75\l  br i1 %99, label %105, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4c259b0:s0 -> Node0x4c25090;
	Node0x4c259b0:s1 -> Node0x4c25ee0;
	Node0x4c25ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%100:\l100:                                              \l  %101 = srem i32 %90, %77\l  %102 = icmp slt i32 %101, %75\l  %103 = sub nsw i32 %77, %101\l  %104 = select i1 %102, i32 %101, i32 %103\l  br label %105\l}"];
	Node0x4c25ee0 -> Node0x4c25090;
	Node0x4c25090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %97, %92 ], [ %104, %100 ], [ %90, %98 ]\l  %107 = add nsw i32 %87, %2\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = sext i32 %106 to i64\l  %112 = mul i64 %111, %5\l  %113 = add i64 %82, %112\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fmul contract float %110, %115\l  %117 = fadd contract float %88, %116\l  %118 = add i32 %87, 1\l  %119 = icmp eq i32 %87, %2\l  br i1 %119, label %83, label %86, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c25090:s0 -> Node0x4c20dc0;
	Node0x4c25090:s1 -> Node0x4c24fd0;
	Node0x4c22b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%120:\l120:                                              \l  fence syncscope(\"workgroup\") acquire\l  br label %121\l}"];
	Node0x4c22b80 -> Node0x4c20e60;
	Node0x4c20e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%121:\l121:                                              \l  ret void\l}"];
}
