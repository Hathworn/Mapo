digraph "CFG for '_Z22matrix_multiply_kernelPhS_Pfiiii' function" {
	label="CFG for '_Z22matrix_multiply_kernelPhS_Pfiiii' function";

	Node0x6028b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %6\l  %26 = icmp slt i32 %24, %5\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %169\l|{<s0>T|<s1>F}}"];
	Node0x6028b70:s0 -> Node0x602c600;
	Node0x6028b70:s1 -> Node0x602c690;
	Node0x602c600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %3, 0\l  br i1 %29, label %30, label %48\l|{<s0>T|<s1>F}}"];
	Node0x602c600:s0 -> Node0x602c890;
	Node0x602c600:s1 -> Node0x602c8e0;
	Node0x602c890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%30:\l30:                                               \l  %31 = sub nsw i32 %24, %4\l  %32 = sub nsw i32 %16, %4\l  %33 = add nsw i32 %5, -1\l  %34 = add nsw i32 %6, -1\l  %35 = and i32 %3, 3\l  %36 = icmp ult i32 %3, 4\l  %37 = and i32 %3, -4\l  %38 = icmp eq i32 %35, 0\l  br label %39\l}"];
	Node0x602c890 -> Node0x602d080;
	Node0x602d080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%39:\l39:                                               \l  %40 = phi i32 [ 0, %30 ], [ %89, %87 ]\l  %41 = phi float [ 0.000000e+00, %30 ], [ %88, %87 ]\l  %42 = add nsw i32 %40, %32\l  %43 = icmp slt i32 %42, 0\l  %44 = icmp slt i32 %42, %6\l  %45 = select i1 %44, i32 %42, i32 %34\l  %46 = select i1 %43, i32 0, i32 %45\l  %47 = mul nsw i32 %46, %5\l  br i1 %36, label %59, label %91\l|{<s0>T|<s1>F}}"];
	Node0x602d080:s0 -> Node0x602e1c0;
	Node0x602d080:s1 -> Node0x602e250;
	Node0x602c8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%48:\l48:                                               \l  %49 = phi float [ 0.000000e+00, %28 ], [ %88, %87 ]\l  %50 = fcmp contract olt float %49, 0.000000e+00\l  %51 = fcmp contract ogt float %49, 2.550000e+02\l  %52 = select i1 %51, float 2.550000e+02, float %49\l  %53 = select i1 %50, float 0.000000e+00, float %52\l  %54 = fptoui float %53 to i8\l  %55 = mul nsw i32 %16, %5\l  %56 = add nsw i32 %55, %24\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %57\l  store i8 %54, i8 addrspace(1)* %58, align 1, !tbaa !7\l  br label %169\l}"];
	Node0x602c8e0 -> Node0x602c690;
	Node0x602e1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%59:\l59:                                               \l  %60 = phi float [ undef, %39 ], [ %165, %91 ]\l  %61 = phi i32 [ 0, %39 ], [ %166, %91 ]\l  %62 = phi float [ %41, %39 ], [ %165, %91 ]\l  br i1 %38, label %87, label %63\l|{<s0>T|<s1>F}}"];
	Node0x602e1c0:s0 -> Node0x602d170;
	Node0x602e1c0:s1 -> Node0x602f260;
	Node0x602f260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi i32 [ %84, %63 ], [ %61, %59 ]\l  %65 = phi float [ %83, %63 ], [ %62, %59 ]\l  %66 = phi i32 [ %85, %63 ], [ 0, %59 ]\l  %67 = add nsw i32 %64, %31\l  %68 = icmp slt i32 %67, 0\l  %69 = icmp slt i32 %67, %5\l  %70 = select i1 %69, i32 %67, i32 %33\l  %71 = select i1 %68, i32 0, i32 %70\l  %72 = add nsw i32 %71, %47\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %73\l  %75 = load i8, i8 addrspace(1)* %74, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %76 = uitofp i8 %75 to float\l  %77 = mul nsw i32 %64, %3\l  %78 = add nsw i32 %77, %40\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %82 = fmul contract float %81, %76\l  %83 = fadd contract float %65, %82\l  %84 = add nuw nsw i32 %64, 1\l  %85 = add i32 %66, 1\l  %86 = icmp eq i32 %85, %35\l  br i1 %86, label %87, label %63, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x602f260:s0 -> Node0x602d170;
	Node0x602f260:s1 -> Node0x602f260;
	Node0x602d170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%87:\l87:                                               \l  %88 = phi float [ %60, %59 ], [ %83, %63 ]\l  %89 = add nuw nsw i32 %40, 1\l  %90 = icmp eq i32 %89, %3\l  br i1 %90, label %48, label %39, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x602d170:s0 -> Node0x602c8e0;
	Node0x602d170:s1 -> Node0x602d080;
	Node0x602e250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%91:\l91:                                               \l  %92 = phi i32 [ %166, %91 ], [ 0, %39 ]\l  %93 = phi float [ %165, %91 ], [ %41, %39 ]\l  %94 = phi i32 [ %167, %91 ], [ 0, %39 ]\l  %95 = add nsw i32 %92, %31\l  %96 = icmp slt i32 %95, 0\l  %97 = icmp slt i32 %95, %5\l  %98 = select i1 %97, i32 %95, i32 %33\l  %99 = select i1 %96, i32 0, i32 %98\l  %100 = add nsw i32 %99, %47\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %101\l  %103 = load i8, i8 addrspace(1)* %102, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %104 = uitofp i8 %103 to float\l  %105 = mul nsw i32 %92, %3\l  %106 = add nsw i32 %105, %40\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %110 = fmul contract float %109, %104\l  %111 = fadd contract float %93, %110\l  %112 = or i32 %92, 1\l  %113 = add nsw i32 %112, %31\l  %114 = icmp slt i32 %113, 0\l  %115 = icmp slt i32 %113, %5\l  %116 = select i1 %115, i32 %113, i32 %33\l  %117 = select i1 %114, i32 0, i32 %116\l  %118 = add nsw i32 %117, %47\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %119\l  %121 = load i8, i8 addrspace(1)* %120, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %122 = uitofp i8 %121 to float\l  %123 = mul nsw i32 %112, %3\l  %124 = add nsw i32 %123, %40\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %2, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %128 = fmul contract float %127, %122\l  %129 = fadd contract float %111, %128\l  %130 = or i32 %92, 2\l  %131 = add nsw i32 %130, %31\l  %132 = icmp slt i32 %131, 0\l  %133 = icmp slt i32 %131, %5\l  %134 = select i1 %133, i32 %131, i32 %33\l  %135 = select i1 %132, i32 0, i32 %134\l  %136 = add nsw i32 %135, %47\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %137\l  %139 = load i8, i8 addrspace(1)* %138, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %140 = uitofp i8 %139 to float\l  %141 = mul nsw i32 %130, %3\l  %142 = add nsw i32 %141, %40\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %2, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %146 = fmul contract float %145, %140\l  %147 = fadd contract float %129, %146\l  %148 = or i32 %92, 3\l  %149 = add nsw i32 %148, %31\l  %150 = icmp slt i32 %149, 0\l  %151 = icmp slt i32 %149, %5\l  %152 = select i1 %151, i32 %149, i32 %33\l  %153 = select i1 %150, i32 0, i32 %152\l  %154 = add nsw i32 %153, %47\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %155\l  %157 = load i8, i8 addrspace(1)* %156, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %158 = uitofp i8 %157 to float\l  %159 = mul nsw i32 %148, %3\l  %160 = add nsw i32 %159, %40\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds float, float addrspace(1)* %2, i64 %161\l  %163 = load float, float addrspace(1)* %162, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %164 = fmul contract float %163, %158\l  %165 = fadd contract float %147, %164\l  %166 = add nuw nsw i32 %92, 4\l  %167 = add i32 %94, 4\l  %168 = icmp eq i32 %167, %37\l  br i1 %168, label %59, label %91, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x602e250:s0 -> Node0x602e1c0;
	Node0x602e250:s1 -> Node0x602e250;
	Node0x602c690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%169:\l169:                                              \l  ret void\l}"];
}
