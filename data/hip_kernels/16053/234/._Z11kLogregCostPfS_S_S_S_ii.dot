digraph "CFG for '_Z11kLogregCostPfS_S_S_S_ii' function" {
	label="CFG for '_Z11kLogregCostPfS_S_S_S_ii' function";

	Node0x56af6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = shl i32 %8, 7\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = add i32 %9, %10\l  %12 = icmp slt i32 %11, %5\l  br i1 %12, label %13, label %142\l|{<s0>T|<s1>F}}"];
	Node0x56af6b0:s0 -> Node0x56b0e70;
	Node0x56af6b0:s1 -> Node0x56b0f00;
	Node0x56b0e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%13:\l13:                                               \l  %14 = sext i32 %11 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = fptosi float %16 to i32\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 %14\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %20 = mul nsw i32 %17, %5\l  %21 = add nsw i32 %20, %11\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %25 = tail call float @llvm.log.f32(float %24)\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %14\l  store float %25, float addrspace(1)* %26, align 4, !tbaa !5\l  %27 = fcmp contract une float %24, %19\l  br i1 %27, label %139, label %28\l|{<s0>T|<s1>F}}"];
	Node0x56b0e70:s0 -> Node0x56b29c0;
	Node0x56b0e70:s1 -> Node0x56b2a50;
	Node0x56b2a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %6, 0\l  br i1 %29, label %30, label %58\l|{<s0>T|<s1>F}}"];
	Node0x56b2a50:s0 -> Node0x56b2c20;
	Node0x56b2a50:s1 -> Node0x56b2c70;
	Node0x56b2c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = and i32 %6, 7\l  %32 = icmp ult i32 %6, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x56b2c20:s0 -> Node0x56b1480;
	Node0x56b2c20:s1 -> Node0x56b14d0;
	Node0x56b14d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %6, -8\l  br label %61\l}"];
	Node0x56b14d0 -> Node0x56b3250;
	Node0x56b1480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %30 ], [ %135, %61 ]\l  %37 = phi i32 [ 0, %30 ], [ %136, %61 ]\l  %38 = phi i32 [ 0, %30 ], [ %135, %61 ]\l  %39 = icmp eq i32 %31, 0\l  br i1 %39, label %55, label %40\l|{<s0>T|<s1>F}}"];
	Node0x56b1480:s0 -> Node0x56b3a70;
	Node0x56b1480:s1 -> Node0x56b3b00;
	Node0x56b3b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %52, %40 ], [ %37, %35 ]\l  %42 = phi i32 [ %51, %40 ], [ %38, %35 ]\l  %43 = phi i32 [ %53, %40 ], [ 0, %35 ]\l  %44 = mul nsw i32 %41, %5\l  %45 = add nsw i32 %44, %11\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5\l  %49 = fcmp contract oeq float %48, %19\l  %50 = zext i1 %49 to i32\l  %51 = add nuw nsw i32 %42, %50\l  %52 = add nuw nsw i32 %41, 1\l  %53 = add i32 %43, 1\l  %54 = icmp eq i32 %53, %31\l  br i1 %54, label %55, label %40, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x56b3b00:s0 -> Node0x56b3a70;
	Node0x56b3b00:s1 -> Node0x56b3b00;
	Node0x56b3a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%55:\l55:                                               \l  %56 = phi i32 [ %36, %35 ], [ %51, %40 ]\l  %57 = sitofp i32 %56 to float\l  br label %58\l}"];
	Node0x56b3a70 -> Node0x56b2c70;
	Node0x56b2c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = phi float [ 0.000000e+00, %28 ], [ %57, %55 ]\l  %60 = fdiv contract float 1.000000e+00, %59\l  br label %139\l}"];
	Node0x56b2c70 -> Node0x56b29c0;
	Node0x56b3250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %33 ], [ %136, %61 ]\l  %63 = phi i32 [ 0, %33 ], [ %135, %61 ]\l  %64 = phi i32 [ 0, %33 ], [ %137, %61 ]\l  %65 = mul nsw i32 %62, %5\l  %66 = add nsw i32 %65, %11\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5\l  %70 = fcmp contract oeq float %69, %19\l  %71 = zext i1 %70 to i32\l  %72 = add nuw nsw i32 %63, %71\l  %73 = or i32 %62, 1\l  %74 = mul nsw i32 %73, %5\l  %75 = add nsw i32 %74, %11\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5\l  %79 = fcmp contract oeq float %78, %19\l  %80 = zext i1 %79 to i32\l  %81 = add nuw nsw i32 %72, %80\l  %82 = or i32 %62, 2\l  %83 = mul nsw i32 %82, %5\l  %84 = add nsw i32 %83, %11\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = fcmp contract oeq float %87, %19\l  %89 = zext i1 %88 to i32\l  %90 = add nuw nsw i32 %81, %89\l  %91 = or i32 %62, 3\l  %92 = mul nsw i32 %91, %5\l  %93 = add nsw i32 %92, %11\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5\l  %97 = fcmp contract oeq float %96, %19\l  %98 = zext i1 %97 to i32\l  %99 = add nuw nsw i32 %90, %98\l  %100 = or i32 %62, 4\l  %101 = mul nsw i32 %100, %5\l  %102 = add nsw i32 %101, %11\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !5\l  %106 = fcmp contract oeq float %105, %19\l  %107 = zext i1 %106 to i32\l  %108 = add nuw nsw i32 %99, %107\l  %109 = or i32 %62, 5\l  %110 = mul nsw i32 %109, %5\l  %111 = add nsw i32 %110, %11\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !5\l  %115 = fcmp contract oeq float %114, %19\l  %116 = zext i1 %115 to i32\l  %117 = add nuw nsw i32 %108, %116\l  %118 = or i32 %62, 6\l  %119 = mul nsw i32 %118, %5\l  %120 = add nsw i32 %119, %11\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds float, float addrspace(1)* %0, i64 %121\l  %123 = load float, float addrspace(1)* %122, align 4, !tbaa !5\l  %124 = fcmp contract oeq float %123, %19\l  %125 = zext i1 %124 to i32\l  %126 = add nuw nsw i32 %117, %125\l  %127 = or i32 %62, 7\l  %128 = mul nsw i32 %127, %5\l  %129 = add nsw i32 %128, %11\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !5\l  %133 = fcmp contract oeq float %132, %19\l  %134 = zext i1 %133 to i32\l  %135 = add nuw nsw i32 %126, %134\l  %136 = add nuw nsw i32 %62, 8\l  %137 = add i32 %64, 8\l  %138 = icmp eq i32 %137, %34\l  br i1 %138, label %35, label %61, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x56b3250:s0 -> Node0x56b1480;
	Node0x56b3250:s1 -> Node0x56b3250;
	Node0x56b29c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%139:\l139:                                              \l  %140 = phi float [ %60, %58 ], [ 0.000000e+00, %13 ]\l  %141 = getelementptr inbounds float, float addrspace(1)* %4, i64 %14\l  store float %140, float addrspace(1)* %141, align 4, !tbaa !5\l  br label %142\l}"];
	Node0x56b29c0 -> Node0x56b0f00;
	Node0x56b0f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%142:\l142:                                              \l  ret void\l}"];
}
