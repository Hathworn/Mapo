digraph "CFG for '_Z24normalize_weights_kernelPfiS_S_S_Pi' function" {
	label="CFG for '_Z24normalize_weights_kernelPfiS_S_S_Pi' function";

	Node0x4b55670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp eq i32 %14, 0\l  br i1 %16, label %17, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4b55670:s0 -> Node0x4b55ac0;
	Node0x4b55670:s1 -> Node0x4b57690;
	Node0x4b55ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%17:\l17:                                               \l  %18 = load float, float addrspace(1)* %2, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store float %18, float addrspace(3)*\l... @_ZZ24normalize_weights_kernelPfiS_S_S_PiE10sumWeights, align 4, !tbaa !7\l  br label %19\l}"];
	Node0x4b55ac0 -> Node0x4b57690;
	Node0x4b57690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%19:\l19:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = icmp slt i32 %15, %1\l  br i1 %20, label %21, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4b57690:s0 -> Node0x4b58a70;
	Node0x4b57690:s1 -> Node0x4b58b00;
	Node0x4b58a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%21:\l21:                                               \l  %22 = sext i32 %15 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = load float, float addrspace(3)*\l... @_ZZ24normalize_weights_kernelPfiS_S_S_PiE10sumWeights, align 4, !tbaa !7\l  %26 = fdiv contract float %24, %25\l  store float %26, float addrspace(1)* %23, align 4, !tbaa !7\l  br label %27\l}"];
	Node0x4b58a70 -> Node0x4b58b00;
	Node0x4b58b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%27:\l27:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp eq i32 %15, 0\l  br i1 %28, label %29, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4b58b00:s0 -> Node0x4b592c0;
	Node0x4b58b00:s1 -> Node0x4b59310;
	Node0x4b592c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%29:\l29:                                               \l  %30 = load float, float addrspace(1)* %0, align 4, !tbaa !7\l  store float %30, float addrspace(1)* %3, align 4, !tbaa !7\l  %31 = icmp sgt i32 %1, 1\l  br i1 %31, label %32, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4b592c0:s0 -> Node0x4b595a0;
	Node0x4b592c0:s1 -> Node0x4b595f0;
	Node0x4b595a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = load float, float addrspace(1)* %3, align 4\l  %34 = add i32 %1, -1\l  %35 = add i32 %1, -2\l  %36 = and i32 %34, 7\l  %37 = icmp ult i32 %35, 7\l  br i1 %37, label %94, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4b595a0:s0 -> Node0x4b59b50;
	Node0x4b595a0:s1 -> Node0x4b59ba0;
	Node0x4b59ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%38:\l38:                                               \l  %39 = and i32 %34, -8\l  br label %40\l}"];
	Node0x4b59ba0 -> Node0x4b59da0;
	Node0x4b59da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%40:\l40:                                               \l  %41 = phi float [ %33, %38 ], [ %89, %40 ]\l  %42 = phi i32 [ 1, %38 ], [ %91, %40 ]\l  %43 = phi i32 [ 0, %38 ], [ %92, %40 ]\l  %44 = zext i32 %42 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %46, %41\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nuw nsw i32 %42, 1\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fadd contract float %52, %47\l  %54 = getelementptr inbounds float, float addrspace(1)* %3, i64 %50\l  store float %53, float addrspace(1)* %54, align 4, !tbaa !7\l  %55 = add nuw nsw i32 %42, 2\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %59 = fadd contract float %58, %53\l  %60 = getelementptr inbounds float, float addrspace(1)* %3, i64 %56\l  store float %59, float addrspace(1)* %60, align 4, !tbaa !7\l  %61 = add nuw nsw i32 %42, 3\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fadd contract float %64, %59\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %62\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = add nuw nsw i32 %42, 4\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = fadd contract float %70, %65\l  %72 = getelementptr inbounds float, float addrspace(1)* %3, i64 %68\l  store float %71, float addrspace(1)* %72, align 4, !tbaa !7\l  %73 = add nuw nsw i32 %42, 5\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fadd contract float %76, %71\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %74\l  store float %77, float addrspace(1)* %78, align 4, !tbaa !7\l  %79 = add nuw nsw i32 %42, 6\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %82, %77\l  %84 = getelementptr inbounds float, float addrspace(1)* %3, i64 %80\l  store float %83, float addrspace(1)* %84, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %42, 7\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fadd contract float %88, %83\l  %90 = getelementptr inbounds float, float addrspace(1)* %3, i64 %86\l  store float %89, float addrspace(1)* %90, align 4, !tbaa !7\l  %91 = add nuw nsw i32 %42, 8\l  %92 = add i32 %43, 8\l  %93 = icmp eq i32 %92, %39\l  br i1 %93, label %94, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b59da0:s0 -> Node0x4b59b50;
	Node0x4b59da0:s1 -> Node0x4b59da0;
	Node0x4b59b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%94:\l94:                                               \l  %95 = phi float [ %33, %32 ], [ %89, %40 ]\l  %96 = phi i32 [ 1, %32 ], [ %91, %40 ]\l  %97 = icmp eq i32 %36, 0\l  br i1 %97, label %110, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4b59b50:s0 -> Node0x4b595f0;
	Node0x4b59b50:s1 -> Node0x4b5c720;
	Node0x4b5c720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi float [ %105, %98 ], [ %95, %94 ]\l  %100 = phi i32 [ %107, %98 ], [ %96, %94 ]\l  %101 = phi i32 [ %108, %98 ], [ 0, %94 ]\l  %102 = zext i32 %100 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7\l  %105 = fadd contract float %104, %99\l  %106 = getelementptr inbounds float, float addrspace(1)* %3, i64 %102\l  store float %105, float addrspace(1)* %106, align 4, !tbaa !7\l  %107 = add nuw nsw i32 %100, 1\l  %108 = add i32 %101, 1\l  %109 = icmp eq i32 %108, %36\l  br i1 %109, label %110, label %98, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4b5c720:s0 -> Node0x4b595f0;
	Node0x4b5c720:s1 -> Node0x4b5c720;
	Node0x4b595f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%110:\l110:                                              \l  %111 = sitofp i32 %1 to float\l  %112 = fdiv contract float 1.000000e+00, %111\l  %113 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !15, !amdgpu.noclobber\l... !5\l  %114 = mul nsw i32 %113, 1103515245\l  %115 = add nsw i32 %114, 12345\l  %116 = srem i32 %115, 2147483647\l  store i32 %116, i32 addrspace(1)* %5, align 4, !tbaa !15\l  %117 = sitofp i32 %116 to float\l  %118 = fmul contract float %117, 0x3E00000000000000\l  %119 = tail call float @llvm.fabs.f32(float %118)\l  %120 = fmul contract float %112, %119\l  store float %120, float addrspace(1)* %4, align 4, !tbaa !7\l  br label %121\l}"];
	Node0x4b595f0 -> Node0x4b59310;
	Node0x4b59310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%121:\l121:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %16, label %122, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4b59310:s0 -> Node0x4b5ecf0;
	Node0x4b59310:s1 -> Node0x4b5ed40;
	Node0x4b5ecf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%122:\l122:                                              \l  %123 = load float, float addrspace(1)* %4, align 4, !tbaa !7\l  store float %123, float addrspace(3)*\l... @_ZZ24normalize_weights_kernelPfiS_S_S_PiE2u1, align 4, !tbaa !7\l  br label %124\l}"];
	Node0x4b5ecf0 -> Node0x4b5ed40;
	Node0x4b5ed40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%124:\l124:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %20, label %125, label %133\l|{<s0>T|<s1>F}}"];
	Node0x4b5ed40:s0 -> Node0x4b5f1b0;
	Node0x4b5ed40:s1 -> Node0x4b5f200;
	Node0x4b5f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%125:\l125:                                              \l  %126 = load float, float addrspace(3)*\l... @_ZZ24normalize_weights_kernelPfiS_S_S_PiE2u1, align 4, !tbaa !7\l  %127 = sitofp i32 %15 to float\l  %128 = sitofp i32 %1 to float\l  %129 = fdiv contract float %127, %128\l  %130 = fadd contract float %129, %126\l  %131 = sext i32 %15 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %4, i64 %131\l  store float %130, float addrspace(1)* %132, align 4, !tbaa !7\l  br label %133\l}"];
	Node0x4b5f1b0 -> Node0x4b5f200;
	Node0x4b5f200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%133:\l133:                                              \l  ret void\l}"];
}
