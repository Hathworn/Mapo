digraph "CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function" {
	label="CFG for '_Z22normalize_delta_kerneliPfS_S_S_S_iiiS_' function";

	Node0x55f43c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !13, !invariant.load\l... !14\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %12\l  %27 = add i32 %26, %11\l  %28 = mul i32 %27, %20\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %30 = add i32 %28, %29\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %88\l|{<s0>T|<s1>F}}"];
	Node0x55f43c0:s0 -> Node0x55f7a00;
	Node0x55f43c0:s1 -> Node0x55f7a90;
	Node0x55f7a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sdiv i32 %30, %8\l  %34 = srem i32 %33, %7\l  %35 = sext i32 %30 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %9, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %38 = fpext float %37 to double\l  %39 = sext i32 %34 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %42 = fadd contract float %41, 0x3EE4F8B580000000\l  %43 = fcmp olt float %42, 0x39F0000000000000\l  %44 = select i1 %43, float 0x41F0000000000000, float 1.000000e+00\l  %45 = fmul float %42, %44\l  %46 = tail call float @llvm.sqrt.f32(float %45)\l  %47 = bitcast float %46 to i32\l  %48 = add nsw i32 %47, -1\l  %49 = bitcast i32 %48 to float\l  %50 = add nsw i32 %47, 1\l  %51 = bitcast i32 %50 to float\l  %52 = tail call i1 @llvm.amdgcn.class.f32(float %45, i32 608)\l  %53 = select i1 %43, float 0x3EF0000000000000, float 1.000000e+00\l  %54 = fneg float %51\l  %55 = tail call float @llvm.fma.f32(float %54, float %46, float %45)\l  %56 = fcmp ogt float %55, 0.000000e+00\l  %57 = fneg float %49\l  %58 = tail call float @llvm.fma.f32(float %57, float %46, float %45)\l  %59 = fcmp ole float %58, 0.000000e+00\l  %60 = select i1 %59, float %49, float %46\l  %61 = select i1 %56, float %51, float %60\l  %62 = fmul float %53, %61\l  %63 = select i1 %52, float %45, float %62\l  %64 = fpext float %63 to double\l  %65 = fdiv contract double %38, %64\l  %66 = getelementptr inbounds float, float addrspace(1)* %5, i64 %39\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %68 = fpext float %67 to double\l  %69 = fmul contract double %68, 2.000000e+00\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %74 = fsub contract float %71, %73\l  %75 = fpext float %74 to double\l  %76 = fmul contract double %69, %75\l  %77 = mul nsw i32 %8, %6\l  %78 = sitofp i32 %77 to double\l  %79 = fdiv contract double %76, %78\l  %80 = fadd contract double %79, %65\l  %81 = getelementptr inbounds float, float addrspace(1)* %4, i64 %39\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %83 = sitofp i32 %77 to float\l  %84 = fdiv contract float %82, %83\l  %85 = fpext float %84 to double\l  %86 = fadd contract double %80, %85\l  %87 = fptrunc double %86 to float\l  store float %87, float addrspace(1)* %36, align 4, !tbaa !16\l  br label %88\l}"];
	Node0x55f7a00 -> Node0x55f7a90;
	Node0x55f7a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
