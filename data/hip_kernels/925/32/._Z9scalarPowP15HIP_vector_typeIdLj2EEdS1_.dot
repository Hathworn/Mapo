digraph "CFG for '_Z9scalarPowP15HIP_vector_typeIdLj2EEdS1_' function" {
	label="CFG for '_Z9scalarPowP15HIP_vector_typeIdLj2EEdS1_' function";

	Node0x45e1dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 16\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 8, !tbaa !15\l  %22 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %21, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %21, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %32 = mul i32 %30, %31\l  %33 = add i32 %32, %5\l  %34 = mul i32 %33, %18\l  %35 = add i32 %34, %4\l  %36 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %37 = bitcast i8 addrspace(4)* %36 to i16 addrspace(4)*\l  %38 = load i16, i16 addrspace(4)* %37, align 4, !range !13, !invariant.load\l... !14\l  %39 = zext i16 %38 to i32\l  %40 = mul i32 %35, %39\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %43 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %44 = add i32 %40, %42\l  %45 = mul i32 %44, %25\l  %46 = add i32 %45, %41\l  %47 = mul i32 %46, %13\l  %48 = add i32 %47, %43\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %49, i32 0, i32 0, i32 0, i64 0\l  %51 = load double, double addrspace(1)* %50, align 16, !tbaa !17,\l... !amdgpu.noclobber !14\l  %52 = tail call double @llvm.fabs.f64(double %51)\l  %53 = tail call double @llvm.amdgcn.frexp.mant.f64(double %52)\l  %54 = fcmp olt double %53, 0x3FE5555555555555\l  %55 = zext i1 %54 to i32\l  %56 = tail call double @llvm.amdgcn.ldexp.f64(double %53, i32 %55)\l  %57 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %52)\l  %58 = sub nsw i32 %57, %55\l  %59 = fadd double %56, -1.000000e+00\l  %60 = fadd double %56, 1.000000e+00\l  %61 = fadd double %60, -1.000000e+00\l  %62 = fsub double %56, %61\l  %63 = tail call double @llvm.amdgcn.rcp.f64(double %60)\l  %64 = fneg double %60\l  %65 = tail call double @llvm.fma.f64(double %64, double %63, double\l... 1.000000e+00)\l  %66 = tail call double @llvm.fma.f64(double %65, double %63, double %63)\l  %67 = tail call double @llvm.fma.f64(double %64, double %66, double\l... 1.000000e+00)\l  %68 = tail call double @llvm.fma.f64(double %67, double %66, double %66)\l  %69 = fmul double %59, %68\l  %70 = fmul double %60, %69\l  %71 = fneg double %70\l  %72 = tail call double @llvm.fma.f64(double %69, double %60, double %71)\l  %73 = tail call double @llvm.fma.f64(double %69, double %62, double %72)\l  %74 = fadd double %70, %73\l  %75 = fsub double %74, %70\l  %76 = fsub double %73, %75\l  %77 = fsub double %59, %74\l  %78 = fsub double %59, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %79, %76\l  %81 = fadd double %77, %80\l  %82 = fmul double %68, %81\l  %83 = fadd double %69, %82\l  %84 = fsub double %83, %69\l  %85 = fsub double %82, %84\l  %86 = fmul double %83, %83\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %83, double %83, double %87)\l  %89 = fmul double %85, 2.000000e+00\l  %90 = tail call double @llvm.fma.f64(double %83, double %89, double %88)\l  %91 = fadd double %86, %90\l  %92 = fsub double %91, %86\l  %93 = fsub double %90, %92\l  %94 = tail call double @llvm.fma.f64(double %91, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %95 = tail call double @llvm.fma.f64(double %91, double %94, double\l... 0x3FBE25E43ABE935A)\l  %96 = tail call double @llvm.fma.f64(double %91, double %95, double\l... 0x3FC110EF47E6C9C2)\l  %97 = tail call double @llvm.fma.f64(double %91, double %96, double\l... 0x3FC3B13BCFA74449)\l  %98 = tail call double @llvm.fma.f64(double %91, double %97, double\l... 0x3FC745D171BF3C30)\l  %99 = tail call double @llvm.fma.f64(double %91, double %98, double\l... 0x3FCC71C71C7792CE)\l  %100 = tail call double @llvm.fma.f64(double %91, double %99, double\l... 0x3FD24924924920DA)\l  %101 = tail call double @llvm.fma.f64(double %91, double %100, double\l... 0x3FD999999999999C)\l  %102 = sitofp i32 %58 to double\l  %103 = fmul double %102, 0x3FE62E42FEFA39EF\l  %104 = fneg double %103\l  %105 = tail call double @llvm.fma.f64(double %102, double\l... 0x3FE62E42FEFA39EF, double %104)\l  %106 = tail call double @llvm.fma.f64(double %102, double\l... 0x3C7ABC9E3B39803F, double %105)\l  %107 = fadd double %103, %106\l  %108 = fsub double %107, %103\l  %109 = fsub double %106, %108\l  %110 = tail call double @llvm.amdgcn.ldexp.f64(double %83, i32 1)\l  %111 = tail call double @llvm.amdgcn.ldexp.f64(double %85, i32 1)\l  %112 = fmul double %83, %91\l  %113 = fneg double %112\l  %114 = tail call double @llvm.fma.f64(double %91, double %83, double %113)\l  %115 = tail call double @llvm.fma.f64(double %91, double %85, double %114)\l  %116 = tail call double @llvm.fma.f64(double %93, double %83, double %115)\l  %117 = fadd double %112, %116\l  %118 = fsub double %117, %112\l  %119 = fsub double %116, %118\l  %120 = fmul double %91, %101\l  %121 = fneg double %120\l  %122 = tail call double @llvm.fma.f64(double %91, double %101, double %121)\l  %123 = tail call double @llvm.fma.f64(double %93, double %101, double %122)\l  %124 = fadd double %120, %123\l  %125 = fsub double %124, %120\l  %126 = fsub double %123, %125\l  %127 = fadd double %124, 0x3FE5555555555555\l  %128 = fadd double %127, 0xBFE5555555555555\l  %129 = fsub double %124, %128\l  %130 = fadd double %126, 0x3C8543B0D5DF274D\l  %131 = fadd double %130, %129\l  %132 = fadd double %127, %131\l  %133 = fsub double %132, %127\l  %134 = fsub double %131, %133\l  %135 = fmul double %117, %132\l  %136 = fneg double %135\l  %137 = tail call double @llvm.fma.f64(double %117, double %132, double %136)\l  %138 = tail call double @llvm.fma.f64(double %117, double %134, double %137)\l  %139 = tail call double @llvm.fma.f64(double %119, double %132, double %138)\l  %140 = fadd double %135, %139\l  %141 = fsub double %140, %135\l  %142 = fsub double %139, %141\l  %143 = fadd double %110, %140\l  %144 = fsub double %143, %110\l  %145 = fsub double %140, %144\l  %146 = fadd double %111, %142\l  %147 = fadd double %146, %145\l  %148 = fadd double %143, %147\l  %149 = fsub double %148, %143\l  %150 = fsub double %147, %149\l  %151 = fadd double %107, %148\l  %152 = fsub double %151, %107\l  %153 = fsub double %151, %152\l  %154 = fsub double %107, %153\l  %155 = fsub double %148, %152\l  %156 = fadd double %155, %154\l  %157 = fadd double %109, %150\l  %158 = fsub double %157, %109\l  %159 = fsub double %157, %158\l  %160 = fsub double %109, %159\l  %161 = fsub double %150, %158\l  %162 = fadd double %161, %160\l  %163 = fadd double %157, %156\l  %164 = fadd double %151, %163\l  %165 = fsub double %164, %151\l  %166 = fsub double %163, %165\l  %167 = fadd double %162, %166\l  %168 = fadd double %164, %167\l  %169 = fsub double %168, %164\l  %170 = fsub double %167, %169\l  %171 = fmul double %168, %1\l  %172 = fneg double %171\l  %173 = tail call double @llvm.fma.f64(double %1, double %168, double %172)\l  %174 = tail call double @llvm.fma.f64(double %1, double %170, double %173)\l  %175 = fadd double %171, %174\l  %176 = fsub double %175, %171\l  %177 = fsub double %174, %176\l  %178 = tail call double @llvm.fabs.f64(double %171) #3\l  %179 = fcmp oeq double %178, 0x7FF0000000000000\l  %180 = select i1 %179, double %171, double %175\l  %181 = tail call double @llvm.fabs.f64(double %180) #3\l  %182 = fcmp oeq double %181, 0x7FF0000000000000\l  %183 = select i1 %182, double 0.000000e+00, double %177\l  %184 = fmul double %180, 0x3FF71547652B82FE\l  %185 = tail call double @llvm.rint.f64(double %184)\l  %186 = fneg double %185\l  %187 = tail call double @llvm.fma.f64(double %186, double\l... 0x3FE62E42FEFA39EF, double %180)\l  %188 = tail call double @llvm.fma.f64(double %186, double\l... 0x3C7ABC9E3B39803F, double %187)\l  %189 = tail call double @llvm.fma.f64(double %188, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %190 = tail call double @llvm.fma.f64(double %188, double %189, double\l... 0x3EC71DEE623FDE64)\l  %191 = tail call double @llvm.fma.f64(double %188, double %190, double\l... 0x3EFA01997C89E6B0)\l  %192 = tail call double @llvm.fma.f64(double %188, double %191, double\l... 0x3F2A01A014761F6E)\l  %193 = tail call double @llvm.fma.f64(double %188, double %192, double\l... 0x3F56C16C1852B7B0)\l  %194 = tail call double @llvm.fma.f64(double %188, double %193, double\l... 0x3F81111111122322)\l  %195 = tail call double @llvm.fma.f64(double %188, double %194, double\l... 0x3FA55555555502A1)\l  %196 = tail call double @llvm.fma.f64(double %188, double %195, double\l... 0x3FC5555555555511)\l  %197 = tail call double @llvm.fma.f64(double %188, double %196, double\l... 0x3FE000000000000B)\l  %198 = tail call double @llvm.fma.f64(double %188, double %197, double\l... 1.000000e+00)\l  %199 = tail call double @llvm.fma.f64(double %188, double %198, double\l... 1.000000e+00)\l  %200 = fptosi double %185 to i32\l  %201 = tail call double @llvm.amdgcn.ldexp.f64(double %199, i32 %200)\l  %202 = fcmp ogt double %180, 1.024000e+03\l  %203 = select i1 %202, double 0x7FF0000000000000, double %201\l  %204 = fcmp olt double %180, -1.075000e+03\l  %205 = select i1 %204, double 0.000000e+00, double %203\l  %206 = tail call double @llvm.fma.f64(double %205, double %183, double %205)\l  %207 = tail call double @llvm.fabs.f64(double %205) #3\l  %208 = fcmp oeq double %207, 0x7FF0000000000000\l  %209 = select i1 %208, double %205, double %206\l  %210 = tail call double @llvm.fabs.f64(double %1)\l  %211 = tail call double @llvm.trunc.f64(double %210)\l  %212 = fcmp oeq double %210, %211\l  %213 = zext i1 %212 to i32\l  %214 = fmul double %211, 5.000000e-01\l  %215 = tail call double @llvm.amdgcn.fract.f64(double %214)\l  %216 = tail call i1 @llvm.amdgcn.class.f64(double %214, i32 516)\l  %217 = select i1 %216, double 0.000000e+00, double %215\l  %218 = fcmp oeq double %217, 0.000000e+00\l  %219 = and i1 %212, %218\l  %220 = zext i1 %219 to i32\l  %221 = add nuw nsw i32 %220, %213\l  %222 = icmp eq i32 %221, 1\l  %223 = fcmp olt double %51, 0.000000e+00\l  %224 = and i1 %222, %223\l  %225 = select i1 %224, double -0.000000e+00, double 0.000000e+00\l  %226 = tail call double @llvm.copysign.f64(double %209, double %225)\l  %227 = fcmp uge double %51, 0.000000e+00\l  %228 = icmp ne i32 %221, 0\l  %229 = select i1 %227, i1 true, i1 %228\l  %230 = select i1 %229, double %226, double 0x7FF8000000000000\l  %231 = fcmp oeq double %210, 0x7FF0000000000000\l  %232 = fcmp oeq double %52, 1.000000e+00\l  %233 = fadd double %52, -1.000000e+00\l  %234 = bitcast double %1 to \<2 x i32\>\l  %235 = extractelement \<2 x i32\> %234, i64 1\l  %236 = bitcast double %233 to \<2 x i32\>\l  %237 = extractelement \<2 x i32\> %236, i64 1\l  %238 = xor i32 %237, %235\l  %239 = icmp sgt i32 %238, -1\l  %240 = select i1 %239, double 0x7FF0000000000000, double 0.000000e+00\l  %241 = select i1 %232, double %52, double %240\l  %242 = select i1 %231, double %241, double %230\l  %243 = fcmp oeq double %52, 0x7FF0000000000000\l  %244 = fcmp oeq double %51, 0.000000e+00\l  %245 = or i1 %244, %243\l  %246 = fcmp olt double %1, 0.000000e+00\l  %247 = xor i1 %246, %244\l  %248 = select i1 %247, double 0.000000e+00, double 0x7FF0000000000000\l  %249 = select i1 %222, double %51, double 0.000000e+00\l  %250 = tail call double @llvm.copysign.f64(double %248, double %249)\l  %251 = select i1 %245, double %250, double %242\l  %252 = fcmp uno double %51, %1\l  %253 = select i1 %252, double 0x7FF8000000000000, double %251\l  %254 = fcmp oeq double %51, 1.000000e+00\l  %255 = fcmp oeq double %1, 0.000000e+00\l  %256 = or i1 %255, %254\l  %257 = select i1 %256, double 1.000000e+00, double %253\l  %258 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %49, i32 0, i32 0, i32 0, i64 1\l  %259 = load double, double addrspace(1)* %258, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %260 = tail call double @llvm.fabs.f64(double %259)\l  %261 = tail call double @llvm.amdgcn.frexp.mant.f64(double %260)\l  %262 = fcmp olt double %261, 0x3FE5555555555555\l  %263 = zext i1 %262 to i32\l  %264 = tail call double @llvm.amdgcn.ldexp.f64(double %261, i32 %263)\l  %265 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %260)\l  %266 = sub nsw i32 %265, %263\l  %267 = fadd double %264, -1.000000e+00\l  %268 = fadd double %264, 1.000000e+00\l  %269 = fadd double %268, -1.000000e+00\l  %270 = fsub double %264, %269\l  %271 = tail call double @llvm.amdgcn.rcp.f64(double %268)\l  %272 = fneg double %268\l  %273 = tail call double @llvm.fma.f64(double %272, double %271, double\l... 1.000000e+00)\l  %274 = tail call double @llvm.fma.f64(double %273, double %271, double %271)\l  %275 = tail call double @llvm.fma.f64(double %272, double %274, double\l... 1.000000e+00)\l  %276 = tail call double @llvm.fma.f64(double %275, double %274, double %274)\l  %277 = fmul double %267, %276\l  %278 = fmul double %268, %277\l  %279 = fneg double %278\l  %280 = tail call double @llvm.fma.f64(double %277, double %268, double %279)\l  %281 = tail call double @llvm.fma.f64(double %277, double %270, double %280)\l  %282 = fadd double %278, %281\l  %283 = fsub double %282, %278\l  %284 = fsub double %281, %283\l  %285 = fsub double %267, %282\l  %286 = fsub double %267, %285\l  %287 = fsub double %286, %282\l  %288 = fsub double %287, %284\l  %289 = fadd double %285, %288\l  %290 = fmul double %276, %289\l  %291 = fadd double %277, %290\l  %292 = fsub double %291, %277\l  %293 = fsub double %290, %292\l  %294 = fmul double %291, %291\l  %295 = fneg double %294\l  %296 = tail call double @llvm.fma.f64(double %291, double %291, double %295)\l  %297 = fmul double %293, 2.000000e+00\l  %298 = tail call double @llvm.fma.f64(double %291, double %297, double %296)\l  %299 = fadd double %294, %298\l  %300 = fsub double %299, %294\l  %301 = fsub double %298, %300\l  %302 = tail call double @llvm.fma.f64(double %299, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %303 = tail call double @llvm.fma.f64(double %299, double %302, double\l... 0x3FBE25E43ABE935A)\l  %304 = tail call double @llvm.fma.f64(double %299, double %303, double\l... 0x3FC110EF47E6C9C2)\l  %305 = tail call double @llvm.fma.f64(double %299, double %304, double\l... 0x3FC3B13BCFA74449)\l  %306 = tail call double @llvm.fma.f64(double %299, double %305, double\l... 0x3FC745D171BF3C30)\l  %307 = tail call double @llvm.fma.f64(double %299, double %306, double\l... 0x3FCC71C71C7792CE)\l  %308 = tail call double @llvm.fma.f64(double %299, double %307, double\l... 0x3FD24924924920DA)\l  %309 = tail call double @llvm.fma.f64(double %299, double %308, double\l... 0x3FD999999999999C)\l  %310 = sitofp i32 %266 to double\l  %311 = fmul double %310, 0x3FE62E42FEFA39EF\l  %312 = fneg double %311\l  %313 = tail call double @llvm.fma.f64(double %310, double\l... 0x3FE62E42FEFA39EF, double %312)\l  %314 = tail call double @llvm.fma.f64(double %310, double\l... 0x3C7ABC9E3B39803F, double %313)\l  %315 = fadd double %311, %314\l  %316 = fsub double %315, %311\l  %317 = fsub double %314, %316\l  %318 = tail call double @llvm.amdgcn.ldexp.f64(double %291, i32 1)\l  %319 = tail call double @llvm.amdgcn.ldexp.f64(double %293, i32 1)\l  %320 = fmul double %291, %299\l  %321 = fneg double %320\l  %322 = tail call double @llvm.fma.f64(double %299, double %291, double %321)\l  %323 = tail call double @llvm.fma.f64(double %299, double %293, double %322)\l  %324 = tail call double @llvm.fma.f64(double %301, double %291, double %323)\l  %325 = fadd double %320, %324\l  %326 = fsub double %325, %320\l  %327 = fsub double %324, %326\l  %328 = fmul double %299, %309\l  %329 = fneg double %328\l  %330 = tail call double @llvm.fma.f64(double %299, double %309, double %329)\l  %331 = tail call double @llvm.fma.f64(double %301, double %309, double %330)\l  %332 = fadd double %328, %331\l  %333 = fsub double %332, %328\l  %334 = fsub double %331, %333\l  %335 = fadd double %332, 0x3FE5555555555555\l  %336 = fadd double %335, 0xBFE5555555555555\l  %337 = fsub double %332, %336\l  %338 = fadd double %334, 0x3C8543B0D5DF274D\l  %339 = fadd double %338, %337\l  %340 = fadd double %335, %339\l  %341 = fsub double %340, %335\l  %342 = fsub double %339, %341\l  %343 = fmul double %325, %340\l  %344 = fneg double %343\l  %345 = tail call double @llvm.fma.f64(double %325, double %340, double %344)\l  %346 = tail call double @llvm.fma.f64(double %325, double %342, double %345)\l  %347 = tail call double @llvm.fma.f64(double %327, double %340, double %346)\l  %348 = fadd double %343, %347\l  %349 = fsub double %348, %343\l  %350 = fsub double %347, %349\l  %351 = fadd double %318, %348\l  %352 = fsub double %351, %318\l  %353 = fsub double %348, %352\l  %354 = fadd double %319, %350\l  %355 = fadd double %354, %353\l  %356 = fadd double %351, %355\l  %357 = fsub double %356, %351\l  %358 = fsub double %355, %357\l  %359 = fadd double %315, %356\l  %360 = fsub double %359, %315\l  %361 = fsub double %359, %360\l  %362 = fsub double %315, %361\l  %363 = fsub double %356, %360\l  %364 = fadd double %363, %362\l  %365 = fadd double %317, %358\l  %366 = fsub double %365, %317\l  %367 = fsub double %365, %366\l  %368 = fsub double %317, %367\l  %369 = fsub double %358, %366\l  %370 = fadd double %369, %368\l  %371 = fadd double %365, %364\l  %372 = fadd double %359, %371\l  %373 = fsub double %372, %359\l  %374 = fsub double %371, %373\l  %375 = fadd double %370, %374\l  %376 = fadd double %372, %375\l  %377 = fsub double %376, %372\l  %378 = fsub double %375, %377\l  %379 = fmul double %376, %1\l  %380 = fneg double %379\l  %381 = tail call double @llvm.fma.f64(double %1, double %376, double %380)\l  %382 = tail call double @llvm.fma.f64(double %1, double %378, double %381)\l  %383 = fadd double %379, %382\l  %384 = fsub double %383, %379\l  %385 = fsub double %382, %384\l  %386 = tail call double @llvm.fabs.f64(double %379) #3\l  %387 = fcmp oeq double %386, 0x7FF0000000000000\l  %388 = select i1 %387, double %379, double %383\l  %389 = tail call double @llvm.fabs.f64(double %388) #3\l  %390 = fcmp oeq double %389, 0x7FF0000000000000\l  %391 = select i1 %390, double 0.000000e+00, double %385\l  %392 = fmul double %388, 0x3FF71547652B82FE\l  %393 = tail call double @llvm.rint.f64(double %392)\l  %394 = fneg double %393\l  %395 = tail call double @llvm.fma.f64(double %394, double\l... 0x3FE62E42FEFA39EF, double %388)\l  %396 = tail call double @llvm.fma.f64(double %394, double\l... 0x3C7ABC9E3B39803F, double %395)\l  %397 = tail call double @llvm.fma.f64(double %396, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %398 = tail call double @llvm.fma.f64(double %396, double %397, double\l... 0x3EC71DEE623FDE64)\l  %399 = tail call double @llvm.fma.f64(double %396, double %398, double\l... 0x3EFA01997C89E6B0)\l  %400 = tail call double @llvm.fma.f64(double %396, double %399, double\l... 0x3F2A01A014761F6E)\l  %401 = tail call double @llvm.fma.f64(double %396, double %400, double\l... 0x3F56C16C1852B7B0)\l  %402 = tail call double @llvm.fma.f64(double %396, double %401, double\l... 0x3F81111111122322)\l  %403 = tail call double @llvm.fma.f64(double %396, double %402, double\l... 0x3FA55555555502A1)\l  %404 = tail call double @llvm.fma.f64(double %396, double %403, double\l... 0x3FC5555555555511)\l  %405 = tail call double @llvm.fma.f64(double %396, double %404, double\l... 0x3FE000000000000B)\l  %406 = tail call double @llvm.fma.f64(double %396, double %405, double\l... 1.000000e+00)\l  %407 = tail call double @llvm.fma.f64(double %396, double %406, double\l... 1.000000e+00)\l  %408 = fptosi double %393 to i32\l  %409 = tail call double @llvm.amdgcn.ldexp.f64(double %407, i32 %408)\l  %410 = fcmp ogt double %388, 1.024000e+03\l  %411 = select i1 %410, double 0x7FF0000000000000, double %409\l  %412 = fcmp olt double %388, -1.075000e+03\l  %413 = select i1 %412, double 0.000000e+00, double %411\l  %414 = tail call double @llvm.fma.f64(double %413, double %391, double %413)\l  %415 = tail call double @llvm.fabs.f64(double %413) #3\l  %416 = fcmp oeq double %415, 0x7FF0000000000000\l  %417 = select i1 %416, double %413, double %414\l  %418 = fcmp olt double %259, 0.000000e+00\l  %419 = and i1 %222, %418\l  %420 = select i1 %419, double -0.000000e+00, double 0.000000e+00\l  %421 = tail call double @llvm.copysign.f64(double %417, double %420)\l  %422 = fcmp uge double %259, 0.000000e+00\l  %423 = select i1 %422, i1 true, i1 %228\l  %424 = select i1 %423, double %421, double 0x7FF8000000000000\l  %425 = fcmp oeq double %260, 1.000000e+00\l  %426 = fadd double %260, -1.000000e+00\l  %427 = bitcast double %426 to \<2 x i32\>\l  %428 = extractelement \<2 x i32\> %427, i64 1\l  %429 = xor i32 %428, %235\l  %430 = icmp sgt i32 %429, -1\l  %431 = select i1 %430, double 0x7FF0000000000000, double 0.000000e+00\l  %432 = select i1 %425, double %260, double %431\l  %433 = select i1 %231, double %432, double %424\l  %434 = fcmp oeq double %260, 0x7FF0000000000000\l  %435 = fcmp oeq double %259, 0.000000e+00\l  %436 = or i1 %435, %434\l  %437 = xor i1 %246, %435\l  %438 = select i1 %437, double 0.000000e+00, double 0x7FF0000000000000\l  %439 = select i1 %222, double %259, double 0.000000e+00\l  %440 = tail call double @llvm.copysign.f64(double %438, double %439)\l  %441 = select i1 %436, double %440, double %433\l  %442 = fcmp uno double %259, %1\l  %443 = select i1 %442, double 0x7FF8000000000000, double %441\l  %444 = fcmp oeq double %259, 1.000000e+00\l  %445 = or i1 %255, %444\l  %446 = select i1 %445, double 1.000000e+00, double %443\l  %447 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %49, i32 0, i32 0, i32 0, i64 0\l  store double %257, double addrspace(1)* %447, align 16\l  %448 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %49, i32 0, i32 0, i32 0, i64 1\l  store double %446, double addrspace(1)* %448, align 8\l  ret void\l}"];
}
