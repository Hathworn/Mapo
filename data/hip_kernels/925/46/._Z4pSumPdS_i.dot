digraph "CFG for '_Z4pSumPdS_i' function" {
	label="CFG for '_Z4pSumPdS_i' function";

	Node0x5020010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !5\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !14, !invariant.load\l... !15\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = mul i32 %5, %13\l  %21 = mul i32 %20, %18\l  %22 = add i32 %21, %19\l  %23 = icmp ult i16 %12, 2\l  br i1 %23, label %28, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5020010:s0 -> Node0x50227e0;
	Node0x5020010:s1 -> Node0x5022870;
	Node0x5022870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = lshr i32 %13, 1\l  %26 = icmp ult i32 %4, %25\l  %27 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata2, i32 0, i32 %4\l  br label %30\l}"];
	Node0x5022870 -> Node0x5022c20;
	Node0x50227e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%28:\l28:                                               \l  %29 = icmp eq i32 %4, 0\l  br i1 %29, label %41, label %45\l|{<s0>T|<s1>F}}"];
	Node0x50227e0:s0 -> Node0x5022d70;
	Node0x50227e0:s1 -> Node0x5022dc0;
	Node0x5022c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %13, %24 ], [ %32, %39 ]\l  %32 = lshr i32 %31, 1\l  br i1 %26, label %33, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5022c20:s0 -> Node0x50222a0;
	Node0x5022c20:s1 -> Node0x5022f30;
	Node0x50222a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%33:\l33:                                               \l  %34 = add nuw nsw i32 %32, %4\l  %35 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata2, i32 0, i32 %34\l  %36 = load double, double addrspace(3)* %35, align 8, !tbaa !16\l  %37 = load double, double addrspace(3)* %27, align 8, !tbaa !16\l  %38 = fadd contract double %36, %37\l  store double %38, double addrspace(3)* %27, align 8, !tbaa !16\l  br label %39\l}"];
	Node0x50222a0 -> Node0x5022f30;
	Node0x5022f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ult i32 %31, 4\l  br i1 %40, label %28, label %30, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5022f30:s0 -> Node0x50227e0;
	Node0x5022f30:s1 -> Node0x5022c20;
	Node0x5022d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%41:\l41:                                               \l  %42 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @sdata2, i32 0, i32 0), align 8, !tbaa !16\l  %43 = zext i32 %22 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %1, i64 %43\l  store double %42, double addrspace(1)* %44, align 8, !tbaa !16\l  br label %45\l}"];
	Node0x5022d70 -> Node0x5022dc0;
	Node0x5022dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%45:\l45:                                               \l  ret void\l}"];
}
