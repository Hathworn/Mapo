digraph "CFG for '_Z6derivePdS_iid' function" {
	label="CFG for '_Z6derivePdS_iid' function";

	Node0x5030d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 8, !tbaa !15\l  %24 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %34 = mul i32 %32, %33\l  %35 = add i32 %34, %7\l  %36 = mul i32 %35, %20\l  %37 = add i32 %36, %6\l  %38 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %39 = bitcast i8 addrspace(4)* %38 to i16 addrspace(4)*\l  %40 = load i16, i16 addrspace(4)* %39, align 4, !range !13, !invariant.load\l... !14\l  %41 = zext i16 %40 to i32\l  %42 = mul i32 %37, %41\l  %43 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %44 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %45 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %46 = add i32 %42, %44\l  %47 = mul i32 %46, %27\l  %48 = add i32 %47, %43\l  %49 = mul i32 %48, %15\l  %50 = add i32 %49, %45\l  %51 = icmp slt i32 %50, %3\l  br i1 %51, label %52, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5030d90:s0 -> Node0x5035ce0;
	Node0x5030d90:s1 -> Node0x5035d70;
	Node0x5035ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = add nsw i32 %50, %2\l  %54 = icmp slt i32 %53, %3\l  br i1 %54, label %55, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5035ce0:s0 -> Node0x5035fd0;
	Node0x5035ce0:s1 -> Node0x5036020;
	Node0x5035fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = sext i32 %53 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %0, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %59 = sext i32 %50 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %0, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %62 = fsub contract double %58, %61\l  br label %67\l}"];
	Node0x5035fd0 -> Node0x5036cc0;
	Node0x5036020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%63:\l63:                                               \l  %64 = sext i32 %50 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %0, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  br label %67\l}"];
	Node0x5036020 -> Node0x5036cc0;
	Node0x5036cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%67:\l67:                                               \l  %68 = phi double [ %62, %55 ], [ %66, %63 ]\l  %69 = phi i64 [ %59, %55 ], [ %64, %63 ]\l  %70 = fdiv contract double %68, %4\l  %71 = getelementptr inbounds double, double addrspace(1)* %1, i64 %69\l  store double %70, double addrspace(1)* %71, align 8, !tbaa !17\l  br label %72\l}"];
	Node0x5036cc0 -> Node0x5035d70;
	Node0x5035d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
