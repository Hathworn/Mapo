digraph "CFG for '_Z10ktorus_wfcPdS_S_S_dS_P15HIP_vector_typeIdLj2EE' function" {
	label="CFG for '_Z10ktorus_wfcPdS_S_S_dS_P15HIP_vector_typeIdLj2EE' function";

	Node0x5625de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 16\l  %24 = bitcast i8 addrspace(4)* %23 to i32 addrspace(4)*\l  %25 = load i32, i32 addrspace(4)* %24, align 8, !tbaa !15\l  %26 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !13, !invariant.load\l... !14\l  %29 = zext i16 %28 to i32\l  %30 = udiv i32 %25, %29\l  %31 = mul i32 %30, %29\l  %32 = icmp ugt i32 %25, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %36 = mul i32 %34, %35\l  %37 = add i32 %36, %9\l  %38 = mul i32 %37, %22\l  %39 = add i32 %38, %8\l  %40 = mul i32 %8, %17\l  %41 = mul i32 %9, %29\l  %42 = getelementptr i8, i8 addrspace(4)* %10, i64 8\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 4, !range !13, !invariant.load\l... !14\l  %45 = zext i16 %44 to i32\l  %46 = mul i32 %35, %45\l  %47 = mul i32 %39, %45\l  %48 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %49 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %50 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %51 = add i32 %47, %49\l  %52 = mul i32 %51, %29\l  %53 = add i32 %52, %48\l  %54 = mul i32 %53, %17\l  %55 = add i32 %54, %50\l  %56 = add i32 %40, %50\l  %57 = add i32 %41, %48\l  %58 = add i32 %46, %49\l  %59 = sext i32 %56 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %0, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %62 = getelementptr inbounds double, double addrspace(1)* %3, i64 6\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %64 = fsub contract double %61, %63\l  %65 = fmul contract double %64, %64\l  %66 = sext i32 %57 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %1, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %69 = getelementptr inbounds double, double addrspace(1)* %3, i64 7\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %71 = fsub contract double %68, %70\l  %72 = fmul contract double %71, %71\l  %73 = fadd contract double %65, %72\l  %74 = fcmp olt double %73, 0x1000000000000000\l  %75 = select i1 %74, double 0x4FF0000000000000, double 1.000000e+00\l  %76 = fmul double %73, %75\l  %77 = tail call double @llvm.amdgcn.rsq.f64(double %76)\l  %78 = fmul double %76, %77\l  %79 = fmul double %77, 5.000000e-01\l  %80 = fneg double %79\l  %81 = tail call double @llvm.fma.f64(double %80, double %78, double\l... 5.000000e-01)\l  %82 = tail call double @llvm.fma.f64(double %79, double %81, double %79)\l  %83 = tail call double @llvm.fma.f64(double %78, double %81, double %78)\l  %84 = fneg double %83\l  %85 = tail call double @llvm.fma.f64(double %84, double %83, double %76)\l  %86 = tail call double @llvm.fma.f64(double %85, double %82, double %83)\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %87, double %86, double %76)\l  %89 = tail call double @llvm.fma.f64(double %88, double %82, double %86)\l  %90 = select i1 %74, double 0x37F0000000000000, double 1.000000e+00\l  %91 = fmul double %90, %89\l  %92 = fcmp oeq double %76, 0.000000e+00\l  %93 = fcmp oeq double %76, 0x7FF0000000000000\l  %94 = or i1 %92, %93\l  %95 = select i1 %94, double %76, double %91\l  %96 = load double, double addrspace(1)* %3, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %97 = fmul contract double %96, 5.000000e-01\l  %98 = fsub contract double %95, %97\l  %99 = getelementptr inbounds double, double addrspace(1)* %3, i64 14\l  %100 = bitcast double addrspace(1)* %99 to \<2 x double\> addrspace(1)*\l  %101 = load \<2 x double\>, \<2 x double\> addrspace(1)* %100, align 8, !tbaa !17\l  %102 = extractelement \<2 x double\> %101, i64 0\l  %103 = extractelement \<2 x double\> %101, i64 1\l  %104 = fmul contract double %102, %103\l  %105 = fmul contract double %104, 5.000000e-01\l  %106 = fdiv contract double %98, %105\l  %107 = tail call double @llvm.fabs.f64(double %106)\l  %108 = tail call double @llvm.amdgcn.frexp.mant.f64(double %107)\l  %109 = fcmp olt double %108, 0x3FE5555555555555\l  %110 = zext i1 %109 to i32\l  %111 = tail call double @llvm.amdgcn.ldexp.f64(double %108, i32 %110)\l  %112 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %107)\l  %113 = sub nsw i32 %112, %110\l  %114 = fadd double %111, -1.000000e+00\l  %115 = fadd double %111, 1.000000e+00\l  %116 = fadd double %115, -1.000000e+00\l  %117 = fsub double %111, %116\l  %118 = tail call double @llvm.amdgcn.rcp.f64(double %115)\l  %119 = fneg double %115\l  %120 = tail call double @llvm.fma.f64(double %119, double %118, double\l... 1.000000e+00)\l  %121 = tail call double @llvm.fma.f64(double %120, double %118, double %118)\l  %122 = tail call double @llvm.fma.f64(double %119, double %121, double\l... 1.000000e+00)\l  %123 = tail call double @llvm.fma.f64(double %122, double %121, double %121)\l  %124 = fmul double %114, %123\l  %125 = fmul double %115, %124\l  %126 = fneg double %125\l  %127 = tail call double @llvm.fma.f64(double %124, double %115, double %126)\l  %128 = tail call double @llvm.fma.f64(double %124, double %117, double %127)\l  %129 = fadd double %125, %128\l  %130 = fsub double %129, %125\l  %131 = fsub double %128, %130\l  %132 = fsub double %114, %129\l  %133 = fsub double %114, %132\l  %134 = fsub double %133, %129\l  %135 = fsub double %134, %131\l  %136 = fadd double %132, %135\l  %137 = fmul double %123, %136\l  %138 = fadd double %124, %137\l  %139 = fsub double %138, %124\l  %140 = fsub double %137, %139\l  %141 = fmul double %138, %138\l  %142 = fneg double %141\l  %143 = tail call double @llvm.fma.f64(double %138, double %138, double %142)\l  %144 = fmul double %140, 2.000000e+00\l  %145 = tail call double @llvm.fma.f64(double %138, double %144, double %143)\l  %146 = fadd double %141, %145\l  %147 = fsub double %146, %141\l  %148 = fsub double %145, %147\l  %149 = tail call double @llvm.fma.f64(double %146, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %150 = tail call double @llvm.fma.f64(double %146, double %149, double\l... 0x3FBE25E43ABE935A)\l  %151 = tail call double @llvm.fma.f64(double %146, double %150, double\l... 0x3FC110EF47E6C9C2)\l  %152 = tail call double @llvm.fma.f64(double %146, double %151, double\l... 0x3FC3B13BCFA74449)\l  %153 = tail call double @llvm.fma.f64(double %146, double %152, double\l... 0x3FC745D171BF3C30)\l  %154 = tail call double @llvm.fma.f64(double %146, double %153, double\l... 0x3FCC71C71C7792CE)\l  %155 = tail call double @llvm.fma.f64(double %146, double %154, double\l... 0x3FD24924924920DA)\l  %156 = tail call double @llvm.fma.f64(double %146, double %155, double\l... 0x3FD999999999999C)\l  %157 = sitofp i32 %113 to double\l  %158 = fmul double %157, 0x3FE62E42FEFA39EF\l  %159 = fneg double %158\l  %160 = tail call double @llvm.fma.f64(double %157, double\l... 0x3FE62E42FEFA39EF, double %159)\l  %161 = tail call double @llvm.fma.f64(double %157, double\l... 0x3C7ABC9E3B39803F, double %160)\l  %162 = fadd double %158, %161\l  %163 = fsub double %162, %158\l  %164 = fsub double %161, %163\l  %165 = tail call double @llvm.amdgcn.ldexp.f64(double %138, i32 1)\l  %166 = tail call double @llvm.amdgcn.ldexp.f64(double %140, i32 1)\l  %167 = fmul double %138, %146\l  %168 = fneg double %167\l  %169 = tail call double @llvm.fma.f64(double %146, double %138, double %168)\l  %170 = tail call double @llvm.fma.f64(double %146, double %140, double %169)\l  %171 = tail call double @llvm.fma.f64(double %148, double %138, double %170)\l  %172 = fadd double %167, %171\l  %173 = fsub double %172, %167\l  %174 = fsub double %171, %173\l  %175 = fmul double %146, %156\l  %176 = fneg double %175\l  %177 = tail call double @llvm.fma.f64(double %146, double %156, double %176)\l  %178 = tail call double @llvm.fma.f64(double %148, double %156, double %177)\l  %179 = fadd double %175, %178\l  %180 = fsub double %179, %175\l  %181 = fsub double %178, %180\l  %182 = fadd double %179, 0x3FE5555555555555\l  %183 = fadd double %182, 0xBFE5555555555555\l  %184 = fsub double %179, %183\l  %185 = fadd double %181, 0x3C8543B0D5DF274D\l  %186 = fadd double %185, %184\l  %187 = fadd double %182, %186\l  %188 = fsub double %187, %182\l  %189 = fsub double %186, %188\l  %190 = fmul double %172, %187\l  %191 = fneg double %190\l  %192 = tail call double @llvm.fma.f64(double %172, double %187, double %191)\l  %193 = tail call double @llvm.fma.f64(double %172, double %189, double %192)\l  %194 = tail call double @llvm.fma.f64(double %174, double %187, double %193)\l  %195 = fadd double %190, %194\l  %196 = fsub double %195, %190\l  %197 = fsub double %194, %196\l  %198 = fadd double %165, %195\l  %199 = fsub double %198, %165\l  %200 = fsub double %195, %199\l  %201 = fadd double %166, %197\l  %202 = fadd double %201, %200\l  %203 = fadd double %198, %202\l  %204 = fsub double %203, %198\l  %205 = fsub double %202, %204\l  %206 = fadd double %162, %203\l  %207 = fsub double %206, %162\l  %208 = fsub double %206, %207\l  %209 = fsub double %162, %208\l  %210 = fsub double %203, %207\l  %211 = fadd double %210, %209\l  %212 = fadd double %164, %205\l  %213 = fsub double %212, %164\l  %214 = fsub double %212, %213\l  %215 = fsub double %164, %214\l  %216 = fsub double %205, %213\l  %217 = fadd double %216, %215\l  %218 = fadd double %212, %211\l  %219 = fadd double %206, %218\l  %220 = fsub double %219, %206\l  %221 = fsub double %218, %220\l  %222 = fadd double %217, %221\l  %223 = fadd double %219, %222\l  %224 = fsub double %223, %219\l  %225 = fsub double %222, %224\l  %226 = fmul double %223, 2.000000e+00\l  %227 = fneg double %226\l  %228 = tail call double @llvm.fma.f64(double %223, double 2.000000e+00,\l... double %227)\l  %229 = tail call double @llvm.fma.f64(double %225, double 2.000000e+00,\l... double %228)\l  %230 = fadd double %226, %229\l  %231 = fsub double %230, %226\l  %232 = fsub double %229, %231\l  %233 = tail call double @llvm.fabs.f64(double %226) #3\l  %234 = fcmp oeq double %233, 0x7FF0000000000000\l  %235 = select i1 %234, double %226, double %230\l  %236 = tail call double @llvm.fabs.f64(double %235) #3\l  %237 = fcmp oeq double %236, 0x7FF0000000000000\l  %238 = select i1 %237, double 0.000000e+00, double %232\l  %239 = fmul double %235, 0x3FF71547652B82FE\l  %240 = tail call double @llvm.rint.f64(double %239)\l  %241 = fneg double %240\l  %242 = tail call double @llvm.fma.f64(double %241, double\l... 0x3FE62E42FEFA39EF, double %235)\l  %243 = tail call double @llvm.fma.f64(double %241, double\l... 0x3C7ABC9E3B39803F, double %242)\l  %244 = tail call double @llvm.fma.f64(double %243, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %245 = tail call double @llvm.fma.f64(double %243, double %244, double\l... 0x3EC71DEE623FDE64)\l  %246 = tail call double @llvm.fma.f64(double %243, double %245, double\l... 0x3EFA01997C89E6B0)\l  %247 = tail call double @llvm.fma.f64(double %243, double %246, double\l... 0x3F2A01A014761F6E)\l  %248 = tail call double @llvm.fma.f64(double %243, double %247, double\l... 0x3F56C16C1852B7B0)\l  %249 = tail call double @llvm.fma.f64(double %243, double %248, double\l... 0x3F81111111122322)\l  %250 = tail call double @llvm.fma.f64(double %243, double %249, double\l... 0x3FA55555555502A1)\l  %251 = tail call double @llvm.fma.f64(double %243, double %250, double\l... 0x3FC5555555555511)\l  %252 = tail call double @llvm.fma.f64(double %243, double %251, double\l... 0x3FE000000000000B)\l  %253 = tail call double @llvm.fma.f64(double %243, double %252, double\l... 1.000000e+00)\l  %254 = tail call double @llvm.fma.f64(double %243, double %253, double\l... 1.000000e+00)\l  %255 = fptosi double %240 to i32\l  %256 = tail call double @llvm.amdgcn.ldexp.f64(double %254, i32 %255)\l  %257 = fcmp ogt double %235, 1.024000e+03\l  %258 = select i1 %257, double 0x7FF0000000000000, double %256\l  %259 = fcmp olt double %235, -1.075000e+03\l  %260 = select i1 %259, double 0.000000e+00, double %258\l  %261 = tail call double @llvm.fma.f64(double %260, double %238, double %260)\l  %262 = tail call double @llvm.fabs.f64(double %260) #3\l  %263 = fcmp oeq double %262, 0x7FF0000000000000\l  %264 = select i1 %263, double %260, double %261\l  %265 = tail call double @llvm.fabs.f64(double %264)\l  %266 = fcmp oeq double %107, 0x7FF0000000000000\l  %267 = fcmp oeq double %106, 0.000000e+00\l  %268 = select i1 %266, double 0x7FF0000000000000, double %265\l  %269 = select i1 %267, double 0.000000e+00, double %268\l  %270 = fcmp uno double %106, 0.000000e+00\l  %271 = select i1 %270, double 0x7FF8000000000000, double %269\l  %272 = sext i32 %58 to i64\l  %273 = getelementptr inbounds double, double addrspace(1)* %2, i64 %272\l  %274 = load double, double addrspace(1)* %273, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %275 = getelementptr inbounds double, double addrspace(1)* %3, i64 17\l  %276 = load double, double addrspace(1)* %275, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %277 = fmul contract double %102, %276\l  %278 = fmul contract double %277, 5.000000e-01\l  %279 = fdiv contract double %274, %278\l  %280 = tail call double @llvm.fabs.f64(double %279)\l  %281 = tail call double @llvm.amdgcn.frexp.mant.f64(double %280)\l  %282 = fcmp olt double %281, 0x3FE5555555555555\l  %283 = zext i1 %282 to i32\l  %284 = tail call double @llvm.amdgcn.ldexp.f64(double %281, i32 %283)\l  %285 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %280)\l  %286 = sub nsw i32 %285, %283\l  %287 = fadd double %284, -1.000000e+00\l  %288 = fadd double %284, 1.000000e+00\l  %289 = fadd double %288, -1.000000e+00\l  %290 = fsub double %284, %289\l  %291 = tail call double @llvm.amdgcn.rcp.f64(double %288)\l  %292 = fneg double %288\l  %293 = tail call double @llvm.fma.f64(double %292, double %291, double\l... 1.000000e+00)\l  %294 = tail call double @llvm.fma.f64(double %293, double %291, double %291)\l  %295 = tail call double @llvm.fma.f64(double %292, double %294, double\l... 1.000000e+00)\l  %296 = tail call double @llvm.fma.f64(double %295, double %294, double %294)\l  %297 = fmul double %287, %296\l  %298 = fmul double %288, %297\l  %299 = fneg double %298\l  %300 = tail call double @llvm.fma.f64(double %297, double %288, double %299)\l  %301 = tail call double @llvm.fma.f64(double %297, double %290, double %300)\l  %302 = fadd double %298, %301\l  %303 = fsub double %302, %298\l  %304 = fsub double %301, %303\l  %305 = fsub double %287, %302\l  %306 = fsub double %287, %305\l  %307 = fsub double %306, %302\l  %308 = fsub double %307, %304\l  %309 = fadd double %305, %308\l  %310 = fmul double %296, %309\l  %311 = fadd double %297, %310\l  %312 = fsub double %311, %297\l  %313 = fsub double %310, %312\l  %314 = fmul double %311, %311\l  %315 = fneg double %314\l  %316 = tail call double @llvm.fma.f64(double %311, double %311, double %315)\l  %317 = fmul double %313, 2.000000e+00\l  %318 = tail call double @llvm.fma.f64(double %311, double %317, double %316)\l  %319 = fadd double %314, %318\l  %320 = fsub double %319, %314\l  %321 = fsub double %318, %320\l  %322 = tail call double @llvm.fma.f64(double %319, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %323 = tail call double @llvm.fma.f64(double %319, double %322, double\l... 0x3FBE25E43ABE935A)\l  %324 = tail call double @llvm.fma.f64(double %319, double %323, double\l... 0x3FC110EF47E6C9C2)\l  %325 = tail call double @llvm.fma.f64(double %319, double %324, double\l... 0x3FC3B13BCFA74449)\l  %326 = tail call double @llvm.fma.f64(double %319, double %325, double\l... 0x3FC745D171BF3C30)\l  %327 = tail call double @llvm.fma.f64(double %319, double %326, double\l... 0x3FCC71C71C7792CE)\l  %328 = tail call double @llvm.fma.f64(double %319, double %327, double\l... 0x3FD24924924920DA)\l  %329 = tail call double @llvm.fma.f64(double %319, double %328, double\l... 0x3FD999999999999C)\l  %330 = sitofp i32 %286 to double\l  %331 = fmul double %330, 0x3FE62E42FEFA39EF\l  %332 = fneg double %331\l  %333 = tail call double @llvm.fma.f64(double %330, double\l... 0x3FE62E42FEFA39EF, double %332)\l  %334 = tail call double @llvm.fma.f64(double %330, double\l... 0x3C7ABC9E3B39803F, double %333)\l  %335 = fadd double %331, %334\l  %336 = fsub double %335, %331\l  %337 = fsub double %334, %336\l  %338 = tail call double @llvm.amdgcn.ldexp.f64(double %311, i32 1)\l  %339 = tail call double @llvm.amdgcn.ldexp.f64(double %313, i32 1)\l  %340 = fmul double %311, %319\l  %341 = fneg double %340\l  %342 = tail call double @llvm.fma.f64(double %319, double %311, double %341)\l  %343 = tail call double @llvm.fma.f64(double %319, double %313, double %342)\l  %344 = tail call double @llvm.fma.f64(double %321, double %311, double %343)\l  %345 = fadd double %340, %344\l  %346 = fsub double %345, %340\l  %347 = fsub double %344, %346\l  %348 = fmul double %319, %329\l  %349 = fneg double %348\l  %350 = tail call double @llvm.fma.f64(double %319, double %329, double %349)\l  %351 = tail call double @llvm.fma.f64(double %321, double %329, double %350)\l  %352 = fadd double %348, %351\l  %353 = fsub double %352, %348\l  %354 = fsub double %351, %353\l  %355 = fadd double %352, 0x3FE5555555555555\l  %356 = fadd double %355, 0xBFE5555555555555\l  %357 = fsub double %352, %356\l  %358 = fadd double %354, 0x3C8543B0D5DF274D\l  %359 = fadd double %358, %357\l  %360 = fadd double %355, %359\l  %361 = fsub double %360, %355\l  %362 = fsub double %359, %361\l  %363 = fmul double %345, %360\l  %364 = fneg double %363\l  %365 = tail call double @llvm.fma.f64(double %345, double %360, double %364)\l  %366 = tail call double @llvm.fma.f64(double %345, double %362, double %365)\l  %367 = tail call double @llvm.fma.f64(double %347, double %360, double %366)\l  %368 = fadd double %363, %367\l  %369 = fsub double %368, %363\l  %370 = fsub double %367, %369\l  %371 = fadd double %338, %368\l  %372 = fsub double %371, %338\l  %373 = fsub double %368, %372\l  %374 = fadd double %339, %370\l  %375 = fadd double %374, %373\l  %376 = fadd double %371, %375\l  %377 = fsub double %376, %371\l  %378 = fsub double %375, %377\l  %379 = fadd double %335, %376\l  %380 = fsub double %379, %335\l  %381 = fsub double %379, %380\l  %382 = fsub double %335, %381\l  %383 = fsub double %376, %380\l  %384 = fadd double %383, %382\l  %385 = fadd double %337, %378\l  %386 = fsub double %385, %337\l  %387 = fsub double %385, %386\l  %388 = fsub double %337, %387\l  %389 = fsub double %378, %386\l  %390 = fadd double %389, %388\l  %391 = fadd double %385, %384\l  %392 = fadd double %379, %391\l  %393 = fsub double %392, %379\l  %394 = fsub double %391, %393\l  %395 = fadd double %390, %394\l  %396 = fadd double %392, %395\l  %397 = fsub double %396, %392\l  %398 = fsub double %395, %397\l  %399 = fmul double %396, 2.000000e+00\l  %400 = fneg double %399\l  %401 = tail call double @llvm.fma.f64(double %396, double 2.000000e+00,\l... double %400)\l  %402 = tail call double @llvm.fma.f64(double %398, double 2.000000e+00,\l... double %401)\l  %403 = fadd double %399, %402\l  %404 = fsub double %403, %399\l  %405 = fsub double %402, %404\l  %406 = tail call double @llvm.fabs.f64(double %399) #3\l  %407 = fcmp oeq double %406, 0x7FF0000000000000\l  %408 = select i1 %407, double %399, double %403\l  %409 = tail call double @llvm.fabs.f64(double %408) #3\l  %410 = fcmp oeq double %409, 0x7FF0000000000000\l  %411 = select i1 %410, double 0.000000e+00, double %405\l  %412 = fmul double %408, 0x3FF71547652B82FE\l  %413 = tail call double @llvm.rint.f64(double %412)\l  %414 = fneg double %413\l  %415 = tail call double @llvm.fma.f64(double %414, double\l... 0x3FE62E42FEFA39EF, double %408)\l  %416 = tail call double @llvm.fma.f64(double %414, double\l... 0x3C7ABC9E3B39803F, double %415)\l  %417 = tail call double @llvm.fma.f64(double %416, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %418 = tail call double @llvm.fma.f64(double %416, double %417, double\l... 0x3EC71DEE623FDE64)\l  %419 = tail call double @llvm.fma.f64(double %416, double %418, double\l... 0x3EFA01997C89E6B0)\l  %420 = tail call double @llvm.fma.f64(double %416, double %419, double\l... 0x3F2A01A014761F6E)\l  %421 = tail call double @llvm.fma.f64(double %416, double %420, double\l... 0x3F56C16C1852B7B0)\l  %422 = tail call double @llvm.fma.f64(double %416, double %421, double\l... 0x3F81111111122322)\l  %423 = tail call double @llvm.fma.f64(double %416, double %422, double\l... 0x3FA55555555502A1)\l  %424 = tail call double @llvm.fma.f64(double %416, double %423, double\l... 0x3FC5555555555511)\l  %425 = tail call double @llvm.fma.f64(double %416, double %424, double\l... 0x3FE000000000000B)\l  %426 = tail call double @llvm.fma.f64(double %416, double %425, double\l... 1.000000e+00)\l  %427 = tail call double @llvm.fma.f64(double %416, double %426, double\l... 1.000000e+00)\l  %428 = fptosi double %413 to i32\l  %429 = tail call double @llvm.amdgcn.ldexp.f64(double %427, i32 %428)\l  %430 = fcmp ogt double %408, 1.024000e+03\l  %431 = select i1 %430, double 0x7FF0000000000000, double %429\l  %432 = fcmp olt double %408, -1.075000e+03\l  %433 = select i1 %432, double 0.000000e+00, double %431\l  %434 = tail call double @llvm.fma.f64(double %433, double %411, double %433)\l  %435 = tail call double @llvm.fabs.f64(double %433) #3\l  %436 = fcmp oeq double %435, 0x7FF0000000000000\l  %437 = select i1 %436, double %433, double %434\l  %438 = tail call double @llvm.fabs.f64(double %437)\l  %439 = fcmp oeq double %280, 0x7FF0000000000000\l  %440 = fcmp oeq double %279, 0.000000e+00\l  %441 = select i1 %439, double 0x7FF0000000000000, double %438\l  %442 = select i1 %440, double 0.000000e+00, double %441\l  %443 = fcmp uno double %279, 0.000000e+00\l  %444 = select i1 %443, double 0x7FF8000000000000, double %442\l  %445 = fadd contract double %444, %271\l  %446 = fneg contract double %445\l  %447 = fmul double %445, 0xBFF71547652B82FE\l  %448 = tail call double @llvm.rint.f64(double %447)\l  %449 = fneg double %448\l  %450 = tail call double @llvm.fma.f64(double %449, double\l... 0x3FE62E42FEFA39EF, double %446)\l  %451 = tail call double @llvm.fma.f64(double %449, double\l... 0x3C7ABC9E3B39803F, double %450)\l  %452 = tail call double @llvm.fma.f64(double %451, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %453 = tail call double @llvm.fma.f64(double %451, double %452, double\l... 0x3EC71DEE623FDE64)\l  %454 = tail call double @llvm.fma.f64(double %451, double %453, double\l... 0x3EFA01997C89E6B0)\l  %455 = tail call double @llvm.fma.f64(double %451, double %454, double\l... 0x3F2A01A014761F6E)\l  %456 = tail call double @llvm.fma.f64(double %451, double %455, double\l... 0x3F56C16C1852B7B0)\l  %457 = tail call double @llvm.fma.f64(double %451, double %456, double\l... 0x3F81111111122322)\l  %458 = tail call double @llvm.fma.f64(double %451, double %457, double\l... 0x3FA55555555502A1)\l  %459 = tail call double @llvm.fma.f64(double %451, double %458, double\l... 0x3FC5555555555511)\l  %460 = tail call double @llvm.fma.f64(double %451, double %459, double\l... 0x3FE000000000000B)\l  %461 = tail call double @llvm.fma.f64(double %451, double %460, double\l... 1.000000e+00)\l  %462 = tail call double @llvm.fma.f64(double %451, double %461, double\l... 1.000000e+00)\l  %463 = fptosi double %448 to i32\l  %464 = tail call double @llvm.amdgcn.ldexp.f64(double %462, i32 %463)\l  %465 = fcmp ogt double %445, 1.075000e+03\l  %466 = select i1 %465, double 0.000000e+00, double %464\l  %467 = sext i32 %55 to i64\l  %468 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %467, i32 0, i32 0, i32 0, i64 0\l  store double %466, double addrspace(1)* %468, align 16, !tbaa !21\l  %469 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %467, i32 0, i32 0, i32 0, i64 1\l  store double 0.000000e+00, double addrspace(1)* %469, align 8, !tbaa !21\l  ret void\l}"];
}
