digraph "CFG for '_Z19make_complex_kernelPdPiP15HIP_vector_typeIdLj2EE' function" {
	label="CFG for '_Z19make_complex_kernelPdPiP15HIP_vector_typeIdLj2EE' function";

	Node0x5e90d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = load double, double addrspace(1)* %0, align 8, !tbaa !4\l  %5 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !8\l  switch i32 %5, label %230 [\l    i32 0, label %6\l    i32 1, label %8\l    i32 2, label %33\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x5e90d10:s0 -> Node0x5e91a90;
	Node0x5e90d10:s1 -> Node0x5e92130;
	Node0x5e90d10:s2 -> Node0x5e921c0;
	Node0x5e90d10:s3 -> Node0x5e92280;
	Node0x5e92130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%6:\l6:                                                \l  %7 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>, double\l... %4, i64 0\l  br label %230\l}"];
	Node0x5e92130 -> Node0x5e91a90;
	Node0x5e921c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%8:\l8:                                                \l  %9 = fneg contract double %4\l  %10 = fmul double %4, 0xBFF71547652B82FE\l  %11 = tail call double @llvm.rint.f64(double %10)\l  %12 = fneg double %11\l  %13 = tail call double @llvm.fma.f64(double %12, double 0x3FE62E42FEFA39EF,\l... double %9)\l  %14 = tail call double @llvm.fma.f64(double %12, double 0x3C7ABC9E3B39803F,\l... double %13)\l  %15 = tail call double @llvm.fma.f64(double %14, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %16 = tail call double @llvm.fma.f64(double %14, double %15, double\l... 0x3EC71DEE623FDE64)\l  %17 = tail call double @llvm.fma.f64(double %14, double %16, double\l... 0x3EFA01997C89E6B0)\l  %18 = tail call double @llvm.fma.f64(double %14, double %17, double\l... 0x3F2A01A014761F6E)\l  %19 = tail call double @llvm.fma.f64(double %14, double %18, double\l... 0x3F56C16C1852B7B0)\l  %20 = tail call double @llvm.fma.f64(double %14, double %19, double\l... 0x3F81111111122322)\l  %21 = tail call double @llvm.fma.f64(double %14, double %20, double\l... 0x3FA55555555502A1)\l  %22 = tail call double @llvm.fma.f64(double %14, double %21, double\l... 0x3FC5555555555511)\l  %23 = tail call double @llvm.fma.f64(double %14, double %22, double\l... 0x3FE000000000000B)\l  %24 = tail call double @llvm.fma.f64(double %14, double %23, double\l... 1.000000e+00)\l  %25 = tail call double @llvm.fma.f64(double %14, double %24, double\l... 1.000000e+00)\l  %26 = fptosi double %11 to i32\l  %27 = tail call double @llvm.amdgcn.ldexp.f64(double %25, i32 %26)\l  %28 = fcmp olt double %4, -1.024000e+03\l  %29 = select i1 %28, double 0x7FF0000000000000, double %27\l  %30 = fcmp ogt double %4, 1.075000e+03\l  %31 = select i1 %30, double 0.000000e+00, double %29\l  %32 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>,\l... double %31, i64 0\l  br label %230\l}"];
	Node0x5e921c0 -> Node0x5e91a90;
	Node0x5e92280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = fneg contract double %4\l  %35 = tail call double @llvm.fabs.f64(double %34)\l  %36 = fcmp olt double %35, 0x41D0000000000000\l  br i1 %36, label %37, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5e92280:s0 -> Node0x5e95a40;
	Node0x5e92280:s1 -> Node0x5e95ad0;
	Node0x5e95a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%37:\l37:                                               \l  %38 = fmul double %35, 0x3FE45F306DC9C883\l  %39 = tail call double @llvm.rint.f64(double %38)\l  %40 = tail call double @llvm.fma.f64(double %39, double 0xBFF921FB54442D18,\l... double %35)\l  %41 = tail call double @llvm.fma.f64(double %39, double 0xBC91A62633145C00,\l... double %40)\l  %42 = fmul double %39, 0x3C91A62633145C00\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %39, double 0x3C91A62633145C00,\l... double %43)\l  %45 = fsub double %40, %42\l  %46 = fsub double %40, %45\l  %47 = fsub double %46, %42\l  %48 = fsub double %45, %41\l  %49 = fadd double %48, %47\l  %50 = fsub double %49, %44\l  %51 = tail call double @llvm.fma.f64(double %39, double 0xB97B839A252049C0,\l... double %50)\l  %52 = fadd double %41, %51\l  %53 = fsub double %52, %41\l  %54 = fsub double %51, %53\l  %55 = fptosi double %39 to i32\l  %56 = fmul double %52, %52\l  %57 = fmul double %56, 5.000000e-01\l  %58 = fsub double 1.000000e+00, %57\l  %59 = fsub double 1.000000e+00, %58\l  %60 = fsub double %59, %57\l  %61 = fmul double %56, %56\l  %62 = tail call double @llvm.fma.f64(double %56, double 0xBDA907DB46CC5E42,\l... double 0x3E21EEB69037AB78)\l  %63 = tail call double @llvm.fma.f64(double %56, double %62, double\l... 0xBE927E4FA17F65F6)\l  %64 = tail call double @llvm.fma.f64(double %56, double %63, double\l... 0x3EFA01A019F4EC90)\l  %65 = tail call double @llvm.fma.f64(double %56, double %64, double\l... 0xBF56C16C16C16967)\l  %66 = tail call double @llvm.fma.f64(double %56, double %65, double\l... 0x3FA5555555555555)\l  %67 = fneg double %54\l  %68 = tail call double @llvm.fma.f64(double %52, double %67, double %60)\l  %69 = tail call double @llvm.fma.f64(double %61, double %66, double %68)\l  %70 = fadd double %58, %69\l  %71 = tail call double @llvm.fma.f64(double %56, double 0x3DE5E0B2F9A43BB8,\l... double 0xBE5AE600B42FDFA7)\l  %72 = tail call double @llvm.fma.f64(double %56, double %71, double\l... 0x3EC71DE3796CDE01)\l  %73 = tail call double @llvm.fma.f64(double %56, double %72, double\l... 0xBF2A01A019E83E5C)\l  %74 = tail call double @llvm.fma.f64(double %56, double %73, double\l... 0x3F81111111110BB3)\l  %75 = fneg double %56\l  %76 = fmul double %52, %75\l  %77 = fmul double %54, 5.000000e-01\l  %78 = tail call double @llvm.fma.f64(double %76, double %74, double %77)\l  %79 = tail call double @llvm.fma.f64(double %56, double %78, double %67)\l  %80 = tail call double @llvm.fma.f64(double %76, double 0xBFC5555555555555,\l... double %79)\l  %81 = fsub double %52, %80\l  %82 = fneg double %81\l  %83 = and i32 %55, 1\l  %84 = icmp eq i32 %83, 0\l  %85 = select i1 %84, double %70, double %82\l  %86 = bitcast double %85 to \<2 x i32\>\l  %87 = shl i32 %55, 30\l  %88 = and i32 %87, -2147483648\l  %89 = extractelement \<2 x i32\> %86, i64 1\l  %90 = xor i32 %89, %88\l  %91 = insertelement \<2 x i32\> %86, i32 %90, i64 1\l  %92 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 504)\l  %93 = select i1 %92, \<2 x i32\> %91, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %208\l}"];
	Node0x5e95a40 -> Node0x5e990d0;
	Node0x5e95ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%94:\l94:                                               \l  %95 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 0)\l  %96 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 1)\l  %97 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 2)\l  %98 = fcmp oge double %35, 0x7B00000000000000\l  %99 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 -128)\l  %100 = select i1 %98, double %99, double %35\l  %101 = fmul double %97, %100\l  %102 = fneg double %101\l  %103 = tail call double @llvm.fma.f64(double %97, double %100, double %102)\l  %104 = fmul double %96, %100\l  %105 = fneg double %104\l  %106 = tail call double @llvm.fma.f64(double %96, double %100, double %105)\l  %107 = fmul double %95, %100\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %95, double %100, double %108)\l  %110 = fadd double %104, %109\l  %111 = fsub double %110, %104\l  %112 = fsub double %110, %111\l  %113 = fsub double %109, %111\l  %114 = fsub double %104, %112\l  %115 = fadd double %113, %114\l  %116 = fadd double %101, %106\l  %117 = fsub double %116, %101\l  %118 = fsub double %116, %117\l  %119 = fsub double %106, %117\l  %120 = fsub double %101, %118\l  %121 = fadd double %119, %120\l  %122 = fadd double %116, %115\l  %123 = fsub double %122, %116\l  %124 = fsub double %122, %123\l  %125 = fsub double %115, %123\l  %126 = fsub double %116, %124\l  %127 = fadd double %125, %126\l  %128 = fadd double %121, %127\l  %129 = fadd double %103, %128\l  %130 = fadd double %107, %110\l  %131 = fsub double %130, %107\l  %132 = fsub double %110, %131\l  %133 = fadd double %132, %122\l  %134 = fsub double %133, %132\l  %135 = fsub double %122, %134\l  %136 = fadd double %135, %129\l  %137 = tail call double @llvm.amdgcn.ldexp.f64(double %130, i32 -2)\l  %138 = tail call double @llvm.amdgcn.fract.f64(double %137)\l  %139 = tail call i1 @llvm.amdgcn.class.f64(double %137, i32 516)\l  %140 = select i1 %139, double 0.000000e+00, double %138\l  %141 = tail call double @llvm.amdgcn.ldexp.f64(double %140, i32 2)\l  %142 = fadd double %141, %133\l  %143 = fcmp olt double %142, 0.000000e+00\l  %144 = select i1 %143, double 4.000000e+00, double 0.000000e+00\l  %145 = fadd double %141, %144\l  %146 = fadd double %133, %145\l  %147 = fptosi double %146 to i32\l  %148 = sitofp i32 %147 to double\l  %149 = fsub double %145, %148\l  %150 = fadd double %133, %149\l  %151 = fsub double %150, %149\l  %152 = fsub double %133, %151\l  %153 = fadd double %136, %152\l  %154 = fcmp oge double %150, 5.000000e-01\l  %155 = zext i1 %154 to i32\l  %156 = add nsw i32 %155, %147\l  %157 = select i1 %154, double 1.000000e+00, double 0.000000e+00\l  %158 = fsub double %150, %157\l  %159 = fadd double %158, %153\l  %160 = fsub double %159, %158\l  %161 = fsub double %153, %160\l  %162 = fmul double %159, 0x3FF921FB54442D18\l  %163 = fneg double %162\l  %164 = tail call double @llvm.fma.f64(double %159, double\l... 0x3FF921FB54442D18, double %163)\l  %165 = tail call double @llvm.fma.f64(double %159, double\l... 0x3C91A62633145C07, double %164)\l  %166 = tail call double @llvm.fma.f64(double %161, double\l... 0x3FF921FB54442D18, double %165)\l  %167 = fadd double %162, %166\l  %168 = fsub double %167, %162\l  %169 = fsub double %166, %168\l  %170 = fmul double %167, %167\l  %171 = fmul double %170, 5.000000e-01\l  %172 = fsub double 1.000000e+00, %171\l  %173 = fsub double 1.000000e+00, %172\l  %174 = fsub double %173, %171\l  %175 = fmul double %170, %170\l  %176 = tail call double @llvm.fma.f64(double %170, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %177 = tail call double @llvm.fma.f64(double %170, double %176, double\l... 0xBE927E4FA17F65F6)\l  %178 = tail call double @llvm.fma.f64(double %170, double %177, double\l... 0x3EFA01A019F4EC90)\l  %179 = tail call double @llvm.fma.f64(double %170, double %178, double\l... 0xBF56C16C16C16967)\l  %180 = tail call double @llvm.fma.f64(double %170, double %179, double\l... 0x3FA5555555555555)\l  %181 = fneg double %169\l  %182 = tail call double @llvm.fma.f64(double %167, double %181, double %174)\l  %183 = tail call double @llvm.fma.f64(double %175, double %180, double %182)\l  %184 = fadd double %172, %183\l  %185 = tail call double @llvm.fma.f64(double %170, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %186 = tail call double @llvm.fma.f64(double %170, double %185, double\l... 0x3EC71DE3796CDE01)\l  %187 = tail call double @llvm.fma.f64(double %170, double %186, double\l... 0xBF2A01A019E83E5C)\l  %188 = tail call double @llvm.fma.f64(double %170, double %187, double\l... 0x3F81111111110BB3)\l  %189 = fneg double %170\l  %190 = fmul double %167, %189\l  %191 = fmul double %169, 5.000000e-01\l  %192 = tail call double @llvm.fma.f64(double %190, double %188, double %191)\l  %193 = tail call double @llvm.fma.f64(double %170, double %192, double %181)\l  %194 = tail call double @llvm.fma.f64(double %190, double\l... 0xBFC5555555555555, double %193)\l  %195 = fsub double %167, %194\l  %196 = fneg double %195\l  %197 = and i32 %156, 1\l  %198 = icmp eq i32 %197, 0\l  %199 = select i1 %198, double %184, double %196\l  %200 = bitcast double %199 to \<2 x i32\>\l  %201 = shl i32 %156, 30\l  %202 = and i32 %201, -2147483648\l  %203 = extractelement \<2 x i32\> %200, i64 1\l  %204 = xor i32 %203, %202\l  %205 = insertelement \<2 x i32\> %200, i32 %204, i64 1\l  %206 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 504)\l  %207 = select i1 %206, \<2 x i32\> %205, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %208\l}"];
	Node0x5e95ad0 -> Node0x5e990d0;
	Node0x5e990d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%208:\l208:                                              \l  %209 = phi \<2 x i32\> [ %93, %37 ], [ %207, %94 ]\l  %210 = phi i32 [ %87, %37 ], [ %201, %94 ]\l  %211 = phi i32 [ %83, %37 ], [ %197, %94 ]\l  %212 = phi double [ %81, %37 ], [ %195, %94 ]\l  %213 = phi double [ %70, %37 ], [ %184, %94 ]\l  %214 = phi i1 [ %92, %37 ], [ %206, %94 ]\l  %215 = bitcast \<2 x i32\> %209 to double\l  %216 = insertelement \<2 x double\> undef, double %215, i64 0\l  %217 = icmp eq i32 %211, 0\l  %218 = select i1 %217, double %212, double %213\l  %219 = bitcast double %218 to \<2 x i32\>\l  %220 = bitcast double %34 to \<2 x i32\>\l  %221 = extractelement \<2 x i32\> %220, i64 1\l  %222 = xor i32 %210, %221\l  %223 = and i32 %222, -2147483648\l  %224 = extractelement \<2 x i32\> %219, i64 1\l  %225 = xor i32 %224, %223\l  %226 = insertelement \<2 x i32\> %219, i32 %225, i64 1\l  %227 = select i1 %214, \<2 x i32\> %226, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %228 = bitcast \<2 x i32\> %227 to double\l  %229 = insertelement \<2 x double\> %216, double %228, i64 1\l  br label %230\l}"];
	Node0x5e990d0 -> Node0x5e91a90;
	Node0x5e91a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%230:\l230:                                              \l  %231 = phi \<2 x double\> [ undef, %3 ], [ %229, %208 ], [ %32, %8 ], [ %7, %6\l... ]\l  %232 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 0, i32 0, i32 0, i32 0\l  store \<2 x double\> %231, \<2 x double\> addrspace(1)* %232, align 16\l  %233 = getelementptr inbounds double, double addrspace(1)* %0, i64 1\l  %234 = load double, double addrspace(1)* %233, align 8, !tbaa !4\l  %235 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 1\l  %236 = load i32, i32 addrspace(1)* %235, align 4, !tbaa !8\l  switch i32 %236, label %461 [\l    i32 0, label %459\l    i32 1, label %434\l    i32 2, label %237\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x5e91a90:s0 -> Node0x5ea0d20;
	Node0x5e91a90:s1 -> Node0x5ea0d70;
	Node0x5e91a90:s2 -> Node0x5ea0dc0;
	Node0x5e91a90:s3 -> Node0x5ea0e10;
	Node0x5ea0e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%237:\l237:                                              \l  %238 = fneg contract double %234\l  %239 = tail call double @llvm.fabs.f64(double %238)\l  %240 = fcmp olt double %239, 0x41D0000000000000\l  br i1 %240, label %355, label %241\l|{<s0>T|<s1>F}}"];
	Node0x5ea0e10:s0 -> Node0x5ea11b0;
	Node0x5ea0e10:s1 -> Node0x5ea1200;
	Node0x5ea1200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%241:\l241:                                              \l  %242 = tail call double @llvm.amdgcn.trig.preop.f64(double %239, i32 0)\l  %243 = tail call double @llvm.amdgcn.trig.preop.f64(double %239, i32 1)\l  %244 = tail call double @llvm.amdgcn.trig.preop.f64(double %239, i32 2)\l  %245 = fcmp oge double %239, 0x7B00000000000000\l  %246 = tail call double @llvm.amdgcn.ldexp.f64(double %239, i32 -128)\l  %247 = select i1 %245, double %246, double %239\l  %248 = fmul double %244, %247\l  %249 = fneg double %248\l  %250 = tail call double @llvm.fma.f64(double %244, double %247, double %249)\l  %251 = fmul double %243, %247\l  %252 = fneg double %251\l  %253 = tail call double @llvm.fma.f64(double %243, double %247, double %252)\l  %254 = fmul double %242, %247\l  %255 = fneg double %254\l  %256 = tail call double @llvm.fma.f64(double %242, double %247, double %255)\l  %257 = fadd double %251, %256\l  %258 = fsub double %257, %251\l  %259 = fsub double %257, %258\l  %260 = fsub double %256, %258\l  %261 = fsub double %251, %259\l  %262 = fadd double %260, %261\l  %263 = fadd double %248, %253\l  %264 = fsub double %263, %248\l  %265 = fsub double %263, %264\l  %266 = fsub double %253, %264\l  %267 = fsub double %248, %265\l  %268 = fadd double %266, %267\l  %269 = fadd double %263, %262\l  %270 = fsub double %269, %263\l  %271 = fsub double %269, %270\l  %272 = fsub double %262, %270\l  %273 = fsub double %263, %271\l  %274 = fadd double %272, %273\l  %275 = fadd double %268, %274\l  %276 = fadd double %250, %275\l  %277 = fadd double %254, %257\l  %278 = fsub double %277, %254\l  %279 = fsub double %257, %278\l  %280 = fadd double %279, %269\l  %281 = fsub double %280, %279\l  %282 = fsub double %269, %281\l  %283 = fadd double %282, %276\l  %284 = tail call double @llvm.amdgcn.ldexp.f64(double %277, i32 -2)\l  %285 = tail call double @llvm.amdgcn.fract.f64(double %284)\l  %286 = tail call i1 @llvm.amdgcn.class.f64(double %284, i32 516)\l  %287 = select i1 %286, double 0.000000e+00, double %285\l  %288 = tail call double @llvm.amdgcn.ldexp.f64(double %287, i32 2)\l  %289 = fadd double %288, %280\l  %290 = fcmp olt double %289, 0.000000e+00\l  %291 = select i1 %290, double 4.000000e+00, double 0.000000e+00\l  %292 = fadd double %288, %291\l  %293 = fadd double %280, %292\l  %294 = fptosi double %293 to i32\l  %295 = sitofp i32 %294 to double\l  %296 = fsub double %292, %295\l  %297 = fadd double %280, %296\l  %298 = fsub double %297, %296\l  %299 = fsub double %280, %298\l  %300 = fadd double %283, %299\l  %301 = fcmp oge double %297, 5.000000e-01\l  %302 = zext i1 %301 to i32\l  %303 = add nsw i32 %302, %294\l  %304 = select i1 %301, double 1.000000e+00, double 0.000000e+00\l  %305 = fsub double %297, %304\l  %306 = fadd double %305, %300\l  %307 = fsub double %306, %305\l  %308 = fsub double %300, %307\l  %309 = fmul double %306, 0x3FF921FB54442D18\l  %310 = fneg double %309\l  %311 = tail call double @llvm.fma.f64(double %306, double\l... 0x3FF921FB54442D18, double %310)\l  %312 = tail call double @llvm.fma.f64(double %306, double\l... 0x3C91A62633145C07, double %311)\l  %313 = tail call double @llvm.fma.f64(double %308, double\l... 0x3FF921FB54442D18, double %312)\l  %314 = fadd double %309, %313\l  %315 = fsub double %314, %309\l  %316 = fsub double %313, %315\l  %317 = fmul double %314, %314\l  %318 = fmul double %317, 5.000000e-01\l  %319 = fsub double 1.000000e+00, %318\l  %320 = fsub double 1.000000e+00, %319\l  %321 = fsub double %320, %318\l  %322 = fmul double %317, %317\l  %323 = tail call double @llvm.fma.f64(double %317, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %324 = tail call double @llvm.fma.f64(double %317, double %323, double\l... 0xBE927E4FA17F65F6)\l  %325 = tail call double @llvm.fma.f64(double %317, double %324, double\l... 0x3EFA01A019F4EC90)\l  %326 = tail call double @llvm.fma.f64(double %317, double %325, double\l... 0xBF56C16C16C16967)\l  %327 = tail call double @llvm.fma.f64(double %317, double %326, double\l... 0x3FA5555555555555)\l  %328 = fneg double %316\l  %329 = tail call double @llvm.fma.f64(double %314, double %328, double %321)\l  %330 = tail call double @llvm.fma.f64(double %322, double %327, double %329)\l  %331 = fadd double %319, %330\l  %332 = tail call double @llvm.fma.f64(double %317, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %333 = tail call double @llvm.fma.f64(double %317, double %332, double\l... 0x3EC71DE3796CDE01)\l  %334 = tail call double @llvm.fma.f64(double %317, double %333, double\l... 0xBF2A01A019E83E5C)\l  %335 = tail call double @llvm.fma.f64(double %317, double %334, double\l... 0x3F81111111110BB3)\l  %336 = fneg double %317\l  %337 = fmul double %314, %336\l  %338 = fmul double %316, 5.000000e-01\l  %339 = tail call double @llvm.fma.f64(double %337, double %335, double %338)\l  %340 = tail call double @llvm.fma.f64(double %317, double %339, double %328)\l  %341 = tail call double @llvm.fma.f64(double %337, double\l... 0xBFC5555555555555, double %340)\l  %342 = fsub double %314, %341\l  %343 = fneg double %342\l  %344 = and i32 %303, 1\l  %345 = icmp eq i32 %344, 0\l  %346 = select i1 %345, double %331, double %343\l  %347 = bitcast double %346 to \<2 x i32\>\l  %348 = shl i32 %303, 30\l  %349 = and i32 %348, -2147483648\l  %350 = extractelement \<2 x i32\> %347, i64 1\l  %351 = xor i32 %350, %349\l  %352 = insertelement \<2 x i32\> %347, i32 %351, i64 1\l  %353 = tail call i1 @llvm.amdgcn.class.f64(double %239, i32 504)\l  %354 = select i1 %353, \<2 x i32\> %352, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %412\l}"];
	Node0x5ea1200 -> Node0x5ea6b60;
	Node0x5ea11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%355:\l355:                                              \l  %356 = fmul double %239, 0x3FE45F306DC9C883\l  %357 = tail call double @llvm.rint.f64(double %356)\l  %358 = tail call double @llvm.fma.f64(double %357, double\l... 0xBFF921FB54442D18, double %239)\l  %359 = tail call double @llvm.fma.f64(double %357, double\l... 0xBC91A62633145C00, double %358)\l  %360 = fmul double %357, 0x3C91A62633145C00\l  %361 = fneg double %360\l  %362 = tail call double @llvm.fma.f64(double %357, double\l... 0x3C91A62633145C00, double %361)\l  %363 = fsub double %358, %360\l  %364 = fsub double %358, %363\l  %365 = fsub double %364, %360\l  %366 = fsub double %363, %359\l  %367 = fadd double %366, %365\l  %368 = fsub double %367, %362\l  %369 = tail call double @llvm.fma.f64(double %357, double\l... 0xB97B839A252049C0, double %368)\l  %370 = fadd double %359, %369\l  %371 = fsub double %370, %359\l  %372 = fsub double %369, %371\l  %373 = fptosi double %357 to i32\l  %374 = fmul double %370, %370\l  %375 = fmul double %374, 5.000000e-01\l  %376 = fsub double 1.000000e+00, %375\l  %377 = fsub double 1.000000e+00, %376\l  %378 = fsub double %377, %375\l  %379 = fmul double %374, %374\l  %380 = tail call double @llvm.fma.f64(double %374, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %381 = tail call double @llvm.fma.f64(double %374, double %380, double\l... 0xBE927E4FA17F65F6)\l  %382 = tail call double @llvm.fma.f64(double %374, double %381, double\l... 0x3EFA01A019F4EC90)\l  %383 = tail call double @llvm.fma.f64(double %374, double %382, double\l... 0xBF56C16C16C16967)\l  %384 = tail call double @llvm.fma.f64(double %374, double %383, double\l... 0x3FA5555555555555)\l  %385 = fneg double %372\l  %386 = tail call double @llvm.fma.f64(double %370, double %385, double %378)\l  %387 = tail call double @llvm.fma.f64(double %379, double %384, double %386)\l  %388 = fadd double %376, %387\l  %389 = tail call double @llvm.fma.f64(double %374, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %390 = tail call double @llvm.fma.f64(double %374, double %389, double\l... 0x3EC71DE3796CDE01)\l  %391 = tail call double @llvm.fma.f64(double %374, double %390, double\l... 0xBF2A01A019E83E5C)\l  %392 = tail call double @llvm.fma.f64(double %374, double %391, double\l... 0x3F81111111110BB3)\l  %393 = fneg double %374\l  %394 = fmul double %370, %393\l  %395 = fmul double %372, 5.000000e-01\l  %396 = tail call double @llvm.fma.f64(double %394, double %392, double %395)\l  %397 = tail call double @llvm.fma.f64(double %374, double %396, double %385)\l  %398 = tail call double @llvm.fma.f64(double %394, double\l... 0xBFC5555555555555, double %397)\l  %399 = fsub double %370, %398\l  %400 = fneg double %399\l  %401 = and i32 %373, 1\l  %402 = icmp eq i32 %401, 0\l  %403 = select i1 %402, double %388, double %400\l  %404 = bitcast double %403 to \<2 x i32\>\l  %405 = shl i32 %373, 30\l  %406 = and i32 %405, -2147483648\l  %407 = extractelement \<2 x i32\> %404, i64 1\l  %408 = xor i32 %407, %406\l  %409 = insertelement \<2 x i32\> %404, i32 %408, i64 1\l  %410 = tail call i1 @llvm.amdgcn.class.f64(double %239, i32 504)\l  %411 = select i1 %410, \<2 x i32\> %409, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %412\l}"];
	Node0x5ea11b0 -> Node0x5ea6b60;
	Node0x5ea6b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%412:\l412:                                              \l  %413 = phi \<2 x i32\> [ %411, %355 ], [ %354, %241 ]\l  %414 = phi i32 [ %405, %355 ], [ %348, %241 ]\l  %415 = phi i32 [ %401, %355 ], [ %344, %241 ]\l  %416 = phi double [ %399, %355 ], [ %342, %241 ]\l  %417 = phi double [ %388, %355 ], [ %331, %241 ]\l  %418 = phi i1 [ %410, %355 ], [ %353, %241 ]\l  %419 = bitcast \<2 x i32\> %413 to double\l  %420 = insertelement \<2 x double\> undef, double %419, i64 0\l  %421 = icmp eq i32 %415, 0\l  %422 = select i1 %421, double %416, double %417\l  %423 = bitcast double %422 to \<2 x i32\>\l  %424 = bitcast double %238 to \<2 x i32\>\l  %425 = extractelement \<2 x i32\> %424, i64 1\l  %426 = xor i32 %414, %425\l  %427 = and i32 %426, -2147483648\l  %428 = extractelement \<2 x i32\> %423, i64 1\l  %429 = xor i32 %428, %427\l  %430 = insertelement \<2 x i32\> %423, i32 %429, i64 1\l  %431 = select i1 %418, \<2 x i32\> %430, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %432 = bitcast \<2 x i32\> %431 to double\l  %433 = insertelement \<2 x double\> %420, double %432, i64 1\l  br label %461\l}"];
	Node0x5ea6b60 -> Node0x5ea0d20;
	Node0x5ea0dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%434:\l434:                                              \l  %435 = fneg contract double %234\l  %436 = fmul double %234, 0xBFF71547652B82FE\l  %437 = tail call double @llvm.rint.f64(double %436)\l  %438 = fneg double %437\l  %439 = tail call double @llvm.fma.f64(double %438, double\l... 0x3FE62E42FEFA39EF, double %435)\l  %440 = tail call double @llvm.fma.f64(double %438, double\l... 0x3C7ABC9E3B39803F, double %439)\l  %441 = tail call double @llvm.fma.f64(double %440, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %442 = tail call double @llvm.fma.f64(double %440, double %441, double\l... 0x3EC71DEE623FDE64)\l  %443 = tail call double @llvm.fma.f64(double %440, double %442, double\l... 0x3EFA01997C89E6B0)\l  %444 = tail call double @llvm.fma.f64(double %440, double %443, double\l... 0x3F2A01A014761F6E)\l  %445 = tail call double @llvm.fma.f64(double %440, double %444, double\l... 0x3F56C16C1852B7B0)\l  %446 = tail call double @llvm.fma.f64(double %440, double %445, double\l... 0x3F81111111122322)\l  %447 = tail call double @llvm.fma.f64(double %440, double %446, double\l... 0x3FA55555555502A1)\l  %448 = tail call double @llvm.fma.f64(double %440, double %447, double\l... 0x3FC5555555555511)\l  %449 = tail call double @llvm.fma.f64(double %440, double %448, double\l... 0x3FE000000000000B)\l  %450 = tail call double @llvm.fma.f64(double %440, double %449, double\l... 1.000000e+00)\l  %451 = tail call double @llvm.fma.f64(double %440, double %450, double\l... 1.000000e+00)\l  %452 = fptosi double %437 to i32\l  %453 = tail call double @llvm.amdgcn.ldexp.f64(double %451, i32 %452)\l  %454 = fcmp olt double %234, -1.024000e+03\l  %455 = select i1 %454, double 0x7FF0000000000000, double %453\l  %456 = fcmp ogt double %234, 1.075000e+03\l  %457 = select i1 %456, double 0.000000e+00, double %455\l  %458 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>,\l... double %457, i64 0\l  br label %461\l}"];
	Node0x5ea0dc0 -> Node0x5ea0d20;
	Node0x5ea0d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%459:\l459:                                              \l  %460 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>,\l... double %234, i64 0\l  br label %461\l}"];
	Node0x5ea0d70 -> Node0x5ea0d20;
	Node0x5ea0d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%461:\l461:                                              \l  %462 = phi \<2 x double\> [ undef, %230 ], [ %433, %412 ], [ %458, %434 ], [\l... %460, %459 ]\l  %463 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 1, i32 0, i32 0, i32 0\l  store \<2 x double\> %462, \<2 x double\> addrspace(1)* %463, align 16\l  %464 = getelementptr inbounds double, double addrspace(1)* %0, i64 2\l  %465 = load double, double addrspace(1)* %464, align 8, !tbaa !4\l  %466 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 2\l  %467 = load i32, i32 addrspace(1)* %466, align 4, !tbaa !8\l  switch i32 %467, label %692 [\l    i32 0, label %690\l    i32 1, label %665\l    i32 2, label %468\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x5ea0d20:s0 -> Node0x5eac1b0;
	Node0x5ea0d20:s1 -> Node0x5eac200;
	Node0x5ea0d20:s2 -> Node0x5eac250;
	Node0x5ea0d20:s3 -> Node0x5eac2a0;
	Node0x5eac2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%468:\l468:                                              \l  %469 = fneg contract double %465\l  %470 = tail call double @llvm.fabs.f64(double %469)\l  %471 = fcmp olt double %470, 0x41D0000000000000\l  br i1 %471, label %586, label %472\l|{<s0>T|<s1>F}}"];
	Node0x5eac2a0:s0 -> Node0x5eac640;
	Node0x5eac2a0:s1 -> Node0x5eac690;
	Node0x5eac690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%472:\l472:                                              \l  %473 = tail call double @llvm.amdgcn.trig.preop.f64(double %470, i32 0)\l  %474 = tail call double @llvm.amdgcn.trig.preop.f64(double %470, i32 1)\l  %475 = tail call double @llvm.amdgcn.trig.preop.f64(double %470, i32 2)\l  %476 = fcmp oge double %470, 0x7B00000000000000\l  %477 = tail call double @llvm.amdgcn.ldexp.f64(double %470, i32 -128)\l  %478 = select i1 %476, double %477, double %470\l  %479 = fmul double %475, %478\l  %480 = fneg double %479\l  %481 = tail call double @llvm.fma.f64(double %475, double %478, double %480)\l  %482 = fmul double %474, %478\l  %483 = fneg double %482\l  %484 = tail call double @llvm.fma.f64(double %474, double %478, double %483)\l  %485 = fmul double %473, %478\l  %486 = fneg double %485\l  %487 = tail call double @llvm.fma.f64(double %473, double %478, double %486)\l  %488 = fadd double %482, %487\l  %489 = fsub double %488, %482\l  %490 = fsub double %488, %489\l  %491 = fsub double %487, %489\l  %492 = fsub double %482, %490\l  %493 = fadd double %491, %492\l  %494 = fadd double %479, %484\l  %495 = fsub double %494, %479\l  %496 = fsub double %494, %495\l  %497 = fsub double %484, %495\l  %498 = fsub double %479, %496\l  %499 = fadd double %497, %498\l  %500 = fadd double %494, %493\l  %501 = fsub double %500, %494\l  %502 = fsub double %500, %501\l  %503 = fsub double %493, %501\l  %504 = fsub double %494, %502\l  %505 = fadd double %503, %504\l  %506 = fadd double %499, %505\l  %507 = fadd double %481, %506\l  %508 = fadd double %485, %488\l  %509 = fsub double %508, %485\l  %510 = fsub double %488, %509\l  %511 = fadd double %510, %500\l  %512 = fsub double %511, %510\l  %513 = fsub double %500, %512\l  %514 = fadd double %513, %507\l  %515 = tail call double @llvm.amdgcn.ldexp.f64(double %508, i32 -2)\l  %516 = tail call double @llvm.amdgcn.fract.f64(double %515)\l  %517 = tail call i1 @llvm.amdgcn.class.f64(double %515, i32 516)\l  %518 = select i1 %517, double 0.000000e+00, double %516\l  %519 = tail call double @llvm.amdgcn.ldexp.f64(double %518, i32 2)\l  %520 = fadd double %519, %511\l  %521 = fcmp olt double %520, 0.000000e+00\l  %522 = select i1 %521, double 4.000000e+00, double 0.000000e+00\l  %523 = fadd double %519, %522\l  %524 = fadd double %511, %523\l  %525 = fptosi double %524 to i32\l  %526 = sitofp i32 %525 to double\l  %527 = fsub double %523, %526\l  %528 = fadd double %511, %527\l  %529 = fsub double %528, %527\l  %530 = fsub double %511, %529\l  %531 = fadd double %514, %530\l  %532 = fcmp oge double %528, 5.000000e-01\l  %533 = zext i1 %532 to i32\l  %534 = add nsw i32 %533, %525\l  %535 = select i1 %532, double 1.000000e+00, double 0.000000e+00\l  %536 = fsub double %528, %535\l  %537 = fadd double %536, %531\l  %538 = fsub double %537, %536\l  %539 = fsub double %531, %538\l  %540 = fmul double %537, 0x3FF921FB54442D18\l  %541 = fneg double %540\l  %542 = tail call double @llvm.fma.f64(double %537, double\l... 0x3FF921FB54442D18, double %541)\l  %543 = tail call double @llvm.fma.f64(double %537, double\l... 0x3C91A62633145C07, double %542)\l  %544 = tail call double @llvm.fma.f64(double %539, double\l... 0x3FF921FB54442D18, double %543)\l  %545 = fadd double %540, %544\l  %546 = fsub double %545, %540\l  %547 = fsub double %544, %546\l  %548 = fmul double %545, %545\l  %549 = fmul double %548, 5.000000e-01\l  %550 = fsub double 1.000000e+00, %549\l  %551 = fsub double 1.000000e+00, %550\l  %552 = fsub double %551, %549\l  %553 = fmul double %548, %548\l  %554 = tail call double @llvm.fma.f64(double %548, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %555 = tail call double @llvm.fma.f64(double %548, double %554, double\l... 0xBE927E4FA17F65F6)\l  %556 = tail call double @llvm.fma.f64(double %548, double %555, double\l... 0x3EFA01A019F4EC90)\l  %557 = tail call double @llvm.fma.f64(double %548, double %556, double\l... 0xBF56C16C16C16967)\l  %558 = tail call double @llvm.fma.f64(double %548, double %557, double\l... 0x3FA5555555555555)\l  %559 = fneg double %547\l  %560 = tail call double @llvm.fma.f64(double %545, double %559, double %552)\l  %561 = tail call double @llvm.fma.f64(double %553, double %558, double %560)\l  %562 = fadd double %550, %561\l  %563 = tail call double @llvm.fma.f64(double %548, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %564 = tail call double @llvm.fma.f64(double %548, double %563, double\l... 0x3EC71DE3796CDE01)\l  %565 = tail call double @llvm.fma.f64(double %548, double %564, double\l... 0xBF2A01A019E83E5C)\l  %566 = tail call double @llvm.fma.f64(double %548, double %565, double\l... 0x3F81111111110BB3)\l  %567 = fneg double %548\l  %568 = fmul double %545, %567\l  %569 = fmul double %547, 5.000000e-01\l  %570 = tail call double @llvm.fma.f64(double %568, double %566, double %569)\l  %571 = tail call double @llvm.fma.f64(double %548, double %570, double %559)\l  %572 = tail call double @llvm.fma.f64(double %568, double\l... 0xBFC5555555555555, double %571)\l  %573 = fsub double %545, %572\l  %574 = fneg double %573\l  %575 = and i32 %534, 1\l  %576 = icmp eq i32 %575, 0\l  %577 = select i1 %576, double %562, double %574\l  %578 = bitcast double %577 to \<2 x i32\>\l  %579 = shl i32 %534, 30\l  %580 = and i32 %579, -2147483648\l  %581 = extractelement \<2 x i32\> %578, i64 1\l  %582 = xor i32 %581, %580\l  %583 = insertelement \<2 x i32\> %578, i32 %582, i64 1\l  %584 = tail call i1 @llvm.amdgcn.class.f64(double %470, i32 504)\l  %585 = select i1 %584, \<2 x i32\> %583, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %643\l}"];
	Node0x5eac690 -> Node0x5eb27a0;
	Node0x5eac640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%586:\l586:                                              \l  %587 = fmul double %470, 0x3FE45F306DC9C883\l  %588 = tail call double @llvm.rint.f64(double %587)\l  %589 = tail call double @llvm.fma.f64(double %588, double\l... 0xBFF921FB54442D18, double %470)\l  %590 = tail call double @llvm.fma.f64(double %588, double\l... 0xBC91A62633145C00, double %589)\l  %591 = fmul double %588, 0x3C91A62633145C00\l  %592 = fneg double %591\l  %593 = tail call double @llvm.fma.f64(double %588, double\l... 0x3C91A62633145C00, double %592)\l  %594 = fsub double %589, %591\l  %595 = fsub double %589, %594\l  %596 = fsub double %595, %591\l  %597 = fsub double %594, %590\l  %598 = fadd double %597, %596\l  %599 = fsub double %598, %593\l  %600 = tail call double @llvm.fma.f64(double %588, double\l... 0xB97B839A252049C0, double %599)\l  %601 = fadd double %590, %600\l  %602 = fsub double %601, %590\l  %603 = fsub double %600, %602\l  %604 = fptosi double %588 to i32\l  %605 = fmul double %601, %601\l  %606 = fmul double %605, 5.000000e-01\l  %607 = fsub double 1.000000e+00, %606\l  %608 = fsub double 1.000000e+00, %607\l  %609 = fsub double %608, %606\l  %610 = fmul double %605, %605\l  %611 = tail call double @llvm.fma.f64(double %605, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %612 = tail call double @llvm.fma.f64(double %605, double %611, double\l... 0xBE927E4FA17F65F6)\l  %613 = tail call double @llvm.fma.f64(double %605, double %612, double\l... 0x3EFA01A019F4EC90)\l  %614 = tail call double @llvm.fma.f64(double %605, double %613, double\l... 0xBF56C16C16C16967)\l  %615 = tail call double @llvm.fma.f64(double %605, double %614, double\l... 0x3FA5555555555555)\l  %616 = fneg double %603\l  %617 = tail call double @llvm.fma.f64(double %601, double %616, double %609)\l  %618 = tail call double @llvm.fma.f64(double %610, double %615, double %617)\l  %619 = fadd double %607, %618\l  %620 = tail call double @llvm.fma.f64(double %605, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %621 = tail call double @llvm.fma.f64(double %605, double %620, double\l... 0x3EC71DE3796CDE01)\l  %622 = tail call double @llvm.fma.f64(double %605, double %621, double\l... 0xBF2A01A019E83E5C)\l  %623 = tail call double @llvm.fma.f64(double %605, double %622, double\l... 0x3F81111111110BB3)\l  %624 = fneg double %605\l  %625 = fmul double %601, %624\l  %626 = fmul double %603, 5.000000e-01\l  %627 = tail call double @llvm.fma.f64(double %625, double %623, double %626)\l  %628 = tail call double @llvm.fma.f64(double %605, double %627, double %616)\l  %629 = tail call double @llvm.fma.f64(double %625, double\l... 0xBFC5555555555555, double %628)\l  %630 = fsub double %601, %629\l  %631 = fneg double %630\l  %632 = and i32 %604, 1\l  %633 = icmp eq i32 %632, 0\l  %634 = select i1 %633, double %619, double %631\l  %635 = bitcast double %634 to \<2 x i32\>\l  %636 = shl i32 %604, 30\l  %637 = and i32 %636, -2147483648\l  %638 = extractelement \<2 x i32\> %635, i64 1\l  %639 = xor i32 %638, %637\l  %640 = insertelement \<2 x i32\> %635, i32 %639, i64 1\l  %641 = tail call i1 @llvm.amdgcn.class.f64(double %470, i32 504)\l  %642 = select i1 %641, \<2 x i32\> %640, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %643\l}"];
	Node0x5eac640 -> Node0x5eb27a0;
	Node0x5eb27a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%643:\l643:                                              \l  %644 = phi \<2 x i32\> [ %642, %586 ], [ %585, %472 ]\l  %645 = phi i32 [ %636, %586 ], [ %579, %472 ]\l  %646 = phi i32 [ %632, %586 ], [ %575, %472 ]\l  %647 = phi double [ %630, %586 ], [ %573, %472 ]\l  %648 = phi double [ %619, %586 ], [ %562, %472 ]\l  %649 = phi i1 [ %641, %586 ], [ %584, %472 ]\l  %650 = bitcast \<2 x i32\> %644 to double\l  %651 = insertelement \<2 x double\> undef, double %650, i64 0\l  %652 = icmp eq i32 %646, 0\l  %653 = select i1 %652, double %647, double %648\l  %654 = bitcast double %653 to \<2 x i32\>\l  %655 = bitcast double %469 to \<2 x i32\>\l  %656 = extractelement \<2 x i32\> %655, i64 1\l  %657 = xor i32 %645, %656\l  %658 = and i32 %657, -2147483648\l  %659 = extractelement \<2 x i32\> %654, i64 1\l  %660 = xor i32 %659, %658\l  %661 = insertelement \<2 x i32\> %654, i32 %660, i64 1\l  %662 = select i1 %649, \<2 x i32\> %661, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %663 = bitcast \<2 x i32\> %662 to double\l  %664 = insertelement \<2 x double\> %651, double %663, i64 1\l  br label %692\l}"];
	Node0x5eb27a0 -> Node0x5eac1b0;
	Node0x5eac250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%665:\l665:                                              \l  %666 = fneg contract double %465\l  %667 = fmul double %465, 0xBFF71547652B82FE\l  %668 = tail call double @llvm.rint.f64(double %667)\l  %669 = fneg double %668\l  %670 = tail call double @llvm.fma.f64(double %669, double\l... 0x3FE62E42FEFA39EF, double %666)\l  %671 = tail call double @llvm.fma.f64(double %669, double\l... 0x3C7ABC9E3B39803F, double %670)\l  %672 = tail call double @llvm.fma.f64(double %671, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %673 = tail call double @llvm.fma.f64(double %671, double %672, double\l... 0x3EC71DEE623FDE64)\l  %674 = tail call double @llvm.fma.f64(double %671, double %673, double\l... 0x3EFA01997C89E6B0)\l  %675 = tail call double @llvm.fma.f64(double %671, double %674, double\l... 0x3F2A01A014761F6E)\l  %676 = tail call double @llvm.fma.f64(double %671, double %675, double\l... 0x3F56C16C1852B7B0)\l  %677 = tail call double @llvm.fma.f64(double %671, double %676, double\l... 0x3F81111111122322)\l  %678 = tail call double @llvm.fma.f64(double %671, double %677, double\l... 0x3FA55555555502A1)\l  %679 = tail call double @llvm.fma.f64(double %671, double %678, double\l... 0x3FC5555555555511)\l  %680 = tail call double @llvm.fma.f64(double %671, double %679, double\l... 0x3FE000000000000B)\l  %681 = tail call double @llvm.fma.f64(double %671, double %680, double\l... 1.000000e+00)\l  %682 = tail call double @llvm.fma.f64(double %671, double %681, double\l... 1.000000e+00)\l  %683 = fptosi double %668 to i32\l  %684 = tail call double @llvm.amdgcn.ldexp.f64(double %682, i32 %683)\l  %685 = fcmp olt double %465, -1.024000e+03\l  %686 = select i1 %685, double 0x7FF0000000000000, double %684\l  %687 = fcmp ogt double %465, 1.075000e+03\l  %688 = select i1 %687, double 0.000000e+00, double %686\l  %689 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>,\l... double %688, i64 0\l  br label %692\l}"];
	Node0x5eac250 -> Node0x5eac1b0;
	Node0x5eac200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%690:\l690:                                              \l  %691 = insertelement \<2 x double\> \<double poison, double 0.000000e+00\>,\l... double %465, i64 0\l  br label %692\l}"];
	Node0x5eac200 -> Node0x5eac1b0;
	Node0x5eac1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%692:\l692:                                              \l  %693 = phi \<2 x double\> [ undef, %461 ], [ %664, %643 ], [ %689, %665 ], [\l... %691, %690 ]\l  %694 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 2, i32 0, i32 0, i32 0\l  store \<2 x double\> %693, \<2 x double\> addrspace(1)* %694, align 16\l  ret void\l}"];
}
