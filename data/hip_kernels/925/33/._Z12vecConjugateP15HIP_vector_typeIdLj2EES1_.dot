digraph "CFG for '_Z12vecConjugateP15HIP_vector_typeIdLj2EES1_' function" {
	label="CFG for '_Z12vecConjugateP15HIP_vector_typeIdLj2EES1_' function";

	Node0x47ef5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 16\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 8, !tbaa !15\l  %21 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !13, !invariant.load\l... !14\l  %24 = zext i16 %23 to i32\l  %25 = udiv i32 %20, %24\l  %26 = mul i32 %25, %24\l  %27 = icmp ugt i32 %20, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %31 = mul i32 %29, %30\l  %32 = add i32 %31, %4\l  %33 = mul i32 %32, %17\l  %34 = add i32 %33, %3\l  %35 = getelementptr i8, i8 addrspace(4)* %5, i64 8\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = load i16, i16 addrspace(4)* %36, align 4, !range !13, !invariant.load\l... !14\l  %38 = zext i16 %37 to i32\l  %39 = mul i32 %34, %38\l  %40 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !16\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !16\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %43 = add i32 %39, %41\l  %44 = mul i32 %43, %24\l  %45 = add i32 %44, %40\l  %46 = mul i32 %45, %12\l  %47 = add i32 %46, %42\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %48, i32 0, i32 0, i32 0, i64 0\l  %50 = load double, double addrspace(1)* %49, align 16, !tbaa !17,\l... !amdgpu.noclobber !14\l  %51 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %48, i32 0, i32 0, i32 0, i64 1\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !17,\l... !amdgpu.noclobber !14\l  %53 = fneg contract double %52\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %48, i32 0, i32 0, i32 0, i64 0\l  store double %50, double addrspace(1)* %54, align 16\l  %55 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %48, i32 0, i32 0, i32 0, i64 1\l  store double %53, double addrspace(1)* %55, align 8\l  ret void\l}"];
}
