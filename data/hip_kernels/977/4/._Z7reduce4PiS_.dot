digraph "CFG for '_Z7reduce4PiS_' function" {
	label="CFG for '_Z7reduce4PiS_' function";

	Node0x4b046e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = shl i32 %4, 1\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %3\l  %13 = zext i32 %12 to i64\l  %14 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %13\l  %15 = load i32, i32 addrspace(1)* %14, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %16 = add i32 %12, %9\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %20 = add nsw i32 %19, %15\l  %21 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %3\l  store i32 %20, i32 addrspace(3)* %21, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %22 = icmp ugt i16 %8, 65\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4b046e0:s0 -> Node0x4b07e20;
	Node0x4b046e0:s1 -> Node0x4b07eb0;
	Node0x4b07eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%23:\l23:                                               \l  %24 = icmp ult i32 %3, 32\l  br i1 %24, label %37, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4b07eb0:s0 -> Node0x4b080b0;
	Node0x4b07eb0:s1 -> Node0x4b08100;
	Node0x4b07e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %27, %35 ], [ %9, %2 ]\l  %27 = lshr i32 %26, 1\l  %28 = icmp ult i32 %3, %27\l  br i1 %28, label %29, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4b07e20:s0 -> Node0x4b084d0;
	Node0x4b07e20:s1 -> Node0x4b08270;
	Node0x4b084d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%29:\l29:                                               \l  %30 = add nuw nsw i32 %27, %3\l  %31 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %30\l  %32 = load i32, i32 addrspace(3)* %31, align 4, !tbaa !7\l  %33 = load i32, i32 addrspace(3)* %21, align 4, !tbaa !7\l  %34 = add nsw i32 %33, %32\l  store i32 %34, i32 addrspace(3)* %21, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x4b084d0 -> Node0x4b08270;
	Node0x4b08270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = icmp ugt i32 %26, 131\l  br i1 %36, label %25, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b08270:s0 -> Node0x4b07e20;
	Node0x4b08270:s1 -> Node0x4b07eb0;
	Node0x4b080b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = add nuw nsw i32 %3, 32\l  %39 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %38\l  %40 = addrspacecast i32 addrspace(3)* %39 to i32*\l  %41 = load volatile i32, i32* %40, align 4, !tbaa !7\l  %42 = addrspacecast i32 addrspace(3)* %21 to i32*\l  %43 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %44 = add nsw i32 %43, %41\l  store volatile i32 %44, i32* %42, align 4, !tbaa !7\l  %45 = add nuw nsw i32 %3, 16\l  %46 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %45\l  %47 = addrspacecast i32 addrspace(3)* %46 to i32*\l  %48 = load volatile i32, i32* %47, align 4, !tbaa !7\l  %49 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %50 = add nsw i32 %49, %48\l  store volatile i32 %50, i32* %42, align 4, !tbaa !7\l  %51 = add nuw nsw i32 %3, 8\l  %52 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %51\l  %53 = addrspacecast i32 addrspace(3)* %52 to i32*\l  %54 = load volatile i32, i32* %53, align 4, !tbaa !7\l  %55 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %56 = add nsw i32 %55, %54\l  store volatile i32 %56, i32* %42, align 4, !tbaa !7\l  %57 = add nuw nsw i32 %3, 4\l  %58 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %57\l  %59 = addrspacecast i32 addrspace(3)* %58 to i32*\l  %60 = load volatile i32, i32* %59, align 4, !tbaa !7\l  %61 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %62 = add nsw i32 %61, %60\l  store volatile i32 %62, i32* %42, align 4, !tbaa !7\l  %63 = add nuw nsw i32 %3, 2\l  %64 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %63\l  %65 = addrspacecast i32 addrspace(3)* %64 to i32*\l  %66 = load volatile i32, i32* %65, align 4, !tbaa !7\l  %67 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %68 = add nsw i32 %67, %66\l  store volatile i32 %68, i32* %42, align 4, !tbaa !7\l  %69 = add nuw nsw i32 %3, 1\l  %70 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %69\l  %71 = addrspacecast i32 addrspace(3)* %70 to i32*\l  %72 = load volatile i32, i32* %71, align 4, !tbaa !7\l  %73 = load volatile i32, i32* %42, align 4, !tbaa !7\l  %74 = add nsw i32 %73, %72\l  store volatile i32 %74, i32* %42, align 4, !tbaa !7\l  br label %75\l}"];
	Node0x4b080b0 -> Node0x4b08100;
	Node0x4b08100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%75:\l75:                                               \l  %76 = icmp eq i32 %3, 0\l  br i1 %76, label %77, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4b08100:s0 -> Node0x4b0a930;
	Node0x4b08100:s1 -> Node0x4b0a980;
	Node0x4b0a930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%77:\l77:                                               \l  %78 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !7\l  %79 = zext i32 %4 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  store i32 %78, i32 addrspace(1)* %80, align 4, !tbaa !7\l  br label %81\l}"];
	Node0x4b0a930 -> Node0x4b0a980;
	Node0x4b0a980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%81:\l81:                                               \l  ret void\l}"];
}
