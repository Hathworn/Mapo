digraph "CFG for '_Z9MatrixMulPiS_S_i' function" {
	label="CFG for '_Z9MatrixMulPiS_S_i' function";

	Node0x53499b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %6, %13\l  %15 = add i32 %14, %8\l  %16 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %5, %19\l  %21 = add i32 %20, %7\l  %22 = icmp sgt i32 %3, 0\l  %23 = mul nsw i32 %15, %3\l  br i1 %22, label %24, label %52\l|{<s0>T|<s1>F}}"];
	Node0x53499b0:s0 -> Node0x534d3b0;
	Node0x53499b0:s1 -> Node0x534d440;
	Node0x534d3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = and i32 %3, 7\l  %26 = icmp ult i32 %3, 8\l  br i1 %26, label %29, label %27\l|{<s0>T|<s1>F}}"];
	Node0x534d3b0:s0 -> Node0x534d700;
	Node0x534d3b0:s1 -> Node0x534d750;
	Node0x534d750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i32 %3, -8\l  br label %57\l}"];
	Node0x534d750 -> Node0x534d950;
	Node0x534d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = phi i32 [ undef, %24 ], [ %155, %57 ]\l  %31 = phi i32 [ 0, %24 ], [ %156, %57 ]\l  %32 = phi i32 [ 0, %24 ], [ %155, %57 ]\l  %33 = icmp eq i32 %25, 0\l  br i1 %33, label %52, label %34\l|{<s0>T|<s1>F}}"];
	Node0x534d700:s0 -> Node0x534d440;
	Node0x534d700:s1 -> Node0x534c380;
	Node0x534c380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %49, %34 ], [ %31, %29 ]\l  %36 = phi i32 [ %48, %34 ], [ %32, %29 ]\l  %37 = phi i32 [ %50, %34 ], [ 0, %29 ]\l  %38 = add nsw i32 %35, %23\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %42 = mul nsw i32 %35, %3\l  %43 = add nsw i32 %42, %21\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = mul nsw i32 %46, %41\l  %48 = add nsw i32 %47, %36\l  %49 = add nuw nsw i32 %35, 1\l  %50 = add i32 %37, 1\l  %51 = icmp eq i32 %50, %25\l  br i1 %51, label %52, label %34, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x534c380:s0 -> Node0x534d440;
	Node0x534c380:s1 -> Node0x534c380;
	Node0x534d440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %4 ], [ %30, %29 ], [ %48, %34 ]\l  %54 = add nsw i32 %23, %21\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %55\l  store i32 %53, i32 addrspace(1)* %56, align 4, !tbaa !7\l  ret void\l}"];
	Node0x534d950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %27 ], [ %156, %57 ]\l  %59 = phi i32 [ 0, %27 ], [ %155, %57 ]\l  %60 = phi i32 [ 0, %27 ], [ %157, %57 ]\l  %61 = add nsw i32 %58, %23\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %65 = mul nsw i32 %58, %3\l  %66 = add nsw i32 %65, %21\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %70 = mul nsw i32 %69, %64\l  %71 = add nsw i32 %70, %59\l  %72 = or i32 %58, 1\l  %73 = add nsw i32 %72, %23\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %77 = mul nsw i32 %72, %3\l  %78 = add nsw i32 %77, %21\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %82 = mul nsw i32 %81, %76\l  %83 = add nsw i32 %82, %71\l  %84 = or i32 %58, 2\l  %85 = add nsw i32 %84, %23\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %89 = mul nsw i32 %84, %3\l  %90 = add nsw i32 %89, %21\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %94 = mul nsw i32 %93, %88\l  %95 = add nsw i32 %94, %83\l  %96 = or i32 %58, 3\l  %97 = add nsw i32 %96, %23\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %98\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %101 = mul nsw i32 %96, %3\l  %102 = add nsw i32 %101, %21\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %106 = mul nsw i32 %105, %100\l  %107 = add nsw i32 %106, %95\l  %108 = or i32 %58, 4\l  %109 = add nsw i32 %108, %23\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %113 = mul nsw i32 %108, %3\l  %114 = add nsw i32 %113, %21\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %115\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %118 = mul nsw i32 %117, %112\l  %119 = add nsw i32 %118, %107\l  %120 = or i32 %58, 5\l  %121 = add nsw i32 %120, %23\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %125 = mul nsw i32 %120, %3\l  %126 = add nsw i32 %125, %21\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %130 = mul nsw i32 %129, %124\l  %131 = add nsw i32 %130, %119\l  %132 = or i32 %58, 6\l  %133 = add nsw i32 %132, %23\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %134\l  %136 = load i32, i32 addrspace(1)* %135, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %137 = mul nsw i32 %132, %3\l  %138 = add nsw i32 %137, %21\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %139\l  %141 = load i32, i32 addrspace(1)* %140, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %142 = mul nsw i32 %141, %136\l  %143 = add nsw i32 %142, %131\l  %144 = or i32 %58, 7\l  %145 = add nsw i32 %144, %23\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %146\l  %148 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %149 = mul nsw i32 %144, %3\l  %150 = add nsw i32 %149, %21\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %151\l  %153 = load i32, i32 addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %154 = mul nsw i32 %153, %148\l  %155 = add nsw i32 %154, %143\l  %156 = add nuw nsw i32 %58, 8\l  %157 = add i32 %60, 8\l  %158 = icmp eq i32 %157, %28\l  br i1 %158, label %29, label %57, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x534d950:s0 -> Node0x534d700;
	Node0x534d950:s1 -> Node0x534d950;
}
