digraph "CFG for '_Z7reduce6PiS_i' function" {
	label="CFG for '_Z7reduce6PiS_i' function";

	Node0x464ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 9\l  %7 = add i32 %6, %4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !5\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !14, !invariant.load\l... !15\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = shl i32 %20, 9\l  %22 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %4\l  store i32 0, i32 addrspace(3)* %22, align 4, !tbaa !16\l  %23 = icmp ult i32 %7, %2\l  br i1 %23, label %24, label %39\l|{<s0>T|<s1>F}}"];
	Node0x464ade0:s0 -> Node0x464bb80;
	Node0x464ade0:s1 -> Node0x464d730;
	Node0x464bb80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %35, %24 ], [ 0, %3 ]\l  %26 = phi i32 [ %36, %24 ], [ %7, %3 ]\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %30 = add i32 %26, 256\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %34 = add nsw i32 %33, %29\l  %35 = add nsw i32 %34, %25\l  %36 = add i32 %26, %21\l  %37 = icmp ult i32 %36, %2\l  br i1 %37, label %24, label %38, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x464bb80:s0 -> Node0x464bb80;
	Node0x464bb80:s1 -> Node0x464ee70;
	Node0x464ee70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%38:\l38:                                               \l  store i32 %35, i32 addrspace(3)* %22, align 4, !tbaa !16\l  br label %39\l}"];
	Node0x464ee70 -> Node0x464d730;
	Node0x464d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %40 = icmp ult i32 %4, 128\l  br i1 %40, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x464d730:s0 -> Node0x464f450;
	Node0x464d730:s1 -> Node0x464f4a0;
	Node0x464f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%41:\l41:                                               \l  %42 = add nuw nsw i32 %4, 128\l  %43 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %42\l  %44 = load i32, i32 addrspace(3)* %43, align 4, !tbaa !16\l  %45 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !16\l  %46 = add nsw i32 %45, %44\l  store i32 %46, i32 addrspace(3)* %22, align 4, !tbaa !16\l  br label %47\l}"];
	Node0x464f450 -> Node0x464f4a0;
	Node0x464f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %48 = icmp ult i32 %4, 64\l  br i1 %48, label %49, label %55\l|{<s0>T|<s1>F}}"];
	Node0x464f4a0:s0 -> Node0x464fb90;
	Node0x464f4a0:s1 -> Node0x464fbe0;
	Node0x464fb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %4, 64\l  %51 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %50\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !16\l  %53 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !16\l  %54 = add nsw i32 %53, %52\l  store i32 %54, i32 addrspace(3)* %22, align 4, !tbaa !16\l  br label %55\l}"];
	Node0x464fb90 -> Node0x464fbe0;
	Node0x464fbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%55:\l55:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %56 = icmp ult i32 %4, 32\l  br i1 %56, label %57, label %95\l|{<s0>T|<s1>F}}"];
	Node0x464fbe0:s0 -> Node0x46502e0;
	Node0x464fbe0:s1 -> Node0x4650330;
	Node0x46502e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%57:\l57:                                               \l  %58 = add nuw nsw i32 %4, 32\l  %59 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %58\l  %60 = addrspacecast i32 addrspace(3)* %59 to i32*\l  %61 = load volatile i32, i32* %60, align 4, !tbaa !16\l  %62 = addrspacecast i32 addrspace(3)* %22 to i32*\l  %63 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %64 = add nsw i32 %63, %61\l  store volatile i32 %64, i32* %62, align 4, !tbaa !16\l  %65 = add nuw nsw i32 %4, 16\l  %66 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %65\l  %67 = addrspacecast i32 addrspace(3)* %66 to i32*\l  %68 = load volatile i32, i32* %67, align 4, !tbaa !16\l  %69 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %70 = add nsw i32 %69, %68\l  store volatile i32 %70, i32* %62, align 4, !tbaa !16\l  %71 = add nuw nsw i32 %4, 8\l  %72 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %71\l  %73 = addrspacecast i32 addrspace(3)* %72 to i32*\l  %74 = load volatile i32, i32* %73, align 4, !tbaa !16\l  %75 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %76 = add nsw i32 %75, %74\l  store volatile i32 %76, i32* %62, align 4, !tbaa !16\l  %77 = add nuw nsw i32 %4, 4\l  %78 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %77\l  %79 = addrspacecast i32 addrspace(3)* %78 to i32*\l  %80 = load volatile i32, i32* %79, align 4, !tbaa !16\l  %81 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %82 = add nsw i32 %81, %80\l  store volatile i32 %82, i32* %62, align 4, !tbaa !16\l  %83 = add nuw nsw i32 %4, 2\l  %84 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %83\l  %85 = addrspacecast i32 addrspace(3)* %84 to i32*\l  %86 = load volatile i32, i32* %85, align 4, !tbaa !16\l  %87 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %88 = add nsw i32 %87, %86\l  store volatile i32 %88, i32* %62, align 4, !tbaa !16\l  %89 = add nuw nsw i32 %4, 1\l  %90 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @sdata, i32\l... 0, i32 %89\l  %91 = addrspacecast i32 addrspace(3)* %90 to i32*\l  %92 = load volatile i32, i32* %91, align 4, !tbaa !16\l  %93 = load volatile i32, i32* %62, align 4, !tbaa !16\l  %94 = add nsw i32 %93, %92\l  store volatile i32 %94, i32* %62, align 4, !tbaa !16\l  br label %95\l}"];
	Node0x46502e0 -> Node0x4650330;
	Node0x4650330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%95:\l95:                                               \l  %96 = icmp eq i32 %4, 0\l  br i1 %96, label %97, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4650330:s0 -> Node0x4651f40;
	Node0x4650330:s1 -> Node0x4651f90;
	Node0x4651f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%97:\l97:                                               \l  %98 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @sdata, i32 0, i32 0), align 4, !tbaa !16\l  %99 = zext i32 %5 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %99\l  store i32 %98, i32 addrspace(1)* %100, align 4, !tbaa !16\l  br label %101\l}"];
	Node0x4651f40 -> Node0x4651f90;
	Node0x4651f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%101:\l101:                                              \l  ret void\l}"];
}
