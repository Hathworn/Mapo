digraph "CFG for '_Z9MatrixMulPiS_S_i' function" {
	label="CFG for '_Z9MatrixMulPiS_S_i' function";

	Node0x4f85d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = shl nsw i32 %3, 4\l  %10 = mul nsw i32 %9, %6\l  %11 = add nsw i32 %10, %3\l  %12 = shl nsw i32 %5, 4\l  %13 = icmp sgt i32 %3, 0\l  %14 = mul nsw i32 %8, %3\l  br i1 %13, label %15, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4f85d30:s0 -> Node0x4f88140;
	Node0x4f85d30:s1 -> Node0x4f881d0;
	Node0x4f88140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = add i32 %14, %7\l  %17 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2As, i32 0, i32 %8, i32 %7\l  %18 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2Bs, i32 0, i32 %7, i32 %8\l  %19 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2As, i32 0, i32 %8, i32 0\l  %20 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2Bs, i32 0, i32 %7, i32 0\l  %21 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2As, i32 0, i32 %8, i32 4\l  %22 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2Bs, i32 0, i32 %7, i32 4\l  %23 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2As, i32 0, i32 %8, i32 8\l  %24 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2Bs, i32 0, i32 %7, i32 8\l  %25 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2As, i32 0, i32 %8, i32 12\l  %26 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]\l... addrspace(3)* @_ZZ9MatrixMulPiS_S_iE2Bs, i32 0, i32 %7, i32 12\l  %27 = bitcast i32 addrspace(3)* %19 to \<4 x i32\> addrspace(3)*\l  %28 = bitcast i32 addrspace(3)* %20 to \<4 x i32\> addrspace(3)*\l  %29 = bitcast i32 addrspace(3)* %21 to \<4 x i32\> addrspace(3)*\l  %30 = bitcast i32 addrspace(3)* %22 to \<4 x i32\> addrspace(3)*\l  %31 = bitcast i32 addrspace(3)* %23 to \<4 x i32\> addrspace(3)*\l  %32 = bitcast i32 addrspace(3)* %24 to \<4 x i32\> addrspace(3)*\l  %33 = bitcast i32 addrspace(3)* %25 to \<4 x i32\> addrspace(3)*\l  %34 = bitcast i32 addrspace(3)* %26 to \<4 x i32\> addrspace(3)*\l  br label %35\l}"];
	Node0x4f88140 -> Node0x4f89830;
	Node0x4f89830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %15 ], [ %66, %35 ]\l  %37 = phi i32 [ %12, %15 ], [ %68, %35 ]\l  %38 = phi i32 [ %10, %15 ], [ %67, %35 ]\l  %39 = add i32 %16, %38\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  store i32 %42, i32 addrspace(3)* %17, align 4, !tbaa !5\l  %43 = add i32 %16, %37\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  store i32 %46, i32 addrspace(3)* %18, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %27, align 16, !tbaa !5\l  %48 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %28, align 16, !tbaa !5\l  %49 = mul nsw \<4 x i32\> %48, %47\l  %50 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %29, align 16, !tbaa !5\l  %51 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %30, align 16, !tbaa !5\l  %52 = mul nsw \<4 x i32\> %51, %50\l  %53 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %31, align 16, !tbaa !5\l  %54 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %32, align 16, !tbaa !5\l  %55 = mul nsw \<4 x i32\> %54, %53\l  %56 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %33, align 16, !tbaa !5\l  %57 = load \<4 x i32\>, \<4 x i32\> addrspace(3)* %34, align 16, !tbaa !5\l  %58 = mul nsw \<4 x i32\> %57, %56\l  %59 = tail call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %49)\l  %60 = tail call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %52)\l  %61 = add i32 %59, %60\l  %62 = tail call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %55)\l  %63 = add i32 %61, %62\l  %64 = tail call i32 @llvm.vector.reduce.add.v4i32(\<4 x i32\> %58)\l  %65 = add i32 %63, %64\l  %66 = add i32 %65, %36\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %67 = add nsw i32 %38, 16\l  %68 = add nsw i32 %37, %9\l  %69 = icmp slt i32 %67, %11\l  br i1 %69, label %35, label %70, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4f89830:s0 -> Node0x4f89830;
	Node0x4f89830:s1 -> Node0x4f881d0;
	Node0x4f881d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %4 ], [ %66, %35 ]\l  %72 = add i32 %12, %7\l  %73 = add i32 %72, %14\l  %74 = add i32 %73, %10\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %75\l  store i32 %71, i32 addrspace(1)* %76, align 4, !tbaa !5\l  ret void\l}"];
}
