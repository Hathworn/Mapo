digraph "CFG for '_Z7filter2iiPhS_' function" {
	label="CFG for '_Z7filter2iiPhS_' function";

	Node0x4c854c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp sgt i32 %13, 0\l  %23 = icmp sgt i32 %21, 0\l  %24 = select i1 %22, i1 %23, i1 false\l  %25 = add nsw i32 %0, -1\l  %26 = icmp slt i32 %13, %25\l  %27 = select i1 %24, i1 %26, i1 false\l  %28 = add nsw i32 %1, -1\l  %29 = icmp slt i32 %21, %28\l  %30 = select i1 %27, i1 %29, i1 false\l  br i1 %30, label %31, label %152\l|{<s0>T|<s1>F}}"];
	Node0x4c854c0:s0 -> Node0x4c89370;
	Node0x4c854c0:s1 -> Node0x4c89400;
	Node0x4c89370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%31:\l31:                                               \l  %32 = add nsw i32 %21, -1\l  %33 = add nsw i32 %13, -1\l  %34 = mul nsw i32 %21, %0\l  %35 = add i32 %34, %13\l  %36 = mul nsw i32 %35, 3\l  %37 = add nuw nsw i32 %13, 1\l  %38 = mul nsw i32 %32, %0\l  %39 = add i32 %33, %34\l  %40 = mul nsw i32 %39, 3\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %41\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !7\l  %44 = zext i8 %43 to i16\l  %45 = add nuw nsw i32 %21, 1\l  %46 = mul nsw i32 %45, %0\l  %47 = add i32 %13, %38\l  %48 = mul nsw i32 %47, 3\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %49\l  %51 = load i8, i8 addrspace(1)* %50, align 1, !tbaa !7\l  %52 = zext i8 %51 to i16\l  %53 = add nuw nsw i16 %52, %44\l  %54 = shl nuw nsw i16 %53, 1\l  %55 = sext i32 %36 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %55\l  %57 = load i8, i8 addrspace(1)* %56, align 1, !tbaa !7\l  %58 = zext i8 %57 to i16\l  %59 = shl nuw nsw i16 %58, 2\l  %60 = add nuw nsw i16 %59, %54\l  %61 = add i32 %13, %46\l  %62 = mul nsw i32 %61, 3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %63\l  %65 = load i8, i8 addrspace(1)* %64, align 1, !tbaa !7\l  %66 = zext i8 %65 to i16\l  %67 = shl nuw nsw i16 %66, 1\l  %68 = add nuw nsw i16 %67, %60\l  %69 = add i32 %37, %34\l  %70 = mul nsw i32 %69, 3\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %71\l  %73 = load i8, i8 addrspace(1)* %72, align 1, !tbaa !7\l  %74 = zext i8 %73 to i16\l  %75 = shl nuw nsw i16 %74, 1\l  %76 = add nuw nsw i16 %75, %68\l  %77 = udiv i16 %76, 12\l  %78 = trunc i16 %77 to i8\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %55\l  store i8 %78, i8 addrspace(1)* %79, align 1, !tbaa !7\l  %80 = add nsw i32 %40, 1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %81\l  %83 = load i8, i8 addrspace(1)* %82, align 1, !tbaa !7\l  %84 = zext i8 %83 to i16\l  %85 = add nsw i32 %48, 1\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %86\l  %88 = load i8, i8 addrspace(1)* %87, align 1, !tbaa !7\l  %89 = zext i8 %88 to i16\l  %90 = add nuw nsw i16 %89, %84\l  %91 = shl nuw nsw i16 %90, 1\l  %92 = add nsw i32 %36, 1\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %93\l  %95 = load i8, i8 addrspace(1)* %94, align 1, !tbaa !7\l  %96 = zext i8 %95 to i16\l  %97 = shl nuw nsw i16 %96, 2\l  %98 = add nuw nsw i16 %97, %91\l  %99 = add nsw i32 %62, 1\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %100\l  %102 = load i8, i8 addrspace(1)* %101, align 1, !tbaa !7\l  %103 = zext i8 %102 to i16\l  %104 = shl nuw nsw i16 %103, 1\l  %105 = add nuw nsw i16 %104, %98\l  %106 = add nsw i32 %70, 1\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %107\l  %109 = load i8, i8 addrspace(1)* %108, align 1, !tbaa !7\l  %110 = zext i8 %109 to i16\l  %111 = shl nuw nsw i16 %110, 1\l  %112 = add nuw nsw i16 %111, %105\l  %113 = udiv i16 %112, 12\l  %114 = trunc i16 %113 to i8\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %93\l  store i8 %114, i8 addrspace(1)* %115, align 1, !tbaa !7\l  %116 = add nsw i32 %40, 2\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %117\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !7\l  %120 = zext i8 %119 to i16\l  %121 = add nsw i32 %48, 2\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %122\l  %124 = load i8, i8 addrspace(1)* %123, align 1, !tbaa !7\l  %125 = zext i8 %124 to i16\l  %126 = add nuw nsw i16 %125, %120\l  %127 = shl nuw nsw i16 %126, 1\l  %128 = add nsw i32 %36, 2\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %129\l  %131 = load i8, i8 addrspace(1)* %130, align 1, !tbaa !7\l  %132 = zext i8 %131 to i16\l  %133 = shl nuw nsw i16 %132, 2\l  %134 = add nuw nsw i16 %133, %127\l  %135 = add nsw i32 %62, 2\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %136\l  %138 = load i8, i8 addrspace(1)* %137, align 1, !tbaa !7\l  %139 = zext i8 %138 to i16\l  %140 = shl nuw nsw i16 %139, 1\l  %141 = add nuw nsw i16 %140, %134\l  %142 = add nsw i32 %70, 2\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %143\l  %145 = load i8, i8 addrspace(1)* %144, align 1, !tbaa !7\l  %146 = zext i8 %145 to i16\l  %147 = shl nuw nsw i16 %146, 1\l  %148 = add nuw nsw i16 %147, %141\l  %149 = udiv i16 %148, 12\l  %150 = trunc i16 %149 to i8\l  %151 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %129\l  store i8 %150, i8 addrspace(1)* %151, align 1, !tbaa !7\l  br label %152\l}"];
	Node0x4c89370 -> Node0x4c89400;
	Node0x4c89400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  ret void\l}"];
}
