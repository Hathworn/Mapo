digraph "CFG for '_Z17Kernel_Expansion1PdS_iidddd' function" {
	label="CFG for '_Z17Kernel_Expansion1PdS_iidddd' function";

	Node0x56eed00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %2\l  %27 = icmp slt i32 %25, %3\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %85\l|{<s0>T|<s1>F}}"];
	Node0x56eed00:s0 -> Node0x56f2740;
	Node0x56eed00:s1 -> Node0x56f27d0;
	Node0x56f2740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = sitofp i32 %17 to double\l  %31 = fsub contract double %30, %5\l  %32 = fdiv contract double %31, %4\l  %33 = fadd contract double %32, %5\l  %34 = sitofp i32 %25 to double\l  %35 = fsub contract double %34, %7\l  %36 = fdiv contract double %35, %6\l  %37 = fadd contract double %36, %7\l  %38 = fptosi double %33 to i32\l  %39 = srem i32 %38, %2\l  %40 = fptosi double %37 to i32\l  %41 = srem i32 %40, %3\l  %42 = add nsw i32 %39, 1\l  %43 = srem i32 %42, %2\l  %44 = add nsw i32 %41, 1\l  %45 = srem i32 %44, %3\l  %46 = mul nsw i32 %41, %2\l  %47 = add nsw i32 %46, %39\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = mul nsw i32 %45, %2\l  %52 = add nsw i32 %51, %39\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %0, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = add nsw i32 %51, %43\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %60 = add nsw i32 %46, %43\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fptrunc double %33 to float\l  %65 = tail call float @llvm.floor.f32(float %64)\l  %66 = fpext float %65 to double\l  %67 = fsub contract double %33, %66\l  %68 = fptrunc double %37 to float\l  %69 = tail call float @llvm.floor.f32(float %68)\l  %70 = fpext float %69 to double\l  %71 = fsub contract double %37, %70\l  %72 = fsub contract double %55, %50\l  %73 = fmul contract double %71, %72\l  %74 = fadd contract double %50, %73\l  %75 = fsub contract double %59, %63\l  %76 = fmul contract double %71, %75\l  %77 = fadd contract double %63, %76\l  %78 = fsub contract double %77, %74\l  %79 = fmul contract double %67, %78\l  %80 = fadd contract double %74, %79\l  %81 = mul nsw i32 %25, %2\l  %82 = add nsw i32 %81, %17\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds double, double addrspace(1)* %1, i64 %83\l  store double %80, double addrspace(1)* %84, align 8, !tbaa !7\l  br label %85\l}"];
	Node0x56f2740 -> Node0x56f27d0;
	Node0x56f27d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  ret void\l}"];
}
