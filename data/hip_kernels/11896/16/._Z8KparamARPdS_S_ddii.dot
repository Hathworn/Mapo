digraph "CFG for '_Z8KparamARPdS_S_ddii' function" {
	label="CFG for '_Z8KparamARPdS_S_ddii' function";

	Node0x592f1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %16, %5\l  %26 = icmp slt i32 %24, %6\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %244\l|{<s0>T|<s1>F}}"];
	Node0x592f1b0:s0 -> Node0x5932bd0;
	Node0x592f1b0:s1 -> Node0x5932c60;
	Node0x5932bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = sdiv i32 %5, 2\l  %30 = icmp sgt i32 %16, %29\l  %31 = sub nsw i32 %5, %16\l  %32 = select i1 %30, i32 %31, i32 %16\l  %33 = sdiv i32 %6, 2\l  %34 = icmp sgt i32 %24, %33\l  %35 = sub nsw i32 %6, %24\l  %36 = select i1 %34, i32 %35, i32 %24\l  %37 = sitofp i32 %32 to double\l  %38 = fmul contract double %37, %37\l  %39 = sitofp i32 %36 to double\l  %40 = fmul contract double %39, %39\l  %41 = fadd contract double %38, %40\l  %42 = fcmp olt double %41, 0x1000000000000000\l  %43 = select i1 %42, double 0x4FF0000000000000, double 1.000000e+00\l  %44 = fmul double %41, %43\l  %45 = tail call double @llvm.amdgcn.rsq.f64(double %44)\l  %46 = fmul double %44, %45\l  %47 = fmul double %45, 5.000000e-01\l  %48 = fneg double %47\l  %49 = tail call double @llvm.fma.f64(double %48, double %46, double\l... 5.000000e-01)\l  %50 = tail call double @llvm.fma.f64(double %47, double %49, double %47)\l  %51 = tail call double @llvm.fma.f64(double %46, double %49, double %46)\l  %52 = fneg double %51\l  %53 = tail call double @llvm.fma.f64(double %52, double %51, double %44)\l  %54 = tail call double @llvm.fma.f64(double %53, double %50, double %51)\l  %55 = fneg double %54\l  %56 = tail call double @llvm.fma.f64(double %55, double %54, double %44)\l  %57 = tail call double @llvm.fma.f64(double %56, double %50, double %54)\l  %58 = select i1 %42, double 0x37F0000000000000, double 1.000000e+00\l  %59 = fmul double %58, %57\l  %60 = fcmp oeq double %44, 0.000000e+00\l  %61 = fcmp oeq double %44, 0x7FF0000000000000\l  %62 = or i1 %60, %61\l  %63 = select i1 %62, double %44, double %59\l  %64 = fadd contract double %63, 0x3EB0C6F7A0B5ED8D\l  %65 = fmul contract double %4, 2.000000e+00\l  %66 = fmul contract double %65, %3\l  %67 = fmul contract double %66, %64\l  %68 = fsub contract double 2.000000e+00, %67\l  %69 = fmul contract double %3, %4\l  %70 = fmul contract double %69, %64\l  %71 = tail call double @llvm.fabs.f64(double %70)\l  %72 = tail call double @llvm.amdgcn.frexp.mant.f64(double %71)\l  %73 = fcmp olt double %72, 0x3FE5555555555555\l  %74 = zext i1 %73 to i32\l  %75 = tail call double @llvm.amdgcn.ldexp.f64(double %72, i32 %74)\l  %76 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %71)\l  %77 = sub nsw i32 %76, %74\l  %78 = fadd double %75, -1.000000e+00\l  %79 = fadd double %75, 1.000000e+00\l  %80 = fadd double %79, -1.000000e+00\l  %81 = fsub double %75, %80\l  %82 = tail call double @llvm.amdgcn.rcp.f64(double %79)\l  %83 = fneg double %79\l  %84 = tail call double @llvm.fma.f64(double %83, double %82, double\l... 1.000000e+00)\l  %85 = tail call double @llvm.fma.f64(double %84, double %82, double %82)\l  %86 = tail call double @llvm.fma.f64(double %83, double %85, double\l... 1.000000e+00)\l  %87 = tail call double @llvm.fma.f64(double %86, double %85, double %85)\l  %88 = fmul double %78, %87\l  %89 = fmul double %79, %88\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %88, double %79, double %90)\l  %92 = tail call double @llvm.fma.f64(double %88, double %81, double %91)\l  %93 = fadd double %89, %92\l  %94 = fsub double %93, %89\l  %95 = fsub double %92, %94\l  %96 = fsub double %78, %93\l  %97 = fsub double %78, %96\l  %98 = fsub double %97, %93\l  %99 = fsub double %98, %95\l  %100 = fadd double %96, %99\l  %101 = fmul double %87, %100\l  %102 = fadd double %88, %101\l  %103 = fsub double %102, %88\l  %104 = fsub double %101, %103\l  %105 = fmul double %102, %102\l  %106 = fneg double %105\l  %107 = tail call double @llvm.fma.f64(double %102, double %102, double %106)\l  %108 = fmul double %104, 2.000000e+00\l  %109 = tail call double @llvm.fma.f64(double %102, double %108, double %107)\l  %110 = fadd double %105, %109\l  %111 = fsub double %110, %105\l  %112 = fsub double %109, %111\l  %113 = tail call double @llvm.fma.f64(double %110, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %114 = tail call double @llvm.fma.f64(double %110, double %113, double\l... 0x3FBE25E43ABE935A)\l  %115 = tail call double @llvm.fma.f64(double %110, double %114, double\l... 0x3FC110EF47E6C9C2)\l  %116 = tail call double @llvm.fma.f64(double %110, double %115, double\l... 0x3FC3B13BCFA74449)\l  %117 = tail call double @llvm.fma.f64(double %110, double %116, double\l... 0x3FC745D171BF3C30)\l  %118 = tail call double @llvm.fma.f64(double %110, double %117, double\l... 0x3FCC71C71C7792CE)\l  %119 = tail call double @llvm.fma.f64(double %110, double %118, double\l... 0x3FD24924924920DA)\l  %120 = tail call double @llvm.fma.f64(double %110, double %119, double\l... 0x3FD999999999999C)\l  %121 = sitofp i32 %77 to double\l  %122 = fmul double %121, 0x3FE62E42FEFA39EF\l  %123 = fneg double %122\l  %124 = tail call double @llvm.fma.f64(double %121, double\l... 0x3FE62E42FEFA39EF, double %123)\l  %125 = tail call double @llvm.fma.f64(double %121, double\l... 0x3C7ABC9E3B39803F, double %124)\l  %126 = fadd double %122, %125\l  %127 = fsub double %126, %122\l  %128 = fsub double %125, %127\l  %129 = tail call double @llvm.amdgcn.ldexp.f64(double %102, i32 1)\l  %130 = tail call double @llvm.amdgcn.ldexp.f64(double %104, i32 1)\l  %131 = fmul double %102, %110\l  %132 = fneg double %131\l  %133 = tail call double @llvm.fma.f64(double %110, double %102, double %132)\l  %134 = tail call double @llvm.fma.f64(double %110, double %104, double %133)\l  %135 = tail call double @llvm.fma.f64(double %112, double %102, double %134)\l  %136 = fadd double %131, %135\l  %137 = fsub double %136, %131\l  %138 = fsub double %135, %137\l  %139 = fmul double %110, %120\l  %140 = fneg double %139\l  %141 = tail call double @llvm.fma.f64(double %110, double %120, double %140)\l  %142 = tail call double @llvm.fma.f64(double %112, double %120, double %141)\l  %143 = fadd double %139, %142\l  %144 = fsub double %143, %139\l  %145 = fsub double %142, %144\l  %146 = fadd double %143, 0x3FE5555555555555\l  %147 = fadd double %146, 0xBFE5555555555555\l  %148 = fsub double %143, %147\l  %149 = fadd double %145, 0x3C8543B0D5DF274D\l  %150 = fadd double %149, %148\l  %151 = fadd double %146, %150\l  %152 = fsub double %151, %146\l  %153 = fsub double %150, %152\l  %154 = fmul double %136, %151\l  %155 = fneg double %154\l  %156 = tail call double @llvm.fma.f64(double %136, double %151, double %155)\l  %157 = tail call double @llvm.fma.f64(double %136, double %153, double %156)\l  %158 = tail call double @llvm.fma.f64(double %138, double %151, double %157)\l  %159 = fadd double %154, %158\l  %160 = fsub double %159, %154\l  %161 = fsub double %158, %160\l  %162 = fadd double %129, %159\l  %163 = fsub double %162, %129\l  %164 = fsub double %159, %163\l  %165 = fadd double %130, %161\l  %166 = fadd double %165, %164\l  %167 = fadd double %162, %166\l  %168 = fsub double %167, %162\l  %169 = fsub double %166, %168\l  %170 = fadd double %126, %167\l  %171 = fsub double %170, %126\l  %172 = fsub double %170, %171\l  %173 = fsub double %126, %172\l  %174 = fsub double %167, %171\l  %175 = fadd double %174, %173\l  %176 = fadd double %128, %169\l  %177 = fsub double %176, %128\l  %178 = fsub double %176, %177\l  %179 = fsub double %128, %178\l  %180 = fsub double %169, %177\l  %181 = fadd double %180, %179\l  %182 = fadd double %176, %175\l  %183 = fadd double %170, %182\l  %184 = fsub double %183, %170\l  %185 = fsub double %182, %184\l  %186 = fadd double %181, %185\l  %187 = fadd double %183, %186\l  %188 = fsub double %187, %183\l  %189 = fsub double %186, %188\l  %190 = fmul double %187, 2.000000e+00\l  %191 = fneg double %190\l  %192 = tail call double @llvm.fma.f64(double %187, double 2.000000e+00,\l... double %191)\l  %193 = tail call double @llvm.fma.f64(double %189, double 2.000000e+00,\l... double %192)\l  %194 = fadd double %190, %193\l  %195 = fsub double %194, %190\l  %196 = fsub double %193, %195\l  %197 = tail call double @llvm.fabs.f64(double %190) #3\l  %198 = fcmp oeq double %197, 0x7FF0000000000000\l  %199 = select i1 %198, double %190, double %194\l  %200 = tail call double @llvm.fabs.f64(double %199) #3\l  %201 = fcmp oeq double %200, 0x7FF0000000000000\l  %202 = select i1 %201, double 0.000000e+00, double %196\l  %203 = fmul double %199, 0x3FF71547652B82FE\l  %204 = tail call double @llvm.rint.f64(double %203)\l  %205 = fneg double %204\l  %206 = tail call double @llvm.fma.f64(double %205, double\l... 0x3FE62E42FEFA39EF, double %199)\l  %207 = tail call double @llvm.fma.f64(double %205, double\l... 0x3C7ABC9E3B39803F, double %206)\l  %208 = tail call double @llvm.fma.f64(double %207, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %209 = tail call double @llvm.fma.f64(double %207, double %208, double\l... 0x3EC71DEE623FDE64)\l  %210 = tail call double @llvm.fma.f64(double %207, double %209, double\l... 0x3EFA01997C89E6B0)\l  %211 = tail call double @llvm.fma.f64(double %207, double %210, double\l... 0x3F2A01A014761F6E)\l  %212 = tail call double @llvm.fma.f64(double %207, double %211, double\l... 0x3F56C16C1852B7B0)\l  %213 = tail call double @llvm.fma.f64(double %207, double %212, double\l... 0x3F81111111122322)\l  %214 = tail call double @llvm.fma.f64(double %207, double %213, double\l... 0x3FA55555555502A1)\l  %215 = tail call double @llvm.fma.f64(double %207, double %214, double\l... 0x3FC5555555555511)\l  %216 = tail call double @llvm.fma.f64(double %207, double %215, double\l... 0x3FE000000000000B)\l  %217 = tail call double @llvm.fma.f64(double %207, double %216, double\l... 1.000000e+00)\l  %218 = tail call double @llvm.fma.f64(double %207, double %217, double\l... 1.000000e+00)\l  %219 = fptosi double %204 to i32\l  %220 = tail call double @llvm.amdgcn.ldexp.f64(double %218, i32 %219)\l  %221 = fcmp ogt double %199, 1.024000e+03\l  %222 = select i1 %221, double 0x7FF0000000000000, double %220\l  %223 = fcmp olt double %199, -1.075000e+03\l  %224 = select i1 %223, double 0.000000e+00, double %222\l  %225 = tail call double @llvm.fma.f64(double %224, double %202, double %224)\l  %226 = tail call double @llvm.fabs.f64(double %224) #3\l  %227 = fcmp oeq double %226, 0x7FF0000000000000\l  %228 = select i1 %227, double %224, double %225\l  %229 = tail call double @llvm.fabs.f64(double %228)\l  %230 = fcmp oeq double %71, 0x7FF0000000000000\l  %231 = fcmp oeq double %70, 0.000000e+00\l  %232 = select i1 %230, double 0x7FF0000000000000, double %229\l  %233 = select i1 %231, double 0.000000e+00, double %232\l  %234 = fcmp uno double %70, 0.000000e+00\l  %235 = select i1 %234, double 0x7FF8000000000000, double %233\l  %236 = fsub contract double %68, %235\l  %237 = mul nsw i32 %24, %5\l  %238 = add nsw i32 %237, %16\l  %239 = sext i32 %238 to i64\l  %240 = getelementptr inbounds double, double addrspace(1)* %0, i64 %239\l  store double %236, double addrspace(1)* %240, align 8, !tbaa !7\l  %241 = fadd contract double %67, -1.000000e+00\l  %242 = getelementptr inbounds double, double addrspace(1)* %1, i64 %239\l  store double %241, double addrspace(1)* %242, align 8, !tbaa !7\l  %243 = getelementptr inbounds double, double addrspace(1)* %2, i64 %239\l  store double 1.000000e+00, double addrspace(1)* %243, align 8, !tbaa !7\l  br label %244\l}"];
	Node0x5932bd0 -> Node0x5932c60;
	Node0x5932c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%244:\l244:                                              \l  ret void\l}"];
}
