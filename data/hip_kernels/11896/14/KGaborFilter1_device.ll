; ModuleID = '../data/hip_kernels/11896/14/main.cu'
source_filename = "../data/hip_kernels/11896/14/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly
define protected amdgpu_kernel void @_Z13KGaborFilter1PdS_iidddd(double addrspace(1)* nocapture writeonly %0, double addrspace(1)* nocapture writeonly %1, i32 %2, i32 %3, double %4, double %5, double %6, double %7) local_unnamed_addr #0 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4
  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*
  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5
  %14 = zext i16 %13 to i32
  %15 = mul i32 %9, %14
  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %17 = add i32 %15, %16
  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()
  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6
  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*
  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5
  %22 = zext i16 %21 to i32
  %23 = mul i32 %18, %22
  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6
  %25 = add i32 %23, %24
  %26 = icmp slt i32 %17, %2
  %27 = icmp slt i32 %25, %3
  %28 = select i1 %26, i1 %27, i1 false
  br i1 %28, label %29, label %1323

29:                                               ; preds = %8
  %30 = sdiv i32 %2, 2
  %31 = icmp sgt i32 %17, %30
  %32 = sub nsw i32 %2, %17
  %33 = select i1 %31, i32 %32, i32 %17
  %34 = sitofp i32 %33 to double
  %35 = sdiv i32 %3, 2
  %36 = icmp sgt i32 %25, %35
  %37 = sub nsw i32 %3, %25
  %38 = select i1 %36, i32 %37, i32 %25
  %39 = sitofp i32 %38 to double
  %40 = fmul contract double %34, %34
  %41 = fmul contract double %39, %39
  %42 = fadd contract double %40, %41
  %43 = fcmp olt double %42, 0x1000000000000000
  %44 = select i1 %43, double 0x4FF0000000000000, double 1.000000e+00
  %45 = fmul double %42, %44
  %46 = tail call double @llvm.amdgcn.rsq.f64(double %45)
  %47 = fmul double %45, %46
  %48 = fmul double %46, 5.000000e-01
  %49 = fneg double %48
  %50 = tail call double @llvm.fma.f64(double %49, double %47, double 5.000000e-01)
  %51 = tail call double @llvm.fma.f64(double %48, double %50, double %48)
  %52 = tail call double @llvm.fma.f64(double %47, double %50, double %47)
  %53 = fneg double %52
  %54 = tail call double @llvm.fma.f64(double %53, double %52, double %45)
  %55 = tail call double @llvm.fma.f64(double %54, double %51, double %52)
  %56 = fneg double %55
  %57 = tail call double @llvm.fma.f64(double %56, double %55, double %45)
  %58 = tail call double @llvm.fma.f64(double %57, double %51, double %55)
  %59 = select i1 %43, double 0x37F0000000000000, double 1.000000e+00
  %60 = fmul double %59, %58
  %61 = fcmp oeq double %45, 0.000000e+00
  %62 = fcmp oeq double %45, 0x7FF0000000000000
  %63 = or i1 %61, %62
  %64 = select i1 %63, double %45, double %60
  %65 = fadd contract double %64, 0x3EB0C6F7A0B5ED8D
  %66 = icmp sgt i32 %33, 0
  br i1 %66, label %67, label %114

67:                                               ; preds = %29
  %68 = tail call double @llvm.fabs.f64(double %39)
  %69 = tail call double @llvm.fabs.f64(double %34)
  %70 = tail call double @llvm.maxnum.f64(double %69, double %68)
  %71 = tail call double @llvm.minnum.f64(double %69, double %68)
  %72 = fdiv double %71, %70
  %73 = fmul double %72, %72
  %74 = tail call double @llvm.fma.f64(double %73, double 0x3EEBA404B5E68A13, double 0xBF23E260BD3237F4)
  %75 = tail call double @llvm.fma.f64(double %73, double %74, double 0x3F4B2BB069EFB384)
  %76 = tail call double @llvm.fma.f64(double %73, double %75, double 0xBF67952DAF56DE9B)
  %77 = tail call double @llvm.fma.f64(double %73, double %76, double 0x3F7D6D43A595C56F)
  %78 = tail call double @llvm.fma.f64(double %73, double %77, double 0xBF8C6EA4A57D9582)
  %79 = tail call double @llvm.fma.f64(double %73, double %78, double 0x3F967E295F08B19F)
  %80 = tail call double @llvm.fma.f64(double %73, double %79, double 0xBF9E9AE6FC27006A)
  %81 = tail call double @llvm.fma.f64(double %73, double %80, double 0x3FA2C15B5711927A)
  %82 = tail call double @llvm.fma.f64(double %73, double %81, double 0xBFA59976E82D3FF0)
  %83 = tail call double @llvm.fma.f64(double %73, double %82, double 0x3FA82D5D6EF28734)
  %84 = tail call double @llvm.fma.f64(double %73, double %83, double 0xBFAAE5CE6A214619)
  %85 = tail call double @llvm.fma.f64(double %73, double %84, double 0x3FAE1BB48427B883)
  %86 = tail call double @llvm.fma.f64(double %73, double %85, double 0xBFB110E48B207F05)
  %87 = tail call double @llvm.fma.f64(double %73, double %86, double 0x3FB3B13657B87036)
  %88 = tail call double @llvm.fma.f64(double %73, double %87, double 0xBFB745D119378E4F)
  %89 = tail call double @llvm.fma.f64(double %73, double %88, double 0x3FBC71C717E1913C)
  %90 = tail call double @llvm.fma.f64(double %73, double %89, double 0xBFC2492492376B7D)
  %91 = tail call double @llvm.fma.f64(double %73, double %90, double 0x3FC99999999952CC)
  %92 = tail call double @llvm.fma.f64(double %73, double %91, double 0xBFD5555555555523)
  %93 = fmul double %73, %92
  %94 = tail call double @llvm.fma.f64(double %72, double %93, double %72)
  %95 = bitcast double %34 to <2 x i32>
  %96 = extractelement <2 x i32> %95, i64 1
  %97 = icmp slt i32 %96, 0
  %98 = fsub double 0x3FF921FB54442D18, %94
  %99 = fcmp olt double %69, %68
  %100 = select i1 %99, double %98, double %94
  %101 = fcmp oeq double %68, 0x7FF0000000000000
  %102 = fcmp oeq double %69, 0x7FF0000000000000
  %103 = and i1 %102, %101
  %104 = select i1 %97, double 0x4002D97C7F3321D2, double 0x3FE921FB54442D18
  %105 = tail call double @llvm.copysign.f64(double %104, double %39)
  %106 = icmp eq i32 %38, 0
  %107 = select i1 %97, double 0x400921FB54442D18, double 0.000000e+00
  %108 = fsub double 0x400921FB54442D18, %100
  %109 = select i1 %97, double %108, double %100
  %110 = select i1 %106, double %107, double %109
  %111 = select i1 %103, double %105, double %110
  %112 = tail call double @llvm.copysign.f64(double %111, double %39)
  %113 = fmul contract double %112, 2.000000e+00
  br label %114

114:                                              ; preds = %29, %67
  %115 = phi double [ %113, %67 ], [ 0x400921FB60000000, %29 ]
  %116 = tail call double @llvm.fabs.f64(double %115)
  %117 = fcmp olt double %116, 0x41D0000000000000
  br i1 %117, label %118, label %137

118:                                              ; preds = %114
  %119 = fmul double %116, 0x3FE45F306DC9C883
  %120 = tail call double @llvm.rint.f64(double %119)
  %121 = tail call double @llvm.fma.f64(double %120, double 0xBFF921FB54442D18, double %116)
  %122 = tail call double @llvm.fma.f64(double %120, double 0xBC91A62633145C00, double %121)
  %123 = fmul double %120, 0x3C91A62633145C00
  %124 = fneg double %123
  %125 = tail call double @llvm.fma.f64(double %120, double 0x3C91A62633145C00, double %124)
  %126 = fsub double %121, %123
  %127 = fsub double %121, %126
  %128 = fsub double %127, %123
  %129 = fsub double %126, %122
  %130 = fadd double %129, %128
  %131 = fsub double %130, %125
  %132 = tail call double @llvm.fma.f64(double %120, double 0xB97B839A252049C0, double %131)
  %133 = fadd double %122, %132
  %134 = fsub double %133, %122
  %135 = fsub double %132, %134
  %136 = fptosi double %120 to i32
  br label %213

137:                                              ; preds = %114
  %138 = tail call double @llvm.amdgcn.trig.preop.f64(double %116, i32 0)
  %139 = tail call double @llvm.amdgcn.trig.preop.f64(double %116, i32 1)
  %140 = tail call double @llvm.amdgcn.trig.preop.f64(double %116, i32 2)
  %141 = fcmp oge double %116, 0x7B00000000000000
  %142 = tail call double @llvm.amdgcn.ldexp.f64(double %116, i32 -128)
  %143 = select i1 %141, double %142, double %116
  %144 = fmul double %140, %143
  %145 = fneg double %144
  %146 = tail call double @llvm.fma.f64(double %140, double %143, double %145)
  %147 = fmul double %139, %143
  %148 = fneg double %147
  %149 = tail call double @llvm.fma.f64(double %139, double %143, double %148)
  %150 = fmul double %138, %143
  %151 = fneg double %150
  %152 = tail call double @llvm.fma.f64(double %138, double %143, double %151)
  %153 = fadd double %147, %152
  %154 = fsub double %153, %147
  %155 = fsub double %153, %154
  %156 = fsub double %152, %154
  %157 = fsub double %147, %155
  %158 = fadd double %156, %157
  %159 = fadd double %144, %149
  %160 = fsub double %159, %144
  %161 = fsub double %159, %160
  %162 = fsub double %149, %160
  %163 = fsub double %144, %161
  %164 = fadd double %162, %163
  %165 = fadd double %159, %158
  %166 = fsub double %165, %159
  %167 = fsub double %165, %166
  %168 = fsub double %158, %166
  %169 = fsub double %159, %167
  %170 = fadd double %168, %169
  %171 = fadd double %164, %170
  %172 = fadd double %146, %171
  %173 = fadd double %150, %153
  %174 = fsub double %173, %150
  %175 = fsub double %153, %174
  %176 = fadd double %175, %165
  %177 = fsub double %176, %175
  %178 = fsub double %165, %177
  %179 = fadd double %178, %172
  %180 = tail call double @llvm.amdgcn.ldexp.f64(double %173, i32 -2)
  %181 = tail call double @llvm.amdgcn.fract.f64(double %180)
  %182 = tail call i1 @llvm.amdgcn.class.f64(double %180, i32 516)
  %183 = select i1 %182, double 0.000000e+00, double %181
  %184 = tail call double @llvm.amdgcn.ldexp.f64(double %183, i32 2)
  %185 = fadd double %184, %176
  %186 = fcmp olt double %185, 0.000000e+00
  %187 = select i1 %186, double 4.000000e+00, double 0.000000e+00
  %188 = fadd double %184, %187
  %189 = fadd double %176, %188
  %190 = fptosi double %189 to i32
  %191 = sitofp i32 %190 to double
  %192 = fsub double %188, %191
  %193 = fadd double %176, %192
  %194 = fsub double %193, %192
  %195 = fsub double %176, %194
  %196 = fadd double %179, %195
  %197 = fcmp oge double %193, 5.000000e-01
  %198 = zext i1 %197 to i32
  %199 = add nsw i32 %198, %190
  %200 = select i1 %197, double 1.000000e+00, double 0.000000e+00
  %201 = fsub double %193, %200
  %202 = fadd double %201, %196
  %203 = fsub double %202, %201
  %204 = fsub double %196, %203
  %205 = fmul double %202, 0x3FF921FB54442D18
  %206 = fneg double %205
  %207 = tail call double @llvm.fma.f64(double %202, double 0x3FF921FB54442D18, double %206)
  %208 = tail call double @llvm.fma.f64(double %202, double 0x3C91A62633145C07, double %207)
  %209 = tail call double @llvm.fma.f64(double %204, double 0x3FF921FB54442D18, double %208)
  %210 = fadd double %205, %209
  %211 = fsub double %210, %205
  %212 = fsub double %209, %211
  br label %213

213:                                              ; preds = %118, %137
  %214 = phi double [ %135, %118 ], [ %212, %137 ]
  %215 = phi double [ %133, %118 ], [ %210, %137 ]
  %216 = phi i32 [ %136, %118 ], [ %199, %137 ]
  %217 = fmul double %215, %215
  %218 = fmul double %217, 5.000000e-01
  %219 = fsub double 1.000000e+00, %218
  %220 = fsub double 1.000000e+00, %219
  %221 = fsub double %220, %218
  %222 = fmul double %217, %217
  %223 = tail call double @llvm.fma.f64(double %217, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %224 = tail call double @llvm.fma.f64(double %217, double %223, double 0xBE927E4FA17F65F6)
  %225 = tail call double @llvm.fma.f64(double %217, double %224, double 0x3EFA01A019F4EC90)
  %226 = tail call double @llvm.fma.f64(double %217, double %225, double 0xBF56C16C16C16967)
  %227 = tail call double @llvm.fma.f64(double %217, double %226, double 0x3FA5555555555555)
  %228 = fneg double %214
  %229 = tail call double @llvm.fma.f64(double %215, double %228, double %221)
  %230 = tail call double @llvm.fma.f64(double %222, double %227, double %229)
  %231 = fadd double %219, %230
  %232 = tail call double @llvm.fma.f64(double %217, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %233 = tail call double @llvm.fma.f64(double %217, double %232, double 0x3EC71DE3796CDE01)
  %234 = tail call double @llvm.fma.f64(double %217, double %233, double 0xBF2A01A019E83E5C)
  %235 = tail call double @llvm.fma.f64(double %217, double %234, double 0x3F81111111110BB3)
  %236 = fneg double %217
  %237 = fmul double %215, %236
  %238 = fmul double %214, 5.000000e-01
  %239 = tail call double @llvm.fma.f64(double %237, double %235, double %238)
  %240 = tail call double @llvm.fma.f64(double %217, double %239, double %228)
  %241 = tail call double @llvm.fma.f64(double %237, double 0xBFC5555555555555, double %240)
  %242 = fsub double %215, %241
  %243 = fneg double %242
  %244 = and i32 %216, 1
  %245 = icmp eq i32 %244, 0
  %246 = select i1 %245, double %231, double %243
  %247 = bitcast double %246 to <2 x i32>
  %248 = shl i32 %216, 30
  %249 = and i32 %248, -2147483648
  %250 = extractelement <2 x i32> %247, i64 1
  %251 = xor i32 %250, %249
  %252 = insertelement <2 x i32> %247, i32 %251, i64 1
  %253 = tail call i1 @llvm.amdgcn.class.f64(double %116, i32 504)
  %254 = select i1 %253, <2 x i32> %252, <2 x i32> <i32 0, i32 2146959360>
  %255 = bitcast <2 x i32> %254 to double
  %256 = tail call double @llvm.fabs.f64(double %7)
  %257 = tail call double @llvm.amdgcn.frexp.mant.f64(double %256)
  %258 = fcmp olt double %257, 0x3FE5555555555555
  %259 = zext i1 %258 to i32
  %260 = tail call double @llvm.amdgcn.ldexp.f64(double %257, i32 %259)
  %261 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %256)
  %262 = sub nsw i32 %261, %259
  %263 = fadd double %260, -1.000000e+00
  %264 = fadd double %260, 1.000000e+00
  %265 = fadd double %264, -1.000000e+00
  %266 = fsub double %260, %265
  %267 = tail call double @llvm.amdgcn.rcp.f64(double %264)
  %268 = fneg double %264
  %269 = tail call double @llvm.fma.f64(double %268, double %267, double 1.000000e+00)
  %270 = tail call double @llvm.fma.f64(double %269, double %267, double %267)
  %271 = tail call double @llvm.fma.f64(double %268, double %270, double 1.000000e+00)
  %272 = tail call double @llvm.fma.f64(double %271, double %270, double %270)
  %273 = fmul double %263, %272
  %274 = fmul double %264, %273
  %275 = fneg double %274
  %276 = tail call double @llvm.fma.f64(double %273, double %264, double %275)
  %277 = tail call double @llvm.fma.f64(double %273, double %266, double %276)
  %278 = fadd double %274, %277
  %279 = fsub double %278, %274
  %280 = fsub double %277, %279
  %281 = fsub double %263, %278
  %282 = fsub double %263, %281
  %283 = fsub double %282, %278
  %284 = fsub double %283, %280
  %285 = fadd double %281, %284
  %286 = fmul double %272, %285
  %287 = fadd double %273, %286
  %288 = fsub double %287, %273
  %289 = fsub double %286, %288
  %290 = fmul double %287, %287
  %291 = fneg double %290
  %292 = tail call double @llvm.fma.f64(double %287, double %287, double %291)
  %293 = fmul double %289, 2.000000e+00
  %294 = tail call double @llvm.fma.f64(double %287, double %293, double %292)
  %295 = fadd double %290, %294
  %296 = fsub double %295, %290
  %297 = fsub double %294, %296
  %298 = tail call double @llvm.fma.f64(double %295, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %299 = tail call double @llvm.fma.f64(double %295, double %298, double 0x3FBE25E43ABE935A)
  %300 = tail call double @llvm.fma.f64(double %295, double %299, double 0x3FC110EF47E6C9C2)
  %301 = tail call double @llvm.fma.f64(double %295, double %300, double 0x3FC3B13BCFA74449)
  %302 = tail call double @llvm.fma.f64(double %295, double %301, double 0x3FC745D171BF3C30)
  %303 = tail call double @llvm.fma.f64(double %295, double %302, double 0x3FCC71C71C7792CE)
  %304 = tail call double @llvm.fma.f64(double %295, double %303, double 0x3FD24924924920DA)
  %305 = tail call double @llvm.fma.f64(double %295, double %304, double 0x3FD999999999999C)
  %306 = sitofp i32 %262 to double
  %307 = fmul double %306, 0x3FE62E42FEFA39EF
  %308 = fneg double %307
  %309 = tail call double @llvm.fma.f64(double %306, double 0x3FE62E42FEFA39EF, double %308)
  %310 = tail call double @llvm.fma.f64(double %306, double 0x3C7ABC9E3B39803F, double %309)
  %311 = fadd double %307, %310
  %312 = fsub double %311, %307
  %313 = fsub double %310, %312
  %314 = tail call double @llvm.amdgcn.ldexp.f64(double %287, i32 1)
  %315 = tail call double @llvm.amdgcn.ldexp.f64(double %289, i32 1)
  %316 = fmul double %287, %295
  %317 = fneg double %316
  %318 = tail call double @llvm.fma.f64(double %295, double %287, double %317)
  %319 = tail call double @llvm.fma.f64(double %295, double %289, double %318)
  %320 = tail call double @llvm.fma.f64(double %297, double %287, double %319)
  %321 = fadd double %316, %320
  %322 = fsub double %321, %316
  %323 = fsub double %320, %322
  %324 = fmul double %295, %305
  %325 = fneg double %324
  %326 = tail call double @llvm.fma.f64(double %295, double %305, double %325)
  %327 = tail call double @llvm.fma.f64(double %297, double %305, double %326)
  %328 = fadd double %324, %327
  %329 = fsub double %328, %324
  %330 = fsub double %327, %329
  %331 = fadd double %328, 0x3FE5555555555555
  %332 = fadd double %331, 0xBFE5555555555555
  %333 = fsub double %328, %332
  %334 = fadd double %330, 0x3C8543B0D5DF274D
  %335 = fadd double %334, %333
  %336 = fadd double %331, %335
  %337 = fsub double %336, %331
  %338 = fsub double %335, %337
  %339 = fmul double %321, %336
  %340 = fneg double %339
  %341 = tail call double @llvm.fma.f64(double %321, double %336, double %340)
  %342 = tail call double @llvm.fma.f64(double %321, double %338, double %341)
  %343 = tail call double @llvm.fma.f64(double %323, double %336, double %342)
  %344 = fadd double %339, %343
  %345 = fsub double %344, %339
  %346 = fsub double %343, %345
  %347 = fadd double %314, %344
  %348 = fsub double %347, %314
  %349 = fsub double %344, %348
  %350 = fadd double %315, %346
  %351 = fadd double %350, %349
  %352 = fadd double %347, %351
  %353 = fsub double %352, %347
  %354 = fsub double %351, %353
  %355 = fadd double %311, %352
  %356 = fsub double %355, %311
  %357 = fsub double %355, %356
  %358 = fsub double %311, %357
  %359 = fsub double %352, %356
  %360 = fadd double %359, %358
  %361 = fadd double %313, %354
  %362 = fsub double %361, %313
  %363 = fsub double %361, %362
  %364 = fsub double %313, %363
  %365 = fsub double %354, %362
  %366 = fadd double %365, %364
  %367 = fadd double %361, %360
  %368 = fadd double %355, %367
  %369 = fsub double %368, %355
  %370 = fsub double %367, %369
  %371 = fadd double %366, %370
  %372 = fadd double %368, %371
  %373 = fsub double %372, %368
  %374 = fsub double %371, %373
  %375 = fmul double %372, 2.000000e+00
  %376 = fneg double %375
  %377 = tail call double @llvm.fma.f64(double %372, double 2.000000e+00, double %376)
  %378 = tail call double @llvm.fma.f64(double %374, double 2.000000e+00, double %377)
  %379 = fadd double %375, %378
  %380 = fsub double %379, %375
  %381 = fsub double %378, %380
  %382 = tail call double @llvm.fabs.f64(double %375) #3
  %383 = fcmp oeq double %382, 0x7FF0000000000000
  %384 = select i1 %383, double %375, double %379
  %385 = tail call double @llvm.fabs.f64(double %384) #3
  %386 = fcmp oeq double %385, 0x7FF0000000000000
  %387 = select i1 %386, double 0.000000e+00, double %381
  %388 = fmul double %384, 0x3FF71547652B82FE
  %389 = tail call double @llvm.rint.f64(double %388)
  %390 = fneg double %389
  %391 = tail call double @llvm.fma.f64(double %390, double 0x3FE62E42FEFA39EF, double %384)
  %392 = tail call double @llvm.fma.f64(double %390, double 0x3C7ABC9E3B39803F, double %391)
  %393 = tail call double @llvm.fma.f64(double %392, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %394 = tail call double @llvm.fma.f64(double %392, double %393, double 0x3EC71DEE623FDE64)
  %395 = tail call double @llvm.fma.f64(double %392, double %394, double 0x3EFA01997C89E6B0)
  %396 = tail call double @llvm.fma.f64(double %392, double %395, double 0x3F2A01A014761F6E)
  %397 = tail call double @llvm.fma.f64(double %392, double %396, double 0x3F56C16C1852B7B0)
  %398 = tail call double @llvm.fma.f64(double %392, double %397, double 0x3F81111111122322)
  %399 = tail call double @llvm.fma.f64(double %392, double %398, double 0x3FA55555555502A1)
  %400 = tail call double @llvm.fma.f64(double %392, double %399, double 0x3FC5555555555511)
  %401 = tail call double @llvm.fma.f64(double %392, double %400, double 0x3FE000000000000B)
  %402 = tail call double @llvm.fma.f64(double %392, double %401, double 1.000000e+00)
  %403 = tail call double @llvm.fma.f64(double %392, double %402, double 1.000000e+00)
  %404 = fptosi double %389 to i32
  %405 = tail call double @llvm.amdgcn.ldexp.f64(double %403, i32 %404)
  %406 = fcmp ogt double %384, 1.024000e+03
  %407 = select i1 %406, double 0x7FF0000000000000, double %405
  %408 = fcmp olt double %384, -1.075000e+03
  %409 = select i1 %408, double 0.000000e+00, double %407
  %410 = tail call double @llvm.fma.f64(double %409, double %387, double %409)
  %411 = tail call double @llvm.fabs.f64(double %409) #3
  %412 = fcmp oeq double %411, 0x7FF0000000000000
  %413 = select i1 %412, double %409, double %410
  %414 = tail call double @llvm.fabs.f64(double %413)
  %415 = fcmp oeq double %256, 0x7FF0000000000000
  %416 = fcmp oeq double %7, 0.000000e+00
  %417 = fcmp uno double %7, 0.000000e+00
  %418 = fmul contract double %414, 4.000000e+00
  %419 = select i1 %415, double 0x7FF0000000000000, double %418
  %420 = select i1 %416, double 0.000000e+00, double %419
  %421 = select i1 %417, double 0x7FF8000000000000, double %420
  %422 = fdiv contract double %255, %421
  %423 = fmul double %422, 0x3FF71547652B82FE
  %424 = tail call double @llvm.rint.f64(double %423)
  %425 = fneg double %424
  %426 = tail call double @llvm.fma.f64(double %425, double 0x3FE62E42FEFA39EF, double %422)
  %427 = tail call double @llvm.fma.f64(double %425, double 0x3C7ABC9E3B39803F, double %426)
  %428 = tail call double @llvm.fma.f64(double %427, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %429 = tail call double @llvm.fma.f64(double %427, double %428, double 0x3EC71DEE623FDE64)
  %430 = tail call double @llvm.fma.f64(double %427, double %429, double 0x3EFA01997C89E6B0)
  %431 = tail call double @llvm.fma.f64(double %427, double %430, double 0x3F2A01A014761F6E)
  %432 = tail call double @llvm.fma.f64(double %427, double %431, double 0x3F56C16C1852B7B0)
  %433 = tail call double @llvm.fma.f64(double %427, double %432, double 0x3F81111111122322)
  %434 = tail call double @llvm.fma.f64(double %427, double %433, double 0x3FA55555555502A1)
  %435 = tail call double @llvm.fma.f64(double %427, double %434, double 0x3FC5555555555511)
  %436 = tail call double @llvm.fma.f64(double %427, double %435, double 0x3FE000000000000B)
  %437 = tail call double @llvm.fma.f64(double %427, double %436, double 1.000000e+00)
  %438 = tail call double @llvm.fma.f64(double %427, double %437, double 1.000000e+00)
  %439 = fptosi double %424 to i32
  %440 = tail call double @llvm.amdgcn.ldexp.f64(double %438, i32 %439)
  %441 = fcmp ogt double %422, 1.024000e+03
  %442 = select i1 %441, double 0x7FF0000000000000, double %440
  %443 = fcmp olt double %422, -1.075000e+03
  %444 = select i1 %443, double 0.000000e+00, double %442
  %445 = fdiv contract double %65, %5
  %446 = tail call double @llvm.amdgcn.frexp.mant.f64(double %445)
  %447 = fcmp olt double %446, 0x3FE5555555555555
  %448 = zext i1 %447 to i32
  %449 = tail call double @llvm.amdgcn.ldexp.f64(double %446, i32 %448)
  %450 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %445)
  %451 = sub nsw i32 %450, %448
  %452 = fadd double %449, -1.000000e+00
  %453 = fadd double %449, 1.000000e+00
  %454 = fadd double %453, -1.000000e+00
  %455 = fsub double %449, %454
  %456 = tail call double @llvm.amdgcn.rcp.f64(double %453)
  %457 = fneg double %453
  %458 = tail call double @llvm.fma.f64(double %457, double %456, double 1.000000e+00)
  %459 = tail call double @llvm.fma.f64(double %458, double %456, double %456)
  %460 = tail call double @llvm.fma.f64(double %457, double %459, double 1.000000e+00)
  %461 = tail call double @llvm.fma.f64(double %460, double %459, double %459)
  %462 = fmul double %452, %461
  %463 = fmul double %453, %462
  %464 = fneg double %463
  %465 = tail call double @llvm.fma.f64(double %462, double %453, double %464)
  %466 = tail call double @llvm.fma.f64(double %462, double %455, double %465)
  %467 = fadd double %463, %466
  %468 = fsub double %467, %463
  %469 = fsub double %466, %468
  %470 = fsub double %452, %467
  %471 = fsub double %452, %470
  %472 = fsub double %471, %467
  %473 = fsub double %472, %469
  %474 = fadd double %470, %473
  %475 = fmul double %461, %474
  %476 = fadd double %462, %475
  %477 = fsub double %476, %462
  %478 = fsub double %475, %477
  %479 = fmul double %476, %476
  %480 = tail call double @llvm.fma.f64(double %479, double 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)
  %481 = tail call double @llvm.fma.f64(double %479, double %480, double 0x3FC7474DD7F4DF2E)
  %482 = tail call double @llvm.fma.f64(double %479, double %481, double 0x3FCC71C016291751)
  %483 = tail call double @llvm.fma.f64(double %479, double %482, double 0x3FD249249B27ACF1)
  %484 = tail call double @llvm.fma.f64(double %479, double %483, double 0x3FD99999998EF7B6)
  %485 = tail call double @llvm.fma.f64(double %479, double %484, double 0x3FE5555555555780)
  %486 = tail call double @llvm.amdgcn.ldexp.f64(double %476, i32 1)
  %487 = tail call double @llvm.amdgcn.ldexp.f64(double %478, i32 1)
  %488 = fmul double %476, %479
  %489 = fmul double %488, %485
  %490 = fadd double %486, %489
  %491 = fsub double %490, %486
  %492 = fsub double %489, %491
  %493 = fadd double %487, %492
  %494 = fadd double %490, %493
  %495 = fsub double %494, %490
  %496 = fsub double %493, %495
  %497 = sitofp i32 %451 to double
  %498 = fmul double %497, 0x3FE62E42FEFA39EF
  %499 = fneg double %498
  %500 = tail call double @llvm.fma.f64(double %497, double 0x3FE62E42FEFA39EF, double %499)
  %501 = tail call double @llvm.fma.f64(double %497, double 0x3C7ABC9E3B39803F, double %500)
  %502 = fadd double %498, %501
  %503 = fsub double %502, %498
  %504 = fsub double %501, %503
  %505 = fadd double %502, %494
  %506 = fsub double %505, %502
  %507 = fsub double %505, %506
  %508 = fsub double %502, %507
  %509 = fsub double %494, %506
  %510 = fadd double %509, %508
  %511 = fadd double %504, %496
  %512 = fsub double %511, %504
  %513 = fsub double %511, %512
  %514 = fsub double %504, %513
  %515 = fsub double %496, %512
  %516 = fadd double %515, %514
  %517 = fadd double %511, %510
  %518 = fadd double %505, %517
  %519 = fsub double %518, %505
  %520 = fsub double %517, %519
  %521 = fadd double %516, %520
  %522 = fadd double %518, %521
  %523 = tail call double @llvm.fabs.f64(double %445) #3
  %524 = fcmp oeq double %523, 0x7FF0000000000000
  %525 = select i1 %524, double %445, double %522
  %526 = fcmp olt double %445, 0.000000e+00
  %527 = select i1 %526, double 0x7FF8000000000000, double %525
  %528 = fcmp oeq double %445, 0.000000e+00
  %529 = select i1 %528, double 0xFFF0000000000000, double %527
  %530 = tail call double @llvm.fabs.f64(double %529)
  %531 = tail call double @llvm.amdgcn.frexp.mant.f64(double %530)
  %532 = fcmp olt double %531, 0x3FE5555555555555
  %533 = zext i1 %532 to i32
  %534 = tail call double @llvm.amdgcn.ldexp.f64(double %531, i32 %533)
  %535 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %530)
  %536 = sub nsw i32 %535, %533
  %537 = fadd double %534, -1.000000e+00
  %538 = fadd double %534, 1.000000e+00
  %539 = fadd double %538, -1.000000e+00
  %540 = fsub double %534, %539
  %541 = tail call double @llvm.amdgcn.rcp.f64(double %538)
  %542 = fneg double %538
  %543 = tail call double @llvm.fma.f64(double %542, double %541, double 1.000000e+00)
  %544 = tail call double @llvm.fma.f64(double %543, double %541, double %541)
  %545 = tail call double @llvm.fma.f64(double %542, double %544, double 1.000000e+00)
  %546 = tail call double @llvm.fma.f64(double %545, double %544, double %544)
  %547 = fmul double %537, %546
  %548 = fmul double %538, %547
  %549 = fneg double %548
  %550 = tail call double @llvm.fma.f64(double %547, double %538, double %549)
  %551 = tail call double @llvm.fma.f64(double %547, double %540, double %550)
  %552 = fadd double %548, %551
  %553 = fsub double %552, %548
  %554 = fsub double %551, %553
  %555 = fsub double %537, %552
  %556 = fsub double %537, %555
  %557 = fsub double %556, %552
  %558 = fsub double %557, %554
  %559 = fadd double %555, %558
  %560 = fmul double %546, %559
  %561 = fadd double %547, %560
  %562 = fsub double %561, %547
  %563 = fsub double %560, %562
  %564 = fmul double %561, %561
  %565 = fneg double %564
  %566 = tail call double @llvm.fma.f64(double %561, double %561, double %565)
  %567 = fmul double %563, 2.000000e+00
  %568 = tail call double @llvm.fma.f64(double %561, double %567, double %566)
  %569 = fadd double %564, %568
  %570 = fsub double %569, %564
  %571 = fsub double %568, %570
  %572 = tail call double @llvm.fma.f64(double %569, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %573 = tail call double @llvm.fma.f64(double %569, double %572, double 0x3FBE25E43ABE935A)
  %574 = tail call double @llvm.fma.f64(double %569, double %573, double 0x3FC110EF47E6C9C2)
  %575 = tail call double @llvm.fma.f64(double %569, double %574, double 0x3FC3B13BCFA74449)
  %576 = tail call double @llvm.fma.f64(double %569, double %575, double 0x3FC745D171BF3C30)
  %577 = tail call double @llvm.fma.f64(double %569, double %576, double 0x3FCC71C71C7792CE)
  %578 = tail call double @llvm.fma.f64(double %569, double %577, double 0x3FD24924924920DA)
  %579 = tail call double @llvm.fma.f64(double %569, double %578, double 0x3FD999999999999C)
  %580 = sitofp i32 %536 to double
  %581 = fmul double %580, 0x3FE62E42FEFA39EF
  %582 = fneg double %581
  %583 = tail call double @llvm.fma.f64(double %580, double 0x3FE62E42FEFA39EF, double %582)
  %584 = tail call double @llvm.fma.f64(double %580, double 0x3C7ABC9E3B39803F, double %583)
  %585 = fadd double %581, %584
  %586 = fsub double %585, %581
  %587 = fsub double %584, %586
  %588 = tail call double @llvm.amdgcn.ldexp.f64(double %561, i32 1)
  %589 = tail call double @llvm.amdgcn.ldexp.f64(double %563, i32 1)
  %590 = fmul double %561, %569
  %591 = fneg double %590
  %592 = tail call double @llvm.fma.f64(double %569, double %561, double %591)
  %593 = tail call double @llvm.fma.f64(double %569, double %563, double %592)
  %594 = tail call double @llvm.fma.f64(double %571, double %561, double %593)
  %595 = fadd double %590, %594
  %596 = fsub double %595, %590
  %597 = fsub double %594, %596
  %598 = fmul double %569, %579
  %599 = fneg double %598
  %600 = tail call double @llvm.fma.f64(double %569, double %579, double %599)
  %601 = tail call double @llvm.fma.f64(double %571, double %579, double %600)
  %602 = fadd double %598, %601
  %603 = fsub double %602, %598
  %604 = fsub double %601, %603
  %605 = fadd double %602, 0x3FE5555555555555
  %606 = fadd double %605, 0xBFE5555555555555
  %607 = fsub double %602, %606
  %608 = fadd double %604, 0x3C8543B0D5DF274D
  %609 = fadd double %608, %607
  %610 = fadd double %605, %609
  %611 = fsub double %610, %605
  %612 = fsub double %609, %611
  %613 = fmul double %595, %610
  %614 = fneg double %613
  %615 = tail call double @llvm.fma.f64(double %595, double %610, double %614)
  %616 = tail call double @llvm.fma.f64(double %595, double %612, double %615)
  %617 = tail call double @llvm.fma.f64(double %597, double %610, double %616)
  %618 = fadd double %613, %617
  %619 = fsub double %618, %613
  %620 = fsub double %617, %619
  %621 = fadd double %588, %618
  %622 = fsub double %621, %588
  %623 = fsub double %618, %622
  %624 = fadd double %589, %620
  %625 = fadd double %624, %623
  %626 = fadd double %621, %625
  %627 = fsub double %626, %621
  %628 = fsub double %625, %627
  %629 = fadd double %585, %626
  %630 = fsub double %629, %585
  %631 = fsub double %629, %630
  %632 = fsub double %585, %631
  %633 = fsub double %626, %630
  %634 = fadd double %633, %632
  %635 = fadd double %587, %628
  %636 = fsub double %635, %587
  %637 = fsub double %635, %636
  %638 = fsub double %587, %637
  %639 = fsub double %628, %636
  %640 = fadd double %639, %638
  %641 = fadd double %635, %634
  %642 = fadd double %629, %641
  %643 = fsub double %642, %629
  %644 = fsub double %641, %643
  %645 = fadd double %640, %644
  %646 = fadd double %642, %645
  %647 = fsub double %646, %642
  %648 = fsub double %645, %647
  %649 = fmul double %646, 2.000000e+00
  %650 = fneg double %649
  %651 = tail call double @llvm.fma.f64(double %646, double 2.000000e+00, double %650)
  %652 = tail call double @llvm.fma.f64(double %648, double 2.000000e+00, double %651)
  %653 = fadd double %649, %652
  %654 = fsub double %653, %649
  %655 = fsub double %652, %654
  %656 = tail call double @llvm.fabs.f64(double %649) #3
  %657 = fcmp oeq double %656, 0x7FF0000000000000
  %658 = select i1 %657, double %649, double %653
  %659 = tail call double @llvm.fabs.f64(double %658) #3
  %660 = fcmp oeq double %659, 0x7FF0000000000000
  %661 = select i1 %660, double 0.000000e+00, double %655
  %662 = fmul double %658, 0x3FF71547652B82FE
  %663 = tail call double @llvm.rint.f64(double %662)
  %664 = fneg double %663
  %665 = tail call double @llvm.fma.f64(double %664, double 0x3FE62E42FEFA39EF, double %658)
  %666 = tail call double @llvm.fma.f64(double %664, double 0x3C7ABC9E3B39803F, double %665)
  %667 = tail call double @llvm.fma.f64(double %666, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %668 = tail call double @llvm.fma.f64(double %666, double %667, double 0x3EC71DEE623FDE64)
  %669 = tail call double @llvm.fma.f64(double %666, double %668, double 0x3EFA01997C89E6B0)
  %670 = tail call double @llvm.fma.f64(double %666, double %669, double 0x3F2A01A014761F6E)
  %671 = tail call double @llvm.fma.f64(double %666, double %670, double 0x3F56C16C1852B7B0)
  %672 = tail call double @llvm.fma.f64(double %666, double %671, double 0x3F81111111122322)
  %673 = tail call double @llvm.fma.f64(double %666, double %672, double 0x3FA55555555502A1)
  %674 = tail call double @llvm.fma.f64(double %666, double %673, double 0x3FC5555555555511)
  %675 = tail call double @llvm.fma.f64(double %666, double %674, double 0x3FE000000000000B)
  %676 = tail call double @llvm.fma.f64(double %666, double %675, double 1.000000e+00)
  %677 = tail call double @llvm.fma.f64(double %666, double %676, double 1.000000e+00)
  %678 = fptosi double %663 to i32
  %679 = tail call double @llvm.amdgcn.ldexp.f64(double %677, i32 %678)
  %680 = fcmp ogt double %658, 1.024000e+03
  %681 = select i1 %680, double 0x7FF0000000000000, double %679
  %682 = fcmp olt double %658, -1.075000e+03
  %683 = select i1 %682, double 0.000000e+00, double %681
  %684 = tail call double @llvm.fma.f64(double %683, double %661, double %683)
  %685 = tail call double @llvm.fabs.f64(double %683) #3
  %686 = fcmp oeq double %685, 0x7FF0000000000000
  %687 = select i1 %686, double %683, double %684
  %688 = tail call double @llvm.fabs.f64(double %687)
  %689 = fcmp oeq double %530, 0x7FF0000000000000
  %690 = fcmp oeq double %529, 0.000000e+00
  %691 = fcmp uno double %529, 0.000000e+00
  %692 = fmul contract double %688, -5.000000e-01
  %693 = select i1 %689, double 0xFFF0000000000000, double %692
  %694 = select i1 %690, double -0.000000e+00, double %693
  %695 = select i1 %691, double 0x7FF8000000000000, double %694
  %696 = tail call double @llvm.fabs.f64(double %6)
  %697 = tail call double @llvm.amdgcn.frexp.mant.f64(double %696)
  %698 = fcmp olt double %697, 0x3FE5555555555555
  %699 = zext i1 %698 to i32
  %700 = tail call double @llvm.amdgcn.ldexp.f64(double %697, i32 %699)
  %701 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %696)
  %702 = sub nsw i32 %701, %699
  %703 = fadd double %700, -1.000000e+00
  %704 = fadd double %700, 1.000000e+00
  %705 = fadd double %704, -1.000000e+00
  %706 = fsub double %700, %705
  %707 = tail call double @llvm.amdgcn.rcp.f64(double %704)
  %708 = fneg double %704
  %709 = tail call double @llvm.fma.f64(double %708, double %707, double 1.000000e+00)
  %710 = tail call double @llvm.fma.f64(double %709, double %707, double %707)
  %711 = tail call double @llvm.fma.f64(double %708, double %710, double 1.000000e+00)
  %712 = tail call double @llvm.fma.f64(double %711, double %710, double %710)
  %713 = fmul double %703, %712
  %714 = fmul double %704, %713
  %715 = fneg double %714
  %716 = tail call double @llvm.fma.f64(double %713, double %704, double %715)
  %717 = tail call double @llvm.fma.f64(double %713, double %706, double %716)
  %718 = fadd double %714, %717
  %719 = fsub double %718, %714
  %720 = fsub double %717, %719
  %721 = fsub double %703, %718
  %722 = fsub double %703, %721
  %723 = fsub double %722, %718
  %724 = fsub double %723, %720
  %725 = fadd double %721, %724
  %726 = fmul double %712, %725
  %727 = fadd double %713, %726
  %728 = fsub double %727, %713
  %729 = fsub double %726, %728
  %730 = fmul double %727, %727
  %731 = fneg double %730
  %732 = tail call double @llvm.fma.f64(double %727, double %727, double %731)
  %733 = fmul double %729, 2.000000e+00
  %734 = tail call double @llvm.fma.f64(double %727, double %733, double %732)
  %735 = fadd double %730, %734
  %736 = fsub double %735, %730
  %737 = fsub double %734, %736
  %738 = tail call double @llvm.fma.f64(double %735, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %739 = tail call double @llvm.fma.f64(double %735, double %738, double 0x3FBE25E43ABE935A)
  %740 = tail call double @llvm.fma.f64(double %735, double %739, double 0x3FC110EF47E6C9C2)
  %741 = tail call double @llvm.fma.f64(double %735, double %740, double 0x3FC3B13BCFA74449)
  %742 = tail call double @llvm.fma.f64(double %735, double %741, double 0x3FC745D171BF3C30)
  %743 = tail call double @llvm.fma.f64(double %735, double %742, double 0x3FCC71C71C7792CE)
  %744 = tail call double @llvm.fma.f64(double %735, double %743, double 0x3FD24924924920DA)
  %745 = tail call double @llvm.fma.f64(double %735, double %744, double 0x3FD999999999999C)
  %746 = sitofp i32 %702 to double
  %747 = fmul double %746, 0x3FE62E42FEFA39EF
  %748 = fneg double %747
  %749 = tail call double @llvm.fma.f64(double %746, double 0x3FE62E42FEFA39EF, double %748)
  %750 = tail call double @llvm.fma.f64(double %746, double 0x3C7ABC9E3B39803F, double %749)
  %751 = fadd double %747, %750
  %752 = fsub double %751, %747
  %753 = fsub double %750, %752
  %754 = tail call double @llvm.amdgcn.ldexp.f64(double %727, i32 1)
  %755 = tail call double @llvm.amdgcn.ldexp.f64(double %729, i32 1)
  %756 = fmul double %727, %735
  %757 = fneg double %756
  %758 = tail call double @llvm.fma.f64(double %735, double %727, double %757)
  %759 = tail call double @llvm.fma.f64(double %735, double %729, double %758)
  %760 = tail call double @llvm.fma.f64(double %737, double %727, double %759)
  %761 = fadd double %756, %760
  %762 = fsub double %761, %756
  %763 = fsub double %760, %762
  %764 = fmul double %735, %745
  %765 = fneg double %764
  %766 = tail call double @llvm.fma.f64(double %735, double %745, double %765)
  %767 = tail call double @llvm.fma.f64(double %737, double %745, double %766)
  %768 = fadd double %764, %767
  %769 = fsub double %768, %764
  %770 = fsub double %767, %769
  %771 = fadd double %768, 0x3FE5555555555555
  %772 = fadd double %771, 0xBFE5555555555555
  %773 = fsub double %768, %772
  %774 = fadd double %770, 0x3C8543B0D5DF274D
  %775 = fadd double %774, %773
  %776 = fadd double %771, %775
  %777 = fsub double %776, %771
  %778 = fsub double %775, %777
  %779 = fmul double %761, %776
  %780 = fneg double %779
  %781 = tail call double @llvm.fma.f64(double %761, double %776, double %780)
  %782 = tail call double @llvm.fma.f64(double %761, double %778, double %781)
  %783 = tail call double @llvm.fma.f64(double %763, double %776, double %782)
  %784 = fadd double %779, %783
  %785 = fsub double %784, %779
  %786 = fsub double %783, %785
  %787 = fadd double %754, %784
  %788 = fsub double %787, %754
  %789 = fsub double %784, %788
  %790 = fadd double %755, %786
  %791 = fadd double %790, %789
  %792 = fadd double %787, %791
  %793 = fsub double %792, %787
  %794 = fsub double %791, %793
  %795 = fadd double %751, %792
  %796 = fsub double %795, %751
  %797 = fsub double %795, %796
  %798 = fsub double %751, %797
  %799 = fsub double %792, %796
  %800 = fadd double %799, %798
  %801 = fadd double %753, %794
  %802 = fsub double %801, %753
  %803 = fsub double %801, %802
  %804 = fsub double %753, %803
  %805 = fsub double %794, %802
  %806 = fadd double %805, %804
  %807 = fadd double %801, %800
  %808 = fadd double %795, %807
  %809 = fsub double %808, %795
  %810 = fsub double %807, %809
  %811 = fadd double %806, %810
  %812 = fadd double %808, %811
  %813 = fsub double %812, %808
  %814 = fsub double %811, %813
  %815 = fmul double %812, 2.000000e+00
  %816 = fneg double %815
  %817 = tail call double @llvm.fma.f64(double %812, double 2.000000e+00, double %816)
  %818 = tail call double @llvm.fma.f64(double %814, double 2.000000e+00, double %817)
  %819 = fadd double %815, %818
  %820 = fsub double %819, %815
  %821 = fsub double %818, %820
  %822 = tail call double @llvm.fabs.f64(double %815) #3
  %823 = fcmp oeq double %822, 0x7FF0000000000000
  %824 = select i1 %823, double %815, double %819
  %825 = tail call double @llvm.fabs.f64(double %824) #3
  %826 = fcmp oeq double %825, 0x7FF0000000000000
  %827 = select i1 %826, double 0.000000e+00, double %821
  %828 = fmul double %824, 0x3FF71547652B82FE
  %829 = tail call double @llvm.rint.f64(double %828)
  %830 = fneg double %829
  %831 = tail call double @llvm.fma.f64(double %830, double 0x3FE62E42FEFA39EF, double %824)
  %832 = tail call double @llvm.fma.f64(double %830, double 0x3C7ABC9E3B39803F, double %831)
  %833 = tail call double @llvm.fma.f64(double %832, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %834 = tail call double @llvm.fma.f64(double %832, double %833, double 0x3EC71DEE623FDE64)
  %835 = tail call double @llvm.fma.f64(double %832, double %834, double 0x3EFA01997C89E6B0)
  %836 = tail call double @llvm.fma.f64(double %832, double %835, double 0x3F2A01A014761F6E)
  %837 = tail call double @llvm.fma.f64(double %832, double %836, double 0x3F56C16C1852B7B0)
  %838 = tail call double @llvm.fma.f64(double %832, double %837, double 0x3F81111111122322)
  %839 = tail call double @llvm.fma.f64(double %832, double %838, double 0x3FA55555555502A1)
  %840 = tail call double @llvm.fma.f64(double %832, double %839, double 0x3FC5555555555511)
  %841 = tail call double @llvm.fma.f64(double %832, double %840, double 0x3FE000000000000B)
  %842 = tail call double @llvm.fma.f64(double %832, double %841, double 1.000000e+00)
  %843 = tail call double @llvm.fma.f64(double %832, double %842, double 1.000000e+00)
  %844 = fptosi double %829 to i32
  %845 = tail call double @llvm.amdgcn.ldexp.f64(double %843, i32 %844)
  %846 = fcmp ogt double %824, 1.024000e+03
  %847 = select i1 %846, double 0x7FF0000000000000, double %845
  %848 = fcmp olt double %824, -1.075000e+03
  %849 = select i1 %848, double 0.000000e+00, double %847
  %850 = tail call double @llvm.fma.f64(double %849, double %827, double %849)
  %851 = tail call double @llvm.fabs.f64(double %849) #3
  %852 = fcmp oeq double %851, 0x7FF0000000000000
  %853 = select i1 %852, double %849, double %850
  %854 = tail call double @llvm.fabs.f64(double %853)
  %855 = fcmp oeq double %696, 0x7FF0000000000000
  %856 = fcmp oeq double %6, 0.000000e+00
  %857 = fcmp uno double %6, 0.000000e+00
  %858 = fadd contract double %854, 1.000000e+00
  %859 = select i1 %855, double 0x7FF0000000000000, double %858
  %860 = select i1 %856, double 1.000000e+00, double %859
  %861 = select i1 %857, double 0x7FF8000000000000, double %860
  %862 = tail call double @llvm.amdgcn.frexp.mant.f64(double %861)
  %863 = fcmp olt double %862, 0x3FE5555555555555
  %864 = zext i1 %863 to i32
  %865 = tail call double @llvm.amdgcn.ldexp.f64(double %862, i32 %864)
  %866 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %861)
  %867 = sub nsw i32 %866, %864
  %868 = fadd double %865, -1.000000e+00
  %869 = fadd double %865, 1.000000e+00
  %870 = fadd double %869, -1.000000e+00
  %871 = fsub double %865, %870
  %872 = tail call double @llvm.amdgcn.rcp.f64(double %869)
  %873 = fneg double %869
  %874 = tail call double @llvm.fma.f64(double %873, double %872, double 1.000000e+00)
  %875 = tail call double @llvm.fma.f64(double %874, double %872, double %872)
  %876 = tail call double @llvm.fma.f64(double %873, double %875, double 1.000000e+00)
  %877 = tail call double @llvm.fma.f64(double %876, double %875, double %875)
  %878 = fmul double %868, %877
  %879 = fmul double %869, %878
  %880 = fneg double %879
  %881 = tail call double @llvm.fma.f64(double %878, double %869, double %880)
  %882 = tail call double @llvm.fma.f64(double %878, double %871, double %881)
  %883 = fadd double %879, %882
  %884 = fsub double %883, %879
  %885 = fsub double %882, %884
  %886 = fsub double %868, %883
  %887 = fsub double %868, %886
  %888 = fsub double %887, %883
  %889 = fsub double %888, %885
  %890 = fadd double %886, %889
  %891 = fmul double %877, %890
  %892 = fadd double %878, %891
  %893 = fsub double %892, %878
  %894 = fsub double %891, %893
  %895 = fmul double %892, %892
  %896 = tail call double @llvm.fma.f64(double %895, double 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)
  %897 = tail call double @llvm.fma.f64(double %895, double %896, double 0x3FC7474DD7F4DF2E)
  %898 = tail call double @llvm.fma.f64(double %895, double %897, double 0x3FCC71C016291751)
  %899 = tail call double @llvm.fma.f64(double %895, double %898, double 0x3FD249249B27ACF1)
  %900 = tail call double @llvm.fma.f64(double %895, double %899, double 0x3FD99999998EF7B6)
  %901 = tail call double @llvm.fma.f64(double %895, double %900, double 0x3FE5555555555780)
  %902 = tail call double @llvm.amdgcn.ldexp.f64(double %892, i32 1)
  %903 = tail call double @llvm.amdgcn.ldexp.f64(double %894, i32 1)
  %904 = fmul double %892, %895
  %905 = fmul double %904, %901
  %906 = fadd double %902, %905
  %907 = fsub double %906, %902
  %908 = fsub double %905, %907
  %909 = fadd double %903, %908
  %910 = fadd double %906, %909
  %911 = fsub double %910, %906
  %912 = fsub double %909, %911
  %913 = sitofp i32 %867 to double
  %914 = fmul double %913, 0x3FE62E42FEFA39EF
  %915 = fneg double %914
  %916 = tail call double @llvm.fma.f64(double %913, double 0x3FE62E42FEFA39EF, double %915)
  %917 = tail call double @llvm.fma.f64(double %913, double 0x3C7ABC9E3B39803F, double %916)
  %918 = fadd double %914, %917
  %919 = fsub double %918, %914
  %920 = fsub double %917, %919
  %921 = fadd double %918, %910
  %922 = fsub double %921, %918
  %923 = fsub double %921, %922
  %924 = fsub double %918, %923
  %925 = fsub double %910, %922
  %926 = fadd double %925, %924
  %927 = fadd double %920, %912
  %928 = fsub double %927, %920
  %929 = fsub double %927, %928
  %930 = fsub double %920, %929
  %931 = fsub double %912, %928
  %932 = fadd double %931, %930
  %933 = fadd double %927, %926
  %934 = fadd double %921, %933
  %935 = fsub double %934, %921
  %936 = fsub double %933, %935
  %937 = fadd double %932, %936
  %938 = fadd double %934, %937
  %939 = fcmp oeq double %861, 0x7FF0000000000000
  %940 = select i1 %939, double %861, double %938
  %941 = fcmp oeq double %861, 0.000000e+00
  %942 = select i1 %941, double 0xFFF0000000000000, double %940
  %943 = fdiv contract double %695, %942
  %944 = fmul double %943, 0x3FF71547652B82FE
  %945 = tail call double @llvm.rint.f64(double %944)
  %946 = fneg double %945
  %947 = tail call double @llvm.fma.f64(double %946, double 0x3FE62E42FEFA39EF, double %943)
  %948 = tail call double @llvm.fma.f64(double %946, double 0x3C7ABC9E3B39803F, double %947)
  %949 = tail call double @llvm.fma.f64(double %948, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %950 = tail call double @llvm.fma.f64(double %948, double %949, double 0x3EC71DEE623FDE64)
  %951 = tail call double @llvm.fma.f64(double %948, double %950, double 0x3EFA01997C89E6B0)
  %952 = tail call double @llvm.fma.f64(double %948, double %951, double 0x3F2A01A014761F6E)
  %953 = tail call double @llvm.fma.f64(double %948, double %952, double 0x3F56C16C1852B7B0)
  %954 = tail call double @llvm.fma.f64(double %948, double %953, double 0x3F81111111122322)
  %955 = tail call double @llvm.fma.f64(double %948, double %954, double 0x3FA55555555502A1)
  %956 = tail call double @llvm.fma.f64(double %948, double %955, double 0x3FC5555555555511)
  %957 = tail call double @llvm.fma.f64(double %948, double %956, double 0x3FE000000000000B)
  %958 = tail call double @llvm.fma.f64(double %948, double %957, double 1.000000e+00)
  %959 = tail call double @llvm.fma.f64(double %948, double %958, double 1.000000e+00)
  %960 = fptosi double %945 to i32
  %961 = tail call double @llvm.amdgcn.ldexp.f64(double %959, i32 %960)
  %962 = fcmp ogt double %943, 1.024000e+03
  %963 = select i1 %962, double 0x7FF0000000000000, double %961
  %964 = fcmp olt double %943, -1.075000e+03
  %965 = select i1 %964, double 0.000000e+00, double %963
  %966 = fmul contract double %965, %444
  %967 = fdiv contract double %5, %65
  %968 = tail call double @llvm.fabs.f64(double %967)
  %969 = tail call double @llvm.amdgcn.frexp.mant.f64(double %968)
  %970 = fcmp olt double %969, 0x3FE5555555555555
  %971 = zext i1 %970 to i32
  %972 = tail call double @llvm.amdgcn.ldexp.f64(double %969, i32 %971)
  %973 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %968)
  %974 = sub nsw i32 %973, %971
  %975 = fadd double %972, -1.000000e+00
  %976 = fadd double %972, 1.000000e+00
  %977 = fadd double %976, -1.000000e+00
  %978 = fsub double %972, %977
  %979 = tail call double @llvm.amdgcn.rcp.f64(double %976)
  %980 = fneg double %976
  %981 = tail call double @llvm.fma.f64(double %980, double %979, double 1.000000e+00)
  %982 = tail call double @llvm.fma.f64(double %981, double %979, double %979)
  %983 = tail call double @llvm.fma.f64(double %980, double %982, double 1.000000e+00)
  %984 = tail call double @llvm.fma.f64(double %983, double %982, double %982)
  %985 = fmul double %975, %984
  %986 = fmul double %976, %985
  %987 = fneg double %986
  %988 = tail call double @llvm.fma.f64(double %985, double %976, double %987)
  %989 = tail call double @llvm.fma.f64(double %985, double %978, double %988)
  %990 = fadd double %986, %989
  %991 = fsub double %990, %986
  %992 = fsub double %989, %991
  %993 = fsub double %975, %990
  %994 = fsub double %975, %993
  %995 = fsub double %994, %990
  %996 = fsub double %995, %992
  %997 = fadd double %993, %996
  %998 = fmul double %984, %997
  %999 = fadd double %985, %998
  %1000 = fsub double %999, %985
  %1001 = fsub double %998, %1000
  %1002 = fmul double %999, %999
  %1003 = fneg double %1002
  %1004 = tail call double @llvm.fma.f64(double %999, double %999, double %1003)
  %1005 = fmul double %1001, 2.000000e+00
  %1006 = tail call double @llvm.fma.f64(double %999, double %1005, double %1004)
  %1007 = fadd double %1002, %1006
  %1008 = fsub double %1007, %1002
  %1009 = fsub double %1006, %1008
  %1010 = tail call double @llvm.fma.f64(double %1007, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1011 = tail call double @llvm.fma.f64(double %1007, double %1010, double 0x3FBE25E43ABE935A)
  %1012 = tail call double @llvm.fma.f64(double %1007, double %1011, double 0x3FC110EF47E6C9C2)
  %1013 = tail call double @llvm.fma.f64(double %1007, double %1012, double 0x3FC3B13BCFA74449)
  %1014 = tail call double @llvm.fma.f64(double %1007, double %1013, double 0x3FC745D171BF3C30)
  %1015 = tail call double @llvm.fma.f64(double %1007, double %1014, double 0x3FCC71C71C7792CE)
  %1016 = tail call double @llvm.fma.f64(double %1007, double %1015, double 0x3FD24924924920DA)
  %1017 = tail call double @llvm.fma.f64(double %1007, double %1016, double 0x3FD999999999999C)
  %1018 = sitofp i32 %974 to double
  %1019 = fmul double %1018, 0x3FE62E42FEFA39EF
  %1020 = fneg double %1019
  %1021 = tail call double @llvm.fma.f64(double %1018, double 0x3FE62E42FEFA39EF, double %1020)
  %1022 = tail call double @llvm.fma.f64(double %1018, double 0x3C7ABC9E3B39803F, double %1021)
  %1023 = fadd double %1019, %1022
  %1024 = fsub double %1023, %1019
  %1025 = fsub double %1022, %1024
  %1026 = tail call double @llvm.amdgcn.ldexp.f64(double %999, i32 1)
  %1027 = tail call double @llvm.amdgcn.ldexp.f64(double %1001, i32 1)
  %1028 = fmul double %999, %1007
  %1029 = fneg double %1028
  %1030 = tail call double @llvm.fma.f64(double %1007, double %999, double %1029)
  %1031 = tail call double @llvm.fma.f64(double %1007, double %1001, double %1030)
  %1032 = tail call double @llvm.fma.f64(double %1009, double %999, double %1031)
  %1033 = fadd double %1028, %1032
  %1034 = fsub double %1033, %1028
  %1035 = fsub double %1032, %1034
  %1036 = fmul double %1007, %1017
  %1037 = fneg double %1036
  %1038 = tail call double @llvm.fma.f64(double %1007, double %1017, double %1037)
  %1039 = tail call double @llvm.fma.f64(double %1009, double %1017, double %1038)
  %1040 = fadd double %1036, %1039
  %1041 = fsub double %1040, %1036
  %1042 = fsub double %1039, %1041
  %1043 = fadd double %1040, 0x3FE5555555555555
  %1044 = fadd double %1043, 0xBFE5555555555555
  %1045 = fsub double %1040, %1044
  %1046 = fadd double %1042, 0x3C8543B0D5DF274D
  %1047 = fadd double %1046, %1045
  %1048 = fadd double %1043, %1047
  %1049 = fsub double %1048, %1043
  %1050 = fsub double %1047, %1049
  %1051 = fmul double %1033, %1048
  %1052 = fneg double %1051
  %1053 = tail call double @llvm.fma.f64(double %1033, double %1048, double %1052)
  %1054 = tail call double @llvm.fma.f64(double %1033, double %1050, double %1053)
  %1055 = tail call double @llvm.fma.f64(double %1035, double %1048, double %1054)
  %1056 = fadd double %1051, %1055
  %1057 = fsub double %1056, %1051
  %1058 = fsub double %1055, %1057
  %1059 = fadd double %1026, %1056
  %1060 = fsub double %1059, %1026
  %1061 = fsub double %1056, %1060
  %1062 = fadd double %1027, %1058
  %1063 = fadd double %1062, %1061
  %1064 = fadd double %1059, %1063
  %1065 = fsub double %1064, %1059
  %1066 = fsub double %1063, %1065
  %1067 = fadd double %1023, %1064
  %1068 = fsub double %1067, %1023
  %1069 = fsub double %1067, %1068
  %1070 = fsub double %1023, %1069
  %1071 = fsub double %1064, %1068
  %1072 = fadd double %1071, %1070
  %1073 = fadd double %1025, %1066
  %1074 = fsub double %1073, %1025
  %1075 = fsub double %1073, %1074
  %1076 = fsub double %1025, %1075
  %1077 = fsub double %1066, %1074
  %1078 = fadd double %1077, %1076
  %1079 = fadd double %1073, %1072
  %1080 = fadd double %1067, %1079
  %1081 = fsub double %1080, %1067
  %1082 = fsub double %1079, %1081
  %1083 = fadd double %1078, %1082
  %1084 = fadd double %1080, %1083
  %1085 = fsub double %1084, %1080
  %1086 = fsub double %1083, %1085
  %1087 = fmul double %1084, 3.000000e+00
  %1088 = fneg double %1087
  %1089 = tail call double @llvm.fma.f64(double %1084, double 3.000000e+00, double %1088)
  %1090 = tail call double @llvm.fma.f64(double %1086, double 3.000000e+00, double %1089)
  %1091 = fadd double %1087, %1090
  %1092 = fsub double %1091, %1087
  %1093 = fsub double %1090, %1092
  %1094 = tail call double @llvm.fabs.f64(double %1087) #3
  %1095 = fcmp oeq double %1094, 0x7FF0000000000000
  %1096 = select i1 %1095, double %1087, double %1091
  %1097 = tail call double @llvm.fabs.f64(double %1096) #3
  %1098 = fcmp oeq double %1097, 0x7FF0000000000000
  %1099 = select i1 %1098, double 0.000000e+00, double %1093
  %1100 = fmul double %1096, 0x3FF71547652B82FE
  %1101 = tail call double @llvm.rint.f64(double %1100)
  %1102 = fneg double %1101
  %1103 = tail call double @llvm.fma.f64(double %1102, double 0x3FE62E42FEFA39EF, double %1096)
  %1104 = tail call double @llvm.fma.f64(double %1102, double 0x3C7ABC9E3B39803F, double %1103)
  %1105 = tail call double @llvm.fma.f64(double %1104, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1106 = tail call double @llvm.fma.f64(double %1104, double %1105, double 0x3EC71DEE623FDE64)
  %1107 = tail call double @llvm.fma.f64(double %1104, double %1106, double 0x3EFA01997C89E6B0)
  %1108 = tail call double @llvm.fma.f64(double %1104, double %1107, double 0x3F2A01A014761F6E)
  %1109 = tail call double @llvm.fma.f64(double %1104, double %1108, double 0x3F56C16C1852B7B0)
  %1110 = tail call double @llvm.fma.f64(double %1104, double %1109, double 0x3F81111111122322)
  %1111 = tail call double @llvm.fma.f64(double %1104, double %1110, double 0x3FA55555555502A1)
  %1112 = tail call double @llvm.fma.f64(double %1104, double %1111, double 0x3FC5555555555511)
  %1113 = tail call double @llvm.fma.f64(double %1104, double %1112, double 0x3FE000000000000B)
  %1114 = tail call double @llvm.fma.f64(double %1104, double %1113, double 1.000000e+00)
  %1115 = tail call double @llvm.fma.f64(double %1104, double %1114, double 1.000000e+00)
  %1116 = fptosi double %1101 to i32
  %1117 = tail call double @llvm.amdgcn.ldexp.f64(double %1115, i32 %1116)
  %1118 = fcmp ogt double %1096, 1.024000e+03
  %1119 = select i1 %1118, double 0x7FF0000000000000, double %1117
  %1120 = fcmp olt double %1096, -1.075000e+03
  %1121 = select i1 %1120, double 0.000000e+00, double %1119
  %1122 = tail call double @llvm.fma.f64(double %1121, double %1099, double %1121)
  %1123 = tail call double @llvm.fabs.f64(double %1121) #3
  %1124 = fcmp oeq double %1123, 0x7FF0000000000000
  %1125 = select i1 %1124, double %1121, double %1122
  %1126 = fcmp uge double %967, 0.000000e+00
  %1127 = select i1 %1126, double 0.000000e+00, double -0.000000e+00
  %1128 = tail call double @llvm.copysign.f64(double %1125, double %1127)
  %1129 = fcmp oeq double %968, 0x7FF0000000000000
  %1130 = fcmp oeq double %967, 0.000000e+00
  %1131 = or i1 %1130, %1129
  %1132 = select i1 %1130, double 0.000000e+00, double 0x7FF0000000000000
  %1133 = tail call double @llvm.copysign.f64(double %1132, double %967)
  %1134 = select i1 %1131, double %1133, double %1128
  %1135 = fcmp uno double %967, 0.000000e+00
  %1136 = select i1 %1135, double 0x7FF8000000000000, double %1134
  %1137 = fmul contract double %1136, %966
  %1138 = fmul contract double %1137, 4.000000e+00
  %1139 = fmul contract double %65, %4
  %1140 = tail call double @llvm.fabs.f64(double %1139)
  %1141 = tail call double @llvm.amdgcn.frexp.mant.f64(double %1140)
  %1142 = fcmp olt double %1141, 0x3FE5555555555555
  %1143 = zext i1 %1142 to i32
  %1144 = tail call double @llvm.amdgcn.ldexp.f64(double %1141, i32 %1143)
  %1145 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %1140)
  %1146 = sub nsw i32 %1145, %1143
  %1147 = fadd double %1144, -1.000000e+00
  %1148 = fadd double %1144, 1.000000e+00
  %1149 = fadd double %1148, -1.000000e+00
  %1150 = fsub double %1144, %1149
  %1151 = tail call double @llvm.amdgcn.rcp.f64(double %1148)
  %1152 = fneg double %1148
  %1153 = tail call double @llvm.fma.f64(double %1152, double %1151, double 1.000000e+00)
  %1154 = tail call double @llvm.fma.f64(double %1153, double %1151, double %1151)
  %1155 = tail call double @llvm.fma.f64(double %1152, double %1154, double 1.000000e+00)
  %1156 = tail call double @llvm.fma.f64(double %1155, double %1154, double %1154)
  %1157 = fmul double %1147, %1156
  %1158 = fmul double %1148, %1157
  %1159 = fneg double %1158
  %1160 = tail call double @llvm.fma.f64(double %1157, double %1148, double %1159)
  %1161 = tail call double @llvm.fma.f64(double %1157, double %1150, double %1160)
  %1162 = fadd double %1158, %1161
  %1163 = fsub double %1162, %1158
  %1164 = fsub double %1161, %1163
  %1165 = fsub double %1147, %1162
  %1166 = fsub double %1147, %1165
  %1167 = fsub double %1166, %1162
  %1168 = fsub double %1167, %1164
  %1169 = fadd double %1165, %1168
  %1170 = fmul double %1156, %1169
  %1171 = fadd double %1157, %1170
  %1172 = fsub double %1171, %1157
  %1173 = fsub double %1170, %1172
  %1174 = fmul double %1171, %1171
  %1175 = fneg double %1174
  %1176 = tail call double @llvm.fma.f64(double %1171, double %1171, double %1175)
  %1177 = fmul double %1173, 2.000000e+00
  %1178 = tail call double @llvm.fma.f64(double %1171, double %1177, double %1176)
  %1179 = fadd double %1174, %1178
  %1180 = fsub double %1179, %1174
  %1181 = fsub double %1178, %1180
  %1182 = tail call double @llvm.fma.f64(double %1179, double 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)
  %1183 = tail call double @llvm.fma.f64(double %1179, double %1182, double 0x3FBE25E43ABE935A)
  %1184 = tail call double @llvm.fma.f64(double %1179, double %1183, double 0x3FC110EF47E6C9C2)
  %1185 = tail call double @llvm.fma.f64(double %1179, double %1184, double 0x3FC3B13BCFA74449)
  %1186 = tail call double @llvm.fma.f64(double %1179, double %1185, double 0x3FC745D171BF3C30)
  %1187 = tail call double @llvm.fma.f64(double %1179, double %1186, double 0x3FCC71C71C7792CE)
  %1188 = tail call double @llvm.fma.f64(double %1179, double %1187, double 0x3FD24924924920DA)
  %1189 = tail call double @llvm.fma.f64(double %1179, double %1188, double 0x3FD999999999999C)
  %1190 = sitofp i32 %1146 to double
  %1191 = fmul double %1190, 0x3FE62E42FEFA39EF
  %1192 = fneg double %1191
  %1193 = tail call double @llvm.fma.f64(double %1190, double 0x3FE62E42FEFA39EF, double %1192)
  %1194 = tail call double @llvm.fma.f64(double %1190, double 0x3C7ABC9E3B39803F, double %1193)
  %1195 = fadd double %1191, %1194
  %1196 = fsub double %1195, %1191
  %1197 = fsub double %1194, %1196
  %1198 = tail call double @llvm.amdgcn.ldexp.f64(double %1171, i32 1)
  %1199 = tail call double @llvm.amdgcn.ldexp.f64(double %1173, i32 1)
  %1200 = fmul double %1171, %1179
  %1201 = fneg double %1200
  %1202 = tail call double @llvm.fma.f64(double %1179, double %1171, double %1201)
  %1203 = tail call double @llvm.fma.f64(double %1179, double %1173, double %1202)
  %1204 = tail call double @llvm.fma.f64(double %1181, double %1171, double %1203)
  %1205 = fadd double %1200, %1204
  %1206 = fsub double %1205, %1200
  %1207 = fsub double %1204, %1206
  %1208 = fmul double %1179, %1189
  %1209 = fneg double %1208
  %1210 = tail call double @llvm.fma.f64(double %1179, double %1189, double %1209)
  %1211 = tail call double @llvm.fma.f64(double %1181, double %1189, double %1210)
  %1212 = fadd double %1208, %1211
  %1213 = fsub double %1212, %1208
  %1214 = fsub double %1211, %1213
  %1215 = fadd double %1212, 0x3FE5555555555555
  %1216 = fadd double %1215, 0xBFE5555555555555
  %1217 = fsub double %1212, %1216
  %1218 = fadd double %1214, 0x3C8543B0D5DF274D
  %1219 = fadd double %1218, %1217
  %1220 = fadd double %1215, %1219
  %1221 = fsub double %1220, %1215
  %1222 = fsub double %1219, %1221
  %1223 = fmul double %1205, %1220
  %1224 = fneg double %1223
  %1225 = tail call double @llvm.fma.f64(double %1205, double %1220, double %1224)
  %1226 = tail call double @llvm.fma.f64(double %1205, double %1222, double %1225)
  %1227 = tail call double @llvm.fma.f64(double %1207, double %1220, double %1226)
  %1228 = fadd double %1223, %1227
  %1229 = fsub double %1228, %1223
  %1230 = fsub double %1227, %1229
  %1231 = fadd double %1198, %1228
  %1232 = fsub double %1231, %1198
  %1233 = fsub double %1228, %1232
  %1234 = fadd double %1199, %1230
  %1235 = fadd double %1234, %1233
  %1236 = fadd double %1231, %1235
  %1237 = fsub double %1236, %1231
  %1238 = fsub double %1235, %1237
  %1239 = fadd double %1195, %1236
  %1240 = fsub double %1239, %1195
  %1241 = fsub double %1239, %1240
  %1242 = fsub double %1195, %1241
  %1243 = fsub double %1236, %1240
  %1244 = fadd double %1243, %1242
  %1245 = fadd double %1197, %1238
  %1246 = fsub double %1245, %1197
  %1247 = fsub double %1245, %1246
  %1248 = fsub double %1197, %1247
  %1249 = fsub double %1238, %1246
  %1250 = fadd double %1249, %1248
  %1251 = fadd double %1245, %1244
  %1252 = fadd double %1239, %1251
  %1253 = fsub double %1252, %1239
  %1254 = fsub double %1251, %1253
  %1255 = fadd double %1250, %1254
  %1256 = fadd double %1252, %1255
  %1257 = fsub double %1256, %1252
  %1258 = fsub double %1255, %1257
  %1259 = fmul double %1256, 3.000000e+00
  %1260 = fneg double %1259
  %1261 = tail call double @llvm.fma.f64(double %1256, double 3.000000e+00, double %1260)
  %1262 = tail call double @llvm.fma.f64(double %1258, double 3.000000e+00, double %1261)
  %1263 = fadd double %1259, %1262
  %1264 = fsub double %1263, %1259
  %1265 = fsub double %1262, %1264
  %1266 = tail call double @llvm.fabs.f64(double %1259) #3
  %1267 = fcmp oeq double %1266, 0x7FF0000000000000
  %1268 = select i1 %1267, double %1259, double %1263
  %1269 = tail call double @llvm.fabs.f64(double %1268) #3
  %1270 = fcmp oeq double %1269, 0x7FF0000000000000
  %1271 = select i1 %1270, double 0.000000e+00, double %1265
  %1272 = fmul double %1268, 0x3FF71547652B82FE
  %1273 = tail call double @llvm.rint.f64(double %1272)
  %1274 = fneg double %1273
  %1275 = tail call double @llvm.fma.f64(double %1274, double 0x3FE62E42FEFA39EF, double %1268)
  %1276 = tail call double @llvm.fma.f64(double %1274, double 0x3C7ABC9E3B39803F, double %1275)
  %1277 = tail call double @llvm.fma.f64(double %1276, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1278 = tail call double @llvm.fma.f64(double %1276, double %1277, double 0x3EC71DEE623FDE64)
  %1279 = tail call double @llvm.fma.f64(double %1276, double %1278, double 0x3EFA01997C89E6B0)
  %1280 = tail call double @llvm.fma.f64(double %1276, double %1279, double 0x3F2A01A014761F6E)
  %1281 = tail call double @llvm.fma.f64(double %1276, double %1280, double 0x3F56C16C1852B7B0)
  %1282 = tail call double @llvm.fma.f64(double %1276, double %1281, double 0x3F81111111122322)
  %1283 = tail call double @llvm.fma.f64(double %1276, double %1282, double 0x3FA55555555502A1)
  %1284 = tail call double @llvm.fma.f64(double %1276, double %1283, double 0x3FC5555555555511)
  %1285 = tail call double @llvm.fma.f64(double %1276, double %1284, double 0x3FE000000000000B)
  %1286 = tail call double @llvm.fma.f64(double %1276, double %1285, double 1.000000e+00)
  %1287 = tail call double @llvm.fma.f64(double %1276, double %1286, double 1.000000e+00)
  %1288 = fptosi double %1273 to i32
  %1289 = tail call double @llvm.amdgcn.ldexp.f64(double %1287, i32 %1288)
  %1290 = fcmp ogt double %1268, 1.024000e+03
  %1291 = select i1 %1290, double 0x7FF0000000000000, double %1289
  %1292 = fcmp olt double %1268, -1.075000e+03
  %1293 = select i1 %1292, double 0.000000e+00, double %1291
  %1294 = tail call double @llvm.fma.f64(double %1293, double %1271, double %1293)
  %1295 = tail call double @llvm.fabs.f64(double %1293) #3
  %1296 = fcmp oeq double %1295, 0x7FF0000000000000
  %1297 = select i1 %1296, double %1293, double %1294
  %1298 = fcmp uge double %1139, 0.000000e+00
  %1299 = select i1 %1298, double 0.000000e+00, double -0.000000e+00
  %1300 = tail call double @llvm.copysign.f64(double %1297, double %1299)
  %1301 = fcmp oeq double %1140, 0x7FF0000000000000
  %1302 = fcmp oeq double %1139, 0.000000e+00
  %1303 = or i1 %1302, %1301
  %1304 = select i1 %1302, double 0.000000e+00, double 0x7FF0000000000000
  %1305 = tail call double @llvm.copysign.f64(double %1304, double %1139)
  %1306 = select i1 %1303, double %1305, double %1300
  %1307 = fcmp uno double %1139, 0.000000e+00
  %1308 = select i1 %1307, double 0x7FF8000000000000, double %1306
  %1309 = fmul contract double %1308, %1138
  %1310 = mul nsw i32 %25, %2
  %1311 = add nsw i32 %1310, %17
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds double, double addrspace(1)* %0, i64 %1312
  store double %1309, double addrspace(1)* %1313, align 8, !tbaa !7
  %1314 = icmp sgt i32 %17, 0
  %1315 = icmp sgt i32 %25, 0
  %1316 = select i1 %1314, i1 true, i1 %1315
  br i1 %1316, label %1317, label %1320

1317:                                             ; preds = %213
  %1318 = fmul contract double %1308, 4.000000e+00
  %1319 = fdiv contract double %1309, %1318
  br label %1320

1320:                                             ; preds = %213, %1317
  %1321 = phi double [ %1319, %1317 ], [ 0.000000e+00, %213 ]
  %1322 = getelementptr inbounds double, double addrspace(1)* %1, i64 %1312
  store double %1321, double addrspace(1)* %1322, align 8, !tbaa !7
  br label %1323

1323:                                             ; preds = %1320, %8
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.maxnum.f64(double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.minnum.f64(double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.copysign.f64(double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i1 @llvm.amdgcn.class.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.trig.preop.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.fract.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.frexp.mant.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.frexp.exp.i32.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rsq.f64(double) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.y() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.y() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
