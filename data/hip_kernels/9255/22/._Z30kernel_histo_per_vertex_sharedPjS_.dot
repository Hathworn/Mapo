digraph "CFG for '_Z30kernel_histo_per_vertex_sharedPjS_' function" {
	label="CFG for '_Z30kernel_histo_per_vertex_sharedPjS_' function";

	Node0x4a39100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = add i32 %10, %3\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %13 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 2, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 16\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 8, !tbaa !7\l  %20 = load i32, i32 addrspace(4)* @constant_n_test_vertices, align 4, !tbaa\l... !16\l  %21 = icmp ult i32 %11, %20\l  br i1 %21, label %22, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4a39100:s0 -> Node0x4a3c6a0;
	Node0x4a39100:s1 -> Node0x4a3c730;
	Node0x4a3c6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%22:\l22:                                               \l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = mul i32 %23, %16\l  %25 = add i32 %24, %12\l  %26 = load i32, i32 addrspace(4)* @constant_n_hits, align 4, !tbaa !16\l  %27 = mul i32 %26, %11\l  %28 = udiv i32 %19, %16\l  %29 = mul i32 %28, %16\l  %30 = icmp ugt i32 %19, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %16\l  %34 = add i32 %25, %27\l  %35 = load i32, i32 addrspace(4)* @constant_n_time_bins, align 4, !tbaa !16\l  %36 = mul i32 %35, %11\l  %37 = icmp ult i32 %12, %35\l  br i1 %37, label %38, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4a3c6a0:s0 -> Node0x4a3d920;
	Node0x4a3c6a0:s1 -> Node0x4a3d970;
	Node0x4a3d920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %41, %38 ], [ %12, %22 ]\l  %40 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %39\l  store i32 0, i32 addrspace(3)* %40, align 4, !tbaa !16\l  %41 = add i32 %39, %16\l  %42 = icmp ult i32 %41, %35\l  br i1 %42, label %38, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4a3d920:s0 -> Node0x4a3d920;
	Node0x4a3d920:s1 -> Node0x4a3d970;
	Node0x4a3d970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = add i32 %27, %26\l  %45 = icmp ult i32 %34, %44\l  br i1 %45, label %46, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4a3d970:s0 -> Node0x4a3e2f0;
	Node0x4a3d970:s1 -> Node0x4a3e380;
	Node0x4a3e2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %54, %46 ], [ %34, %43 ]\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %51 = sub i32 %50, %36\l  %52 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %51\l  %53 = atomicrmw add i32 addrspace(3)* %52, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %54 = add i32 %47, %33\l  %55 = icmp ult i32 %54, %44\l  br i1 %55, label %46, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4a3e2f0:s0 -> Node0x4a3e2f0;
	Node0x4a3e2f0:s1 -> Node0x4a3e380;
	Node0x4a3e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %37, label %57, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4a3e380:s0 -> Node0x4a3ee70;
	Node0x4a3e380:s1 -> Node0x4a3c730;
	Node0x4a3ee70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = phi i32 [ %65, %57 ], [ %12, %56 ]\l  %59 = add i32 %58, %36\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %60\l  %62 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %58\l  %63 = load i32, i32 addrspace(3)* %62, align 4, !tbaa !16\l  %64 = atomicrmw add i32 addrspace(1)* %61, i32 %63 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %65 = add i32 %58, %16\l  %66 = icmp ult i32 %65, %35\l  br i1 %66, label %57, label %67, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4a3ee70:s0 -> Node0x4a3ee70;
	Node0x4a3ee70:s1 -> Node0x4a3c730;
	Node0x4a3c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%67:\l67:                                               \l  ret void\l}"];
}
