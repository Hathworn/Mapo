digraph "CFG for '_Z23kernel_histo_per_vertexPjS_' function" {
	label="CFG for '_Z23kernel_histo_per_vertexPjS_' function";

	Node0x57ba8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = add i32 %10, %3\l  %12 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 2, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 16\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 8, !tbaa !7\l  %19 = load i32, i32 addrspace(4)* @constant_n_test_vertices, align 4, !tbaa\l... !16\l  %20 = icmp ult i32 %11, %19\l  br i1 %20, label %21, label %48\l|{<s0>T|<s1>F}}"];
	Node0x57ba8a0:s0 -> Node0x57bd5f0;
	Node0x57ba8a0:s1 -> Node0x57bd680;
	Node0x57bd5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%21:\l21:                                               \l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = mul i32 %22, %15\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %25 = add i32 %23, %24\l  %26 = load i32, i32 addrspace(4)* @constant_n_hits, align 4, !tbaa !16\l  %27 = mul i32 %26, %11\l  %28 = udiv i32 %18, %15\l  %29 = mul i32 %28, %15\l  %30 = icmp ugt i32 %18, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %15\l  %34 = add i32 %25, %27\l  %35 = add i32 %27, %26\l  %36 = icmp ult i32 %34, %35\l  br i1 %36, label %37, label %47\l|{<s0>T|<s1>F}}"];
	Node0x57bd5f0:s0 -> Node0x57bd110;
	Node0x57bd5f0:s1 -> Node0x57bf050;
	Node0x57bd110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %45, %37 ], [ %34, %21 ]\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !16\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  %44 = atomicrmw add i32 addrspace(1)* %43, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %45 = add i32 %38, %33\l  %46 = icmp ult i32 %45, %35\l  br i1 %46, label %37, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57bd110:s0 -> Node0x57bd110;
	Node0x57bd110:s1 -> Node0x57bf050;
	Node0x57bf050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%47:\l47:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %48\l}"];
	Node0x57bf050 -> Node0x57bd680;
	Node0x57bd680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%48:\l48:                                               \l  ret void\l}"];
}
