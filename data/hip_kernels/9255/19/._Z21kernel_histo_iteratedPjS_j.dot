digraph "CFG for '_Z21kernel_histo_iteratedPjS_j' function" {
	label="CFG for '_Z21kernel_histo_iteratedPjS_j' function";

	Node0x58c1860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = add i32 %4, %2\l  %6 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32 0,\l... i32 %5\l  store i32 0, i32 addrspace(3)* %6, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !9, !invariant.load\l... !10\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !11\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %4\l  %18 = udiv i32 %15, %12\l  %19 = mul i32 %18, %12\l  %20 = icmp ugt i32 %15, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %12\l  %24 = load i32, i32 addrspace(4)* @constant_n_hits, align 4, !tbaa !5\l  %25 = load i32, i32 addrspace(4)* @constant_n_test_vertices, align 4, !tbaa\l... !5\l  %26 = mul i32 %25, %24\l  %27 = icmp ult i32 %17, %26\l  br i1 %27, label %28, label %37\l|{<s0>T|<s1>F}}"];
	Node0x58c1860:s0 -> Node0x58c25c0;
	Node0x58c1860:s1 -> Node0x58c4620;
	Node0x58c25c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %35, %28 ], [ %17, %3 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !5, !amdgpu.noclobber\l... !10\l  %33 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %32\l  %34 = atomicrmw add i32 addrspace(3)* %33, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %35 = add i32 %29, %23\l  %36 = icmp ult i32 %35, %26\l  br i1 %36, label %28, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x58c25c0:s0 -> Node0x58c25c0;
	Node0x58c25c0:s1 -> Node0x58c4620;
	Node0x58c4620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%37:\l37:                                               \l  %38 = zext i32 %5 to i64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  %40 = load i32, i32 addrspace(3)* %6, align 4, !tbaa !5\l  %41 = atomicrmw add i32 addrspace(1)* %39, i32 %40 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  ret void\l}"];
}
