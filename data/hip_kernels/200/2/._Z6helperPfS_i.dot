digraph "CFG for '_Z6helperPfS_i' function" {
	label="CFG for '_Z6helperPfS_i' function";

	Node0x5943ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp sge i32 %12, %2\l  %14 = icmp ult i32 %12, %9\l  %15 = select i1 %13, i1 true, i1 %14\l  br i1 %15, label %88, label %16\l|{<s0>T|<s1>F}}"];
	Node0x5943ea0:s0 -> Node0x5945ef0;
	Node0x5943ea0:s1 -> Node0x5945f80;
	Node0x5945f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = udiv i32 %12, %9\l  %18 = sext i32 %12 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %21 = tail call i32 @llvm.umax.i32(i32 %17, i32 1)\l  %22 = add i32 %21, -1\l  %23 = and i32 %21, 7\l  %24 = icmp ult i32 %22, 7\l  br i1 %24, label %73, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5945f80:s0 -> Node0x59468a0;
	Node0x5945f80:s1 -> Node0x5946930;
	Node0x5946930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i32 %21, -8\l  br label %27\l}"];
	Node0x5946930 -> Node0x5946b30;
	Node0x5946b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi float [ %20, %25 ], [ %69, %27 ]\l  %29 = phi i32 [ 0, %25 ], [ %70, %27 ]\l  %30 = phi i32 [ 0, %25 ], [ %71, %27 ]\l  %31 = zext i32 %29 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7\l  %34 = fadd contract float %33, %28\l  store float %34, float addrspace(1)* %19, align 4, !tbaa !7\l  %35 = or i32 %29, 1\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = fadd contract float %38, %34\l  store float %39, float addrspace(1)* %19, align 4, !tbaa !7\l  %40 = or i32 %29, 2\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = fadd contract float %43, %39\l  store float %44, float addrspace(1)* %19, align 4, !tbaa !7\l  %45 = or i32 %29, 3\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %49 = fadd contract float %48, %44\l  store float %49, float addrspace(1)* %19, align 4, !tbaa !7\l  %50 = or i32 %29, 4\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %1, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fadd contract float %53, %49\l  store float %54, float addrspace(1)* %19, align 4, !tbaa !7\l  %55 = or i32 %29, 5\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %59 = fadd contract float %58, %54\l  store float %59, float addrspace(1)* %19, align 4, !tbaa !7\l  %60 = or i32 %29, 6\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = fadd contract float %63, %59\l  store float %64, float addrspace(1)* %19, align 4, !tbaa !7\l  %65 = or i32 %29, 7\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fadd contract float %68, %64\l  store float %69, float addrspace(1)* %19, align 4, !tbaa !7\l  %70 = add nuw nsw i32 %29, 8\l  %71 = add i32 %30, 8\l  %72 = icmp eq i32 %71, %26\l  br i1 %72, label %73, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5946b30:s0 -> Node0x59468a0;
	Node0x5946b30:s1 -> Node0x5946b30;
	Node0x59468a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%73:\l73:                                               \l  %74 = phi float [ %20, %16 ], [ %69, %27 ]\l  %75 = phi i32 [ 0, %16 ], [ %70, %27 ]\l  %76 = icmp eq i32 %23, 0\l  br i1 %76, label %88, label %77\l|{<s0>T|<s1>F}}"];
	Node0x59468a0:s0 -> Node0x5945ef0;
	Node0x59468a0:s1 -> Node0x59497b0;
	Node0x59497b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi float [ %84, %77 ], [ %74, %73 ]\l  %79 = phi i32 [ %85, %77 ], [ %75, %73 ]\l  %80 = phi i32 [ %86, %77 ], [ 0, %73 ]\l  %81 = zext i32 %79 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = fadd contract float %83, %78\l  store float %84, float addrspace(1)* %19, align 4, !tbaa !7\l  %85 = add nuw nsw i32 %79, 1\l  %86 = add i32 %80, 1\l  %87 = icmp eq i32 %86, %23\l  br i1 %87, label %88, label %77, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x59497b0:s0 -> Node0x5945ef0;
	Node0x59497b0:s1 -> Node0x59497b0;
	Node0x5945ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%88:\l88:                                               \l  ret void\l}"];
}
