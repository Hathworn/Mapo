digraph "CFG for '_Z9kroneckerPdiiS_iiS_' function" {
	label="CFG for '_Z9kroneckerPdiiS_iiS_' function";

	Node0x5198910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = sitofp i32 %16 to double\l  %26 = sitofp i32 %4 to double\l  %27 = fdiv contract double %25, %26\l  %28 = tail call double @llvm.floor.f64(double %27)\l  %29 = fptosi double %28 to i32\l  %30 = sitofp i32 %24 to double\l  %31 = sitofp i32 %5 to double\l  %32 = fdiv contract double %30, %31\l  %33 = tail call double @llvm.floor.f64(double %32)\l  %34 = fptosi double %33 to i32\l  %35 = icmp sge i32 %29, %1\l  %36 = icmp sgt i32 %34, %2\l  %37 = select i1 %35, i1 true, i1 %36\l  %38 = icmp slt i32 %4, 0\l  %39 = select i1 %37, i1 true, i1 %38\l  %40 = icmp slt i32 %5, 0\l  %41 = select i1 %39, i1 true, i1 %40\l  br i1 %41, label %56, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5198910:s0 -> Node0x519cdf0;
	Node0x5198910:s1 -> Node0x519ce80;
	Node0x519ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = srem i32 %24, %5\l  %44 = srem i32 %16, %4\l  %45 = mul nsw i32 %34, %1\l  %46 = add nsw i32 %45, %29\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double addrspace(1)* %0, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = mul nsw i32 %43, %4\l  %51 = add nsw i32 %50, %44\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %3, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %55 = fmul contract double %49, %54\l  br label %56\l}"];
	Node0x519ce80 -> Node0x519cdf0;
	Node0x519cdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi double [ %55, %42 ], [ -1.000000e+00, %7 ]\l  %58 = mul nsw i32 %4, %1\l  %59 = mul nsw i32 %24, %58\l  %60 = add nsw i32 %59, %16\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %6, i64 %61\l  store double %57, double addrspace(1)* %62, align 8, !tbaa !7\l  ret void\l}"];
}
