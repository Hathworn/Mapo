digraph "CFG for '_Z18KerFtCalcForcesResjbdPK15HIP_vector_typeIfLj3EES2_PKS_IdLj3EES2_PS0_PS3_' function" {
	label="CFG for '_Z18KerFtCalcForcesResjbdPK15HIP_vector_typeIfLj3EES2_PKS_IdLj3EES2_PS0_PS3_' function";

	Node0x6365d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp ult i32 %18, %0\l  br i1 %19, label %20, label %105\l|{<s0>T|<s1>F}}"];
	Node0x6365d40:s0 -> Node0x6368790;
	Node0x6365d40:s1 -> Node0x6368820;
	Node0x6368790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = zext i32 %18 to i64\l  %22 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %23 = load float, float addrspace(1)* %22, align 4, !amdgpu.noclobber !5\l  %24 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %25 = load float, float addrspace(1)* %24, align 4, !amdgpu.noclobber !5\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %3, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %27 = load float, float addrspace(1)* %26, align 4, !amdgpu.noclobber !5\l  %28 = shl i32 %18, 1\l  %29 = add nuw nsw i32 %28, 1\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %32 = load float, float addrspace(1)* %31, align 4, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %34 = load float, float addrspace(1)* %33, align 4, !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %36 = load float, float addrspace(1)* %35, align 4, !amdgpu.noclobber !5\l  %37 = fpext float %32 to double\l  %38 = fmul contract double %37, %2\l  %39 = fpext float %23 to double\l  %40 = fadd contract double %38, %39\l  %41 = fptrunc double %40 to float\l  %42 = fpext float %34 to double\l  %43 = fmul contract double %42, %2\l  %44 = fpext float %25 to double\l  %45 = fadd contract double %43, %44\l  %46 = fptrunc double %45 to float\l  %47 = fpext float %36 to double\l  %48 = fmul contract double %47, %2\l  %49 = fpext float %27 to double\l  %50 = fadd contract double %48, %49\l  %51 = fptrunc double %50 to float\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %53 = load float, float addrspace(1)* %52, align 4, !amdgpu.noclobber !5\l  %54 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %55 = load float, float addrspace(1)* %54, align 4, !amdgpu.noclobber !5\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %57 = load float, float addrspace(1)* %56, align 4, !amdgpu.noclobber !5\l  %58 = zext i32 %28 to i64\l  %59 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %60 = load float, float addrspace(1)* %59, align 4, !amdgpu.noclobber !5\l  %61 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %62 = load float, float addrspace(1)* %61, align 4, !amdgpu.noclobber !5\l  %63 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %64 = load float, float addrspace(1)* %63, align 4, !amdgpu.noclobber !5\l  %65 = select i1 %1, float 0.000000e+00, float %41\l  %66 = select i1 %1, float 0.000000e+00, float %51\l  %67 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %5, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %68 = load double, double addrspace(1)* %67, align 8, !amdgpu.noclobber !5\l  %69 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %5, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %70 = load double, double addrspace(1)* %69, align 8, !amdgpu.noclobber !5\l  %71 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %5, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %72 = load double, double addrspace(1)* %71, align 8, !amdgpu.noclobber !5\l  %73 = fpext float %53 to double\l  %74 = fmul contract double %73, %2\l  %75 = fadd contract double %74, %68\l  %76 = fpext float %55 to double\l  %77 = select i1 %1, double 0.000000e+00, double %76\l  %78 = fmul contract double %77, %2\l  %79 = fadd contract double %78, %70\l  %80 = fpext float %57 to double\l  %81 = fmul contract double %80, %2\l  %82 = fadd contract double %81, %72\l  %83 = fpext float %60 to double\l  %84 = fmul contract double %83, %2\l  %85 = fadd contract double %84, %73\l  %86 = fptrunc double %85 to float\l  %87 = fpext float %62 to double\l  %88 = select i1 %1, double 0.000000e+00, double %87\l  %89 = fmul contract double %88, %2\l  %90 = fadd contract double %77, %89\l  %91 = fptrunc double %90 to float\l  %92 = fpext float %64 to double\l  %93 = fmul contract double %92, %2\l  %94 = fadd contract double %93, %80\l  %95 = fptrunc double %94 to float\l  %96 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store float %65, float addrspace(1)* %96, align 4\l  %97 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %46, float addrspace(1)* %97, align 4\l  %98 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %58, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %66, float addrspace(1)* %98, align 4\l  %99 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store float %86, float addrspace(1)* %99, align 4\l  %100 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store float %91, float addrspace(1)* %100, align 4\l  %101 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %7, i64 %30, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store float %95, float addrspace(1)* %101, align 4\l  %102 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %8, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  store double %75, double addrspace(1)* %102, align 8\l  %103 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %8, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  store double %79, double addrspace(1)* %103, align 8\l  %104 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %8, i64 %21, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  store double %82, double addrspace(1)* %104, align 8\l  br label %105\l}"];
	Node0x6368790 -> Node0x6368820;
	Node0x6368820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  ret void\l}"];
}
