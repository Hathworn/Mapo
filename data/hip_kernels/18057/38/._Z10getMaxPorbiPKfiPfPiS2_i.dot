digraph "CFG for '_Z10getMaxPorbiPKfiPfPiS2_i' function" {
	label="CFG for '_Z10getMaxPorbiPKfiPfPiS2_i' function";

	Node0x63c5570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %122\l|{<s0>T|<s1>F}}"];
	Node0x63c5570:s0 -> Node0x63c74a0;
	Node0x63c5570:s1 -> Node0x63c7530;
	Node0x63c74a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %2\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %1, i64 %20\l  %22 = icmp sgt i32 %2, 0\l  br i1 %22, label %23, label %49\l|{<s0>T|<s1>F}}"];
	Node0x63c74a0:s0 -> Node0x63c78a0;
	Node0x63c74a0:s1 -> Node0x63c78f0;
	Node0x63c78a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = and i32 %2, 7\l  %25 = icmp ult i32 %2, 8\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x63c78a0:s0 -> Node0x63c7bb0;
	Node0x63c78a0:s1 -> Node0x63c7c00;
	Node0x63c7c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%26:\l26:                                               \l  %27 = and i32 %2, -8\l  br label %59\l}"];
	Node0x63c7c00 -> Node0x63c7e00;
	Node0x63c7bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = phi i32 [ undef, %23 ], [ %117, %59 ]\l  %30 = phi float [ undef, %23 ], [ %118, %59 ]\l  %31 = phi float [ 0.000000e+00, %23 ], [ %118, %59 ]\l  %32 = phi i32 [ 0, %23 ], [ %119, %59 ]\l  %33 = phi i32 [ -1, %23 ], [ %117, %59 ]\l  %34 = icmp eq i32 %24, 0\l  br i1 %34, label %49, label %35\l|{<s0>T|<s1>F}}"];
	Node0x63c7bb0:s0 -> Node0x63c78f0;
	Node0x63c7bb0:s1 -> Node0x63c93a0;
	Node0x63c93a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi float [ %45, %35 ], [ %31, %28 ]\l  %37 = phi i32 [ %46, %35 ], [ %32, %28 ]\l  %38 = phi i32 [ %44, %35 ], [ %33, %28 ]\l  %39 = phi i32 [ %47, %35 ], [ 0, %28 ]\l  %40 = zext i32 %37 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %21, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fcmp contract ugt float %36, %42\l  %44 = select i1 %43, i32 %38, i32 %37\l  %45 = select i1 %43, float %36, float %42\l  %46 = add nuw nsw i32 %37, 1\l  %47 = add i32 %39, 1\l  %48 = icmp eq i32 %47, %24\l  br i1 %48, label %49, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x63c93a0:s0 -> Node0x63c78f0;
	Node0x63c93a0:s1 -> Node0x63c93a0;
	Node0x63c78f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = phi i32 [ -1, %18 ], [ %29, %28 ], [ %44, %35 ]\l  %51 = phi float [ 0.000000e+00, %18 ], [ %30, %28 ], [ %45, %35 ]\l  %52 = sext i32 %16 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %52\l  %54 = sitofp i32 %6 to float\l  %55 = fcmp contract ult float %51, %54\l  %56 = select i1 %55, float 0.000000e+00, float %51\l  store float %56, float addrspace(1)* %53, align 4, !tbaa !7\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %52\l  store i32 %16, i32 addrspace(1)* %57, align 4, !tbaa !13\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %52\l  store i32 %50, i32 addrspace(1)* %58, align 4, !tbaa !13\l  br label %122\l}"];
	Node0x63c78f0 -> Node0x63c7530;
	Node0x63c7e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %26 ], [ %118, %59 ]\l  %61 = phi i32 [ 0, %26 ], [ %119, %59 ]\l  %62 = phi i32 [ -1, %26 ], [ %117, %59 ]\l  %63 = phi i32 [ 0, %26 ], [ %120, %59 ]\l  %64 = zext i32 %61 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %21, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fcmp contract ugt float %60, %66\l  %68 = select i1 %67, i32 %62, i32 %61\l  %69 = select i1 %67, float %60, float %66\l  %70 = or i32 %61, 1\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %21, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = fcmp contract ugt float %69, %73\l  %75 = select i1 %74, i32 %68, i32 %70\l  %76 = select i1 %74, float %69, float %73\l  %77 = or i32 %61, 2\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %21, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %81 = fcmp contract ugt float %76, %80\l  %82 = select i1 %81, i32 %75, i32 %77\l  %83 = select i1 %81, float %76, float %80\l  %84 = or i32 %61, 3\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %21, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fcmp contract ugt float %83, %87\l  %89 = select i1 %88, i32 %82, i32 %84\l  %90 = select i1 %88, float %83, float %87\l  %91 = or i32 %61, 4\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %21, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = fcmp contract ugt float %90, %94\l  %96 = select i1 %95, i32 %89, i32 %91\l  %97 = select i1 %95, float %90, float %94\l  %98 = or i32 %61, 5\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %21, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = fcmp contract ugt float %97, %101\l  %103 = select i1 %102, i32 %96, i32 %98\l  %104 = select i1 %102, float %97, float %101\l  %105 = or i32 %61, 6\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %21, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = fcmp contract ugt float %104, %108\l  %110 = select i1 %109, i32 %103, i32 %105\l  %111 = select i1 %109, float %104, float %108\l  %112 = or i32 %61, 7\l  %113 = zext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %21, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fcmp contract ugt float %111, %115\l  %117 = select i1 %116, i32 %110, i32 %112\l  %118 = select i1 %116, float %111, float %115\l  %119 = add nuw nsw i32 %61, 8\l  %120 = add i32 %63, 8\l  %121 = icmp eq i32 %120, %27\l  br i1 %121, label %28, label %59, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x63c7e00:s0 -> Node0x63c7bb0;
	Node0x63c7e00:s1 -> Node0x63c7e00;
	Node0x63c7530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%122:\l122:                                              \l  ret void\l}"];
}
