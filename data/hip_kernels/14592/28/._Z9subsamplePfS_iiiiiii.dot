digraph "CFG for '_Z9subsamplePfS_iiiiiii' function" {
	label="CFG for '_Z9subsamplePfS_iiiiiii' function";

	Node0x56231f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%9:\l  %10 = sub nsw i32 %4, %6\l  %11 = sdiv i32 %10, %8\l  %12 = add nsw i32 %11, 1\l  %13 = sub nsw i32 %3, %5\l  %14 = sdiv i32 %13, %7\l  %15 = add nsw i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %24 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 2, !range !5, !invariant.load !6\l  %27 = zext i16 %26 to i32\l  %28 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 16\l  %29 = bitcast i8 addrspace(4)* %28 to i32 addrspace(4)*\l  %30 = load i32, i32 addrspace(4)* %29, align 8, !tbaa !7\l  %31 = mul i32 %23, %27\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %33 = add i32 %31, %32\l  %34 = udiv i32 %30, %27\l  %35 = mul i32 %34, %27\l  %36 = icmp ugt i32 %30, %35\l  %37 = zext i1 %36 to i32\l  %38 = add i32 %34, %37\l  %39 = mul i32 %38, %27\l  %40 = mul nsw i32 %12, %16\l  %41 = mul nsw i32 %40, %15\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = mul i32 %16, %3\l  %45 = mul i32 %44, %4\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = icmp sgt i32 %33, %14\l  br i1 %48, label %157, label %49\l|{<s0>T|<s1>F}}"];
	Node0x56231f0:s0 -> Node0x5628400;
	Node0x56231f0:s1 -> Node0x5628490;
	Node0x5628490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%49:\l49:                                               \l  %50 = icmp sgt i32 %17, %11\l  %51 = mul i32 %7, %4\l  %52 = icmp sgt i32 %5, 0\l  %53 = icmp sgt i32 %6, 0\l  %54 = sext i32 %4 to i64\l  %55 = mul nsw i32 %6, %5\l  %56 = sitofp i32 %55 to float\l  %57 = and i32 %6, 7\l  %58 = icmp ult i32 %6, 8\l  %59 = and i32 %6, -8\l  %60 = icmp eq i32 %57, 0\l  br label %61\l}"];
	Node0x5628490 -> Node0x5628c80;
	Node0x5628c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%61:\l61:                                               \l  %62 = phi i32 [ %33, %49 ], [ %155, %154 ]\l  br i1 %50, label %154, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5628c80:s0 -> Node0x5628d70;
	Node0x5628c80:s1 -> Node0x5628eb0;
	Node0x5628eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%63:\l63:                                               \l  %64 = mul i32 %51, %62\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %47, i64 %65\l  %67 = mul nsw i32 %62, %12\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %43, i64 %68\l  br label %70\l}"];
	Node0x5628eb0 -> Node0x5629530;
	Node0x5629530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%70:\l70:                                               \l  %71 = phi i32 [ %17, %63 ], [ %152, %149 ]\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %69, i64 %72\l  br i1 %52, label %74, label %149\l|{<s0>T|<s1>F}}"];
	Node0x5629530:s0 -> Node0x5629870;
	Node0x5629530:s1 -> Node0x5629620;
	Node0x5629870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%74:\l74:                                               \l  %75 = mul nsw i32 %71, %8\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %66, i64 %76\l  br label %78\l}"];
	Node0x5629870 -> Node0x5629b50;
	Node0x5629b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%78:\l78:                                               \l  %79 = phi i32 [ %147, %144 ], [ 0, %74 ]\l  %80 = phi float [ %145, %144 ], [ 0.000000e+00, %74 ]\l  %81 = phi float addrspace(1)* [ %146, %144 ], [ %77, %74 ]\l  br i1 %53, label %82, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5629b50:s0 -> Node0x562aa10;
	Node0x5629b50:s1 -> Node0x5629c40;
	Node0x562aa10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%82:\l82:                                               \l  br i1 %58, label %129, label %83\l|{<s0>T|<s1>F}}"];
	Node0x562aa10:s0 -> Node0x562ab50;
	Node0x562aa10:s1 -> Node0x562aba0;
	Node0x562aba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%83:\l83:                                               \l  %84 = phi i32 [ %126, %83 ], [ 0, %82 ]\l  %85 = phi float [ %125, %83 ], [ %80, %82 ]\l  %86 = phi i32 [ %127, %83 ], [ 0, %82 ]\l  %87 = zext i32 %84 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %81, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = fadd contract float %85, %89\l  %91 = or i32 %84, 1\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %81, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !16\l  %95 = fadd contract float %90, %94\l  %96 = or i32 %84, 2\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %81, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !16\l  %100 = fadd contract float %95, %99\l  %101 = or i32 %84, 3\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %81, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fadd contract float %100, %104\l  %106 = or i32 %84, 4\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %81, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16\l  %110 = fadd contract float %105, %109\l  %111 = or i32 %84, 5\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %81, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !16\l  %115 = fadd contract float %110, %114\l  %116 = or i32 %84, 6\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %81, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16\l  %120 = fadd contract float %115, %119\l  %121 = or i32 %84, 7\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %81, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !16\l  %125 = fadd contract float %120, %124\l  %126 = add nuw nsw i32 %84, 8\l  %127 = add i32 %86, 8\l  %128 = icmp eq i32 %127, %59\l  br i1 %128, label %129, label %83, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x562aba0:s0 -> Node0x562ab50;
	Node0x562aba0:s1 -> Node0x562aba0;
	Node0x562ab50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%129:\l129:                                              \l  %130 = phi float [ undef, %82 ], [ %125, %83 ]\l  %131 = phi i32 [ 0, %82 ], [ %126, %83 ]\l  %132 = phi float [ %80, %82 ], [ %125, %83 ]\l  br i1 %60, label %144, label %133\l|{<s0>T|<s1>F}}"];
	Node0x562ab50:s0 -> Node0x5629c40;
	Node0x562ab50:s1 -> Node0x5629390;
	Node0x5629390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi i32 [ %141, %133 ], [ %131, %129 ]\l  %135 = phi float [ %140, %133 ], [ %132, %129 ]\l  %136 = phi i32 [ %142, %133 ], [ 0, %129 ]\l  %137 = zext i32 %134 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %81, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !16\l  %140 = fadd contract float %135, %139\l  %141 = add nuw nsw i32 %134, 1\l  %142 = add i32 %136, 1\l  %143 = icmp eq i32 %142, %57\l  br i1 %143, label %144, label %133, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5629390:s0 -> Node0x5629c40;
	Node0x5629390:s1 -> Node0x5629390;
	Node0x5629c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%144:\l144:                                              \l  %145 = phi float [ %80, %78 ], [ %130, %129 ], [ %140, %133 ]\l  %146 = getelementptr inbounds float, float addrspace(1)* %81, i64 %54\l  %147 = add nuw nsw i32 %79, 1\l  %148 = icmp eq i32 %147, %5\l  br i1 %148, label %149, label %78, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5629c40:s0 -> Node0x5629620;
	Node0x5629c40:s1 -> Node0x5629b50;
	Node0x5629620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%149:\l149:                                              \l  %150 = phi float [ 0.000000e+00, %70 ], [ %145, %144 ]\l  %151 = fdiv contract float %150, %56\l  store float %151, float addrspace(1)* %73, align 4, !tbaa !16\l  %152 = add nuw nsw i32 %71, %22\l  %153 = icmp sgt i32 %152, %11\l  br i1 %153, label %154, label %70, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5629620:s0 -> Node0x5628d70;
	Node0x5629620:s1 -> Node0x5629530;
	Node0x5628d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%154:\l154:                                              \l  %155 = add nsw i32 %62, %39\l  %156 = icmp sgt i32 %155, %14\l  br i1 %156, label %157, label %61, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5628d70:s0 -> Node0x5628400;
	Node0x5628d70:s1 -> Node0x5628c80;
	Node0x5628400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%157:\l157:                                              \l  ret void\l}"];
}
