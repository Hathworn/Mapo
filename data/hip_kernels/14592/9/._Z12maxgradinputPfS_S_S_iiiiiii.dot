digraph "CFG for '_Z12maxgradinputPfS_S_S_iiiiiii' function" {
	label="CFG for '_Z12maxgradinputPfS_S_S_iiiiiii' function";

	Node0x5f0a590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%11:\l  %12 = sub nsw i32 %6, %8\l  %13 = sdiv i32 %12, %10\l  %14 = add nsw i32 %13, 1\l  %15 = sub nsw i32 %5, %7\l  %16 = sdiv i32 %15, %9\l  %17 = add nsw i32 %16, 1\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %20, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 16\l  %31 = bitcast i8 addrspace(4)* %30 to i32 addrspace(4)*\l  %32 = load i32, i32 addrspace(4)* %31, align 8, !tbaa !7\l  %33 = mul i32 %25, %29\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %35 = add i32 %33, %34\l  %36 = udiv i32 %32, %29\l  %37 = mul i32 %36, %29\l  %38 = icmp ugt i32 %32, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %29\l  %42 = mul nsw i32 %14, %18\l  %43 = mul nsw i32 %42, %17\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = mul i32 %18, %5\l  %47 = mul i32 %46, %6\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %51 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %52 = icmp sgt i32 %35, %16\l  br i1 %52, label %94, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5f0a590:s0 -> Node0x5f0f940;
	Node0x5f0a590:s1 -> Node0x5f0f9d0;
	Node0x5f0f9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%53:\l53:                                               \l  %54 = icmp sgt i32 %19, %13\l  %55 = mul i32 %9, %6\l  br label %56\l}"];
	Node0x5f0f9d0 -> Node0x5f0fc30;
	Node0x5f0fc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%56:\l56:                                               \l  %57 = phi i32 [ %35, %53 ], [ %92, %91 ]\l  br i1 %54, label %91, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5f0fc30:s0 -> Node0x5f0fd20;
	Node0x5f0fc30:s1 -> Node0x5f0fe60;
	Node0x5f0fe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%58:\l58:                                               \l  %59 = mul i32 %55, %57\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %49, i64 %60\l  %62 = mul nsw i32 %57, %14\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %45, i64 %63\l  %65 = getelementptr inbounds float, float addrspace(1)* %50, i64 %63\l  %66 = getelementptr inbounds float, float addrspace(1)* %51, i64 %63\l  br label %67\l}"];
	Node0x5f0fe60 -> Node0x5f0e700;
	Node0x5f0e700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %19, %58 ], [ %89, %67 ]\l  %69 = mul nsw i32 %68, %10\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %61, i64 %70\l  %72 = zext i32 %68 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %64, i64 %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %65, i64 %72\l  %75 = getelementptr inbounds float, float addrspace(1)* %66, i64 %72\l  %76 = load float, float addrspace(1)* %73, align 4, !tbaa !16\l  %77 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %78 = fadd contract float %77, -1.000000e+00\l  %79 = fptosi float %78 to i32\l  %80 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %81 = fadd contract float %80, -1.000000e+00\l  %82 = fptosi float %81 to i32\l  %83 = mul nsw i32 %82, %6\l  %84 = add nsw i32 %83, %79\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %71, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fadd contract float %76, %87\l  store float %88, float addrspace(1)* %86, align 4, !tbaa !16\l  %89 = add nuw nsw i32 %68, %24\l  %90 = icmp sgt i32 %89, %13\l  br i1 %90, label %91, label %67, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5f0e700:s0 -> Node0x5f0fd20;
	Node0x5f0e700:s1 -> Node0x5f0e700;
	Node0x5f0fd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%91:\l91:                                               \l  %92 = add nsw i32 %57, %41\l  %93 = icmp sgt i32 %92, %16\l  br i1 %93, label %94, label %56, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5f0fd20:s0 -> Node0x5f0f940;
	Node0x5f0fd20:s1 -> Node0x5f0fc30;
	Node0x5f0f940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%94:\l94:                                               \l  ret void\l}"];
}
