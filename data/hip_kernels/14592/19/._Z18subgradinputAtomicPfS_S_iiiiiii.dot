digraph "CFG for '_Z18subgradinputAtomicPfS_S_iiiiiii' function" {
	label="CFG for '_Z18subgradinputAtomicPfS_S_iiiiiii' function";

	Node0x5c4c140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%10:\l  %11 = sub nsw i32 %5, %7\l  %12 = sdiv i32 %11, %9\l  %13 = add nsw i32 %12, 1\l  %14 = sub nsw i32 %4, %6\l  %15 = sdiv i32 %14, %8\l  %16 = add nsw i32 %15, 1\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = urem i32 %17, %3\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 4, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %20, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !6\l  %29 = zext i16 %28 to i32\l  %30 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 16\l  %31 = bitcast i8 addrspace(4)* %30 to i32 addrspace(4)*\l  %32 = load i32, i32 addrspace(4)* %31, align 8, !tbaa !7\l  %33 = mul i32 %25, %29\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %35 = add i32 %33, %34\l  %36 = udiv i32 %32, %29\l  %37 = mul i32 %36, %29\l  %38 = icmp ugt i32 %32, %37\l  %39 = zext i1 %38 to i32\l  %40 = add i32 %36, %39\l  %41 = mul i32 %40, %29\l  %42 = mul nsw i32 %13, %17\l  %43 = mul nsw i32 %42, %16\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = mul i32 %17, %4\l  %47 = mul i32 %46, %5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = sext i32 %18 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %53 = icmp sgt i32 %35, %15\l  br i1 %53, label %145, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5c4c140:s0 -> Node0x5c51790;
	Node0x5c4c140:s1 -> Node0x5c51820;
	Node0x5c51820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%54:\l54:                                               \l  %55 = icmp sgt i32 %19, %12\l  %56 = mul i32 %8, %5\l  %57 = icmp sgt i32 %6, 0\l  %58 = icmp sgt i32 %7, 0\l  %59 = sext i32 %5 to i64\l  %60 = and i32 %7, 7\l  %61 = icmp ult i32 %7, 8\l  %62 = and i32 %7, -8\l  %63 = icmp eq i32 %60, 0\l  br label %64\l}"];
	Node0x5c51820 -> Node0x5c51ee0;
	Node0x5c51ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%64:\l64:                                               \l  %65 = phi i32 [ %35, %54 ], [ %143, %142 ]\l  br i1 %55, label %142, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5c51ee0:s0 -> Node0x5c50220;
	Node0x5c51ee0:s1 -> Node0x5c50360;
	Node0x5c50360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%66:\l66:                                               \l  %67 = mul i32 %56, %65\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %49, i64 %68\l  %70 = mul nsw i32 %65, %13\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %45, i64 %71\l  br label %73\l}"];
	Node0x5c50360 -> Node0x5c527a0;
	Node0x5c527a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%73:\l73:                                               \l  %74 = phi i32 [ %19, %66 ], [ %140, %139 ]\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %72, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !16\l  %78 = fmul contract float %52, %77\l  br i1 %57, label %79, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5c527a0:s0 -> Node0x5c531f0;
	Node0x5c527a0:s1 -> Node0x5c52890;
	Node0x5c531f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%79:\l79:                                               \l  %80 = mul nsw i32 %74, %9\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %69, i64 %81\l  br label %83\l}"];
	Node0x5c531f0 -> Node0x5c534d0;
	Node0x5c534d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%83:\l83:                                               \l  %84 = phi i32 [ %137, %135 ], [ 0, %79 ]\l  %85 = phi float addrspace(1)* [ %136, %135 ], [ %82, %79 ]\l  br i1 %58, label %86, label %135\l|{<s0>T|<s1>F}}"];
	Node0x5c534d0:s0 -> Node0x5c53820;
	Node0x5c534d0:s1 -> Node0x5c535c0;
	Node0x5c53820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%86:\l86:                                               \l  br i1 %61, label %124, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5c53820:s0 -> Node0x5c53960;
	Node0x5c53820:s1 -> Node0x5c539b0;
	Node0x5c539b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%87:\l87:                                               \l  %88 = phi i32 [ %121, %87 ], [ 0, %86 ]\l  %89 = phi i32 [ %122, %87 ], [ 0, %86 ]\l  %90 = zext i32 %88 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %85, i64 %90\l  %92 = atomicrmw fadd float addrspace(1)* %91, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %93 = or i32 %88, 1\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %85, i64 %94\l  %96 = atomicrmw fadd float addrspace(1)* %95, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %97 = or i32 %88, 2\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %85, i64 %98\l  %100 = atomicrmw fadd float addrspace(1)* %99, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %101 = or i32 %88, 3\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %85, i64 %102\l  %104 = atomicrmw fadd float addrspace(1)* %103, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %105 = or i32 %88, 4\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %85, i64 %106\l  %108 = atomicrmw fadd float addrspace(1)* %107, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %109 = or i32 %88, 5\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %85, i64 %110\l  %112 = atomicrmw fadd float addrspace(1)* %111, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %113 = or i32 %88, 6\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %85, i64 %114\l  %116 = atomicrmw fadd float addrspace(1)* %115, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %117 = or i32 %88, 7\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %85, i64 %118\l  %120 = atomicrmw fadd float addrspace(1)* %119, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %121 = add nuw nsw i32 %88, 8\l  %122 = add i32 %89, 8\l  %123 = icmp eq i32 %122, %62\l  br i1 %123, label %124, label %87, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5c539b0:s0 -> Node0x5c53960;
	Node0x5c539b0:s1 -> Node0x5c539b0;
	Node0x5c53960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%124:\l124:                                              \l  %125 = phi i32 [ 0, %86 ], [ %121, %87 ]\l  br i1 %63, label %135, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5c53960:s0 -> Node0x5c535c0;
	Node0x5c53960:s1 -> Node0x5c55300;
	Node0x5c55300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi i32 [ %132, %126 ], [ %125, %124 ]\l  %128 = phi i32 [ %133, %126 ], [ 0, %124 ]\l  %129 = zext i32 %127 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %85, i64 %129\l  %131 = atomicrmw fadd float addrspace(1)* %130, float %78\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %132 = add nuw nsw i32 %127, 1\l  %133 = add i32 %128, 1\l  %134 = icmp eq i32 %133, %60\l  br i1 %134, label %135, label %126, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5c55300:s0 -> Node0x5c535c0;
	Node0x5c55300:s1 -> Node0x5c55300;
	Node0x5c535c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%135:\l135:                                              \l  %136 = getelementptr inbounds float, float addrspace(1)* %85, i64 %59\l  %137 = add nuw nsw i32 %84, 1\l  %138 = icmp eq i32 %137, %6\l  br i1 %138, label %139, label %83, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5c535c0:s0 -> Node0x5c52890;
	Node0x5c535c0:s1 -> Node0x5c534d0;
	Node0x5c52890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%139:\l139:                                              \l  %140 = add nuw nsw i32 %74, %24\l  %141 = icmp sgt i32 %140, %12\l  br i1 %141, label %142, label %73, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5c52890:s0 -> Node0x5c50220;
	Node0x5c52890:s1 -> Node0x5c527a0;
	Node0x5c50220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%142:\l142:                                              \l  %143 = add nsw i32 %65, %41\l  %144 = icmp sgt i32 %143, %15\l  br i1 %144, label %145, label %64, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5c50220:s0 -> Node0x5c51790;
	Node0x5c50220:s1 -> Node0x5c51ee0;
	Node0x5c51790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7ea1fa70",label="{%145:\l145:                                              \l  ret void\l}"];
}
