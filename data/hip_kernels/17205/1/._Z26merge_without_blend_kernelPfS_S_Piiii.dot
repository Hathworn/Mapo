digraph "CFG for '_Z26merge_without_blend_kernelPfS_S_Piiii' function" {
	label="CFG for '_Z26merge_without_blend_kernelPfS_S_Piiii' function";

	Node0x565f380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = add i32 %15, %9\l  %17 = icmp sgt i32 %4, 0\l  br i1 %17, label %18, label %52\l|{<s0>T|<s1>F}}"];
	Node0x565f380:s0 -> Node0x56612f0;
	Node0x565f380:s1 -> Node0x5661380;
	Node0x56612f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %24 = mul i32 %23, %22\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %26 = add i32 %24, %25\l  %27 = and i32 %4, 3\l  %28 = icmp ult i32 %4, 4\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x56612f0:s0 -> Node0x5662fd0;
	Node0x56612f0:s1 -> Node0x5663060;
	Node0x5663060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  %30 = and i32 %4, -4\l  br label %53\l}"];
	Node0x5663060 -> Node0x5663260;
	Node0x5662fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %18 ], [ %107, %53 ]\l  %33 = icmp eq i32 %27, 0\l  br i1 %33, label %52, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5662fd0:s0 -> Node0x5661380;
	Node0x5662fd0:s1 -> Node0x5661270;
	Node0x5661270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %49, %34 ], [ %32, %31 ]\l  %36 = phi i32 [ %50, %34 ], [ 0, %31 ]\l  %37 = mul i32 %35, %6\l  %38 = add i32 %16, %37\l  %39 = mul i32 %38, %5\l  %40 = add i32 %26, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %44 = icmp eq i32 %43, 0\l  %45 = select i1 %44, float addrspace(1)* %1, float addrspace(1)* %0\l  %46 = getelementptr inbounds float, float addrspace(1)* %45, i64 %41\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !11\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  store float %47, float addrspace(1)* %48, align 4\l  %49 = add nuw nsw i32 %35, 1\l  %50 = add i32 %36, 1\l  %51 = icmp eq i32 %50, %27\l  br i1 %51, label %52, label %34, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5661270:s0 -> Node0x5661380;
	Node0x5661270:s1 -> Node0x5661270;
	Node0x5661380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%52:\l52:                                               \l  ret void\l}"];
	Node0x5663260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %29 ], [ %107, %53 ]\l  %55 = phi i32 [ 0, %29 ], [ %108, %53 ]\l  %56 = mul i32 %54, %6\l  %57 = add i32 %16, %56\l  %58 = mul i32 %57, %5\l  %59 = add i32 %26, %58\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %63 = icmp eq i32 %62, 0\l  %64 = select i1 %63, float addrspace(1)* %1, float addrspace(1)* %0\l  %65 = getelementptr inbounds float, float addrspace(1)* %64, i64 %60\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !11\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  store float %66, float addrspace(1)* %67, align 4\l  %68 = or i32 %54, 1\l  %69 = mul i32 %68, %6\l  %70 = add i32 %16, %69\l  %71 = mul i32 %70, %5\l  %72 = add i32 %26, %71\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %73\l  %75 = load i32, i32 addrspace(1)* %74, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %76 = icmp eq i32 %75, 0\l  %77 = select i1 %76, float addrspace(1)* %1, float addrspace(1)* %0\l  %78 = getelementptr inbounds float, float addrspace(1)* %77, i64 %73\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !11\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %73\l  store float %79, float addrspace(1)* %80, align 4\l  %81 = or i32 %54, 2\l  %82 = mul i32 %81, %6\l  %83 = add i32 %16, %82\l  %84 = mul i32 %83, %5\l  %85 = add i32 %26, %84\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %86\l  %88 = load i32, i32 addrspace(1)* %87, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %89 = icmp eq i32 %88, 0\l  %90 = select i1 %89, float addrspace(1)* %1, float addrspace(1)* %0\l  %91 = getelementptr inbounds float, float addrspace(1)* %90, i64 %86\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !11\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %86\l  store float %92, float addrspace(1)* %93, align 4\l  %94 = or i32 %54, 3\l  %95 = mul i32 %94, %6\l  %96 = add i32 %16, %95\l  %97 = mul i32 %96, %5\l  %98 = add i32 %26, %97\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %102 = icmp eq i32 %101, 0\l  %103 = select i1 %102, float addrspace(1)* %1, float addrspace(1)* %0\l  %104 = getelementptr inbounds float, float addrspace(1)* %103, i64 %99\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !11\l  %106 = getelementptr inbounds float, float addrspace(1)* %2, i64 %99\l  store float %105, float addrspace(1)* %106, align 4\l  %107 = add nuw nsw i32 %54, 4\l  %108 = add i32 %55, 4\l  %109 = icmp eq i32 %108, %30\l  br i1 %109, label %31, label %53, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5663260:s0 -> Node0x5662fd0;
	Node0x5663260:s1 -> Node0x5663260;
}
