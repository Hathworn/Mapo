digraph "CFG for '_Z21poisson_jacobi_kernelPfS_Piiiiiiii' function" {
	label="CFG for '_Z21poisson_jacobi_kernelPfS_Piiiiiiii' function";

	Node0x60283d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = add i32 %11, %6\l  %20 = add i32 %19, %18\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %21, %8\l  %29 = add i32 %28, %27\l  %30 = icmp sgt i32 %3, 0\l  br i1 %30, label %31, label %39\l|{<s0>T|<s1>F}}"];
	Node0x60283d0:s0 -> Node0x602c9a0;
	Node0x60283d0:s1 -> Node0x602ca30;
	Node0x602c9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %29, %4\l  %33 = add nsw i32 %32, %20\l  %34 = mul i32 %5, %4\l  %35 = add nsw i32 %29, -1\l  %36 = mul nsw i32 %35, %4\l  %37 = add nsw i32 %29, 1\l  %38 = mul nsw i32 %37, %4\l  br label %40\l}"];
	Node0x602c9a0 -> Node0x602d0e0;
	Node0x602ca30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x602d0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %31 ], [ %94, %93 ]\l  %42 = mul i32 %34, %41\l  %43 = add nsw i32 %33, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = icmp eq i32 %46, 0\l  br i1 %47, label %48, label %93\l|{<s0>T|<s1>F}}"];
	Node0x602d0e0:s0 -> Node0x602d840;
	Node0x602d0e0:s1 -> Node0x602d220;
	Node0x602d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = add i32 %42, %20\l  %50 = add i32 %49, %36\l  %51 = add i32 %49, %38\l  %52 = add nsw i32 %49, -1\l  %53 = add i32 %52, %32\l  %54 = add i32 %49, 1\l  %55 = add i32 %54, %32\l  %56 = sext i32 %51 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !11\l  %59 = sext i32 %55 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11\l  %62 = fadd contract float %58, %61\l  %63 = sext i32 %53 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !11\l  %66 = fadd contract float %62, %65\l  %67 = sext i32 %50 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !11\l  %70 = fadd contract float %66, %69\l  %71 = fpext float %70 to double\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !11\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !11\l  %76 = fadd contract float %73, %75\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !11\l  %79 = fadd contract float %76, %78\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11\l  %82 = fadd contract float %79, %81\l  %83 = fpext float %82 to double\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !11\l  %86 = fmul contract float %85, 4.000000e+00\l  %87 = fpext float %86 to double\l  %88 = fsub contract double %87, %71\l  %89 = fadd contract double %88, %83\l  %90 = fmul contract double %89, 2.500000e-01\l  %91 = fptrunc double %90 to float\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  store float %91, float addrspace(1)* %92, align 4, !tbaa !11\l  br label %93\l}"];
	Node0x602d840 -> Node0x602d220;
	Node0x602d220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = add nuw nsw i32 %41, 1\l  %95 = icmp eq i32 %94, %3\l  br i1 %95, label %39, label %40, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x602d220:s0 -> Node0x602ca30;
	Node0x602d220:s1 -> Node0x602d0e0;
}
