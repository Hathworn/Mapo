digraph "CFG for '_Z23extract_boundary_kernelPfPiiii' function" {
	label="CFG for '_Z23extract_boundary_kernelPfPiiii' function";

	Node0x4d584b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = icmp sgt i32 %2, 0\l  br i1 %23, label %24, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4d584b0:s0 -> Node0x4d5be10;
	Node0x4d584b0:s1 -> Node0x4d5bea0;
	Node0x4d5be10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%24:\l24:                                               \l  %25 = icmp slt i32 %14, %3\l  %26 = icmp slt i32 %22, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = mul nsw i32 %22, %3\l  %29 = add nsw i32 %28, %14\l  %30 = mul i32 %4, %3\l  %31 = icmp eq i32 %14, 0\l  %32 = icmp eq i32 %22, 0\l  %33 = select i1 %31, i1 %32, i1 false\l  %34 = add nsw i32 %4, -1\l  %35 = icmp eq i32 %22, %34\l  %36 = select i1 %31, i1 %35, i1 false\l  %37 = add nsw i32 %3, -1\l  %38 = icmp eq i32 %14, %37\l  %39 = select i1 %38, i1 %32, i1 false\l  %40 = select i1 %38, i1 %35, i1 false\l  %41 = icmp slt i32 %22, %34\l  %42 = select i1 %31, i1 %41, i1 false\l  %43 = select i1 %38, i1 %41, i1 false\l  %44 = icmp slt i32 %14, %37\l  %45 = select i1 %44, i1 %32, i1 false\l  %46 = select i1 %44, i1 %35, i1 false\l  %47 = add nsw i32 %22, 1\l  %48 = mul nsw i32 %47, %3\l  %49 = add nsw i32 %22, -1\l  %50 = mul nsw i32 %49, %3\l  br label %52\l}"];
	Node0x4d5be10 -> Node0x4d5d130;
	Node0x4d5bea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%51:\l51:                                               \l  ret void\l}"];
	Node0x4d5d130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %24 ], [ %157, %156 ]\l  br i1 %27, label %54, label %156\l|{<s0>T|<s1>F}}"];
	Node0x4d5d130:s0 -> Node0x4d5d370;
	Node0x4d5d130:s1 -> Node0x4d5d270;
	Node0x4d5d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%54:\l54:                                               \l  %55 = mul i32 %30, %53\l  %56 = add nsw i32 %29, %55\l  br i1 %33, label %57, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4d5d370:s0 -> Node0x4d5d5d0;
	Node0x4d5d370:s1 -> Node0x4d5d620;
	Node0x4d5d5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%57:\l57:                                               \l  %58 = sext i32 %56 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %61 = fcmp contract une float %60, 0.000000e+00\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4d5d5d0:s0 -> Node0x4d5e570;
	Node0x4d5d5d0:s1 -> Node0x4d5d620;
	Node0x4d5e570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  store i32 2, i32 addrspace(1)* %63, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d5e570 -> Node0x4d5d270;
	Node0x4d5d620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%64:\l64:                                               \l  br i1 %36, label %65, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4d5d620:s0 -> Node0x4d5c4b0;
	Node0x4d5d620:s1 -> Node0x4d5c500;
	Node0x4d5c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%65:\l65:                                               \l  %66 = sext i32 %56 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %69 = fcmp contract une float %68, 0.000000e+00\l  br i1 %69, label %70, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4d5c4b0:s0 -> Node0x4d5f540;
	Node0x4d5c4b0:s1 -> Node0x4d5c500;
	Node0x4d5f540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%70:\l70:                                               \l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %66\l  store i32 2, i32 addrspace(1)* %71, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d5f540 -> Node0x4d5d270;
	Node0x4d5c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%72:\l72:                                               \l  br i1 %39, label %73, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4d5c500:s0 -> Node0x4d5fe30;
	Node0x4d5c500:s1 -> Node0x4d5fe80;
	Node0x4d5fe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%73:\l73:                                               \l  %74 = sext i32 %56 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %77 = fcmp contract une float %76, 0.000000e+00\l  br i1 %77, label %78, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4d5fe30:s0 -> Node0x4d60190;
	Node0x4d5fe30:s1 -> Node0x4d5fe80;
	Node0x4d60190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%78:\l78:                                               \l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %74\l  store i32 2, i32 addrspace(1)* %79, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d60190 -> Node0x4d5d270;
	Node0x4d5fe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%80:\l80:                                               \l  br i1 %40, label %81, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4d5fe80:s0 -> Node0x4d60470;
	Node0x4d5fe80:s1 -> Node0x4d604c0;
	Node0x4d60470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%81:\l81:                                               \l  %82 = sext i32 %56 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = fcmp contract une float %84, 0.000000e+00\l  br i1 %85, label %86, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4d60470:s0 -> Node0x4d607d0;
	Node0x4d60470:s1 -> Node0x4d604c0;
	Node0x4d607d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%86:\l86:                                               \l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %82\l  store i32 2, i32 addrspace(1)* %87, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d607d0 -> Node0x4d5d270;
	Node0x4d604c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%88:\l88:                                               \l  br i1 %42, label %89, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4d604c0:s0 -> Node0x4d60ab0;
	Node0x4d604c0:s1 -> Node0x4d60b00;
	Node0x4d60ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%89:\l89:                                               \l  %90 = sext i32 %56 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %93 = fcmp contract une float %92, 0.000000e+00\l  br i1 %93, label %94, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4d60ab0:s0 -> Node0x4d60e10;
	Node0x4d60ab0:s1 -> Node0x4d60b00;
	Node0x4d60e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%94:\l94:                                               \l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %90\l  store i32 2, i32 addrspace(1)* %95, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d60e10 -> Node0x4d5d270;
	Node0x4d60b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%96:\l96:                                               \l  br i1 %43, label %97, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4d60b00:s0 -> Node0x4d610f0;
	Node0x4d60b00:s1 -> Node0x4d61140;
	Node0x4d610f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%97:\l97:                                               \l  %98 = sext i32 %56 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %101 = fcmp contract une float %100, 0.000000e+00\l  br i1 %101, label %102, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4d610f0:s0 -> Node0x4d61450;
	Node0x4d610f0:s1 -> Node0x4d61140;
	Node0x4d61450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%102:\l102:                                              \l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %98\l  store i32 2, i32 addrspace(1)* %103, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d61450 -> Node0x4d5d270;
	Node0x4d61140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%104:\l104:                                              \l  br i1 %45, label %105, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4d61140:s0 -> Node0x4d61730;
	Node0x4d61140:s1 -> Node0x4d61780;
	Node0x4d61730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%105:\l105:                                              \l  %106 = sext i32 %56 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %109 = fcmp contract une float %108, 0.000000e+00\l  br i1 %109, label %110, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4d61730:s0 -> Node0x4d61a90;
	Node0x4d61730:s1 -> Node0x4d61780;
	Node0x4d61a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%110:\l110:                                              \l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %106\l  store i32 2, i32 addrspace(1)* %111, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d61a90 -> Node0x4d5d270;
	Node0x4d61780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%112:\l112:                                              \l  %113 = sext i32 %56 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7\l  %116 = fcmp contract une float %115, 0.000000e+00\l  %117 = select i1 %46, i1 %116, i1 false\l  br i1 %117, label %118, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4d61780:s0 -> Node0x4d62030;
	Node0x4d61780:s1 -> Node0x4d62080;
	Node0x4d62030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%118:\l118:                                              \l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %113\l  store i32 2, i32 addrspace(1)* %119, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d62030 -> Node0x4d5d270;
	Node0x4d62080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%120:\l120:                                              \l  %121 = add i32 %55, %14\l  %122 = add nsw i32 %121, -1\l  %123 = add i32 %122, %28\l  %124 = add i32 %121, %48\l  %125 = add i32 %121, %50\l  %126 = fcmp contract ult float %115, 5.000000e-01\l  br i1 %126, label %151, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4d62080:s0 -> Node0x4d62680;
	Node0x4d62080:s1 -> Node0x4d626d0;
	Node0x4d626d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%127:\l127:                                              \l  %128 = add i32 %121, 1\l  %129 = add i32 %128, %28\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %133 = fcmp contract ult float %132, 5.000000e-01\l  br i1 %133, label %151, label %134\l|{<s0>T|<s1>F}}"];
	Node0x4d626d0:s0 -> Node0x4d62680;
	Node0x4d626d0:s1 -> Node0x4d5ec20;
	Node0x4d5ec20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%134:\l134:                                              \l  %135 = sext i32 %123 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %0, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %138 = fcmp contract ult float %137, 5.000000e-01\l  br i1 %138, label %151, label %139\l|{<s0>T|<s1>F}}"];
	Node0x4d5ec20:s0 -> Node0x4d62680;
	Node0x4d5ec20:s1 -> Node0x4d632c0;
	Node0x4d632c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%139:\l139:                                              \l  %140 = sext i32 %124 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %143 = fcmp contract ult float %142, 5.000000e-01\l  br i1 %143, label %151, label %144\l|{<s0>T|<s1>F}}"];
	Node0x4d632c0:s0 -> Node0x4d62680;
	Node0x4d632c0:s1 -> Node0x4d63610;
	Node0x4d63610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%144:\l144:                                              \l  %145 = sext i32 %125 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %148 = fcmp contract ult float %147, 5.000000e-01\l  br i1 %148, label %151, label %149\l|{<s0>T|<s1>F}}"];
	Node0x4d63610:s0 -> Node0x4d62680;
	Node0x4d63610:s1 -> Node0x4d63960;
	Node0x4d63960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%149:\l149:                                              \l  %150 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %113\l  store i32 0, i32 addrspace(1)* %150, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d63960 -> Node0x4d5d270;
	Node0x4d62680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%151:\l151:                                              \l  %152 = fcmp contract une float %115, 0.000000e+00\l  %153 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %113\l  br i1 %152, label %154, label %155\l|{<s0>T|<s1>F}}"];
	Node0x4d62680:s0 -> Node0x4d63d70;
	Node0x4d62680:s1 -> Node0x4d63dc0;
	Node0x4d63d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%154:\l154:                                              \l  store i32 1, i32 addrspace(1)* %153, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d63d70 -> Node0x4d5d270;
	Node0x4d63dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%155:\l155:                                              \l  store i32 2, i32 addrspace(1)* %153, align 4, !tbaa !11\l  br label %156\l}"];
	Node0x4d63dc0 -> Node0x4d5d270;
	Node0x4d5d270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%156:\l156:                                              \l  %157 = add nuw nsw i32 %53, 1\l  %158 = icmp eq i32 %157, %2\l  br i1 %158, label %51, label %52, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4d5d270:s0 -> Node0x4d5bea0;
	Node0x4d5d270:s1 -> Node0x4d5d130;
}
