digraph "CFG for '_Z35convolution1d_tiles_constant_kernelPiS_' function" {
	label="CFG for '_Z35convolution1d_tiles_constant_kernelPiS_' function";

	Node0x5332630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = mul i32 %3, %8\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add i32 %9, %10\l  %12 = add i32 %3, -1\l  %13 = mul i32 %12, %8\l  %14 = add i32 %13, %10\l  %15 = add nsw i32 %8, -1\l  %16 = icmp ult i32 %10, %15\l  br i1 %16, label %27, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5332630:s0 -> Node0x53339d0;
	Node0x5332630:s1 -> Node0x5334260;
	Node0x5334260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%17:\l17:                                               \l  %18 = icmp slt i32 %14, 0\l  br i1 %18, label %23, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5334260:s0 -> Node0x5334430;
	Node0x5334260:s1 -> Node0x5334480;
	Node0x5334480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%19:\l19:                                               \l  %20 = zext i32 %14 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %23\l}"];
	Node0x5334480 -> Node0x5334430;
	Node0x5334430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%23:\l23:                                               \l  %24 = phi i32 [ %22, %19 ], [ 0, %17 ]\l  %25 = sub nsw i32 %10, %15\l  %26 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %25\l  store i32 %24, i32 addrspace(3)* %26, align 4, !tbaa !7\l  br label %27\l}"];
	Node0x5334430 -> Node0x53339d0;
	Node0x53339d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = icmp ult i32 %11, 32\l  br i1 %28, label %29, label %33\l|{<s0>T|<s1>F}}"];
	Node0x53339d0:s0 -> Node0x5335110;
	Node0x53339d0:s1 -> Node0x53359d0;
	Node0x5335110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%29:\l29:                                               \l  %30 = zext i32 %11 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %33\l}"];
	Node0x5335110 -> Node0x53359d0;
	Node0x53359d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %32, %29 ], [ 0, %27 ]\l  %35 = add nuw nsw i32 %10, 1\l  %36 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %35\l  store i32 %34, i32 addrspace(3)* %36, align 4, !tbaa !7\l  %37 = add i32 %3, 1\l  %38 = mul i32 %37, %8\l  %39 = add i32 %38, %10\l  %40 = icmp eq i32 %10, 0\l  br i1 %40, label %41, label %51\l|{<s0>T|<s1>F}}"];
	Node0x53359d0:s0 -> Node0x5336370;
	Node0x53359d0:s1 -> Node0x53363c0;
	Node0x5336370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%41:\l41:                                               \l  %42 = icmp sgt i32 %39, 31\l  br i1 %42, label %47, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5336370:s0 -> Node0x5336550;
	Node0x5336370:s1 -> Node0x53365a0;
	Node0x53365a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = sext i32 %39 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  br label %47\l}"];
	Node0x53365a0 -> Node0x5336550;
	Node0x5336550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%47:\l47:                                               \l  %48 = phi i32 [ %46, %43 ], [ 0, %41 ]\l  %49 = add nuw nsw i32 %8, 1\l  %50 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %49\l  store i32 %48, i32 addrspace(3)* %50, align 4, !tbaa !7\l  br label %51\l}"];
	Node0x5336550 -> Node0x53363c0;
	Node0x53363c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %10\l  %53 = load i32, i32 addrspace(3)* %52, align 4, !tbaa !7\l  %54 = load i8, i8 addrspace(4)* getelementptr inbounds ([9 x i8], [9 x i8]\l... addrspace(4)* @Global_Mask, i64 0, i64 0), align 1, !tbaa !11\l  %55 = sext i8 %54 to i32\l  %56 = mul nsw i32 %53, %55\l  %57 = add nuw nsw i32 %10, 1\l  %58 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %57\l  %59 = load i32, i32 addrspace(3)* %58, align 4, !tbaa !7\l  %60 = load i8, i8 addrspace(4)* getelementptr inbounds ([9 x i8], [9 x i8]\l... addrspace(4)* @Global_Mask, i64 0, i64 1), align 1, !tbaa !11\l  %61 = sext i8 %60 to i32\l  %62 = mul nsw i32 %59, %61\l  %63 = add nsw i32 %62, %56\l  %64 = add nuw nsw i32 %10, 2\l  %65 = getelementptr inbounds [34 x i32], [34 x i32] addrspace(3)*\l... @_ZZ35convolution1d_tiles_constant_kernelPiS_E4Tile, i32 0, i32 %64\l  %66 = load i32, i32 addrspace(3)* %65, align 4, !tbaa !7\l  %67 = load i8, i8 addrspace(4)* getelementptr inbounds ([9 x i8], [9 x i8]\l... addrspace(4)* @Global_Mask, i64 0, i64 2), align 1, !tbaa !11\l  %68 = sext i8 %67 to i32\l  %69 = mul nsw i32 %66, %68\l  %70 = add nsw i32 %69, %63\l  %71 = zext i32 %11 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  store i32 %70, i32 addrspace(1)* %72, align 4, !tbaa !7\l  ret void\l}"];
}
