digraph "CFG for '_Z32reg_multiplyArrays_kernel_float4P15HIP_vector_typeIfLj4EES1_' function" {
	label="CFG for '_Z32reg_multiplyArrays_kernel_float4P15HIP_vector_typeIfLj4EES1_' function";

	Node0x513e030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = mul i32 %16, %3\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = add i32 %17, %18\l  %20 = mul i32 %19, %11\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = load i32, i32 addrspace(4)* @c_VoxelNumber, align 4, !tbaa !16\l  %24 = icmp slt i32 %22, %23\l  br i1 %24, label %25, label %45\l|{<s0>T|<s1>F}}"];
	Node0x513e030:s0 -> Node0x5140440;
	Node0x513e030:s1 -> Node0x51404d0;
	Node0x5140440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = sext i32 %22 to i64\l  %27 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %26\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %27, i64 0, i32 0, i32 0, i32 0, i64 0\l  %29 = load float, float addrspace(1)* %28, align 16, !amdgpu.noclobber !14\l  %30 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %26, i32 0, i32 0, i32 0, i64 1\l  %31 = load float, float addrspace(1)* %30, align 4, !amdgpu.noclobber !14\l  %32 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %26, i32 0, i32 0, i32 0, i64 2\l  %33 = load float, float addrspace(1)* %32, align 8, !amdgpu.noclobber !14\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %26, i32 0, i32 0, i32 0, i64 3\l  %35 = load float, float addrspace(1)* %34, align 4, !amdgpu.noclobber !14\l  %36 = fmul contract float %29, %29\l  %37 = fmul contract float %31, %31\l  %38 = fmul contract float %33, %33\l  %39 = fmul contract float %35, %35\l  %40 = insertelement \<4 x float\> undef, float %36, i64 0\l  %41 = insertelement \<4 x float\> %40, float %37, i64 1\l  %42 = insertelement \<4 x float\> %41, float %38, i64 2\l  %43 = insertelement \<4 x float\> %42, float %39, i64 3\l  %44 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %27, i64 0, i32 0, i32 0, i32 0\l  store \<4 x float\> %43, \<4 x float\> addrspace(1)* %44, align 16\l  br label %45\l}"];
	Node0x5140440 -> Node0x51404d0;
	Node0x51404d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  ret void\l}"];
}
