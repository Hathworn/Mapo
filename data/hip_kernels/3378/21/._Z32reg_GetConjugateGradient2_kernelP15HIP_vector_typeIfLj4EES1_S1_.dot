digraph "CFG for '_Z32reg_GetConjugateGradient2_kernelP15HIP_vector_typeIfLj4EES1_S1_' function" {
	label="CFG for '_Z32reg_GetConjugateGradient2_kernelP15HIP_vector_typeIfLj4EES1_S1_' function";

	Node0x59e4000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = mul i32 %17, %4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = add i32 %18, %19\l  %21 = mul i32 %20, %12\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %22\l  %24 = load i32, i32 addrspace(4)* @c_NodeNumber, align 4, !tbaa !16\l  %25 = icmp slt i32 %23, %24\l  br i1 %25, label %26, label %61\l|{<s0>T|<s1>F}}"];
	Node0x59e4000:s0 -> Node0x59e63e0;
	Node0x59e4000:s1 -> Node0x59e6470;
	Node0x59e63e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = sext i32 %23 to i64\l  %28 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %27, i32 0, i32 0, i32 0\l  %29 = load \<4 x float\>, \<4 x float\> addrspace(1)* %28, align 16,\l... !amdgpu.noclobber !14\l  %30 = extractelement \<4 x float\> %29, i64 0\l  %31 = fneg contract float %30\l  %32 = extractelement \<4 x float\> %29, i64 1\l  %33 = fneg contract float %32\l  %34 = extractelement \<4 x float\> %29, i64 2\l  %35 = fneg contract float %34\l  %36 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %31, i64 0\l  %37 = insertelement \<4 x float\> %36, float %33, i64 1\l  %38 = insertelement \<4 x float\> %37, float %35, i64 2\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %27, i32 0, i32 0, i32 0\l  store \<4 x float\> %38, \<4 x float\> addrspace(1)* %39, align 16\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %27, i32 0, i32 0, i32 0\l  %41 = load \<4 x float\>, \<4 x float\> addrspace(1)* %40, align 16\l  %42 = load float, float addrspace(4)* @c_ScalingFactor, align 4, !tbaa !20\l  %43 = extractelement \<4 x float\> %41, i64 0\l  %44 = fmul contract float %42, %43\l  %45 = fsub contract float %44, %30\l  %46 = extractelement \<4 x float\> %41, i64 1\l  %47 = fmul contract float %42, %46\l  %48 = fsub contract float %47, %32\l  %49 = extractelement \<4 x float\> %41, i64 2\l  %50 = fmul contract float %42, %49\l  %51 = fsub contract float %50, %34\l  %52 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %45, i64 0\l  %53 = insertelement \<4 x float\> %52, float %48, i64 1\l  %54 = insertelement \<4 x float\> %53, float %51, i64 2\l  store \<4 x float\> %54, \<4 x float\> addrspace(1)* %40, align 16\l  %55 = fneg contract float %45\l  %56 = fneg contract float %48\l  %57 = fneg contract float %51\l  %58 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %55, i64 0\l  %59 = insertelement \<4 x float\> %58, float %56, i64 1\l  %60 = insertelement \<4 x float\> %59, float %57, i64 2\l  store \<4 x float\> %60, \<4 x float\> addrspace(1)* %28, align 16\l  br label %61\l}"];
	Node0x59e63e0 -> Node0x59e6470;
	Node0x59e6470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
