digraph "CFG for '_Z15cuInsertionSortPfPliii' function" {
	label="CFG for '_Z15cuInsertionSortPfPliii' function";

	Node0x50bab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %14, %2\l  br i1 %15, label %16, label %134\l|{<s0>T|<s1>F}}"];
	Node0x50bab70:s0 -> Node0x50bca00;
	Node0x50bab70:s1 -> Node0x50bca90;
	Node0x50bca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = zext i32 %14 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %17\l  %20 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store i64 1, i64 addrspace(1)* %19, align 8, !tbaa !11\l  %21 = icmp sgt i32 %4, 1\l  br i1 %21, label %22, label %76\l|{<s0>T|<s1>F}}"];
	Node0x50bca00:s0 -> Node0x50bd8b0;
	Node0x50bca00:s1 -> Node0x50bd940;
	Node0x50bd8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%22:\l22:                                               \l  %23 = phi i32 [ %73, %72 ], [ 1, %16 ]\l  %24 = phi float [ %74, %72 ], [ %20, %16 ]\l  %25 = mul nsw i32 %23, %2\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %18, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %29 = fcmp contract olt float %28, %24\l  br i1 %29, label %30, label %68\l|{<s0>T|<s1>F}}"];
	Node0x50bd8b0:s0 -> Node0x50be5c0;
	Node0x50bd8b0:s1 -> Node0x50be650;
	Node0x50be5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%30:\l30:                                               \l  %31 = add nsw i32 %23, -1\l  %32 = icmp ugt i32 %23, 1\l  br i1 %32, label %33, label %43\l|{<s0>T|<s1>F}}"];
	Node0x50be5c0:s0 -> Node0x50bcbd0;
	Node0x50be5c0:s1 -> Node0x50bcc20;
	Node0x50bcbd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = phi i32 [ %41, %40 ], [ 0, %30 ]\l  %35 = mul nsw i32 %34, %2\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %18, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = fcmp contract ogt float %38, %28\l  br i1 %39, label %43, label %40\l|{<s0>T|<s1>F}}"];
	Node0x50bcbd0:s0 -> Node0x50bcc20;
	Node0x50bcbd0:s1 -> Node0x50beba0;
	Node0x50beba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %34, 1\l  %42 = icmp ult i32 %41, %31\l  br i1 %42, label %33, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x50beba0:s0 -> Node0x50bcbd0;
	Node0x50beba0:s1 -> Node0x50bcc20;
	Node0x50bcc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%43:\l43:                                               \l  %44 = phi i32 [ %31, %30 ], [ %31, %40 ], [ %34, %33 ]\l  %45 = icmp ugt i32 %23, %44\l  br i1 %45, label %46, label %60\l|{<s0>T|<s1>F}}"];
	Node0x50bcc20:s0 -> Node0x50bf480;
	Node0x50bcc20:s1 -> Node0x50bf4d0;
	Node0x50bf480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %48, %46 ], [ %23, %43 ]\l  %48 = add nsw i32 %47, -1\l  %49 = mul nsw i32 %48, %2\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %18, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = mul nsw i32 %47, %2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %18, i64 %54\l  store float %52, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %50\l  %57 = load i64, i64 addrspace(1)* %56, align 8, !tbaa !11\l  %58 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %54\l  store i64 %57, i64 addrspace(1)* %58, align 8, !tbaa !11\l  %59 = icmp sgt i32 %48, %44\l  br i1 %59, label %46, label %60, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x50bf480:s0 -> Node0x50bf480;
	Node0x50bf480:s1 -> Node0x50bf4d0;
	Node0x50bf4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%60:\l60:                                               \l  %61 = mul nsw i32 %44, %2\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %18, i64 %62\l  store float %28, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = add nuw nsw i32 %23, 1\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %62\l  store i64 %65, i64 addrspace(1)* %66, align 8, !tbaa !11\l  %67 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x50bf4d0 -> Node0x50bdab0;
	Node0x50be650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%68:\l68:                                               \l  %69 = add nuw nsw i32 %23, 1\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %26\l  store i64 %70, i64 addrspace(1)* %71, align 8, !tbaa !11\l  br label %72\l}"];
	Node0x50be650 -> Node0x50bdab0;
	Node0x50bdab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%72:\l72:                                               \l  %73 = phi i32 [ %69, %68 ], [ %64, %60 ]\l  %74 = phi float [ %28, %68 ], [ %67, %60 ]\l  %75 = icmp eq i32 %73, %4\l  br i1 %75, label %76, label %22, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x50bdab0:s0 -> Node0x50bd940;
	Node0x50bdab0:s1 -> Node0x50bd8b0;
	Node0x50bd940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%76:\l76:                                               \l  %77 = phi float [ %20, %16 ], [ %74, %72 ]\l  %78 = add i32 %4, -1\l  %79 = icmp slt i32 %4, %3\l  br i1 %79, label %80, label %134\l|{<s0>T|<s1>F}}"];
	Node0x50bd940:s0 -> Node0x50c14f0;
	Node0x50bd940:s1 -> Node0x50bca90;
	Node0x50c14f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %78, %2\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %18, i64 %82\l  br label %84\l}"];
	Node0x50c14f0 -> Node0x50c1790;
	Node0x50c1790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%84:\l84:                                               \l  %85 = phi i32 [ %4, %80 ], [ %131, %130 ]\l  %86 = phi float [ %77, %80 ], [ %132, %130 ]\l  %87 = mul nsw i32 %85, %2\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %18, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = fcmp contract olt float %90, %86\l  br i1 %91, label %94, label %92\l|{<s0>T|<s1>F}}"];
	Node0x50c1790:s0 -> Node0x50c1ca0;
	Node0x50c1790:s1 -> Node0x50c1d30;
	Node0x50c1d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%92:\l92:                                               \l  %93 = add nsw i32 %85, 1\l  br label %130\l}"];
	Node0x50c1d30 -> Node0x50c1850;
	Node0x50c1ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%94:\l94:                                               \l  br i1 %21, label %95, label %105\l|{<s0>T|<s1>F}}"];
	Node0x50c1ca0:s0 -> Node0x50c1f70;
	Node0x50c1ca0:s1 -> Node0x50c1fc0;
	Node0x50c1f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%95:\l95:                                               \l  %96 = phi i32 [ %103, %102 ], [ 0, %94 ]\l  %97 = mul nsw i32 %96, %2\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %18, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fcmp contract ogt float %100, %90\l  br i1 %101, label %105, label %102\l|{<s0>T|<s1>F}}"];
	Node0x50c1f70:s0 -> Node0x50c1fc0;
	Node0x50c1f70:s1 -> Node0x50c20c0;
	Node0x50c20c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%102:\l102:                                              \l  %103 = add nuw nsw i32 %96, 1\l  %104 = icmp eq i32 %103, %78\l  br i1 %104, label %105, label %95, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x50c20c0:s0 -> Node0x50c1fc0;
	Node0x50c20c0:s1 -> Node0x50c1f70;
	Node0x50c1fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%105:\l105:                                              \l  %106 = phi i32 [ %78, %94 ], [ %78, %102 ], [ %96, %95 ]\l  %107 = icmp sgt i32 %78, %106\l  br i1 %107, label %108, label %122\l|{<s0>T|<s1>F}}"];
	Node0x50c1fc0:s0 -> Node0x50c2940;
	Node0x50c1fc0:s1 -> Node0x50c2990;
	Node0x50c2940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = phi i32 [ %110, %108 ], [ %78, %105 ]\l  %110 = add nsw i32 %109, -1\l  %111 = mul nsw i32 %110, %2\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %18, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = mul nsw i32 %109, %2\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %18, i64 %116\l  store float %114, float addrspace(1)* %117, align 4, !tbaa !7\l  %118 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %112\l  %119 = load i64, i64 addrspace(1)* %118, align 8, !tbaa !11\l  %120 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %116\l  store i64 %119, i64 addrspace(1)* %120, align 8, !tbaa !11\l  %121 = icmp sgt i32 %110, %106\l  br i1 %121, label %108, label %122, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x50c2940:s0 -> Node0x50c2940;
	Node0x50c2940:s1 -> Node0x50c2990;
	Node0x50c2990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%122:\l122:                                              \l  %123 = mul nsw i32 %106, %2\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %18, i64 %124\l  store float %90, float addrspace(1)* %125, align 4, !tbaa !7\l  %126 = add nsw i32 %85, 1\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i64, i64 addrspace(1)* %19, i64 %124\l  store i64 %127, i64 addrspace(1)* %128, align 8, !tbaa !11\l  %129 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %130\l}"];
	Node0x50c2990 -> Node0x50c1850;
	Node0x50c1850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%130:\l130:                                              \l  %131 = phi i32 [ %93, %92 ], [ %126, %122 ]\l  %132 = phi float [ %86, %92 ], [ %129, %122 ]\l  %133 = icmp slt i32 %131, %3\l  br i1 %133, label %84, label %134, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x50c1850:s0 -> Node0x50c1790;
	Node0x50c1850:s1 -> Node0x50bca90;
	Node0x50bca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%134:\l134:                                              \l  ret void\l}"];
}
