digraph "CFG for '_Z16cudaSSqrt_kerneljPf' function" {
	label="CFG for '_Z16cudaSSqrt_kerneljPf' function";

	Node0x4ed3880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = mul i32 %3, %8\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %14 = add i32 %12, %13\l  %15 = udiv i32 %11, %8\l  %16 = mul i32 %15, %8\l  %17 = icmp ugt i32 %11, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %8\l  %21 = icmp ult i32 %14, %0\l  br i1 %21, label %23, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4ed3880:s0 -> Node0x4ed5e30;
	Node0x4ed3880:s1 -> Node0x4ed5ec0;
	Node0x4ed5ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%22:\l22:                                               \l  ret void\l}"];
	Node0x4ed5e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %49, %23 ], [ %14, %2 ]\l  %25 = zext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !16\l  %28 = fcmp olt float %27, 0x39F0000000000000\l  %29 = select i1 %28, float 0x41F0000000000000, float 1.000000e+00\l  %30 = fmul float %27, %29\l  %31 = tail call float @llvm.sqrt.f32(float %30)\l  %32 = bitcast float %31 to i32\l  %33 = add nsw i32 %32, -1\l  %34 = bitcast i32 %33 to float\l  %35 = add nsw i32 %32, 1\l  %36 = bitcast i32 %35 to float\l  %37 = tail call i1 @llvm.amdgcn.class.f32(float %30, i32 608)\l  %38 = select i1 %28, float 0x3EF0000000000000, float 1.000000e+00\l  %39 = fneg float %36\l  %40 = tail call float @llvm.fma.f32(float %39, float %31, float %30)\l  %41 = fcmp ogt float %40, 0.000000e+00\l  %42 = fneg float %34\l  %43 = tail call float @llvm.fma.f32(float %42, float %31, float %30)\l  %44 = fcmp ole float %43, 0.000000e+00\l  %45 = select i1 %44, float %34, float %31\l  %46 = select i1 %41, float %36, float %45\l  %47 = fmul float %38, %46\l  %48 = select i1 %37, float %30, float %47\l  store float %48, float addrspace(1)* %26, align 4, !tbaa !16\l  %49 = add i32 %24, %20\l  %50 = icmp ult i32 %49, %0\l  br i1 %50, label %23, label %22, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4ed5e30:s0 -> Node0x4ed5e30;
	Node0x4ed5e30:s1 -> Node0x4ed5ec0;
}
