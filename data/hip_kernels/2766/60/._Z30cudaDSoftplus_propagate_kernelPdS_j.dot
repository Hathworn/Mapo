digraph "CFG for '_Z30cudaDSoftplus_propagate_kernelPdS_j' function" {
	label="CFG for '_Z30cudaDSoftplus_propagate_kernelPdS_j' function";

	Node0x59afd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !6\l  %13 = mul i32 %4, %9\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = add i32 %13, %14\l  %16 = udiv i32 %12, %9\l  %17 = mul i32 %16, %9\l  %18 = icmp ugt i32 %12, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %9\l  %22 = icmp ult i32 %15, %2\l  br i1 %22, label %24, label %23\l|{<s0>T|<s1>F}}"];
	Node0x59afd50:s0 -> Node0x59b2340;
	Node0x59afd50:s1 -> Node0x59b23d0;
	Node0x59b23d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x59b2340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %137, %24 ], [ %15, %3 ]\l  %26 = zext i32 %25 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %0, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !16\l  %29 = fmul double %28, 0x3FF71547652B82FE\l  %30 = tail call double @llvm.rint.f64(double %29)\l  %31 = fneg double %30\l  %32 = tail call double @llvm.fma.f64(double %31, double 0x3FE62E42FEFA39EF,\l... double %28)\l  %33 = tail call double @llvm.fma.f64(double %31, double 0x3C7ABC9E3B39803F,\l... double %32)\l  %34 = tail call double @llvm.fma.f64(double %33, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %35 = tail call double @llvm.fma.f64(double %33, double %34, double\l... 0x3EC71DEE623FDE64)\l  %36 = tail call double @llvm.fma.f64(double %33, double %35, double\l... 0x3EFA01997C89E6B0)\l  %37 = tail call double @llvm.fma.f64(double %33, double %36, double\l... 0x3F2A01A014761F6E)\l  %38 = tail call double @llvm.fma.f64(double %33, double %37, double\l... 0x3F56C16C1852B7B0)\l  %39 = tail call double @llvm.fma.f64(double %33, double %38, double\l... 0x3F81111111122322)\l  %40 = tail call double @llvm.fma.f64(double %33, double %39, double\l... 0x3FA55555555502A1)\l  %41 = tail call double @llvm.fma.f64(double %33, double %40, double\l... 0x3FC5555555555511)\l  %42 = tail call double @llvm.fma.f64(double %33, double %41, double\l... 0x3FE000000000000B)\l  %43 = tail call double @llvm.fma.f64(double %33, double %42, double\l... 1.000000e+00)\l  %44 = tail call double @llvm.fma.f64(double %33, double %43, double\l... 1.000000e+00)\l  %45 = fptosi double %30 to i32\l  %46 = tail call double @llvm.amdgcn.ldexp.f64(double %44, i32 %45)\l  %47 = fcmp ogt double %28, 1.024000e+03\l  %48 = fcmp olt double %28, -1.075000e+03\l  %49 = fadd contract double %46, 1.000000e+00\l  %50 = select i1 %47, double 0x7FF0000000000000, double %49\l  %51 = select i1 %48, double 1.000000e+00, double %50\l  %52 = tail call double @llvm.amdgcn.frexp.mant.f64(double %51)\l  %53 = fcmp olt double %52, 0x3FE5555555555555\l  %54 = zext i1 %53 to i32\l  %55 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 %54)\l  %56 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %51)\l  %57 = sub nsw i32 %56, %54\l  %58 = fadd double %55, -1.000000e+00\l  %59 = fadd double %55, 1.000000e+00\l  %60 = fadd double %59, -1.000000e+00\l  %61 = fsub double %55, %60\l  %62 = tail call double @llvm.amdgcn.rcp.f64(double %59)\l  %63 = fneg double %59\l  %64 = tail call double @llvm.fma.f64(double %63, double %62, double\l... 1.000000e+00)\l  %65 = tail call double @llvm.fma.f64(double %64, double %62, double %62)\l  %66 = tail call double @llvm.fma.f64(double %63, double %65, double\l... 1.000000e+00)\l  %67 = tail call double @llvm.fma.f64(double %66, double %65, double %65)\l  %68 = fmul double %58, %67\l  %69 = fmul double %59, %68\l  %70 = fneg double %69\l  %71 = tail call double @llvm.fma.f64(double %68, double %59, double %70)\l  %72 = tail call double @llvm.fma.f64(double %68, double %61, double %71)\l  %73 = fadd double %69, %72\l  %74 = fsub double %73, %69\l  %75 = fsub double %72, %74\l  %76 = fsub double %58, %73\l  %77 = fsub double %58, %76\l  %78 = fsub double %77, %73\l  %79 = fsub double %78, %75\l  %80 = fadd double %76, %79\l  %81 = fmul double %67, %80\l  %82 = fadd double %68, %81\l  %83 = fsub double %82, %68\l  %84 = fsub double %81, %83\l  %85 = fmul double %82, %82\l  %86 = tail call double @llvm.fma.f64(double %85, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %87 = tail call double @llvm.fma.f64(double %85, double %86, double\l... 0x3FC7474DD7F4DF2E)\l  %88 = tail call double @llvm.fma.f64(double %85, double %87, double\l... 0x3FCC71C016291751)\l  %89 = tail call double @llvm.fma.f64(double %85, double %88, double\l... 0x3FD249249B27ACF1)\l  %90 = tail call double @llvm.fma.f64(double %85, double %89, double\l... 0x3FD99999998EF7B6)\l  %91 = tail call double @llvm.fma.f64(double %85, double %90, double\l... 0x3FE5555555555780)\l  %92 = tail call double @llvm.amdgcn.ldexp.f64(double %82, i32 1)\l  %93 = tail call double @llvm.amdgcn.ldexp.f64(double %84, i32 1)\l  %94 = fmul double %82, %85\l  %95 = fmul double %94, %91\l  %96 = fadd double %92, %95\l  %97 = fsub double %96, %92\l  %98 = fsub double %95, %97\l  %99 = fadd double %93, %98\l  %100 = fadd double %96, %99\l  %101 = fsub double %100, %96\l  %102 = fsub double %99, %101\l  %103 = sitofp i32 %57 to double\l  %104 = fmul double %103, 0x3FE62E42FEFA39EF\l  %105 = fneg double %104\l  %106 = tail call double @llvm.fma.f64(double %103, double\l... 0x3FE62E42FEFA39EF, double %105)\l  %107 = tail call double @llvm.fma.f64(double %103, double\l... 0x3C7ABC9E3B39803F, double %106)\l  %108 = fadd double %104, %107\l  %109 = fsub double %108, %104\l  %110 = fsub double %107, %109\l  %111 = fadd double %108, %100\l  %112 = fsub double %111, %108\l  %113 = fsub double %111, %112\l  %114 = fsub double %108, %113\l  %115 = fsub double %100, %112\l  %116 = fadd double %115, %114\l  %117 = fadd double %110, %102\l  %118 = fsub double %117, %110\l  %119 = fsub double %117, %118\l  %120 = fsub double %110, %119\l  %121 = fsub double %102, %118\l  %122 = fadd double %121, %120\l  %123 = fadd double %117, %116\l  %124 = fadd double %111, %123\l  %125 = fsub double %124, %111\l  %126 = fsub double %123, %125\l  %127 = fadd double %122, %126\l  %128 = fadd double %124, %127\l  %129 = tail call double @llvm.fabs.f64(double %51) #3\l  %130 = fcmp oeq double %129, 0x7FF0000000000000\l  %131 = select i1 %130, double %51, double %128\l  %132 = fcmp olt double %51, 0.000000e+00\l  %133 = select i1 %132, double 0x7FF8000000000000, double %131\l  %134 = fcmp oeq double %51, 0.000000e+00\l  %135 = select i1 %134, double 0xFFF0000000000000, double %133\l  %136 = getelementptr inbounds double, double addrspace(1)* %1, i64 %26\l  store double %135, double addrspace(1)* %136, align 8, !tbaa !16\l  %137 = add i32 %25, %21\l  %138 = icmp ult i32 %137, %2\l  br i1 %138, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x59b2340:s0 -> Node0x59b2340;
	Node0x59b2340:s1 -> Node0x59b23d0;
}
