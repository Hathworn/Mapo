digraph "CFG for '_Z19cudaSPadding_kerneljjjjjjjiiiiPKfPf' function" {
	label="CFG for '_Z19cudaSPadding_kerneljjjjjjjiiiiPKfPf' function";

	Node0x4d6a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 8\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %14, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %3\l  %24 = mul i32 %22, %0\l  %25 = tail call i32 @llvm.umin.i32(i32 %3, i32 %0)\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = icmp ult i32 %26, %25\l  br i1 %27, label %28, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4d6a670:s0 -> Node0x4d6d6f0;
	Node0x4d6a670:s1 -> Node0x4d6d780;
	Node0x4d6d6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%28:\l28:                                               \l  %29 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %30 = icmp ult i32 %29, %2\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %32 = icmp ult i32 %31, %1\l  %33 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %34 = bitcast i8 addrspace(4)* %33 to i16 addrspace(4)*\l  %35 = load i16, i16 addrspace(4)* %34, align 4\l  %36 = zext i16 %35 to i32\l  %37 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %38 = bitcast i8 addrspace(4)* %37 to i16 addrspace(4)*\l  %39 = load i16, i16 addrspace(4)* %38, align 2\l  %40 = zext i16 %39 to i32\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %42 = bitcast i8 addrspace(4)* %41 to i32 addrspace(4)*\l  %43 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7\l  %44 = udiv i32 %43, %36\l  %45 = mul i32 %44, %36\l  %46 = icmp ugt i32 %43, %45\l  %47 = zext i1 %46 to i32\l  br label %49\l}"];
	Node0x4d6d6f0 -> Node0x4d6ee90;
	Node0x4d6d780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%48:\l48:                                               \l  ret void\l}"];
	Node0x4d6ee90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %26, %28 ], [ %58, %56 ]\l  br i1 %30, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4d6ee90:s0 -> Node0x4d6f0e0;
	Node0x4d6ee90:s1 -> Node0x4d6efe0;
	Node0x4d6f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%51:\l51:                                               \l  %52 = add i32 %50, %23\l  %53 = mul i32 %52, %6\l  %54 = add i32 %50, %24\l  %55 = mul i32 %54, %2\l  br label %60\l}"];
	Node0x4d6f0e0 -> Node0x4d6f460;
	Node0x4d6efe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%56:\l56:                                               \l  %57 = add i32 %44, %50\l  %58 = add i32 %57, %47\l  %59 = icmp ult i32 %58, %25\l  br i1 %59, label %49, label %48, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4d6efe0:s0 -> Node0x4d6ee90;
	Node0x4d6efe0:s1 -> Node0x4d6d780;
	Node0x4d6f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%60:\l60:                                               \l  %61 = phi i32 [ %29, %51 ], [ %71, %70 ]\l  br i1 %32, label %62, label %70\l|{<s0>T|<s1>F}}"];
	Node0x4d6f460:s0 -> Node0x4d6f980;
	Node0x4d6f460:s1 -> Node0x4d6f840;
	Node0x4d6f980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%62:\l62:                                               \l  %63 = sub nsw i32 %61, %9\l  %64 = icmp sgt i32 %63, -1\l  %65 = icmp slt i32 %63, %6\l  %66 = add i32 %53, %63\l  %67 = mul i32 %66, %5\l  %68 = add i32 %55, %61\l  %69 = mul i32 %68, %1\l  br label %73\l}"];
	Node0x4d6f980 -> Node0x4d6e580;
	Node0x4d6f840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%70:\l70:                                               \l  %71 = add i32 %61, %40\l  %72 = icmp ult i32 %71, %2\l  br i1 %72, label %60, label %56, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4d6f840:s0 -> Node0x4d6f460;
	Node0x4d6f840:s1 -> Node0x4d6efe0;
	Node0x4d6e580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ %31, %62 ], [ %91, %86 ]\l  %75 = sub nsw i32 %74, %7\l  %76 = icmp sgt i32 %75, -1\l  br i1 %76, label %77, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4d6e580:s0 -> Node0x4d706a0;
	Node0x4d6e580:s1 -> Node0x4d70440;
	Node0x4d706a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%77:\l77:                                               \l  %78 = icmp slt i32 %75, %5\l  %79 = select i1 %78, i1 %64, i1 false\l  %80 = select i1 %79, i1 %65, i1 false\l  br i1 %80, label %81, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4d706a0:s0 -> Node0x4d70a00;
	Node0x4d706a0:s1 -> Node0x4d70440;
	Node0x4d70a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%81:\l81:                                               \l  %82 = add i32 %75, %67\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %11, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !19\l  br label %86\l}"];
	Node0x4d70a00 -> Node0x4d70440;
	Node0x4d70440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi float [ %85, %81 ], [ 0.000000e+00, %77 ], [ 0.000000e+00, %73 ]\l  %88 = add i32 %74, %69\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %12, i64 %89\l  store float %87, float addrspace(1)* %90, align 4, !tbaa !19\l  %91 = add i32 %74, %36\l  %92 = icmp ult i32 %91, %1\l  br i1 %92, label %73, label %70, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x4d70440:s0 -> Node0x4d6e580;
	Node0x4d70440:s1 -> Node0x4d6f840;
}
