digraph "CFG for '_Z15cudaSpow_kerneljfPKfPf' function" {
	label="CFG for '_Z15cudaSpow_kerneljfPKfPf' function";

	Node0x57c2ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = icmp ult i32 %16, %0\l  br i1 %23, label %24, label %43\l|{<s0>T|<s1>F}}"];
	Node0x57c2ff0:s0 -> Node0x57c55b0;
	Node0x57c2ff0:s1 -> Node0x57c5640;
	Node0x57c55b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  %25 = tail call float @llvm.fabs.f32(float %1)\l  %26 = tail call float @llvm.trunc.f32(float %25)\l  %27 = fcmp oeq float %25, %26\l  %28 = zext i1 %27 to i32\l  %29 = fmul float %26, 5.000000e-01\l  %30 = tail call float @llvm.amdgcn.fract.f32(float %29)\l  %31 = tail call i1 @llvm.amdgcn.class.f32(float %29, i32 516)\l  %32 = select i1 %31, float 0.000000e+00, float %30\l  %33 = fcmp oeq float %32, 0.000000e+00\l  %34 = and i1 %27, %33\l  %35 = zext i1 %34 to i32\l  %36 = add nuw nsw i32 %35, %28\l  %37 = icmp eq i32 %36, 1\l  %38 = icmp ne i32 %36, 0\l  %39 = fcmp oeq float %25, 0x7FF0000000000000\l  %40 = bitcast float %1 to i32\l  %41 = fcmp olt float %1, 0.000000e+00\l  %42 = fcmp oeq float %1, 0.000000e+00\l  br i1 %39, label %215, label %44\l|{<s0>T|<s1>F}}"];
	Node0x57c55b0:s0 -> Node0x57c73c0;
	Node0x57c55b0:s1 -> Node0x57c7450;
	Node0x57c5640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%43:\l43:                                               \l  ret void\l}"];
	Node0x57c7450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%44:\l44:                                               \l  %45 = phi i32 [ %213, %44 ], [ %16, %24 ]\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = tail call float @llvm.fabs.f32(float %48)\l  %50 = tail call float @llvm.amdgcn.frexp.mant.f32(float %49)\l  %51 = fcmp olt float %50, 0x3FE5555560000000\l  %52 = zext i1 %51 to i32\l  %53 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 %52)\l  %54 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %49)\l  %55 = sub nsw i32 %54, %52\l  %56 = fadd float %53, -1.000000e+00\l  %57 = fadd float %53, 1.000000e+00\l  %58 = fadd float %57, -1.000000e+00\l  %59 = fsub float %53, %58\l  %60 = tail call float @llvm.amdgcn.rcp.f32(float %57)\l  %61 = fmul float %56, %60\l  %62 = fmul float %57, %61\l  %63 = fneg float %62\l  %64 = tail call float @llvm.fma.f32(float %61, float %57, float %63)\l  %65 = tail call float @llvm.fma.f32(float %61, float %59, float %64)\l  %66 = fadd float %62, %65\l  %67 = fsub float %66, %62\l  %68 = fsub float %65, %67\l  %69 = fsub float %56, %66\l  %70 = fsub float %56, %69\l  %71 = fsub float %70, %66\l  %72 = fsub float %71, %68\l  %73 = fadd float %69, %72\l  %74 = fmul float %60, %73\l  %75 = fadd float %61, %74\l  %76 = fsub float %75, %61\l  %77 = fsub float %74, %76\l  %78 = fmul float %75, %75\l  %79 = fneg float %78\l  %80 = tail call float @llvm.fma.f32(float %75, float %75, float %79)\l  %81 = fmul float %77, 2.000000e+00\l  %82 = tail call float @llvm.fma.f32(float %75, float %81, float %80)\l  %83 = fadd float %78, %82\l  %84 = fsub float %83, %78\l  %85 = fsub float %82, %84\l  %86 = tail call float @llvm.fmuladd.f32(float %83, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %87 = tail call float @llvm.fmuladd.f32(float %83, float %86, float\l... 0x3FD999BDE0000000)\l  %88 = sitofp i32 %55 to float\l  %89 = fmul float %88, 0x3FE62E4300000000\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %88, float 0x3FE62E4300000000,\l... float %90)\l  %92 = tail call float @llvm.fma.f32(float %88, float 0xBE205C6100000000,\l... float %91)\l  %93 = fadd float %89, %92\l  %94 = fsub float %93, %89\l  %95 = fsub float %92, %94\l  %96 = tail call float @llvm.amdgcn.ldexp.f32(float %75, i32 1)\l  %97 = fmul float %75, %83\l  %98 = fneg float %97\l  %99 = tail call float @llvm.fma.f32(float %83, float %75, float %98)\l  %100 = tail call float @llvm.fma.f32(float %83, float %77, float %99)\l  %101 = tail call float @llvm.fma.f32(float %85, float %75, float %100)\l  %102 = fadd float %97, %101\l  %103 = fsub float %102, %97\l  %104 = fsub float %101, %103\l  %105 = fmul float %83, %87\l  %106 = fneg float %105\l  %107 = tail call float @llvm.fma.f32(float %83, float %87, float %106)\l  %108 = tail call float @llvm.fma.f32(float %85, float %87, float %107)\l  %109 = fadd float %105, %108\l  %110 = fsub float %109, %105\l  %111 = fsub float %108, %110\l  %112 = fadd float %109, 0x3FE5555540000000\l  %113 = fadd float %112, 0xBFE5555540000000\l  %114 = fsub float %109, %113\l  %115 = fadd float %111, 0x3E2E720200000000\l  %116 = fadd float %115, %114\l  %117 = fadd float %112, %116\l  %118 = fsub float %117, %112\l  %119 = fsub float %116, %118\l  %120 = fmul float %102, %117\l  %121 = fneg float %120\l  %122 = tail call float @llvm.fma.f32(float %102, float %117, float %121)\l  %123 = tail call float @llvm.fma.f32(float %102, float %119, float %122)\l  %124 = tail call float @llvm.fma.f32(float %104, float %117, float %123)\l  %125 = tail call float @llvm.amdgcn.ldexp.f32(float %77, i32 1)\l  %126 = fadd float %120, %124\l  %127 = fsub float %126, %120\l  %128 = fsub float %124, %127\l  %129 = fadd float %96, %126\l  %130 = fsub float %129, %96\l  %131 = fsub float %126, %130\l  %132 = fadd float %125, %128\l  %133 = fadd float %132, %131\l  %134 = fadd float %129, %133\l  %135 = fsub float %134, %129\l  %136 = fsub float %133, %135\l  %137 = fadd float %93, %134\l  %138 = fsub float %137, %93\l  %139 = fsub float %137, %138\l  %140 = fsub float %93, %139\l  %141 = fsub float %134, %138\l  %142 = fadd float %141, %140\l  %143 = fadd float %95, %136\l  %144 = fsub float %143, %95\l  %145 = fsub float %143, %144\l  %146 = fsub float %95, %145\l  %147 = fsub float %136, %144\l  %148 = fadd float %147, %146\l  %149 = fadd float %143, %142\l  %150 = fadd float %137, %149\l  %151 = fsub float %150, %137\l  %152 = fsub float %149, %151\l  %153 = fadd float %148, %152\l  %154 = fadd float %150, %153\l  %155 = fsub float %154, %150\l  %156 = fsub float %153, %155\l  %157 = fmul float %154, %1\l  %158 = fneg float %157\l  %159 = tail call float @llvm.fma.f32(float %1, float %154, float %158)\l  %160 = tail call float @llvm.fma.f32(float %1, float %156, float %159)\l  %161 = fadd float %157, %160\l  %162 = fsub float %161, %157\l  %163 = fsub float %160, %162\l  %164 = tail call float @llvm.fabs.f32(float %157) #3\l  %165 = fcmp oeq float %164, 0x7FF0000000000000\l  %166 = select i1 %165, float %157, float %161\l  %167 = tail call float @llvm.fabs.f32(float %166) #3\l  %168 = fcmp oeq float %167, 0x7FF0000000000000\l  %169 = select i1 %168, float 0.000000e+00, float %163\l  %170 = fcmp oeq float %166, 0x40562E4300000000\l  %171 = select i1 %170, float 0x3EE0000000000000, float 0.000000e+00\l  %172 = fsub float %166, %171\l  %173 = fadd float %171, %169\l  %174 = fmul float %172, 0x3FF7154760000000\l  %175 = tail call float @llvm.rint.f32(float %174)\l  %176 = fcmp ogt float %172, 0x40562E4300000000\l  %177 = fcmp olt float %172, 0xC059D1DA00000000\l  %178 = fneg float %174\l  %179 = tail call float @llvm.fma.f32(float %172, float 0x3FF7154760000000,\l... float %178)\l  %180 = tail call float @llvm.fma.f32(float %172, float 0x3E54AE0BE0000000,\l... float %179)\l  %181 = fsub float %174, %175\l  %182 = fadd float %180, %181\l  %183 = tail call float @llvm.exp2.f32(float %182)\l  %184 = fptosi float %175 to i32\l  %185 = tail call float @llvm.amdgcn.ldexp.f32(float %183, i32 %184)\l  %186 = select i1 %177, float 0.000000e+00, float %185\l  %187 = select i1 %176, float 0x7FF0000000000000, float %186\l  %188 = tail call float @llvm.fma.f32(float %187, float %173, float %187)\l  %189 = tail call float @llvm.fabs.f32(float %187) #3\l  %190 = fcmp oeq float %189, 0x7FF0000000000000\l  %191 = select i1 %190, float %187, float %188\l  %192 = fcmp olt float %48, 0.000000e+00\l  %193 = and i1 %37, %192\l  %194 = select i1 %193, float -0.000000e+00, float 0.000000e+00\l  %195 = tail call float @llvm.copysign.f32(float %191, float %194)\l  %196 = fcmp uge float %48, 0.000000e+00\l  %197 = select i1 %196, i1 true, i1 %38\l  %198 = select i1 %197, float %195, float 0x7FF8000000000000\l  %199 = fcmp oeq float %49, 0x7FF0000000000000\l  %200 = fcmp oeq float %48, 0.000000e+00\l  %201 = or i1 %200, %199\l  %202 = xor i1 %41, %200\l  %203 = select i1 %202, float 0.000000e+00, float 0x7FF0000000000000\l  %204 = select i1 %37, float %48, float 0.000000e+00\l  %205 = tail call float @llvm.copysign.f32(float %203, float %204)\l  %206 = select i1 %201, float %205, float %198\l  %207 = fcmp uno float %48, %1\l  %208 = select i1 %207, float 0x7FF8000000000000, float %206\l  %209 = fcmp oeq float %48, 1.000000e+00\l  %210 = or i1 %42, %209\l  %211 = select i1 %210, float 1.000000e+00, float %208\l  %212 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  store float %211, float addrspace(1)* %212, align 4, !tbaa !16\l  %213 = add i32 %45, %22\l  %214 = icmp ult i32 %213, %0\l  br i1 %214, label %44, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57c7450:s0 -> Node0x57c7450;
	Node0x57c7450:s1 -> Node0x57c5640;
	Node0x57c73c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  %216 = phi i32 [ %242, %215 ], [ %16, %24 ]\l  %217 = zext i32 %216 to i64\l  %218 = getelementptr inbounds float, float addrspace(1)* %2, i64 %217\l  %219 = load float, float addrspace(1)* %218, align 4, !tbaa !16\l  %220 = tail call float @llvm.fabs.f32(float %219)\l  %221 = fcmp oeq float %220, 1.000000e+00\l  %222 = fadd float %220, -1.000000e+00\l  %223 = bitcast float %222 to i32\l  %224 = xor i32 %223, %40\l  %225 = icmp sgt i32 %224, -1\l  %226 = select i1 %225, float 0x7FF0000000000000, float 0.000000e+00\l  %227 = select i1 %221, float %220, float %226\l  %228 = fcmp oeq float %220, 0x7FF0000000000000\l  %229 = fcmp oeq float %219, 0.000000e+00\l  %230 = or i1 %229, %228\l  %231 = xor i1 %41, %229\l  %232 = select i1 %231, float 0.000000e+00, float 0x7FF0000000000000\l  %233 = select i1 %37, float %219, float 0.000000e+00\l  %234 = tail call float @llvm.copysign.f32(float %232, float %233)\l  %235 = select i1 %230, float %234, float %227\l  %236 = fcmp uno float %219, %1\l  %237 = select i1 %236, float 0x7FF8000000000000, float %235\l  %238 = fcmp oeq float %219, 1.000000e+00\l  %239 = or i1 %42, %238\l  %240 = select i1 %239, float 1.000000e+00, float %237\l  %241 = getelementptr inbounds float, float addrspace(1)* %3, i64 %217\l  store float %240, float addrspace(1)* %241, align 4, !tbaa !16\l  %242 = add i32 %216, %22\l  %243 = icmp ult i32 %242, %0\l  br i1 %243, label %215, label %43, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57c73c0:s0 -> Node0x57c73c0;
	Node0x57c73c0:s1 -> Node0x57c5640;
}
