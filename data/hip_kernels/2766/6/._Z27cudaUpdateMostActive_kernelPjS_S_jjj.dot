digraph "CFG for '_Z27cudaUpdateMostActive_kernelPjS_S_jjj' function" {
	label="CFG for '_Z27cudaUpdateMostActive_kernelPjS_S_jjj' function";

	Node0x5d035f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%6:\l  %7 = mul i32 %4, %3\l  %8 = mul i32 %7, %5\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = mul i32 %10, %15\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %20\l  %22 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @partialActiveIdx, i32 0, i32 %20\l  store i32 0, i32 addrspace(3)* %22, align 4, !tbaa !16\l  %23 = icmp ult i32 %21, %8\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5d035f0:s0 -> Node0x5d05e70;
	Node0x5d035f0:s1 -> Node0x5d05f00;
	Node0x5d05e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = mul i32 %8, %9\l  %26 = add i32 %21, %25\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  store i32 %29, i32 addrspace(3)* %22, align 4, !tbaa !16\l  br label %30\l}"];
	Node0x5d05e70 -> Node0x5d05f00;
	Node0x5d05f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = icmp ult i16 %14, 2\l  br i1 %31, label %32, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5d05f00:s0 -> Node0x5d073a0;
	Node0x5d05f00:s1 -> Node0x5d073f0;
	Node0x5d073a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%32:\l32:                                               \l  %33 = icmp eq i32 %20, 0\l  br i1 %33, label %53, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5d073a0:s0 -> Node0x5d05440;
	Node0x5d073a0:s1 -> Node0x5d07740;
	Node0x5d073f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %36, %51 ], [ %15, %30 ]\l  %36 = lshr i32 %35, 1\l  %37 = icmp ult i32 %20, %36\l  br i1 %37, label %38, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5d073f0:s0 -> Node0x5d07b10;
	Node0x5d073f0:s1 -> Node0x5d07880;
	Node0x5d07b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = load i32, i32 addrspace(3)* %22, align 4, !tbaa !16\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %43 = add nuw nsw i32 %36, %20\l  %44 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @partialActiveIdx, i32 0, i32 %43\l  %45 = load i32, i32 addrspace(3)* %44, align 4, !tbaa !16\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !16, !amdgpu.noclobber\l... !5\l  %49 = icmp ult i32 %42, %48\l  br i1 %49, label %50, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5d07b10:s0 -> Node0x5d08250;
	Node0x5d07b10:s1 -> Node0x5d07880;
	Node0x5d08250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%50:\l50:                                               \l  store i32 %45, i32 addrspace(3)* %22, align 4, !tbaa !16\l  br label %51\l}"];
	Node0x5d08250 -> Node0x5d07880;
	Node0x5d07880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = icmp ult i32 %35, 4\l  br i1 %52, label %32, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5d07880:s0 -> Node0x5d073a0;
	Node0x5d07880:s1 -> Node0x5d073f0;
	Node0x5d05440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%53:\l53:                                               \l  %54 = load i32, i32 addrspace(3)* getelementptr inbounds ([0 x i32], [0 x\l... i32] addrspace(3)* @partialActiveIdx, i32 0, i32 0), align 4, !tbaa !16\l  %55 = udiv i32 %18, %15\l  %56 = mul i32 %55, %15\l  %57 = icmp ugt i32 %18, %56\l  %58 = zext i1 %57 to i32\l  %59 = add i32 %55, %58\l  %60 = mul i32 %59, %9\l  %61 = add i32 %60, %10\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %62\l  store i32 %54, i32 addrspace(1)* %63, align 4, !tbaa !16\l  br label %64\l}"];
	Node0x5d05440 -> Node0x5d07740;
	Node0x5d07740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%64:\l64:                                               \l  ret void\l}"];
}
