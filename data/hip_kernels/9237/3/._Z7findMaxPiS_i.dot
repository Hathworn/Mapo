digraph "CFG for '_Z7findMaxPiS_i' function" {
	label="CFG for '_Z7findMaxPiS_i' function";

	Node0x5edefa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7, !amdgpu.noclobber !5\l  %14 = icmp sgt i32 %2, 0\l  br i1 %14, label %15, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5edefa0:s0 -> Node0x5ee16f0;
	Node0x5edefa0:s1 -> Node0x5ee1780;
	Node0x5ee16f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = and i32 %2, 7\l  %17 = icmp ult i32 %2, 8\l  br i1 %17, label %20, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5ee16f0:s0 -> Node0x5ee0790;
	Node0x5ee16f0:s1 -> Node0x5ee1b20;
	Node0x5ee1b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = and i32 %2, -8\l  br label %42\l}"];
	Node0x5ee1b20 -> Node0x5ee1d20;
	Node0x5ee0790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = phi i32 [ undef, %15 ], [ %100, %42 ]\l  %22 = phi i32 [ 0, %15 ], [ %101, %42 ]\l  %23 = phi i32 [ %13, %15 ], [ %100, %42 ]\l  %24 = icmp eq i32 %16, 0\l  br i1 %24, label %38, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5ee0790:s0 -> Node0x5ee1780;
	Node0x5ee0790:s1 -> Node0x5ee2540;
	Node0x5ee2540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %35, %25 ], [ %22, %20 ]\l  %27 = phi i32 [ %34, %25 ], [ %23, %20 ]\l  %28 = phi i32 [ %36, %25 ], [ 0, %20 ]\l  %29 = mul nsw i32 %26, %2\l  %30 = add nsw i32 %29, %12\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %34 = tail call i32 @llvm.smax.i32(i32 %33, i32 %27)\l  %35 = add nuw nsw i32 %26, 1\l  %36 = add i32 %28, 1\l  %37 = icmp eq i32 %36, %16\l  br i1 %37, label %38, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ee2540:s0 -> Node0x5ee1780;
	Node0x5ee2540:s1 -> Node0x5ee2540;
	Node0x5ee1780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%38:\l38:                                               \l  %39 = phi i32 [ %13, %3 ], [ %21, %20 ], [ %34, %25 ]\l  %40 = sext i32 %12 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %40\l  store i32 %39, i32 addrspace(1)* %41, align 4, !tbaa !7\l  ret void\l}"];
	Node0x5ee1d20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %18 ], [ %101, %42 ]\l  %44 = phi i32 [ %13, %18 ], [ %100, %42 ]\l  %45 = phi i32 [ 0, %18 ], [ %102, %42 ]\l  %46 = mul nsw i32 %43, %2\l  %47 = add nsw i32 %46, %12\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 %44)\l  %52 = or i32 %43, 1\l  %53 = mul nsw i32 %52, %2\l  %54 = add nsw i32 %53, %12\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %58 = tail call i32 @llvm.smax.i32(i32 %57, i32 %51)\l  %59 = or i32 %43, 2\l  %60 = mul nsw i32 %59, %2\l  %61 = add nsw i32 %60, %12\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %62\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %65 = tail call i32 @llvm.smax.i32(i32 %64, i32 %58)\l  %66 = or i32 %43, 3\l  %67 = mul nsw i32 %66, %2\l  %68 = add nsw i32 %67, %12\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %72 = tail call i32 @llvm.smax.i32(i32 %71, i32 %65)\l  %73 = or i32 %43, 4\l  %74 = mul nsw i32 %73, %2\l  %75 = add nsw i32 %74, %12\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %79 = tail call i32 @llvm.smax.i32(i32 %78, i32 %72)\l  %80 = or i32 %43, 5\l  %81 = mul nsw i32 %80, %2\l  %82 = add nsw i32 %81, %12\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = tail call i32 @llvm.smax.i32(i32 %85, i32 %79)\l  %87 = or i32 %43, 6\l  %88 = mul nsw i32 %87, %2\l  %89 = add nsw i32 %88, %12\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %93 = tail call i32 @llvm.smax.i32(i32 %92, i32 %86)\l  %94 = or i32 %43, 7\l  %95 = mul nsw i32 %94, %2\l  %96 = add nsw i32 %95, %12\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %100 = tail call i32 @llvm.smax.i32(i32 %99, i32 %93)\l  %101 = add nuw nsw i32 %43, 8\l  %102 = add i32 %45, 8\l  %103 = icmp eq i32 %102, %19\l  br i1 %103, label %20, label %42, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ee1d20:s0 -> Node0x5ee0790;
	Node0x5ee1d20:s1 -> Node0x5ee1d20;
}
