digraph "CFG for '_Z10geo_invertP15HIP_vector_typeIdLj2EES1_PdS2_l' function" {
	label="CFG for '_Z10geo_invertP15HIP_vector_typeIdLj2EES1_PdS2_l' function";

	Node0x46e3d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = sext i32 %14 to i64\l  %16 = icmp slt i64 %15, %4\l  br i1 %16, label %17, label %1246\l|{<s0>T|<s1>F}}"];
	Node0x46e3d50:s0 -> Node0x46e4850;
	Node0x46e3d50:s1 -> Node0x46e5d40;
	Node0x46e4850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %19 = load double, double addrspace(1)* %18, align 16, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = fmul contract double %19, 0x400921FB54442D18\l  %21 = fdiv contract double %20, 1.800000e+02\l  store double %21, double addrspace(1)* %18, align 16, !tbaa !7\l  %22 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fmul contract double %23, 0x400921FB54442D18\l  %25 = fdiv contract double %24, 1.800000e+02\l  store double %25, double addrspace(1)* %22, align 8, !tbaa !7\l  %26 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 0\l  %27 = load double, double addrspace(1)* %26, align 16, !tbaa !7\l  %28 = fmul contract double %27, 0x400921FB54442D18\l  %29 = fdiv contract double %28, 1.800000e+02\l  store double %29, double addrspace(1)* %26, align 16, !tbaa !7\l  %30 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %15, i32 0, i32 0, i32 0, i64 1\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7\l  %32 = fmul contract double %31, 0x400921FB54442D18\l  %33 = fdiv contract double %32, 1.800000e+02\l  store double %33, double addrspace(1)* %30, align 8, !tbaa !7\l  %34 = load double, double addrspace(1)* %18, align 16, !tbaa !7\l  %35 = tail call double @llvm.fabs.f64(double %34)\l  %36 = fcmp olt double %35, 0x41D0000000000000\l  br i1 %36, label %37, label %56\l|{<s0>T|<s1>F}}"];
	Node0x46e4850:s0 -> Node0x46e88b0;
	Node0x46e4850:s1 -> Node0x46e8940;
	Node0x46e88b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%37:\l37:                                               \l  %38 = fmul double %35, 0x3FE45F306DC9C883\l  %39 = tail call double @llvm.rint.f64(double %38)\l  %40 = tail call double @llvm.fma.f64(double %39, double 0xBFF921FB54442D18,\l... double %35)\l  %41 = tail call double @llvm.fma.f64(double %39, double 0xBC91A62633145C00,\l... double %40)\l  %42 = fmul double %39, 0x3C91A62633145C00\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %39, double 0x3C91A62633145C00,\l... double %43)\l  %45 = fsub double %40, %42\l  %46 = fsub double %40, %45\l  %47 = fsub double %46, %42\l  %48 = fsub double %45, %41\l  %49 = fadd double %48, %47\l  %50 = fsub double %49, %44\l  %51 = tail call double @llvm.fma.f64(double %39, double 0xB97B839A252049C0,\l... double %50)\l  %52 = fadd double %41, %51\l  %53 = fsub double %52, %41\l  %54 = fsub double %51, %53\l  %55 = fptosi double %39 to i32\l  br label %132\l}"];
	Node0x46e88b0 -> Node0x46e9b20;
	Node0x46e8940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%56:\l56:                                               \l  %57 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 0)\l  %58 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 1)\l  %59 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 2)\l  %60 = fcmp oge double %35, 0x7B00000000000000\l  %61 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 -128)\l  %62 = select i1 %60, double %61, double %35\l  %63 = fmul double %59, %62\l  %64 = fneg double %63\l  %65 = tail call double @llvm.fma.f64(double %59, double %62, double %64)\l  %66 = fmul double %58, %62\l  %67 = fneg double %66\l  %68 = tail call double @llvm.fma.f64(double %58, double %62, double %67)\l  %69 = fmul double %57, %62\l  %70 = fneg double %69\l  %71 = tail call double @llvm.fma.f64(double %57, double %62, double %70)\l  %72 = fadd double %66, %71\l  %73 = fsub double %72, %66\l  %74 = fsub double %72, %73\l  %75 = fsub double %71, %73\l  %76 = fsub double %66, %74\l  %77 = fadd double %75, %76\l  %78 = fadd double %63, %68\l  %79 = fsub double %78, %63\l  %80 = fsub double %78, %79\l  %81 = fsub double %68, %79\l  %82 = fsub double %63, %80\l  %83 = fadd double %81, %82\l  %84 = fadd double %78, %77\l  %85 = fsub double %84, %78\l  %86 = fsub double %84, %85\l  %87 = fsub double %77, %85\l  %88 = fsub double %78, %86\l  %89 = fadd double %87, %88\l  %90 = fadd double %83, %89\l  %91 = fadd double %65, %90\l  %92 = fadd double %69, %72\l  %93 = fsub double %92, %69\l  %94 = fsub double %72, %93\l  %95 = fadd double %94, %84\l  %96 = fsub double %95, %94\l  %97 = fsub double %84, %96\l  %98 = fadd double %97, %91\l  %99 = tail call double @llvm.amdgcn.ldexp.f64(double %92, i32 -2)\l  %100 = tail call double @llvm.amdgcn.fract.f64(double %99)\l  %101 = tail call i1 @llvm.amdgcn.class.f64(double %99, i32 516)\l  %102 = select i1 %101, double 0.000000e+00, double %100\l  %103 = tail call double @llvm.amdgcn.ldexp.f64(double %102, i32 2)\l  %104 = fadd double %103, %95\l  %105 = fcmp olt double %104, 0.000000e+00\l  %106 = select i1 %105, double 4.000000e+00, double 0.000000e+00\l  %107 = fadd double %103, %106\l  %108 = fadd double %95, %107\l  %109 = fptosi double %108 to i32\l  %110 = sitofp i32 %109 to double\l  %111 = fsub double %107, %110\l  %112 = fadd double %95, %111\l  %113 = fsub double %112, %111\l  %114 = fsub double %95, %113\l  %115 = fadd double %98, %114\l  %116 = fcmp oge double %112, 5.000000e-01\l  %117 = zext i1 %116 to i32\l  %118 = add nsw i32 %117, %109\l  %119 = select i1 %116, double 1.000000e+00, double 0.000000e+00\l  %120 = fsub double %112, %119\l  %121 = fadd double %120, %115\l  %122 = fsub double %121, %120\l  %123 = fsub double %115, %122\l  %124 = fmul double %121, 0x3FF921FB54442D18\l  %125 = fneg double %124\l  %126 = tail call double @llvm.fma.f64(double %121, double\l... 0x3FF921FB54442D18, double %125)\l  %127 = tail call double @llvm.fma.f64(double %121, double\l... 0x3C91A62633145C07, double %126)\l  %128 = tail call double @llvm.fma.f64(double %123, double\l... 0x3FF921FB54442D18, double %127)\l  %129 = fadd double %124, %128\l  %130 = fsub double %129, %124\l  %131 = fsub double %128, %130\l  br label %132\l}"];
	Node0x46e8940 -> Node0x46e9b20;
	Node0x46e9b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%132:\l132:                                              \l  %133 = phi double [ %54, %37 ], [ %131, %56 ]\l  %134 = phi double [ %52, %37 ], [ %129, %56 ]\l  %135 = phi i32 [ %55, %37 ], [ %118, %56 ]\l  %136 = fmul double %134, %134\l  %137 = fmul double %136, 5.000000e-01\l  %138 = fsub double 1.000000e+00, %137\l  %139 = fsub double 1.000000e+00, %138\l  %140 = fsub double %139, %137\l  %141 = fmul double %136, %136\l  %142 = tail call double @llvm.fma.f64(double %136, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %143 = tail call double @llvm.fma.f64(double %136, double %142, double\l... 0xBE927E4FA17F65F6)\l  %144 = tail call double @llvm.fma.f64(double %136, double %143, double\l... 0x3EFA01A019F4EC90)\l  %145 = tail call double @llvm.fma.f64(double %136, double %144, double\l... 0xBF56C16C16C16967)\l  %146 = tail call double @llvm.fma.f64(double %136, double %145, double\l... 0x3FA5555555555555)\l  %147 = fneg double %133\l  %148 = tail call double @llvm.fma.f64(double %134, double %147, double %140)\l  %149 = tail call double @llvm.fma.f64(double %141, double %146, double %148)\l  %150 = fadd double %138, %149\l  %151 = tail call double @llvm.fma.f64(double %136, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %152 = tail call double @llvm.fma.f64(double %136, double %151, double\l... 0x3EC71DE3796CDE01)\l  %153 = tail call double @llvm.fma.f64(double %136, double %152, double\l... 0xBF2A01A019E83E5C)\l  %154 = tail call double @llvm.fma.f64(double %136, double %153, double\l... 0x3F81111111110BB3)\l  %155 = fneg double %136\l  %156 = fmul double %134, %155\l  %157 = fmul double %133, 5.000000e-01\l  %158 = tail call double @llvm.fma.f64(double %156, double %154, double %157)\l  %159 = tail call double @llvm.fma.f64(double %136, double %158, double %147)\l  %160 = tail call double @llvm.fma.f64(double %156, double\l... 0xBFC5555555555555, double %159)\l  %161 = fsub double %134, %160\l  %162 = fneg double %161\l  %163 = and i32 %135, 1\l  %164 = icmp eq i32 %163, 0\l  %165 = select i1 %164, double %150, double %162\l  %166 = bitcast double %165 to \<2 x i32\>\l  %167 = shl i32 %135, 30\l  %168 = and i32 %167, -2147483648\l  %169 = extractelement \<2 x i32\> %166, i64 1\l  %170 = xor i32 %169, %168\l  %171 = insertelement \<2 x i32\> %166, i32 %170, i64 1\l  %172 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 504)\l  %173 = select i1 %172, \<2 x i32\> %171, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %174 = bitcast \<2 x i32\> %173 to double\l  %175 = tail call double @llvm.fabs.f64(double %29)\l  %176 = fcmp olt double %175, 0x41D0000000000000\l  br i1 %176, label %177, label %196\l|{<s0>T|<s1>F}}"];
	Node0x46e9b20:s0 -> Node0x46f02e0;
	Node0x46e9b20:s1 -> Node0x46f0370;
	Node0x46f02e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%177:\l177:                                              \l  %178 = fmul double %175, 0x3FE45F306DC9C883\l  %179 = tail call double @llvm.rint.f64(double %178)\l  %180 = tail call double @llvm.fma.f64(double %179, double\l... 0xBFF921FB54442D18, double %175)\l  %181 = tail call double @llvm.fma.f64(double %179, double\l... 0xBC91A62633145C00, double %180)\l  %182 = fmul double %179, 0x3C91A62633145C00\l  %183 = fneg double %182\l  %184 = tail call double @llvm.fma.f64(double %179, double\l... 0x3C91A62633145C00, double %183)\l  %185 = fsub double %180, %182\l  %186 = fsub double %180, %185\l  %187 = fsub double %186, %182\l  %188 = fsub double %185, %181\l  %189 = fadd double %188, %187\l  %190 = fsub double %189, %184\l  %191 = tail call double @llvm.fma.f64(double %179, double\l... 0xB97B839A252049C0, double %190)\l  %192 = fadd double %181, %191\l  %193 = fsub double %192, %181\l  %194 = fsub double %191, %193\l  %195 = fptosi double %179 to i32\l  br label %272\l}"];
	Node0x46f02e0 -> Node0x46f1170;
	Node0x46f0370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%196:\l196:                                              \l  %197 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 0)\l  %198 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 1)\l  %199 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 2)\l  %200 = fcmp oge double %175, 0x7B00000000000000\l  %201 = tail call double @llvm.amdgcn.ldexp.f64(double %175, i32 -128)\l  %202 = select i1 %200, double %201, double %175\l  %203 = fmul double %199, %202\l  %204 = fneg double %203\l  %205 = tail call double @llvm.fma.f64(double %199, double %202, double %204)\l  %206 = fmul double %198, %202\l  %207 = fneg double %206\l  %208 = tail call double @llvm.fma.f64(double %198, double %202, double %207)\l  %209 = fmul double %197, %202\l  %210 = fneg double %209\l  %211 = tail call double @llvm.fma.f64(double %197, double %202, double %210)\l  %212 = fadd double %206, %211\l  %213 = fsub double %212, %206\l  %214 = fsub double %212, %213\l  %215 = fsub double %211, %213\l  %216 = fsub double %206, %214\l  %217 = fadd double %215, %216\l  %218 = fadd double %203, %208\l  %219 = fsub double %218, %203\l  %220 = fsub double %218, %219\l  %221 = fsub double %208, %219\l  %222 = fsub double %203, %220\l  %223 = fadd double %221, %222\l  %224 = fadd double %218, %217\l  %225 = fsub double %224, %218\l  %226 = fsub double %224, %225\l  %227 = fsub double %217, %225\l  %228 = fsub double %218, %226\l  %229 = fadd double %227, %228\l  %230 = fadd double %223, %229\l  %231 = fadd double %205, %230\l  %232 = fadd double %209, %212\l  %233 = fsub double %232, %209\l  %234 = fsub double %212, %233\l  %235 = fadd double %234, %224\l  %236 = fsub double %235, %234\l  %237 = fsub double %224, %236\l  %238 = fadd double %237, %231\l  %239 = tail call double @llvm.amdgcn.ldexp.f64(double %232, i32 -2)\l  %240 = tail call double @llvm.amdgcn.fract.f64(double %239)\l  %241 = tail call i1 @llvm.amdgcn.class.f64(double %239, i32 516)\l  %242 = select i1 %241, double 0.000000e+00, double %240\l  %243 = tail call double @llvm.amdgcn.ldexp.f64(double %242, i32 2)\l  %244 = fadd double %243, %235\l  %245 = fcmp olt double %244, 0.000000e+00\l  %246 = select i1 %245, double 4.000000e+00, double 0.000000e+00\l  %247 = fadd double %243, %246\l  %248 = fadd double %235, %247\l  %249 = fptosi double %248 to i32\l  %250 = sitofp i32 %249 to double\l  %251 = fsub double %247, %250\l  %252 = fadd double %235, %251\l  %253 = fsub double %252, %251\l  %254 = fsub double %235, %253\l  %255 = fadd double %238, %254\l  %256 = fcmp oge double %252, 5.000000e-01\l  %257 = zext i1 %256 to i32\l  %258 = add nsw i32 %257, %249\l  %259 = select i1 %256, double 1.000000e+00, double 0.000000e+00\l  %260 = fsub double %252, %259\l  %261 = fadd double %260, %255\l  %262 = fsub double %261, %260\l  %263 = fsub double %255, %262\l  %264 = fmul double %261, 0x3FF921FB54442D18\l  %265 = fneg double %264\l  %266 = tail call double @llvm.fma.f64(double %261, double\l... 0x3FF921FB54442D18, double %265)\l  %267 = tail call double @llvm.fma.f64(double %261, double\l... 0x3C91A62633145C07, double %266)\l  %268 = tail call double @llvm.fma.f64(double %263, double\l... 0x3FF921FB54442D18, double %267)\l  %269 = fadd double %264, %268\l  %270 = fsub double %269, %264\l  %271 = fsub double %268, %270\l  br label %272\l}"];
	Node0x46f0370 -> Node0x46f1170;
	Node0x46f1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%272:\l272:                                              \l  %273 = phi double [ %194, %177 ], [ %271, %196 ]\l  %274 = phi double [ %192, %177 ], [ %269, %196 ]\l  %275 = phi i32 [ %195, %177 ], [ %258, %196 ]\l  %276 = fmul double %274, %274\l  %277 = fmul double %276, 5.000000e-01\l  %278 = fsub double 1.000000e+00, %277\l  %279 = fsub double 1.000000e+00, %278\l  %280 = fsub double %279, %277\l  %281 = fmul double %276, %276\l  %282 = tail call double @llvm.fma.f64(double %276, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %283 = tail call double @llvm.fma.f64(double %276, double %282, double\l... 0xBE927E4FA17F65F6)\l  %284 = tail call double @llvm.fma.f64(double %276, double %283, double\l... 0x3EFA01A019F4EC90)\l  %285 = tail call double @llvm.fma.f64(double %276, double %284, double\l... 0xBF56C16C16C16967)\l  %286 = tail call double @llvm.fma.f64(double %276, double %285, double\l... 0x3FA5555555555555)\l  %287 = fneg double %273\l  %288 = tail call double @llvm.fma.f64(double %274, double %287, double %280)\l  %289 = tail call double @llvm.fma.f64(double %281, double %286, double %288)\l  %290 = fadd double %278, %289\l  %291 = tail call double @llvm.fma.f64(double %276, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %292 = tail call double @llvm.fma.f64(double %276, double %291, double\l... 0x3EC71DE3796CDE01)\l  %293 = tail call double @llvm.fma.f64(double %276, double %292, double\l... 0xBF2A01A019E83E5C)\l  %294 = tail call double @llvm.fma.f64(double %276, double %293, double\l... 0x3F81111111110BB3)\l  %295 = fneg double %276\l  %296 = fmul double %274, %295\l  %297 = fmul double %273, 5.000000e-01\l  %298 = tail call double @llvm.fma.f64(double %296, double %294, double %297)\l  %299 = tail call double @llvm.fma.f64(double %276, double %298, double %287)\l  %300 = tail call double @llvm.fma.f64(double %296, double\l... 0xBFC5555555555555, double %299)\l  %301 = fsub double %274, %300\l  %302 = fneg double %301\l  %303 = and i32 %275, 1\l  %304 = icmp eq i32 %303, 0\l  %305 = select i1 %304, double %290, double %302\l  %306 = bitcast double %305 to \<2 x i32\>\l  %307 = shl i32 %275, 30\l  %308 = and i32 %307, -2147483648\l  %309 = extractelement \<2 x i32\> %306, i64 1\l  %310 = xor i32 %309, %308\l  %311 = insertelement \<2 x i32\> %306, i32 %310, i64 1\l  %312 = tail call i1 @llvm.amdgcn.class.f64(double %175, i32 504)\l  %313 = select i1 %312, \<2 x i32\> %311, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %314 = bitcast \<2 x i32\> %313 to double\l  br i1 %36, label %315, label %334\l|{<s0>T|<s1>F}}"];
	Node0x46f1170:s0 -> Node0x46f6d60;
	Node0x46f1170:s1 -> Node0x46f6db0;
	Node0x46f6d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%315:\l315:                                              \l  %316 = fmul double %35, 0x3FE45F306DC9C883\l  %317 = tail call double @llvm.rint.f64(double %316)\l  %318 = tail call double @llvm.fma.f64(double %317, double\l... 0xBFF921FB54442D18, double %35)\l  %319 = tail call double @llvm.fma.f64(double %317, double\l... 0xBC91A62633145C00, double %318)\l  %320 = fmul double %317, 0x3C91A62633145C00\l  %321 = fneg double %320\l  %322 = tail call double @llvm.fma.f64(double %317, double\l... 0x3C91A62633145C00, double %321)\l  %323 = fsub double %318, %320\l  %324 = fsub double %318, %323\l  %325 = fsub double %324, %320\l  %326 = fsub double %323, %319\l  %327 = fadd double %326, %325\l  %328 = fsub double %327, %322\l  %329 = tail call double @llvm.fma.f64(double %317, double\l... 0xB97B839A252049C0, double %328)\l  %330 = fadd double %319, %329\l  %331 = fsub double %330, %319\l  %332 = fsub double %329, %331\l  %333 = fptosi double %317 to i32\l  br label %410\l}"];
	Node0x46f6d60 -> Node0x46f7b70;
	Node0x46f6db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%334:\l334:                                              \l  %335 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 0)\l  %336 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 1)\l  %337 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 2)\l  %338 = fcmp oge double %35, 0x7B00000000000000\l  %339 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 -128)\l  %340 = select i1 %338, double %339, double %35\l  %341 = fmul double %337, %340\l  %342 = fneg double %341\l  %343 = tail call double @llvm.fma.f64(double %337, double %340, double %342)\l  %344 = fmul double %336, %340\l  %345 = fneg double %344\l  %346 = tail call double @llvm.fma.f64(double %336, double %340, double %345)\l  %347 = fmul double %335, %340\l  %348 = fneg double %347\l  %349 = tail call double @llvm.fma.f64(double %335, double %340, double %348)\l  %350 = fadd double %344, %349\l  %351 = fsub double %350, %344\l  %352 = fsub double %350, %351\l  %353 = fsub double %349, %351\l  %354 = fsub double %344, %352\l  %355 = fadd double %353, %354\l  %356 = fadd double %341, %346\l  %357 = fsub double %356, %341\l  %358 = fsub double %356, %357\l  %359 = fsub double %346, %357\l  %360 = fsub double %341, %358\l  %361 = fadd double %359, %360\l  %362 = fadd double %356, %355\l  %363 = fsub double %362, %356\l  %364 = fsub double %362, %363\l  %365 = fsub double %355, %363\l  %366 = fsub double %356, %364\l  %367 = fadd double %365, %366\l  %368 = fadd double %361, %367\l  %369 = fadd double %343, %368\l  %370 = fadd double %347, %350\l  %371 = fsub double %370, %347\l  %372 = fsub double %350, %371\l  %373 = fadd double %372, %362\l  %374 = fsub double %373, %372\l  %375 = fsub double %362, %374\l  %376 = fadd double %375, %369\l  %377 = tail call double @llvm.amdgcn.ldexp.f64(double %370, i32 -2)\l  %378 = tail call double @llvm.amdgcn.fract.f64(double %377)\l  %379 = tail call i1 @llvm.amdgcn.class.f64(double %377, i32 516)\l  %380 = select i1 %379, double 0.000000e+00, double %378\l  %381 = tail call double @llvm.amdgcn.ldexp.f64(double %380, i32 2)\l  %382 = fadd double %381, %373\l  %383 = fcmp olt double %382, 0.000000e+00\l  %384 = select i1 %383, double 4.000000e+00, double 0.000000e+00\l  %385 = fadd double %381, %384\l  %386 = fadd double %373, %385\l  %387 = fptosi double %386 to i32\l  %388 = sitofp i32 %387 to double\l  %389 = fsub double %385, %388\l  %390 = fadd double %373, %389\l  %391 = fsub double %390, %389\l  %392 = fsub double %373, %391\l  %393 = fadd double %376, %392\l  %394 = fcmp oge double %390, 5.000000e-01\l  %395 = zext i1 %394 to i32\l  %396 = add nsw i32 %395, %387\l  %397 = select i1 %394, double 1.000000e+00, double 0.000000e+00\l  %398 = fsub double %390, %397\l  %399 = fadd double %398, %393\l  %400 = fsub double %399, %398\l  %401 = fsub double %393, %400\l  %402 = fmul double %399, 0x3FF921FB54442D18\l  %403 = fneg double %402\l  %404 = tail call double @llvm.fma.f64(double %399, double\l... 0x3FF921FB54442D18, double %403)\l  %405 = tail call double @llvm.fma.f64(double %399, double\l... 0x3C91A62633145C07, double %404)\l  %406 = tail call double @llvm.fma.f64(double %401, double\l... 0x3FF921FB54442D18, double %405)\l  %407 = fadd double %402, %406\l  %408 = fsub double %407, %402\l  %409 = fsub double %406, %408\l  br label %410\l}"];
	Node0x46f6db0 -> Node0x46f7b70;
	Node0x46f7b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%410:\l410:                                              \l  %411 = phi double [ %332, %315 ], [ %409, %334 ]\l  %412 = phi double [ %330, %315 ], [ %407, %334 ]\l  %413 = phi i32 [ %333, %315 ], [ %396, %334 ]\l  %414 = fmul double %412, %412\l  %415 = fmul double %414, 5.000000e-01\l  %416 = fsub double 1.000000e+00, %415\l  %417 = fsub double 1.000000e+00, %416\l  %418 = fsub double %417, %415\l  %419 = fmul double %414, %414\l  %420 = tail call double @llvm.fma.f64(double %414, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %421 = tail call double @llvm.fma.f64(double %414, double %420, double\l... 0xBE927E4FA17F65F6)\l  %422 = tail call double @llvm.fma.f64(double %414, double %421, double\l... 0x3EFA01A019F4EC90)\l  %423 = tail call double @llvm.fma.f64(double %414, double %422, double\l... 0xBF56C16C16C16967)\l  %424 = tail call double @llvm.fma.f64(double %414, double %423, double\l... 0x3FA5555555555555)\l  %425 = fneg double %411\l  %426 = tail call double @llvm.fma.f64(double %412, double %425, double %418)\l  %427 = tail call double @llvm.fma.f64(double %419, double %424, double %426)\l  %428 = fadd double %416, %427\l  %429 = tail call double @llvm.fma.f64(double %414, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %430 = tail call double @llvm.fma.f64(double %414, double %429, double\l... 0x3EC71DE3796CDE01)\l  %431 = tail call double @llvm.fma.f64(double %414, double %430, double\l... 0xBF2A01A019E83E5C)\l  %432 = tail call double @llvm.fma.f64(double %414, double %431, double\l... 0x3F81111111110BB3)\l  %433 = fneg double %414\l  %434 = fmul double %412, %433\l  %435 = fmul double %411, 5.000000e-01\l  %436 = tail call double @llvm.fma.f64(double %434, double %432, double %435)\l  %437 = tail call double @llvm.fma.f64(double %414, double %436, double %425)\l  %438 = tail call double @llvm.fma.f64(double %434, double\l... 0xBFC5555555555555, double %437)\l  %439 = fsub double %412, %438\l  %440 = and i32 %413, 1\l  %441 = icmp eq i32 %440, 0\l  %442 = select i1 %441, double %439, double %428\l  %443 = bitcast double %442 to \<2 x i32\>\l  %444 = shl i32 %413, 30\l  %445 = bitcast double %34 to \<2 x i32\>\l  %446 = extractelement \<2 x i32\> %445, i64 1\l  %447 = xor i32 %444, %446\l  %448 = and i32 %447, -2147483648\l  %449 = extractelement \<2 x i32\> %443, i64 1\l  %450 = xor i32 %449, %448\l  %451 = insertelement \<2 x i32\> %443, i32 %450, i64 1\l  %452 = select i1 %172, \<2 x i32\> %451, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %453 = bitcast \<2 x i32\> %452 to double\l  br i1 %176, label %454, label %473\l|{<s0>T|<s1>F}}"];
	Node0x46f7b70:s0 -> Node0x46fcf20;
	Node0x46f7b70:s1 -> Node0x46fcf70;
	Node0x46fcf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%454:\l454:                                              \l  %455 = fmul double %175, 0x3FE45F306DC9C883\l  %456 = tail call double @llvm.rint.f64(double %455)\l  %457 = tail call double @llvm.fma.f64(double %456, double\l... 0xBFF921FB54442D18, double %175)\l  %458 = tail call double @llvm.fma.f64(double %456, double\l... 0xBC91A62633145C00, double %457)\l  %459 = fmul double %456, 0x3C91A62633145C00\l  %460 = fneg double %459\l  %461 = tail call double @llvm.fma.f64(double %456, double\l... 0x3C91A62633145C00, double %460)\l  %462 = fsub double %457, %459\l  %463 = fsub double %457, %462\l  %464 = fsub double %463, %459\l  %465 = fsub double %462, %458\l  %466 = fadd double %465, %464\l  %467 = fsub double %466, %461\l  %468 = tail call double @llvm.fma.f64(double %456, double\l... 0xB97B839A252049C0, double %467)\l  %469 = fadd double %458, %468\l  %470 = fsub double %469, %458\l  %471 = fsub double %468, %470\l  %472 = fptosi double %456 to i32\l  br label %549\l}"];
	Node0x46fcf20 -> Node0x46fdd30;
	Node0x46fcf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%473:\l473:                                              \l  %474 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 0)\l  %475 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 1)\l  %476 = tail call double @llvm.amdgcn.trig.preop.f64(double %175, i32 2)\l  %477 = fcmp oge double %175, 0x7B00000000000000\l  %478 = tail call double @llvm.amdgcn.ldexp.f64(double %175, i32 -128)\l  %479 = select i1 %477, double %478, double %175\l  %480 = fmul double %476, %479\l  %481 = fneg double %480\l  %482 = tail call double @llvm.fma.f64(double %476, double %479, double %481)\l  %483 = fmul double %475, %479\l  %484 = fneg double %483\l  %485 = tail call double @llvm.fma.f64(double %475, double %479, double %484)\l  %486 = fmul double %474, %479\l  %487 = fneg double %486\l  %488 = tail call double @llvm.fma.f64(double %474, double %479, double %487)\l  %489 = fadd double %483, %488\l  %490 = fsub double %489, %483\l  %491 = fsub double %489, %490\l  %492 = fsub double %488, %490\l  %493 = fsub double %483, %491\l  %494 = fadd double %492, %493\l  %495 = fadd double %480, %485\l  %496 = fsub double %495, %480\l  %497 = fsub double %495, %496\l  %498 = fsub double %485, %496\l  %499 = fsub double %480, %497\l  %500 = fadd double %498, %499\l  %501 = fadd double %495, %494\l  %502 = fsub double %501, %495\l  %503 = fsub double %501, %502\l  %504 = fsub double %494, %502\l  %505 = fsub double %495, %503\l  %506 = fadd double %504, %505\l  %507 = fadd double %500, %506\l  %508 = fadd double %482, %507\l  %509 = fadd double %486, %489\l  %510 = fsub double %509, %486\l  %511 = fsub double %489, %510\l  %512 = fadd double %511, %501\l  %513 = fsub double %512, %511\l  %514 = fsub double %501, %513\l  %515 = fadd double %514, %508\l  %516 = tail call double @llvm.amdgcn.ldexp.f64(double %509, i32 -2)\l  %517 = tail call double @llvm.amdgcn.fract.f64(double %516)\l  %518 = tail call i1 @llvm.amdgcn.class.f64(double %516, i32 516)\l  %519 = select i1 %518, double 0.000000e+00, double %517\l  %520 = tail call double @llvm.amdgcn.ldexp.f64(double %519, i32 2)\l  %521 = fadd double %520, %512\l  %522 = fcmp olt double %521, 0.000000e+00\l  %523 = select i1 %522, double 4.000000e+00, double 0.000000e+00\l  %524 = fadd double %520, %523\l  %525 = fadd double %512, %524\l  %526 = fptosi double %525 to i32\l  %527 = sitofp i32 %526 to double\l  %528 = fsub double %524, %527\l  %529 = fadd double %512, %528\l  %530 = fsub double %529, %528\l  %531 = fsub double %512, %530\l  %532 = fadd double %515, %531\l  %533 = fcmp oge double %529, 5.000000e-01\l  %534 = zext i1 %533 to i32\l  %535 = add nsw i32 %534, %526\l  %536 = select i1 %533, double 1.000000e+00, double 0.000000e+00\l  %537 = fsub double %529, %536\l  %538 = fadd double %537, %532\l  %539 = fsub double %538, %537\l  %540 = fsub double %532, %539\l  %541 = fmul double %538, 0x3FF921FB54442D18\l  %542 = fneg double %541\l  %543 = tail call double @llvm.fma.f64(double %538, double\l... 0x3FF921FB54442D18, double %542)\l  %544 = tail call double @llvm.fma.f64(double %538, double\l... 0x3C91A62633145C07, double %543)\l  %545 = tail call double @llvm.fma.f64(double %540, double\l... 0x3FF921FB54442D18, double %544)\l  %546 = fadd double %541, %545\l  %547 = fsub double %546, %541\l  %548 = fsub double %545, %547\l  br label %549\l}"];
	Node0x46fcf70 -> Node0x46fdd30;
	Node0x46fdd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%549:\l549:                                              \l  %550 = phi double [ %471, %454 ], [ %548, %473 ]\l  %551 = phi double [ %469, %454 ], [ %546, %473 ]\l  %552 = phi i32 [ %472, %454 ], [ %535, %473 ]\l  %553 = fmul double %551, %551\l  %554 = fmul double %553, 5.000000e-01\l  %555 = fsub double 1.000000e+00, %554\l  %556 = fsub double 1.000000e+00, %555\l  %557 = fsub double %556, %554\l  %558 = fmul double %553, %553\l  %559 = tail call double @llvm.fma.f64(double %553, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %560 = tail call double @llvm.fma.f64(double %553, double %559, double\l... 0xBE927E4FA17F65F6)\l  %561 = tail call double @llvm.fma.f64(double %553, double %560, double\l... 0x3EFA01A019F4EC90)\l  %562 = tail call double @llvm.fma.f64(double %553, double %561, double\l... 0xBF56C16C16C16967)\l  %563 = tail call double @llvm.fma.f64(double %553, double %562, double\l... 0x3FA5555555555555)\l  %564 = fneg double %550\l  %565 = tail call double @llvm.fma.f64(double %551, double %564, double %557)\l  %566 = tail call double @llvm.fma.f64(double %558, double %563, double %565)\l  %567 = fadd double %555, %566\l  %568 = tail call double @llvm.fma.f64(double %553, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %569 = tail call double @llvm.fma.f64(double %553, double %568, double\l... 0x3EC71DE3796CDE01)\l  %570 = tail call double @llvm.fma.f64(double %553, double %569, double\l... 0xBF2A01A019E83E5C)\l  %571 = tail call double @llvm.fma.f64(double %553, double %570, double\l... 0x3F81111111110BB3)\l  %572 = fneg double %553\l  %573 = fmul double %551, %572\l  %574 = fmul double %550, 5.000000e-01\l  %575 = tail call double @llvm.fma.f64(double %573, double %571, double %574)\l  %576 = tail call double @llvm.fma.f64(double %553, double %575, double %564)\l  %577 = tail call double @llvm.fma.f64(double %573, double\l... 0xBFC5555555555555, double %576)\l  %578 = fsub double %551, %577\l  %579 = and i32 %552, 1\l  %580 = icmp eq i32 %579, 0\l  %581 = select i1 %580, double %578, double %567\l  %582 = bitcast double %581 to \<2 x i32\>\l  %583 = shl i32 %552, 30\l  %584 = bitcast double %29 to \<2 x i32\>\l  %585 = extractelement \<2 x i32\> %584, i64 1\l  %586 = xor i32 %583, %585\l  %587 = and i32 %586, -2147483648\l  %588 = extractelement \<2 x i32\> %582, i64 1\l  %589 = xor i32 %588, %587\l  %590 = insertelement \<2 x i32\> %582, i32 %589, i64 1\l  %591 = select i1 %312, \<2 x i32\> %590, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %592 = bitcast \<2 x i32\> %591 to double\l  %593 = load double, double addrspace(1)* %22, align 8, !tbaa !7\l  %594 = fsub contract double %33, %593\l  %595 = tail call double @llvm.fabs.f64(double %594)\l  %596 = fcmp olt double %595, 0x41D0000000000000\l  br i1 %596, label %597, label %654\l|{<s0>T|<s1>F}}"];
	Node0x46fdd30:s0 -> Node0x4704380;
	Node0x46fdd30:s1 -> Node0x47043d0;
	Node0x4704380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%597:\l597:                                              \l  %598 = fmul double %595, 0x3FE45F306DC9C883\l  %599 = tail call double @llvm.rint.f64(double %598)\l  %600 = tail call double @llvm.fma.f64(double %599, double\l... 0xBFF921FB54442D18, double %595)\l  %601 = tail call double @llvm.fma.f64(double %599, double\l... 0xBC91A62633145C00, double %600)\l  %602 = fmul double %599, 0x3C91A62633145C00\l  %603 = fneg double %602\l  %604 = tail call double @llvm.fma.f64(double %599, double\l... 0x3C91A62633145C00, double %603)\l  %605 = fsub double %600, %602\l  %606 = fsub double %600, %605\l  %607 = fsub double %606, %602\l  %608 = fsub double %605, %601\l  %609 = fadd double %608, %607\l  %610 = fsub double %609, %604\l  %611 = tail call double @llvm.fma.f64(double %599, double\l... 0xB97B839A252049C0, double %610)\l  %612 = fadd double %601, %611\l  %613 = fsub double %612, %601\l  %614 = fsub double %611, %613\l  %615 = fptosi double %599 to i32\l  %616 = fmul double %612, %612\l  %617 = fmul double %616, 5.000000e-01\l  %618 = fsub double 1.000000e+00, %617\l  %619 = fsub double 1.000000e+00, %618\l  %620 = fsub double %619, %617\l  %621 = fmul double %616, %616\l  %622 = tail call double @llvm.fma.f64(double %616, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %623 = tail call double @llvm.fma.f64(double %616, double %622, double\l... 0xBE927E4FA17F65F6)\l  %624 = tail call double @llvm.fma.f64(double %616, double %623, double\l... 0x3EFA01A019F4EC90)\l  %625 = tail call double @llvm.fma.f64(double %616, double %624, double\l... 0xBF56C16C16C16967)\l  %626 = tail call double @llvm.fma.f64(double %616, double %625, double\l... 0x3FA5555555555555)\l  %627 = fneg double %614\l  %628 = tail call double @llvm.fma.f64(double %612, double %627, double %620)\l  %629 = tail call double @llvm.fma.f64(double %621, double %626, double %628)\l  %630 = fadd double %618, %629\l  %631 = tail call double @llvm.fma.f64(double %616, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %632 = tail call double @llvm.fma.f64(double %616, double %631, double\l... 0x3EC71DE3796CDE01)\l  %633 = tail call double @llvm.fma.f64(double %616, double %632, double\l... 0xBF2A01A019E83E5C)\l  %634 = tail call double @llvm.fma.f64(double %616, double %633, double\l... 0x3F81111111110BB3)\l  %635 = fneg double %616\l  %636 = fmul double %612, %635\l  %637 = fmul double %614, 5.000000e-01\l  %638 = tail call double @llvm.fma.f64(double %636, double %634, double %637)\l  %639 = tail call double @llvm.fma.f64(double %616, double %638, double %627)\l  %640 = tail call double @llvm.fma.f64(double %636, double\l... 0xBFC5555555555555, double %639)\l  %641 = fsub double %612, %640\l  %642 = fneg double %641\l  %643 = and i32 %615, 1\l  %644 = icmp eq i32 %643, 0\l  %645 = select i1 %644, double %630, double %642\l  %646 = bitcast double %645 to \<2 x i32\>\l  %647 = shl i32 %615, 30\l  %648 = and i32 %647, -2147483648\l  %649 = extractelement \<2 x i32\> %646, i64 1\l  %650 = xor i32 %649, %648\l  %651 = insertelement \<2 x i32\> %646, i32 %650, i64 1\l  %652 = tail call i1 @llvm.amdgcn.class.f64(double %595, i32 504)\l  %653 = select i1 %652, \<2 x i32\> %651, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %768\l}"];
	Node0x4704380 -> Node0x4707010;
	Node0x47043d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%654:\l654:                                              \l  %655 = tail call double @llvm.amdgcn.trig.preop.f64(double %595, i32 0)\l  %656 = tail call double @llvm.amdgcn.trig.preop.f64(double %595, i32 1)\l  %657 = tail call double @llvm.amdgcn.trig.preop.f64(double %595, i32 2)\l  %658 = fcmp oge double %595, 0x7B00000000000000\l  %659 = tail call double @llvm.amdgcn.ldexp.f64(double %595, i32 -128)\l  %660 = select i1 %658, double %659, double %595\l  %661 = fmul double %657, %660\l  %662 = fneg double %661\l  %663 = tail call double @llvm.fma.f64(double %657, double %660, double %662)\l  %664 = fmul double %656, %660\l  %665 = fneg double %664\l  %666 = tail call double @llvm.fma.f64(double %656, double %660, double %665)\l  %667 = fmul double %655, %660\l  %668 = fneg double %667\l  %669 = tail call double @llvm.fma.f64(double %655, double %660, double %668)\l  %670 = fadd double %664, %669\l  %671 = fsub double %670, %664\l  %672 = fsub double %670, %671\l  %673 = fsub double %669, %671\l  %674 = fsub double %664, %672\l  %675 = fadd double %673, %674\l  %676 = fadd double %661, %666\l  %677 = fsub double %676, %661\l  %678 = fsub double %676, %677\l  %679 = fsub double %666, %677\l  %680 = fsub double %661, %678\l  %681 = fadd double %679, %680\l  %682 = fadd double %676, %675\l  %683 = fsub double %682, %676\l  %684 = fsub double %682, %683\l  %685 = fsub double %675, %683\l  %686 = fsub double %676, %684\l  %687 = fadd double %685, %686\l  %688 = fadd double %681, %687\l  %689 = fadd double %663, %688\l  %690 = fadd double %667, %670\l  %691 = fsub double %690, %667\l  %692 = fsub double %670, %691\l  %693 = fadd double %692, %682\l  %694 = fsub double %693, %692\l  %695 = fsub double %682, %694\l  %696 = fadd double %695, %689\l  %697 = tail call double @llvm.amdgcn.ldexp.f64(double %690, i32 -2)\l  %698 = tail call double @llvm.amdgcn.fract.f64(double %697)\l  %699 = tail call i1 @llvm.amdgcn.class.f64(double %697, i32 516)\l  %700 = select i1 %699, double 0.000000e+00, double %698\l  %701 = tail call double @llvm.amdgcn.ldexp.f64(double %700, i32 2)\l  %702 = fadd double %701, %693\l  %703 = fcmp olt double %702, 0.000000e+00\l  %704 = select i1 %703, double 4.000000e+00, double 0.000000e+00\l  %705 = fadd double %701, %704\l  %706 = fadd double %693, %705\l  %707 = fptosi double %706 to i32\l  %708 = sitofp i32 %707 to double\l  %709 = fsub double %705, %708\l  %710 = fadd double %693, %709\l  %711 = fsub double %710, %709\l  %712 = fsub double %693, %711\l  %713 = fadd double %696, %712\l  %714 = fcmp oge double %710, 5.000000e-01\l  %715 = zext i1 %714 to i32\l  %716 = add nsw i32 %715, %707\l  %717 = select i1 %714, double 1.000000e+00, double 0.000000e+00\l  %718 = fsub double %710, %717\l  %719 = fadd double %718, %713\l  %720 = fsub double %719, %718\l  %721 = fsub double %713, %720\l  %722 = fmul double %719, 0x3FF921FB54442D18\l  %723 = fneg double %722\l  %724 = tail call double @llvm.fma.f64(double %719, double\l... 0x3FF921FB54442D18, double %723)\l  %725 = tail call double @llvm.fma.f64(double %719, double\l... 0x3C91A62633145C07, double %724)\l  %726 = tail call double @llvm.fma.f64(double %721, double\l... 0x3FF921FB54442D18, double %725)\l  %727 = fadd double %722, %726\l  %728 = fsub double %727, %722\l  %729 = fsub double %726, %728\l  %730 = fmul double %727, %727\l  %731 = fmul double %730, 5.000000e-01\l  %732 = fsub double 1.000000e+00, %731\l  %733 = fsub double 1.000000e+00, %732\l  %734 = fsub double %733, %731\l  %735 = fmul double %730, %730\l  %736 = tail call double @llvm.fma.f64(double %730, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %737 = tail call double @llvm.fma.f64(double %730, double %736, double\l... 0xBE927E4FA17F65F6)\l  %738 = tail call double @llvm.fma.f64(double %730, double %737, double\l... 0x3EFA01A019F4EC90)\l  %739 = tail call double @llvm.fma.f64(double %730, double %738, double\l... 0xBF56C16C16C16967)\l  %740 = tail call double @llvm.fma.f64(double %730, double %739, double\l... 0x3FA5555555555555)\l  %741 = fneg double %729\l  %742 = tail call double @llvm.fma.f64(double %727, double %741, double %734)\l  %743 = tail call double @llvm.fma.f64(double %735, double %740, double %742)\l  %744 = fadd double %732, %743\l  %745 = tail call double @llvm.fma.f64(double %730, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %746 = tail call double @llvm.fma.f64(double %730, double %745, double\l... 0x3EC71DE3796CDE01)\l  %747 = tail call double @llvm.fma.f64(double %730, double %746, double\l... 0xBF2A01A019E83E5C)\l  %748 = tail call double @llvm.fma.f64(double %730, double %747, double\l... 0x3F81111111110BB3)\l  %749 = fneg double %730\l  %750 = fmul double %727, %749\l  %751 = fmul double %729, 5.000000e-01\l  %752 = tail call double @llvm.fma.f64(double %750, double %748, double %751)\l  %753 = tail call double @llvm.fma.f64(double %730, double %752, double %741)\l  %754 = tail call double @llvm.fma.f64(double %750, double\l... 0xBFC5555555555555, double %753)\l  %755 = fsub double %727, %754\l  %756 = fneg double %755\l  %757 = and i32 %716, 1\l  %758 = icmp eq i32 %757, 0\l  %759 = select i1 %758, double %744, double %756\l  %760 = bitcast double %759 to \<2 x i32\>\l  %761 = shl i32 %716, 30\l  %762 = and i32 %761, -2147483648\l  %763 = extractelement \<2 x i32\> %760, i64 1\l  %764 = xor i32 %763, %762\l  %765 = insertelement \<2 x i32\> %760, i32 %764, i64 1\l  %766 = tail call i1 @llvm.amdgcn.class.f64(double %595, i32 504)\l  %767 = select i1 %766, \<2 x i32\> %765, \<2 x i32\> \<i32 0, i32 2146959360\>\l  br label %768\l}"];
	Node0x47043d0 -> Node0x4707010;
	Node0x4707010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%768:\l768:                                              \l  %769 = phi i32 [ %647, %597 ], [ %761, %654 ]\l  %770 = phi i32 [ %643, %597 ], [ %757, %654 ]\l  %771 = phi double [ %641, %597 ], [ %755, %654 ]\l  %772 = phi double [ %630, %597 ], [ %744, %654 ]\l  %773 = phi \<2 x i32\> [ %653, %597 ], [ %767, %654 ]\l  %774 = phi i1 [ %652, %597 ], [ %766, %654 ]\l  %775 = bitcast \<2 x i32\> %773 to double\l  %776 = icmp eq i32 %770, 0\l  %777 = select i1 %776, double %771, double %772\l  %778 = bitcast double %777 to \<2 x i32\>\l  %779 = bitcast double %594 to \<2 x i32\>\l  %780 = extractelement \<2 x i32\> %779, i64 1\l  %781 = xor i32 %769, %780\l  %782 = and i32 %781, -2147483648\l  %783 = extractelement \<2 x i32\> %778, i64 1\l  %784 = xor i32 %783, %782\l  %785 = insertelement \<2 x i32\> %778, i32 %784, i64 1\l  %786 = select i1 %774, \<2 x i32\> %785, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %787 = bitcast \<2 x i32\> %786 to double\l  %788 = fmul contract double %314, %787\l  %789 = tail call double @llvm.fabs.f64(double %788)\l  %790 = tail call double @llvm.amdgcn.frexp.mant.f64(double %789)\l  %791 = fcmp olt double %790, 0x3FE5555555555555\l  %792 = zext i1 %791 to i32\l  %793 = tail call double @llvm.amdgcn.ldexp.f64(double %790, i32 %792)\l  %794 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %789)\l  %795 = sub nsw i32 %794, %792\l  %796 = fadd double %793, -1.000000e+00\l  %797 = fadd double %793, 1.000000e+00\l  %798 = fadd double %797, -1.000000e+00\l  %799 = fsub double %793, %798\l  %800 = tail call double @llvm.amdgcn.rcp.f64(double %797)\l  %801 = fneg double %797\l  %802 = tail call double @llvm.fma.f64(double %801, double %800, double\l... 1.000000e+00)\l  %803 = tail call double @llvm.fma.f64(double %802, double %800, double %800)\l  %804 = tail call double @llvm.fma.f64(double %801, double %803, double\l... 1.000000e+00)\l  %805 = tail call double @llvm.fma.f64(double %804, double %803, double %803)\l  %806 = fmul double %796, %805\l  %807 = fmul double %797, %806\l  %808 = fneg double %807\l  %809 = tail call double @llvm.fma.f64(double %806, double %797, double %808)\l  %810 = tail call double @llvm.fma.f64(double %806, double %799, double %809)\l  %811 = fadd double %807, %810\l  %812 = fsub double %811, %807\l  %813 = fsub double %810, %812\l  %814 = fsub double %796, %811\l  %815 = fsub double %796, %814\l  %816 = fsub double %815, %811\l  %817 = fsub double %816, %813\l  %818 = fadd double %814, %817\l  %819 = fmul double %805, %818\l  %820 = fadd double %806, %819\l  %821 = fsub double %820, %806\l  %822 = fsub double %819, %821\l  %823 = fmul double %820, %820\l  %824 = fneg double %823\l  %825 = tail call double @llvm.fma.f64(double %820, double %820, double %824)\l  %826 = fmul double %822, 2.000000e+00\l  %827 = tail call double @llvm.fma.f64(double %820, double %826, double %825)\l  %828 = fadd double %823, %827\l  %829 = fsub double %828, %823\l  %830 = fsub double %827, %829\l  %831 = tail call double @llvm.fma.f64(double %828, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %832 = tail call double @llvm.fma.f64(double %828, double %831, double\l... 0x3FBE25E43ABE935A)\l  %833 = tail call double @llvm.fma.f64(double %828, double %832, double\l... 0x3FC110EF47E6C9C2)\l  %834 = tail call double @llvm.fma.f64(double %828, double %833, double\l... 0x3FC3B13BCFA74449)\l  %835 = tail call double @llvm.fma.f64(double %828, double %834, double\l... 0x3FC745D171BF3C30)\l  %836 = tail call double @llvm.fma.f64(double %828, double %835, double\l... 0x3FCC71C71C7792CE)\l  %837 = tail call double @llvm.fma.f64(double %828, double %836, double\l... 0x3FD24924924920DA)\l  %838 = tail call double @llvm.fma.f64(double %828, double %837, double\l... 0x3FD999999999999C)\l  %839 = sitofp i32 %795 to double\l  %840 = fmul double %839, 0x3FE62E42FEFA39EF\l  %841 = fneg double %840\l  %842 = tail call double @llvm.fma.f64(double %839, double\l... 0x3FE62E42FEFA39EF, double %841)\l  %843 = tail call double @llvm.fma.f64(double %839, double\l... 0x3C7ABC9E3B39803F, double %842)\l  %844 = fadd double %840, %843\l  %845 = fsub double %844, %840\l  %846 = fsub double %843, %845\l  %847 = tail call double @llvm.amdgcn.ldexp.f64(double %820, i32 1)\l  %848 = tail call double @llvm.amdgcn.ldexp.f64(double %822, i32 1)\l  %849 = fmul double %820, %828\l  %850 = fneg double %849\l  %851 = tail call double @llvm.fma.f64(double %828, double %820, double %850)\l  %852 = tail call double @llvm.fma.f64(double %828, double %822, double %851)\l  %853 = tail call double @llvm.fma.f64(double %830, double %820, double %852)\l  %854 = fadd double %849, %853\l  %855 = fsub double %854, %849\l  %856 = fsub double %853, %855\l  %857 = fmul double %828, %838\l  %858 = fneg double %857\l  %859 = tail call double @llvm.fma.f64(double %828, double %838, double %858)\l  %860 = tail call double @llvm.fma.f64(double %830, double %838, double %859)\l  %861 = fadd double %857, %860\l  %862 = fsub double %861, %857\l  %863 = fsub double %860, %862\l  %864 = fadd double %861, 0x3FE5555555555555\l  %865 = fadd double %864, 0xBFE5555555555555\l  %866 = fsub double %861, %865\l  %867 = fadd double %863, 0x3C8543B0D5DF274D\l  %868 = fadd double %867, %866\l  %869 = fadd double %864, %868\l  %870 = fsub double %869, %864\l  %871 = fsub double %868, %870\l  %872 = fmul double %854, %869\l  %873 = fneg double %872\l  %874 = tail call double @llvm.fma.f64(double %854, double %869, double %873)\l  %875 = tail call double @llvm.fma.f64(double %854, double %871, double %874)\l  %876 = tail call double @llvm.fma.f64(double %856, double %869, double %875)\l  %877 = fadd double %872, %876\l  %878 = fsub double %877, %872\l  %879 = fsub double %876, %878\l  %880 = fadd double %847, %877\l  %881 = fsub double %880, %847\l  %882 = fsub double %877, %881\l  %883 = fadd double %848, %879\l  %884 = fadd double %883, %882\l  %885 = fadd double %880, %884\l  %886 = fsub double %885, %880\l  %887 = fsub double %884, %886\l  %888 = fadd double %844, %885\l  %889 = fsub double %888, %844\l  %890 = fsub double %888, %889\l  %891 = fsub double %844, %890\l  %892 = fsub double %885, %889\l  %893 = fadd double %892, %891\l  %894 = fadd double %846, %887\l  %895 = fsub double %894, %846\l  %896 = fsub double %894, %895\l  %897 = fsub double %846, %896\l  %898 = fsub double %887, %895\l  %899 = fadd double %898, %897\l  %900 = fadd double %894, %893\l  %901 = fadd double %888, %900\l  %902 = fsub double %901, %888\l  %903 = fsub double %900, %902\l  %904 = fadd double %899, %903\l  %905 = fadd double %901, %904\l  %906 = fsub double %905, %901\l  %907 = fsub double %904, %906\l  %908 = fmul double %905, 2.000000e+00\l  %909 = fneg double %908\l  %910 = tail call double @llvm.fma.f64(double %905, double 2.000000e+00,\l... double %909)\l  %911 = tail call double @llvm.fma.f64(double %907, double 2.000000e+00,\l... double %910)\l  %912 = fadd double %908, %911\l  %913 = fsub double %912, %908\l  %914 = fsub double %911, %913\l  %915 = tail call double @llvm.fabs.f64(double %908) #3\l  %916 = fcmp oeq double %915, 0x7FF0000000000000\l  %917 = select i1 %916, double %908, double %912\l  %918 = tail call double @llvm.fabs.f64(double %917) #3\l  %919 = fcmp oeq double %918, 0x7FF0000000000000\l  %920 = select i1 %919, double 0.000000e+00, double %914\l  %921 = fmul double %917, 0x3FF71547652B82FE\l  %922 = tail call double @llvm.rint.f64(double %921)\l  %923 = fneg double %922\l  %924 = tail call double @llvm.fma.f64(double %923, double\l... 0x3FE62E42FEFA39EF, double %917)\l  %925 = tail call double @llvm.fma.f64(double %923, double\l... 0x3C7ABC9E3B39803F, double %924)\l  %926 = tail call double @llvm.fma.f64(double %925, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %927 = tail call double @llvm.fma.f64(double %925, double %926, double\l... 0x3EC71DEE623FDE64)\l  %928 = tail call double @llvm.fma.f64(double %925, double %927, double\l... 0x3EFA01997C89E6B0)\l  %929 = tail call double @llvm.fma.f64(double %925, double %928, double\l... 0x3F2A01A014761F6E)\l  %930 = tail call double @llvm.fma.f64(double %925, double %929, double\l... 0x3F56C16C1852B7B0)\l  %931 = tail call double @llvm.fma.f64(double %925, double %930, double\l... 0x3F81111111122322)\l  %932 = tail call double @llvm.fma.f64(double %925, double %931, double\l... 0x3FA55555555502A1)\l  %933 = tail call double @llvm.fma.f64(double %925, double %932, double\l... 0x3FC5555555555511)\l  %934 = tail call double @llvm.fma.f64(double %925, double %933, double\l... 0x3FE000000000000B)\l  %935 = tail call double @llvm.fma.f64(double %925, double %934, double\l... 1.000000e+00)\l  %936 = tail call double @llvm.fma.f64(double %925, double %935, double\l... 1.000000e+00)\l  %937 = fptosi double %922 to i32\l  %938 = tail call double @llvm.amdgcn.ldexp.f64(double %936, i32 %937)\l  %939 = fcmp ogt double %917, 1.024000e+03\l  %940 = select i1 %939, double 0x7FF0000000000000, double %938\l  %941 = fcmp olt double %917, -1.075000e+03\l  %942 = select i1 %941, double 0.000000e+00, double %940\l  %943 = tail call double @llvm.fma.f64(double %942, double %920, double %942)\l  %944 = tail call double @llvm.fabs.f64(double %942) #3\l  %945 = fcmp oeq double %944, 0x7FF0000000000000\l  %946 = select i1 %945, double %942, double %943\l  %947 = tail call double @llvm.fabs.f64(double %946)\l  %948 = fcmp oeq double %789, 0x7FF0000000000000\l  %949 = fcmp oeq double %788, 0.000000e+00\l  %950 = select i1 %948, double 0x7FF0000000000000, double %947\l  %951 = select i1 %949, double 0.000000e+00, double %950\l  %952 = fcmp uno double %788, 0.000000e+00\l  %953 = select i1 %952, double 0x7FF8000000000000, double %951\l  %954 = fmul contract double %174, %592\l  %955 = fmul contract double %314, %453\l  %956 = fmul contract double %955, %775\l  %957 = fsub contract double %954, %956\l  %958 = tail call double @llvm.fabs.f64(double %957)\l  %959 = tail call double @llvm.amdgcn.frexp.mant.f64(double %958)\l  %960 = fcmp olt double %959, 0x3FE5555555555555\l  %961 = zext i1 %960 to i32\l  %962 = tail call double @llvm.amdgcn.ldexp.f64(double %959, i32 %961)\l  %963 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %958)\l  %964 = sub nsw i32 %963, %961\l  %965 = fadd double %962, -1.000000e+00\l  %966 = fadd double %962, 1.000000e+00\l  %967 = fadd double %966, -1.000000e+00\l  %968 = fsub double %962, %967\l  %969 = tail call double @llvm.amdgcn.rcp.f64(double %966)\l  %970 = fneg double %966\l  %971 = tail call double @llvm.fma.f64(double %970, double %969, double\l... 1.000000e+00)\l  %972 = tail call double @llvm.fma.f64(double %971, double %969, double %969)\l  %973 = tail call double @llvm.fma.f64(double %970, double %972, double\l... 1.000000e+00)\l  %974 = tail call double @llvm.fma.f64(double %973, double %972, double %972)\l  %975 = fmul double %965, %974\l  %976 = fmul double %966, %975\l  %977 = fneg double %976\l  %978 = tail call double @llvm.fma.f64(double %975, double %966, double %977)\l  %979 = tail call double @llvm.fma.f64(double %975, double %968, double %978)\l  %980 = fadd double %976, %979\l  %981 = fsub double %980, %976\l  %982 = fsub double %979, %981\l  %983 = fsub double %965, %980\l  %984 = fsub double %965, %983\l  %985 = fsub double %984, %980\l  %986 = fsub double %985, %982\l  %987 = fadd double %983, %986\l  %988 = fmul double %974, %987\l  %989 = fadd double %975, %988\l  %990 = fsub double %989, %975\l  %991 = fsub double %988, %990\l  %992 = fmul double %989, %989\l  %993 = fneg double %992\l  %994 = tail call double @llvm.fma.f64(double %989, double %989, double %993)\l  %995 = fmul double %991, 2.000000e+00\l  %996 = tail call double @llvm.fma.f64(double %989, double %995, double %994)\l  %997 = fadd double %992, %996\l  %998 = fsub double %997, %992\l  %999 = fsub double %996, %998\l  %1000 = tail call double @llvm.fma.f64(double %997, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %1001 = tail call double @llvm.fma.f64(double %997, double %1000, double\l... 0x3FBE25E43ABE935A)\l  %1002 = tail call double @llvm.fma.f64(double %997, double %1001, double\l... 0x3FC110EF47E6C9C2)\l  %1003 = tail call double @llvm.fma.f64(double %997, double %1002, double\l... 0x3FC3B13BCFA74449)\l  %1004 = tail call double @llvm.fma.f64(double %997, double %1003, double\l... 0x3FC745D171BF3C30)\l  %1005 = tail call double @llvm.fma.f64(double %997, double %1004, double\l... 0x3FCC71C71C7792CE)\l  %1006 = tail call double @llvm.fma.f64(double %997, double %1005, double\l... 0x3FD24924924920DA)\l  %1007 = tail call double @llvm.fma.f64(double %997, double %1006, double\l... 0x3FD999999999999C)\l  %1008 = sitofp i32 %964 to double\l  %1009 = fmul double %1008, 0x3FE62E42FEFA39EF\l  %1010 = fneg double %1009\l  %1011 = tail call double @llvm.fma.f64(double %1008, double\l... 0x3FE62E42FEFA39EF, double %1010)\l  %1012 = tail call double @llvm.fma.f64(double %1008, double\l... 0x3C7ABC9E3B39803F, double %1011)\l  %1013 = fadd double %1009, %1012\l  %1014 = fsub double %1013, %1009\l  %1015 = fsub double %1012, %1014\l  %1016 = tail call double @llvm.amdgcn.ldexp.f64(double %989, i32 1)\l  %1017 = tail call double @llvm.amdgcn.ldexp.f64(double %991, i32 1)\l  %1018 = fmul double %989, %997\l  %1019 = fneg double %1018\l  %1020 = tail call double @llvm.fma.f64(double %997, double %989, double\l... %1019)\l  %1021 = tail call double @llvm.fma.f64(double %997, double %991, double\l... %1020)\l  %1022 = tail call double @llvm.fma.f64(double %999, double %989, double\l... %1021)\l  %1023 = fadd double %1018, %1022\l  %1024 = fsub double %1023, %1018\l  %1025 = fsub double %1022, %1024\l  %1026 = fmul double %997, %1007\l  %1027 = fneg double %1026\l  %1028 = tail call double @llvm.fma.f64(double %997, double %1007, double\l... %1027)\l  %1029 = tail call double @llvm.fma.f64(double %999, double %1007, double\l... %1028)\l  %1030 = fadd double %1026, %1029\l  %1031 = fsub double %1030, %1026\l  %1032 = fsub double %1029, %1031\l  %1033 = fadd double %1030, 0x3FE5555555555555\l  %1034 = fadd double %1033, 0xBFE5555555555555\l  %1035 = fsub double %1030, %1034\l  %1036 = fadd double %1032, 0x3C8543B0D5DF274D\l  %1037 = fadd double %1036, %1035\l  %1038 = fadd double %1033, %1037\l  %1039 = fsub double %1038, %1033\l  %1040 = fsub double %1037, %1039\l  %1041 = fmul double %1023, %1038\l  %1042 = fneg double %1041\l  %1043 = tail call double @llvm.fma.f64(double %1023, double %1038, double\l... %1042)\l  %1044 = tail call double @llvm.fma.f64(double %1023, double %1040, double\l... %1043)\l  %1045 = tail call double @llvm.fma.f64(double %1025, double %1038, double\l... %1044)\l  %1046 = fadd double %1041, %1045\l  %1047 = fsub double %1046, %1041\l  %1048 = fsub double %1045, %1047\l  %1049 = fadd double %1016, %1046\l  %1050 = fsub double %1049, %1016\l  %1051 = fsub double %1046, %1050\l  %1052 = fadd double %1017, %1048\l  %1053 = fadd double %1052, %1051\l  %1054 = fadd double %1049, %1053\l  %1055 = fsub double %1054, %1049\l  %1056 = fsub double %1053, %1055\l  %1057 = fadd double %1013, %1054\l  %1058 = fsub double %1057, %1013\l  %1059 = fsub double %1057, %1058\l  %1060 = fsub double %1013, %1059\l  %1061 = fsub double %1054, %1058\l  %1062 = fadd double %1061, %1060\l  %1063 = fadd double %1015, %1056\l  %1064 = fsub double %1063, %1015\l  %1065 = fsub double %1063, %1064\l  %1066 = fsub double %1015, %1065\l  %1067 = fsub double %1056, %1064\l  %1068 = fadd double %1067, %1066\l  %1069 = fadd double %1063, %1062\l  %1070 = fadd double %1057, %1069\l  %1071 = fsub double %1070, %1057\l  %1072 = fsub double %1069, %1071\l  %1073 = fadd double %1068, %1072\l  %1074 = fadd double %1070, %1073\l  %1075 = fsub double %1074, %1070\l  %1076 = fsub double %1073, %1075\l  %1077 = fmul double %1074, 2.000000e+00\l  %1078 = fneg double %1077\l  %1079 = tail call double @llvm.fma.f64(double %1074, double 2.000000e+00,\l... double %1078)\l  %1080 = tail call double @llvm.fma.f64(double %1076, double 2.000000e+00,\l... double %1079)\l  %1081 = fadd double %1077, %1080\l  %1082 = fsub double %1081, %1077\l  %1083 = fsub double %1080, %1082\l  %1084 = tail call double @llvm.fabs.f64(double %1077) #3\l  %1085 = fcmp oeq double %1084, 0x7FF0000000000000\l  %1086 = select i1 %1085, double %1077, double %1081\l  %1087 = tail call double @llvm.fabs.f64(double %1086) #3\l  %1088 = fcmp oeq double %1087, 0x7FF0000000000000\l  %1089 = select i1 %1088, double 0.000000e+00, double %1083\l  %1090 = fmul double %1086, 0x3FF71547652B82FE\l  %1091 = tail call double @llvm.rint.f64(double %1090)\l  %1092 = fneg double %1091\l  %1093 = tail call double @llvm.fma.f64(double %1092, double\l... 0x3FE62E42FEFA39EF, double %1086)\l  %1094 = tail call double @llvm.fma.f64(double %1092, double\l... 0x3C7ABC9E3B39803F, double %1093)\l  %1095 = tail call double @llvm.fma.f64(double %1094, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %1096 = tail call double @llvm.fma.f64(double %1094, double %1095, double\l... 0x3EC71DEE623FDE64)\l  %1097 = tail call double @llvm.fma.f64(double %1094, double %1096, double\l... 0x3EFA01997C89E6B0)\l  %1098 = tail call double @llvm.fma.f64(double %1094, double %1097, double\l... 0x3F2A01A014761F6E)\l  %1099 = tail call double @llvm.fma.f64(double %1094, double %1098, double\l... 0x3F56C16C1852B7B0)\l  %1100 = tail call double @llvm.fma.f64(double %1094, double %1099, double\l... 0x3F81111111122322)\l  %1101 = tail call double @llvm.fma.f64(double %1094, double %1100, double\l... 0x3FA55555555502A1)\l  %1102 = tail call double @llvm.fma.f64(double %1094, double %1101, double\l... 0x3FC5555555555511)\l  %1103 = tail call double @llvm.fma.f64(double %1094, double %1102, double\l... 0x3FE000000000000B)\l  %1104 = tail call double @llvm.fma.f64(double %1094, double %1103, double\l... 1.000000e+00)\l  %1105 = tail call double @llvm.fma.f64(double %1094, double %1104, double\l... 1.000000e+00)\l  %1106 = fptosi double %1091 to i32\l  %1107 = tail call double @llvm.amdgcn.ldexp.f64(double %1105, i32 %1106)\l  %1108 = fcmp ogt double %1086, 1.024000e+03\l  %1109 = select i1 %1108, double 0x7FF0000000000000, double %1107\l  %1110 = fcmp olt double %1086, -1.075000e+03\l  %1111 = select i1 %1110, double 0.000000e+00, double %1109\l  %1112 = tail call double @llvm.fma.f64(double %1111, double %1089, double\l... %1111)\l  %1113 = tail call double @llvm.fabs.f64(double %1111) #3\l  %1114 = fcmp oeq double %1113, 0x7FF0000000000000\l  %1115 = select i1 %1114, double %1111, double %1112\l  %1116 = tail call double @llvm.fabs.f64(double %1115)\l  %1117 = fcmp oeq double %958, 0x7FF0000000000000\l  %1118 = fcmp oeq double %957, 0.000000e+00\l  %1119 = select i1 %1117, double 0x7FF0000000000000, double %1116\l  %1120 = select i1 %1118, double 0.000000e+00, double %1119\l  %1121 = fcmp uno double %957, 0.000000e+00\l  %1122 = select i1 %1121, double 0x7FF8000000000000, double %1120\l  %1123 = fadd contract double %1122, %953\l  %1124 = fcmp olt double %1123, 0x1000000000000000\l  %1125 = select i1 %1124, double 0x4FF0000000000000, double 1.000000e+00\l  %1126 = fmul double %1123, %1125\l  %1127 = tail call double @llvm.amdgcn.rsq.f64(double %1126)\l  %1128 = fmul double %1126, %1127\l  %1129 = fmul double %1127, 5.000000e-01\l  %1130 = fneg double %1129\l  %1131 = tail call double @llvm.fma.f64(double %1130, double %1128, double\l... 5.000000e-01)\l  %1132 = tail call double @llvm.fma.f64(double %1129, double %1131, double\l... %1129)\l  %1133 = tail call double @llvm.fma.f64(double %1128, double %1131, double\l... %1128)\l  %1134 = fneg double %1133\l  %1135 = tail call double @llvm.fma.f64(double %1134, double %1133, double\l... %1126)\l  %1136 = tail call double @llvm.fma.f64(double %1135, double %1132, double\l... %1133)\l  %1137 = fneg double %1136\l  %1138 = tail call double @llvm.fma.f64(double %1137, double %1136, double\l... %1126)\l  %1139 = tail call double @llvm.fma.f64(double %1138, double %1132, double\l... %1136)\l  %1140 = select i1 %1124, double 0x37F0000000000000, double 1.000000e+00\l  %1141 = fmul double %1140, %1139\l  %1142 = fcmp oeq double %1126, 0.000000e+00\l  %1143 = fcmp oeq double %1126, 0x7FF0000000000000\l  %1144 = or i1 %1142, %1143\l  %1145 = select i1 %1144, double %1126, double %1141\l  %1146 = fmul contract double %453, %592\l  %1147 = fmul contract double %174, %314\l  %1148 = fmul contract double %1147, %775\l  %1149 = fadd contract double %1146, %1148\l  %1150 = fdiv contract double %1145, %1149\l  %1151 = tail call double @llvm.fabs.f64(double %1150)\l  %1152 = fcmp ogt double %1151, 1.000000e+00\l  %1153 = fdiv double 1.000000e+00, %1151\l  %1154 = select i1 %1152, double %1153, double %1151\l  %1155 = fmul double %1154, %1154\l  %1156 = tail call double @llvm.fma.f64(double %1155, double\l... 0x3EEBA404B5E68A13, double 0xBF23E260BD3237F4)\l  %1157 = tail call double @llvm.fma.f64(double %1155, double %1156, double\l... 0x3F4B2BB069EFB384)\l  %1158 = tail call double @llvm.fma.f64(double %1155, double %1157, double\l... 0xBF67952DAF56DE9B)\l  %1159 = tail call double @llvm.fma.f64(double %1155, double %1158, double\l... 0x3F7D6D43A595C56F)\l  %1160 = tail call double @llvm.fma.f64(double %1155, double %1159, double\l... 0xBF8C6EA4A57D9582)\l  %1161 = tail call double @llvm.fma.f64(double %1155, double %1160, double\l... 0x3F967E295F08B19F)\l  %1162 = tail call double @llvm.fma.f64(double %1155, double %1161, double\l... 0xBF9E9AE6FC27006A)\l  %1163 = tail call double @llvm.fma.f64(double %1155, double %1162, double\l... 0x3FA2C15B5711927A)\l  %1164 = tail call double @llvm.fma.f64(double %1155, double %1163, double\l... 0xBFA59976E82D3FF0)\l  %1165 = tail call double @llvm.fma.f64(double %1155, double %1164, double\l... 0x3FA82D5D6EF28734)\l  %1166 = tail call double @llvm.fma.f64(double %1155, double %1165, double\l... 0xBFAAE5CE6A214619)\l  %1167 = tail call double @llvm.fma.f64(double %1155, double %1166, double\l... 0x3FAE1BB48427B883)\l  %1168 = tail call double @llvm.fma.f64(double %1155, double %1167, double\l... 0xBFB110E48B207F05)\l  %1169 = tail call double @llvm.fma.f64(double %1155, double %1168, double\l... 0x3FB3B13657B87036)\l  %1170 = tail call double @llvm.fma.f64(double %1155, double %1169, double\l... 0xBFB745D119378E4F)\l  %1171 = tail call double @llvm.fma.f64(double %1155, double %1170, double\l... 0x3FBC71C717E1913C)\l  %1172 = tail call double @llvm.fma.f64(double %1155, double %1171, double\l... 0xBFC2492492376B7D)\l  %1173 = tail call double @llvm.fma.f64(double %1155, double %1172, double\l... 0x3FC99999999952CC)\l  %1174 = tail call double @llvm.fma.f64(double %1155, double %1173, double\l... 0xBFD5555555555523)\l  %1175 = fmul double %1155, %1174\l  %1176 = tail call double @llvm.fma.f64(double %1154, double %1175, double\l... %1154)\l  %1177 = fneg double %1176\l  %1178 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %1177)\l  %1179 = select i1 %1152, double %1178, double %1176\l  %1180 = tail call double @llvm.copysign.f64(double %1179, double %1150)\l  %1181 = fmul contract double %1180, 0x41584F6EC0000000\l  %1182 = getelementptr inbounds double, double addrspace(1)* %2, i64 %15\l  store double %1181, double addrspace(1)* %1182, align 8, !tbaa !10\l  br i1 %1118, label %1183, label %1188\l|{<s0>T|<s1>F}}"];
	Node0x4707010:s0 -> Node0x4723c50;
	Node0x4707010:s1 -> Node0x4723ce0;
	Node0x4723c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%1183:\l1183:                                             \l  %1184 = fcmp contract ogt double %788, 0.000000e+00\l  br i1 %1184, label %1226, label %1185\l|{<s0>T|<s1>F}}"];
	Node0x4723c50:s0 -> Node0x4723eb0;
	Node0x4723c50:s1 -> Node0x4723f00;
	Node0x4723f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%1185:\l1185:                                             \l  %1186 = fcmp contract olt double %788, 0.000000e+00\l  %1187 = select i1 %1186, double 9.000000e+01, double 0.000000e+00\l  br label %1226\l}"];
	Node0x4723f00 -> Node0x4723eb0;
	Node0x4723ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%1188:\l1188:                                             \l  %1189 = fneg contract double %788\l  %1190 = fdiv contract double %1189, %957\l  %1191 = tail call double @llvm.fabs.f64(double %1190)\l  %1192 = fcmp ogt double %1191, 1.000000e+00\l  %1193 = fdiv double 1.000000e+00, %1191\l  %1194 = select i1 %1192, double %1193, double %1191\l  %1195 = fmul double %1194, %1194\l  %1196 = tail call double @llvm.fma.f64(double %1195, double\l... 0x3EEBA404B5E68A13, double 0xBF23E260BD3237F4)\l  %1197 = tail call double @llvm.fma.f64(double %1195, double %1196, double\l... 0x3F4B2BB069EFB384)\l  %1198 = tail call double @llvm.fma.f64(double %1195, double %1197, double\l... 0xBF67952DAF56DE9B)\l  %1199 = tail call double @llvm.fma.f64(double %1195, double %1198, double\l... 0x3F7D6D43A595C56F)\l  %1200 = tail call double @llvm.fma.f64(double %1195, double %1199, double\l... 0xBF8C6EA4A57D9582)\l  %1201 = tail call double @llvm.fma.f64(double %1195, double %1200, double\l... 0x3F967E295F08B19F)\l  %1202 = tail call double @llvm.fma.f64(double %1195, double %1201, double\l... 0xBF9E9AE6FC27006A)\l  %1203 = tail call double @llvm.fma.f64(double %1195, double %1202, double\l... 0x3FA2C15B5711927A)\l  %1204 = tail call double @llvm.fma.f64(double %1195, double %1203, double\l... 0xBFA59976E82D3FF0)\l  %1205 = tail call double @llvm.fma.f64(double %1195, double %1204, double\l... 0x3FA82D5D6EF28734)\l  %1206 = tail call double @llvm.fma.f64(double %1195, double %1205, double\l... 0xBFAAE5CE6A214619)\l  %1207 = tail call double @llvm.fma.f64(double %1195, double %1206, double\l... 0x3FAE1BB48427B883)\l  %1208 = tail call double @llvm.fma.f64(double %1195, double %1207, double\l... 0xBFB110E48B207F05)\l  %1209 = tail call double @llvm.fma.f64(double %1195, double %1208, double\l... 0x3FB3B13657B87036)\l  %1210 = tail call double @llvm.fma.f64(double %1195, double %1209, double\l... 0xBFB745D119378E4F)\l  %1211 = tail call double @llvm.fma.f64(double %1195, double %1210, double\l... 0x3FBC71C717E1913C)\l  %1212 = tail call double @llvm.fma.f64(double %1195, double %1211, double\l... 0xBFC2492492376B7D)\l  %1213 = tail call double @llvm.fma.f64(double %1195, double %1212, double\l... 0x3FC99999999952CC)\l  %1214 = tail call double @llvm.fma.f64(double %1195, double %1213, double\l... 0xBFD5555555555523)\l  %1215 = fmul double %1195, %1214\l  %1216 = tail call double @llvm.fma.f64(double %1194, double %1215, double\l... %1194)\l  %1217 = fneg double %1216\l  %1218 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %1217)\l  %1219 = select i1 %1192, double %1218, double %1216\l  %1220 = tail call double @llvm.copysign.f64(double %1219, double %1190)\l  %1221 = fmul contract double %1220, 1.800000e+02\l  %1222 = fdiv contract double %1221, 0x400921FB54442D18\l  %1223 = fcmp contract olt double %957, 0.000000e+00\l  %1224 = fadd contract double %1222, 1.800000e+02\l  %1225 = select i1 %1223, double %1224, double %1222\l  br label %1226\l}"];
	Node0x4723ce0 -> Node0x4723eb0;
	Node0x4723eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%1226:\l1226:                                             \l  %1227 = phi double [ -9.000000e+01, %1183 ], [ %1187, %1185 ], [ %1225,\l... %1188 ]\l  %1228 = fadd contract double %1227, 1.800000e+02\l  %1229 = fcmp contract ult double %1228, 3.600000e+02\l  br i1 %1229, label %1234, label %1230\l|{<s0>T|<s1>F}}"];
	Node0x4723eb0:s0 -> Node0x4726780;
	Node0x4723eb0:s1 -> Node0x4726810;
	Node0x4726810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1230:\l1230:                                             \l  %1231 = phi double [ %1232, %1230 ], [ %1228, %1226 ]\l  %1232 = fadd contract double %1231, -3.600000e+02\l  %1233 = fcmp contract ult double %1232, 3.600000e+02\l  br i1 %1233, label %1234, label %1230, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4726810:s0 -> Node0x4726780;
	Node0x4726810:s1 -> Node0x4726810;
	Node0x4726780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%1234:\l1234:                                             \l  %1235 = phi double [ %1228, %1226 ], [ %1232, %1230 ]\l  %1236 = fadd contract double %1235, -1.800000e+02\l  %1237 = fmul contract double %1236, 0xC00921FB54442D18\l  %1238 = fdiv contract double %1237, 1.800000e+02\l  %1239 = fdiv contract double %1238, 0x401921FB54442D18\l  %1240 = tail call double @llvm.floor.f64(double %1239)\l  %1241 = fmul contract double %1240, 0x401921FB54442D18\l  %1242 = fsub contract double %1238, %1241\l  %1243 = fmul contract double %1242, 1.800000e+02\l  %1244 = fdiv contract double %1243, 0x400921FB54442D18\l  %1245 = getelementptr inbounds double, double addrspace(1)* %3, i64 %15\l  store double %1244, double addrspace(1)* %1245, align 8, !tbaa !10\l  br label %1246\l}"];
	Node0x4726780 -> Node0x46e5d40;
	Node0x46e5d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%1246:\l1246:                                             \l  ret void\l}"];
}
