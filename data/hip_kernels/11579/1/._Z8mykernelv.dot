digraph "CFG for '_Z8mykernelv' function" {
	label="CFG for '_Z8mykernelv' function";

	Node0x598c270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %2 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %3 = getelementptr inbounds i8, i8 addrspace(4)* %2, i64 24\l  %4 = bitcast i8 addrspace(4)* %3 to i64 addrspace(4)*\l  %5 = load i64, i64 addrspace(4)* %4, align 8, !tbaa !4\l  %6 = inttoptr i64 %5 to i8 addrspace(1)*\l  %7 = addrspacecast i8 addrspace(1)* %6 to i8*\l  %8 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %9 = extractelement \<2 x i64\> %8, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([14 x i8], [14 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %10, label %14\l|{<s0>T|<s1>F}}"];
	Node0x598c270:s0 -> Node0x598ce10;
	Node0x598c270:s1 -> Node0x598edd0;
	Node0x598ce10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%10:\l10:                                               \l  %11 = and i64 %9, -225\l  %12 = or i64 %11, 32\l  %13 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %12, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %455\l}"];
	Node0x598ce10 -> Node0x598f080;
	Node0x598edd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%14:\l14:                                               \l  %15 = and i64 %9, 2\l  %16 = and i64 %9, -3\l  %17 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %16, i64 0\l  br label %18\l}"];
	Node0x598edd0 -> Node0x598fcd0;
	Node0x598fcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%18:\l18:                                               \l  %19 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([14 x i8], [14 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([14 x i8], [14 x i8] addrspace(4)*\l... @.str, i64 0, i64 13) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([14 x i8]* addrspacecast ([14 x i8] addrspace(4)* @.str to [14 x i8]*) to\l... i64)), i64 1))), %14 ], [ %452, %444 ]\l  %20 = phi i8 addrspace(4)* [ getelementptr inbounds ([14 x i8], [14 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %14 ], [ %453, %444 ]\l  %21 = phi \<2 x i64\> [ %17, %14 ], [ %451, %444 ]\l  %22 = icmp ugt i64 %19, 56\l  %23 = extractelement \<2 x i64\> %21, i64 0\l  %24 = or i64 %23, %15\l  %25 = insertelement \<2 x i64\> poison, i64 %24, i64 0\l  %26 = select i1 %22, \<2 x i64\> %21, \<2 x i64\> %25\l  %27 = tail call i64 @llvm.umin.i64(i64 %19, i64 56)\l  %28 = trunc i64 %27 to i32\l  %29 = extractelement \<2 x i64\> %26, i64 0\l  %30 = icmp ugt i32 %28, 7\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x598fcd0:s0 -> Node0x5990c10;
	Node0x598fcd0:s1 -> Node0x5990ca0;
	Node0x5990ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %28, 0\l  br i1 %32, label %86, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5990ca0:s0 -> Node0x598f4f0;
	Node0x5990ca0:s1 -> Node0x598f540;
	Node0x5990c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%33:\l33:                                               \l  %34 = load i8, i8 addrspace(4)* %20, align 1, !tbaa !8\l  %35 = zext i8 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 1\l  %37 = load i8, i8 addrspace(4)* %36, align 1, !tbaa !8\l  %38 = zext i8 %37 to i64\l  %39 = shl nuw nsw i64 %38, 8\l  %40 = or i64 %39, %35\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 2\l  %42 = load i8, i8 addrspace(4)* %41, align 1, !tbaa !8\l  %43 = zext i8 %42 to i64\l  %44 = shl nuw nsw i64 %43, 16\l  %45 = or i64 %40, %44\l  %46 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 3\l  %47 = load i8, i8 addrspace(4)* %46, align 1, !tbaa !8\l  %48 = zext i8 %47 to i64\l  %49 = shl nuw nsw i64 %48, 24\l  %50 = or i64 %45, %49\l  %51 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 4\l  %52 = load i8, i8 addrspace(4)* %51, align 1, !tbaa !8\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 32\l  %55 = or i64 %50, %54\l  %56 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 5\l  %57 = load i8, i8 addrspace(4)* %56, align 1, !tbaa !8\l  %58 = zext i8 %57 to i64\l  %59 = shl nuw nsw i64 %58, 40\l  %60 = or i64 %55, %59\l  %61 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 6\l  %62 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !8\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 48\l  %65 = or i64 %60, %64\l  %66 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 7\l  %67 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !8\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw i64 %68, 56\l  %70 = or i64 %65, %69\l  %71 = add nsw i32 %28, -8\l  %72 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 8\l  br label %86\l}"];
	Node0x5990c10 -> Node0x598f4f0;
	Node0x598f540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ %84, %73 ], [ 0, %31 ]\l  %75 = phi i64 [ %83, %73 ], [ 0, %31 ]\l  %76 = zext i32 %74 to i64\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 %76\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !8\l  %79 = zext i8 %78 to i64\l  %80 = shl i32 %74, 3\l  %81 = zext i32 %80 to i64\l  %82 = shl nuw i64 %79, %81\l  %83 = or i64 %82, %75\l  %84 = add nuw nsw i32 %74, 1\l  %85 = icmp eq i32 %84, %28\l  br i1 %85, label %86, label %73, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x598f540:s0 -> Node0x598f4f0;
	Node0x598f540:s1 -> Node0x598f540;
	Node0x598f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%86:\l86:                                               \l  %87 = phi i8 addrspace(4)* [ %72, %33 ], [ %20, %31 ], [ %20, %73 ]\l  %88 = phi i32 [ %71, %33 ], [ 0, %31 ], [ 0, %73 ]\l  %89 = phi i64 [ %70, %33 ], [ 0, %31 ], [ %83, %73 ]\l  %90 = icmp ugt i32 %88, 7\l  br i1 %90, label %93, label %91\l|{<s0>T|<s1>F}}"];
	Node0x598f4f0:s0 -> Node0x5993cd0;
	Node0x598f4f0:s1 -> Node0x5993d20;
	Node0x5993d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%91:\l91:                                               \l  %92 = icmp eq i32 %88, 0\l  br i1 %92, label %146, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5993d20:s0 -> Node0x5993ef0;
	Node0x5993d20:s1 -> Node0x5993f40;
	Node0x5993cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%93:\l93:                                               \l  %94 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !8\l  %95 = zext i8 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 1\l  %97 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !8\l  %98 = zext i8 %97 to i64\l  %99 = shl nuw nsw i64 %98, 8\l  %100 = or i64 %99, %95\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 2\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !8\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 16\l  %105 = or i64 %100, %104\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 3\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !8\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 24\l  %110 = or i64 %105, %109\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 4\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !8\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw nsw i64 %113, 32\l  %115 = or i64 %110, %114\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 5\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !8\l  %118 = zext i8 %117 to i64\l  %119 = shl nuw nsw i64 %118, 40\l  %120 = or i64 %115, %119\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 6\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !8\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw nsw i64 %123, 48\l  %125 = or i64 %120, %124\l  %126 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 7\l  %127 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !8\l  %128 = zext i8 %127 to i64\l  %129 = shl nuw i64 %128, 56\l  %130 = or i64 %125, %129\l  %131 = add nsw i32 %88, -8\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 8\l  br label %146\l}"];
	Node0x5993cd0 -> Node0x5993ef0;
	Node0x5993f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi i32 [ %144, %133 ], [ 0, %91 ]\l  %135 = phi i64 [ %143, %133 ], [ 0, %91 ]\l  %136 = zext i32 %134 to i64\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %87, i64 %136\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !8\l  %139 = zext i8 %138 to i64\l  %140 = shl i32 %134, 3\l  %141 = zext i32 %140 to i64\l  %142 = shl nuw i64 %139, %141\l  %143 = or i64 %142, %135\l  %144 = add nuw nsw i32 %134, 1\l  %145 = icmp eq i32 %144, %88\l  br i1 %145, label %146, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5993f40:s0 -> Node0x5993ef0;
	Node0x5993f40:s1 -> Node0x5993f40;
	Node0x5993ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%146:\l146:                                              \l  %147 = phi i8 addrspace(4)* [ %132, %93 ], [ %87, %91 ], [ %87, %133 ]\l  %148 = phi i32 [ %131, %93 ], [ 0, %91 ], [ 0, %133 ]\l  %149 = phi i64 [ %130, %93 ], [ 0, %91 ], [ %143, %133 ]\l  %150 = icmp ugt i32 %148, 7\l  br i1 %150, label %153, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5993ef0:s0 -> Node0x5996420;
	Node0x5993ef0:s1 -> Node0x5996470;
	Node0x5996470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%151:\l151:                                              \l  %152 = icmp eq i32 %148, 0\l  br i1 %152, label %206, label %193\l|{<s0>T|<s1>F}}"];
	Node0x5996470:s0 -> Node0x5996600;
	Node0x5996470:s1 -> Node0x5996650;
	Node0x5996420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%153:\l153:                                              \l  %154 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !8\l  %155 = zext i8 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 1\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !8\l  %158 = zext i8 %157 to i64\l  %159 = shl nuw nsw i64 %158, 8\l  %160 = or i64 %159, %155\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 2\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !8\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 16\l  %165 = or i64 %160, %164\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 3\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !8\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 24\l  %170 = or i64 %165, %169\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 4\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !8\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw nsw i64 %173, 32\l  %175 = or i64 %170, %174\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 5\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !8\l  %178 = zext i8 %177 to i64\l  %179 = shl nuw nsw i64 %178, 40\l  %180 = or i64 %175, %179\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 6\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !8\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw nsw i64 %183, 48\l  %185 = or i64 %180, %184\l  %186 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 7\l  %187 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !8\l  %188 = zext i8 %187 to i64\l  %189 = shl nuw i64 %188, 56\l  %190 = or i64 %185, %189\l  %191 = add nsw i32 %148, -8\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 8\l  br label %206\l}"];
	Node0x5996420 -> Node0x5996600;
	Node0x5996650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%193:\l193:                                              \l  %194 = phi i32 [ %204, %193 ], [ 0, %151 ]\l  %195 = phi i64 [ %203, %193 ], [ 0, %151 ]\l  %196 = zext i32 %194 to i64\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %147, i64 %196\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !8\l  %199 = zext i8 %198 to i64\l  %200 = shl i32 %194, 3\l  %201 = zext i32 %200 to i64\l  %202 = shl nuw i64 %199, %201\l  %203 = or i64 %202, %195\l  %204 = add nuw nsw i32 %194, 1\l  %205 = icmp eq i32 %204, %148\l  br i1 %205, label %206, label %193\l|{<s0>T|<s1>F}}"];
	Node0x5996650:s0 -> Node0x5996600;
	Node0x5996650:s1 -> Node0x5996650;
	Node0x5996600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%206:\l206:                                              \l  %207 = phi i8 addrspace(4)* [ %192, %153 ], [ %147, %151 ], [ %147, %193 ]\l  %208 = phi i32 [ %191, %153 ], [ 0, %151 ], [ 0, %193 ]\l  %209 = phi i64 [ %190, %153 ], [ 0, %151 ], [ %203, %193 ]\l  %210 = icmp ugt i32 %208, 7\l  br i1 %210, label %213, label %211\l|{<s0>T|<s1>F}}"];
	Node0x5996600:s0 -> Node0x5998670;
	Node0x5996600:s1 -> Node0x59986c0;
	Node0x59986c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%211:\l211:                                              \l  %212 = icmp eq i32 %208, 0\l  br i1 %212, label %266, label %253\l|{<s0>T|<s1>F}}"];
	Node0x59986c0:s0 -> Node0x5998850;
	Node0x59986c0:s1 -> Node0x59988a0;
	Node0x5998670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%213:\l213:                                              \l  %214 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !8\l  %215 = zext i8 %214 to i64\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 1\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !8\l  %218 = zext i8 %217 to i64\l  %219 = shl nuw nsw i64 %218, 8\l  %220 = or i64 %219, %215\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 2\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !8\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 16\l  %225 = or i64 %220, %224\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 3\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !8\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 24\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 4\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !8\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 32\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 5\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !8\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 40\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 6\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !8\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 48\l  %245 = or i64 %240, %244\l  %246 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 7\l  %247 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !8\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw i64 %248, 56\l  %250 = or i64 %245, %249\l  %251 = add nsw i32 %208, -8\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 8\l  br label %266\l}"];
	Node0x5998670 -> Node0x5998850;
	Node0x59988a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%253:\l253:                                              \l  %254 = phi i32 [ %264, %253 ], [ 0, %211 ]\l  %255 = phi i64 [ %263, %253 ], [ 0, %211 ]\l  %256 = zext i32 %254 to i64\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %207, i64 %256\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !8\l  %259 = zext i8 %258 to i64\l  %260 = shl i32 %254, 3\l  %261 = zext i32 %260 to i64\l  %262 = shl nuw i64 %259, %261\l  %263 = or i64 %262, %255\l  %264 = add nuw nsw i32 %254, 1\l  %265 = icmp eq i32 %264, %208\l  br i1 %265, label %266, label %253\l|{<s0>T|<s1>F}}"];
	Node0x59988a0:s0 -> Node0x5998850;
	Node0x59988a0:s1 -> Node0x59988a0;
	Node0x5998850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%266:\l266:                                              \l  %267 = phi i8 addrspace(4)* [ %252, %213 ], [ %207, %211 ], [ %207, %253 ]\l  %268 = phi i32 [ %251, %213 ], [ 0, %211 ], [ 0, %253 ]\l  %269 = phi i64 [ %250, %213 ], [ 0, %211 ], [ %263, %253 ]\l  %270 = icmp ugt i32 %268, 7\l  br i1 %270, label %273, label %271\l|{<s0>T|<s1>F}}"];
	Node0x5998850:s0 -> Node0x599b0f0;
	Node0x5998850:s1 -> Node0x599b140;
	Node0x599b140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%271:\l271:                                              \l  %272 = icmp eq i32 %268, 0\l  br i1 %272, label %326, label %313\l|{<s0>T|<s1>F}}"];
	Node0x599b140:s0 -> Node0x599b2d0;
	Node0x599b140:s1 -> Node0x599b320;
	Node0x599b0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%273:\l273:                                              \l  %274 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !8\l  %275 = zext i8 %274 to i64\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 1\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !8\l  %278 = zext i8 %277 to i64\l  %279 = shl nuw nsw i64 %278, 8\l  %280 = or i64 %279, %275\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 2\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !8\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 16\l  %285 = or i64 %280, %284\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 3\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !8\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 24\l  %290 = or i64 %285, %289\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 4\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !8\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw nsw i64 %293, 32\l  %295 = or i64 %290, %294\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 5\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !8\l  %298 = zext i8 %297 to i64\l  %299 = shl nuw nsw i64 %298, 40\l  %300 = or i64 %295, %299\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 6\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !8\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw nsw i64 %303, 48\l  %305 = or i64 %300, %304\l  %306 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 7\l  %307 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !8\l  %308 = zext i8 %307 to i64\l  %309 = shl nuw i64 %308, 56\l  %310 = or i64 %305, %309\l  %311 = add nsw i32 %268, -8\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 8\l  br label %326\l}"];
	Node0x599b0f0 -> Node0x599b2d0;
	Node0x599b320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%313:\l313:                                              \l  %314 = phi i32 [ %324, %313 ], [ 0, %271 ]\l  %315 = phi i64 [ %323, %313 ], [ 0, %271 ]\l  %316 = zext i32 %314 to i64\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %267, i64 %316\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !8\l  %319 = zext i8 %318 to i64\l  %320 = shl i32 %314, 3\l  %321 = zext i32 %320 to i64\l  %322 = shl nuw i64 %319, %321\l  %323 = or i64 %322, %315\l  %324 = add nuw nsw i32 %314, 1\l  %325 = icmp eq i32 %324, %268\l  br i1 %325, label %326, label %313\l|{<s0>T|<s1>F}}"];
	Node0x599b320:s0 -> Node0x599b2d0;
	Node0x599b320:s1 -> Node0x599b320;
	Node0x599b2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%326:\l326:                                              \l  %327 = phi i8 addrspace(4)* [ %312, %273 ], [ %267, %271 ], [ %267, %313 ]\l  %328 = phi i32 [ %311, %273 ], [ 0, %271 ], [ 0, %313 ]\l  %329 = phi i64 [ %310, %273 ], [ 0, %271 ], [ %323, %313 ]\l  %330 = icmp ugt i32 %328, 7\l  br i1 %330, label %333, label %331\l|{<s0>T|<s1>F}}"];
	Node0x599b2d0:s0 -> Node0x599d340;
	Node0x599b2d0:s1 -> Node0x599d390;
	Node0x599d390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%331:\l331:                                              \l  %332 = icmp eq i32 %328, 0\l  br i1 %332, label %386, label %373\l|{<s0>T|<s1>F}}"];
	Node0x599d390:s0 -> Node0x599d520;
	Node0x599d390:s1 -> Node0x599d570;
	Node0x599d340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%333:\l333:                                              \l  %334 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !8\l  %335 = zext i8 %334 to i64\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 1\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !8\l  %338 = zext i8 %337 to i64\l  %339 = shl nuw nsw i64 %338, 8\l  %340 = or i64 %339, %335\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 2\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !8\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 16\l  %345 = or i64 %340, %344\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 3\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !8\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 24\l  %350 = or i64 %345, %349\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 4\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !8\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw nsw i64 %353, 32\l  %355 = or i64 %350, %354\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 5\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !8\l  %358 = zext i8 %357 to i64\l  %359 = shl nuw nsw i64 %358, 40\l  %360 = or i64 %355, %359\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 6\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !8\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw nsw i64 %363, 48\l  %365 = or i64 %360, %364\l  %366 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 7\l  %367 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !8\l  %368 = zext i8 %367 to i64\l  %369 = shl nuw i64 %368, 56\l  %370 = or i64 %365, %369\l  %371 = add nsw i32 %328, -8\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 8\l  br label %386\l}"];
	Node0x599d340 -> Node0x599d520;
	Node0x599d570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%373:\l373:                                              \l  %374 = phi i32 [ %384, %373 ], [ 0, %331 ]\l  %375 = phi i64 [ %383, %373 ], [ 0, %331 ]\l  %376 = zext i32 %374 to i64\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %327, i64 %376\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !8\l  %379 = zext i8 %378 to i64\l  %380 = shl i32 %374, 3\l  %381 = zext i32 %380 to i64\l  %382 = shl nuw i64 %379, %381\l  %383 = or i64 %382, %375\l  %384 = add nuw nsw i32 %374, 1\l  %385 = icmp eq i32 %384, %328\l  br i1 %385, label %386, label %373\l|{<s0>T|<s1>F}}"];
	Node0x599d570:s0 -> Node0x599d520;
	Node0x599d570:s1 -> Node0x599d570;
	Node0x599d520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%386:\l386:                                              \l  %387 = phi i8 addrspace(4)* [ %372, %333 ], [ %327, %331 ], [ %327, %373 ]\l  %388 = phi i32 [ %371, %333 ], [ 0, %331 ], [ 0, %373 ]\l  %389 = phi i64 [ %370, %333 ], [ 0, %331 ], [ %383, %373 ]\l  %390 = icmp ugt i32 %388, 7\l  br i1 %390, label %393, label %391\l|{<s0>T|<s1>F}}"];
	Node0x599d520:s0 -> Node0x59a05c0;
	Node0x599d520:s1 -> Node0x59a0610;
	Node0x59a0610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%391:\l391:                                              \l  %392 = icmp eq i32 %388, 0\l  br i1 %392, label %444, label %431\l|{<s0>T|<s1>F}}"];
	Node0x59a0610:s0 -> Node0x5990140;
	Node0x59a0610:s1 -> Node0x59a07a0;
	Node0x59a05c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%393:\l393:                                              \l  %394 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !8\l  %395 = zext i8 %394 to i64\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 1\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !8\l  %398 = zext i8 %397 to i64\l  %399 = shl nuw nsw i64 %398, 8\l  %400 = or i64 %399, %395\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 2\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !8\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 16\l  %405 = or i64 %400, %404\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 3\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !8\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 24\l  %410 = or i64 %405, %409\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 4\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !8\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw nsw i64 %413, 32\l  %415 = or i64 %410, %414\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 5\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !8\l  %418 = zext i8 %417 to i64\l  %419 = shl nuw nsw i64 %418, 40\l  %420 = or i64 %415, %419\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 6\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !8\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw nsw i64 %423, 48\l  %425 = or i64 %420, %424\l  %426 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 7\l  %427 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !8\l  %428 = zext i8 %427 to i64\l  %429 = shl nuw i64 %428, 56\l  %430 = or i64 %425, %429\l  br label %444\l}"];
	Node0x59a05c0 -> Node0x5990140;
	Node0x59a07a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%431:\l431:                                              \l  %432 = phi i32 [ %442, %431 ], [ 0, %391 ]\l  %433 = phi i64 [ %441, %431 ], [ 0, %391 ]\l  %434 = zext i32 %432 to i64\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %387, i64 %434\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !8\l  %437 = zext i8 %436 to i64\l  %438 = shl i32 %432, 3\l  %439 = zext i32 %438 to i64\l  %440 = shl nuw i64 %437, %439\l  %441 = or i64 %440, %433\l  %442 = add nuw nsw i32 %432, 1\l  %443 = icmp eq i32 %442, %388\l  br i1 %443, label %444, label %431\l|{<s0>T|<s1>F}}"];
	Node0x59a07a0:s0 -> Node0x5990140;
	Node0x59a07a0:s1 -> Node0x59a07a0;
	Node0x5990140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%444:\l444:                                              \l  %445 = phi i64 [ %430, %393 ], [ 0, %391 ], [ %441, %431 ]\l  %446 = shl nuw nsw i64 %27, 2\l  %447 = add nuw nsw i64 %446, 28\l  %448 = and i64 %447, 480\l  %449 = and i64 %29, -225\l  %450 = or i64 %449, %448\l  %451 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %450, i64 noundef %89, i64 noundef %149, i64 noundef %209, i64\l... noundef %269, i64 noundef %329, i64 noundef %389, i64 noundef %445) #10\l  %452 = sub i64 %19, %27\l  %453 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 %27\l  %454 = icmp eq i64 %452, 0\l  br i1 %454, label %455, label %18\l|{<s0>T|<s1>F}}"];
	Node0x5990140:s0 -> Node0x598f080;
	Node0x5990140:s1 -> Node0x598fcd0;
	Node0x598f080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%455:\l455:                                              \l  %456 = phi \<2 x i64\> [ %13, %10 ], [ %451, %444 ]\l  %457 = extractelement \<2 x i64\> %456, i64 0\l  %458 = zext i32 %1 to i64\l  %459 = and i64 %457, -227\l  %460 = or i64 %459, 34\l  %461 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %460, i64 noundef %458, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %462 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !11\l  %463 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %464 = extractelement \<2 x i64\> %463, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([15 x i8], [15 x i8] addrspace(4)* @.str.1, i64 0, i64 0) to i8*), i8*\l... null), label %465, label %469\l|{<s0>T|<s1>F}}"];
	Node0x598f080:s0 -> Node0x59a3680;
	Node0x598f080:s1 -> Node0x59a36d0;
	Node0x59a3680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%465:\l465:                                              \l  %466 = and i64 %464, -225\l  %467 = or i64 %466, 32\l  %468 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %467, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %910\l}"];
	Node0x59a3680 -> Node0x59a3980;
	Node0x59a36d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%469:\l469:                                              \l  %470 = and i64 %464, 2\l  %471 = and i64 %464, -3\l  %472 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %471, i64 0\l  br label %473\l}"];
	Node0x59a36d0 -> Node0x59a3a40;
	Node0x59a3a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%473:\l473:                                              \l  %474 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)* @.str.1, i64 0,\l... i64 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast\l... (i8 addrspace(4)* getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)*\l... @.str.1, i64 0, i64 14) to i8*) to i64), i64 add (i64 sub (i64 0, i64\l... ptrtoint ([15 x i8]* addrspacecast ([15 x i8] addrspace(4)* @.str.1 to [15 x\l... i8]*) to i64)), i64 1))), %469 ], [ %907, %899 ]\l  %475 = phi i8 addrspace(4)* [ getelementptr inbounds ([15 x i8], [15 x i8]\l... addrspace(4)* @.str.1, i64 0, i64 0), %469 ], [ %908, %899 ]\l  %476 = phi \<2 x i64\> [ %472, %469 ], [ %906, %899 ]\l  %477 = icmp ugt i64 %474, 56\l  %478 = extractelement \<2 x i64\> %476, i64 0\l  %479 = or i64 %478, %470\l  %480 = insertelement \<2 x i64\> poison, i64 %479, i64 0\l  %481 = select i1 %477, \<2 x i64\> %476, \<2 x i64\> %480\l  %482 = tail call i64 @llvm.umin.i64(i64 %474, i64 56)\l  %483 = trunc i64 %482 to i32\l  %484 = extractelement \<2 x i64\> %481, i64 0\l  %485 = icmp ugt i32 %483, 7\l  br i1 %485, label %488, label %486\l|{<s0>T|<s1>F}}"];
	Node0x59a3a40:s0 -> Node0x59a4ab0;
	Node0x59a3a40:s1 -> Node0x59a4b40;
	Node0x59a4b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%486:\l486:                                              \l  %487 = icmp eq i32 %483, 0\l  br i1 %487, label %541, label %528\l|{<s0>T|<s1>F}}"];
	Node0x59a4b40:s0 -> Node0x59a4d10;
	Node0x59a4b40:s1 -> Node0x59a4d60;
	Node0x59a4ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%488:\l488:                                              \l  %489 = load i8, i8 addrspace(4)* %475, align 1, !tbaa !8\l  %490 = zext i8 %489 to i64\l  %491 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 1\l  %492 = load i8, i8 addrspace(4)* %491, align 1, !tbaa !8\l  %493 = zext i8 %492 to i64\l  %494 = shl nuw nsw i64 %493, 8\l  %495 = or i64 %494, %490\l  %496 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 2\l  %497 = load i8, i8 addrspace(4)* %496, align 1, !tbaa !8\l  %498 = zext i8 %497 to i64\l  %499 = shl nuw nsw i64 %498, 16\l  %500 = or i64 %495, %499\l  %501 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 3\l  %502 = load i8, i8 addrspace(4)* %501, align 1, !tbaa !8\l  %503 = zext i8 %502 to i64\l  %504 = shl nuw nsw i64 %503, 24\l  %505 = or i64 %500, %504\l  %506 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 4\l  %507 = load i8, i8 addrspace(4)* %506, align 1, !tbaa !8\l  %508 = zext i8 %507 to i64\l  %509 = shl nuw nsw i64 %508, 32\l  %510 = or i64 %505, %509\l  %511 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 5\l  %512 = load i8, i8 addrspace(4)* %511, align 1, !tbaa !8\l  %513 = zext i8 %512 to i64\l  %514 = shl nuw nsw i64 %513, 40\l  %515 = or i64 %510, %514\l  %516 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 6\l  %517 = load i8, i8 addrspace(4)* %516, align 1, !tbaa !8\l  %518 = zext i8 %517 to i64\l  %519 = shl nuw nsw i64 %518, 48\l  %520 = or i64 %515, %519\l  %521 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 7\l  %522 = load i8, i8 addrspace(4)* %521, align 1, !tbaa !8\l  %523 = zext i8 %522 to i64\l  %524 = shl nuw i64 %523, 56\l  %525 = or i64 %520, %524\l  %526 = add nsw i32 %483, -8\l  %527 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 8\l  br label %541\l}"];
	Node0x59a4ab0 -> Node0x59a4d10;
	Node0x59a4d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%528:\l528:                                              \l  %529 = phi i32 [ %539, %528 ], [ 0, %486 ]\l  %530 = phi i64 [ %538, %528 ], [ 0, %486 ]\l  %531 = zext i32 %529 to i64\l  %532 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 %531\l  %533 = load i8, i8 addrspace(4)* %532, align 1, !tbaa !8\l  %534 = zext i8 %533 to i64\l  %535 = shl i32 %529, 3\l  %536 = zext i32 %535 to i64\l  %537 = shl nuw i64 %534, %536\l  %538 = or i64 %537, %530\l  %539 = add nuw nsw i32 %529, 1\l  %540 = icmp eq i32 %539, %483\l  br i1 %540, label %541, label %528, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x59a4d60:s0 -> Node0x59a4d10;
	Node0x59a4d60:s1 -> Node0x59a4d60;
	Node0x59a4d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%541:\l541:                                              \l  %542 = phi i8 addrspace(4)* [ %527, %488 ], [ %475, %486 ], [ %475, %528 ]\l  %543 = phi i32 [ %526, %488 ], [ 0, %486 ], [ 0, %528 ]\l  %544 = phi i64 [ %525, %488 ], [ 0, %486 ], [ %538, %528 ]\l  %545 = icmp ugt i32 %543, 7\l  br i1 %545, label %548, label %546\l|{<s0>T|<s1>F}}"];
	Node0x59a4d10:s0 -> Node0x59a8840;
	Node0x59a4d10:s1 -> Node0x59a8890;
	Node0x59a8890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%546:\l546:                                              \l  %547 = icmp eq i32 %543, 0\l  br i1 %547, label %601, label %588\l|{<s0>T|<s1>F}}"];
	Node0x59a8890:s0 -> Node0x59a8a20;
	Node0x59a8890:s1 -> Node0x59a8a70;
	Node0x59a8840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%548:\l548:                                              \l  %549 = load i8, i8 addrspace(4)* %542, align 1, !tbaa !8\l  %550 = zext i8 %549 to i64\l  %551 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 1\l  %552 = load i8, i8 addrspace(4)* %551, align 1, !tbaa !8\l  %553 = zext i8 %552 to i64\l  %554 = shl nuw nsw i64 %553, 8\l  %555 = or i64 %554, %550\l  %556 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 2\l  %557 = load i8, i8 addrspace(4)* %556, align 1, !tbaa !8\l  %558 = zext i8 %557 to i64\l  %559 = shl nuw nsw i64 %558, 16\l  %560 = or i64 %555, %559\l  %561 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 3\l  %562 = load i8, i8 addrspace(4)* %561, align 1, !tbaa !8\l  %563 = zext i8 %562 to i64\l  %564 = shl nuw nsw i64 %563, 24\l  %565 = or i64 %560, %564\l  %566 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 4\l  %567 = load i8, i8 addrspace(4)* %566, align 1, !tbaa !8\l  %568 = zext i8 %567 to i64\l  %569 = shl nuw nsw i64 %568, 32\l  %570 = or i64 %565, %569\l  %571 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 5\l  %572 = load i8, i8 addrspace(4)* %571, align 1, !tbaa !8\l  %573 = zext i8 %572 to i64\l  %574 = shl nuw nsw i64 %573, 40\l  %575 = or i64 %570, %574\l  %576 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 6\l  %577 = load i8, i8 addrspace(4)* %576, align 1, !tbaa !8\l  %578 = zext i8 %577 to i64\l  %579 = shl nuw nsw i64 %578, 48\l  %580 = or i64 %575, %579\l  %581 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 7\l  %582 = load i8, i8 addrspace(4)* %581, align 1, !tbaa !8\l  %583 = zext i8 %582 to i64\l  %584 = shl nuw i64 %583, 56\l  %585 = or i64 %580, %584\l  %586 = add nsw i32 %543, -8\l  %587 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 8\l  br label %601\l}"];
	Node0x59a8840 -> Node0x59a8a20;
	Node0x59a8a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%588:\l588:                                              \l  %589 = phi i32 [ %599, %588 ], [ 0, %546 ]\l  %590 = phi i64 [ %598, %588 ], [ 0, %546 ]\l  %591 = zext i32 %589 to i64\l  %592 = getelementptr inbounds i8, i8 addrspace(4)* %542, i64 %591\l  %593 = load i8, i8 addrspace(4)* %592, align 1, !tbaa !8\l  %594 = zext i8 %593 to i64\l  %595 = shl i32 %589, 3\l  %596 = zext i32 %595 to i64\l  %597 = shl nuw i64 %594, %596\l  %598 = or i64 %597, %590\l  %599 = add nuw nsw i32 %589, 1\l  %600 = icmp eq i32 %599, %543\l  br i1 %600, label %601, label %588\l|{<s0>T|<s1>F}}"];
	Node0x59a8a70:s0 -> Node0x59a8a20;
	Node0x59a8a70:s1 -> Node0x59a8a70;
	Node0x59a8a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%601:\l601:                                              \l  %602 = phi i8 addrspace(4)* [ %587, %548 ], [ %542, %546 ], [ %542, %588 ]\l  %603 = phi i32 [ %586, %548 ], [ 0, %546 ], [ 0, %588 ]\l  %604 = phi i64 [ %585, %548 ], [ 0, %546 ], [ %598, %588 ]\l  %605 = icmp ugt i32 %603, 7\l  br i1 %605, label %608, label %606\l|{<s0>T|<s1>F}}"];
	Node0x59a8a20:s0 -> Node0x59aaa90;
	Node0x59a8a20:s1 -> Node0x59aaae0;
	Node0x59aaae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%606:\l606:                                              \l  %607 = icmp eq i32 %603, 0\l  br i1 %607, label %661, label %648\l|{<s0>T|<s1>F}}"];
	Node0x59aaae0:s0 -> Node0x59aac70;
	Node0x59aaae0:s1 -> Node0x59aacc0;
	Node0x59aaa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%608:\l608:                                              \l  %609 = load i8, i8 addrspace(4)* %602, align 1, !tbaa !8\l  %610 = zext i8 %609 to i64\l  %611 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 1\l  %612 = load i8, i8 addrspace(4)* %611, align 1, !tbaa !8\l  %613 = zext i8 %612 to i64\l  %614 = shl nuw nsw i64 %613, 8\l  %615 = or i64 %614, %610\l  %616 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 2\l  %617 = load i8, i8 addrspace(4)* %616, align 1, !tbaa !8\l  %618 = zext i8 %617 to i64\l  %619 = shl nuw nsw i64 %618, 16\l  %620 = or i64 %615, %619\l  %621 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 3\l  %622 = load i8, i8 addrspace(4)* %621, align 1, !tbaa !8\l  %623 = zext i8 %622 to i64\l  %624 = shl nuw nsw i64 %623, 24\l  %625 = or i64 %620, %624\l  %626 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 4\l  %627 = load i8, i8 addrspace(4)* %626, align 1, !tbaa !8\l  %628 = zext i8 %627 to i64\l  %629 = shl nuw nsw i64 %628, 32\l  %630 = or i64 %625, %629\l  %631 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 5\l  %632 = load i8, i8 addrspace(4)* %631, align 1, !tbaa !8\l  %633 = zext i8 %632 to i64\l  %634 = shl nuw nsw i64 %633, 40\l  %635 = or i64 %630, %634\l  %636 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 6\l  %637 = load i8, i8 addrspace(4)* %636, align 1, !tbaa !8\l  %638 = zext i8 %637 to i64\l  %639 = shl nuw nsw i64 %638, 48\l  %640 = or i64 %635, %639\l  %641 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 7\l  %642 = load i8, i8 addrspace(4)* %641, align 1, !tbaa !8\l  %643 = zext i8 %642 to i64\l  %644 = shl nuw i64 %643, 56\l  %645 = or i64 %640, %644\l  %646 = add nsw i32 %603, -8\l  %647 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 8\l  br label %661\l}"];
	Node0x59aaa90 -> Node0x59aac70;
	Node0x59aacc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%648:\l648:                                              \l  %649 = phi i32 [ %659, %648 ], [ 0, %606 ]\l  %650 = phi i64 [ %658, %648 ], [ 0, %606 ]\l  %651 = zext i32 %649 to i64\l  %652 = getelementptr inbounds i8, i8 addrspace(4)* %602, i64 %651\l  %653 = load i8, i8 addrspace(4)* %652, align 1, !tbaa !8\l  %654 = zext i8 %653 to i64\l  %655 = shl i32 %649, 3\l  %656 = zext i32 %655 to i64\l  %657 = shl nuw i64 %654, %656\l  %658 = or i64 %657, %650\l  %659 = add nuw nsw i32 %649, 1\l  %660 = icmp eq i32 %659, %603\l  br i1 %660, label %661, label %648\l|{<s0>T|<s1>F}}"];
	Node0x59aacc0:s0 -> Node0x59aac70;
	Node0x59aacc0:s1 -> Node0x59aacc0;
	Node0x59aac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%661:\l661:                                              \l  %662 = phi i8 addrspace(4)* [ %647, %608 ], [ %602, %606 ], [ %602, %648 ]\l  %663 = phi i32 [ %646, %608 ], [ 0, %606 ], [ 0, %648 ]\l  %664 = phi i64 [ %645, %608 ], [ 0, %606 ], [ %658, %648 ]\l  %665 = icmp ugt i32 %663, 7\l  br i1 %665, label %668, label %666\l|{<s0>T|<s1>F}}"];
	Node0x59aac70:s0 -> Node0x59acce0;
	Node0x59aac70:s1 -> Node0x59acd30;
	Node0x59acd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%666:\l666:                                              \l  %667 = icmp eq i32 %663, 0\l  br i1 %667, label %721, label %708\l|{<s0>T|<s1>F}}"];
	Node0x59acd30:s0 -> Node0x59acec0;
	Node0x59acd30:s1 -> Node0x59acf10;
	Node0x59acce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%668:\l668:                                              \l  %669 = load i8, i8 addrspace(4)* %662, align 1, !tbaa !8\l  %670 = zext i8 %669 to i64\l  %671 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 1\l  %672 = load i8, i8 addrspace(4)* %671, align 1, !tbaa !8\l  %673 = zext i8 %672 to i64\l  %674 = shl nuw nsw i64 %673, 8\l  %675 = or i64 %674, %670\l  %676 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 2\l  %677 = load i8, i8 addrspace(4)* %676, align 1, !tbaa !8\l  %678 = zext i8 %677 to i64\l  %679 = shl nuw nsw i64 %678, 16\l  %680 = or i64 %675, %679\l  %681 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 3\l  %682 = load i8, i8 addrspace(4)* %681, align 1, !tbaa !8\l  %683 = zext i8 %682 to i64\l  %684 = shl nuw nsw i64 %683, 24\l  %685 = or i64 %680, %684\l  %686 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 4\l  %687 = load i8, i8 addrspace(4)* %686, align 1, !tbaa !8\l  %688 = zext i8 %687 to i64\l  %689 = shl nuw nsw i64 %688, 32\l  %690 = or i64 %685, %689\l  %691 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 5\l  %692 = load i8, i8 addrspace(4)* %691, align 1, !tbaa !8\l  %693 = zext i8 %692 to i64\l  %694 = shl nuw nsw i64 %693, 40\l  %695 = or i64 %690, %694\l  %696 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 6\l  %697 = load i8, i8 addrspace(4)* %696, align 1, !tbaa !8\l  %698 = zext i8 %697 to i64\l  %699 = shl nuw nsw i64 %698, 48\l  %700 = or i64 %695, %699\l  %701 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 7\l  %702 = load i8, i8 addrspace(4)* %701, align 1, !tbaa !8\l  %703 = zext i8 %702 to i64\l  %704 = shl nuw i64 %703, 56\l  %705 = or i64 %700, %704\l  %706 = add nsw i32 %663, -8\l  %707 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 8\l  br label %721\l}"];
	Node0x59acce0 -> Node0x59acec0;
	Node0x59acf10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%708:\l708:                                              \l  %709 = phi i32 [ %719, %708 ], [ 0, %666 ]\l  %710 = phi i64 [ %718, %708 ], [ 0, %666 ]\l  %711 = zext i32 %709 to i64\l  %712 = getelementptr inbounds i8, i8 addrspace(4)* %662, i64 %711\l  %713 = load i8, i8 addrspace(4)* %712, align 1, !tbaa !8\l  %714 = zext i8 %713 to i64\l  %715 = shl i32 %709, 3\l  %716 = zext i32 %715 to i64\l  %717 = shl nuw i64 %714, %716\l  %718 = or i64 %717, %710\l  %719 = add nuw nsw i32 %709, 1\l  %720 = icmp eq i32 %719, %663\l  br i1 %720, label %721, label %708\l|{<s0>T|<s1>F}}"];
	Node0x59acf10:s0 -> Node0x59acec0;
	Node0x59acf10:s1 -> Node0x59acf10;
	Node0x59acec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%721:\l721:                                              \l  %722 = phi i8 addrspace(4)* [ %707, %668 ], [ %662, %666 ], [ %662, %708 ]\l  %723 = phi i32 [ %706, %668 ], [ 0, %666 ], [ 0, %708 ]\l  %724 = phi i64 [ %705, %668 ], [ 0, %666 ], [ %718, %708 ]\l  %725 = icmp ugt i32 %723, 7\l  br i1 %725, label %728, label %726\l|{<s0>T|<s1>F}}"];
	Node0x59acec0:s0 -> Node0x599f410;
	Node0x59acec0:s1 -> Node0x599f460;
	Node0x599f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%726:\l726:                                              \l  %727 = icmp eq i32 %723, 0\l  br i1 %727, label %781, label %768\l|{<s0>T|<s1>F}}"];
	Node0x599f460:s0 -> Node0x599f5f0;
	Node0x599f460:s1 -> Node0x599f640;
	Node0x599f410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%728:\l728:                                              \l  %729 = load i8, i8 addrspace(4)* %722, align 1, !tbaa !8\l  %730 = zext i8 %729 to i64\l  %731 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 1\l  %732 = load i8, i8 addrspace(4)* %731, align 1, !tbaa !8\l  %733 = zext i8 %732 to i64\l  %734 = shl nuw nsw i64 %733, 8\l  %735 = or i64 %734, %730\l  %736 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 2\l  %737 = load i8, i8 addrspace(4)* %736, align 1, !tbaa !8\l  %738 = zext i8 %737 to i64\l  %739 = shl nuw nsw i64 %738, 16\l  %740 = or i64 %735, %739\l  %741 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 3\l  %742 = load i8, i8 addrspace(4)* %741, align 1, !tbaa !8\l  %743 = zext i8 %742 to i64\l  %744 = shl nuw nsw i64 %743, 24\l  %745 = or i64 %740, %744\l  %746 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 4\l  %747 = load i8, i8 addrspace(4)* %746, align 1, !tbaa !8\l  %748 = zext i8 %747 to i64\l  %749 = shl nuw nsw i64 %748, 32\l  %750 = or i64 %745, %749\l  %751 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 5\l  %752 = load i8, i8 addrspace(4)* %751, align 1, !tbaa !8\l  %753 = zext i8 %752 to i64\l  %754 = shl nuw nsw i64 %753, 40\l  %755 = or i64 %750, %754\l  %756 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 6\l  %757 = load i8, i8 addrspace(4)* %756, align 1, !tbaa !8\l  %758 = zext i8 %757 to i64\l  %759 = shl nuw nsw i64 %758, 48\l  %760 = or i64 %755, %759\l  %761 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 7\l  %762 = load i8, i8 addrspace(4)* %761, align 1, !tbaa !8\l  %763 = zext i8 %762 to i64\l  %764 = shl nuw i64 %763, 56\l  %765 = or i64 %760, %764\l  %766 = add nsw i32 %723, -8\l  %767 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 8\l  br label %781\l}"];
	Node0x599f410 -> Node0x599f5f0;
	Node0x599f640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%768:\l768:                                              \l  %769 = phi i32 [ %779, %768 ], [ 0, %726 ]\l  %770 = phi i64 [ %778, %768 ], [ 0, %726 ]\l  %771 = zext i32 %769 to i64\l  %772 = getelementptr inbounds i8, i8 addrspace(4)* %722, i64 %771\l  %773 = load i8, i8 addrspace(4)* %772, align 1, !tbaa !8\l  %774 = zext i8 %773 to i64\l  %775 = shl i32 %769, 3\l  %776 = zext i32 %775 to i64\l  %777 = shl nuw i64 %774, %776\l  %778 = or i64 %777, %770\l  %779 = add nuw nsw i32 %769, 1\l  %780 = icmp eq i32 %779, %723\l  br i1 %780, label %781, label %768\l|{<s0>T|<s1>F}}"];
	Node0x599f640:s0 -> Node0x599f5f0;
	Node0x599f640:s1 -> Node0x599f640;
	Node0x599f5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%781:\l781:                                              \l  %782 = phi i8 addrspace(4)* [ %767, %728 ], [ %722, %726 ], [ %722, %768 ]\l  %783 = phi i32 [ %766, %728 ], [ 0, %726 ], [ 0, %768 ]\l  %784 = phi i64 [ %765, %728 ], [ 0, %726 ], [ %778, %768 ]\l  %785 = icmp ugt i32 %783, 7\l  br i1 %785, label %788, label %786\l|{<s0>T|<s1>F}}"];
	Node0x599f5f0:s0 -> Node0x59b3180;
	Node0x599f5f0:s1 -> Node0x59b31d0;
	Node0x59b31d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%786:\l786:                                              \l  %787 = icmp eq i32 %783, 0\l  br i1 %787, label %841, label %828\l|{<s0>T|<s1>F}}"];
	Node0x59b31d0:s0 -> Node0x59b3360;
	Node0x59b31d0:s1 -> Node0x59b33b0;
	Node0x59b3180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%788:\l788:                                              \l  %789 = load i8, i8 addrspace(4)* %782, align 1, !tbaa !8\l  %790 = zext i8 %789 to i64\l  %791 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 1\l  %792 = load i8, i8 addrspace(4)* %791, align 1, !tbaa !8\l  %793 = zext i8 %792 to i64\l  %794 = shl nuw nsw i64 %793, 8\l  %795 = or i64 %794, %790\l  %796 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 2\l  %797 = load i8, i8 addrspace(4)* %796, align 1, !tbaa !8\l  %798 = zext i8 %797 to i64\l  %799 = shl nuw nsw i64 %798, 16\l  %800 = or i64 %795, %799\l  %801 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 3\l  %802 = load i8, i8 addrspace(4)* %801, align 1, !tbaa !8\l  %803 = zext i8 %802 to i64\l  %804 = shl nuw nsw i64 %803, 24\l  %805 = or i64 %800, %804\l  %806 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 4\l  %807 = load i8, i8 addrspace(4)* %806, align 1, !tbaa !8\l  %808 = zext i8 %807 to i64\l  %809 = shl nuw nsw i64 %808, 32\l  %810 = or i64 %805, %809\l  %811 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 5\l  %812 = load i8, i8 addrspace(4)* %811, align 1, !tbaa !8\l  %813 = zext i8 %812 to i64\l  %814 = shl nuw nsw i64 %813, 40\l  %815 = or i64 %810, %814\l  %816 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 6\l  %817 = load i8, i8 addrspace(4)* %816, align 1, !tbaa !8\l  %818 = zext i8 %817 to i64\l  %819 = shl nuw nsw i64 %818, 48\l  %820 = or i64 %815, %819\l  %821 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 7\l  %822 = load i8, i8 addrspace(4)* %821, align 1, !tbaa !8\l  %823 = zext i8 %822 to i64\l  %824 = shl nuw i64 %823, 56\l  %825 = or i64 %820, %824\l  %826 = add nsw i32 %783, -8\l  %827 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 8\l  br label %841\l}"];
	Node0x59b3180 -> Node0x59b3360;
	Node0x59b33b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%828:\l828:                                              \l  %829 = phi i32 [ %839, %828 ], [ 0, %786 ]\l  %830 = phi i64 [ %838, %828 ], [ 0, %786 ]\l  %831 = zext i32 %829 to i64\l  %832 = getelementptr inbounds i8, i8 addrspace(4)* %782, i64 %831\l  %833 = load i8, i8 addrspace(4)* %832, align 1, !tbaa !8\l  %834 = zext i8 %833 to i64\l  %835 = shl i32 %829, 3\l  %836 = zext i32 %835 to i64\l  %837 = shl nuw i64 %834, %836\l  %838 = or i64 %837, %830\l  %839 = add nuw nsw i32 %829, 1\l  %840 = icmp eq i32 %839, %783\l  br i1 %840, label %841, label %828\l|{<s0>T|<s1>F}}"];
	Node0x59b33b0:s0 -> Node0x59b3360;
	Node0x59b33b0:s1 -> Node0x59b33b0;
	Node0x59b3360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%841:\l841:                                              \l  %842 = phi i8 addrspace(4)* [ %827, %788 ], [ %782, %786 ], [ %782, %828 ]\l  %843 = phi i32 [ %826, %788 ], [ 0, %786 ], [ 0, %828 ]\l  %844 = phi i64 [ %825, %788 ], [ 0, %786 ], [ %838, %828 ]\l  %845 = icmp ugt i32 %843, 7\l  br i1 %845, label %848, label %846\l|{<s0>T|<s1>F}}"];
	Node0x59b3360:s0 -> Node0x59b53d0;
	Node0x59b3360:s1 -> Node0x59b5420;
	Node0x59b5420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%846:\l846:                                              \l  %847 = icmp eq i32 %843, 0\l  br i1 %847, label %899, label %886\l|{<s0>T|<s1>F}}"];
	Node0x59b5420:s0 -> Node0x59a41b0;
	Node0x59b5420:s1 -> Node0x59b55b0;
	Node0x59b53d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%848:\l848:                                              \l  %849 = load i8, i8 addrspace(4)* %842, align 1, !tbaa !8\l  %850 = zext i8 %849 to i64\l  %851 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 1\l  %852 = load i8, i8 addrspace(4)* %851, align 1, !tbaa !8\l  %853 = zext i8 %852 to i64\l  %854 = shl nuw nsw i64 %853, 8\l  %855 = or i64 %854, %850\l  %856 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 2\l  %857 = load i8, i8 addrspace(4)* %856, align 1, !tbaa !8\l  %858 = zext i8 %857 to i64\l  %859 = shl nuw nsw i64 %858, 16\l  %860 = or i64 %855, %859\l  %861 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 3\l  %862 = load i8, i8 addrspace(4)* %861, align 1, !tbaa !8\l  %863 = zext i8 %862 to i64\l  %864 = shl nuw nsw i64 %863, 24\l  %865 = or i64 %860, %864\l  %866 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 4\l  %867 = load i8, i8 addrspace(4)* %866, align 1, !tbaa !8\l  %868 = zext i8 %867 to i64\l  %869 = shl nuw nsw i64 %868, 32\l  %870 = or i64 %865, %869\l  %871 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 5\l  %872 = load i8, i8 addrspace(4)* %871, align 1, !tbaa !8\l  %873 = zext i8 %872 to i64\l  %874 = shl nuw nsw i64 %873, 40\l  %875 = or i64 %870, %874\l  %876 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 6\l  %877 = load i8, i8 addrspace(4)* %876, align 1, !tbaa !8\l  %878 = zext i8 %877 to i64\l  %879 = shl nuw nsw i64 %878, 48\l  %880 = or i64 %875, %879\l  %881 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 7\l  %882 = load i8, i8 addrspace(4)* %881, align 1, !tbaa !8\l  %883 = zext i8 %882 to i64\l  %884 = shl nuw i64 %883, 56\l  %885 = or i64 %880, %884\l  br label %899\l}"];
	Node0x59b53d0 -> Node0x59a41b0;
	Node0x59b55b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%886:\l886:                                              \l  %887 = phi i32 [ %897, %886 ], [ 0, %846 ]\l  %888 = phi i64 [ %896, %886 ], [ 0, %846 ]\l  %889 = zext i32 %887 to i64\l  %890 = getelementptr inbounds i8, i8 addrspace(4)* %842, i64 %889\l  %891 = load i8, i8 addrspace(4)* %890, align 1, !tbaa !8\l  %892 = zext i8 %891 to i64\l  %893 = shl i32 %887, 3\l  %894 = zext i32 %893 to i64\l  %895 = shl nuw i64 %892, %894\l  %896 = or i64 %895, %888\l  %897 = add nuw nsw i32 %887, 1\l  %898 = icmp eq i32 %897, %843\l  br i1 %898, label %899, label %886\l|{<s0>T|<s1>F}}"];
	Node0x59b55b0:s0 -> Node0x59a41b0;
	Node0x59b55b0:s1 -> Node0x59b55b0;
	Node0x59a41b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%899:\l899:                                              \l  %900 = phi i64 [ %885, %848 ], [ 0, %846 ], [ %896, %886 ]\l  %901 = shl nuw nsw i64 %482, 2\l  %902 = add nuw nsw i64 %901, 28\l  %903 = and i64 %902, 480\l  %904 = and i64 %484, -225\l  %905 = or i64 %904, %903\l  %906 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %905, i64 noundef %544, i64 noundef %604, i64 noundef %664, i64\l... noundef %724, i64 noundef %784, i64 noundef %844, i64 noundef %900) #10\l  %907 = sub i64 %474, %482\l  %908 = getelementptr inbounds i8, i8 addrspace(4)* %475, i64 %482\l  %909 = icmp eq i64 %907, 0\l  br i1 %909, label %910, label %473\l|{<s0>T|<s1>F}}"];
	Node0x59a41b0:s0 -> Node0x59a3980;
	Node0x59a41b0:s1 -> Node0x59a3a40;
	Node0x59a3980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%910:\l910:                                              \l  %911 = phi \<2 x i64\> [ %468, %465 ], [ %906, %899 ]\l  %912 = extractelement \<2 x i64\> %911, i64 0\l  %913 = zext i32 %462 to i64\l  %914 = and i64 %912, -227\l  %915 = or i64 %914, 34\l  %916 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %915, i64 noundef %913, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %917 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %918 = getelementptr i8, i8 addrspace(4)* %917, i64 4\l  %919 = bitcast i8 addrspace(4)* %918 to i16 addrspace(4)*\l  %920 = load i16, i16 addrspace(4)* %919, align 4, !range !12,\l... !invariant.load !13\l  %921 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %922 = extractelement \<2 x i64\> %921, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([15 x i8], [15 x i8] addrspace(4)* @.str.2, i64 0, i64 0) to i8*), i8*\l... null), label %923, label %927\l|{<s0>T|<s1>F}}"];
	Node0x59a3980:s0 -> Node0x59b86b0;
	Node0x59a3980:s1 -> Node0x59b8740;
	Node0x59b86b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%923:\l923:                                              \l  %924 = and i64 %922, -225\l  %925 = or i64 %924, 32\l  %926 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %925, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %1368\l}"];
	Node0x59b86b0 -> Node0x59b8a30;
	Node0x59b8740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%927:\l927:                                              \l  %928 = and i64 %922, 2\l  %929 = and i64 %922, -3\l  %930 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %929, i64 0\l  br label %931\l}"];
	Node0x59b8740 -> Node0x59b8af0;
	Node0x59b8af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%931:\l931:                                              \l  %932 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)* @.str.2, i64 0,\l... i64 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast\l... (i8 addrspace(4)* getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)*\l... @.str.2, i64 0, i64 14) to i8*) to i64), i64 add (i64 sub (i64 0, i64\l... ptrtoint ([15 x i8]* addrspacecast ([15 x i8] addrspace(4)* @.str.2 to [15 x\l... i8]*) to i64)), i64 1))), %927 ], [ %1365, %1357 ]\l  %933 = phi i8 addrspace(4)* [ getelementptr inbounds ([15 x i8], [15 x i8]\l... addrspace(4)* @.str.2, i64 0, i64 0), %927 ], [ %1366, %1357 ]\l  %934 = phi \<2 x i64\> [ %930, %927 ], [ %1364, %1357 ]\l  %935 = icmp ugt i64 %932, 56\l  %936 = extractelement \<2 x i64\> %934, i64 0\l  %937 = or i64 %936, %928\l  %938 = insertelement \<2 x i64\> poison, i64 %937, i64 0\l  %939 = select i1 %935, \<2 x i64\> %934, \<2 x i64\> %938\l  %940 = tail call i64 @llvm.umin.i64(i64 %932, i64 56)\l  %941 = trunc i64 %940 to i32\l  %942 = extractelement \<2 x i64\> %939, i64 0\l  %943 = icmp ugt i32 %941, 7\l  br i1 %943, label %946, label %944\l|{<s0>T|<s1>F}}"];
	Node0x59b8af0:s0 -> Node0x59b9b30;
	Node0x59b8af0:s1 -> Node0x59b9bc0;
	Node0x59b9bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%944:\l944:                                              \l  %945 = icmp eq i32 %941, 0\l  br i1 %945, label %999, label %986\l|{<s0>T|<s1>F}}"];
	Node0x59b9bc0:s0 -> Node0x59b9d90;
	Node0x59b9bc0:s1 -> Node0x59b9de0;
	Node0x59b9b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%946:\l946:                                              \l  %947 = load i8, i8 addrspace(4)* %933, align 1, !tbaa !8\l  %948 = zext i8 %947 to i64\l  %949 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 1\l  %950 = load i8, i8 addrspace(4)* %949, align 1, !tbaa !8\l  %951 = zext i8 %950 to i64\l  %952 = shl nuw nsw i64 %951, 8\l  %953 = or i64 %952, %948\l  %954 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 2\l  %955 = load i8, i8 addrspace(4)* %954, align 1, !tbaa !8\l  %956 = zext i8 %955 to i64\l  %957 = shl nuw nsw i64 %956, 16\l  %958 = or i64 %953, %957\l  %959 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 3\l  %960 = load i8, i8 addrspace(4)* %959, align 1, !tbaa !8\l  %961 = zext i8 %960 to i64\l  %962 = shl nuw nsw i64 %961, 24\l  %963 = or i64 %958, %962\l  %964 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 4\l  %965 = load i8, i8 addrspace(4)* %964, align 1, !tbaa !8\l  %966 = zext i8 %965 to i64\l  %967 = shl nuw nsw i64 %966, 32\l  %968 = or i64 %963, %967\l  %969 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 5\l  %970 = load i8, i8 addrspace(4)* %969, align 1, !tbaa !8\l  %971 = zext i8 %970 to i64\l  %972 = shl nuw nsw i64 %971, 40\l  %973 = or i64 %968, %972\l  %974 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 6\l  %975 = load i8, i8 addrspace(4)* %974, align 1, !tbaa !8\l  %976 = zext i8 %975 to i64\l  %977 = shl nuw nsw i64 %976, 48\l  %978 = or i64 %973, %977\l  %979 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 7\l  %980 = load i8, i8 addrspace(4)* %979, align 1, !tbaa !8\l  %981 = zext i8 %980 to i64\l  %982 = shl nuw i64 %981, 56\l  %983 = or i64 %978, %982\l  %984 = add nsw i32 %941, -8\l  %985 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 8\l  br label %999\l}"];
	Node0x59b9b30 -> Node0x59b9d90;
	Node0x59b9de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%986:\l986:                                              \l  %987 = phi i32 [ %997, %986 ], [ 0, %944 ]\l  %988 = phi i64 [ %996, %986 ], [ 0, %944 ]\l  %989 = zext i32 %987 to i64\l  %990 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 %989\l  %991 = load i8, i8 addrspace(4)* %990, align 1, !tbaa !8\l  %992 = zext i8 %991 to i64\l  %993 = shl i32 %987, 3\l  %994 = zext i32 %993 to i64\l  %995 = shl nuw i64 %992, %994\l  %996 = or i64 %995, %988\l  %997 = add nuw nsw i32 %987, 1\l  %998 = icmp eq i32 %997, %941\l  br i1 %998, label %999, label %986, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x59b9de0:s0 -> Node0x59b9d90;
	Node0x59b9de0:s1 -> Node0x59b9de0;
	Node0x59b9d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%999:\l999:                                              \l  %1000 = phi i8 addrspace(4)* [ %985, %946 ], [ %933, %944 ], [ %933, %986 ]\l  %1001 = phi i32 [ %984, %946 ], [ 0, %944 ], [ 0, %986 ]\l  %1002 = phi i64 [ %983, %946 ], [ 0, %944 ], [ %996, %986 ]\l  %1003 = icmp ugt i32 %1001, 7\l  br i1 %1003, label %1006, label %1004\l|{<s0>T|<s1>F}}"];
	Node0x59b9d90:s0 -> Node0x59bc2c0;
	Node0x59b9d90:s1 -> Node0x59bc310;
	Node0x59bc310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1004:\l1004:                                             \l  %1005 = icmp eq i32 %1001, 0\l  br i1 %1005, label %1059, label %1046\l|{<s0>T|<s1>F}}"];
	Node0x59bc310:s0 -> Node0x59bc4a0;
	Node0x59bc310:s1 -> Node0x59bc4f0;
	Node0x59bc2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1006:\l1006:                                             \l  %1007 = load i8, i8 addrspace(4)* %1000, align 1, !tbaa !8\l  %1008 = zext i8 %1007 to i64\l  %1009 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 1\l  %1010 = load i8, i8 addrspace(4)* %1009, align 1, !tbaa !8\l  %1011 = zext i8 %1010 to i64\l  %1012 = shl nuw nsw i64 %1011, 8\l  %1013 = or i64 %1012, %1008\l  %1014 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 2\l  %1015 = load i8, i8 addrspace(4)* %1014, align 1, !tbaa !8\l  %1016 = zext i8 %1015 to i64\l  %1017 = shl nuw nsw i64 %1016, 16\l  %1018 = or i64 %1013, %1017\l  %1019 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 3\l  %1020 = load i8, i8 addrspace(4)* %1019, align 1, !tbaa !8\l  %1021 = zext i8 %1020 to i64\l  %1022 = shl nuw nsw i64 %1021, 24\l  %1023 = or i64 %1018, %1022\l  %1024 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 4\l  %1025 = load i8, i8 addrspace(4)* %1024, align 1, !tbaa !8\l  %1026 = zext i8 %1025 to i64\l  %1027 = shl nuw nsw i64 %1026, 32\l  %1028 = or i64 %1023, %1027\l  %1029 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 5\l  %1030 = load i8, i8 addrspace(4)* %1029, align 1, !tbaa !8\l  %1031 = zext i8 %1030 to i64\l  %1032 = shl nuw nsw i64 %1031, 40\l  %1033 = or i64 %1028, %1032\l  %1034 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 6\l  %1035 = load i8, i8 addrspace(4)* %1034, align 1, !tbaa !8\l  %1036 = zext i8 %1035 to i64\l  %1037 = shl nuw nsw i64 %1036, 48\l  %1038 = or i64 %1033, %1037\l  %1039 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 7\l  %1040 = load i8, i8 addrspace(4)* %1039, align 1, !tbaa !8\l  %1041 = zext i8 %1040 to i64\l  %1042 = shl nuw i64 %1041, 56\l  %1043 = or i64 %1038, %1042\l  %1044 = add nsw i32 %1001, -8\l  %1045 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 8\l  br label %1059\l}"];
	Node0x59bc2c0 -> Node0x59bc4a0;
	Node0x59bc4f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1046:\l1046:                                             \l  %1047 = phi i32 [ %1057, %1046 ], [ 0, %1004 ]\l  %1048 = phi i64 [ %1056, %1046 ], [ 0, %1004 ]\l  %1049 = zext i32 %1047 to i64\l  %1050 = getelementptr inbounds i8, i8 addrspace(4)* %1000, i64 %1049\l  %1051 = load i8, i8 addrspace(4)* %1050, align 1, !tbaa !8\l  %1052 = zext i8 %1051 to i64\l  %1053 = shl i32 %1047, 3\l  %1054 = zext i32 %1053 to i64\l  %1055 = shl nuw i64 %1052, %1054\l  %1056 = or i64 %1055, %1048\l  %1057 = add nuw nsw i32 %1047, 1\l  %1058 = icmp eq i32 %1057, %1001\l  br i1 %1058, label %1059, label %1046\l|{<s0>T|<s1>F}}"];
	Node0x59bc4f0:s0 -> Node0x59bc4a0;
	Node0x59bc4f0:s1 -> Node0x59bc4f0;
	Node0x59bc4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1059:\l1059:                                             \l  %1060 = phi i8 addrspace(4)* [ %1045, %1006 ], [ %1000, %1004 ], [ %1000,\l... %1046 ]\l  %1061 = phi i32 [ %1044, %1006 ], [ 0, %1004 ], [ 0, %1046 ]\l  %1062 = phi i64 [ %1043, %1006 ], [ 0, %1004 ], [ %1056, %1046 ]\l  %1063 = icmp ugt i32 %1061, 7\l  br i1 %1063, label %1066, label %1064\l|{<s0>T|<s1>F}}"];
	Node0x59bc4a0:s0 -> Node0x59a7510;
	Node0x59bc4a0:s1 -> Node0x59a7560;
	Node0x59a7560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1064:\l1064:                                             \l  %1065 = icmp eq i32 %1061, 0\l  br i1 %1065, label %1119, label %1106\l|{<s0>T|<s1>F}}"];
	Node0x59a7560:s0 -> Node0x59a76f0;
	Node0x59a7560:s1 -> Node0x59a7740;
	Node0x59a7510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1066:\l1066:                                             \l  %1067 = load i8, i8 addrspace(4)* %1060, align 1, !tbaa !8\l  %1068 = zext i8 %1067 to i64\l  %1069 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 1\l  %1070 = load i8, i8 addrspace(4)* %1069, align 1, !tbaa !8\l  %1071 = zext i8 %1070 to i64\l  %1072 = shl nuw nsw i64 %1071, 8\l  %1073 = or i64 %1072, %1068\l  %1074 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 2\l  %1075 = load i8, i8 addrspace(4)* %1074, align 1, !tbaa !8\l  %1076 = zext i8 %1075 to i64\l  %1077 = shl nuw nsw i64 %1076, 16\l  %1078 = or i64 %1073, %1077\l  %1079 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 3\l  %1080 = load i8, i8 addrspace(4)* %1079, align 1, !tbaa !8\l  %1081 = zext i8 %1080 to i64\l  %1082 = shl nuw nsw i64 %1081, 24\l  %1083 = or i64 %1078, %1082\l  %1084 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 4\l  %1085 = load i8, i8 addrspace(4)* %1084, align 1, !tbaa !8\l  %1086 = zext i8 %1085 to i64\l  %1087 = shl nuw nsw i64 %1086, 32\l  %1088 = or i64 %1083, %1087\l  %1089 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 5\l  %1090 = load i8, i8 addrspace(4)* %1089, align 1, !tbaa !8\l  %1091 = zext i8 %1090 to i64\l  %1092 = shl nuw nsw i64 %1091, 40\l  %1093 = or i64 %1088, %1092\l  %1094 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 6\l  %1095 = load i8, i8 addrspace(4)* %1094, align 1, !tbaa !8\l  %1096 = zext i8 %1095 to i64\l  %1097 = shl nuw nsw i64 %1096, 48\l  %1098 = or i64 %1093, %1097\l  %1099 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 7\l  %1100 = load i8, i8 addrspace(4)* %1099, align 1, !tbaa !8\l  %1101 = zext i8 %1100 to i64\l  %1102 = shl nuw i64 %1101, 56\l  %1103 = or i64 %1098, %1102\l  %1104 = add nsw i32 %1061, -8\l  %1105 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 8\l  br label %1119\l}"];
	Node0x59a7510 -> Node0x59a76f0;
	Node0x59a7740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1106:\l1106:                                             \l  %1107 = phi i32 [ %1117, %1106 ], [ 0, %1064 ]\l  %1108 = phi i64 [ %1116, %1106 ], [ 0, %1064 ]\l  %1109 = zext i32 %1107 to i64\l  %1110 = getelementptr inbounds i8, i8 addrspace(4)* %1060, i64 %1109\l  %1111 = load i8, i8 addrspace(4)* %1110, align 1, !tbaa !8\l  %1112 = zext i8 %1111 to i64\l  %1113 = shl i32 %1107, 3\l  %1114 = zext i32 %1113 to i64\l  %1115 = shl nuw i64 %1112, %1114\l  %1116 = or i64 %1115, %1108\l  %1117 = add nuw nsw i32 %1107, 1\l  %1118 = icmp eq i32 %1117, %1061\l  br i1 %1118, label %1119, label %1106\l|{<s0>T|<s1>F}}"];
	Node0x59a7740:s0 -> Node0x59a76f0;
	Node0x59a7740:s1 -> Node0x59a7740;
	Node0x59a76f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1119:\l1119:                                             \l  %1120 = phi i8 addrspace(4)* [ %1105, %1066 ], [ %1060, %1064 ], [ %1060,\l... %1106 ]\l  %1121 = phi i32 [ %1104, %1066 ], [ 0, %1064 ], [ 0, %1106 ]\l  %1122 = phi i64 [ %1103, %1066 ], [ 0, %1064 ], [ %1116, %1106 ]\l  %1123 = icmp ugt i32 %1121, 7\l  br i1 %1123, label %1126, label %1124\l|{<s0>T|<s1>F}}"];
	Node0x59a76f0:s0 -> Node0x59c27c0;
	Node0x59a76f0:s1 -> Node0x59c2810;
	Node0x59c2810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1124:\l1124:                                             \l  %1125 = icmp eq i32 %1121, 0\l  br i1 %1125, label %1179, label %1166\l|{<s0>T|<s1>F}}"];
	Node0x59c2810:s0 -> Node0x59c29a0;
	Node0x59c2810:s1 -> Node0x59c29f0;
	Node0x59c27c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1126:\l1126:                                             \l  %1127 = load i8, i8 addrspace(4)* %1120, align 1, !tbaa !8\l  %1128 = zext i8 %1127 to i64\l  %1129 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 1\l  %1130 = load i8, i8 addrspace(4)* %1129, align 1, !tbaa !8\l  %1131 = zext i8 %1130 to i64\l  %1132 = shl nuw nsw i64 %1131, 8\l  %1133 = or i64 %1132, %1128\l  %1134 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 2\l  %1135 = load i8, i8 addrspace(4)* %1134, align 1, !tbaa !8\l  %1136 = zext i8 %1135 to i64\l  %1137 = shl nuw nsw i64 %1136, 16\l  %1138 = or i64 %1133, %1137\l  %1139 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 3\l  %1140 = load i8, i8 addrspace(4)* %1139, align 1, !tbaa !8\l  %1141 = zext i8 %1140 to i64\l  %1142 = shl nuw nsw i64 %1141, 24\l  %1143 = or i64 %1138, %1142\l  %1144 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 4\l  %1145 = load i8, i8 addrspace(4)* %1144, align 1, !tbaa !8\l  %1146 = zext i8 %1145 to i64\l  %1147 = shl nuw nsw i64 %1146, 32\l  %1148 = or i64 %1143, %1147\l  %1149 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 5\l  %1150 = load i8, i8 addrspace(4)* %1149, align 1, !tbaa !8\l  %1151 = zext i8 %1150 to i64\l  %1152 = shl nuw nsw i64 %1151, 40\l  %1153 = or i64 %1148, %1152\l  %1154 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 6\l  %1155 = load i8, i8 addrspace(4)* %1154, align 1, !tbaa !8\l  %1156 = zext i8 %1155 to i64\l  %1157 = shl nuw nsw i64 %1156, 48\l  %1158 = or i64 %1153, %1157\l  %1159 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 7\l  %1160 = load i8, i8 addrspace(4)* %1159, align 1, !tbaa !8\l  %1161 = zext i8 %1160 to i64\l  %1162 = shl nuw i64 %1161, 56\l  %1163 = or i64 %1158, %1162\l  %1164 = add nsw i32 %1121, -8\l  %1165 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 8\l  br label %1179\l}"];
	Node0x59c27c0 -> Node0x59c29a0;
	Node0x59c29f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1166:\l1166:                                             \l  %1167 = phi i32 [ %1177, %1166 ], [ 0, %1124 ]\l  %1168 = phi i64 [ %1176, %1166 ], [ 0, %1124 ]\l  %1169 = zext i32 %1167 to i64\l  %1170 = getelementptr inbounds i8, i8 addrspace(4)* %1120, i64 %1169\l  %1171 = load i8, i8 addrspace(4)* %1170, align 1, !tbaa !8\l  %1172 = zext i8 %1171 to i64\l  %1173 = shl i32 %1167, 3\l  %1174 = zext i32 %1173 to i64\l  %1175 = shl nuw i64 %1172, %1174\l  %1176 = or i64 %1175, %1168\l  %1177 = add nuw nsw i32 %1167, 1\l  %1178 = icmp eq i32 %1177, %1121\l  br i1 %1178, label %1179, label %1166\l|{<s0>T|<s1>F}}"];
	Node0x59c29f0:s0 -> Node0x59c29a0;
	Node0x59c29f0:s1 -> Node0x59c29f0;
	Node0x59c29a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1179:\l1179:                                             \l  %1180 = phi i8 addrspace(4)* [ %1165, %1126 ], [ %1120, %1124 ], [ %1120,\l... %1166 ]\l  %1181 = phi i32 [ %1164, %1126 ], [ 0, %1124 ], [ 0, %1166 ]\l  %1182 = phi i64 [ %1163, %1126 ], [ 0, %1124 ], [ %1176, %1166 ]\l  %1183 = icmp ugt i32 %1181, 7\l  br i1 %1183, label %1186, label %1184\l|{<s0>T|<s1>F}}"];
	Node0x59c29a0:s0 -> Node0x59c4a10;
	Node0x59c29a0:s1 -> Node0x59c4a60;
	Node0x59c4a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1184:\l1184:                                             \l  %1185 = icmp eq i32 %1181, 0\l  br i1 %1185, label %1239, label %1226\l|{<s0>T|<s1>F}}"];
	Node0x59c4a60:s0 -> Node0x59c4bf0;
	Node0x59c4a60:s1 -> Node0x59c4c40;
	Node0x59c4a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1186:\l1186:                                             \l  %1187 = load i8, i8 addrspace(4)* %1180, align 1, !tbaa !8\l  %1188 = zext i8 %1187 to i64\l  %1189 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 1\l  %1190 = load i8, i8 addrspace(4)* %1189, align 1, !tbaa !8\l  %1191 = zext i8 %1190 to i64\l  %1192 = shl nuw nsw i64 %1191, 8\l  %1193 = or i64 %1192, %1188\l  %1194 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 2\l  %1195 = load i8, i8 addrspace(4)* %1194, align 1, !tbaa !8\l  %1196 = zext i8 %1195 to i64\l  %1197 = shl nuw nsw i64 %1196, 16\l  %1198 = or i64 %1193, %1197\l  %1199 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 3\l  %1200 = load i8, i8 addrspace(4)* %1199, align 1, !tbaa !8\l  %1201 = zext i8 %1200 to i64\l  %1202 = shl nuw nsw i64 %1201, 24\l  %1203 = or i64 %1198, %1202\l  %1204 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 4\l  %1205 = load i8, i8 addrspace(4)* %1204, align 1, !tbaa !8\l  %1206 = zext i8 %1205 to i64\l  %1207 = shl nuw nsw i64 %1206, 32\l  %1208 = or i64 %1203, %1207\l  %1209 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 5\l  %1210 = load i8, i8 addrspace(4)* %1209, align 1, !tbaa !8\l  %1211 = zext i8 %1210 to i64\l  %1212 = shl nuw nsw i64 %1211, 40\l  %1213 = or i64 %1208, %1212\l  %1214 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 6\l  %1215 = load i8, i8 addrspace(4)* %1214, align 1, !tbaa !8\l  %1216 = zext i8 %1215 to i64\l  %1217 = shl nuw nsw i64 %1216, 48\l  %1218 = or i64 %1213, %1217\l  %1219 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 7\l  %1220 = load i8, i8 addrspace(4)* %1219, align 1, !tbaa !8\l  %1221 = zext i8 %1220 to i64\l  %1222 = shl nuw i64 %1221, 56\l  %1223 = or i64 %1218, %1222\l  %1224 = add nsw i32 %1181, -8\l  %1225 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 8\l  br label %1239\l}"];
	Node0x59c4a10 -> Node0x59c4bf0;
	Node0x59c4c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1226:\l1226:                                             \l  %1227 = phi i32 [ %1237, %1226 ], [ 0, %1184 ]\l  %1228 = phi i64 [ %1236, %1226 ], [ 0, %1184 ]\l  %1229 = zext i32 %1227 to i64\l  %1230 = getelementptr inbounds i8, i8 addrspace(4)* %1180, i64 %1229\l  %1231 = load i8, i8 addrspace(4)* %1230, align 1, !tbaa !8\l  %1232 = zext i8 %1231 to i64\l  %1233 = shl i32 %1227, 3\l  %1234 = zext i32 %1233 to i64\l  %1235 = shl nuw i64 %1232, %1234\l  %1236 = or i64 %1235, %1228\l  %1237 = add nuw nsw i32 %1227, 1\l  %1238 = icmp eq i32 %1237, %1181\l  br i1 %1238, label %1239, label %1226\l|{<s0>T|<s1>F}}"];
	Node0x59c4c40:s0 -> Node0x59c4bf0;
	Node0x59c4c40:s1 -> Node0x59c4c40;
	Node0x59c4bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1239:\l1239:                                             \l  %1240 = phi i8 addrspace(4)* [ %1225, %1186 ], [ %1180, %1184 ], [ %1180,\l... %1226 ]\l  %1241 = phi i32 [ %1224, %1186 ], [ 0, %1184 ], [ 0, %1226 ]\l  %1242 = phi i64 [ %1223, %1186 ], [ 0, %1184 ], [ %1236, %1226 ]\l  %1243 = icmp ugt i32 %1241, 7\l  br i1 %1243, label %1246, label %1244\l|{<s0>T|<s1>F}}"];
	Node0x59c4bf0:s0 -> Node0x59c6c60;
	Node0x59c4bf0:s1 -> Node0x59c6cb0;
	Node0x59c6cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1244:\l1244:                                             \l  %1245 = icmp eq i32 %1241, 0\l  br i1 %1245, label %1299, label %1286\l|{<s0>T|<s1>F}}"];
	Node0x59c6cb0:s0 -> Node0x59c6e40;
	Node0x59c6cb0:s1 -> Node0x59c6e90;
	Node0x59c6c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1246:\l1246:                                             \l  %1247 = load i8, i8 addrspace(4)* %1240, align 1, !tbaa !8\l  %1248 = zext i8 %1247 to i64\l  %1249 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 1\l  %1250 = load i8, i8 addrspace(4)* %1249, align 1, !tbaa !8\l  %1251 = zext i8 %1250 to i64\l  %1252 = shl nuw nsw i64 %1251, 8\l  %1253 = or i64 %1252, %1248\l  %1254 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 2\l  %1255 = load i8, i8 addrspace(4)* %1254, align 1, !tbaa !8\l  %1256 = zext i8 %1255 to i64\l  %1257 = shl nuw nsw i64 %1256, 16\l  %1258 = or i64 %1253, %1257\l  %1259 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 3\l  %1260 = load i8, i8 addrspace(4)* %1259, align 1, !tbaa !8\l  %1261 = zext i8 %1260 to i64\l  %1262 = shl nuw nsw i64 %1261, 24\l  %1263 = or i64 %1258, %1262\l  %1264 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 4\l  %1265 = load i8, i8 addrspace(4)* %1264, align 1, !tbaa !8\l  %1266 = zext i8 %1265 to i64\l  %1267 = shl nuw nsw i64 %1266, 32\l  %1268 = or i64 %1263, %1267\l  %1269 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 5\l  %1270 = load i8, i8 addrspace(4)* %1269, align 1, !tbaa !8\l  %1271 = zext i8 %1270 to i64\l  %1272 = shl nuw nsw i64 %1271, 40\l  %1273 = or i64 %1268, %1272\l  %1274 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 6\l  %1275 = load i8, i8 addrspace(4)* %1274, align 1, !tbaa !8\l  %1276 = zext i8 %1275 to i64\l  %1277 = shl nuw nsw i64 %1276, 48\l  %1278 = or i64 %1273, %1277\l  %1279 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 7\l  %1280 = load i8, i8 addrspace(4)* %1279, align 1, !tbaa !8\l  %1281 = zext i8 %1280 to i64\l  %1282 = shl nuw i64 %1281, 56\l  %1283 = or i64 %1278, %1282\l  %1284 = add nsw i32 %1241, -8\l  %1285 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 8\l  br label %1299\l}"];
	Node0x59c6c60 -> Node0x59c6e40;
	Node0x59c6e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1286:\l1286:                                             \l  %1287 = phi i32 [ %1297, %1286 ], [ 0, %1244 ]\l  %1288 = phi i64 [ %1296, %1286 ], [ 0, %1244 ]\l  %1289 = zext i32 %1287 to i64\l  %1290 = getelementptr inbounds i8, i8 addrspace(4)* %1240, i64 %1289\l  %1291 = load i8, i8 addrspace(4)* %1290, align 1, !tbaa !8\l  %1292 = zext i8 %1291 to i64\l  %1293 = shl i32 %1287, 3\l  %1294 = zext i32 %1293 to i64\l  %1295 = shl nuw i64 %1292, %1294\l  %1296 = or i64 %1295, %1288\l  %1297 = add nuw nsw i32 %1287, 1\l  %1298 = icmp eq i32 %1297, %1241\l  br i1 %1298, label %1299, label %1286\l|{<s0>T|<s1>F}}"];
	Node0x59c6e90:s0 -> Node0x59c6e40;
	Node0x59c6e90:s1 -> Node0x59c6e90;
	Node0x59c6e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1299:\l1299:                                             \l  %1300 = phi i8 addrspace(4)* [ %1285, %1246 ], [ %1240, %1244 ], [ %1240,\l... %1286 ]\l  %1301 = phi i32 [ %1284, %1246 ], [ 0, %1244 ], [ 0, %1286 ]\l  %1302 = phi i64 [ %1283, %1246 ], [ 0, %1244 ], [ %1296, %1286 ]\l  %1303 = icmp ugt i32 %1301, 7\l  br i1 %1303, label %1306, label %1304\l|{<s0>T|<s1>F}}"];
	Node0x59c6e40:s0 -> Node0x59c8eb0;
	Node0x59c6e40:s1 -> Node0x59c8f00;
	Node0x59c8f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1304:\l1304:                                             \l  %1305 = icmp eq i32 %1301, 0\l  br i1 %1305, label %1357, label %1344\l|{<s0>T|<s1>F}}"];
	Node0x59c8f00:s0 -> Node0x59b9260;
	Node0x59c8f00:s1 -> Node0x59c9090;
	Node0x59c8eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1306:\l1306:                                             \l  %1307 = load i8, i8 addrspace(4)* %1300, align 1, !tbaa !8\l  %1308 = zext i8 %1307 to i64\l  %1309 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 1\l  %1310 = load i8, i8 addrspace(4)* %1309, align 1, !tbaa !8\l  %1311 = zext i8 %1310 to i64\l  %1312 = shl nuw nsw i64 %1311, 8\l  %1313 = or i64 %1312, %1308\l  %1314 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 2\l  %1315 = load i8, i8 addrspace(4)* %1314, align 1, !tbaa !8\l  %1316 = zext i8 %1315 to i64\l  %1317 = shl nuw nsw i64 %1316, 16\l  %1318 = or i64 %1313, %1317\l  %1319 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 3\l  %1320 = load i8, i8 addrspace(4)* %1319, align 1, !tbaa !8\l  %1321 = zext i8 %1320 to i64\l  %1322 = shl nuw nsw i64 %1321, 24\l  %1323 = or i64 %1318, %1322\l  %1324 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 4\l  %1325 = load i8, i8 addrspace(4)* %1324, align 1, !tbaa !8\l  %1326 = zext i8 %1325 to i64\l  %1327 = shl nuw nsw i64 %1326, 32\l  %1328 = or i64 %1323, %1327\l  %1329 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 5\l  %1330 = load i8, i8 addrspace(4)* %1329, align 1, !tbaa !8\l  %1331 = zext i8 %1330 to i64\l  %1332 = shl nuw nsw i64 %1331, 40\l  %1333 = or i64 %1328, %1332\l  %1334 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 6\l  %1335 = load i8, i8 addrspace(4)* %1334, align 1, !tbaa !8\l  %1336 = zext i8 %1335 to i64\l  %1337 = shl nuw nsw i64 %1336, 48\l  %1338 = or i64 %1333, %1337\l  %1339 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 7\l  %1340 = load i8, i8 addrspace(4)* %1339, align 1, !tbaa !8\l  %1341 = zext i8 %1340 to i64\l  %1342 = shl nuw i64 %1341, 56\l  %1343 = or i64 %1338, %1342\l  br label %1357\l}"];
	Node0x59c8eb0 -> Node0x59b9260;
	Node0x59c9090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1344:\l1344:                                             \l  %1345 = phi i32 [ %1355, %1344 ], [ 0, %1304 ]\l  %1346 = phi i64 [ %1354, %1344 ], [ 0, %1304 ]\l  %1347 = zext i32 %1345 to i64\l  %1348 = getelementptr inbounds i8, i8 addrspace(4)* %1300, i64 %1347\l  %1349 = load i8, i8 addrspace(4)* %1348, align 1, !tbaa !8\l  %1350 = zext i8 %1349 to i64\l  %1351 = shl i32 %1345, 3\l  %1352 = zext i32 %1351 to i64\l  %1353 = shl nuw i64 %1350, %1352\l  %1354 = or i64 %1353, %1346\l  %1355 = add nuw nsw i32 %1345, 1\l  %1356 = icmp eq i32 %1355, %1301\l  br i1 %1356, label %1357, label %1344\l|{<s0>T|<s1>F}}"];
	Node0x59c9090:s0 -> Node0x59b9260;
	Node0x59c9090:s1 -> Node0x59c9090;
	Node0x59b9260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1357:\l1357:                                             \l  %1358 = phi i64 [ %1343, %1306 ], [ 0, %1304 ], [ %1354, %1344 ]\l  %1359 = shl nuw nsw i64 %940, 2\l  %1360 = add nuw nsw i64 %1359, 28\l  %1361 = and i64 %1360, 480\l  %1362 = and i64 %942, -225\l  %1363 = or i64 %1362, %1361\l  %1364 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %1363, i64 noundef %1002, i64 noundef %1062, i64 noundef %1122,\l... i64 noundef %1182, i64 noundef %1242, i64 noundef %1302, i64 noundef %1358)\l... #10\l  %1365 = sub i64 %932, %940\l  %1366 = getelementptr inbounds i8, i8 addrspace(4)* %933, i64 %940\l  %1367 = icmp eq i64 %1365, 0\l  br i1 %1367, label %1368, label %931\l|{<s0>T|<s1>F}}"];
	Node0x59b9260:s0 -> Node0x59b8a30;
	Node0x59b9260:s1 -> Node0x59b8af0;
	Node0x59b8a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%1368:\l1368:                                             \l  %1369 = phi \<2 x i64\> [ %926, %923 ], [ %1364, %1357 ]\l  %1370 = zext i16 %920 to i32\l  %1371 = mul i32 %1, %1370\l  %1372 = add i32 %1371, %462\l  %1373 = extractelement \<2 x i64\> %1369, i64 0\l  %1374 = zext i32 %1372 to i64\l  %1375 = and i64 %1373, -227\l  %1376 = or i64 %1375, 34\l  %1377 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %7,\l... i64 noundef %1376, i64 noundef %1374, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
