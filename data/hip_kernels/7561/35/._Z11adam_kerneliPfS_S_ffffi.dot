digraph "CFG for '_Z11adam_kerneliPfS_S_ffffi' function" {
	label="CFG for '_Z11adam_kerneliPfS_S_ffffi' function";

	Node0x5abc9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !4\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !13, !invariant.load\l... !14\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  %26 = add i32 %25, %10\l  %27 = mul i32 %26, %19\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %29, %0\l  br i1 %30, label %31, label %495\l|{<s0>T|<s1>F}}"];
	Node0x5abc9d0:s0 -> Node0x5abfd70;
	Node0x5abc9d0:s1 -> Node0x5abfe00;
	Node0x5abfd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %35 = sitofp i32 %8 to float\l  %36 = tail call float @llvm.fabs.f32(float %5)\l  %37 = tail call float @llvm.amdgcn.frexp.mant.f32(float %36)\l  %38 = fcmp olt float %37, 0x3FE5555560000000\l  %39 = zext i1 %38 to i32\l  %40 = tail call float @llvm.amdgcn.ldexp.f32(float %37, i32 %39)\l  %41 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %36)\l  %42 = sub nsw i32 %41, %39\l  %43 = fadd float %40, -1.000000e+00\l  %44 = fadd float %40, 1.000000e+00\l  %45 = fadd float %44, -1.000000e+00\l  %46 = fsub float %40, %45\l  %47 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %48 = fmul float %43, %47\l  %49 = fmul float %44, %48\l  %50 = fneg float %49\l  %51 = tail call float @llvm.fma.f32(float %48, float %44, float %50)\l  %52 = tail call float @llvm.fma.f32(float %48, float %46, float %51)\l  %53 = fadd float %49, %52\l  %54 = fsub float %53, %49\l  %55 = fsub float %52, %54\l  %56 = fsub float %43, %53\l  %57 = fsub float %43, %56\l  %58 = fsub float %57, %53\l  %59 = fsub float %58, %55\l  %60 = fadd float %56, %59\l  %61 = fmul float %47, %60\l  %62 = fadd float %48, %61\l  %63 = fsub float %62, %48\l  %64 = fsub float %61, %63\l  %65 = fmul float %62, %62\l  %66 = fneg float %65\l  %67 = tail call float @llvm.fma.f32(float %62, float %62, float %66)\l  %68 = fmul float %64, 2.000000e+00\l  %69 = tail call float @llvm.fma.f32(float %62, float %68, float %67)\l  %70 = fadd float %65, %69\l  %71 = fsub float %70, %65\l  %72 = fsub float %69, %71\l  %73 = tail call float @llvm.fmuladd.f32(float %70, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %70, float %73, float\l... 0x3FD999BDE0000000)\l  %75 = sitofp i32 %42 to float\l  %76 = fmul float %75, 0x3FE62E4300000000\l  %77 = fneg float %76\l  %78 = tail call float @llvm.fma.f32(float %75, float 0x3FE62E4300000000,\l... float %77)\l  %79 = tail call float @llvm.fma.f32(float %75, float 0xBE205C6100000000,\l... float %78)\l  %80 = fadd float %76, %79\l  %81 = fsub float %80, %76\l  %82 = fsub float %79, %81\l  %83 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %84 = fmul float %62, %70\l  %85 = fneg float %84\l  %86 = tail call float @llvm.fma.f32(float %70, float %62, float %85)\l  %87 = tail call float @llvm.fma.f32(float %70, float %64, float %86)\l  %88 = tail call float @llvm.fma.f32(float %72, float %62, float %87)\l  %89 = fadd float %84, %88\l  %90 = fsub float %89, %84\l  %91 = fsub float %88, %90\l  %92 = fmul float %70, %74\l  %93 = fneg float %92\l  %94 = tail call float @llvm.fma.f32(float %70, float %74, float %93)\l  %95 = tail call float @llvm.fma.f32(float %72, float %74, float %94)\l  %96 = fadd float %92, %95\l  %97 = fsub float %96, %92\l  %98 = fsub float %95, %97\l  %99 = fadd float %96, 0x3FE5555540000000\l  %100 = fadd float %99, 0xBFE5555540000000\l  %101 = fsub float %96, %100\l  %102 = fadd float %98, 0x3E2E720200000000\l  %103 = fadd float %102, %101\l  %104 = fadd float %99, %103\l  %105 = fsub float %104, %99\l  %106 = fsub float %103, %105\l  %107 = fmul float %89, %104\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %89, float %104, float %108)\l  %110 = tail call float @llvm.fma.f32(float %89, float %106, float %109)\l  %111 = tail call float @llvm.fma.f32(float %91, float %104, float %110)\l  %112 = tail call float @llvm.amdgcn.ldexp.f32(float %64, i32 1)\l  %113 = fadd float %107, %111\l  %114 = fsub float %113, %107\l  %115 = fsub float %111, %114\l  %116 = fadd float %83, %113\l  %117 = fsub float %116, %83\l  %118 = fsub float %113, %117\l  %119 = fadd float %112, %115\l  %120 = fadd float %119, %118\l  %121 = fadd float %116, %120\l  %122 = fsub float %121, %116\l  %123 = fsub float %120, %122\l  %124 = fadd float %80, %121\l  %125 = fsub float %124, %80\l  %126 = fsub float %124, %125\l  %127 = fsub float %80, %126\l  %128 = fsub float %121, %125\l  %129 = fadd float %128, %127\l  %130 = fadd float %82, %123\l  %131 = fsub float %130, %82\l  %132 = fsub float %130, %131\l  %133 = fsub float %82, %132\l  %134 = fsub float %123, %131\l  %135 = fadd float %134, %133\l  %136 = fadd float %130, %129\l  %137 = fadd float %124, %136\l  %138 = fsub float %137, %124\l  %139 = fsub float %136, %138\l  %140 = fadd float %135, %139\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = fmul float %141, %35\l  %145 = fneg float %144\l  %146 = tail call float @llvm.fma.f32(float %35, float %141, float %145)\l  %147 = tail call float @llvm.fma.f32(float %35, float %143, float %146)\l  %148 = fadd float %144, %147\l  %149 = tail call float @llvm.fabs.f32(float %144) #3\l  %150 = fcmp oeq float %149, 0x7FF0000000000000\l  %151 = select i1 %150, float %144, float %148\l  %152 = fcmp oeq float %151, 0x40562E4300000000\l  %153 = select i1 %152, float 0x3EE0000000000000, float 0.000000e+00\l  %154 = fsub float %151, %153\l  %155 = fmul float %154, 0x3FF7154760000000\l  %156 = tail call float @llvm.rint.f32(float %155)\l  %157 = fcmp ogt float %154, 0x40562E4300000000\l  %158 = fcmp olt float %154, 0xC059D1DA00000000\l  %159 = fneg float %155\l  %160 = tail call float @llvm.fma.f32(float %154, float 0x3FF7154760000000,\l... float %159)\l  %161 = tail call float @llvm.fma.f32(float %154, float 0x3E54AE0BE0000000,\l... float %160)\l  %162 = fsub float %155, %156\l  %163 = fadd float %161, %162\l  %164 = tail call float @llvm.exp2.f32(float %163)\l  %165 = fptosi float %156 to i32\l  %166 = tail call float @llvm.amdgcn.ldexp.f32(float %164, i32 %165)\l  %167 = select i1 %158, float 0.000000e+00, float %166\l  %168 = select i1 %157, float 0x7FF0000000000000, float %167\l  %169 = tail call float @llvm.fabs.f32(float %35)\l  %170 = tail call float @llvm.trunc.f32(float %169)\l  %171 = fcmp oeq float %169, %170\l  %172 = zext i1 %171 to i32\l  %173 = fmul float %170, 5.000000e-01\l  %174 = tail call float @llvm.amdgcn.fract.f32(float %173)\l  %175 = tail call i1 @llvm.amdgcn.class.f32(float %173, i32 516)\l  %176 = select i1 %175, float 0.000000e+00, float %174\l  %177 = fcmp oeq float %176, 0.000000e+00\l  %178 = and i1 %171, %177\l  %179 = zext i1 %178 to i32\l  %180 = add nuw nsw i32 %179, %172\l  %181 = icmp eq i32 %180, 1\l  %182 = icmp ne i32 %180, 0\l  %183 = fcmp oeq float %169, 0x7FF0000000000000\l  br i1 %183, label %184, label %239\l|{<s0>T|<s1>F}}"];
	Node0x5abfd70:s0 -> Node0x5ac9330;
	Node0x5abfd70:s1 -> Node0x5ac93c0;
	Node0x5ac9330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%184:\l184:                                              \l  %185 = fcmp oeq float %36, 1.000000e+00\l  %186 = fadd float %36, -1.000000e+00\l  %187 = bitcast float %35 to i32\l  %188 = bitcast float %186 to i32\l  %189 = xor i32 %187, %188\l  %190 = icmp sgt i32 %189, -1\l  %191 = select i1 %190, float 0x7FF0000000000000, float 0.000000e+00\l  %192 = select i1 %185, float %36, float %191\l  %193 = fcmp oeq float %36, 0x7FF0000000000000\l  %194 = fcmp oeq float %5, 0.000000e+00\l  %195 = or i1 %194, %193\l  %196 = icmp slt i32 %8, 0\l  %197 = xor i1 %194, %196\l  %198 = select i1 %197, float 0.000000e+00, float 0x7FF0000000000000\l  %199 = select i1 %181, float %5, float 0.000000e+00\l  %200 = tail call float @llvm.copysign.f32(float %198, float %199)\l  %201 = select i1 %195, float %200, float %192\l  %202 = fcmp uno float %5, 0.000000e+00\l  %203 = fcmp oeq float %5, 1.000000e+00\l  %204 = icmp eq i32 %8, 0\l  %205 = or i1 %203, %204\l  %206 = fsub contract float 1.000000e+00, %201\l  %207 = select i1 %202, float 0x7FF8000000000000, float %206\l  %208 = select i1 %205, float 0.000000e+00, float %207\l  %209 = fcmp olt float %208, 0x39F0000000000000\l  %210 = select i1 %209, float 0x41F0000000000000, float 1.000000e+00\l  %211 = fmul float %208, %210\l  %212 = tail call float @llvm.sqrt.f32(float %211)\l  %213 = bitcast float %212 to i32\l  %214 = add nsw i32 %213, -1\l  %215 = bitcast i32 %214 to float\l  %216 = add nsw i32 %213, 1\l  %217 = bitcast i32 %216 to float\l  %218 = tail call i1 @llvm.amdgcn.class.f32(float %211, i32 608)\l  %219 = select i1 %209, float 0x3EF0000000000000, float 1.000000e+00\l  %220 = fneg float %217\l  %221 = tail call float @llvm.fma.f32(float %220, float %212, float %211)\l  %222 = fcmp ogt float %221, 0.000000e+00\l  %223 = fneg float %215\l  %224 = tail call float @llvm.fma.f32(float %223, float %212, float %211)\l  %225 = fcmp ole float %224, 0.000000e+00\l  %226 = select i1 %225, float %215, float %212\l  %227 = select i1 %222, float %217, float %226\l  %228 = fmul float %219, %227\l  %229 = select i1 %218, float %211, float %228\l  %230 = tail call float @llvm.fabs.f32(float %4)\l  %231 = fcmp oeq float %230, 1.000000e+00\l  %232 = fadd float %230, -1.000000e+00\l  %233 = bitcast float %35 to i32\l  %234 = bitcast float %232 to i32\l  %235 = xor i32 %233, %234\l  %236 = icmp sgt i32 %235, -1\l  %237 = select i1 %236, float 0x7FF0000000000000, float 0.000000e+00\l  %238 = select i1 %231, float %230, float %237\l  br label %444\l}"];
	Node0x5ac9330 -> Node0x5acbb00;
	Node0x5ac93c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%239:\l239:                                              \l  %240 = fcmp uge float %5, 0.000000e+00\l  %241 = select i1 %240, i1 true, i1 %182\l  %242 = tail call float @llvm.fabs.f32(float %168) #3\l  %243 = fcmp oeq float %242, 0x7FF0000000000000\l  %244 = tail call float @llvm.fabs.f32(float %151) #3\l  %245 = fcmp oeq float %244, 0x7FF0000000000000\l  %246 = fsub float %148, %144\l  %247 = fsub float %147, %246\l  %248 = select i1 %245, float 0.000000e+00, float %247\l  %249 = fadd float %153, %248\l  %250 = tail call float @llvm.fma.f32(float %168, float %249, float %168)\l  %251 = select i1 %243, float %168, float %250\l  %252 = fcmp olt float %5, 0.000000e+00\l  %253 = and i1 %252, %181\l  %254 = select i1 %253, float -0.000000e+00, float 0.000000e+00\l  %255 = tail call float @llvm.copysign.f32(float %251, float %254)\l  %256 = select i1 %241, float %255, float 0x7FF8000000000000\l  %257 = fcmp oeq float %36, 0x7FF0000000000000\l  %258 = fcmp oeq float %5, 0.000000e+00\l  %259 = or i1 %258, %257\l  %260 = icmp slt i32 %8, 0\l  %261 = xor i1 %258, %260\l  %262 = select i1 %261, float 0.000000e+00, float 0x7FF0000000000000\l  %263 = select i1 %181, float %5, float 0.000000e+00\l  %264 = tail call float @llvm.copysign.f32(float %262, float %263)\l  %265 = select i1 %259, float %264, float %256\l  %266 = fcmp uno float %5, 0.000000e+00\l  %267 = fcmp oeq float %5, 1.000000e+00\l  %268 = icmp eq i32 %8, 0\l  %269 = or i1 %267, %268\l  %270 = fsub contract float 1.000000e+00, %265\l  %271 = select i1 %266, float 0x7FF8000000000000, float %270\l  %272 = select i1 %269, float 0.000000e+00, float %271\l  %273 = fcmp olt float %272, 0x39F0000000000000\l  %274 = select i1 %273, float 0x41F0000000000000, float 1.000000e+00\l  %275 = fmul float %272, %274\l  %276 = tail call float @llvm.sqrt.f32(float %275)\l  %277 = bitcast float %276 to i32\l  %278 = add nsw i32 %277, -1\l  %279 = bitcast i32 %278 to float\l  %280 = add nsw i32 %277, 1\l  %281 = bitcast i32 %280 to float\l  %282 = tail call i1 @llvm.amdgcn.class.f32(float %275, i32 608)\l  %283 = select i1 %273, float 0x3EF0000000000000, float 1.000000e+00\l  %284 = fneg float %281\l  %285 = tail call float @llvm.fma.f32(float %284, float %276, float %275)\l  %286 = fcmp ogt float %285, 0.000000e+00\l  %287 = fneg float %279\l  %288 = tail call float @llvm.fma.f32(float %287, float %276, float %275)\l  %289 = fcmp ole float %288, 0.000000e+00\l  %290 = select i1 %289, float %279, float %276\l  %291 = select i1 %286, float %281, float %290\l  %292 = fmul float %283, %291\l  %293 = select i1 %282, float %275, float %292\l  %294 = tail call float @llvm.fabs.f32(float %4)\l  %295 = tail call float @llvm.amdgcn.frexp.mant.f32(float %294)\l  %296 = fcmp olt float %295, 0x3FE5555560000000\l  %297 = zext i1 %296 to i32\l  %298 = tail call float @llvm.amdgcn.ldexp.f32(float %295, i32 %297)\l  %299 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %294)\l  %300 = sub nsw i32 %299, %297\l  %301 = fadd float %298, -1.000000e+00\l  %302 = fadd float %298, 1.000000e+00\l  %303 = fadd float %302, -1.000000e+00\l  %304 = fsub float %298, %303\l  %305 = tail call float @llvm.amdgcn.rcp.f32(float %302)\l  %306 = fmul float %301, %305\l  %307 = fmul float %302, %306\l  %308 = fneg float %307\l  %309 = tail call float @llvm.fma.f32(float %306, float %302, float %308)\l  %310 = tail call float @llvm.fma.f32(float %306, float %304, float %309)\l  %311 = fadd float %307, %310\l  %312 = fsub float %311, %307\l  %313 = fsub float %310, %312\l  %314 = fsub float %301, %311\l  %315 = fsub float %301, %314\l  %316 = fsub float %315, %311\l  %317 = fsub float %316, %313\l  %318 = fadd float %314, %317\l  %319 = fmul float %305, %318\l  %320 = fadd float %306, %319\l  %321 = fsub float %320, %306\l  %322 = fsub float %319, %321\l  %323 = fmul float %320, %320\l  %324 = fneg float %323\l  %325 = tail call float @llvm.fma.f32(float %320, float %320, float %324)\l  %326 = fmul float %322, 2.000000e+00\l  %327 = tail call float @llvm.fma.f32(float %320, float %326, float %325)\l  %328 = fadd float %323, %327\l  %329 = fsub float %328, %323\l  %330 = fsub float %327, %329\l  %331 = tail call float @llvm.fmuladd.f32(float %328, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %332 = tail call float @llvm.fmuladd.f32(float %328, float %331, float\l... 0x3FD999BDE0000000)\l  %333 = sitofp i32 %300 to float\l  %334 = fmul float %333, 0x3FE62E4300000000\l  %335 = fneg float %334\l  %336 = tail call float @llvm.fma.f32(float %333, float 0x3FE62E4300000000,\l... float %335)\l  %337 = tail call float @llvm.fma.f32(float %333, float 0xBE205C6100000000,\l... float %336)\l  %338 = fadd float %334, %337\l  %339 = fsub float %338, %334\l  %340 = fsub float %337, %339\l  %341 = tail call float @llvm.amdgcn.ldexp.f32(float %320, i32 1)\l  %342 = fmul float %320, %328\l  %343 = fneg float %342\l  %344 = tail call float @llvm.fma.f32(float %328, float %320, float %343)\l  %345 = tail call float @llvm.fma.f32(float %328, float %322, float %344)\l  %346 = tail call float @llvm.fma.f32(float %330, float %320, float %345)\l  %347 = fadd float %342, %346\l  %348 = fsub float %347, %342\l  %349 = fsub float %346, %348\l  %350 = fmul float %328, %332\l  %351 = fneg float %350\l  %352 = tail call float @llvm.fma.f32(float %328, float %332, float %351)\l  %353 = tail call float @llvm.fma.f32(float %330, float %332, float %352)\l  %354 = fadd float %350, %353\l  %355 = fsub float %354, %350\l  %356 = fsub float %353, %355\l  %357 = fadd float %354, 0x3FE5555540000000\l  %358 = fadd float %357, 0xBFE5555540000000\l  %359 = fsub float %354, %358\l  %360 = fadd float %356, 0x3E2E720200000000\l  %361 = fadd float %360, %359\l  %362 = fadd float %357, %361\l  %363 = fsub float %362, %357\l  %364 = fsub float %361, %363\l  %365 = fmul float %347, %362\l  %366 = fneg float %365\l  %367 = tail call float @llvm.fma.f32(float %347, float %362, float %366)\l  %368 = tail call float @llvm.fma.f32(float %347, float %364, float %367)\l  %369 = tail call float @llvm.fma.f32(float %349, float %362, float %368)\l  %370 = tail call float @llvm.amdgcn.ldexp.f32(float %322, i32 1)\l  %371 = fadd float %365, %369\l  %372 = fsub float %371, %365\l  %373 = fsub float %369, %372\l  %374 = fadd float %341, %371\l  %375 = fsub float %374, %341\l  %376 = fsub float %371, %375\l  %377 = fadd float %370, %373\l  %378 = fadd float %377, %376\l  %379 = fadd float %374, %378\l  %380 = fsub float %379, %374\l  %381 = fsub float %378, %380\l  %382 = fadd float %338, %379\l  %383 = fsub float %382, %338\l  %384 = fsub float %382, %383\l  %385 = fsub float %338, %384\l  %386 = fsub float %379, %383\l  %387 = fadd float %386, %385\l  %388 = fadd float %340, %381\l  %389 = fsub float %388, %340\l  %390 = fsub float %388, %389\l  %391 = fsub float %340, %390\l  %392 = fsub float %381, %389\l  %393 = fadd float %392, %391\l  %394 = fadd float %388, %387\l  %395 = fadd float %382, %394\l  %396 = fsub float %395, %382\l  %397 = fsub float %394, %396\l  %398 = fadd float %393, %397\l  %399 = fadd float %395, %398\l  %400 = fsub float %399, %395\l  %401 = fsub float %398, %400\l  %402 = fmul float %399, %35\l  %403 = fneg float %402\l  %404 = tail call float @llvm.fma.f32(float %35, float %399, float %403)\l  %405 = tail call float @llvm.fma.f32(float %35, float %401, float %404)\l  %406 = fadd float %402, %405\l  %407 = fsub float %406, %402\l  %408 = fsub float %405, %407\l  %409 = tail call float @llvm.fabs.f32(float %402) #3\l  %410 = fcmp oeq float %409, 0x7FF0000000000000\l  %411 = select i1 %410, float %402, float %406\l  %412 = tail call float @llvm.fabs.f32(float %411) #3\l  %413 = fcmp oeq float %412, 0x7FF0000000000000\l  %414 = select i1 %413, float 0.000000e+00, float %408\l  %415 = fcmp oeq float %411, 0x40562E4300000000\l  %416 = select i1 %415, float 0x3EE0000000000000, float 0.000000e+00\l  %417 = fsub float %411, %416\l  %418 = fadd float %416, %414\l  %419 = fmul float %417, 0x3FF7154760000000\l  %420 = tail call float @llvm.rint.f32(float %419)\l  %421 = fcmp ogt float %417, 0x40562E4300000000\l  %422 = fcmp olt float %417, 0xC059D1DA00000000\l  %423 = fneg float %419\l  %424 = tail call float @llvm.fma.f32(float %417, float 0x3FF7154760000000,\l... float %423)\l  %425 = tail call float @llvm.fma.f32(float %417, float 0x3E54AE0BE0000000,\l... float %424)\l  %426 = fsub float %419, %420\l  %427 = fadd float %425, %426\l  %428 = tail call float @llvm.exp2.f32(float %427)\l  %429 = fptosi float %420 to i32\l  %430 = tail call float @llvm.amdgcn.ldexp.f32(float %428, i32 %429)\l  %431 = select i1 %422, float 0.000000e+00, float %430\l  %432 = select i1 %421, float 0x7FF0000000000000, float %431\l  %433 = tail call float @llvm.fma.f32(float %432, float %418, float %432)\l  %434 = tail call float @llvm.fabs.f32(float %432) #3\l  %435 = fcmp oeq float %434, 0x7FF0000000000000\l  %436 = select i1 %435, float %432, float %433\l  %437 = fcmp olt float %4, 0.000000e+00\l  %438 = and i1 %437, %181\l  %439 = select i1 %438, float -0.000000e+00, float 0.000000e+00\l  %440 = tail call float @llvm.copysign.f32(float %436, float %439)\l  %441 = fcmp uge float %4, 0.000000e+00\l  %442 = select i1 %441, i1 true, i1 %182\l  %443 = select i1 %442, float %440, float 0x7FF8000000000000\l  br label %444\l}"];
	Node0x5ac93c0 -> Node0x5acbb00;
	Node0x5acbb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%444:\l444:                                              \l  %445 = phi float [ %294, %239 ], [ %230, %184 ]\l  %446 = phi float [ %293, %239 ], [ %229, %184 ]\l  %447 = phi i1 [ %268, %239 ], [ %204, %184 ]\l  %448 = phi i1 [ %260, %239 ], [ %196, %184 ]\l  %449 = phi float [ %443, %239 ], [ %238, %184 ]\l  %450 = fmul contract float %446, %6\l  %451 = fcmp oeq float %445, 0x7FF0000000000000\l  %452 = fcmp oeq float %4, 0.000000e+00\l  %453 = or i1 %452, %451\l  %454 = xor i1 %452, %448\l  %455 = select i1 %454, float 0.000000e+00, float 0x7FF0000000000000\l  %456 = select i1 %181, float %4, float 0.000000e+00\l  %457 = tail call float @llvm.copysign.f32(float %455, float %456)\l  %458 = select i1 %453, float %457, float %449\l  %459 = fcmp uno float %4, 0.000000e+00\l  %460 = fcmp oeq float %4, 1.000000e+00\l  %461 = or i1 %460, %447\l  %462 = fsub contract float 1.000000e+00, %458\l  %463 = select i1 %459, float 0x7FF8000000000000, float %462\l  %464 = select i1 %461, float 0.000000e+00, float %463\l  %465 = fdiv contract float %450, %464\l  %466 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %467 = load float, float addrspace(1)* %466, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %468 = fmul contract float %467, %465\l  %469 = getelementptr inbounds float, float addrspace(1)* %3, i64 %32\l  %470 = load float, float addrspace(1)* %469, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %471 = fcmp olt float %470, 0x39F0000000000000\l  %472 = select i1 %471, float 0x41F0000000000000, float 1.000000e+00\l  %473 = fmul float %470, %472\l  %474 = tail call float @llvm.sqrt.f32(float %473)\l  %475 = bitcast float %474 to i32\l  %476 = add nsw i32 %475, -1\l  %477 = bitcast i32 %476 to float\l  %478 = add nsw i32 %475, 1\l  %479 = bitcast i32 %478 to float\l  %480 = tail call i1 @llvm.amdgcn.class.f32(float %473, i32 608)\l  %481 = select i1 %471, float 0x3EF0000000000000, float 1.000000e+00\l  %482 = fneg float %479\l  %483 = tail call float @llvm.fma.f32(float %482, float %474, float %473)\l  %484 = fcmp ogt float %483, 0.000000e+00\l  %485 = fneg float %477\l  %486 = tail call float @llvm.fma.f32(float %485, float %474, float %473)\l  %487 = fcmp ole float %486, 0.000000e+00\l  %488 = select i1 %487, float %477, float %474\l  %489 = select i1 %484, float %479, float %488\l  %490 = fmul float %481, %489\l  %491 = select i1 %480, float %473, float %490\l  %492 = fadd contract float %491, %7\l  %493 = fdiv contract float %468, %492\l  %494 = fsub contract float %34, %493\l  store float %494, float addrspace(1)* %33, align 4, !tbaa !16\l  br label %495\l}"];
	Node0x5acbb00 -> Node0x5abfe00;
	Node0x5abfe00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%495:\l495:                                              \l  ret void\l}"];
}
