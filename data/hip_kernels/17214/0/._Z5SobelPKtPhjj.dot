digraph "CFG for '_Z5SobelPKtPhjj' function" {
	label="CFG for '_Z5SobelPKtPhjj' function";

	Node0x4adc490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = shl i32 %5, 3\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add nsw i32 %7, -2\l  %9 = add i32 %8, %6\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = shl i32 %10, 3\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %13 = add nsw i32 %12, -2\l  %14 = add i32 %13, %11\l  %15 = mul i32 %14, %2\l  %16 = add i32 %15, %9\l  %17 = mul nuw nsw i32 %12, 12\l  %18 = add nuw nsw i32 %17, %7\l  %19 = shl i32 %16, 2\l  %20 = icmp ult i32 %9, %2\l  %21 = icmp ult i32 %14, %3\l  %22 = select i1 %20, i1 %21, i1 false\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4adc490:s0 -> Node0x4adee20;
	Node0x4adc490:s1 -> Node0x4adeeb0;
	Node0x4adee20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%23:\l23:                                               \l  %24 = zext i32 %16 to i64\l  %25 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %24\l  %26 = load i16, i16 addrspace(1)* %25, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %27 = uitofp i16 %26 to float\l  %28 = fdiv contract float %27, 6.553500e+04\l  br label %29\l}"];
	Node0x4adee20 -> Node0x4adeeb0;
	Node0x4adeeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi float [ %28, %23 ], [ 0.000000e+00, %4 ]\l  %31 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %18\l  store float %30, float addrspace(3)* %31, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp ult i32 %8, 8\l  %33 = icmp ult i32 %13, 8\l  %34 = select i1 %32, i1 %33, i1 false\l  br i1 %34, label %35, label %237\l|{<s0>T|<s1>F}}"];
	Node0x4adeeb0:s0 -> Node0x4adea20;
	Node0x4adeeb0:s1 -> Node0x4ae08c0;
	Node0x4adea20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = add nsw i32 %18, -24\l  %37 = add nsw i32 %18, -26\l  %38 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %37\l  %39 = load float, float addrspace(3)* %38, align 4, !tbaa !10\l  %40 = fneg contract float %39\l  %41 = add nsw i32 %18, -25\l  %42 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %41\l  %43 = load float, float addrspace(3)* %42, align 4, !tbaa !10\l  %44 = fmul contract float %43, 2.000000e+00\l  %45 = fsub contract float %40, %44\l  %46 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %36\l  %47 = load float, float addrspace(3)* %46, align 4, !tbaa !10\l  %48 = fmul contract float %47, 0.000000e+00\l  %49 = fadd contract float %45, %48\l  %50 = add nsw i32 %18, -23\l  %51 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %50\l  %52 = load float, float addrspace(3)* %51, align 4, !tbaa !10\l  %53 = fmul contract float %52, 2.000000e+00\l  %54 = fadd contract float %49, %53\l  %55 = add nsw i32 %18, -22\l  %56 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %55\l  %57 = load float, float addrspace(3)* %56, align 4, !tbaa !10\l  %58 = fadd contract float %57, %54\l  %59 = add nsw i32 %18, -12\l  %60 = add nsw i32 %18, -14\l  %61 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %60\l  %62 = load float, float addrspace(3)* %61, align 4, !tbaa !10\l  %63 = fsub contract float %58, %62\l  %64 = add nsw i32 %18, -13\l  %65 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %64\l  %66 = load float, float addrspace(3)* %65, align 4, !tbaa !10\l  %67 = fmul contract float %66, 2.000000e+00\l  %68 = fsub contract float %63, %67\l  %69 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %59\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !10\l  %71 = fmul contract float %70, 0.000000e+00\l  %72 = fadd contract float %68, %71\l  %73 = add nsw i32 %18, -11\l  %74 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %73\l  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !10\l  %76 = fmul contract float %75, 2.000000e+00\l  %77 = fadd contract float %72, %76\l  %78 = add nsw i32 %18, -10\l  %79 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %78\l  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !10\l  %81 = fadd contract float %80, %77\l  %82 = add nsw i32 %18, -2\l  %83 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %82\l  %84 = load float, float addrspace(3)* %83, align 4, !tbaa !10\l  %85 = fmul contract float %84, 2.000000e+00\l  %86 = fsub contract float %81, %85\l  %87 = add nsw i32 %18, -1\l  %88 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %87\l  %89 = load float, float addrspace(3)* %88, align 4, !tbaa !10\l  %90 = fmul contract float %89, 4.000000e+00\l  %91 = fsub contract float %86, %90\l  %92 = load float, float addrspace(3)* %31, align 4, !tbaa !10\l  %93 = fmul contract float %92, 0.000000e+00\l  %94 = fadd contract float %91, %93\l  %95 = add nuw nsw i32 %18, 1\l  %96 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %95\l  %97 = load float, float addrspace(3)* %96, align 4, !tbaa !10\l  %98 = fmul contract float %97, 4.000000e+00\l  %99 = fadd contract float %94, %98\l  %100 = add nuw nsw i32 %18, 2\l  %101 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %100\l  %102 = load float, float addrspace(3)* %101, align 4, !tbaa !10\l  %103 = fmul contract float %102, 2.000000e+00\l  %104 = fadd contract float %99, %103\l  %105 = add nuw nsw i32 %18, 12\l  %106 = add nuw nsw i32 %18, 10\l  %107 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %106\l  %108 = load float, float addrspace(3)* %107, align 4, !tbaa !10\l  %109 = fsub contract float %104, %108\l  %110 = add nuw nsw i32 %18, 11\l  %111 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %110\l  %112 = load float, float addrspace(3)* %111, align 4, !tbaa !10\l  %113 = fmul contract float %112, 2.000000e+00\l  %114 = fsub contract float %109, %113\l  %115 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %105\l  %116 = load float, float addrspace(3)* %115, align 4, !tbaa !10\l  %117 = fmul contract float %116, 0.000000e+00\l  %118 = fadd contract float %114, %117\l  %119 = add nuw nsw i32 %18, 13\l  %120 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %119\l  %121 = load float, float addrspace(3)* %120, align 4, !tbaa !10\l  %122 = fmul contract float %121, 2.000000e+00\l  %123 = fadd contract float %118, %122\l  %124 = add nuw nsw i32 %18, 14\l  %125 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %124\l  %126 = load float, float addrspace(3)* %125, align 4, !tbaa !10\l  %127 = fadd contract float %126, %123\l  %128 = add nuw nsw i32 %18, 24\l  %129 = add nuw nsw i32 %18, 22\l  %130 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %129\l  %131 = load float, float addrspace(3)* %130, align 4, !tbaa !10\l  %132 = fsub contract float %127, %131\l  %133 = add nuw nsw i32 %18, 23\l  %134 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %133\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !10\l  %136 = fmul contract float %135, 2.000000e+00\l  %137 = fsub contract float %132, %136\l  %138 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %128\l  %139 = load float, float addrspace(3)* %138, align 4, !tbaa !10\l  %140 = fmul contract float %139, 0.000000e+00\l  %141 = fadd contract float %137, %140\l  %142 = add nuw nsw i32 %18, 25\l  %143 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %142\l  %144 = load float, float addrspace(3)* %143, align 4, !tbaa !10\l  %145 = fmul contract float %144, 2.000000e+00\l  %146 = fadd contract float %141, %145\l  %147 = add nuw nsw i32 %18, 26\l  %148 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s, i32\l... 0, i32 %147\l  %149 = load float, float addrspace(3)* %148, align 4, !tbaa !10\l  %150 = fadd contract float %149, %146\l  %151 = fmul contract float %150, 6.400000e+01\l  %152 = fdiv contract float %151, 1.800000e+01\l  %153 = fadd contract float %39, %43\l  %154 = fmul contract float %47, 2.000000e+00\l  %155 = fadd contract float %153, %154\l  %156 = fadd contract float %52, %155\l  %157 = fadd contract float %57, %156\l  %158 = fmul contract float %62, 2.000000e+00\l  %159 = fadd contract float %157, %158\l  %160 = fadd contract float %159, %67\l  %161 = fmul contract float %70, 4.000000e+00\l  %162 = fadd contract float %160, %161\l  %163 = fadd contract float %162, %76\l  %164 = fmul contract float %80, 2.000000e+00\l  %165 = fadd contract float %163, %164\l  %166 = fmul contract float %84, 0.000000e+00\l  %167 = fadd contract float %165, %166\l  %168 = fmul contract float %89, 0.000000e+00\l  %169 = fadd contract float %167, %168\l  %170 = fadd contract float %169, %93\l  %171 = fmul contract float %97, 0.000000e+00\l  %172 = fadd contract float %170, %171\l  %173 = fmul contract float %102, 0.000000e+00\l  %174 = fadd contract float %172, %173\l  %175 = fmul contract float %108, 2.000000e+00\l  %176 = fsub contract float %174, %175\l  %177 = fsub contract float %176, %113\l  %178 = fmul contract float %116, 4.000000e+00\l  %179 = fsub contract float %177, %178\l  %180 = fsub contract float %179, %122\l  %181 = fmul contract float %126, 2.000000e+00\l  %182 = fsub contract float %180, %181\l  %183 = fsub contract float %182, %131\l  %184 = fsub contract float %183, %135\l  %185 = fmul contract float %139, 2.000000e+00\l  %186 = fsub contract float %184, %185\l  %187 = fsub contract float %186, %144\l  %188 = fsub contract float %187, %149\l  %189 = fmul contract float %188, 6.400000e+01\l  %190 = fdiv contract float %189, 1.800000e+01\l  %191 = fmul contract float %152, %152\l  %192 = fmul contract float %190, %190\l  %193 = fadd contract float %191, %192\l  %194 = fadd contract float %193, 1.000000e+00\l  %195 = fcmp olt float %194, 0x39F0000000000000\l  %196 = select i1 %195, float 0x41F0000000000000, float 1.000000e+00\l  %197 = fmul float %194, %196\l  %198 = tail call float @llvm.sqrt.f32(float %197)\l  %199 = bitcast float %198 to i32\l  %200 = add nsw i32 %199, -1\l  %201 = bitcast i32 %200 to float\l  %202 = add nsw i32 %199, 1\l  %203 = bitcast i32 %202 to float\l  %204 = tail call i1 @llvm.amdgcn.class.f32(float %197, i32 608)\l  %205 = select i1 %195, float 0x3EF0000000000000, float 1.000000e+00\l  %206 = fneg float %203\l  %207 = tail call float @llvm.fma.f32(float %206, float %198, float %197)\l  %208 = fcmp ogt float %207, 0.000000e+00\l  %209 = fneg float %201\l  %210 = tail call float @llvm.fma.f32(float %209, float %198, float %197)\l  %211 = fcmp ole float %210, 0.000000e+00\l  %212 = select i1 %211, float %201, float %198\l  %213 = select i1 %208, float %203, float %212\l  %214 = fmul float %205, %213\l  %215 = select i1 %204, float %197, float %214\l  %216 = fmul contract float %152, 1.280000e+02\l  %217 = fdiv contract float %216, %215\l  %218 = fsub contract float 1.280000e+02, %217\l  %219 = fptoui float %218 to i8\l  %220 = fmul contract float %190, 1.280000e+02\l  %221 = fdiv contract float %220, %215\l  %222 = fsub contract float 1.280000e+02, %221\l  %223 = fptoui float %222 to i8\l  %224 = fdiv contract float 2.550000e+02, %215\l  %225 = fptoui float %224 to i8\l  %226 = add nuw nsw i32 %19, 1\l  %227 = zext i32 %19 to i64\l  %228 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %227\l  store i8 %219, i8 addrspace(1)* %228, align 1, !tbaa !12\l  %229 = add nuw nsw i32 %19, 2\l  %230 = zext i32 %226 to i64\l  %231 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %230\l  store i8 %223, i8 addrspace(1)* %231, align 1, !tbaa !12\l  %232 = add nuw nsw i32 %19, 3\l  %233 = zext i32 %229 to i64\l  %234 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %233\l  store i8 %225, i8 addrspace(1)* %234, align 1, !tbaa !12\l  %235 = zext i32 %232 to i64\l  %236 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %235\l  store i8 -1, i8 addrspace(1)* %236, align 1, !tbaa !12\l  br label %237\l}"];
	Node0x4adea20 -> Node0x4ae08c0;
	Node0x4ae08c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%237:\l237:                                              \l  ret void\l}"];
}
