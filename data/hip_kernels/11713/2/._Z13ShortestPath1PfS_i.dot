digraph "CFG for '_Z13ShortestPath1PfS_i' function" {
	label="CFG for '_Z13ShortestPath1PfS_i' function";

	Node0x4dc3780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = mul nsw i32 %20, %2\l  %22 = icmp slt i32 %20, %2\l  %23 = icmp slt i32 %12, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4dc3780:s0 -> Node0x4dc72c0;
	Node0x4dc3780:s1 -> Node0x4dc7350;
	Node0x4dc72c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%25:\l25:                                               \l  %26 = add nsw i32 %21, %12\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  store float %29, float addrspace(1)* %30, align 4, !tbaa !7\l  %31 = icmp sgt i32 %2, 0\l  br i1 %31, label %32, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4dc72c0:s0 -> Node0x4dc8020;
	Node0x4dc72c0:s1 -> Node0x4dc7350;
	Node0x4dc8020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i32 %2, 3\l  %34 = icmp ult i32 %2, 4\l  br i1 %34, label %102, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4dc8020:s0 -> Node0x4dc8400;
	Node0x4dc8020:s1 -> Node0x4dc8450;
	Node0x4dc8450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i32 %2, -4\l  br label %37\l}"];
	Node0x4dc8450 -> Node0x4dc8650;
	Node0x4dc8650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %35 ], [ %99, %98 ]\l  %39 = phi i32 [ 0, %35 ], [ %100, %98 ]\l  %40 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %41 = add nsw i32 %38, %21\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = mul nsw i32 %38, %2\l  %46 = add nsw i32 %45, %12\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = fadd contract float %44, %49\l  %51 = fcmp contract ogt float %40, %50\l  br i1 %51, label %52, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4dc8650:s0 -> Node0x4dc9010;
	Node0x4dc8650:s1 -> Node0x4dc90a0;
	Node0x4dc9010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%52:\l52:                                               \l  store float %50, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %53\l}"];
	Node0x4dc9010 -> Node0x4dc90a0;
	Node0x4dc90a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = or i32 %38, 1\l  %55 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %56 = add nsw i32 %54, %21\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = mul nsw i32 %54, %2\l  %61 = add nsw i32 %60, %12\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fadd contract float %59, %64\l  %66 = fcmp contract ogt float %55, %65\l  br i1 %66, label %67, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4dc90a0:s0 -> Node0x4dc8280;
	Node0x4dc90a0:s1 -> Node0x4dc82d0;
	Node0x4dc8280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%67:\l67:                                               \l  store float %65, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x4dc8280 -> Node0x4dc82d0;
	Node0x4dc82d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%68:\l68:                                               \l  %69 = or i32 %38, 2\l  %70 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %71 = add nsw i32 %69, %21\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = mul nsw i32 %69, %2\l  %76 = add nsw i32 %75, %12\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = fadd contract float %74, %79\l  %81 = fcmp contract ogt float %70, %80\l  br i1 %81, label %82, label %83\l|{<s0>T|<s1>F}}"];
	Node0x4dc82d0:s0 -> Node0x4dca550;
	Node0x4dc82d0:s1 -> Node0x4dca5a0;
	Node0x4dca550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%82:\l82:                                               \l  store float %80, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %83\l}"];
	Node0x4dca550 -> Node0x4dca5a0;
	Node0x4dca5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%83:\l83:                                               \l  %84 = or i32 %38, 3\l  %85 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %86 = add nsw i32 %84, %21\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = mul nsw i32 %84, %2\l  %91 = add nsw i32 %90, %12\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = fadd contract float %89, %94\l  %96 = fcmp contract ogt float %85, %95\l  br i1 %96, label %97, label %98\l|{<s0>T|<s1>F}}"];
	Node0x4dca5a0:s0 -> Node0x4dcae70;
	Node0x4dca5a0:s1 -> Node0x4dc8740;
	Node0x4dcae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%97:\l97:                                               \l  store float %95, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %98\l}"];
	Node0x4dcae70 -> Node0x4dc8740;
	Node0x4dc8740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%98:\l98:                                               \l  %99 = add nuw nsw i32 %38, 4\l  %100 = add i32 %39, 4\l  %101 = icmp eq i32 %100, %36\l  br i1 %101, label %102, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4dc8740:s0 -> Node0x4dc8400;
	Node0x4dc8740:s1 -> Node0x4dc8650;
	Node0x4dc8400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%102:\l102:                                              \l  %103 = phi i32 [ 0, %32 ], [ %99, %98 ]\l  %104 = icmp eq i32 %33, 0\l  br i1 %104, label %125, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4dc8400:s0 -> Node0x4dc7350;
	Node0x4dc8400:s1 -> Node0x4dcb490;
	Node0x4dcb490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %122, %121 ], [ %103, %102 ]\l  %107 = phi i32 [ %123, %121 ], [ 0, %102 ]\l  %108 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %109 = add nsw i32 %106, %21\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = mul nsw i32 %106, %2\l  %114 = add nsw i32 %113, %12\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = fadd contract float %112, %117\l  %119 = fcmp contract ogt float %108, %118\l  br i1 %119, label %120, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4dcb490:s0 -> Node0x4dcbd80;
	Node0x4dcb490:s1 -> Node0x4dcb590;
	Node0x4dcbd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%120:\l120:                                              \l  store float %118, float addrspace(1)* %30, align 4, !tbaa !7\l  br label %121\l}"];
	Node0x4dcbd80 -> Node0x4dcb590;
	Node0x4dcb590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = add nuw nsw i32 %106, 1\l  %123 = add i32 %107, 1\l  %124 = icmp eq i32 %123, %33\l  br i1 %124, label %125, label %105, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4dcb590:s0 -> Node0x4dc7350;
	Node0x4dcb590:s1 -> Node0x4dcb490;
	Node0x4dc7350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%125:\l125:                                              \l  ret void\l}"];
}
