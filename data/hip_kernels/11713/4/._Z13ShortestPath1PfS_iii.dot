digraph "CFG for '_Z13ShortestPath1PfS_iii' function" {
	label="CFG for '_Z13ShortestPath1PfS_iii' function";

	Node0x5fa98b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %4, %3\l  %24 = mul nsw i32 %22, %2\l  %25 = add nsw i32 %24, %14\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  store float %28, float addrspace(1)* %29, align 4, !tbaa !7\l  %30 = add nsw i32 %4, 1\l  %31 = mul nsw i32 %30, %3\l  %32 = icmp slt i32 %23, %31\l  br i1 %32, label %33, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5fa98b0:s0 -> Node0x5fab960;
	Node0x5fa98b0:s1 -> Node0x5fab9f0;
	Node0x5fab960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %50, %49 ], [ %23, %5 ]\l  %35 = add nsw i32 %34, %24\l  %36 = sub nsw i32 %34, %23\l  %37 = mul nsw i32 %36, %2\l  %38 = add nsw i32 %37, %14\l  %39 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %40 = sext i32 %35 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = sext i32 %38 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = fadd contract float %42, %45\l  %47 = fcmp contract ogt float %39, %46\l  br i1 %47, label %48, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5fab960:s0 -> Node0x5faea70;
	Node0x5fab960:s1 -> Node0x5fae230;
	Node0x5faea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%48:\l48:                                               \l  store float %46, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x5faea70 -> Node0x5fae230;
	Node0x5fae230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = add nsw i32 %34, 1\l  %51 = icmp eq i32 %50, %31\l  br i1 %51, label %52, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5fae230:s0 -> Node0x5fab9f0;
	Node0x5fae230:s1 -> Node0x5fab960;
	Node0x5fab9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%52:\l52:                                               \l  ret void\l}"];
}
