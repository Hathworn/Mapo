digraph "CFG for '_Z13ShortestPath2PfS_i' function" {
	label="CFG for '_Z13ShortestPath2PfS_i' function";

	Node0x5fadd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = icmp slt i32 %4, %2\l  %7 = icmp slt i32 %5, %2\l  %8 = select i1 %6, i1 %7, i1 false\l  br i1 %8, label %9, label %111\l|{<s0>T|<s1>F}}"];
	Node0x5fadd00:s0 -> Node0x5fadee0;
	Node0x5fadd00:s1 -> Node0x5faf570;
	Node0x5fadee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l9:                                                \l  %10 = mul nsw i32 %4, %2\l  %11 = add nsw i32 %10, %5\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %0, i64 %12\l  %14 = load float, float addrspace(1)* %13, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %12\l  store float %14, float addrspace(1)* %15, align 4, !tbaa !5\l  %16 = load float, float addrspace(1)* %13, align 4, !tbaa !5\l  %17 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %5\l  store float %16, float addrspace(3)* %17, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = add i32 %2, -1\l  %19 = and i32 %2, 3\l  %20 = icmp ult i32 %18, 3\l  br i1 %20, label %88, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5fadee0:s0 -> Node0x5fb0ab0;
	Node0x5fadee0:s1 -> Node0x5fb0b40;
	Node0x5fb0b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %2, -4\l  br label %23\l}"];
	Node0x5fb0b40 -> Node0x5fb0d40;
	Node0x5fb0d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %85, %84 ]\l  %25 = phi i32 [ 0, %21 ], [ %86, %84 ]\l  %26 = icmp eq i32 %24, %5\l  br i1 %26, label %39, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5fb0d40:s0 -> Node0x5fb1120;
	Node0x5fb0d40:s1 -> Node0x5fb11b0;
	Node0x5fb11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%27:\l27:                                               \l  %28 = load float, float addrspace(3)* %17, align 4, !tbaa !5\l  %29 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %24\l  %30 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %31 = mul i32 %24, %2\l  %32 = add i32 %31, %5\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5\l  %36 = fadd contract float %30, %35\l  %37 = fcmp contract ogt float %28, %36\l  br i1 %37, label %38, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5fb11b0:s0 -> Node0x5fb1980;
	Node0x5fb11b0:s1 -> Node0x5fb1120;
	Node0x5fb1980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%38:\l38:                                               \l  store float %36, float addrspace(1)* %15, align 4, !tbaa !5\l  br label %39\l}"];
	Node0x5fb1980 -> Node0x5fb1120;
	Node0x5fb1120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = or i32 %24, 1\l  %41 = icmp eq i32 %40, %5\l  br i1 %41, label %54, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5fb1120:s0 -> Node0x5fb1ca0;
	Node0x5fb1120:s1 -> Node0x5fb1cf0;
	Node0x5fb1cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%42:\l42:                                               \l  %43 = load float, float addrspace(3)* %17, align 4, !tbaa !5\l  %44 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %40\l  %45 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %46 = mul i32 %40, %2\l  %47 = add i32 %46, %5\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5\l  %51 = fadd contract float %45, %50\l  %52 = fcmp contract ogt float %43, %51\l  br i1 %52, label %53, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5fb1cf0:s0 -> Node0x5fb2380;
	Node0x5fb1cf0:s1 -> Node0x5fb1ca0;
	Node0x5fb2380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%53:\l53:                                               \l  store float %51, float addrspace(1)* %15, align 4, !tbaa !5\l  br label %54\l}"];
	Node0x5fb2380 -> Node0x5fb1ca0;
	Node0x5fb1ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%54:\l54:                                               \l  %55 = or i32 %24, 2\l  %56 = icmp eq i32 %55, %5\l  br i1 %56, label %69, label %57\l|{<s0>T|<s1>F}}"];
	Node0x5fb1ca0:s0 -> Node0x5fb26a0;
	Node0x5fb1ca0:s1 -> Node0x5fb26f0;
	Node0x5fb26f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%57:\l57:                                               \l  %58 = load float, float addrspace(3)* %17, align 4, !tbaa !5\l  %59 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %55\l  %60 = load float, float addrspace(3)* %59, align 4, !tbaa !5\l  %61 = mul i32 %55, %2\l  %62 = add i32 %61, %5\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5\l  %66 = fadd contract float %60, %65\l  %67 = fcmp contract ogt float %58, %66\l  br i1 %67, label %68, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5fb26f0:s0 -> Node0x5fb1770;
	Node0x5fb26f0:s1 -> Node0x5fb26a0;
	Node0x5fb1770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%68:\l68:                                               \l  store float %66, float addrspace(1)* %15, align 4, !tbaa !5\l  br label %69\l}"];
	Node0x5fb1770 -> Node0x5fb26a0;
	Node0x5fb26a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%69:\l69:                                               \l  %70 = or i32 %24, 3\l  %71 = icmp eq i32 %70, %5\l  br i1 %71, label %84, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5fb26a0:s0 -> Node0x5fb0e30;
	Node0x5fb26a0:s1 -> Node0x5fb32d0;
	Node0x5fb32d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%72:\l72:                                               \l  %73 = load float, float addrspace(3)* %17, align 4, !tbaa !5\l  %74 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %70\l  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !5\l  %76 = mul i32 %70, %2\l  %77 = add i32 %76, %5\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5\l  %81 = fadd contract float %75, %80\l  %82 = fcmp contract ogt float %73, %81\l  br i1 %82, label %83, label %84\l|{<s0>T|<s1>F}}"];
	Node0x5fb32d0:s0 -> Node0x5fb3930;
	Node0x5fb32d0:s1 -> Node0x5fb0e30;
	Node0x5fb3930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%83:\l83:                                               \l  store float %81, float addrspace(1)* %15, align 4, !tbaa !5\l  br label %84\l}"];
	Node0x5fb3930 -> Node0x5fb0e30;
	Node0x5fb0e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%84:\l84:                                               \l  %85 = add nuw i32 %24, 4\l  %86 = add i32 %25, 4\l  %87 = icmp eq i32 %86, %22\l  br i1 %87, label %88, label %23, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5fb0e30:s0 -> Node0x5fb0ab0;
	Node0x5fb0e30:s1 -> Node0x5fb0d40;
	Node0x5fb0ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%88:\l88:                                               \l  %89 = phi i32 [ 0, %9 ], [ %85, %84 ]\l  %90 = icmp eq i32 %19, 0\l  br i1 %90, label %111, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5fb0ab0:s0 -> Node0x5faf570;
	Node0x5fb0ab0:s1 -> Node0x5fb3f50;
	Node0x5fb3f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i32 [ %108, %107 ], [ %89, %88 ]\l  %93 = phi i32 [ %109, %107 ], [ 0, %88 ]\l  %94 = icmp eq i32 %92, %5\l  br i1 %94, label %107, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5fb3f50:s0 -> Node0x5fb4050;
	Node0x5fb3f50:s1 -> Node0x5fb4290;
	Node0x5fb4290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%95:\l95:                                               \l  %96 = load float, float addrspace(3)* %17, align 4, !tbaa !5\l  %97 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @sArr,\l... i32 0, i32 %92\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !5\l  %99 = mul i32 %92, %2\l  %100 = add i32 %99, %5\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5\l  %104 = fadd contract float %98, %103\l  %105 = fcmp contract ogt float %96, %104\l  br i1 %105, label %106, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5fb4290:s0 -> Node0x5fb4930;
	Node0x5fb4290:s1 -> Node0x5fb4050;
	Node0x5fb4930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%106:\l106:                                              \l  store float %104, float addrspace(1)* %15, align 4, !tbaa !5\l  br label %107\l}"];
	Node0x5fb4930 -> Node0x5fb4050;
	Node0x5fb4050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = add nuw i32 %92, 1\l  %109 = add i32 %93, 1\l  %110 = icmp eq i32 %109, %19\l  br i1 %110, label %111, label %91, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5fb4050:s0 -> Node0x5faf570;
	Node0x5fb4050:s1 -> Node0x5fb3f50;
	Node0x5faf570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%111:\l111:                                              \l  ret void\l}"];
}
