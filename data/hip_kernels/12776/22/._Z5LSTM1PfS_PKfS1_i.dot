digraph "CFG for '_Z5LSTM1PfS_PKfS1_i' function" {
	label="CFG for '_Z5LSTM1PfS_PKfS1_i' function";

	Node0x5b024f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = shl nsw i32 %4, 8\l  %16 = add i32 %14, %15\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %2, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %20 = getelementptr inbounds float, float addrspace(1)* %3, i64 %17\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fpext float %23 to double\l  %25 = fmul contract double %24, 2.000000e+00\l  %26 = fmul double %25, 0x3FF71547652B82FE\l  %27 = tail call double @llvm.rint.f64(double %26)\l  %28 = fneg double %27\l  %29 = tail call double @llvm.fma.f64(double %28, double 0x3FE62E42FEFA39EF,\l... double %25)\l  %30 = tail call double @llvm.fma.f64(double %28, double 0x3C7ABC9E3B39803F,\l... double %29)\l  %31 = tail call double @llvm.fma.f64(double %30, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %32 = tail call double @llvm.fma.f64(double %30, double %31, double\l... 0x3EC71DEE623FDE64)\l  %33 = tail call double @llvm.fma.f64(double %30, double %32, double\l... 0x3EFA01997C89E6B0)\l  %34 = tail call double @llvm.fma.f64(double %30, double %33, double\l... 0x3F2A01A014761F6E)\l  %35 = tail call double @llvm.fma.f64(double %30, double %34, double\l... 0x3F56C16C1852B7B0)\l  %36 = tail call double @llvm.fma.f64(double %30, double %35, double\l... 0x3F81111111122322)\l  %37 = tail call double @llvm.fma.f64(double %30, double %36, double\l... 0x3FA55555555502A1)\l  %38 = tail call double @llvm.fma.f64(double %30, double %37, double\l... 0x3FC5555555555511)\l  %39 = tail call double @llvm.fma.f64(double %30, double %38, double\l... 0x3FE000000000000B)\l  %40 = tail call double @llvm.fma.f64(double %30, double %39, double\l... 1.000000e+00)\l  %41 = tail call double @llvm.fma.f64(double %30, double %40, double\l... 1.000000e+00)\l  %42 = fptosi double %27 to i32\l  %43 = tail call double @llvm.amdgcn.ldexp.f64(double %41, i32 %42)\l  %44 = fcmp ogt double %25, 1.024000e+03\l  %45 = select i1 %44, double 0x7FF0000000000000, double %43\l  %46 = fcmp olt double %25, -1.075000e+03\l  %47 = select i1 %46, double 0.000000e+00, double %45\l  %48 = fptrunc double %47 to float\l  %49 = fpext float %48 to double\l  %50 = icmp sgt i32 %4, 0\l  br i1 %50, label %51, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5b024f0:s0 -> Node0x5b08220;
	Node0x5b024f0:s1 -> Node0x5b082b0;
	Node0x5b08220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e8765c70",label="{%51:\l51:                                               \l  %52 = fsub contract float 1.000000e+00, %19\l  %53 = add nsw i32 %16, -256\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fmul contract float %52, %56\l  br label %58\l}"];
	Node0x5b08220 -> Node0x5b082b0;
	Node0x5b082b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi float [ %57, %51 ], [ 0.000000e+00, %5 ]\l  %60 = fadd contract double %49, -1.000000e+00\l  %61 = fadd contract double %49, 1.000000e+00\l  %62 = fdiv contract double %60, %61\l  %63 = fptrunc double %62 to float\l  %64 = fmul contract float %19, %63\l  %65 = fadd contract float %64, %59\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %17\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = fpext float %65 to double\l  %68 = fmul contract double %67, 2.000000e+00\l  %69 = fmul double %68, 0x3FF71547652B82FE\l  %70 = tail call double @llvm.rint.f64(double %69)\l  %71 = fneg double %70\l  %72 = tail call double @llvm.fma.f64(double %71, double 0x3FE62E42FEFA39EF,\l... double %68)\l  %73 = tail call double @llvm.fma.f64(double %71, double 0x3C7ABC9E3B39803F,\l... double %72)\l  %74 = tail call double @llvm.fma.f64(double %73, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %75 = tail call double @llvm.fma.f64(double %73, double %74, double\l... 0x3EC71DEE623FDE64)\l  %76 = tail call double @llvm.fma.f64(double %73, double %75, double\l... 0x3EFA01997C89E6B0)\l  %77 = tail call double @llvm.fma.f64(double %73, double %76, double\l... 0x3F2A01A014761F6E)\l  %78 = tail call double @llvm.fma.f64(double %73, double %77, double\l... 0x3F56C16C1852B7B0)\l  %79 = tail call double @llvm.fma.f64(double %73, double %78, double\l... 0x3F81111111122322)\l  %80 = tail call double @llvm.fma.f64(double %73, double %79, double\l... 0x3FA55555555502A1)\l  %81 = tail call double @llvm.fma.f64(double %73, double %80, double\l... 0x3FC5555555555511)\l  %82 = tail call double @llvm.fma.f64(double %73, double %81, double\l... 0x3FE000000000000B)\l  %83 = tail call double @llvm.fma.f64(double %73, double %82, double\l... 1.000000e+00)\l  %84 = tail call double @llvm.fma.f64(double %73, double %83, double\l... 1.000000e+00)\l  %85 = fptosi double %70 to i32\l  %86 = tail call double @llvm.amdgcn.ldexp.f64(double %84, i32 %85)\l  %87 = fcmp ogt double %68, 1.024000e+03\l  %88 = select i1 %87, double 0x7FF0000000000000, double %86\l  %89 = fcmp olt double %68, -1.075000e+03\l  %90 = select i1 %89, double 0.000000e+00, double %88\l  %91 = fptrunc double %90 to float\l  %92 = fpext float %91 to double\l  %93 = fadd contract double %92, -1.000000e+00\l  %94 = fadd contract double %92, 1.000000e+00\l  %95 = fdiv contract double %93, %94\l  %96 = fptrunc double %95 to float\l  %97 = fmul contract float %21, %96\l  store float %97, float addrspace(1)* %22, align 4, !tbaa !7\l  ret void\l}"];
}
