digraph "CFG for '_Z6Fprop2PKfS0_Pf' function" {
	label="CFG for '_Z6Fprop2PKfS0_Pf' function";

	Node0x51b42b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 2, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = shl nsw i32 %13, 8\l  br label %20\l}"];
	Node0x51b42b0 -> Node0x51b6390;
	Node0x51b6490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = mul nsw i32 %13, 10\l  %17 = add nsw i32 %12, %16\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  store float %117, float addrspace(1)* %19, align 4, !tbaa !7\l  ret void\l}"];
	Node0x51b6390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i32 [ 0, %3 ], [ %118, %20 ]\l  %22 = phi float [ 0.000000e+00, %3 ], [ %117, %20 ]\l  %23 = add nuw nsw i32 %21, %14\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = mul nuw nsw i32 %21, 10\l  %28 = add nsw i32 %27, %12\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = fmul contract float %26, %31\l  %33 = fadd contract float %22, %32\l  %34 = or i32 %21, 1\l  %35 = add nuw nsw i32 %34, %14\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = mul nuw nsw i32 %34, 10\l  %40 = add nsw i32 %39, %12\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %38, %43\l  %45 = fadd contract float %33, %44\l  %46 = or i32 %21, 2\l  %47 = add nuw nsw i32 %46, %14\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = mul nuw nsw i32 %46, 10\l  %52 = add nsw i32 %51, %12\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %50, %55\l  %57 = fadd contract float %45, %56\l  %58 = or i32 %21, 3\l  %59 = add nuw nsw i32 %58, %14\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = mul nuw nsw i32 %58, 10\l  %64 = add nsw i32 %63, %12\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %68 = fmul contract float %62, %67\l  %69 = fadd contract float %57, %68\l  %70 = or i32 %21, 4\l  %71 = add nuw nsw i32 %70, %14\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %75 = mul nuw nsw i32 %70, 10\l  %76 = add nsw i32 %75, %12\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %74, %79\l  %81 = fadd contract float %69, %80\l  %82 = or i32 %21, 5\l  %83 = add nuw nsw i32 %82, %14\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = mul nuw nsw i32 %82, 10\l  %88 = add nsw i32 %87, %12\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = fmul contract float %86, %91\l  %93 = fadd contract float %81, %92\l  %94 = or i32 %21, 6\l  %95 = add nuw nsw i32 %94, %14\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = mul nuw nsw i32 %94, 10\l  %100 = add nsw i32 %99, %12\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fmul contract float %98, %103\l  %105 = fadd contract float %93, %104\l  %106 = or i32 %21, 7\l  %107 = add nuw nsw i32 %106, %14\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = mul nuw nsw i32 %106, 10\l  %112 = add nsw i32 %111, %12\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fmul contract float %110, %115\l  %117 = fadd contract float %105, %116\l  %118 = add nuw nsw i32 %21, 8\l  %119 = icmp eq i32 %118, 256\l  br i1 %119, label %15, label %20, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x51b6390:s0 -> Node0x51b6490;
	Node0x51b6390:s1 -> Node0x51b6390;
}
