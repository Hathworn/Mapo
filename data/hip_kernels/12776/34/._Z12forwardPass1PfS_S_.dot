digraph "CFG for '_Z12forwardPass1PfS_S_' function" {
	label="CFG for '_Z12forwardPass1PfS_S_' function";

	Node0x548f950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %5, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = sext i32 %12 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 %21\l  %23 = sext i32 %20 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = shl nsw i32 %20, 7\l  %27 = add nsw i32 %26, %12\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fmul contract float %25, %30\l  %32 = atomicrmw fadd float addrspace(1)* %22, float %31\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %33 = load float, float addrspace(1)* %22, align 4, !tbaa !7\l  %34 = fmul float %33, 0x3FF7154760000000\l  %35 = tail call float @llvm.rint.f32(float %34)\l  %36 = fcmp ogt float %33, 0x40562E4300000000\l  %37 = fcmp olt float %33, 0xC059D1DA00000000\l  %38 = fneg float %34\l  %39 = tail call float @llvm.fma.f32(float %33, float 0x3FF7154760000000,\l... float %38)\l  %40 = tail call float @llvm.fma.f32(float %33, float 0x3E54AE0BE0000000,\l... float %39)\l  %41 = fsub float %34, %35\l  %42 = fadd float %40, %41\l  %43 = tail call float @llvm.exp2.f32(float %42)\l  %44 = fptosi float %35 to i32\l  %45 = tail call float @llvm.amdgcn.ldexp.f32(float %43, i32 %44)\l  %46 = select i1 %37, float 0.000000e+00, float %45\l  %47 = select i1 %36, float 0x7FF0000000000000, float %46\l  %48 = fpext float %47 to double\l  %49 = fadd contract double %48, 1.000000e+00\l  %50 = fdiv contract double 1.000000e+00, %49\l  %51 = fptrunc double %50 to float\l  store float %51, float addrspace(1)* %22, align 4, !tbaa !7\l  ret void\l}"];
}
