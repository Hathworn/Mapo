digraph "CFG for '_Z9backProp1PfS_S_S_S_S_' function" {
	label="CFG for '_Z9backProp1PfS_S_S_S_S_' function";

	Node0x4ae5e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = add i32 %18, %19\l  %21 = mul nsw i32 %20, 10\l  %22 = load float, float addrspace(1)* %4, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = load float, float addrspace(1)* %5, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fsub contract float %22, %23\l  %25 = sext i32 %21 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fmul contract float %24, %27\l  %29 = fadd contract float %28, 0.000000e+00\l  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 1\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = getelementptr inbounds float, float addrspace(1)* %5, i64 1\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fsub contract float %31, %33\l  %35 = or i32 %21, 1\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = fmul contract float %34, %38\l  %40 = fadd contract float %29, %39\l  %41 = getelementptr inbounds float, float addrspace(1)* %4, i64 2\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 2\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fsub contract float %42, %44\l  %46 = add nsw i32 %21, 2\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %50 = fmul contract float %45, %49\l  %51 = fadd contract float %40, %50\l  %52 = getelementptr inbounds float, float addrspace(1)* %4, i64 3\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = getelementptr inbounds float, float addrspace(1)* %5, i64 3\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fsub contract float %53, %55\l  %57 = add nsw i32 %21, 3\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %3, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %56, %60\l  %62 = fadd contract float %51, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %4, i64 4\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = getelementptr inbounds float, float addrspace(1)* %5, i64 4\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fsub contract float %64, %66\l  %68 = add nsw i32 %21, 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %3, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = fmul contract float %67, %71\l  %73 = fadd contract float %62, %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 5\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = getelementptr inbounds float, float addrspace(1)* %5, i64 5\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fsub contract float %75, %77\l  %79 = add nsw i32 %21, 5\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %3, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %78, %82\l  %84 = fadd contract float %73, %83\l  %85 = getelementptr inbounds float, float addrspace(1)* %4, i64 6\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %87 = getelementptr inbounds float, float addrspace(1)* %5, i64 6\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fsub contract float %86, %88\l  %90 = add nsw i32 %21, 6\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %3, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = fmul contract float %89, %93\l  %95 = fadd contract float %84, %94\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 7\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = getelementptr inbounds float, float addrspace(1)* %5, i64 7\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %100 = fsub contract float %97, %99\l  %101 = add nsw i32 %21, 7\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %3, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = fmul contract float %100, %104\l  %106 = fadd contract float %95, %105\l  %107 = getelementptr inbounds float, float addrspace(1)* %4, i64 8\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = getelementptr inbounds float, float addrspace(1)* %5, i64 8\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = fsub contract float %108, %110\l  %112 = add nsw i32 %21, 8\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %3, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %116 = fmul contract float %111, %115\l  %117 = fadd contract float %106, %116\l  %118 = getelementptr inbounds float, float addrspace(1)* %4, i64 9\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %120 = getelementptr inbounds float, float addrspace(1)* %5, i64 9\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = fsub contract float %119, %121\l  %123 = add nsw i32 %21, 9\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %3, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fmul contract float %122, %126\l  %128 = fadd contract float %117, %127\l  %129 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %130 = mul i32 %129, %11\l  %131 = add i32 %130, %12\l  %132 = sext i32 %20 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %2, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %135 = fsub contract float 1.000000e+00, %134\l  %136 = fmul contract float %134, %135\l  %137 = fmul contract float %128, %136\l  %138 = sext i32 %131 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = fmul contract float %140, %137\l  %142 = fpext float %141 to double\l  %143 = fdiv contract double %142, 6.000000e+03\l  %144 = shl nsw i32 %131, 7\l  %145 = add nsw i32 %144, %20\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %1, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %149 = fpext float %148 to double\l  %150 = fadd contract double %143, %149\l  %151 = fptrunc double %150 to float\l  store float %151, float addrspace(1)* %147, align 4, !tbaa !7\l  ret void\l}"];
}
