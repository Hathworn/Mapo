digraph "CFG for '_Z10nlm_kernelPKfPfiifPif' function" {
	label="CFG for '_Z10nlm_kernelPKfPfiifPif' function";

	Node0x5727bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%7:\l  %8 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %9 = add nsw i32 %8, -1\l  %10 = sdiv i32 %9, 2\l  %11 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 1\l  %12 = load i32, i32 addrspace(1)* %11, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %13 = add nsw i32 %12, -1\l  %14 = sdiv i32 %13, 2\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %16 = icmp ult i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %18 = icmp ult i32 %17, %12\l  %19 = select i1 %16, i1 %18, i1 false\l  br i1 %19, label %20, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5727bc0:s0 -> Node0x572adb0;
	Node0x5727bc0:s1 -> Node0x572ae40;
	Node0x572adb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%20:\l20:                                               \l  %21 = sub nsw i32 %15, %14\l  %22 = mul nsw i32 %21, %21\l  %23 = sub nsw i32 %17, %10\l  %24 = mul nsw i32 %23, %23\l  %25 = add nuw nsw i32 %24, %22\l  %26 = sub nsw i32 0, %25\l  %27 = sitofp i32 %26 to float\l  %28 = fmul contract float %4, %4\l  %29 = fmul contract float %28, 2.000000e+00\l  %30 = fdiv contract float %27, %29\l  %31 = fmul float %30, 0x3FF7154760000000\l  %32 = tail call float @llvm.rint.f32(float %31)\l  %33 = fcmp ogt float %30, 0x40562E4300000000\l  %34 = fcmp olt float %30, 0xC059D1DA00000000\l  %35 = fneg float %31\l  %36 = tail call float @llvm.fma.f32(float %30, float 0x3FF7154760000000,\l... float %35)\l  %37 = tail call float @llvm.fma.f32(float %30, float 0x3E54AE0BE0000000,\l... float %36)\l  %38 = fsub float %31, %32\l  %39 = fadd float %37, %38\l  %40 = tail call float @llvm.exp2.f32(float %39)\l  %41 = fptosi float %32 to i32\l  %42 = tail call float @llvm.amdgcn.ldexp.f32(float %40, i32 %41)\l  %43 = select i1 %34, float 0.000000e+00, float %42\l  %44 = select i1 %33, float 0x7FF0000000000000, float %43\l  %45 = mul i32 %12, %15\l  %46 = add i32 %45, %17\l  %47 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gaussian_matrix, i32 0, i32 %46\l  store float %44, float addrspace(3)* %47, align 4, !tbaa !10\l  br label %48\l}"];
	Node0x572adb0 -> Node0x572ae40;
	Node0x572ae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%48:\l48:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %49 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %50 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %51 = getelementptr i8, i8 addrspace(4)* %50, i64 4\l  %52 = bitcast i8 addrspace(4)* %51 to i16 addrspace(4)*\l  %53 = load i16, i16 addrspace(4)* %52, align 4, !range !12, !invariant.load\l... !8\l  %54 = zext i16 %53 to i32\l  %55 = getelementptr inbounds i8, i8 addrspace(4)* %50, i64 12\l  %56 = bitcast i8 addrspace(4)* %55 to i32 addrspace(4)*\l  %57 = load i32, i32 addrspace(4)* %56, align 4, !tbaa !13\l  %58 = mul i32 %49, %54\l  %59 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %60 = getelementptr i8, i8 addrspace(4)* %50, i64 6\l  %61 = bitcast i8 addrspace(4)* %60 to i16 addrspace(4)*\l  %62 = load i16, i16 addrspace(4)* %61, align 2, !range !12, !invariant.load\l... !8\l  %63 = zext i16 %62 to i32\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %50, i64 16\l  %65 = bitcast i8 addrspace(4)* %64 to i32 addrspace(4)*\l  %66 = load i32, i32 addrspace(4)* %65, align 8, !tbaa !22\l  %67 = mul i32 %59, %63\l  %68 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %69 = load i32, i32 addrspace(1)* %11, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %70 = mul nsw i32 %69, %68\l  %71 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gaussian_matrix, i32 0, i32 %70\l  %72 = shl nsw i32 %10, 1\l  %73 = add i32 %72, %54\l  %74 = shl nsw i32 %14, 1\l  %75 = add i32 %74, %63\l  %76 = mul i32 %75, %73\l  %77 = getelementptr inbounds float, float addrspace(3)* %71, i32 %76\l  %78 = add i32 %58, %15\l  %79 = add i32 %67, %17\l  %80 = add nsw i32 %68, -1\l  %81 = sdiv i32 %80, 2\l  %82 = add nsw i32 %69, -1\l  %83 = sdiv i32 %82, 2\l  %84 = add nsw i32 %81, %78\l  %85 = shl nsw i32 %83, 1\l  %86 = add nsw i32 %85, %3\l  %87 = mul nsw i32 %86, %84\l  %88 = add nsw i32 %83, %79\l  %89 = add nsw i32 %87, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %93 = add nsw i32 %83, %15\l  %94 = add i32 %85, %63\l  %95 = mul i32 %94, %93\l  %96 = add nsw i32 %81, %17\l  %97 = add i32 %95, %96\l  %98 = getelementptr inbounds float, float addrspace(3)* %77, i32 %97\l  store float %92, float addrspace(3)* %98, align 4, !tbaa !10\l  %99 = icmp ult i32 %15, %81\l  br i1 %99, label %100, label %129\l|{<s0>T|<s1>F}}"];
	Node0x572ae40:s0 -> Node0x5730d00;
	Node0x572ae40:s1 -> Node0x5730d90;
	Node0x5730d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%100:\l100:                                              \l  %101 = shl nuw nsw i32 %15, 1\l  %102 = sub i32 %78, %101\l  %103 = add i32 %102, -1\l  %104 = add i32 %103, %81\l  %105 = mul i32 %104, %86\l  %106 = add i32 %105, %88\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %0, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %110 = xor i32 %15, -1\l  %111 = add nsw i32 %83, %110\l  %112 = mul i32 %94, %111\l  %113 = add i32 %112, %96\l  %114 = getelementptr inbounds float, float addrspace(3)* %77, i32 %113\l  store float %109, float addrspace(3)* %114, align 4, !tbaa !10\l  %115 = icmp ult i32 %17, %83\l  br i1 %115, label %116, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5730d00:s0 -> Node0x57317b0;
	Node0x5730d00:s1 -> Node0x5730d90;
	Node0x57317b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%116:\l116:                                              \l  %117 = shl nuw nsw i32 %17, 1\l  %118 = sub i32 %79, %117\l  %119 = add i32 %118, -1\l  %120 = add i32 %119, %83\l  %121 = add i32 %120, %105\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %125 = xor i32 %17, -1\l  %126 = add nsw i32 %81, %125\l  %127 = add i32 %126, %112\l  %128 = getelementptr inbounds float, float addrspace(3)* %77, i32 %127\l  store float %124, float addrspace(3)* %128, align 4, !tbaa !10\l  br label %129\l}"];
	Node0x57317b0 -> Node0x5730d90;
	Node0x5730d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%129:\l129:                                              \l  %130 = icmp ult i32 %17, %83\l  br i1 %130, label %131, label %144\l|{<s0>T|<s1>F}}"];
	Node0x5730d90:s0 -> Node0x572f030;
	Node0x5730d90:s1 -> Node0x572f080;
	Node0x572f030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%131:\l131:                                              \l  %132 = shl nuw nsw i32 %17, 1\l  %133 = sub i32 %79, %132\l  %134 = add i32 %133, -1\l  %135 = add i32 %134, %83\l  %136 = add i32 %135, %87\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %0, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %140 = xor i32 %17, -1\l  %141 = add nsw i32 %81, %140\l  %142 = add i32 %141, %95\l  %143 = getelementptr inbounds float, float addrspace(3)* %77, i32 %142\l  store float %139, float addrspace(3)* %143, align 4, !tbaa !10\l  br label %144\l}"];
	Node0x572f030 -> Node0x572f080;
	Node0x572f080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%144:\l144:                                              \l  %145 = sub nsw i32 %54, %81\l  %146 = icmp ult i32 %15, %145\l  br i1 %146, label %178, label %147\l|{<s0>T|<s1>F}}"];
	Node0x572f080:s0 -> Node0x572f250;
	Node0x572f080:s1 -> Node0x5732fd0;
	Node0x5732fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%147:\l147:                                              \l  %148 = sub nsw i32 %54, %15\l  %149 = shl nsw i32 %148, 1\l  %150 = add i32 %78, -1\l  %151 = add i32 %150, %149\l  %152 = add i32 %151, %81\l  %153 = mul i32 %152, %86\l  %154 = add i32 %153, %88\l  %155 = zext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %158 = shl nuw nsw i32 %54, 1\l  %159 = xor i32 %15, -1\l  %160 = add nsw i32 %158, %159\l  %161 = add nsw i32 %160, %83\l  %162 = mul i32 %94, %161\l  %163 = add i32 %162, %96\l  %164 = getelementptr inbounds float, float addrspace(3)* %77, i32 %163\l  store float %157, float addrspace(3)* %164, align 4, !tbaa !10\l  br i1 %130, label %165, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5732fd0:s0 -> Node0x5733b10;
	Node0x5732fd0:s1 -> Node0x572f250;
	Node0x5733b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%165:\l165:                                              \l  %166 = shl nuw nsw i32 %17, 1\l  %167 = sub i32 %79, %166\l  %168 = add i32 %167, -1\l  %169 = add i32 %168, %83\l  %170 = add i32 %169, %153\l  %171 = zext i32 %170 to i64\l  %172 = getelementptr inbounds float, float addrspace(1)* %0, i64 %171\l  %173 = load float, float addrspace(1)* %172, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %174 = xor i32 %17, -1\l  %175 = add nsw i32 %81, %174\l  %176 = add i32 %175, %162\l  %177 = getelementptr inbounds float, float addrspace(3)* %77, i32 %176\l  store float %173, float addrspace(3)* %177, align 4, !tbaa !10\l  br label %178\l}"];
	Node0x5733b10 -> Node0x572f250;
	Node0x572f250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%178:\l178:                                              \l  %179 = sub nsw i32 %63, %83\l  %180 = icmp ult i32 %17, %179\l  br i1 %180, label %212, label %181\l|{<s0>T|<s1>F}}"];
	Node0x572f250:s0 -> Node0x5734510;
	Node0x572f250:s1 -> Node0x5734560;
	Node0x5734560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%181:\l181:                                              \l  %182 = sub nsw i32 %63, %17\l  %183 = shl nsw i32 %182, 1\l  %184 = add i32 %79, -1\l  %185 = add i32 %184, %183\l  %186 = add i32 %185, %83\l  %187 = add i32 %186, %87\l  %188 = zext i32 %187 to i64\l  %189 = getelementptr inbounds float, float addrspace(1)* %0, i64 %188\l  %190 = load float, float addrspace(1)* %189, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %191 = shl nuw nsw i32 %63, 1\l  %192 = xor i32 %17, -1\l  %193 = add nsw i32 %191, %192\l  %194 = add nsw i32 %193, %81\l  %195 = add i32 %95, %194\l  %196 = getelementptr inbounds float, float addrspace(3)* %77, i32 %195\l  store float %190, float addrspace(3)* %196, align 4, !tbaa !10\l  br i1 %99, label %197, label %212\l|{<s0>T|<s1>F}}"];
	Node0x5734560:s0 -> Node0x5734f80;
	Node0x5734560:s1 -> Node0x5734510;
	Node0x5734f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%197:\l197:                                              \l  %198 = shl nuw nsw i32 %15, 1\l  %199 = sub i32 %78, %198\l  %200 = add i32 %199, -1\l  %201 = add i32 %200, %81\l  %202 = mul i32 %201, %86\l  %203 = add i32 %186, %202\l  %204 = zext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %0, i64 %204\l  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %207 = xor i32 %15, -1\l  %208 = add nsw i32 %83, %207\l  %209 = mul i32 %94, %208\l  %210 = add i32 %209, %194\l  %211 = getelementptr inbounds float, float addrspace(3)* %77, i32 %210\l  store float %206, float addrspace(3)* %211, align 4, !tbaa !10\l  br label %212\l}"];
	Node0x5734f80 -> Node0x5734510;
	Node0x5734510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%212:\l212:                                              \l  %213 = select i1 %146, i1 true, i1 %180\l  br i1 %213, label %241, label %214\l|{<s0>T|<s1>F}}"];
	Node0x5734510:s0 -> Node0x5735a30;
	Node0x5734510:s1 -> Node0x5735a80;
	Node0x5735a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%214:\l214:                                              \l  %215 = sub nsw i32 %54, %15\l  %216 = shl nsw i32 %215, 1\l  %217 = add i32 %78, -1\l  %218 = add i32 %217, %216\l  %219 = add i32 %218, %81\l  %220 = mul i32 %219, %86\l  %221 = sub nsw i32 %63, %17\l  %222 = shl nsw i32 %221, 1\l  %223 = add i32 %79, -1\l  %224 = add i32 %223, %222\l  %225 = add i32 %224, %83\l  %226 = add i32 %225, %220\l  %227 = zext i32 %226 to i64\l  %228 = getelementptr inbounds float, float addrspace(1)* %0, i64 %227\l  %229 = load float, float addrspace(1)* %228, align 4, !tbaa !10,\l... !amdgpu.noclobber !8\l  %230 = shl nuw nsw i32 %54, 1\l  %231 = xor i32 %15, -1\l  %232 = add nsw i32 %230, %231\l  %233 = add nsw i32 %232, %83\l  %234 = mul i32 %94, %233\l  %235 = shl nuw nsw i32 %63, 1\l  %236 = xor i32 %17, -1\l  %237 = add nsw i32 %235, %236\l  %238 = add nsw i32 %237, %81\l  %239 = add i32 %238, %234\l  %240 = getelementptr inbounds float, float addrspace(3)* %77, i32 %239\l  store float %229, float addrspace(3)* %240, align 4, !tbaa !10\l  br label %241\l}"];
	Node0x5735a80 -> Node0x5735a30;
	Node0x5735a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%241:\l241:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %242 = udiv i32 %57, %54\l  %243 = mul i32 %242, %54\l  %244 = icmp ugt i32 %57, %243\l  %245 = zext i1 %244 to i32\l  %246 = add i32 %242, %245\l  %247 = icmp eq i32 %246, 0\l  br i1 %247, label %685, label %248\l|{<s0>T|<s1>F}}"];
	Node0x5735a30:s0 -> Node0x5737020;
	Node0x5735a30:s1 -> Node0x5737070;
	Node0x5737070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%248:\l248:                                              \l  %249 = udiv i32 %66, %63\l  %250 = mul i32 %249, %63\l  %251 = icmp ugt i32 %66, %250\l  %252 = zext i1 %251 to i32\l  %253 = add i32 %249, %252\l  %254 = icmp eq i32 %253, 0\l  %255 = xor i32 %15, -1\l  %256 = xor i32 %17, -1\l  %257 = sub nsw i32 %54, %15\l  %258 = shl nsw i32 %257, 1\l  %259 = shl nuw nsw i32 %54, 1\l  %260 = add nsw i32 %259, %255\l  %261 = sub nsw i32 %63, %17\l  %262 = shl nsw i32 %261, 1\l  %263 = shl nuw nsw i32 %63, 1\l  %264 = add nsw i32 %263, %256\l  %265 = shl nuw nsw i32 %15, 1\l  %266 = shl nuw nsw i32 %17, 1\l  %267 = shl nuw nsw i32 %17, 1\l  %268 = shl nuw nsw i32 %17, 1\l  %269 = load i16, i16 addrspace(4)* %61, align 2\l  %270 = zext i16 %269 to i32\l  %271 = bitcast i32 addrspace(1)* %5 to \<2 x i32\> addrspace(1)*\l  br label %272\l}"];
	Node0x5737070 -> Node0x5738c30;
	Node0x5738c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%272:\l272:                                              \l  %273 = phi float addrspace(3)* [ %71, %248 ], [ %680, %677 ]\l  %274 = phi float [ 0.000000e+00, %248 ], [ %679, %677 ]\l  %275 = phi float [ 0.000000e+00, %248 ], [ %678, %677 ]\l  %276 = phi i32 [ 0, %248 ], [ %681, %677 ]\l  br i1 %254, label %677, label %277\l|{<s0>T|<s1>F}}"];
	Node0x5738c30:s0 -> Node0x5738cf0;
	Node0x5738c30:s1 -> Node0x5739190;
	Node0x5739190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%277:\l277:                                              \l  %278 = icmp eq i32 %276, %49\l  %279 = mul i32 %276, %54\l  %280 = add i32 %279, %15\l  %281 = sub i32 %280, %265\l  %282 = add i32 %281, -1\l  %283 = add i32 %280, -1\l  %284 = add i32 %283, %258\l  br label %285\l}"];
	Node0x5739190 -> Node0x57396c0;
	Node0x57396c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%285:\l285:                                              \l  %286 = phi float addrspace(3)* [ %273, %277 ], [ %674, %673 ]\l  %287 = phi float [ %274, %277 ], [ %660, %673 ]\l  %288 = phi float [ %275, %277 ], [ %655, %673 ]\l  %289 = phi i32 [ 0, %277 ], [ %675, %673 ]\l  %290 = icmp eq i32 %289, %59\l  %291 = select i1 %278, i1 %290, i1 false\l  br i1 %291, label %421, label %292\l|{<s0>T|<s1>F}}"];
	Node0x57396c0:s0 -> Node0x5739d90;
	Node0x57396c0:s1 -> Node0x5739e20;
	Node0x5739e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%292:\l292:                                              \l  %293 = mul i32 %289, %63\l  %294 = add i32 %293, %17\l  %295 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %296 = add nsw i32 %295, -1\l  %297 = sdiv i32 %296, 2\l  %298 = load i32, i32 addrspace(1)* %11, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %299 = add nsw i32 %298, -1\l  %300 = sdiv i32 %299, 2\l  %301 = add nsw i32 %297, %280\l  %302 = shl nsw i32 %300, 1\l  %303 = add nsw i32 %302, %3\l  %304 = mul nsw i32 %303, %301\l  %305 = add nsw i32 %300, %294\l  %306 = add nsw i32 %304, %305\l  %307 = sext i32 %306 to i64\l  %308 = getelementptr inbounds float, float addrspace(1)* %0, i64 %307\l  %309 = load float, float addrspace(1)* %308, align 4, !tbaa !10\l  %310 = add nsw i32 %300, %15\l  %311 = add i32 %302, %63\l  %312 = mul i32 %311, %310\l  %313 = add nsw i32 %297, %17\l  %314 = add i32 %312, %313\l  %315 = getelementptr inbounds float, float addrspace(3)* %286, i32 %314\l  store float %309, float addrspace(3)* %315, align 4, !tbaa !10\l  %316 = icmp ult i32 %15, %297\l  br i1 %316, label %317, label %340\l|{<s0>T|<s1>F}}"];
	Node0x5739e20:s0 -> Node0x573ad80;
	Node0x5739e20:s1 -> Node0x573ae10;
	Node0x573ad80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%317:\l317:                                              \l  %318 = add i32 %282, %297\l  %319 = mul i32 %318, %303\l  %320 = add i32 %319, %305\l  %321 = zext i32 %320 to i64\l  %322 = getelementptr inbounds float, float addrspace(1)* %0, i64 %321\l  %323 = load float, float addrspace(1)* %322, align 4, !tbaa !10\l  %324 = add nsw i32 %300, %255\l  %325 = mul i32 %311, %324\l  %326 = add i32 %325, %313\l  %327 = getelementptr inbounds float, float addrspace(3)* %286, i32 %326\l  store float %323, float addrspace(3)* %327, align 4, !tbaa !10\l  %328 = icmp ult i32 %17, %300\l  br i1 %328, label %329, label %340\l|{<s0>T|<s1>F}}"];
	Node0x573ad80:s0 -> Node0x573b5f0;
	Node0x573ad80:s1 -> Node0x573ae10;
	Node0x573b5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%329:\l329:                                              \l  %330 = sub i32 %294, %266\l  %331 = add i32 %330, -1\l  %332 = add i32 %331, %300\l  %333 = add i32 %332, %319\l  %334 = zext i32 %333 to i64\l  %335 = getelementptr inbounds float, float addrspace(1)* %0, i64 %334\l  %336 = load float, float addrspace(1)* %335, align 4, !tbaa !10\l  %337 = add nsw i32 %297, %256\l  %338 = add i32 %337, %325\l  %339 = getelementptr inbounds float, float addrspace(3)* %286, i32 %338\l  store float %336, float addrspace(3)* %339, align 4, !tbaa !10\l  br label %340\l}"];
	Node0x573b5f0 -> Node0x573ae10;
	Node0x573ae10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%340:\l340:                                              \l  %341 = icmp ult i32 %17, %300\l  br i1 %341, label %342, label %353\l|{<s0>T|<s1>F}}"];
	Node0x573ae10:s0 -> Node0x573be00;
	Node0x573ae10:s1 -> Node0x573be50;
	Node0x573be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%342:\l342:                                              \l  %343 = sub i32 %294, %267\l  %344 = add i32 %343, -1\l  %345 = add i32 %344, %300\l  %346 = add i32 %345, %304\l  %347 = zext i32 %346 to i64\l  %348 = getelementptr inbounds float, float addrspace(1)* %0, i64 %347\l  %349 = load float, float addrspace(1)* %348, align 4, !tbaa !10\l  %350 = add nsw i32 %297, %256\l  %351 = add i32 %350, %312\l  %352 = getelementptr inbounds float, float addrspace(3)* %286, i32 %351\l  store float %349, float addrspace(3)* %352, align 4, !tbaa !10\l  br label %353\l}"];
	Node0x573be00 -> Node0x573be50;
	Node0x573be50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%353:\l353:                                              \l  %354 = sub nsw i32 %54, %297\l  %355 = icmp ult i32 %15, %354\l  br i1 %355, label %378, label %356\l|{<s0>T|<s1>F}}"];
	Node0x573be50:s0 -> Node0x573c6f0;
	Node0x573be50:s1 -> Node0x573c740;
	Node0x573c740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%356:\l356:                                              \l  %357 = add i32 %284, %297\l  %358 = mul i32 %357, %303\l  %359 = add i32 %358, %305\l  %360 = zext i32 %359 to i64\l  %361 = getelementptr inbounds float, float addrspace(1)* %0, i64 %360\l  %362 = load float, float addrspace(1)* %361, align 4, !tbaa !10\l  %363 = add nsw i32 %260, %300\l  %364 = mul i32 %311, %363\l  %365 = add i32 %364, %313\l  %366 = getelementptr inbounds float, float addrspace(3)* %286, i32 %365\l  store float %362, float addrspace(3)* %366, align 4, !tbaa !10\l  br i1 %341, label %367, label %378\l|{<s0>T|<s1>F}}"];
	Node0x573c740:s0 -> Node0x573ce50;
	Node0x573c740:s1 -> Node0x573c6f0;
	Node0x573ce50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%367:\l367:                                              \l  %368 = sub i32 %294, %268\l  %369 = add i32 %368, -1\l  %370 = add i32 %369, %300\l  %371 = add i32 %370, %358\l  %372 = zext i32 %371 to i64\l  %373 = getelementptr inbounds float, float addrspace(1)* %0, i64 %372\l  %374 = load float, float addrspace(1)* %373, align 4, !tbaa !10\l  %375 = add nsw i32 %297, %256\l  %376 = add i32 %375, %364\l  %377 = getelementptr inbounds float, float addrspace(3)* %286, i32 %376\l  store float %374, float addrspace(3)* %377, align 4, !tbaa !10\l  br label %378\l}"];
	Node0x573ce50 -> Node0x573c6f0;
	Node0x573c6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%378:\l378:                                              \l  %379 = sub nsw i32 %63, %300\l  %380 = icmp ult i32 %17, %379\l  br i1 %380, label %403, label %381\l|{<s0>T|<s1>F}}"];
	Node0x573c6f0:s0 -> Node0x573d6f0;
	Node0x573c6f0:s1 -> Node0x573d740;
	Node0x573d740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%381:\l381:                                              \l  %382 = add i32 %294, -1\l  %383 = add i32 %382, %262\l  %384 = add i32 %383, %300\l  %385 = add i32 %384, %304\l  %386 = zext i32 %385 to i64\l  %387 = getelementptr inbounds float, float addrspace(1)* %0, i64 %386\l  %388 = load float, float addrspace(1)* %387, align 4, !tbaa !10\l  %389 = add nsw i32 %264, %297\l  %390 = add i32 %312, %389\l  %391 = getelementptr inbounds float, float addrspace(3)* %286, i32 %390\l  store float %388, float addrspace(3)* %391, align 4, !tbaa !10\l  br i1 %316, label %392, label %403\l|{<s0>T|<s1>F}}"];
	Node0x573d740:s0 -> Node0x573de50;
	Node0x573d740:s1 -> Node0x573d6f0;
	Node0x573de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%392:\l392:                                              \l  %393 = add i32 %282, %297\l  %394 = mul i32 %393, %303\l  %395 = add i32 %384, %394\l  %396 = zext i32 %395 to i64\l  %397 = getelementptr inbounds float, float addrspace(1)* %0, i64 %396\l  %398 = load float, float addrspace(1)* %397, align 4, !tbaa !10\l  %399 = add nsw i32 %300, %255\l  %400 = mul i32 %311, %399\l  %401 = add i32 %400, %389\l  %402 = getelementptr inbounds float, float addrspace(3)* %286, i32 %401\l  store float %398, float addrspace(3)* %402, align 4, !tbaa !10\l  br label %403\l}"];
	Node0x573de50 -> Node0x573d6f0;
	Node0x573d6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%403:\l403:                                              \l  %404 = select i1 %355, i1 true, i1 %380\l  br i1 %404, label %420, label %405\l|{<s0>T|<s1>F}}"];
	Node0x573d6f0:s0 -> Node0x573e680;
	Node0x573d6f0:s1 -> Node0x573e6d0;
	Node0x573e6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%405:\l405:                                              \l  %406 = add i32 %284, %297\l  %407 = mul i32 %406, %303\l  %408 = add i32 %294, -1\l  %409 = add i32 %408, %262\l  %410 = add i32 %409, %300\l  %411 = add i32 %410, %407\l  %412 = zext i32 %411 to i64\l  %413 = getelementptr inbounds float, float addrspace(1)* %0, i64 %412\l  %414 = load float, float addrspace(1)* %413, align 4, !tbaa !10\l  %415 = add nsw i32 %260, %300\l  %416 = mul i32 %311, %415\l  %417 = add nsw i32 %264, %297\l  %418 = add i32 %417, %416\l  %419 = getelementptr inbounds float, float addrspace(3)* %286, i32 %418\l  store float %414, float addrspace(3)* %419, align 4, !tbaa !10\l  br label %420\l}"];
	Node0x573e6d0 -> Node0x573e680;
	Node0x573e680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%420:\l420:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %421\l}"];
	Node0x573e680 -> Node0x5739d90;
	Node0x5739d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%421:\l421:                                              \l  %422 = phi float addrspace(3)* [ %286, %420 ], [ %77, %285 ]\l  %423 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %424 = add nsw i32 %423, -1\l  %425 = sdiv i32 %424, 2\l  %426 = load i32, i32 addrspace(1)* %11, align 4, !tbaa !4, !amdgpu.noclobber\l... !8\l  %427 = add nsw i32 %426, -1\l  %428 = sdiv i32 %427, 2\l  %429 = icmp slt i32 %423, 0\l  %430 = sub nsw i32 0, %425\l  %431 = sub nsw i32 0, %428\l  %432 = icmp slt i32 %426, 0\l  %433 = shl nsw i32 %428, 1\l  %434 = tail call i32 @llvm.abs.i32(i32 %428, i1 true)\l  %435 = tail call i32 @llvm.abs.i32(i32 %425, i1 true)\l  %436 = add i32 %433, %270\l  br label %437\l}"];
	Node0x5739d90 -> Node0x57406d0;
	Node0x57406d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%437:\l437:                                              \l  %438 = phi float [ %287, %421 ], [ %660, %663 ]\l  %439 = phi float [ %288, %421 ], [ %655, %663 ]\l  %440 = phi i32 [ 0, %421 ], [ %664, %663 ]\l  %441 = add nsw i32 %440, %14\l  %442 = mul i32 %441, %75\l  %443 = add i32 %442, %10\l  br label %444\l}"];
	Node0x57406d0 -> Node0x5740c20;
	Node0x5740c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%444:\l444:                                              \l  %445 = phi float [ %438, %437 ], [ %660, %637 ]\l  %446 = phi float [ %439, %437 ], [ %655, %637 ]\l  %447 = phi i32 [ 0, %437 ], [ %661, %637 ]\l  br i1 %429, label %637, label %448\l|{<s0>T|<s1>F}}"];
	Node0x5740c20:s0 -> Node0x5740d20;
	Node0x5740c20:s1 -> Node0x5740ff0;
	Node0x5740ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%448:\l448:                                              \l  %449 = phi i32 [ %635, %633 ], [ %430, %444 ]\l  %450 = phi float [ %634, %633 ], [ 0.000000e+00, %444 ]\l  br i1 %432, label %633, label %451\l|{<s0>T|<s1>F}}"];
	Node0x5740ff0:s0 -> Node0x5741160;
	Node0x5740ff0:s1 -> Node0x57413c0;
	Node0x57413c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%451:\l451:                                              \l  %452 = add nsw i32 %449, %425\l  %453 = mul nsw i32 %452, %426\l  %454 = add i32 %453, %428\l  %455 = add i32 %449, %428\l  %456 = add i32 %455, %15\l  %457 = mul i32 %436, %456\l  %458 = add i32 %455, %440\l  %459 = mul i32 %436, %458\l  %460 = add i32 %457, %17\l  %461 = add i32 %459, %447\l  br label %462\l}"];
	Node0x57413c0 -> Node0x5741aa0;
	Node0x5741aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%462:\l462:                                              \l  %463 = phi float [ %450, %451 ], [ %630, %462 ]\l  %464 = phi i32 [ %431, %451 ], [ %631, %462 ]\l  %465 = add i32 %454, %464\l  %466 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gaussian_matrix, i32 0, i32 %465\l  %467 = load float, float addrspace(3)* %466, align 4, !tbaa !10\l  %468 = fmul contract float %467, %467\l  %469 = add i32 %464, %425\l  %470 = add i32 %460, %469\l  %471 = getelementptr inbounds float, float addrspace(3)* %77, i32 %470\l  %472 = load float, float addrspace(3)* %471, align 4, !tbaa !10\l  %473 = add i32 %461, %469\l  %474 = getelementptr inbounds float, float addrspace(3)* %422, i32 %473\l  %475 = load float, float addrspace(3)* %474, align 4, !tbaa !10\l  %476 = fsub contract float %472, %475\l  %477 = tail call float @llvm.fabs.f32(float %476)\l  %478 = tail call float @llvm.amdgcn.frexp.mant.f32(float %477)\l  %479 = fcmp olt float %478, 0x3FE5555560000000\l  %480 = zext i1 %479 to i32\l  %481 = tail call float @llvm.amdgcn.ldexp.f32(float %478, i32 %480)\l  %482 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %477)\l  %483 = sub nsw i32 %482, %480\l  %484 = fadd float %481, -1.000000e+00\l  %485 = fadd float %481, 1.000000e+00\l  %486 = fadd float %485, -1.000000e+00\l  %487 = fsub float %481, %486\l  %488 = tail call float @llvm.amdgcn.rcp.f32(float %485)\l  %489 = fmul float %484, %488\l  %490 = fmul float %485, %489\l  %491 = fneg float %490\l  %492 = tail call float @llvm.fma.f32(float %489, float %485, float %491)\l  %493 = tail call float @llvm.fma.f32(float %489, float %487, float %492)\l  %494 = fadd float %490, %493\l  %495 = fsub float %494, %490\l  %496 = fsub float %493, %495\l  %497 = fsub float %484, %494\l  %498 = fsub float %484, %497\l  %499 = fsub float %498, %494\l  %500 = fsub float %499, %496\l  %501 = fadd float %497, %500\l  %502 = fmul float %488, %501\l  %503 = fadd float %489, %502\l  %504 = fsub float %503, %489\l  %505 = fsub float %502, %504\l  %506 = fmul float %503, %503\l  %507 = fneg float %506\l  %508 = tail call float @llvm.fma.f32(float %503, float %503, float %507)\l  %509 = fmul float %505, 2.000000e+00\l  %510 = tail call float @llvm.fma.f32(float %503, float %509, float %508)\l  %511 = fadd float %506, %510\l  %512 = fsub float %511, %506\l  %513 = fsub float %510, %512\l  %514 = tail call float @llvm.fmuladd.f32(float %511, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %515 = tail call float @llvm.fmuladd.f32(float %511, float %514, float\l... 0x3FD999BDE0000000)\l  %516 = sitofp i32 %483 to float\l  %517 = fmul float %516, 0x3FE62E4300000000\l  %518 = fneg float %517\l  %519 = tail call float @llvm.fma.f32(float %516, float 0x3FE62E4300000000,\l... float %518)\l  %520 = tail call float @llvm.fma.f32(float %516, float 0xBE205C6100000000,\l... float %519)\l  %521 = fadd float %517, %520\l  %522 = fsub float %521, %517\l  %523 = fsub float %520, %522\l  %524 = tail call float @llvm.amdgcn.ldexp.f32(float %503, i32 1)\l  %525 = fmul float %503, %511\l  %526 = fneg float %525\l  %527 = tail call float @llvm.fma.f32(float %511, float %503, float %526)\l  %528 = tail call float @llvm.fma.f32(float %511, float %505, float %527)\l  %529 = tail call float @llvm.fma.f32(float %513, float %503, float %528)\l  %530 = fadd float %525, %529\l  %531 = fsub float %530, %525\l  %532 = fsub float %529, %531\l  %533 = fmul float %511, %515\l  %534 = fneg float %533\l  %535 = tail call float @llvm.fma.f32(float %511, float %515, float %534)\l  %536 = tail call float @llvm.fma.f32(float %513, float %515, float %535)\l  %537 = fadd float %533, %536\l  %538 = fsub float %537, %533\l  %539 = fsub float %536, %538\l  %540 = fadd float %537, 0x3FE5555540000000\l  %541 = fadd float %540, 0xBFE5555540000000\l  %542 = fsub float %537, %541\l  %543 = fadd float %539, 0x3E2E720200000000\l  %544 = fadd float %543, %542\l  %545 = fadd float %540, %544\l  %546 = fsub float %545, %540\l  %547 = fsub float %544, %546\l  %548 = fmul float %530, %545\l  %549 = fneg float %548\l  %550 = tail call float @llvm.fma.f32(float %530, float %545, float %549)\l  %551 = tail call float @llvm.fma.f32(float %530, float %547, float %550)\l  %552 = tail call float @llvm.fma.f32(float %532, float %545, float %551)\l  %553 = tail call float @llvm.amdgcn.ldexp.f32(float %505, i32 1)\l  %554 = fadd float %548, %552\l  %555 = fsub float %554, %548\l  %556 = fsub float %552, %555\l  %557 = fadd float %524, %554\l  %558 = fsub float %557, %524\l  %559 = fsub float %554, %558\l  %560 = fadd float %553, %556\l  %561 = fadd float %560, %559\l  %562 = fadd float %557, %561\l  %563 = fsub float %562, %557\l  %564 = fsub float %561, %563\l  %565 = fadd float %521, %562\l  %566 = fsub float %565, %521\l  %567 = fsub float %565, %566\l  %568 = fsub float %521, %567\l  %569 = fsub float %562, %566\l  %570 = fadd float %569, %568\l  %571 = fadd float %523, %564\l  %572 = fsub float %571, %523\l  %573 = fsub float %571, %572\l  %574 = fsub float %523, %573\l  %575 = fsub float %564, %572\l  %576 = fadd float %575, %574\l  %577 = fadd float %571, %570\l  %578 = fadd float %565, %577\l  %579 = fsub float %578, %565\l  %580 = fsub float %577, %579\l  %581 = fadd float %576, %580\l  %582 = fadd float %578, %581\l  %583 = fsub float %582, %578\l  %584 = fsub float %581, %583\l  %585 = fmul float %582, 2.000000e+00\l  %586 = fneg float %585\l  %587 = tail call float @llvm.fma.f32(float %582, float 2.000000e+00, float\l... %586)\l  %588 = tail call float @llvm.fma.f32(float %584, float 2.000000e+00, float\l... %587)\l  %589 = fadd float %585, %588\l  %590 = fsub float %589, %585\l  %591 = fsub float %588, %590\l  %592 = tail call float @llvm.fabs.f32(float %585) #4\l  %593 = fcmp oeq float %592, 0x7FF0000000000000\l  %594 = select i1 %593, float %585, float %589\l  %595 = tail call float @llvm.fabs.f32(float %594) #4\l  %596 = fcmp oeq float %595, 0x7FF0000000000000\l  %597 = select i1 %596, float 0.000000e+00, float %591\l  %598 = fcmp oeq float %594, 0x40562E4300000000\l  %599 = select i1 %598, float 0x3EE0000000000000, float 0.000000e+00\l  %600 = fsub float %594, %599\l  %601 = fadd float %599, %597\l  %602 = fmul float %600, 0x3FF7154760000000\l  %603 = tail call float @llvm.rint.f32(float %602)\l  %604 = fcmp ogt float %600, 0x40562E4300000000\l  %605 = fcmp olt float %600, 0xC059D1DA00000000\l  %606 = fneg float %602\l  %607 = tail call float @llvm.fma.f32(float %600, float 0x3FF7154760000000,\l... float %606)\l  %608 = tail call float @llvm.fma.f32(float %600, float 0x3E54AE0BE0000000,\l... float %607)\l  %609 = fsub float %602, %603\l  %610 = fadd float %608, %609\l  %611 = tail call float @llvm.exp2.f32(float %610)\l  %612 = fptosi float %603 to i32\l  %613 = tail call float @llvm.amdgcn.ldexp.f32(float %611, i32 %612)\l  %614 = select i1 %605, float 0.000000e+00, float %613\l  %615 = select i1 %604, float 0x7FF0000000000000, float %614\l  %616 = tail call float @llvm.fma.f32(float %615, float %601, float %615)\l  %617 = tail call float @llvm.fabs.f32(float %615) #4\l  %618 = fcmp oeq float %617, 0x7FF0000000000000\l  %619 = select i1 %618, float %615, float %616\l  %620 = tail call float @llvm.fabs.f32(float %619)\l  %621 = fcmp oeq float %477, 0x7FF0000000000000\l  %622 = fcmp oeq float %476, 0.000000e+00\l  %623 = select i1 %621, float 0x7FF0000000000000, float %620\l  %624 = select i1 %622, float 0.000000e+00, float %623\l  %625 = fcmp uno float %476, 0.000000e+00\l  %626 = select i1 %625, float 0x7FF8000000000000, float %624\l  %627 = fcmp oeq float %476, 1.000000e+00\l  %628 = select i1 %627, float 1.000000e+00, float %626\l  %629 = fmul contract float %468, %628\l  %630 = fadd contract float %463, %629\l  %631 = add i32 %464, 1\l  %632 = icmp eq i32 %464, %434\l  br i1 %632, label %633, label %462, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5741aa0:s0 -> Node0x5741160;
	Node0x5741aa0:s1 -> Node0x5741aa0;
	Node0x5741160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%633:\l633:                                              \l  %634 = phi float [ %450, %448 ], [ %630, %462 ]\l  %635 = add i32 %449, 1\l  %636 = icmp eq i32 %449, %435\l  br i1 %636, label %637, label %448, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x5741160:s0 -> Node0x5740d20;
	Node0x5741160:s1 -> Node0x5740ff0;
	Node0x5740d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%637:\l637:                                              \l  %638 = phi float [ 0.000000e+00, %444 ], [ %634, %633 ]\l  %639 = fneg contract float %638\l  %640 = fdiv contract float %639, %6\l  %641 = fmul float %640, 0x3FF7154760000000\l  %642 = tail call float @llvm.rint.f32(float %641)\l  %643 = fcmp ogt float %640, 0x40562E4300000000\l  %644 = fcmp olt float %640, 0xC059D1DA00000000\l  %645 = fneg float %641\l  %646 = tail call float @llvm.fma.f32(float %640, float 0x3FF7154760000000,\l... float %645)\l  %647 = tail call float @llvm.fma.f32(float %640, float 0x3E54AE0BE0000000,\l... float %646)\l  %648 = fsub float %641, %642\l  %649 = fadd float %647, %648\l  %650 = tail call float @llvm.exp2.f32(float %649)\l  %651 = fptosi float %642 to i32\l  %652 = tail call float @llvm.amdgcn.ldexp.f32(float %650, i32 %651)\l  %653 = select i1 %644, float 0.000000e+00, float %652\l  %654 = select i1 %643, float 0x7FF0000000000000, float %653\l  %655 = fadd contract float %446, %654\l  %656 = add i32 %443, %447\l  %657 = getelementptr inbounds float, float addrspace(3)* %422, i32 %656\l  %658 = load float, float addrspace(3)* %657, align 4, !tbaa !10\l  %659 = fmul contract float %658, %654\l  %660 = fadd contract float %445, %659\l  %661 = add nuw nsw i32 %447, 1\l  %662 = icmp eq i32 %661, %63\l  br i1 %662, label %663, label %444, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x5740d20:s0 -> Node0x57407d0;
	Node0x5740d20:s1 -> Node0x5740c20;
	Node0x57407d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%663:\l663:                                              \l  %664 = add nuw nsw i32 %440, 1\l  %665 = icmp eq i32 %664, %54\l  br i1 %665, label %666, label %437, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x57407d0:s0 -> Node0x574bff0;
	Node0x57407d0:s1 -> Node0x57406d0;
	Node0x574bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%666:\l666:                                              \l  br i1 %291, label %667, label %673\l|{<s0>T|<s1>F}}"];
	Node0x574bff0:s0 -> Node0x574c1b0;
	Node0x574bff0:s1 -> Node0x57397b0;
	Node0x574c1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%667:\l667:                                              \l  %668 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %271, align 4, !tbaa !4\l  %669 = extractelement \<2 x i32\> %668, i64 0\l  %670 = extractelement \<2 x i32\> %668, i64 1\l  %671 = mul nsw i32 %670, %669\l  %672 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)*\l... @gaussian_matrix, i32 0, i32 %671\l  br label %673\l}"];
	Node0x574c1b0 -> Node0x57397b0;
	Node0x57397b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%673:\l673:                                              \l  %674 = phi float addrspace(3)* [ %672, %667 ], [ %422, %666 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %675 = add nuw nsw i32 %289, 1\l  %676 = icmp eq i32 %675, %253\l  br i1 %676, label %677, label %285, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x57397b0:s0 -> Node0x5738cf0;
	Node0x57397b0:s1 -> Node0x57396c0;
	Node0x5738cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%677:\l677:                                              \l  %678 = phi float [ %275, %272 ], [ %655, %673 ]\l  %679 = phi float [ %274, %272 ], [ %660, %673 ]\l  %680 = phi float addrspace(3)* [ %273, %272 ], [ %674, %673 ]\l  %681 = add nuw nsw i32 %276, 1\l  %682 = icmp eq i32 %681, %246\l  br i1 %682, label %683, label %272, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x5738cf0:s0 -> Node0x574cda0;
	Node0x5738cf0:s1 -> Node0x5738c30;
	Node0x574cda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6687ed70",label="{%683:\l683:                                              \l  %684 = fdiv contract float %679, %678\l  br label %685\l}"];
	Node0x574cda0 -> Node0x5737020;
	Node0x5737020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%685:\l685:                                              \l  %686 = phi float [ %684, %683 ], [ 0x7FF8000000000000, %241 ]\l  %687 = mul nsw i32 %78, %3\l  %688 = add nsw i32 %79, %687\l  %689 = sext i32 %688 to i64\l  %690 = getelementptr inbounds float, float addrspace(1)* %1, i64 %689\l  store float %686, float addrspace(1)* %690, align 4, !tbaa !10\l  ret void\l}"];
}
