digraph "CFG for '_Z20multiplyMatrixVectorPiS_S_i' function" {
	label="CFG for '_Z20multiplyMatrixVectorPiS_S_i' function";

	Node0x49e1d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = mul i32 %5, %3\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = mul i32 %9, %3\l  %11 = add i32 %10, %7\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %12\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %15 = sext i32 %8 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %18 = mul nsw i32 %17, %14\l  %19 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %7\l  store i32 %18, i32 addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %20 = icmp eq i32 %7, 0\l  br i1 %20, label %21, label %89\l|{<s0>T|<s1>F}}"];
	Node0x49e1d40:s0 -> Node0x49e5020;
	Node0x49e1d40:s1 -> Node0x49e50b0;
	Node0x49e5020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !10, !invariant.load\l... !9\l  %26 = zext i16 %25 to i32\l  %27 = and i32 %26, 7\l  %28 = icmp ult i16 %25, 8\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x49e5020:s0 -> Node0x49e5900;
	Node0x49e5020:s1 -> Node0x49e5990;
	Node0x49e5990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  %30 = and i32 %26, 2040\l  br label %51\l}"];
	Node0x49e5990 -> Node0x49e5b90;
	Node0x49e5900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = phi i32 [ undef, %21 ], [ %85, %51 ]\l  %33 = phi i32 [ 0, %21 ], [ %86, %51 ]\l  %34 = phi i32 [ 0, %21 ], [ %85, %51 ]\l  %35 = icmp eq i32 %27, 0\l  br i1 %35, label %46, label %36\l|{<s0>T|<s1>F}}"];
	Node0x49e5900:s0 -> Node0x49e6090;
	Node0x49e5900:s1 -> Node0x49e6120;
	Node0x49e6120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %43, %36 ], [ %33, %31 ]\l  %38 = phi i32 [ %42, %36 ], [ %34, %31 ]\l  %39 = phi i32 [ %44, %36 ], [ 0, %31 ]\l  %40 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %37\l  %41 = load i32, i32 addrspace(3)* %40, align 4, !tbaa !5\l  %42 = add nsw i32 %41, %38\l  %43 = add nuw nsw i32 %37, 1\l  %44 = add i32 %39, 1\l  %45 = icmp eq i32 %44, %27\l  br i1 %45, label %46, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x49e6120:s0 -> Node0x49e6090;
	Node0x49e6120:s1 -> Node0x49e6120;
	Node0x49e6090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%46:\l46:                                               \l  %47 = phi i32 [ %32, %31 ], [ %42, %36 ]\l  %48 = add i32 %6, %9\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %49\l  store i32 %47, i32 addrspace(1)* %50, align 4, !tbaa !5\l  br label %89\l}"];
	Node0x49e6090 -> Node0x49e50b0;
	Node0x49e5b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%51:\l51:                                               \l  %52 = phi i32 [ 0, %29 ], [ %86, %51 ]\l  %53 = phi i32 [ 0, %29 ], [ %85, %51 ]\l  %54 = phi i32 [ 0, %29 ], [ %87, %51 ]\l  %55 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %52\l  %56 = load i32, i32 addrspace(3)* %55, align 16, !tbaa !5\l  %57 = add nsw i32 %56, %53\l  %58 = or i32 %52, 1\l  %59 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %58\l  %60 = load i32, i32 addrspace(3)* %59, align 4, !tbaa !5\l  %61 = add nsw i32 %60, %57\l  %62 = or i32 %52, 2\l  %63 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %62\l  %64 = load i32, i32 addrspace(3)* %63, align 8, !tbaa !5\l  %65 = add nsw i32 %64, %61\l  %66 = or i32 %52, 3\l  %67 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %66\l  %68 = load i32, i32 addrspace(3)* %67, align 4, !tbaa !5\l  %69 = add nsw i32 %68, %65\l  %70 = or i32 %52, 4\l  %71 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %70\l  %72 = load i32, i32 addrspace(3)* %71, align 16, !tbaa !5\l  %73 = add nsw i32 %72, %69\l  %74 = or i32 %52, 5\l  %75 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %74\l  %76 = load i32, i32 addrspace(3)* %75, align 4, !tbaa !5\l  %77 = add nsw i32 %76, %73\l  %78 = or i32 %52, 6\l  %79 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %78\l  %80 = load i32, i32 addrspace(3)* %79, align 8, !tbaa !5\l  %81 = add nsw i32 %80, %77\l  %82 = or i32 %52, 7\l  %83 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ20multiplyMatrixVectorPiS_S_iE12reduce_array, i32 0, i32 %82\l  %84 = load i32, i32 addrspace(3)* %83, align 4, !tbaa !5\l  %85 = add nsw i32 %84, %81\l  %86 = add nuw nsw i32 %52, 8\l  %87 = add i32 %54, 8\l  %88 = icmp eq i32 %87, %30\l  br i1 %88, label %31, label %51, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x49e5b90:s0 -> Node0x49e5900;
	Node0x49e5b90:s1 -> Node0x49e5b90;
	Node0x49e50b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%89:\l89:                                               \l  ret void\l}"];
}
