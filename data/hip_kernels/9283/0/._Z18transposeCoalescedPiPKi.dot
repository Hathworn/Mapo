digraph "CFG for '_Z18transposeCoalescedPiPKi' function" {
	label="CFG for '_Z18transposeCoalescedPiPKi' function";

	Node0x4d74d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = shl i32 %3, 5\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = add i32 %4, %5\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = shl i32 %7, 5\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !5\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !14, !invariant.load\l... !15\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 5\l  %24 = add i32 %9, %8\l  %25 = mul nsw i32 %23, %24\l  %26 = add nsw i32 %6, %25\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %30 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %9, i32 %5\l  store i32 %29, i32 addrspace(3)* %30, align 4, !tbaa !16\l  %31 = add nuw nsw i32 %9, 8\l  %32 = add i32 %31, %8\l  %33 = mul nsw i32 %23, %32\l  %34 = add nsw i32 %6, %33\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %38 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %31, i32 %5\l  store i32 %37, i32 addrspace(3)* %38, align 4, !tbaa !16\l  %39 = add nuw nsw i32 %9, 16\l  %40 = add i32 %39, %8\l  %41 = mul nsw i32 %23, %40\l  %42 = add nsw i32 %6, %41\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %46 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %39, i32 %5\l  store i32 %45, i32 addrspace(3)* %46, align 4, !tbaa !16\l  %47 = add nuw nsw i32 %9, 24\l  %48 = add i32 %47, %8\l  %49 = mul nsw i32 %23, %48\l  %50 = add nsw i32 %6, %49\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %54 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %47, i32 %5\l  store i32 %53, i32 addrspace(3)* %54, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = add i32 %8, %5\l  %56 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %5, i32 %9\l  %57 = load i32, i32 addrspace(3)* %56, align 4, !tbaa !16\l  %58 = add i32 %9, %4\l  %59 = mul nsw i32 %23, %58\l  %60 = add nsw i32 %55, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %61\l  store i32 %57, i32 addrspace(1)* %62, align 4, !tbaa !16\l  %63 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %5, i32 %31\l  %64 = load i32, i32 addrspace(3)* %63, align 4, !tbaa !16\l  %65 = add i32 %31, %4\l  %66 = mul nsw i32 %23, %65\l  %67 = add nsw i32 %55, %66\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %68\l  store i32 %64, i32 addrspace(1)* %69, align 4, !tbaa !16\l  %70 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %5, i32 %39\l  %71 = load i32, i32 addrspace(3)* %70, align 4, !tbaa !16\l  %72 = add i32 %39, %4\l  %73 = mul nsw i32 %23, %72\l  %74 = add nsw i32 %55, %73\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  store i32 %71, i32 addrspace(1)* %76, align 4, !tbaa !16\l  %77 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ18transposeCoalescedPiPKiE4tile, i32 0, i32 %5, i32 %47\l  %78 = load i32, i32 addrspace(3)* %77, align 4, !tbaa !16\l  %79 = add i32 %47, %4\l  %80 = mul nsw i32 %23, %79\l  %81 = add nsw i32 %55, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %82\l  store i32 %78, i32 addrspace(1)* %83, align 4, !tbaa !16\l  ret void\l}"];
}
