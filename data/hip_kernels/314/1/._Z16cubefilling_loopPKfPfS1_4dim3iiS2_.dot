digraph "CFG for '_Z16cubefilling_loopPKfPfS1_4dim3iiS2_' function" {
	label="CFG for '_Z16cubefilling_loopPKfPfS1_4dim3iiS2_' function";

	Node0x4d35810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l  %8 = getelementptr inbounds %struct.dim3, %struct.dim3 addrspace(4)* %3, i64\l... 0, i32 0\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !amdgpu.noclobber !4\l  %10 = getelementptr inbounds %struct.dim3, %struct.dim3 addrspace(4)* %3,\l... i64 0, i32 1\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !amdgpu.noclobber !4\l  %12 = getelementptr inbounds %struct.dim3, %struct.dim3 addrspace(4)* %6,\l... i64 0, i32 0\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !amdgpu.noclobber !4\l  %14 = getelementptr inbounds %struct.dim3, %struct.dim3 addrspace(4)* %6,\l... i64 0, i32 1\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !amdgpu.noclobber !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !4\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %16, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !5, !invariant.load !4\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %25, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %32 = add i32 %30, %31\l  %33 = icmp ult i32 %24, %13\l  %34 = icmp ult i32 %32, %15\l  %35 = select i1 %33, i1 %34, i1 false\l  %36 = icmp sgt i32 %4, 0\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4d35810:s0 -> Node0x4d3a150;
	Node0x4d35810:s1 -> Node0x4d3c400;
	Node0x4d3a150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%38:\l38:                                               \l  %39 = mul i32 %32, %13\l  %40 = add i32 %39, %24\l  %41 = mul i32 %24, %4\l  %42 = mul i32 %32, %4\l  %43 = zext i32 %9 to i64\l  %44 = uitofp i32 %40 to float\l  %45 = mul i32 %15, %13\l  %46 = uitofp i32 %45 to float\l  %47 = sitofp i32 %5 to float\l  br label %48\l}"];
	Node0x4d3a150 -> Node0x4d3c9d0;
	Node0x4d3c9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %38 ], [ %54, %53 ]\l  %50 = add i32 %49, %41\l  %51 = icmp ult i32 %50, %9\l  %52 = zext i32 %50 to i64\l  br label %56\l}"];
	Node0x4d3c9d0 -> Node0x4d3cd90;
	Node0x4d3cac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%53:\l53:                                               \l  %54 = add nuw nsw i32 %49, 1\l  %55 = icmp eq i32 %54, %4\l  br i1 %55, label %81, label %48, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x4d3cac0:s0 -> Node0x4d3c400;
	Node0x4d3cac0:s1 -> Node0x4d3c9d0;
	Node0x4d3cd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ 0, %48 ], [ %79, %78 ]\l  %58 = add i32 %57, %42\l  %59 = icmp ult i32 %58, %11\l  %60 = select i1 %51, i1 %59, i1 false\l  br i1 %60, label %61, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4d3cd90:s0 -> Node0x4d3d430;
	Node0x4d3cd90:s1 -> Node0x4d3d120;
	Node0x4d3d430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  %62 = zext i32 %58 to i64\l  %63 = mul nuw i64 %62, %43\l  %64 = add nuw i64 %63, %52\l  %65 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !10\l  %67 = fdiv contract float %66, %47\l  %68 = tail call float @llvm.floor.f32(float %67)\l  %69 = fmul contract float %68, %46\l  %70 = fadd contract float %69, %44\l  %71 = fptoui float %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !10\l  %74 = fadd contract float %66, %73\l  store float %74, float addrspace(1)* %72, align 4, !tbaa !10\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !10\l  %77 = fadd contract float %76, 1.000000e+00\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !10\l  br label %78\l}"];
	Node0x4d3d430 -> Node0x4d3d120;
	Node0x4d3d120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = add nuw nsw i32 %57, 1\l  %80 = icmp eq i32 %79, %4\l  br i1 %80, label %53, label %56, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4d3d120:s0 -> Node0x4d3cac0;
	Node0x4d3d120:s1 -> Node0x4d3cd90;
	Node0x4d3c400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%81:\l81:                                               \l  ret void\l}"];
}
