digraph "CFG for '_Z15computeCovDxdPiPiS_S_iPdiddS0_S0_i' function" {
	label="CFG for '_Z15computeCovDxdPiPiS_S_iPdiddS0_S0_i' function";

	Node0x519e7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%11:\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = udiv i32 %19, %16\l  %21 = mul i32 %20, %16\l  %22 = icmp ugt i32 %19, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %16\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %28 = icmp slt i32 %26, 3\l  %29 = icmp slt i32 %27, 6\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %95\l|{<s0>T|<s1>F}}"];
	Node0x519e7a0:s0 -> Node0x51a17e0;
	Node0x519e7a0:s1 -> Node0x51a1870;
	Node0x51a17e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%31:\l31:                                               \l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %33 = mul i32 %32, %16\l  %34 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %35 = add i32 %33, %34\l  %36 = mul nsw i32 %26, 3\l  %37 = mul nsw i32 %36, %5\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %4, i64 %38\l  %40 = sext i32 %5 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %39, i64 %40\l  %42 = getelementptr inbounds double, double addrspace(1)* %41, i64 %40\l  %43 = mul nsw i32 %26, 6\l  %44 = add nsw i32 %43, %27\l  %45 = mul nsw i32 %44, %10\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %9, i64 %46\l  %48 = mul nsw i32 %27, %3\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %8, i64 %49\l  %51 = mul nsw i32 %3, 6\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %50, i64 %52\l  %54 = getelementptr inbounds double, double addrspace(1)* %53, i64 %52\l  %55 = icmp slt i32 %35, %3\l  br i1 %55, label %56, label %95\l|{<s0>T|<s1>F}}"];
	Node0x51a17e0:s0 -> Node0x51a2c70;
	Node0x51a17e0:s1 -> Node0x51a1870;
	Node0x51a2c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%56:\l56:                                               \l  %57 = phi i32 [ %73, %72 ], [ %35, %31 ]\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %50, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !16\l  %61 = getelementptr inbounds double, double addrspace(1)* %53, i64 %58\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !16\l  %63 = getelementptr inbounds double, double addrspace(1)* %54, i64 %58\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !16\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %67 = add nsw i32 %57, 1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %71 = icmp slt i32 %66, %70\l  br i1 %71, label %75, label %72\l|{<s0>T|<s1>F}}"];
	Node0x51a2c70:s0 -> Node0x51a4de0;
	Node0x51a2c70:s1 -> Node0x51a2db0;
	Node0x51a2db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%72:\l72:                                               \l  %73 = add nsw i32 %57, %25\l  %74 = icmp slt i32 %73, %3\l  br i1 %74, label %56, label %95, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x51a2db0:s0 -> Node0x51a2c70;
	Node0x51a2db0:s1 -> Node0x51a1870;
	Node0x51a4de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = phi i32 [ %93, %75 ], [ %66, %56 ]\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %39, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !16\l  %83 = fmul contract double %60, %82\l  %84 = getelementptr inbounds double, double addrspace(1)* %41, i64 %80\l  %85 = load double, double addrspace(1)* %84, align 8, !tbaa !16\l  %86 = fmul contract double %62, %85\l  %87 = fadd contract double %83, %86\l  %88 = getelementptr inbounds double, double addrspace(1)* %42, i64 %80\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !16\l  %90 = fmul contract double %64, %89\l  %91 = fadd contract double %87, %90\l  %92 = getelementptr inbounds double, double addrspace(1)* %47, i64 %77\l  store double %91, double addrspace(1)* %92, align 8, !tbaa !16\l  %93 = add nsw i32 %76, 1\l  %94 = icmp slt i32 %93, %70\l  br i1 %94, label %75, label %72, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x51a4de0:s0 -> Node0x51a4de0;
	Node0x51a4de0:s1 -> Node0x51a2db0;
	Node0x51a1870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%95:\l95:                                               \l  ret void\l}"];
}
