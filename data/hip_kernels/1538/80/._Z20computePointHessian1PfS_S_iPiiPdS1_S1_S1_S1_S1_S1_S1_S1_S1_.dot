digraph "CFG for '_Z20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_' function" {
	label="CFG for '_Z20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_' function";

	Node0x4dd3b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !7\l  %27 = mul i32 %18, %23\l  %28 = add i32 %27, %17\l  %29 = udiv i32 %26, %23\l  %30 = mul i32 %29, %23\l  %31 = icmp ugt i32 %26, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %23\l  %35 = icmp ult i32 %17, 18\l  br i1 %35, label %36, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4dd3b90:s0 -> Node0x4dd4670;
	Node0x4dd3b90:s1 -> Node0x4dd6ac0;
	Node0x4dd4670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = add nuw nsw i32 %17, 18\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %6, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = getelementptr inbounds [18 x double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 %17\l  store double %40, double addrspace(3)* %41, align 8, !tbaa !16\l  br label %42\l}"];
	Node0x4dd4670 -> Node0x4dd6ac0;
	Node0x4dd6ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = icmp slt i32 %28, %5\l  br i1 %43, label %44, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4dd6ac0:s0 -> Node0x4dd8130;
	Node0x4dd6ac0:s1 -> Node0x4dd8180;
	Node0x4dd8130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%44:\l44:                                               \l  %45 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 0), align 16, !tbaa !16\l  %46 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 1), align 8, !tbaa !16\l  %47 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 2), align 16, !tbaa !16\l  %48 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 3), align 8, !tbaa !16\l  %49 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 4), align 16, !tbaa !16\l  %50 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 5), align 8, !tbaa !16\l  %51 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 6), align 16, !tbaa !16\l  %52 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 7), align 8, !tbaa !16\l  %53 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 8), align 16, !tbaa !16\l  %54 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 9), align 8, !tbaa !16\l  %55 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 10), align 16, !tbaa !16\l  %56 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 11), align 8, !tbaa !16\l  %57 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 12), align 16, !tbaa !16\l  %58 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 13), align 8, !tbaa !16\l  %59 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 14), align 16, !tbaa !16\l  %60 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 15), align 8, !tbaa !16\l  %61 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 16), align 16, !tbaa !16\l  %62 = load double, double addrspace(3)* getelementptr inbounds ([18 x\l... double], [18 x double] addrspace(3)*\l... @_ZZ20computePointHessian1PfS_S_iPiiPdS1_S1_S1_S1_S1_S1_S1_S1_S1_E5h_ang, i32\l... 0, i32 17), align 8, !tbaa !16\l  br label %64\l}"];
	Node0x4dd8130 -> Node0x4dd9a40;
	Node0x4dd8180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%63:\l63:                                               \l  ret void\l}"];
	Node0x4dd9a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %28, %44 ], [ %118, %64 ]\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !20, !amdgpu.noclobber\l... !6\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !22,\l... !amdgpu.noclobber !6\l  %72 = fpext float %71 to double\l  %73 = getelementptr inbounds float, float addrspace(1)* %1, i64 %69\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !22,\l... !amdgpu.noclobber !6\l  %75 = fpext float %74 to double\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %69\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !22,\l... !amdgpu.noclobber !6\l  %78 = fpext float %77 to double\l  %79 = fmul contract double %45, %72\l  %80 = fmul contract double %46, %75\l  %81 = fadd contract double %79, %80\l  %82 = fmul contract double %47, %78\l  %83 = fadd contract double %81, %82\l  %84 = getelementptr inbounds double, double addrspace(1)* %7, i64 %66\l  store double %83, double addrspace(1)* %84, align 8, !tbaa !16\l  %85 = fmul contract double %48, %72\l  %86 = fmul contract double %49, %75\l  %87 = fadd contract double %85, %86\l  %88 = fmul contract double %50, %78\l  %89 = fadd contract double %87, %88\l  %90 = getelementptr inbounds double, double addrspace(1)* %8, i64 %66\l  store double %89, double addrspace(1)* %90, align 8, !tbaa !16\l  %91 = fmul contract double %51, %72\l  %92 = fmul contract double %52, %75\l  %93 = fadd contract double %91, %92\l  %94 = fmul contract double %53, %78\l  %95 = fadd contract double %93, %94\l  %96 = getelementptr inbounds double, double addrspace(1)* %9, i64 %66\l  store double %95, double addrspace(1)* %96, align 8, !tbaa !16\l  %97 = fmul contract double %54, %72\l  %98 = fmul contract double %55, %75\l  %99 = fadd contract double %97, %98\l  %100 = fmul contract double %56, %78\l  %101 = fadd contract double %99, %100\l  %102 = getelementptr inbounds double, double addrspace(1)* %11, i64 %66\l  store double %101, double addrspace(1)* %102, align 8, !tbaa !16\l  %103 = getelementptr inbounds double, double addrspace(1)* %10, i64 %66\l  store double %101, double addrspace(1)* %103, align 8, !tbaa !16\l  %104 = fmul contract double %57, %72\l  %105 = fmul contract double %58, %75\l  %106 = fadd contract double %104, %105\l  %107 = fmul contract double %59, %78\l  %108 = fadd contract double %106, %107\l  %109 = getelementptr inbounds double, double addrspace(1)* %13, i64 %66\l  store double %108, double addrspace(1)* %109, align 8, !tbaa !16\l  %110 = getelementptr inbounds double, double addrspace(1)* %12, i64 %66\l  store double %108, double addrspace(1)* %110, align 8, !tbaa !16\l  %111 = fmul contract double %60, %72\l  %112 = fmul contract double %61, %75\l  %113 = fadd contract double %111, %112\l  %114 = fmul contract double %62, %78\l  %115 = fadd contract double %113, %114\l  %116 = getelementptr inbounds double, double addrspace(1)* %15, i64 %66\l  store double %115, double addrspace(1)* %116, align 8, !tbaa !16\l  %117 = getelementptr inbounds double, double addrspace(1)* %14, i64 %66\l  store double %115, double addrspace(1)* %117, align 8, !tbaa !16\l  %118 = add nsw i32 %65, %34\l  %119 = icmp slt i32 %118, %5\l  br i1 %119, label %64, label %63, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4dd9a40:s0 -> Node0x4dd9a40;
	Node0x4dd9a40:s1 -> Node0x4dd8180;
}
