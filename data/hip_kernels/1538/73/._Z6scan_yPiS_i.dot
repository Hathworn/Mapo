digraph "CFG for '_Z6scan_yPiS_i' function" {
	label="CFG for '_Z6scan_yPiS_i' function";

	Node0x50d2ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = udiv i32 %13, %10\l  %15 = mul i32 %14, %10\l  %16 = icmp ugt i32 %13, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = shl nuw nsw i32 %4, 1\l  %20 = mul nsw i32 %18, %19\l  %21 = add nsw i32 %20, %5\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %25 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %19\l  store i32 %24, i32 addrspace(3)* %25, align 4, !tbaa !16\l  %26 = add nsw i32 %21, %18\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %30 = add nuw nsw i32 %19, 1\l  %31 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %30\l  store i32 %29, i32 addrspace(3)* %31, align 4, !tbaa !16\l  %32 = icmp sgt i32 %2, 1\l  br i1 %32, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x50d2ba0:s0 -> Node0x50d4df0;
	Node0x50d2ba0:s1 -> Node0x50d4e80;
	Node0x50d4df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%33:\l33:                                               \l  %34 = add nuw nsw i32 %19, 2\l  br label %38\l}"];
	Node0x50d4df0 -> Node0x50d6a60;
	Node0x50d4e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%35:\l35:                                               \l  %36 = phi i32 [ 1, %3 ], [ %54, %53 ]\l  %37 = icmp eq i32 %4, 0\l  br i1 %37, label %56, label %59\l|{<s0>T|<s1>F}}"];
	Node0x50d4e80:s0 -> Node0x50d6cf0;
	Node0x50d4e80:s1 -> Node0x50d6d80;
	Node0x50d6a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %2, %33 ], [ %41, %53 ]\l  %40 = phi i32 [ 1, %33 ], [ %54, %53 ]\l  %41 = ashr i32 %39, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = icmp slt i32 %4, %41\l  br i1 %42, label %43, label %53\l|{<s0>T|<s1>F}}"];
	Node0x50d6a60:s0 -> Node0x50d7400;
	Node0x50d6a60:s1 -> Node0x50d6b20;
	Node0x50d7400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = mul nsw i32 %40, %30\l  %45 = add nsw i32 %44, -1\l  %46 = mul nsw i32 %40, %34\l  %47 = add nsw i32 %46, -1\l  %48 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %45\l  %49 = load i32, i32 addrspace(3)* %48, align 4, !tbaa !16\l  %50 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %47\l  %51 = load i32, i32 addrspace(3)* %50, align 4, !tbaa !16\l  %52 = add nsw i32 %51, %49\l  store i32 %52, i32 addrspace(3)* %50, align 4, !tbaa !16\l  br label %53\l}"];
	Node0x50d7400 -> Node0x50d6b20;
	Node0x50d6b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = shl nsw i32 %40, 1\l  %55 = icmp sgt i32 %39, 3\l  br i1 %55, label %38, label %35, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50d6b20:s0 -> Node0x50d6a60;
	Node0x50d6b20:s1 -> Node0x50d4e80;
	Node0x50d6cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%56:\l56:                                               \l  %57 = add nsw i32 %2, -1\l  %58 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %57\l  store i32 0, i32 addrspace(3)* %58, align 4, !tbaa !16\l  br label %59\l}"];
	Node0x50d6cf0 -> Node0x50d6d80;
	Node0x50d6d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%59:\l59:                                               \l  %60 = add nuw nsw i32 %19, 2\l  br i1 %32, label %66, label %61\l|{<s0>T|<s1>F}}"];
	Node0x50d6d80:s0 -> Node0x50d80d0;
	Node0x50d6d80:s1 -> Node0x50d8120;
	Node0x50d8120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%61:\l61:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = load i32, i32 addrspace(3)* %31, align 4, !tbaa !16\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %22\l  store i32 %62, i32 addrspace(1)* %63, align 4, !tbaa !16\l  %64 = shl nuw nsw i32 %10, 1\l  %65 = icmp eq i32 %60, %64\l  br i1 %65, label %85, label %88\l|{<s0>T|<s1>F}}"];
	Node0x50d8120:s0 -> Node0x50d6760;
	Node0x50d8120:s1 -> Node0x50d67b0;
	Node0x50d80d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ %69, %82 ], [ %36, %59 ]\l  %68 = phi i32 [ %83, %82 ], [ 1, %59 ]\l  %69 = lshr i32 %67, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = icmp slt i32 %4, %68\l  br i1 %70, label %71, label %82\l|{<s0>T|<s1>F}}"];
	Node0x50d80d0:s0 -> Node0x50d8ef0;
	Node0x50d80d0:s1 -> Node0x50d6840;
	Node0x50d8ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%71:\l71:                                               \l  %72 = mul nsw i32 %69, %30\l  %73 = add nsw i32 %72, -1\l  %74 = mul nsw i32 %69, %60\l  %75 = add nsw i32 %74, -1\l  %76 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %73\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !16\l  %78 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %75\l  %79 = load i32, i32 addrspace(3)* %78, align 4, !tbaa !16\l  store i32 %79, i32 addrspace(3)* %76, align 4, !tbaa !16\l  %80 = load i32, i32 addrspace(3)* %78, align 4, !tbaa !16\l  %81 = add nsw i32 %80, %77\l  store i32 %81, i32 addrspace(3)* %78, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x50d8ef0 -> Node0x50d6840;
	Node0x50d6840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = shl nsw i32 %68, 1\l  %84 = icmp slt i32 %83, %2\l  br i1 %84, label %66, label %61, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x50d6840:s0 -> Node0x50d80d0;
	Node0x50d6840:s1 -> Node0x50d8120;
	Node0x50d6760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%85:\l85:                                               \l  %86 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16\l  %87 = add nsw i32 %86, %62\l  br label %91\l}"];
	Node0x50d6760 -> Node0x50d6890;
	Node0x50d67b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%88:\l88:                                               \l  %89 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @temp, i32\l... 0, i32 %60\l  %90 = load i32, i32 addrspace(3)* %89, align 4, !tbaa !16\l  br label %91\l}"];
	Node0x50d67b0 -> Node0x50d6890;
	Node0x50d6890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%91:\l91:                                               \l  %92 = phi i32 [ %87, %85 ], [ %90, %88 ]\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  store i32 %92, i32 addrspace(1)* %93, align 4\l  ret void\l}"];
}
