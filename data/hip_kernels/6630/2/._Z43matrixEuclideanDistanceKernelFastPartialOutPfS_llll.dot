digraph "CFG for '_Z43matrixEuclideanDistanceKernelFastPartialOutPfS_llll' function" {
	label="CFG for '_Z43matrixEuclideanDistanceKernelFastPartialOutPfS_llll' function";

	Node0x4af5b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = zext i32 %9 to i64\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = zext i32 %13 to i64\l  %15 = shl nuw nsw i64 %10, 4\l  %16 = mul nsw i64 %15, %3\l  %17 = shl nuw nsw i64 %8, 4\l  %18 = add nsw i64 %16, %3\l  %19 = icmp sgt i64 %3, 0\l  br i1 %19, label %20, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4af5b00:s0 -> Node0x4af7fd0;
	Node0x4af5b00:s1 -> Node0x4af8060;
	Node0x4af7fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%20:\l20:                                               \l  %21 = mul nsw i64 %17, %3\l  %22 = mul nsw i64 %14, %3\l  %23 = add i64 %22, %12\l  %24 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 %11\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 %11, i32 %13\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 0\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 0, i32 %11\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 1\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 1, i32 %11\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 2\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 2, i32 %11\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 3\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 3, i32 %11\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 4\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 4, i32 %11\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 5\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 5, i32 %11\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 6\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 6, i32 %11\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 7\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 7, i32 %11\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 8\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 8, i32 %11\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 9\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 9, i32 %11\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 10\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 10, i32 %11\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 11\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 11, i32 %11\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 12\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 12, i32 %11\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 13\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 13, i32 %11\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 14\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 14, i32 %11\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Ys,\l... i32 0, i32 %13, i32 15\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_llllE2Xs,\l... i32 0, i32 15, i32 %11\l  br label %58\l}"];
	Node0x4af7fd0 -> Node0x4afa5a0;
	Node0x4afa5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi float [ 0.000000e+00, %20 ], [ %147, %58 ]\l  %60 = phi i64 [ %16, %20 ], [ %148, %58 ]\l  %61 = phi i64 [ %21, %20 ], [ %149, %58 ]\l  %62 = add i64 %23, %60\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %64, float addrspace(3)* %24, align 4, !tbaa !5\l  %65 = add i64 %23, %61\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %67, float addrspace(3)* %25, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %68 = load float, float addrspace(3)* %26, align 16, !tbaa !5\l  %69 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %70 = fsub contract float %68, %69\l  %71 = fmul contract float %70, %70\l  %72 = fadd contract float %59, %71\l  %73 = load float, float addrspace(3)* %28, align 4, !tbaa !5\l  %74 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %75 = fsub contract float %73, %74\l  %76 = fmul contract float %75, %75\l  %77 = fadd contract float %72, %76\l  %78 = load float, float addrspace(3)* %30, align 8, !tbaa !5\l  %79 = load float, float addrspace(3)* %31, align 4, !tbaa !5\l  %80 = fsub contract float %78, %79\l  %81 = fmul contract float %80, %80\l  %82 = fadd contract float %77, %81\l  %83 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %84 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %85 = fsub contract float %83, %84\l  %86 = fmul contract float %85, %85\l  %87 = fadd contract float %82, %86\l  %88 = load float, float addrspace(3)* %34, align 16, !tbaa !5\l  %89 = load float, float addrspace(3)* %35, align 4, !tbaa !5\l  %90 = fsub contract float %88, %89\l  %91 = fmul contract float %90, %90\l  %92 = fadd contract float %87, %91\l  %93 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %94 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %95 = fsub contract float %93, %94\l  %96 = fmul contract float %95, %95\l  %97 = fadd contract float %92, %96\l  %98 = load float, float addrspace(3)* %38, align 8, !tbaa !5\l  %99 = load float, float addrspace(3)* %39, align 4, !tbaa !5\l  %100 = fsub contract float %98, %99\l  %101 = fmul contract float %100, %100\l  %102 = fadd contract float %97, %101\l  %103 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %104 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %105 = fsub contract float %103, %104\l  %106 = fmul contract float %105, %105\l  %107 = fadd contract float %102, %106\l  %108 = load float, float addrspace(3)* %42, align 16, !tbaa !5\l  %109 = load float, float addrspace(3)* %43, align 4, !tbaa !5\l  %110 = fsub contract float %108, %109\l  %111 = fmul contract float %110, %110\l  %112 = fadd contract float %107, %111\l  %113 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %114 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %115 = fsub contract float %113, %114\l  %116 = fmul contract float %115, %115\l  %117 = fadd contract float %112, %116\l  %118 = load float, float addrspace(3)* %46, align 8, !tbaa !5\l  %119 = load float, float addrspace(3)* %47, align 4, !tbaa !5\l  %120 = fsub contract float %118, %119\l  %121 = fmul contract float %120, %120\l  %122 = fadd contract float %117, %121\l  %123 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %124 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %125 = fsub contract float %123, %124\l  %126 = fmul contract float %125, %125\l  %127 = fadd contract float %122, %126\l  %128 = load float, float addrspace(3)* %50, align 16, !tbaa !5\l  %129 = load float, float addrspace(3)* %51, align 4, !tbaa !5\l  %130 = fsub contract float %128, %129\l  %131 = fmul contract float %130, %130\l  %132 = fadd contract float %127, %131\l  %133 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %134 = load float, float addrspace(3)* %53, align 4, !tbaa !5\l  %135 = fsub contract float %133, %134\l  %136 = fmul contract float %135, %135\l  %137 = fadd contract float %132, %136\l  %138 = load float, float addrspace(3)* %54, align 8, !tbaa !5\l  %139 = load float, float addrspace(3)* %55, align 4, !tbaa !5\l  %140 = fsub contract float %138, %139\l  %141 = fmul contract float %140, %140\l  %142 = fadd contract float %137, %141\l  %143 = load float, float addrspace(3)* %56, align 4, !tbaa !5\l  %144 = load float, float addrspace(3)* %57, align 4, !tbaa !5\l  %145 = fsub contract float %143, %144\l  %146 = fmul contract float %145, %145\l  %147 = fadd contract float %142, %146\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %148 = add nsw i64 %60, 16\l  %149 = add nsw i64 %61, 16\l  %150 = icmp slt i64 %148, %18\l  br i1 %150, label %58, label %151, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4afa5a0:s0 -> Node0x4afa5a0;
	Node0x4afa5a0:s1 -> Node0x4af8060;
	Node0x4af8060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%151:\l151:                                              \l  %152 = phi float [ 0.000000e+00, %6 ], [ %147, %58 ]\l  %153 = add nuw nsw i64 %15, %14\l  %154 = mul i64 %153, %2\l  %155 = add nuw nsw i64 %17, %12\l  %156 = add i64 %155, %154\l  %157 = icmp sge i64 %156, %4\l  %158 = icmp slt i64 %156, %5\l  %159 = select i1 %157, i1 %158, i1 false\l  br i1 %159, label %160, label %163\l|{<s0>T|<s1>F}}"];
	Node0x4af8060:s0 -> Node0x4b00290;
	Node0x4af8060:s1 -> Node0x4b002e0;
	Node0x4b00290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%160:\l160:                                              \l  %161 = sub nsw i64 %156, %4\l  %162 = getelementptr inbounds float, float addrspace(1)* %1, i64 %161\l  store float %152, float addrspace(1)* %162, align 4, !tbaa !5\l  br label %163\l}"];
	Node0x4b00290 -> Node0x4b002e0;
	Node0x4b002e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%163:\l163:                                              \l  ret void\l}"];
}
