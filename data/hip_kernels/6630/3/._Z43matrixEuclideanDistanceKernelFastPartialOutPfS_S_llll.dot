digraph "CFG for '_Z43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llll' function" {
	label="CFG for '_Z43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llll' function";

	Node0x55a1bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = zext i32 %8 to i64\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = zext i32 %10 to i64\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = zext i32 %12 to i64\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = zext i32 %14 to i64\l  %16 = shl nuw nsw i64 %11, 4\l  %17 = mul nsw i64 %16, %4\l  %18 = shl nuw nsw i64 %9, 4\l  %19 = add nsw i64 %17, %4\l  %20 = icmp sgt i64 %4, 0\l  br i1 %20, label %21, label %152\l|{<s0>T|<s1>F}}"];
	Node0x55a1bc0:s0 -> Node0x55a4090;
	Node0x55a1bc0:s1 -> Node0x55a4120;
	Node0x55a4090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%21:\l21:                                               \l  %22 = mul nsw i64 %18, %4\l  %23 = mul nsw i64 %15, %4\l  %24 = add i64 %23, %13\l  %25 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 %12\l  %26 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... %12, i32 %14\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 0\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 0, i32 %12\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 1\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 1, i32 %12\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 2\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 2, i32 %12\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 3\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 3, i32 %12\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 4\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 4, i32 %12\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 5\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 5, i32 %12\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 6\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 6, i32 %12\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 7\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 7, i32 %12\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 8\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 8, i32 %12\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 9\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 9, i32 %12\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 10\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 10, i32 %12\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 11\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 11, i32 %12\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 12\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 12, i32 %12\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 13\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 13, i32 %12\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 14\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 14, i32 %12\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Ys, i32 0, i32\l... %14, i32 15\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)*\l... @_ZZ43matrixEuclideanDistanceKernelFastPartialOutPfS_S_llllE2Xs, i32 0, i32\l... 15, i32 %12\l  br label %59\l}"];
	Node0x55a4090 -> Node0x55a6660;
	Node0x55a6660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ 0.000000e+00, %21 ], [ %148, %59 ]\l  %61 = phi i64 [ %17, %21 ], [ %149, %59 ]\l  %62 = phi i64 [ %22, %21 ], [ %150, %59 ]\l  %63 = add i64 %24, %61\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %65, float addrspace(3)* %25, align 4, !tbaa !5\l  %66 = add i64 %24, %62\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %68, float addrspace(3)* %26, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = load float, float addrspace(3)* %27, align 16, !tbaa !5\l  %70 = load float, float addrspace(3)* %28, align 4, !tbaa !5\l  %71 = fsub contract float %69, %70\l  %72 = fmul contract float %71, %71\l  %73 = fadd contract float %60, %72\l  %74 = load float, float addrspace(3)* %29, align 4, !tbaa !5\l  %75 = load float, float addrspace(3)* %30, align 4, !tbaa !5\l  %76 = fsub contract float %74, %75\l  %77 = fmul contract float %76, %76\l  %78 = fadd contract float %73, %77\l  %79 = load float, float addrspace(3)* %31, align 8, !tbaa !5\l  %80 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %81 = fsub contract float %79, %80\l  %82 = fmul contract float %81, %81\l  %83 = fadd contract float %78, %82\l  %84 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %85 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %86 = fsub contract float %84, %85\l  %87 = fmul contract float %86, %86\l  %88 = fadd contract float %83, %87\l  %89 = load float, float addrspace(3)* %35, align 16, !tbaa !5\l  %90 = load float, float addrspace(3)* %36, align 4, !tbaa !5\l  %91 = fsub contract float %89, %90\l  %92 = fmul contract float %91, %91\l  %93 = fadd contract float %88, %92\l  %94 = load float, float addrspace(3)* %37, align 4, !tbaa !5\l  %95 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %96 = fsub contract float %94, %95\l  %97 = fmul contract float %96, %96\l  %98 = fadd contract float %93, %97\l  %99 = load float, float addrspace(3)* %39, align 8, !tbaa !5\l  %100 = load float, float addrspace(3)* %40, align 4, !tbaa !5\l  %101 = fsub contract float %99, %100\l  %102 = fmul contract float %101, %101\l  %103 = fadd contract float %98, %102\l  %104 = load float, float addrspace(3)* %41, align 4, !tbaa !5\l  %105 = load float, float addrspace(3)* %42, align 4, !tbaa !5\l  %106 = fsub contract float %104, %105\l  %107 = fmul contract float %106, %106\l  %108 = fadd contract float %103, %107\l  %109 = load float, float addrspace(3)* %43, align 16, !tbaa !5\l  %110 = load float, float addrspace(3)* %44, align 4, !tbaa !5\l  %111 = fsub contract float %109, %110\l  %112 = fmul contract float %111, %111\l  %113 = fadd contract float %108, %112\l  %114 = load float, float addrspace(3)* %45, align 4, !tbaa !5\l  %115 = load float, float addrspace(3)* %46, align 4, !tbaa !5\l  %116 = fsub contract float %114, %115\l  %117 = fmul contract float %116, %116\l  %118 = fadd contract float %113, %117\l  %119 = load float, float addrspace(3)* %47, align 8, !tbaa !5\l  %120 = load float, float addrspace(3)* %48, align 4, !tbaa !5\l  %121 = fsub contract float %119, %120\l  %122 = fmul contract float %121, %121\l  %123 = fadd contract float %118, %122\l  %124 = load float, float addrspace(3)* %49, align 4, !tbaa !5\l  %125 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %126 = fsub contract float %124, %125\l  %127 = fmul contract float %126, %126\l  %128 = fadd contract float %123, %127\l  %129 = load float, float addrspace(3)* %51, align 16, !tbaa !5\l  %130 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %131 = fsub contract float %129, %130\l  %132 = fmul contract float %131, %131\l  %133 = fadd contract float %128, %132\l  %134 = load float, float addrspace(3)* %53, align 4, !tbaa !5\l  %135 = load float, float addrspace(3)* %54, align 4, !tbaa !5\l  %136 = fsub contract float %134, %135\l  %137 = fmul contract float %136, %136\l  %138 = fadd contract float %133, %137\l  %139 = load float, float addrspace(3)* %55, align 8, !tbaa !5\l  %140 = load float, float addrspace(3)* %56, align 4, !tbaa !5\l  %141 = fsub contract float %139, %140\l  %142 = fmul contract float %141, %141\l  %143 = fadd contract float %138, %142\l  %144 = load float, float addrspace(3)* %57, align 4, !tbaa !5\l  %145 = load float, float addrspace(3)* %58, align 4, !tbaa !5\l  %146 = fsub contract float %144, %145\l  %147 = fmul contract float %146, %146\l  %148 = fadd contract float %143, %147\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %149 = add nsw i64 %61, 16\l  %150 = add nsw i64 %62, 16\l  %151 = icmp slt i64 %149, %19\l  br i1 %151, label %59, label %152, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55a6660:s0 -> Node0x55a6660;
	Node0x55a6660:s1 -> Node0x55a4120;
	Node0x55a4120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%152:\l152:                                              \l  %153 = phi float [ 0.000000e+00, %7 ], [ %148, %59 ]\l  %154 = add nuw nsw i64 %16, %15\l  %155 = mul i64 %154, %3\l  %156 = add nuw nsw i64 %18, %13\l  %157 = add i64 %156, %155\l  %158 = icmp sge i64 %157, %5\l  %159 = icmp slt i64 %157, %6\l  %160 = select i1 %158, i1 %159, i1 false\l  br i1 %160, label %161, label %164\l|{<s0>T|<s1>F}}"];
	Node0x55a4120:s0 -> Node0x55ac340;
	Node0x55a4120:s1 -> Node0x55ac390;
	Node0x55ac340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%161:\l161:                                              \l  %162 = sub nsw i64 %157, %5\l  %163 = getelementptr inbounds float, float addrspace(1)* %2, i64 %162\l  store float %153, float addrspace(1)* %163, align 4, !tbaa !5\l  br label %164\l}"];
	Node0x55ac340 -> Node0x55ac390;
	Node0x55ac390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%164:\l164:                                              \l  ret void\l}"];
}
