digraph "CFG for '_Z9transformPfS_S_' function" {
	label="CFG for '_Z9transformPfS_S_' function";

	Node0x6097400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = shl i32 %6, 5\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = add i32 %7, %8\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !5\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !14, !invariant.load\l... !15\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %9, %22\l  %24 = add i32 %23, %4\l  %25 = shl i32 %24, 5\l  %26 = add i32 %25, %5\l  %27 = shl nsw i32 %26, 2\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %30 = add nuw nsw i32 %27, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = add nuw nsw i32 %27, 2\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = add nuw nsw i32 %27, 3\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = mul nsw i32 %26, 3\l  %40 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %41 = load float, float addrspace(1)* %2, align 4, !tbaa !16\l  %42 = fmul contract float %40, %41\l  %43 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = fmul contract float %43, %45\l  %47 = fadd contract float %42, %46\l  %48 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %49 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fmul contract float %48, %50\l  %52 = fadd contract float %47, %51\l  %53 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %54 = getelementptr inbounds float, float addrspace(1)* %2, i64 3\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fmul contract float %53, %55\l  %57 = fadd contract float %52, %56\l  %58 = sext i32 %39 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  store float %57, float addrspace(1)* %59, align 4, !tbaa !16\l  %60 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 4\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %63 = fmul contract float %60, %62\l  %64 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 5\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %67 = fmul contract float %64, %66\l  %68 = fadd contract float %63, %67\l  %69 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %70 = getelementptr inbounds float, float addrspace(1)* %2, i64 6\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = fmul contract float %69, %71\l  %73 = fadd contract float %68, %72\l  %74 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 7\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %77 = fmul contract float %74, %76\l  %78 = fadd contract float %73, %77\l  %79 = add nsw i32 %39, 1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  store float %78, float addrspace(1)* %81, align 4, !tbaa !16\l  %82 = load float, float addrspace(1)* %29, align 4, !tbaa !16\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 8\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !16\l  %85 = fmul contract float %82, %84\l  %86 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %87 = getelementptr inbounds float, float addrspace(1)* %2, i64 9\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %89 = fmul contract float %86, %88\l  %90 = fadd contract float %85, %89\l  %91 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %92 = getelementptr inbounds float, float addrspace(1)* %2, i64 10\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = fmul contract float %91, %93\l  %95 = fadd contract float %90, %94\l  %96 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 11\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %99 = fmul contract float %96, %98\l  %100 = fadd contract float %95, %99\l  %101 = add nsw i32 %39, 2\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  store float %100, float addrspace(1)* %103, align 4, !tbaa !16\l  %104 = add nsw i32 %9, 8\l  %105 = mul i32 %104, %22\l  %106 = add i32 %105, %4\l  %107 = shl i32 %106, 5\l  %108 = add i32 %107, %5\l  %109 = shl nsw i32 %108, 2\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = add nuw nsw i32 %109, 1\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  %115 = add nuw nsw i32 %109, 2\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  %118 = add nuw nsw i32 %109, 3\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  %121 = mul nsw i32 %108, 3\l  %122 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %123 = load float, float addrspace(1)* %2, align 4, !tbaa !16\l  %124 = fmul contract float %122, %123\l  %125 = load float, float addrspace(1)* %114, align 4, !tbaa !16\l  %126 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %127 = fmul contract float %125, %126\l  %128 = fadd contract float %124, %127\l  %129 = load float, float addrspace(1)* %117, align 4, !tbaa !16\l  %130 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %131 = fmul contract float %129, %130\l  %132 = fadd contract float %128, %131\l  %133 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %134 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %135 = fmul contract float %133, %134\l  %136 = fadd contract float %132, %135\l  %137 = sext i32 %121 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %0, i64 %137\l  store float %136, float addrspace(1)* %138, align 4, !tbaa !16\l  %139 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %140 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %141 = fmul contract float %139, %140\l  %142 = load float, float addrspace(1)* %114, align 4, !tbaa !16\l  %143 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %144 = fmul contract float %142, %143\l  %145 = fadd contract float %141, %144\l  %146 = load float, float addrspace(1)* %117, align 4, !tbaa !16\l  %147 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %148 = fmul contract float %146, %147\l  %149 = fadd contract float %145, %148\l  %150 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %151 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %152 = fmul contract float %150, %151\l  %153 = fadd contract float %149, %152\l  %154 = add nsw i32 %121, 1\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  store float %153, float addrspace(1)* %156, align 4, !tbaa !16\l  %157 = load float, float addrspace(1)* %111, align 4, !tbaa !16\l  %158 = load float, float addrspace(1)* %83, align 4, !tbaa !16\l  %159 = fmul contract float %157, %158\l  %160 = load float, float addrspace(1)* %114, align 4, !tbaa !16\l  %161 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %162 = fmul contract float %160, %161\l  %163 = fadd contract float %159, %162\l  %164 = load float, float addrspace(1)* %117, align 4, !tbaa !16\l  %165 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %166 = fmul contract float %164, %165\l  %167 = fadd contract float %163, %166\l  %168 = load float, float addrspace(1)* %120, align 4, !tbaa !16\l  %169 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %170 = fmul contract float %168, %169\l  %171 = fadd contract float %167, %170\l  %172 = add nsw i32 %121, 2\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds float, float addrspace(1)* %0, i64 %173\l  store float %171, float addrspace(1)* %174, align 4, !tbaa !16\l  %175 = add nsw i32 %9, 16\l  %176 = mul i32 %175, %22\l  %177 = add i32 %176, %4\l  %178 = shl i32 %177, 5\l  %179 = add i32 %178, %5\l  %180 = shl nsw i32 %179, 2\l  %181 = sext i32 %180 to i64\l  %182 = getelementptr inbounds float, float addrspace(1)* %1, i64 %181\l  %183 = add nuw nsw i32 %180, 1\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds float, float addrspace(1)* %1, i64 %184\l  %186 = add nuw nsw i32 %180, 2\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds float, float addrspace(1)* %1, i64 %187\l  %189 = add nuw nsw i32 %180, 3\l  %190 = sext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %1, i64 %190\l  %192 = mul nsw i32 %179, 3\l  %193 = load float, float addrspace(1)* %182, align 4, !tbaa !16\l  %194 = load float, float addrspace(1)* %2, align 4, !tbaa !16\l  %195 = fmul contract float %193, %194\l  %196 = load float, float addrspace(1)* %185, align 4, !tbaa !16\l  %197 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %198 = fmul contract float %196, %197\l  %199 = fadd contract float %195, %198\l  %200 = load float, float addrspace(1)* %188, align 4, !tbaa !16\l  %201 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %202 = fmul contract float %200, %201\l  %203 = fadd contract float %199, %202\l  %204 = load float, float addrspace(1)* %191, align 4, !tbaa !16\l  %205 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %206 = fmul contract float %204, %205\l  %207 = fadd contract float %203, %206\l  %208 = sext i32 %192 to i64\l  %209 = getelementptr inbounds float, float addrspace(1)* %0, i64 %208\l  store float %207, float addrspace(1)* %209, align 4, !tbaa !16\l  %210 = load float, float addrspace(1)* %182, align 4, !tbaa !16\l  %211 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %212 = fmul contract float %210, %211\l  %213 = load float, float addrspace(1)* %185, align 4, !tbaa !16\l  %214 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %215 = fmul contract float %213, %214\l  %216 = fadd contract float %212, %215\l  %217 = load float, float addrspace(1)* %188, align 4, !tbaa !16\l  %218 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %219 = fmul contract float %217, %218\l  %220 = fadd contract float %216, %219\l  %221 = load float, float addrspace(1)* %191, align 4, !tbaa !16\l  %222 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %223 = fmul contract float %221, %222\l  %224 = fadd contract float %220, %223\l  %225 = add nsw i32 %192, 1\l  %226 = sext i32 %225 to i64\l  %227 = getelementptr inbounds float, float addrspace(1)* %0, i64 %226\l  store float %224, float addrspace(1)* %227, align 4, !tbaa !16\l  %228 = load float, float addrspace(1)* %182, align 4, !tbaa !16\l  %229 = load float, float addrspace(1)* %83, align 4, !tbaa !16\l  %230 = fmul contract float %228, %229\l  %231 = load float, float addrspace(1)* %185, align 4, !tbaa !16\l  %232 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %233 = fmul contract float %231, %232\l  %234 = fadd contract float %230, %233\l  %235 = load float, float addrspace(1)* %188, align 4, !tbaa !16\l  %236 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %237 = fmul contract float %235, %236\l  %238 = fadd contract float %234, %237\l  %239 = load float, float addrspace(1)* %191, align 4, !tbaa !16\l  %240 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %241 = fmul contract float %239, %240\l  %242 = fadd contract float %238, %241\l  %243 = add nsw i32 %192, 2\l  %244 = sext i32 %243 to i64\l  %245 = getelementptr inbounds float, float addrspace(1)* %0, i64 %244\l  store float %242, float addrspace(1)* %245, align 4, !tbaa !16\l  %246 = add nsw i32 %9, 24\l  %247 = mul i32 %246, %22\l  %248 = add i32 %247, %4\l  %249 = shl i32 %248, 5\l  %250 = add i32 %249, %5\l  %251 = shl nsw i32 %250, 2\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds float, float addrspace(1)* %1, i64 %252\l  %254 = add nuw nsw i32 %251, 1\l  %255 = sext i32 %254 to i64\l  %256 = getelementptr inbounds float, float addrspace(1)* %1, i64 %255\l  %257 = add nuw nsw i32 %251, 2\l  %258 = sext i32 %257 to i64\l  %259 = getelementptr inbounds float, float addrspace(1)* %1, i64 %258\l  %260 = add nuw nsw i32 %251, 3\l  %261 = sext i32 %260 to i64\l  %262 = getelementptr inbounds float, float addrspace(1)* %1, i64 %261\l  %263 = mul nsw i32 %250, 3\l  %264 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %265 = load float, float addrspace(1)* %2, align 4, !tbaa !16\l  %266 = fmul contract float %264, %265\l  %267 = load float, float addrspace(1)* %256, align 4, !tbaa !16\l  %268 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %269 = fmul contract float %267, %268\l  %270 = fadd contract float %266, %269\l  %271 = load float, float addrspace(1)* %259, align 4, !tbaa !16\l  %272 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %273 = fmul contract float %271, %272\l  %274 = fadd contract float %270, %273\l  %275 = load float, float addrspace(1)* %262, align 4, !tbaa !16\l  %276 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %277 = fmul contract float %275, %276\l  %278 = fadd contract float %274, %277\l  %279 = sext i32 %263 to i64\l  %280 = getelementptr inbounds float, float addrspace(1)* %0, i64 %279\l  store float %278, float addrspace(1)* %280, align 4, !tbaa !16\l  %281 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %282 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %283 = fmul contract float %281, %282\l  %284 = load float, float addrspace(1)* %256, align 4, !tbaa !16\l  %285 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %286 = fmul contract float %284, %285\l  %287 = fadd contract float %283, %286\l  %288 = load float, float addrspace(1)* %259, align 4, !tbaa !16\l  %289 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %290 = fmul contract float %288, %289\l  %291 = fadd contract float %287, %290\l  %292 = load float, float addrspace(1)* %262, align 4, !tbaa !16\l  %293 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %294 = fmul contract float %292, %293\l  %295 = fadd contract float %291, %294\l  %296 = add nsw i32 %263, 1\l  %297 = sext i32 %296 to i64\l  %298 = getelementptr inbounds float, float addrspace(1)* %0, i64 %297\l  store float %295, float addrspace(1)* %298, align 4, !tbaa !16\l  %299 = load float, float addrspace(1)* %253, align 4, !tbaa !16\l  %300 = load float, float addrspace(1)* %83, align 4, !tbaa !16\l  %301 = fmul contract float %299, %300\l  %302 = load float, float addrspace(1)* %256, align 4, !tbaa !16\l  %303 = load float, float addrspace(1)* %87, align 4, !tbaa !16\l  %304 = fmul contract float %302, %303\l  %305 = fadd contract float %301, %304\l  %306 = load float, float addrspace(1)* %259, align 4, !tbaa !16\l  %307 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %308 = fmul contract float %306, %307\l  %309 = fadd contract float %305, %308\l  %310 = load float, float addrspace(1)* %262, align 4, !tbaa !16\l  %311 = load float, float addrspace(1)* %97, align 4, !tbaa !16\l  %312 = fmul contract float %310, %311\l  %313 = fadd contract float %309, %312\l  %314 = add nsw i32 %263, 2\l  %315 = sext i32 %314 to i64\l  %316 = getelementptr inbounds float, float addrspace(1)* %0, i64 %315\l  store float %313, float addrspace(1)* %316, align 4, !tbaa !16\l  ret void\l}"];
}
