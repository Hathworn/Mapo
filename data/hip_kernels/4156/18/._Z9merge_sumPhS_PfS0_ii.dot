digraph "CFG for '_Z9merge_sumPhS_PfS0_ii' function" {
	label="CFG for '_Z9merge_sumPhS_PfS0_ii' function";

	Node0x62e4f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = shl i32 %9, 5\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = add i32 %10, %11\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !5\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !14, !invariant.load\l... !15\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = icmp sgt i32 %4, 0\l  %27 = mul i32 %12, %25\l  %28 = add i32 %27, %7\l  %29 = shl i32 %28, 5\l  %30 = add i32 %29, %8\l  %31 = mul nsw i32 %30, 3\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %32\l  store i8 0, i8 addrspace(1)* %33, align 1, !tbaa !16\l  %34 = add nsw i32 %31, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %35\l  store i8 0, i8 addrspace(1)* %36, align 1, !tbaa !16\l  %37 = add nsw i32 %31, 2\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %38\l  store i8 0, i8 addrspace(1)* %39, align 1, !tbaa !16\l  br i1 %26, label %40, label %82\l|{<s0>T|<s1>F}}"];
	Node0x62e4f40:s0 -> Node0x62e90c0;
	Node0x62e4f40:s1 -> Node0x62e9150;
	Node0x62e90c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = sext i32 %30 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  br label %43\l}"];
	Node0x62e90c0 -> Node0x62e93a0;
	Node0x62e93a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i8 [ 0, %40 ], [ %79, %43 ]\l  %45 = phi i8 [ 0, %40 ], [ %71, %43 ]\l  %46 = phi i8 [ 0, %40 ], [ %63, %43 ]\l  %47 = phi i32 [ 0, %40 ], [ %80, %43 ]\l  %48 = mul nsw i32 %47, %5\l  %49 = add nsw i32 %48, %30\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !19\l  %53 = load float, float addrspace(1)* %42, align 4, !tbaa !19\l  %54 = fdiv contract float %52, %53\l  %55 = mul nsw i32 %48, 3\l  %56 = add nsw i32 %55, %31\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !16\l  %60 = uitofp i8 %59 to float\l  %61 = fmul contract float %54, %60\l  %62 = fptoui float %61 to i8\l  %63 = add i8 %46, %62\l  store i8 %63, i8 addrspace(1)* %33, align 1, !tbaa !16\l  %64 = add nsw i32 %56, 1\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !16\l  %68 = uitofp i8 %67 to float\l  %69 = fmul contract float %54, %68\l  %70 = fptoui float %69 to i8\l  %71 = add i8 %45, %70\l  store i8 %71, i8 addrspace(1)* %36, align 1, !tbaa !16\l  %72 = add nsw i32 %56, 2\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %73\l  %75 = load i8, i8 addrspace(1)* %74, align 1, !tbaa !16\l  %76 = uitofp i8 %75 to float\l  %77 = fmul contract float %54, %76\l  %78 = fptoui float %77 to i8\l  %79 = add i8 %44, %78\l  store i8 %79, i8 addrspace(1)* %39, align 1, !tbaa !16\l  %80 = add nuw nsw i32 %47, 1\l  %81 = icmp eq i32 %80, %4\l  br i1 %81, label %82, label %43, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x62e93a0:s0 -> Node0x62e9150;
	Node0x62e93a0:s1 -> Node0x62e93a0;
	Node0x62e9150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%82:\l82:                                               \l  %83 = add nsw i32 %12, 8\l  %84 = mul i32 %83, %25\l  %85 = add i32 %84, %7\l  %86 = shl i32 %85, 5\l  %87 = add i32 %86, %8\l  %88 = mul nsw i32 %87, 3\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %89\l  store i8 0, i8 addrspace(1)* %90, align 1, !tbaa !16\l  %91 = add nsw i32 %88, 1\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %92\l  store i8 0, i8 addrspace(1)* %93, align 1, !tbaa !16\l  %94 = add nsw i32 %88, 2\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %95\l  store i8 0, i8 addrspace(1)* %96, align 1, !tbaa !16\l  br i1 %26, label %97, label %139\l|{<s0>T|<s1>F}}"];
	Node0x62e9150:s0 -> Node0x62ebf40;
	Node0x62e9150:s1 -> Node0x62ebf90;
	Node0x62ebf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%97:\l97:                                               \l  %98 = sext i32 %87 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %3, i64 %98\l  br label %100\l}"];
	Node0x62ebf40 -> Node0x62ec1e0;
	Node0x62ec1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = phi i8 [ 0, %97 ], [ %136, %100 ]\l  %102 = phi i8 [ 0, %97 ], [ %128, %100 ]\l  %103 = phi i8 [ 0, %97 ], [ %120, %100 ]\l  %104 = phi i32 [ 0, %97 ], [ %137, %100 ]\l  %105 = mul nsw i32 %104, %5\l  %106 = add nsw i32 %105, %87\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !19\l  %110 = load float, float addrspace(1)* %99, align 4, !tbaa !19\l  %111 = fdiv contract float %109, %110\l  %112 = mul nsw i32 %105, 3\l  %113 = add nsw i32 %112, %88\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %114\l  %116 = load i8, i8 addrspace(1)* %115, align 1, !tbaa !16\l  %117 = uitofp i8 %116 to float\l  %118 = fmul contract float %111, %117\l  %119 = fptoui float %118 to i8\l  %120 = add i8 %103, %119\l  store i8 %120, i8 addrspace(1)* %90, align 1, !tbaa !16\l  %121 = add nsw i32 %113, 1\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %122\l  %124 = load i8, i8 addrspace(1)* %123, align 1, !tbaa !16\l  %125 = uitofp i8 %124 to float\l  %126 = fmul contract float %111, %125\l  %127 = fptoui float %126 to i8\l  %128 = add i8 %102, %127\l  store i8 %128, i8 addrspace(1)* %93, align 1, !tbaa !16\l  %129 = add nsw i32 %113, 2\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %130\l  %132 = load i8, i8 addrspace(1)* %131, align 1, !tbaa !16\l  %133 = uitofp i8 %132 to float\l  %134 = fmul contract float %111, %133\l  %135 = fptoui float %134 to i8\l  %136 = add i8 %101, %135\l  store i8 %136, i8 addrspace(1)* %96, align 1, !tbaa !16\l  %137 = add nuw nsw i32 %104, 1\l  %138 = icmp eq i32 %137, %4\l  br i1 %138, label %139, label %100, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x62ec1e0:s0 -> Node0x62ebf90;
	Node0x62ec1e0:s1 -> Node0x62ec1e0;
	Node0x62ebf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%139:\l139:                                              \l  %140 = add nsw i32 %12, 16\l  %141 = mul i32 %140, %25\l  %142 = add i32 %141, %7\l  %143 = shl i32 %142, 5\l  %144 = add i32 %143, %8\l  %145 = mul nsw i32 %144, 3\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %146\l  store i8 0, i8 addrspace(1)* %147, align 1, !tbaa !16\l  %148 = add nsw i32 %145, 1\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %149\l  store i8 0, i8 addrspace(1)* %150, align 1, !tbaa !16\l  %151 = add nsw i32 %145, 2\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %152\l  store i8 0, i8 addrspace(1)* %153, align 1, !tbaa !16\l  br i1 %26, label %154, label %196\l|{<s0>T|<s1>F}}"];
	Node0x62ebf90:s0 -> Node0x62eed60;
	Node0x62ebf90:s1 -> Node0x62eedb0;
	Node0x62eed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%154:\l154:                                              \l  %155 = sext i32 %144 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %3, i64 %155\l  br label %157\l}"];
	Node0x62eed60 -> Node0x62eefc0;
	Node0x62eefc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  %158 = phi i8 [ 0, %154 ], [ %193, %157 ]\l  %159 = phi i8 [ 0, %154 ], [ %185, %157 ]\l  %160 = phi i8 [ 0, %154 ], [ %177, %157 ]\l  %161 = phi i32 [ 0, %154 ], [ %194, %157 ]\l  %162 = mul nsw i32 %161, %5\l  %163 = add nsw i32 %162, %144\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %2, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !19\l  %167 = load float, float addrspace(1)* %156, align 4, !tbaa !19\l  %168 = fdiv contract float %166, %167\l  %169 = mul nsw i32 %162, 3\l  %170 = add nsw i32 %169, %145\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %171\l  %173 = load i8, i8 addrspace(1)* %172, align 1, !tbaa !16\l  %174 = uitofp i8 %173 to float\l  %175 = fmul contract float %168, %174\l  %176 = fptoui float %175 to i8\l  %177 = add i8 %160, %176\l  store i8 %177, i8 addrspace(1)* %147, align 1, !tbaa !16\l  %178 = add nsw i32 %170, 1\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %179\l  %181 = load i8, i8 addrspace(1)* %180, align 1, !tbaa !16\l  %182 = uitofp i8 %181 to float\l  %183 = fmul contract float %168, %182\l  %184 = fptoui float %183 to i8\l  %185 = add i8 %159, %184\l  store i8 %185, i8 addrspace(1)* %150, align 1, !tbaa !16\l  %186 = add nsw i32 %170, 2\l  %187 = sext i32 %186 to i64\l  %188 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %187\l  %189 = load i8, i8 addrspace(1)* %188, align 1, !tbaa !16\l  %190 = uitofp i8 %189 to float\l  %191 = fmul contract float %168, %190\l  %192 = fptoui float %191 to i8\l  %193 = add i8 %158, %192\l  store i8 %193, i8 addrspace(1)* %153, align 1, !tbaa !16\l  %194 = add nuw nsw i32 %161, 1\l  %195 = icmp eq i32 %194, %4\l  br i1 %195, label %196, label %157, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x62eefc0:s0 -> Node0x62eedb0;
	Node0x62eefc0:s1 -> Node0x62eefc0;
	Node0x62eedb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%196:\l196:                                              \l  %197 = add nsw i32 %12, 24\l  %198 = mul i32 %197, %25\l  %199 = add i32 %198, %7\l  %200 = shl i32 %199, 5\l  %201 = add i32 %200, %8\l  %202 = mul nsw i32 %201, 3\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %203\l  store i8 0, i8 addrspace(1)* %204, align 1, !tbaa !16\l  %205 = add nsw i32 %202, 1\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %206\l  store i8 0, i8 addrspace(1)* %207, align 1, !tbaa !16\l  %208 = add nsw i32 %202, 2\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %209\l  store i8 0, i8 addrspace(1)* %210, align 1, !tbaa !16\l  br i1 %26, label %211, label %253\l|{<s0>T|<s1>F}}"];
	Node0x62eedb0:s0 -> Node0x62f1120;
	Node0x62eedb0:s1 -> Node0x62f1170;
	Node0x62f1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%211:\l211:                                              \l  %212 = sext i32 %201 to i64\l  %213 = getelementptr inbounds float, float addrspace(1)* %3, i64 %212\l  br label %214\l}"];
	Node0x62f1120 -> Node0x62f1380;
	Node0x62f1380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%214:\l214:                                              \l  %215 = phi i8 [ 0, %211 ], [ %250, %214 ]\l  %216 = phi i8 [ 0, %211 ], [ %242, %214 ]\l  %217 = phi i8 [ 0, %211 ], [ %234, %214 ]\l  %218 = phi i32 [ 0, %211 ], [ %251, %214 ]\l  %219 = mul nsw i32 %218, %5\l  %220 = add nsw i32 %219, %201\l  %221 = sext i32 %220 to i64\l  %222 = getelementptr inbounds float, float addrspace(1)* %2, i64 %221\l  %223 = load float, float addrspace(1)* %222, align 4, !tbaa !19\l  %224 = load float, float addrspace(1)* %213, align 4, !tbaa !19\l  %225 = fdiv contract float %223, %224\l  %226 = mul nsw i32 %219, 3\l  %227 = add nsw i32 %226, %202\l  %228 = sext i32 %227 to i64\l  %229 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %228\l  %230 = load i8, i8 addrspace(1)* %229, align 1, !tbaa !16\l  %231 = uitofp i8 %230 to float\l  %232 = fmul contract float %225, %231\l  %233 = fptoui float %232 to i8\l  %234 = add i8 %217, %233\l  store i8 %234, i8 addrspace(1)* %204, align 1, !tbaa !16\l  %235 = add nsw i32 %227, 1\l  %236 = sext i32 %235 to i64\l  %237 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %236\l  %238 = load i8, i8 addrspace(1)* %237, align 1, !tbaa !16\l  %239 = uitofp i8 %238 to float\l  %240 = fmul contract float %225, %239\l  %241 = fptoui float %240 to i8\l  %242 = add i8 %216, %241\l  store i8 %242, i8 addrspace(1)* %207, align 1, !tbaa !16\l  %243 = add nsw i32 %227, 2\l  %244 = sext i32 %243 to i64\l  %245 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %244\l  %246 = load i8, i8 addrspace(1)* %245, align 1, !tbaa !16\l  %247 = uitofp i8 %246 to float\l  %248 = fmul contract float %225, %247\l  %249 = fptoui float %248 to i8\l  %250 = add i8 %215, %249\l  store i8 %250, i8 addrspace(1)* %210, align 1, !tbaa !16\l  %251 = add nuw nsw i32 %218, 1\l  %252 = icmp eq i32 %251, %4\l  br i1 %252, label %253, label %214, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x62f1380:s0 -> Node0x62f1170;
	Node0x62f1380:s1 -> Node0x62f1380;
	Node0x62f1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%253:\l253:                                              \l  ret void\l}"];
}
