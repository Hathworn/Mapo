digraph "CFG for '_Z10testKernelPfS_S_jjjj' function" {
	label="CFG for '_Z10testKernelPfS_S_jjjj' function";

	Node0x45d2bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = shl i32 %8, 4\l  %13 = shl i32 %9, 4\l  %14 = add nsw i32 %13, %11\l  %15 = add nsw i32 %12, %10\l  %16 = icmp eq i32 %5, 0\l  br i1 %16, label %33, label %17\l|{<s0>T|<s1>F}}"];
	Node0x45d2bc0:s0 -> Node0x45d2d70;
	Node0x45d2bc0:s1 -> Node0x45d4fc0;
	Node0x45d4fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%17:\l17:                                               \l  %18 = icmp eq i32 %6, 0\l  %19 = and i32 %6, 3\l  %20 = icmp ult i32 %6, 4\l  %21 = and i32 %6, -4\l  %22 = icmp eq i32 %19, 0\l  br label %23\l}"];
	Node0x45d4fc0 -> Node0x45d5430;
	Node0x45d5430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%23:\l23:                                               \l  %24 = phi float [ 0.000000e+00, %17 ], [ %69, %68 ]\l  %25 = phi i32 [ 0, %17 ], [ %70, %68 ]\l  br i1 %18, label %68, label %26\l|{<s0>T|<s1>F}}"];
	Node0x45d5430:s0 -> Node0x45d5f70;
	Node0x45d5430:s1 -> Node0x45d61d0;
	Node0x45d61d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%26:\l26:                                               \l  %27 = mul i32 %25, %6\l  %28 = sub nsw i32 %14, %25\l  %29 = icmp sgt i32 %28, -1\l  %30 = icmp ult i32 %28, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  %32 = mul i32 %28, %4\l  br i1 %20, label %39, label %72\l|{<s0>T|<s1>F}}"];
	Node0x45d61d0:s0 -> Node0x45d4eb0;
	Node0x45d61d0:s1 -> Node0x45d4f00;
	Node0x45d2d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%33:\l33:                                               \l  %34 = phi float [ 0.000000e+00, %7 ], [ %69, %68 ]\l  %35 = mul i32 %14, %4\l  %36 = add i32 %35, %15\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  store float %34, float addrspace(1)* %38, align 4, !tbaa !5\l  ret void\l}"];
	Node0x45d4eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%39:\l39:                                               \l  %40 = phi float [ undef, %26 ], [ %150, %149 ]\l  %41 = phi float [ %24, %26 ], [ %150, %149 ]\l  %42 = phi i32 [ 0, %26 ], [ %151, %149 ]\l  br i1 %22, label %68, label %43\l|{<s0>T|<s1>F}}"];
	Node0x45d4eb0:s0 -> Node0x45d5f70;
	Node0x45d4eb0:s1 -> Node0x45d7590;
	Node0x45d7590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi float [ %64, %63 ], [ %41, %39 ]\l  %45 = phi i32 [ %65, %63 ], [ %42, %39 ]\l  %46 = phi i32 [ %66, %63 ], [ 0, %39 ]\l  %47 = add i32 %45, %27\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br i1 %31, label %51, label %63\l|{<s0>T|<s1>F}}"];
	Node0x45d7590:s0 -> Node0x45d8460;
	Node0x45d7590:s1 -> Node0x45d7700;
	Node0x45d8460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%51:\l51:                                               \l  %52 = sub nsw i32 %15, %45\l  %53 = icmp sgt i32 %52, -1\l  %54 = icmp ult i32 %52, %4\l  %55 = select i1 %53, i1 %54, i1 false\l  br i1 %55, label %56, label %63\l|{<s0>T|<s1>F}}"];
	Node0x45d8460:s0 -> Node0x45d8800;
	Node0x45d8460:s1 -> Node0x45d7700;
	Node0x45d8800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%56:\l56:                                               \l  %57 = add i32 %52, %32\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fmul contract float %50, %60\l  %62 = fadd contract float %44, %61\l  br label %63\l}"];
	Node0x45d8800 -> Node0x45d7700;
	Node0x45d7700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = phi float [ %62, %56 ], [ %44, %51 ], [ %44, %43 ]\l  %65 = add nuw nsw i32 %45, 1\l  %66 = add i32 %46, 1\l  %67 = icmp eq i32 %66, %19\l  br i1 %67, label %68, label %43, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x45d7700:s0 -> Node0x45d5f70;
	Node0x45d7700:s1 -> Node0x45d7590;
	Node0x45d5f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%68:\l68:                                               \l  %69 = phi float [ %24, %23 ], [ %40, %39 ], [ %64, %63 ]\l  %70 = add nuw nsw i32 %25, 1\l  %71 = icmp eq i32 %70, %5\l  br i1 %71, label %33, label %23, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x45d5f70:s0 -> Node0x45d2d70;
	Node0x45d5f70:s1 -> Node0x45d5430;
	Node0x45d4f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%72:\l72:                                               \l  %73 = phi float [ %150, %149 ], [ %24, %26 ]\l  %74 = phi i32 [ %151, %149 ], [ 0, %26 ]\l  %75 = phi i32 [ %152, %149 ], [ 0, %26 ]\l  %76 = add i32 %74, %27\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br i1 %31, label %80, label %92\l|{<s0>T|<s1>F}}"];
	Node0x45d4f00:s0 -> Node0x45d9fb0;
	Node0x45d4f00:s1 -> Node0x45da040;
	Node0x45d9fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%80:\l80:                                               \l  %81 = sub nsw i32 %15, %74\l  %82 = icmp sgt i32 %81, -1\l  %83 = icmp ult i32 %81, %4\l  %84 = select i1 %82, i1 %83, i1 false\l  br i1 %84, label %85, label %92\l|{<s0>T|<s1>F}}"];
	Node0x45d9fb0:s0 -> Node0x45da3e0;
	Node0x45d9fb0:s1 -> Node0x45da040;
	Node0x45da3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%85:\l85:                                               \l  %86 = add i32 %81, %32\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %79, %89\l  %91 = fadd contract float %73, %90\l  br label %92\l}"];
	Node0x45da3e0 -> Node0x45da040;
	Node0x45da040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%92:\l92:                                               \l  %93 = phi float [ %91, %85 ], [ %73, %80 ], [ %73, %72 ]\l  %94 = or i32 %74, 1\l  %95 = add i32 %94, %27\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br i1 %31, label %99, label %111\l|{<s0>T|<s1>F}}"];
	Node0x45da040:s0 -> Node0x45dabf0;
	Node0x45da040:s1 -> Node0x45dac80;
	Node0x45dabf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%99:\l99:                                               \l  %100 = sub nsw i32 %15, %94\l  %101 = icmp sgt i32 %100, -1\l  %102 = icmp ult i32 %100, %4\l  %103 = select i1 %101, i1 %102, i1 false\l  br i1 %103, label %104, label %111\l|{<s0>T|<s1>F}}"];
	Node0x45dabf0:s0 -> Node0x45db020;
	Node0x45dabf0:s1 -> Node0x45dac80;
	Node0x45db020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%104:\l104:                                              \l  %105 = add i32 %100, %32\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %109 = fmul contract float %98, %108\l  %110 = fadd contract float %93, %109\l  br label %111\l}"];
	Node0x45db020 -> Node0x45dac80;
	Node0x45dac80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%111:\l111:                                              \l  %112 = phi float [ %110, %104 ], [ %93, %99 ], [ %93, %92 ]\l  %113 = or i32 %74, 2\l  %114 = add i32 %113, %27\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br i1 %31, label %118, label %130\l|{<s0>T|<s1>F}}"];
	Node0x45dac80:s0 -> Node0x45db830;
	Node0x45dac80:s1 -> Node0x45db8c0;
	Node0x45db830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%118:\l118:                                              \l  %119 = sub nsw i32 %15, %113\l  %120 = icmp sgt i32 %119, -1\l  %121 = icmp ult i32 %119, %4\l  %122 = select i1 %120, i1 %121, i1 false\l  br i1 %122, label %123, label %130\l|{<s0>T|<s1>F}}"];
	Node0x45db830:s0 -> Node0x45dbc60;
	Node0x45db830:s1 -> Node0x45db8c0;
	Node0x45dbc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%123:\l123:                                              \l  %124 = add i32 %119, %32\l  %125 = zext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %0, i64 %125\l  %127 = load float, float addrspace(1)* %126, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %128 = fmul contract float %117, %127\l  %129 = fadd contract float %112, %128\l  br label %130\l}"];
	Node0x45dbc60 -> Node0x45db8c0;
	Node0x45db8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%130:\l130:                                              \l  %131 = phi float [ %129, %123 ], [ %112, %118 ], [ %112, %111 ]\l  %132 = or i32 %74, 3\l  %133 = add i32 %132, %27\l  %134 = zext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br i1 %31, label %137, label %149\l|{<s0>T|<s1>F}}"];
	Node0x45db8c0:s0 -> Node0x45dc880;
	Node0x45db8c0:s1 -> Node0x45d7280;
	Node0x45dc880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%137:\l137:                                              \l  %138 = sub nsw i32 %15, %132\l  %139 = icmp sgt i32 %138, -1\l  %140 = icmp ult i32 %138, %4\l  %141 = select i1 %139, i1 %140, i1 false\l  br i1 %141, label %142, label %149\l|{<s0>T|<s1>F}}"];
	Node0x45dc880:s0 -> Node0x45dcc20;
	Node0x45dc880:s1 -> Node0x45d7280;
	Node0x45dcc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%142:\l142:                                              \l  %143 = add i32 %138, %32\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %0, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %147 = fmul contract float %136, %146\l  %148 = fadd contract float %131, %147\l  br label %149\l}"];
	Node0x45dcc20 -> Node0x45d7280;
	Node0x45d7280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%149:\l149:                                              \l  %150 = phi float [ %148, %142 ], [ %131, %137 ], [ %131, %130 ]\l  %151 = add nuw nsw i32 %74, 4\l  %152 = add i32 %75, 4\l  %153 = icmp eq i32 %152, %21\l  br i1 %153, label %39, label %72, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x45d7280:s0 -> Node0x45d4eb0;
	Node0x45d7280:s1 -> Node0x45d4f00;
}
