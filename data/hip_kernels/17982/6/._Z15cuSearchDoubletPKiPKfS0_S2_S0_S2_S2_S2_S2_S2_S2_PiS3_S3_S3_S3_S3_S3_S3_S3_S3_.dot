digraph "CFG for '_Z15cuSearchDoubletPKiPKfS0_S2_S0_S2_S2_S2_S2_S2_S2_PiS3_S3_S3_S3_S3_S3_S3_S3_S3_' function" {
	label="CFG for '_Z15cuSearchDoubletPKiPKfS0_S2_S0_S2_S2_S2_S2_S2_S2_PiS3_S3_S3_S3_S3_S3_S3_S3_S3_' function";

	Node0x476b460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%21:\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %23 = icmp eq i32 %22, 0\l  br i1 %23, label %24, label %25\l|{<s0>T|<s1>F}}"];
	Node0x476b460:s0 -> Node0x476b990;
	Node0x476b460:s1 -> Node0x476ba20;
	Node0x476b990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%24:\l24:                                               \l  store i32 0, i32 addrspace(3)* bitcast (float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @sharedMem, i32 0, i32 1) to\l... i32 addrspace(3)*), align 4, !tbaa !5\l  br label %25\l}"];
	Node0x476b990 -> Node0x476ba20;
	Node0x476ba20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%25:\l25:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %27 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %28 = mul nsw i32 %27, 3\l  %29 = add i32 %28, %26\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %33 = shl nsw i32 %27, 1\l  %34 = add i32 %33, %26\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %38 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  %39 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !5\l  %40 = tail call i32 @llvm.smax.i32(i32 %38, i32 %39)\l  %41 = icmp sgt i32 %40, 0\l  br i1 %41, label %42, label %144\l|{<s0>T|<s1>F}}"];
	Node0x476ba20:s0 -> Node0x476fe40;
	Node0x476ba20:s1 -> Node0x476fed0;
	Node0x476fe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  %43 = zext i32 %26 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %14, i64 %43\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %43\l  %46 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %47 = getelementptr i8, i8 addrspace(4)* %46, i64 4\l  %48 = bitcast i8 addrspace(4)* %47 to i16 addrspace(4)*\l  %49 = load i16, i16 addrspace(4)* %48, align 4, !range !12, !invariant.load\l... !9\l  %50 = zext i16 %49 to i32\l  br label %51\l}"];
	Node0x476fe40 -> Node0x47707f0;
	Node0x47707f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %39, %42 ], [ %139, %138 ]\l  %53 = phi i32 [ %38, %42 ], [ %141, %138 ]\l  %54 = phi i32 [ 0, %42 ], [ %140, %138 ]\l  %55 = add i32 %54, %22\l  %56 = icmp ult i32 %55, %53\l  br i1 %56, label %57, label %96\l|{<s0>T|<s1>F}}"];
	Node0x47707f0:s0 -> Node0x4770d90;
	Node0x47707f0:s1 -> Node0x4770e20;
	Node0x4770d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %53, 3\l  %59 = add i32 %58, %55\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %3, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !10\l  %63 = shl nsw i32 %53, 1\l  %64 = add i32 %63, %55\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %3, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !10\l  %68 = fsub contract float %32, %62\l  %69 = fsub contract float %37, %67\l  %70 = fdiv contract float %69, %68\l  %71 = fmul contract float %32, %70\l  %72 = fsub contract float %37, %71\l  %73 = load float, float addrspace(1)* %9, align 4, !tbaa !10\l  %74 = fcmp contract olt float %72, %73\l  br i1 %74, label %96, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4770d90:s0 -> Node0x4770e20;
	Node0x4770d90:s1 -> Node0x4771aa0;
	Node0x4771aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%75:\l75:                                               \l  %76 = tail call float @llvm.fabs.f32(float %70)\l  %77 = load float, float addrspace(1)* %8, align 4, !tbaa !10\l  %78 = fcmp contract ogt float %76, %77\l  %79 = load float, float addrspace(1)* %7, align 4, !tbaa !10\l  %80 = fcmp contract ogt float %68, %79\l  %81 = load float, float addrspace(1)* %6, align 4, !tbaa !10\l  %82 = fcmp contract olt float %68, %81\l  %83 = load float, float addrspace(1)* %10, align 4, !tbaa !10\l  %84 = fcmp contract ogt float %72, %83\l  %85 = select i1 %84, i1 true, i1 %78\l  %86 = select i1 %85, i1 true, i1 %82\l  %87 = select i1 %86, i1 true, i1 %80\l  br i1 %87, label %96, label %88\l|{<s0>T|<s1>F}}"];
	Node0x4771aa0:s0 -> Node0x4770e20;
	Node0x4771aa0:s1 -> Node0x4772390;
	Node0x4772390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%88:\l88:                                               \l  %89 = atomicrmw add i32 addrspace(1)* %44, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %90 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  %91 = mul i32 %90, %26\l  %92 = add i32 %91, %89\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %93\l  store i32 %55, i32 addrspace(1)* %94, align 4, !tbaa !5\l  %95 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !5\l  br label %96\l}"];
	Node0x4772390 -> Node0x4770e20;
	Node0x4770e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi i32 [ %52, %75 ], [ %52, %57 ], [ %95, %88 ], [ %52, %51 ]\l  %98 = icmp ult i32 %55, %97\l  br i1 %98, label %99, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4770e20:s0 -> Node0x4772b60;
	Node0x4770e20:s1 -> Node0x47708f0;
	Node0x4772b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%99:\l99:                                               \l  %100 = mul nsw i32 %97, 3\l  %101 = add i32 %100, %55\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %5, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !10\l  %105 = fsub contract float %104, %32\l  %106 = load float, float addrspace(1)* %6, align 4, !tbaa !10\l  %107 = fcmp contract uge float %105, %106\l  %108 = load float, float addrspace(1)* %7, align 4, !tbaa !10\l  %109 = fcmp contract ule float %105, %108\l  %110 = select i1 %109, i1 %107, i1 false\l  br i1 %110, label %111, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4772b60:s0 -> Node0x4773240;
	Node0x4772b60:s1 -> Node0x47708f0;
	Node0x4773240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%111:\l111:                                              \l  %112 = shl nsw i32 %97, 1\l  %113 = add i32 %112, %55\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %5, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !10\l  %117 = fsub contract float %116, %37\l  %118 = fdiv contract float %117, %105\l  %119 = fmul contract float %32, %118\l  %120 = fsub contract float %37, %119\l  %121 = load float, float addrspace(1)* %9, align 4, !tbaa !10\l  %122 = fcmp contract olt float %120, %121\l  br i1 %122, label %138, label %123\l|{<s0>T|<s1>F}}"];
	Node0x4773240:s0 -> Node0x47708f0;
	Node0x4773240:s1 -> Node0x4773950;
	Node0x4773950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%123:\l123:                                              \l  %124 = tail call float @llvm.fabs.f32(float %118)\l  %125 = load float, float addrspace(1)* %8, align 4, !tbaa !10\l  %126 = fcmp contract ogt float %124, %125\l  %127 = load float, float addrspace(1)* %10, align 4, !tbaa !10\l  %128 = fcmp contract ogt float %120, %127\l  %129 = select i1 %128, i1 true, i1 %126\l  br i1 %129, label %138, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4773950:s0 -> Node0x47708f0;
	Node0x4773950:s1 -> Node0x4771400;
	Node0x4771400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%130:\l130:                                              \l  %131 = atomicrmw add i32 addrspace(1)* %45, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %132 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !5\l  %133 = mul i32 %132, %26\l  %134 = add i32 %133, %131\l  %135 = zext i32 %134 to i64\l  %136 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %135\l  store i32 %55, i32 addrspace(1)* %136, align 4, !tbaa !5\l  %137 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !5\l  br label %138\l}"];
	Node0x4771400 -> Node0x47708f0;
	Node0x47708f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi i32 [ %97, %99 ], [ %97, %123 ], [ %97, %111 ], [ %137, %130 ], [\l... %97, %96 ]\l  %140 = add i32 %54, %50\l  %141 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  %142 = tail call i32 @llvm.smax.i32(i32 %141, i32 %139)\l  %143 = icmp slt i32 %140, %142\l  br i1 %143, label %51, label %144, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x47708f0:s0 -> Node0x47707f0;
	Node0x47708f0:s1 -> Node0x476fed0;
	Node0x476fed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%144:\l144:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %23, label %145, label %162\l|{<s0>T|<s1>F}}"];
	Node0x476fed0:s0 -> Node0x4774e30;
	Node0x476fed0:s1 -> Node0x4774e80;
	Node0x4774e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%145:\l145:                                              \l  %146 = zext i32 %26 to i64\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %14, i64 %146\l  %148 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !5\l  %149 = icmp sgt i32 %148, 0\l  br i1 %149, label %150, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4774e30:s0 -> Node0x4775190;
	Node0x4774e30:s1 -> Node0x4774e80;
	Node0x4775190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%150:\l150:                                              \l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %146\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !5\l  %153 = icmp sgt i32 %152, 0\l  br i1 %153, label %154, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4775190:s0 -> Node0x4775430;
	Node0x4775190:s1 -> Node0x4774e80;
	Node0x4775430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%154:\l154:                                              \l  %155 = atomicrmw add i32 addrspace(1)* %11, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  store i32 %155, i32 addrspace(3)* bitcast ([0 x float] addrspace(3)*\l... @sharedMem to i32 addrspace(3)*), align 4, !tbaa !5\l  store i32 1, i32 addrspace(3)* bitcast (float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @sharedMem, i32 0, i32 1) to\l... i32 addrspace(3)*), align 4, !tbaa !5\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i32, i32 addrspace(1)* %16, i64 %156\l  store i32 %26, i32 addrspace(1)* %157, align 4, !tbaa !5\l  %158 = load i32, i32 addrspace(1)* %147, align 4, !tbaa !5\l  %159 = atomicrmw max i32 addrspace(1)* %12, i32 %158\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %160 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !5\l  %161 = atomicrmw max i32 addrspace(1)* %13, i32 %160\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %162\l}"];
	Node0x4775430 -> Node0x4774e80;
	Node0x4774e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%162:\l162:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %163 = load i32, i32 addrspace(3)* bitcast (float addrspace(3)*\l... getelementptr inbounds ([0 x float], [0 x float] addrspace(3)* @sharedMem,\l... i32 0, i32 1) to i32 addrspace(3)*), align 4, !tbaa !5\l  %164 = icmp eq i32 %163, 1\l  br i1 %164, label %165, label %220\l|{<s0>T|<s1>F}}"];
	Node0x4774e80:s0 -> Node0x4775d60;
	Node0x4774e80:s1 -> Node0x4775db0;
	Node0x4775d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%165:\l165:                                              \l  %166 = zext i32 %26 to i64\l  %167 = getelementptr inbounds i32, i32 addrspace(1)* %14, i64 %166\l  %168 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %166\l  %169 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !5\l  %170 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !5\l  %171 = tail call i32 @llvm.smax.i32(i32 %169, i32 %170)\l  %172 = icmp sgt i32 %171, 0\l  br i1 %172, label %173, label %220\l|{<s0>T|<s1>F}}"];
	Node0x4775d60:s0 -> Node0x47762e0;
	Node0x4775d60:s1 -> Node0x4775db0;
	Node0x47762e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%173:\l173:                                              \l  %174 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %175 = getelementptr i8, i8 addrspace(4)* %174, i64 4\l  %176 = bitcast i8 addrspace(4)* %175 to i16 addrspace(4)*\l  %177 = load i16, i16 addrspace(4)* %176, align 4, !range !12,\l... !invariant.load !9\l  %178 = zext i16 %177 to i32\l  br label %179\l}"];
	Node0x47762e0 -> Node0x4776cb0;
	Node0x4776cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%179:\l179:                                              \l  %180 = phi i32 [ %170, %173 ], [ %215, %214 ]\l  %181 = phi i32 [ %169, %173 ], [ %217, %214 ]\l  %182 = phi i32 [ 0, %173 ], [ %216, %214 ]\l  %183 = add i32 %182, %22\l  %184 = icmp ult i32 %183, %181\l  br i1 %184, label %185, label %198\l|{<s0>T|<s1>F}}"];
	Node0x4776cb0:s0 -> Node0x47771b0;
	Node0x4776cb0:s1 -> Node0x4777240;
	Node0x47771b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%185:\l185:                                              \l  %186 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !5\l  %187 = mul i32 %186, %26\l  %188 = add i32 %187, %183\l  %189 = zext i32 %188 to i64\l  %190 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %189\l  %191 = load i32, i32 addrspace(1)* %190, align 4, !tbaa !5\l  %192 = load i32, i32 addrspace(3)* bitcast ([0 x float] addrspace(3)*\l... @sharedMem to i32 addrspace(3)*), align 4, !tbaa !5\l  %193 = mul nsw i32 %192, %186\l  %194 = add i32 %193, %183\l  %195 = zext i32 %194 to i64\l  %196 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %195\l  store i32 %191, i32 addrspace(1)* %196, align 4, !tbaa !5\l  %197 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !5\l  br label %198\l}"];
	Node0x47771b0 -> Node0x4777240;
	Node0x4777240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%198:\l198:                                              \l  %199 = phi i32 [ %197, %185 ], [ %180, %179 ]\l  %200 = icmp ult i32 %183, %199\l  br i1 %200, label %201, label %214\l|{<s0>T|<s1>F}}"];
	Node0x4777240:s0 -> Node0x4777be0;
	Node0x4777240:s1 -> Node0x4776d70;
	Node0x4777be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%201:\l201:                                              \l  %202 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !5\l  %203 = mul i32 %202, %26\l  %204 = add i32 %203, %183\l  %205 = zext i32 %204 to i64\l  %206 = getelementptr inbounds i32, i32 addrspace(1)* %20, i64 %205\l  %207 = load i32, i32 addrspace(1)* %206, align 4, !tbaa !5\l  %208 = load i32, i32 addrspace(3)* bitcast ([0 x float] addrspace(3)*\l... @sharedMem to i32 addrspace(3)*), align 4, !tbaa !5\l  %209 = mul nsw i32 %208, %202\l  %210 = add i32 %209, %183\l  %211 = zext i32 %210 to i64\l  %212 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %211\l  store i32 %207, i32 addrspace(1)* %212, align 4, !tbaa !5\l  %213 = load i32, i32 addrspace(1)* %168, align 4, !tbaa !5\l  br label %214\l}"];
	Node0x4777be0 -> Node0x4776d70;
	Node0x4776d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%214:\l214:                                              \l  %215 = phi i32 [ %213, %201 ], [ %199, %198 ]\l  %216 = add i32 %182, %178\l  %217 = load i32, i32 addrspace(1)* %167, align 4, !tbaa !5\l  %218 = tail call i32 @llvm.smax.i32(i32 %217, i32 %215)\l  %219 = icmp slt i32 %216, %218\l  br i1 %219, label %179, label %220, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4776d70:s0 -> Node0x4776cb0;
	Node0x4776d70:s1 -> Node0x4775db0;
	Node0x4775db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%220:\l220:                                              \l  ret void\l}"];
}
