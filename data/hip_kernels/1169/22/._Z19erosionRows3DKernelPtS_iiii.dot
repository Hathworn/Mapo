digraph "CFG for '_Z19erosionRows3DKernelPtS_iiii' function" {
	label="CFG for '_Z19erosionRows3DKernelPtS_iiii' function";

	Node0x63e1020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = shl i32 %9, 7\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = add nsw i32 %11, -16\l  %13 = add i32 %12, %10\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = shl i32 %14, 2\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %18 = shl i32 %17, 2\l  %19 = add i32 %18, %7\l  %20 = mul nsw i32 %19, %3\l  %21 = add nsw i32 %16, %20\l  %22 = mul nsw i32 %21, %2\l  %23 = add nsw i32 %22, %13\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %24\l  %26 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 16\l  %27 = load i16, i16 addrspace(1)* %26, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %28 = add nuw nsw i32 %11, 16\l  %29 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %28\l  store i16 %27, i16 addrspace(3)* %29, align 2, !tbaa !5\l  %30 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 32\l  %31 = load i16, i16 addrspace(1)* %30, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %32 = add nuw nsw i32 %11, 32\l  %33 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %32\l  store i16 %31, i16 addrspace(3)* %33, align 2, !tbaa !5\l  %34 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 48\l  %35 = load i16, i16 addrspace(1)* %34, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %36 = add nuw nsw i32 %11, 48\l  %37 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %36\l  store i16 %35, i16 addrspace(3)* %37, align 2, !tbaa !5\l  %38 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 64\l  %39 = load i16, i16 addrspace(1)* %38, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %40 = add nuw nsw i32 %11, 64\l  %41 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %40\l  store i16 %39, i16 addrspace(3)* %41, align 2, !tbaa !5\l  %42 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 80\l  %43 = load i16, i16 addrspace(1)* %42, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %44 = add nuw nsw i32 %11, 80\l  %45 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %44\l  store i16 %43, i16 addrspace(3)* %45, align 2, !tbaa !5\l  %46 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 96\l  %47 = load i16, i16 addrspace(1)* %46, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %48 = add nuw nsw i32 %11, 96\l  %49 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %48\l  store i16 %47, i16 addrspace(3)* %49, align 2, !tbaa !5\l  %50 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 112\l  %51 = load i16, i16 addrspace(1)* %50, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %52 = add nuw nsw i32 %11, 112\l  %53 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %52\l  store i16 %51, i16 addrspace(3)* %53, align 2, !tbaa !5\l  %54 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 128\l  %55 = load i16, i16 addrspace(1)* %54, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %56 = add nuw nsw i32 %11, 128\l  %57 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %56\l  store i16 %55, i16 addrspace(3)* %57, align 2, !tbaa !5\l  %58 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %24\l  %59 = icmp sgt i32 %13, -1\l  br i1 %59, label %60, label %62\l|{<s0>T|<s1>F}}"];
	Node0x63e1020:s0 -> Node0x63e3520;
	Node0x63e1020:s1 -> Node0x63e6d20;
	Node0x63e3520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%60:\l60:                                               \l  %61 = load i16, i16 addrspace(1)* %25, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %62\l}"];
	Node0x63e3520 -> Node0x63e6d20;
	Node0x63e6d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%62:\l62:                                               \l  %63 = phi i16 [ %61, %60 ], [ 0, %6 ]\l  %64 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %11\l  store i16 %63, i16 addrspace(3)* %64, align 2, !tbaa !5\l  %65 = add nsw i32 %13, 144\l  %66 = icmp slt i32 %65, %2\l  br i1 %66, label %67, label %70\l|{<s0>T|<s1>F}}"];
	Node0x63e6d20:s0 -> Node0x63e7020;
	Node0x63e6d20:s1 -> Node0x63e7580;
	Node0x63e7020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%67:\l67:                                               \l  %68 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 144\l  %69 = load i16, i16 addrspace(1)* %68, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %70\l}"];
	Node0x63e7020 -> Node0x63e7580;
	Node0x63e7580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%70:\l70:                                               \l  %71 = phi i16 [ %69, %67 ], [ 0, %62 ]\l  %72 = add nuw nsw i32 %11, 144\l  %73 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %72\l  store i16 %71, i16 addrspace(3)* %73, align 2, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = sub i32 %11, %5\l  %75 = shl i32 %5, 1\l  %76 = icmp slt i32 %5, 1\l  %77 = tail call i32 @llvm.smax.i32(i32 %75, i32 1)\l  %78 = add i32 %74, 16\l  %79 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %78\l  %80 = load i16, i16 addrspace(3)* %79, align 2, !tbaa !5\l  br i1 %76, label %166, label %81\l|{<s0>T|<s1>F}}"];
	Node0x63e7580:s0 -> Node0x63e8280;
	Node0x63e7580:s1 -> Node0x63e84b0;
	Node0x63e84b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%81:\l81:                                               \l  %82 = icmp ult i32 %77, 2\l  br i1 %82, label %163, label %83\l|{<s0>T|<s1>F}}"];
	Node0x63e84b0:s0 -> Node0x63e8680;
	Node0x63e84b0:s1 -> Node0x63e86d0;
	Node0x63e86d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%83:\l83:                                               \l  %84 = and i32 %77, 2147483646\l  %85 = or i32 %77, 1\l  %86 = insertelement \<2 x i16\> poison, i16 %80, i64 0\l  %87 = shufflevector \<2 x i16\> %86, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %88 = add nsw i32 %77, -2\l  %89 = lshr i32 %88, 1\l  %90 = add nuw i32 %89, 1\l  %91 = and i32 %90, 7\l  %92 = icmp ult i32 %88, 14\l  br i1 %92, label %142, label %93\l|{<s0>T|<s1>F}}"];
	Node0x63e86d0:s0 -> Node0x63e9bf0;
	Node0x63e86d0:s1 -> Node0x63e9c80;
	Node0x63e9c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%93:\l93:                                               \l  %94 = and i32 %90, -8\l  br label %95\l}"];
	Node0x63e9c80 -> Node0x63e9e80;
	Node0x63e9e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%95:\l95:                                               \l  %96 = phi i32 [ 0, %93 ], [ %139, %95 ]\l  %97 = phi \<2 x i16\> [ %87, %93 ], [ %138, %95 ]\l  %98 = phi i32 [ 0, %93 ], [ %140, %95 ]\l  %99 = or i32 %96, 1\l  %100 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %99\l  %101 = bitcast i16 addrspace(3)* %100 to \<2 x i16\> addrspace(3)*\l  %102 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %101, align 2, !tbaa !5\l  %103 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %97, \<2 x i16\> %102)\l  %104 = or i32 %96, 3\l  %105 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %104\l  %106 = bitcast i16 addrspace(3)* %105 to \<2 x i16\> addrspace(3)*\l  %107 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %106, align 2, !tbaa !5\l  %108 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %103, \<2 x i16\> %107)\l  %109 = or i32 %96, 5\l  %110 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %109\l  %111 = bitcast i16 addrspace(3)* %110 to \<2 x i16\> addrspace(3)*\l  %112 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %111, align 2, !tbaa !5\l  %113 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %108, \<2 x i16\> %112)\l  %114 = or i32 %96, 7\l  %115 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %114\l  %116 = bitcast i16 addrspace(3)* %115 to \<2 x i16\> addrspace(3)*\l  %117 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %116, align 2, !tbaa !5\l  %118 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %113, \<2 x i16\> %117)\l  %119 = or i32 %96, 9\l  %120 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %119\l  %121 = bitcast i16 addrspace(3)* %120 to \<2 x i16\> addrspace(3)*\l  %122 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %121, align 2, !tbaa !5\l  %123 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %118, \<2 x i16\> %122)\l  %124 = or i32 %96, 11\l  %125 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %124\l  %126 = bitcast i16 addrspace(3)* %125 to \<2 x i16\> addrspace(3)*\l  %127 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %126, align 2, !tbaa !5\l  %128 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %123, \<2 x i16\> %127)\l  %129 = or i32 %96, 13\l  %130 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %129\l  %131 = bitcast i16 addrspace(3)* %130 to \<2 x i16\> addrspace(3)*\l  %132 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %131, align 2, !tbaa !5\l  %133 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %128, \<2 x i16\> %132)\l  %134 = or i32 %96, 15\l  %135 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %134\l  %136 = bitcast i16 addrspace(3)* %135 to \<2 x i16\> addrspace(3)*\l  %137 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %136, align 2, !tbaa !5\l  %138 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %133, \<2 x i16\> %137)\l  %139 = add nuw i32 %96, 16\l  %140 = add i32 %98, 8\l  %141 = icmp eq i32 %140, %94\l  br i1 %141, label %142, label %95, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x63e9e80:s0 -> Node0x63e9bf0;
	Node0x63e9e80:s1 -> Node0x63e9e80;
	Node0x63e9bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%142:\l142:                                              \l  %143 = phi \<2 x i16\> [ undef, %83 ], [ %138, %95 ]\l  %144 = phi i32 [ 0, %83 ], [ %139, %95 ]\l  %145 = phi \<2 x i16\> [ %87, %83 ], [ %138, %95 ]\l  %146 = icmp eq i32 %91, 0\l  br i1 %146, label %159, label %147\l|{<s0>T|<s1>F}}"];
	Node0x63e9bf0:s0 -> Node0x63ec7c0;
	Node0x63e9bf0:s1 -> Node0x63ec810;
	Node0x63ec810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%147:\l147:                                              \l  %148 = phi i32 [ %156, %147 ], [ %144, %142 ]\l  %149 = phi \<2 x i16\> [ %155, %147 ], [ %145, %142 ]\l  %150 = phi i32 [ %157, %147 ], [ 0, %142 ]\l  %151 = or i32 %148, 1\l  %152 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %151\l  %153 = bitcast i16 addrspace(3)* %152 to \<2 x i16\> addrspace(3)*\l  %154 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %153, align 2, !tbaa !5\l  %155 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %149, \<2 x i16\> %154)\l  %156 = add nuw i32 %148, 2\l  %157 = add i32 %150, 1\l  %158 = icmp eq i32 %157, %91\l  br i1 %158, label %159, label %147, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x63ec810:s0 -> Node0x63ec7c0;
	Node0x63ec810:s1 -> Node0x63ec810;
	Node0x63ec7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%159:\l159:                                              \l  %160 = phi \<2 x i16\> [ %143, %142 ], [ %155, %147 ]\l  %161 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %160)\l  %162 = icmp eq i32 %77, %84\l  br i1 %162, label %166, label %163\l|{<s0>T|<s1>F}}"];
	Node0x63ec7c0:s0 -> Node0x63e8280;
	Node0x63ec7c0:s1 -> Node0x63e8680;
	Node0x63e8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%163:\l163:                                              \l  %164 = phi i32 [ 1, %81 ], [ %85, %159 ]\l  %165 = phi i16 [ %80, %81 ], [ %161, %159 ]\l  br label %862\l}"];
	Node0x63e8680 -> Node0x63ed700;
	Node0x63e8280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%166:\l166:                                              \l  %167 = phi i16 [ %80, %70 ], [ %161, %159 ], [ %867, %862 ]\l  %168 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 16\l  store i16 %167, i16 addrspace(1)* %168, align 2, !tbaa !5\l  %169 = add i32 %74, 32\l  %170 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %169\l  %171 = load i16, i16 addrspace(3)* %170, align 2, !tbaa !5\l  br i1 %76, label %265, label %172\l|{<s0>T|<s1>F}}"];
	Node0x63e8280:s0 -> Node0x63edaa0;
	Node0x63e8280:s1 -> Node0x63edca0;
	Node0x63edca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%172:\l172:                                              \l  %173 = icmp ult i32 %77, 2\l  br i1 %173, label %254, label %174\l|{<s0>T|<s1>F}}"];
	Node0x63edca0:s0 -> Node0x63ede70;
	Node0x63edca0:s1 -> Node0x63edec0;
	Node0x63edec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%174:\l174:                                              \l  %175 = and i32 %77, 2147483646\l  %176 = or i32 %77, 1\l  %177 = insertelement \<2 x i16\> poison, i16 %171, i64 0\l  %178 = shufflevector \<2 x i16\> %177, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %179 = add nsw i32 %77, -2\l  %180 = lshr i32 %179, 1\l  %181 = add nuw i32 %180, 1\l  %182 = and i32 %181, 7\l  %183 = icmp ult i32 %179, 14\l  br i1 %183, label %233, label %184\l|{<s0>T|<s1>F}}"];
	Node0x63edec0:s0 -> Node0x63ee550;
	Node0x63edec0:s1 -> Node0x63ee5a0;
	Node0x63ee5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%184:\l184:                                              \l  %185 = and i32 %181, -8\l  br label %186\l}"];
	Node0x63ee5a0 -> Node0x63ee770;
	Node0x63ee770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%186:\l186:                                              \l  %187 = phi i32 [ 0, %184 ], [ %230, %186 ]\l  %188 = phi \<2 x i16\> [ %178, %184 ], [ %229, %186 ]\l  %189 = phi i32 [ 0, %184 ], [ %231, %186 ]\l  %190 = or i32 %187, 1\l  %191 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %190\l  %192 = bitcast i16 addrspace(3)* %191 to \<2 x i16\> addrspace(3)*\l  %193 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %192, align 2, !tbaa !5\l  %194 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %188, \<2 x i16\> %193)\l  %195 = or i32 %187, 3\l  %196 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %195\l  %197 = bitcast i16 addrspace(3)* %196 to \<2 x i16\> addrspace(3)*\l  %198 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %197, align 2, !tbaa !5\l  %199 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %194, \<2 x i16\> %198)\l  %200 = or i32 %187, 5\l  %201 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %200\l  %202 = bitcast i16 addrspace(3)* %201 to \<2 x i16\> addrspace(3)*\l  %203 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %202, align 2, !tbaa !5\l  %204 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %199, \<2 x i16\> %203)\l  %205 = or i32 %187, 7\l  %206 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %205\l  %207 = bitcast i16 addrspace(3)* %206 to \<2 x i16\> addrspace(3)*\l  %208 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %207, align 2, !tbaa !5\l  %209 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %204, \<2 x i16\> %208)\l  %210 = or i32 %187, 9\l  %211 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %210\l  %212 = bitcast i16 addrspace(3)* %211 to \<2 x i16\> addrspace(3)*\l  %213 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %212, align 2, !tbaa !5\l  %214 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %209, \<2 x i16\> %213)\l  %215 = or i32 %187, 11\l  %216 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %215\l  %217 = bitcast i16 addrspace(3)* %216 to \<2 x i16\> addrspace(3)*\l  %218 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %217, align 2, !tbaa !5\l  %219 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %214, \<2 x i16\> %218)\l  %220 = or i32 %187, 13\l  %221 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %220\l  %222 = bitcast i16 addrspace(3)* %221 to \<2 x i16\> addrspace(3)*\l  %223 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %222, align 2, !tbaa !5\l  %224 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %219, \<2 x i16\> %223)\l  %225 = or i32 %187, 15\l  %226 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %225\l  %227 = bitcast i16 addrspace(3)* %226 to \<2 x i16\> addrspace(3)*\l  %228 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %227, align 2, !tbaa !5\l  %229 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %224, \<2 x i16\> %228)\l  %230 = add nuw i32 %187, 16\l  %231 = add i32 %189, 8\l  %232 = icmp eq i32 %231, %185\l  br i1 %232, label %233, label %186, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x63ee770:s0 -> Node0x63ee550;
	Node0x63ee770:s1 -> Node0x63ee770;
	Node0x63ee550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%233:\l233:                                              \l  %234 = phi \<2 x i16\> [ undef, %174 ], [ %229, %186 ]\l  %235 = phi i32 [ 0, %174 ], [ %230, %186 ]\l  %236 = phi \<2 x i16\> [ %178, %174 ], [ %229, %186 ]\l  %237 = icmp eq i32 %182, 0\l  br i1 %237, label %250, label %238\l|{<s0>T|<s1>F}}"];
	Node0x63ee550:s0 -> Node0x63f09b0;
	Node0x63ee550:s1 -> Node0x63f0a00;
	Node0x63f0a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%238:\l238:                                              \l  %239 = phi i32 [ %247, %238 ], [ %235, %233 ]\l  %240 = phi \<2 x i16\> [ %246, %238 ], [ %236, %233 ]\l  %241 = phi i32 [ %248, %238 ], [ 0, %233 ]\l  %242 = or i32 %239, 1\l  %243 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %242\l  %244 = bitcast i16 addrspace(3)* %243 to \<2 x i16\> addrspace(3)*\l  %245 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %244, align 2, !tbaa !5\l  %246 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %240, \<2 x i16\> %245)\l  %247 = add nuw i32 %239, 2\l  %248 = add i32 %241, 1\l  %249 = icmp eq i32 %248, %182\l  br i1 %249, label %250, label %238, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x63f0a00:s0 -> Node0x63f09b0;
	Node0x63f0a00:s1 -> Node0x63f0a00;
	Node0x63f09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%250:\l250:                                              \l  %251 = phi \<2 x i16\> [ %234, %233 ], [ %246, %238 ]\l  %252 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %251)\l  %253 = icmp eq i32 %77, %175\l  br i1 %253, label %265, label %254\l|{<s0>T|<s1>F}}"];
	Node0x63f09b0:s0 -> Node0x63edaa0;
	Node0x63f09b0:s1 -> Node0x63ede70;
	Node0x63ede70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%254:\l254:                                              \l  %255 = phi i32 [ 1, %172 ], [ %176, %250 ]\l  %256 = phi i16 [ %171, %172 ], [ %252, %250 ]\l  br label %257\l}"];
	Node0x63ede70 -> Node0x63e47c0;
	Node0x63e47c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%257:\l257:                                              \l  %258 = phi i32 [ %263, %257 ], [ %255, %254 ]\l  %259 = phi i16 [ %262, %257 ], [ %256, %254 ]\l  %260 = getelementptr inbounds i16, i16 addrspace(3)* %170, i32 %258\l  %261 = load i16, i16 addrspace(3)* %260, align 2, !tbaa !5\l  %262 = tail call i16 @llvm.umin.i16(i16 %259, i16 %261)\l  %263 = add nuw nsw i32 %258, 1\l  %264 = icmp eq i32 %258, %77\l  br i1 %264, label %265, label %257, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x63e47c0:s0 -> Node0x63edaa0;
	Node0x63e47c0:s1 -> Node0x63e47c0;
	Node0x63edaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%265:\l265:                                              \l  %266 = phi i16 [ %171, %166 ], [ %252, %250 ], [ %262, %257 ]\l  %267 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 32\l  store i16 %266, i16 addrspace(1)* %267, align 2, !tbaa !5\l  %268 = add i32 %74, 48\l  %269 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %268\l  %270 = load i16, i16 addrspace(3)* %269, align 2, !tbaa !5\l  br i1 %76, label %364, label %271\l|{<s0>T|<s1>F}}"];
	Node0x63edaa0:s0 -> Node0x63e13c0;
	Node0x63edaa0:s1 -> Node0x63e1b90;
	Node0x63e1b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%271:\l271:                                              \l  %272 = icmp ult i32 %77, 2\l  br i1 %272, label %353, label %273\l|{<s0>T|<s1>F}}"];
	Node0x63e1b90:s0 -> Node0x63f27e0;
	Node0x63e1b90:s1 -> Node0x63f2830;
	Node0x63f2830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%273:\l273:                                              \l  %274 = and i32 %77, 2147483646\l  %275 = or i32 %77, 1\l  %276 = insertelement \<2 x i16\> poison, i16 %270, i64 0\l  %277 = shufflevector \<2 x i16\> %276, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %278 = add nsw i32 %77, -2\l  %279 = lshr i32 %278, 1\l  %280 = add nuw i32 %279, 1\l  %281 = and i32 %280, 7\l  %282 = icmp ult i32 %278, 14\l  br i1 %282, label %332, label %283\l|{<s0>T|<s1>F}}"];
	Node0x63f2830:s0 -> Node0x63f2da0;
	Node0x63f2830:s1 -> Node0x63f3f20;
	Node0x63f3f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%283:\l283:                                              \l  %284 = and i32 %280, -8\l  br label %285\l}"];
	Node0x63f3f20 -> Node0x63f40f0;
	Node0x63f40f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%285:\l285:                                              \l  %286 = phi i32 [ 0, %283 ], [ %329, %285 ]\l  %287 = phi \<2 x i16\> [ %277, %283 ], [ %328, %285 ]\l  %288 = phi i32 [ 0, %283 ], [ %330, %285 ]\l  %289 = or i32 %286, 1\l  %290 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %289\l  %291 = bitcast i16 addrspace(3)* %290 to \<2 x i16\> addrspace(3)*\l  %292 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %291, align 2, !tbaa !5\l  %293 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %287, \<2 x i16\> %292)\l  %294 = or i32 %286, 3\l  %295 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %294\l  %296 = bitcast i16 addrspace(3)* %295 to \<2 x i16\> addrspace(3)*\l  %297 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %296, align 2, !tbaa !5\l  %298 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %293, \<2 x i16\> %297)\l  %299 = or i32 %286, 5\l  %300 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %299\l  %301 = bitcast i16 addrspace(3)* %300 to \<2 x i16\> addrspace(3)*\l  %302 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %301, align 2, !tbaa !5\l  %303 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %298, \<2 x i16\> %302)\l  %304 = or i32 %286, 7\l  %305 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %304\l  %306 = bitcast i16 addrspace(3)* %305 to \<2 x i16\> addrspace(3)*\l  %307 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %306, align 2, !tbaa !5\l  %308 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %303, \<2 x i16\> %307)\l  %309 = or i32 %286, 9\l  %310 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %309\l  %311 = bitcast i16 addrspace(3)* %310 to \<2 x i16\> addrspace(3)*\l  %312 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %311, align 2, !tbaa !5\l  %313 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %308, \<2 x i16\> %312)\l  %314 = or i32 %286, 11\l  %315 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %314\l  %316 = bitcast i16 addrspace(3)* %315 to \<2 x i16\> addrspace(3)*\l  %317 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %316, align 2, !tbaa !5\l  %318 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %313, \<2 x i16\> %317)\l  %319 = or i32 %286, 13\l  %320 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %319\l  %321 = bitcast i16 addrspace(3)* %320 to \<2 x i16\> addrspace(3)*\l  %322 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %321, align 2, !tbaa !5\l  %323 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %318, \<2 x i16\> %322)\l  %324 = or i32 %286, 15\l  %325 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %324\l  %326 = bitcast i16 addrspace(3)* %325 to \<2 x i16\> addrspace(3)*\l  %327 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %326, align 2, !tbaa !5\l  %328 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %323, \<2 x i16\> %327)\l  %329 = add nuw i32 %286, 16\l  %330 = add i32 %288, 8\l  %331 = icmp eq i32 %330, %284\l  br i1 %331, label %332, label %285, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x63f40f0:s0 -> Node0x63f2da0;
	Node0x63f40f0:s1 -> Node0x63f40f0;
	Node0x63f2da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%332:\l332:                                              \l  %333 = phi \<2 x i16\> [ undef, %273 ], [ %328, %285 ]\l  %334 = phi i32 [ 0, %273 ], [ %329, %285 ]\l  %335 = phi \<2 x i16\> [ %277, %273 ], [ %328, %285 ]\l  %336 = icmp eq i32 %281, 0\l  br i1 %336, label %349, label %337\l|{<s0>T|<s1>F}}"];
	Node0x63f2da0:s0 -> Node0x63f69a0;
	Node0x63f2da0:s1 -> Node0x63f69f0;
	Node0x63f69f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%337:\l337:                                              \l  %338 = phi i32 [ %346, %337 ], [ %334, %332 ]\l  %339 = phi \<2 x i16\> [ %345, %337 ], [ %335, %332 ]\l  %340 = phi i32 [ %347, %337 ], [ 0, %332 ]\l  %341 = or i32 %338, 1\l  %342 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %341\l  %343 = bitcast i16 addrspace(3)* %342 to \<2 x i16\> addrspace(3)*\l  %344 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %343, align 2, !tbaa !5\l  %345 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %339, \<2 x i16\> %344)\l  %346 = add nuw i32 %338, 2\l  %347 = add i32 %340, 1\l  %348 = icmp eq i32 %347, %281\l  br i1 %348, label %349, label %337, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x63f69f0:s0 -> Node0x63f69a0;
	Node0x63f69f0:s1 -> Node0x63f69f0;
	Node0x63f69a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%349:\l349:                                              \l  %350 = phi \<2 x i16\> [ %333, %332 ], [ %345, %337 ]\l  %351 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %350)\l  %352 = icmp eq i32 %77, %274\l  br i1 %352, label %364, label %353\l|{<s0>T|<s1>F}}"];
	Node0x63f69a0:s0 -> Node0x63e13c0;
	Node0x63f69a0:s1 -> Node0x63f27e0;
	Node0x63f27e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%353:\l353:                                              \l  %354 = phi i32 [ 1, %271 ], [ %275, %349 ]\l  %355 = phi i16 [ %270, %271 ], [ %351, %349 ]\l  br label %356\l}"];
	Node0x63f27e0 -> Node0x63f77c0;
	Node0x63f77c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%356:\l356:                                              \l  %357 = phi i32 [ %362, %356 ], [ %354, %353 ]\l  %358 = phi i16 [ %361, %356 ], [ %355, %353 ]\l  %359 = getelementptr inbounds i16, i16 addrspace(3)* %269, i32 %357\l  %360 = load i16, i16 addrspace(3)* %359, align 2, !tbaa !5\l  %361 = tail call i16 @llvm.umin.i16(i16 %358, i16 %360)\l  %362 = add nuw nsw i32 %357, 1\l  %363 = icmp eq i32 %357, %77\l  br i1 %363, label %364, label %356, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x63f77c0:s0 -> Node0x63e13c0;
	Node0x63f77c0:s1 -> Node0x63f77c0;
	Node0x63e13c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%364:\l364:                                              \l  %365 = phi i16 [ %270, %265 ], [ %351, %349 ], [ %361, %356 ]\l  %366 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 48\l  store i16 %365, i16 addrspace(1)* %366, align 2, !tbaa !5\l  %367 = add i32 %74, 64\l  %368 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %367\l  %369 = load i16, i16 addrspace(3)* %368, align 2, !tbaa !5\l  br i1 %76, label %463, label %370\l|{<s0>T|<s1>F}}"];
	Node0x63e13c0:s0 -> Node0x63f80e0;
	Node0x63e13c0:s1 -> Node0x63f82a0;
	Node0x63f82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%370:\l370:                                              \l  %371 = icmp ult i32 %77, 2\l  br i1 %371, label %452, label %372\l|{<s0>T|<s1>F}}"];
	Node0x63f82a0:s0 -> Node0x63f8470;
	Node0x63f82a0:s1 -> Node0x63f84c0;
	Node0x63f84c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%372:\l372:                                              \l  %373 = and i32 %77, 2147483646\l  %374 = or i32 %77, 1\l  %375 = insertelement \<2 x i16\> poison, i16 %369, i64 0\l  %376 = shufflevector \<2 x i16\> %375, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %377 = add nsw i32 %77, -2\l  %378 = lshr i32 %377, 1\l  %379 = add nuw i32 %378, 1\l  %380 = and i32 %379, 7\l  %381 = icmp ult i32 %377, 14\l  br i1 %381, label %431, label %382\l|{<s0>T|<s1>F}}"];
	Node0x63f84c0:s0 -> Node0x63f8b50;
	Node0x63f84c0:s1 -> Node0x63f8ba0;
	Node0x63f8ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%382:\l382:                                              \l  %383 = and i32 %379, -8\l  br label %384\l}"];
	Node0x63f8ba0 -> Node0x63f8d70;
	Node0x63f8d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%384:\l384:                                              \l  %385 = phi i32 [ 0, %382 ], [ %428, %384 ]\l  %386 = phi \<2 x i16\> [ %376, %382 ], [ %427, %384 ]\l  %387 = phi i32 [ 0, %382 ], [ %429, %384 ]\l  %388 = or i32 %385, 1\l  %389 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %388\l  %390 = bitcast i16 addrspace(3)* %389 to \<2 x i16\> addrspace(3)*\l  %391 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %390, align 2, !tbaa !5\l  %392 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %386, \<2 x i16\> %391)\l  %393 = or i32 %385, 3\l  %394 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %393\l  %395 = bitcast i16 addrspace(3)* %394 to \<2 x i16\> addrspace(3)*\l  %396 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %395, align 2, !tbaa !5\l  %397 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %392, \<2 x i16\> %396)\l  %398 = or i32 %385, 5\l  %399 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %398\l  %400 = bitcast i16 addrspace(3)* %399 to \<2 x i16\> addrspace(3)*\l  %401 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %400, align 2, !tbaa !5\l  %402 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %397, \<2 x i16\> %401)\l  %403 = or i32 %385, 7\l  %404 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %403\l  %405 = bitcast i16 addrspace(3)* %404 to \<2 x i16\> addrspace(3)*\l  %406 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %405, align 2, !tbaa !5\l  %407 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %402, \<2 x i16\> %406)\l  %408 = or i32 %385, 9\l  %409 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %408\l  %410 = bitcast i16 addrspace(3)* %409 to \<2 x i16\> addrspace(3)*\l  %411 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %410, align 2, !tbaa !5\l  %412 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %407, \<2 x i16\> %411)\l  %413 = or i32 %385, 11\l  %414 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %413\l  %415 = bitcast i16 addrspace(3)* %414 to \<2 x i16\> addrspace(3)*\l  %416 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %415, align 2, !tbaa !5\l  %417 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %412, \<2 x i16\> %416)\l  %418 = or i32 %385, 13\l  %419 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %418\l  %420 = bitcast i16 addrspace(3)* %419 to \<2 x i16\> addrspace(3)*\l  %421 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %420, align 2, !tbaa !5\l  %422 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %417, \<2 x i16\> %421)\l  %423 = or i32 %385, 15\l  %424 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %423\l  %425 = bitcast i16 addrspace(3)* %424 to \<2 x i16\> addrspace(3)*\l  %426 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %425, align 2, !tbaa !5\l  %427 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %422, \<2 x i16\> %426)\l  %428 = add nuw i32 %385, 16\l  %429 = add i32 %387, 8\l  %430 = icmp eq i32 %429, %383\l  br i1 %430, label %431, label %384, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x63f8d70:s0 -> Node0x63f8b50;
	Node0x63f8d70:s1 -> Node0x63f8d70;
	Node0x63f8b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%431:\l431:                                              \l  %432 = phi \<2 x i16\> [ undef, %372 ], [ %427, %384 ]\l  %433 = phi i32 [ 0, %372 ], [ %428, %384 ]\l  %434 = phi \<2 x i16\> [ %376, %372 ], [ %427, %384 ]\l  %435 = icmp eq i32 %380, 0\l  br i1 %435, label %448, label %436\l|{<s0>T|<s1>F}}"];
	Node0x63f8b50:s0 -> Node0x63faf80;
	Node0x63f8b50:s1 -> Node0x63fafd0;
	Node0x63fafd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%436:\l436:                                              \l  %437 = phi i32 [ %445, %436 ], [ %433, %431 ]\l  %438 = phi \<2 x i16\> [ %444, %436 ], [ %434, %431 ]\l  %439 = phi i32 [ %446, %436 ], [ 0, %431 ]\l  %440 = or i32 %437, 1\l  %441 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %440\l  %442 = bitcast i16 addrspace(3)* %441 to \<2 x i16\> addrspace(3)*\l  %443 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %442, align 2, !tbaa !5\l  %444 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %438, \<2 x i16\> %443)\l  %445 = add nuw i32 %437, 2\l  %446 = add i32 %439, 1\l  %447 = icmp eq i32 %446, %380\l  br i1 %447, label %448, label %436, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x63fafd0:s0 -> Node0x63faf80;
	Node0x63fafd0:s1 -> Node0x63fafd0;
	Node0x63faf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%448:\l448:                                              \l  %449 = phi \<2 x i16\> [ %432, %431 ], [ %444, %436 ]\l  %450 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %449)\l  %451 = icmp eq i32 %77, %373\l  br i1 %451, label %463, label %452\l|{<s0>T|<s1>F}}"];
	Node0x63faf80:s0 -> Node0x63f80e0;
	Node0x63faf80:s1 -> Node0x63f8470;
	Node0x63f8470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%452:\l452:                                              \l  %453 = phi i32 [ 1, %370 ], [ %374, %448 ]\l  %454 = phi i16 [ %369, %370 ], [ %450, %448 ]\l  br label %455\l}"];
	Node0x63f8470 -> Node0x63fc1f0;
	Node0x63fc1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%455:\l455:                                              \l  %456 = phi i32 [ %461, %455 ], [ %453, %452 ]\l  %457 = phi i16 [ %460, %455 ], [ %454, %452 ]\l  %458 = getelementptr inbounds i16, i16 addrspace(3)* %368, i32 %456\l  %459 = load i16, i16 addrspace(3)* %458, align 2, !tbaa !5\l  %460 = tail call i16 @llvm.umin.i16(i16 %457, i16 %459)\l  %461 = add nuw nsw i32 %456, 1\l  %462 = icmp eq i32 %456, %77\l  br i1 %462, label %463, label %455, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x63fc1f0:s0 -> Node0x63f80e0;
	Node0x63fc1f0:s1 -> Node0x63fc1f0;
	Node0x63f80e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%463:\l463:                                              \l  %464 = phi i16 [ %369, %364 ], [ %450, %448 ], [ %460, %455 ]\l  %465 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 64\l  store i16 %464, i16 addrspace(1)* %465, align 2, !tbaa !5\l  %466 = add i32 %74, 80\l  %467 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %466\l  %468 = load i16, i16 addrspace(3)* %467, align 2, !tbaa !5\l  br i1 %76, label %562, label %469\l|{<s0>T|<s1>F}}"];
	Node0x63f80e0:s0 -> Node0x63fcb10;
	Node0x63f80e0:s1 -> Node0x63fccd0;
	Node0x63fccd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%469:\l469:                                              \l  %470 = icmp ult i32 %77, 2\l  br i1 %470, label %551, label %471\l|{<s0>T|<s1>F}}"];
	Node0x63fccd0:s0 -> Node0x63fcea0;
	Node0x63fccd0:s1 -> Node0x63fcef0;
	Node0x63fcef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%471:\l471:                                              \l  %472 = and i32 %77, 2147483646\l  %473 = or i32 %77, 1\l  %474 = insertelement \<2 x i16\> poison, i16 %468, i64 0\l  %475 = shufflevector \<2 x i16\> %474, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %476 = add nsw i32 %77, -2\l  %477 = lshr i32 %476, 1\l  %478 = add nuw i32 %477, 1\l  %479 = and i32 %478, 7\l  %480 = icmp ult i32 %476, 14\l  br i1 %480, label %530, label %481\l|{<s0>T|<s1>F}}"];
	Node0x63fcef0:s0 -> Node0x63fd580;
	Node0x63fcef0:s1 -> Node0x63fd5d0;
	Node0x63fd5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%481:\l481:                                              \l  %482 = and i32 %478, -8\l  br label %483\l}"];
	Node0x63fd5d0 -> Node0x63fd7a0;
	Node0x63fd7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%483:\l483:                                              \l  %484 = phi i32 [ 0, %481 ], [ %527, %483 ]\l  %485 = phi \<2 x i16\> [ %475, %481 ], [ %526, %483 ]\l  %486 = phi i32 [ 0, %481 ], [ %528, %483 ]\l  %487 = or i32 %484, 1\l  %488 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %487\l  %489 = bitcast i16 addrspace(3)* %488 to \<2 x i16\> addrspace(3)*\l  %490 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %489, align 2, !tbaa !5\l  %491 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %485, \<2 x i16\> %490)\l  %492 = or i32 %484, 3\l  %493 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %492\l  %494 = bitcast i16 addrspace(3)* %493 to \<2 x i16\> addrspace(3)*\l  %495 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %494, align 2, !tbaa !5\l  %496 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %491, \<2 x i16\> %495)\l  %497 = or i32 %484, 5\l  %498 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %497\l  %499 = bitcast i16 addrspace(3)* %498 to \<2 x i16\> addrspace(3)*\l  %500 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %499, align 2, !tbaa !5\l  %501 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %496, \<2 x i16\> %500)\l  %502 = or i32 %484, 7\l  %503 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %502\l  %504 = bitcast i16 addrspace(3)* %503 to \<2 x i16\> addrspace(3)*\l  %505 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %504, align 2, !tbaa !5\l  %506 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %501, \<2 x i16\> %505)\l  %507 = or i32 %484, 9\l  %508 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %507\l  %509 = bitcast i16 addrspace(3)* %508 to \<2 x i16\> addrspace(3)*\l  %510 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %509, align 2, !tbaa !5\l  %511 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %506, \<2 x i16\> %510)\l  %512 = or i32 %484, 11\l  %513 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %512\l  %514 = bitcast i16 addrspace(3)* %513 to \<2 x i16\> addrspace(3)*\l  %515 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %514, align 2, !tbaa !5\l  %516 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %511, \<2 x i16\> %515)\l  %517 = or i32 %484, 13\l  %518 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %517\l  %519 = bitcast i16 addrspace(3)* %518 to \<2 x i16\> addrspace(3)*\l  %520 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %519, align 2, !tbaa !5\l  %521 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %516, \<2 x i16\> %520)\l  %522 = or i32 %484, 15\l  %523 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %522\l  %524 = bitcast i16 addrspace(3)* %523 to \<2 x i16\> addrspace(3)*\l  %525 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %524, align 2, !tbaa !5\l  %526 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %521, \<2 x i16\> %525)\l  %527 = add nuw i32 %484, 16\l  %528 = add i32 %486, 8\l  %529 = icmp eq i32 %528, %482\l  br i1 %529, label %530, label %483, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x63fd7a0:s0 -> Node0x63fd580;
	Node0x63fd7a0:s1 -> Node0x63fd7a0;
	Node0x63fd580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%530:\l530:                                              \l  %531 = phi \<2 x i16\> [ undef, %471 ], [ %526, %483 ]\l  %532 = phi i32 [ 0, %471 ], [ %527, %483 ]\l  %533 = phi \<2 x i16\> [ %475, %471 ], [ %526, %483 ]\l  %534 = icmp eq i32 %479, 0\l  br i1 %534, label %547, label %535\l|{<s0>T|<s1>F}}"];
	Node0x63fd580:s0 -> Node0x63f3c40;
	Node0x63fd580:s1 -> Node0x63f3c90;
	Node0x63f3c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%535:\l535:                                              \l  %536 = phi i32 [ %544, %535 ], [ %532, %530 ]\l  %537 = phi \<2 x i16\> [ %543, %535 ], [ %533, %530 ]\l  %538 = phi i32 [ %545, %535 ], [ 0, %530 ]\l  %539 = or i32 %536, 1\l  %540 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %539\l  %541 = bitcast i16 addrspace(3)* %540 to \<2 x i16\> addrspace(3)*\l  %542 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %541, align 2, !tbaa !5\l  %543 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %537, \<2 x i16\> %542)\l  %544 = add nuw i32 %536, 2\l  %545 = add i32 %538, 1\l  %546 = icmp eq i32 %545, %479\l  br i1 %546, label %547, label %535, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x63f3c90:s0 -> Node0x63f3c40;
	Node0x63f3c90:s1 -> Node0x63f3c90;
	Node0x63f3c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%547:\l547:                                              \l  %548 = phi \<2 x i16\> [ %531, %530 ], [ %543, %535 ]\l  %549 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %548)\l  %550 = icmp eq i32 %77, %472\l  br i1 %550, label %562, label %551\l|{<s0>T|<s1>F}}"];
	Node0x63f3c40:s0 -> Node0x63fcb10;
	Node0x63f3c40:s1 -> Node0x63fcea0;
	Node0x63fcea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%551:\l551:                                              \l  %552 = phi i32 [ 1, %469 ], [ %473, %547 ]\l  %553 = phi i16 [ %468, %469 ], [ %549, %547 ]\l  br label %554\l}"];
	Node0x63fcea0 -> Node0x6401830;
	Node0x6401830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%554:\l554:                                              \l  %555 = phi i32 [ %560, %554 ], [ %552, %551 ]\l  %556 = phi i16 [ %559, %554 ], [ %553, %551 ]\l  %557 = getelementptr inbounds i16, i16 addrspace(3)* %467, i32 %555\l  %558 = load i16, i16 addrspace(3)* %557, align 2, !tbaa !5\l  %559 = tail call i16 @llvm.umin.i16(i16 %556, i16 %558)\l  %560 = add nuw nsw i32 %555, 1\l  %561 = icmp eq i32 %555, %77\l  br i1 %561, label %562, label %554, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x6401830:s0 -> Node0x63fcb10;
	Node0x6401830:s1 -> Node0x6401830;
	Node0x63fcb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%562:\l562:                                              \l  %563 = phi i16 [ %468, %463 ], [ %549, %547 ], [ %559, %554 ]\l  %564 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 80\l  store i16 %563, i16 addrspace(1)* %564, align 2, !tbaa !5\l  %565 = add i32 %74, 96\l  %566 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %565\l  %567 = load i16, i16 addrspace(3)* %566, align 2, !tbaa !5\l  br i1 %76, label %661, label %568\l|{<s0>T|<s1>F}}"];
	Node0x63fcb10:s0 -> Node0x63f4dc0;
	Node0x63fcb10:s1 -> Node0x63f4f80;
	Node0x63f4f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%568:\l568:                                              \l  %569 = icmp ult i32 %77, 2\l  br i1 %569, label %650, label %570\l|{<s0>T|<s1>F}}"];
	Node0x63f4f80:s0 -> Node0x63f5150;
	Node0x63f4f80:s1 -> Node0x63f51a0;
	Node0x63f51a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%570:\l570:                                              \l  %571 = and i32 %77, 2147483646\l  %572 = or i32 %77, 1\l  %573 = insertelement \<2 x i16\> poison, i16 %567, i64 0\l  %574 = shufflevector \<2 x i16\> %573, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %575 = add nsw i32 %77, -2\l  %576 = lshr i32 %575, 1\l  %577 = add nuw i32 %576, 1\l  %578 = and i32 %577, 7\l  %579 = icmp ult i32 %575, 14\l  br i1 %579, label %629, label %580\l|{<s0>T|<s1>F}}"];
	Node0x63f51a0:s0 -> Node0x63f5830;
	Node0x63f51a0:s1 -> Node0x63f5880;
	Node0x63f5880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%580:\l580:                                              \l  %581 = and i32 %577, -8\l  br label %582\l}"];
	Node0x63f5880 -> Node0x63f1510;
	Node0x63f1510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%582:\l582:                                              \l  %583 = phi i32 [ 0, %580 ], [ %626, %582 ]\l  %584 = phi \<2 x i16\> [ %574, %580 ], [ %625, %582 ]\l  %585 = phi i32 [ 0, %580 ], [ %627, %582 ]\l  %586 = or i32 %583, 1\l  %587 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %586\l  %588 = bitcast i16 addrspace(3)* %587 to \<2 x i16\> addrspace(3)*\l  %589 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %588, align 2, !tbaa !5\l  %590 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %584, \<2 x i16\> %589)\l  %591 = or i32 %583, 3\l  %592 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %591\l  %593 = bitcast i16 addrspace(3)* %592 to \<2 x i16\> addrspace(3)*\l  %594 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %593, align 2, !tbaa !5\l  %595 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %590, \<2 x i16\> %594)\l  %596 = or i32 %583, 5\l  %597 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %596\l  %598 = bitcast i16 addrspace(3)* %597 to \<2 x i16\> addrspace(3)*\l  %599 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %598, align 2, !tbaa !5\l  %600 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %595, \<2 x i16\> %599)\l  %601 = or i32 %583, 7\l  %602 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %601\l  %603 = bitcast i16 addrspace(3)* %602 to \<2 x i16\> addrspace(3)*\l  %604 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %603, align 2, !tbaa !5\l  %605 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %600, \<2 x i16\> %604)\l  %606 = or i32 %583, 9\l  %607 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %606\l  %608 = bitcast i16 addrspace(3)* %607 to \<2 x i16\> addrspace(3)*\l  %609 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %608, align 2, !tbaa !5\l  %610 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %605, \<2 x i16\> %609)\l  %611 = or i32 %583, 11\l  %612 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %611\l  %613 = bitcast i16 addrspace(3)* %612 to \<2 x i16\> addrspace(3)*\l  %614 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %613, align 2, !tbaa !5\l  %615 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %610, \<2 x i16\> %614)\l  %616 = or i32 %583, 13\l  %617 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %616\l  %618 = bitcast i16 addrspace(3)* %617 to \<2 x i16\> addrspace(3)*\l  %619 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %618, align 2, !tbaa !5\l  %620 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %615, \<2 x i16\> %619)\l  %621 = or i32 %583, 15\l  %622 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %621\l  %623 = bitcast i16 addrspace(3)* %622 to \<2 x i16\> addrspace(3)*\l  %624 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %623, align 2, !tbaa !5\l  %625 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %620, \<2 x i16\> %624)\l  %626 = add nuw i32 %583, 16\l  %627 = add i32 %585, 8\l  %628 = icmp eq i32 %627, %581\l  br i1 %628, label %629, label %582, !llvm.loop !28\l|{<s0>T|<s1>F}}"];
	Node0x63f1510:s0 -> Node0x63f5830;
	Node0x63f1510:s1 -> Node0x63f1510;
	Node0x63f5830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%629:\l629:                                              \l  %630 = phi \<2 x i16\> [ undef, %570 ], [ %625, %582 ]\l  %631 = phi i32 [ 0, %570 ], [ %626, %582 ]\l  %632 = phi \<2 x i16\> [ %574, %570 ], [ %625, %582 ]\l  %633 = icmp eq i32 %578, 0\l  br i1 %633, label %646, label %634\l|{<s0>T|<s1>F}}"];
	Node0x63f5830:s0 -> Node0x6406430;
	Node0x63f5830:s1 -> Node0x6406480;
	Node0x6406480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%634:\l634:                                              \l  %635 = phi i32 [ %643, %634 ], [ %631, %629 ]\l  %636 = phi \<2 x i16\> [ %642, %634 ], [ %632, %629 ]\l  %637 = phi i32 [ %644, %634 ], [ 0, %629 ]\l  %638 = or i32 %635, 1\l  %639 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %638\l  %640 = bitcast i16 addrspace(3)* %639 to \<2 x i16\> addrspace(3)*\l  %641 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %640, align 2, !tbaa !5\l  %642 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %636, \<2 x i16\> %641)\l  %643 = add nuw i32 %635, 2\l  %644 = add i32 %637, 1\l  %645 = icmp eq i32 %644, %578\l  br i1 %645, label %646, label %634, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x6406480:s0 -> Node0x6406430;
	Node0x6406480:s1 -> Node0x6406480;
	Node0x6406430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%646:\l646:                                              \l  %647 = phi \<2 x i16\> [ %630, %629 ], [ %642, %634 ]\l  %648 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %647)\l  %649 = icmp eq i32 %77, %571\l  br i1 %649, label %661, label %650\l|{<s0>T|<s1>F}}"];
	Node0x6406430:s0 -> Node0x63f4dc0;
	Node0x6406430:s1 -> Node0x63f5150;
	Node0x63f5150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%650:\l650:                                              \l  %651 = phi i32 [ 1, %568 ], [ %572, %646 ]\l  %652 = phi i16 [ %567, %568 ], [ %648, %646 ]\l  br label %653\l}"];
	Node0x63f5150 -> Node0x6407290;
	Node0x6407290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%653:\l653:                                              \l  %654 = phi i32 [ %659, %653 ], [ %651, %650 ]\l  %655 = phi i16 [ %658, %653 ], [ %652, %650 ]\l  %656 = getelementptr inbounds i16, i16 addrspace(3)* %566, i32 %654\l  %657 = load i16, i16 addrspace(3)* %656, align 2, !tbaa !5\l  %658 = tail call i16 @llvm.umin.i16(i16 %655, i16 %657)\l  %659 = add nuw nsw i32 %654, 1\l  %660 = icmp eq i32 %654, %77\l  br i1 %660, label %661, label %653, !llvm.loop !30\l|{<s0>T|<s1>F}}"];
	Node0x6407290:s0 -> Node0x63f4dc0;
	Node0x6407290:s1 -> Node0x6407290;
	Node0x63f4dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%661:\l661:                                              \l  %662 = phi i16 [ %567, %562 ], [ %648, %646 ], [ %658, %653 ]\l  %663 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 96\l  store i16 %662, i16 addrspace(1)* %663, align 2, !tbaa !5\l  %664 = add i32 %74, 112\l  %665 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %664\l  %666 = load i16, i16 addrspace(3)* %665, align 2, !tbaa !5\l  br i1 %76, label %760, label %667\l|{<s0>T|<s1>F}}"];
	Node0x63f4dc0:s0 -> Node0x6407bb0;
	Node0x63f4dc0:s1 -> Node0x6407d70;
	Node0x6407d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%667:\l667:                                              \l  %668 = icmp ult i32 %77, 2\l  br i1 %668, label %749, label %669\l|{<s0>T|<s1>F}}"];
	Node0x6407d70:s0 -> Node0x6407f40;
	Node0x6407d70:s1 -> Node0x6407f90;
	Node0x6407f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%669:\l669:                                              \l  %670 = and i32 %77, 2147483646\l  %671 = or i32 %77, 1\l  %672 = insertelement \<2 x i16\> poison, i16 %666, i64 0\l  %673 = shufflevector \<2 x i16\> %672, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %674 = add nsw i32 %77, -2\l  %675 = lshr i32 %674, 1\l  %676 = add nuw i32 %675, 1\l  %677 = and i32 %676, 7\l  %678 = icmp ult i32 %674, 14\l  br i1 %678, label %728, label %679\l|{<s0>T|<s1>F}}"];
	Node0x6407f90:s0 -> Node0x6408620;
	Node0x6407f90:s1 -> Node0x6408670;
	Node0x6408670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%679:\l679:                                              \l  %680 = and i32 %676, -8\l  br label %681\l}"];
	Node0x6408670 -> Node0x6408840;
	Node0x6408840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%681:\l681:                                              \l  %682 = phi i32 [ 0, %679 ], [ %725, %681 ]\l  %683 = phi \<2 x i16\> [ %673, %679 ], [ %724, %681 ]\l  %684 = phi i32 [ 0, %679 ], [ %726, %681 ]\l  %685 = or i32 %682, 1\l  %686 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %685\l  %687 = bitcast i16 addrspace(3)* %686 to \<2 x i16\> addrspace(3)*\l  %688 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %687, align 2, !tbaa !5\l  %689 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %683, \<2 x i16\> %688)\l  %690 = or i32 %682, 3\l  %691 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %690\l  %692 = bitcast i16 addrspace(3)* %691 to \<2 x i16\> addrspace(3)*\l  %693 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %692, align 2, !tbaa !5\l  %694 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %689, \<2 x i16\> %693)\l  %695 = or i32 %682, 5\l  %696 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %695\l  %697 = bitcast i16 addrspace(3)* %696 to \<2 x i16\> addrspace(3)*\l  %698 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %697, align 2, !tbaa !5\l  %699 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %694, \<2 x i16\> %698)\l  %700 = or i32 %682, 7\l  %701 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %700\l  %702 = bitcast i16 addrspace(3)* %701 to \<2 x i16\> addrspace(3)*\l  %703 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %702, align 2, !tbaa !5\l  %704 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %699, \<2 x i16\> %703)\l  %705 = or i32 %682, 9\l  %706 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %705\l  %707 = bitcast i16 addrspace(3)* %706 to \<2 x i16\> addrspace(3)*\l  %708 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %707, align 2, !tbaa !5\l  %709 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %704, \<2 x i16\> %708)\l  %710 = or i32 %682, 11\l  %711 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %710\l  %712 = bitcast i16 addrspace(3)* %711 to \<2 x i16\> addrspace(3)*\l  %713 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %712, align 2, !tbaa !5\l  %714 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %709, \<2 x i16\> %713)\l  %715 = or i32 %682, 13\l  %716 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %715\l  %717 = bitcast i16 addrspace(3)* %716 to \<2 x i16\> addrspace(3)*\l  %718 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %717, align 2, !tbaa !5\l  %719 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %714, \<2 x i16\> %718)\l  %720 = or i32 %682, 15\l  %721 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %720\l  %722 = bitcast i16 addrspace(3)* %721 to \<2 x i16\> addrspace(3)*\l  %723 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %722, align 2, !tbaa !5\l  %724 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %719, \<2 x i16\> %723)\l  %725 = add nuw i32 %682, 16\l  %726 = add i32 %684, 8\l  %727 = icmp eq i32 %726, %680\l  br i1 %727, label %728, label %681, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x6408840:s0 -> Node0x6408620;
	Node0x6408840:s1 -> Node0x6408840;
	Node0x6408620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%728:\l728:                                              \l  %729 = phi \<2 x i16\> [ undef, %669 ], [ %724, %681 ]\l  %730 = phi i32 [ 0, %669 ], [ %725, %681 ]\l  %731 = phi \<2 x i16\> [ %673, %669 ], [ %724, %681 ]\l  %732 = icmp eq i32 %677, 0\l  br i1 %732, label %745, label %733\l|{<s0>T|<s1>F}}"];
	Node0x6408620:s0 -> Node0x640b650;
	Node0x6408620:s1 -> Node0x640b6a0;
	Node0x640b6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%733:\l733:                                              \l  %734 = phi i32 [ %742, %733 ], [ %730, %728 ]\l  %735 = phi \<2 x i16\> [ %741, %733 ], [ %731, %728 ]\l  %736 = phi i32 [ %743, %733 ], [ 0, %728 ]\l  %737 = or i32 %734, 1\l  %738 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %737\l  %739 = bitcast i16 addrspace(3)* %738 to \<2 x i16\> addrspace(3)*\l  %740 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %739, align 2, !tbaa !5\l  %741 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %735, \<2 x i16\> %740)\l  %742 = add nuw i32 %734, 2\l  %743 = add i32 %736, 1\l  %744 = icmp eq i32 %743, %677\l  br i1 %744, label %745, label %733, !llvm.loop !32\l|{<s0>T|<s1>F}}"];
	Node0x640b6a0:s0 -> Node0x640b650;
	Node0x640b6a0:s1 -> Node0x640b6a0;
	Node0x640b650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%745:\l745:                                              \l  %746 = phi \<2 x i16\> [ %729, %728 ], [ %741, %733 ]\l  %747 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %746)\l  %748 = icmp eq i32 %77, %670\l  br i1 %748, label %760, label %749\l|{<s0>T|<s1>F}}"];
	Node0x640b650:s0 -> Node0x6407bb0;
	Node0x640b650:s1 -> Node0x6407f40;
	Node0x6407f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%749:\l749:                                              \l  %750 = phi i32 [ 1, %667 ], [ %671, %745 ]\l  %751 = phi i16 [ %666, %667 ], [ %747, %745 ]\l  br label %752\l}"];
	Node0x6407f40 -> Node0x640c4b0;
	Node0x640c4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%752:\l752:                                              \l  %753 = phi i32 [ %758, %752 ], [ %750, %749 ]\l  %754 = phi i16 [ %757, %752 ], [ %751, %749 ]\l  %755 = getelementptr inbounds i16, i16 addrspace(3)* %665, i32 %753\l  %756 = load i16, i16 addrspace(3)* %755, align 2, !tbaa !5\l  %757 = tail call i16 @llvm.umin.i16(i16 %754, i16 %756)\l  %758 = add nuw nsw i32 %753, 1\l  %759 = icmp eq i32 %753, %77\l  br i1 %759, label %760, label %752, !llvm.loop !33\l|{<s0>T|<s1>F}}"];
	Node0x640c4b0:s0 -> Node0x6407bb0;
	Node0x640c4b0:s1 -> Node0x640c4b0;
	Node0x6407bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%760:\l760:                                              \l  %761 = phi i16 [ %666, %661 ], [ %747, %745 ], [ %757, %752 ]\l  %762 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 112\l  store i16 %761, i16 addrspace(1)* %762, align 2, !tbaa !5\l  %763 = add i32 %74, 128\l  %764 = getelementptr inbounds [4 x [4 x [160 x i16]]], [4 x [4 x [160 x\l... i16]]] addrspace(3)* @_ZZ19erosionRows3DKernelPtS_iiiiE4smem, i32 0, i32 %7,\l... i32 %8, i32 %763\l  %765 = load i16, i16 addrspace(3)* %764, align 2, !tbaa !5\l  br i1 %76, label %859, label %766\l|{<s0>T|<s1>F}}"];
	Node0x6407bb0:s0 -> Node0x640cdd0;
	Node0x6407bb0:s1 -> Node0x640cf90;
	Node0x640cf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%766:\l766:                                              \l  %767 = icmp ult i32 %77, 2\l  br i1 %767, label %848, label %768\l|{<s0>T|<s1>F}}"];
	Node0x640cf90:s0 -> Node0x640d160;
	Node0x640cf90:s1 -> Node0x640d1b0;
	Node0x640d1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%768:\l768:                                              \l  %769 = and i32 %77, 2147483646\l  %770 = or i32 %77, 1\l  %771 = insertelement \<2 x i16\> poison, i16 %765, i64 0\l  %772 = shufflevector \<2 x i16\> %771, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %773 = add nsw i32 %77, -2\l  %774 = lshr i32 %773, 1\l  %775 = add nuw i32 %774, 1\l  %776 = and i32 %775, 7\l  %777 = icmp ult i32 %773, 14\l  br i1 %777, label %827, label %778\l|{<s0>T|<s1>F}}"];
	Node0x640d1b0:s0 -> Node0x640d840;
	Node0x640d1b0:s1 -> Node0x640d890;
	Node0x640d890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%778:\l778:                                              \l  %779 = and i32 %775, -8\l  br label %780\l}"];
	Node0x640d890 -> Node0x640da60;
	Node0x640da60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%780:\l780:                                              \l  %781 = phi i32 [ 0, %778 ], [ %824, %780 ]\l  %782 = phi \<2 x i16\> [ %772, %778 ], [ %823, %780 ]\l  %783 = phi i32 [ 0, %778 ], [ %825, %780 ]\l  %784 = or i32 %781, 1\l  %785 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %784\l  %786 = bitcast i16 addrspace(3)* %785 to \<2 x i16\> addrspace(3)*\l  %787 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %786, align 2, !tbaa !5\l  %788 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %782, \<2 x i16\> %787)\l  %789 = or i32 %781, 3\l  %790 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %789\l  %791 = bitcast i16 addrspace(3)* %790 to \<2 x i16\> addrspace(3)*\l  %792 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %791, align 2, !tbaa !5\l  %793 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %788, \<2 x i16\> %792)\l  %794 = or i32 %781, 5\l  %795 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %794\l  %796 = bitcast i16 addrspace(3)* %795 to \<2 x i16\> addrspace(3)*\l  %797 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %796, align 2, !tbaa !5\l  %798 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %793, \<2 x i16\> %797)\l  %799 = or i32 %781, 7\l  %800 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %799\l  %801 = bitcast i16 addrspace(3)* %800 to \<2 x i16\> addrspace(3)*\l  %802 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %801, align 2, !tbaa !5\l  %803 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %798, \<2 x i16\> %802)\l  %804 = or i32 %781, 9\l  %805 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %804\l  %806 = bitcast i16 addrspace(3)* %805 to \<2 x i16\> addrspace(3)*\l  %807 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %806, align 2, !tbaa !5\l  %808 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %803, \<2 x i16\> %807)\l  %809 = or i32 %781, 11\l  %810 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %809\l  %811 = bitcast i16 addrspace(3)* %810 to \<2 x i16\> addrspace(3)*\l  %812 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %811, align 2, !tbaa !5\l  %813 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %808, \<2 x i16\> %812)\l  %814 = or i32 %781, 13\l  %815 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %814\l  %816 = bitcast i16 addrspace(3)* %815 to \<2 x i16\> addrspace(3)*\l  %817 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %816, align 2, !tbaa !5\l  %818 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %813, \<2 x i16\> %817)\l  %819 = or i32 %781, 15\l  %820 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %819\l  %821 = bitcast i16 addrspace(3)* %820 to \<2 x i16\> addrspace(3)*\l  %822 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %821, align 2, !tbaa !5\l  %823 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %818, \<2 x i16\> %822)\l  %824 = add nuw i32 %781, 16\l  %825 = add i32 %783, 8\l  %826 = icmp eq i32 %825, %779\l  br i1 %826, label %827, label %780, !llvm.loop !34\l|{<s0>T|<s1>F}}"];
	Node0x640da60:s0 -> Node0x640d840;
	Node0x640da60:s1 -> Node0x640da60;
	Node0x640d840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%827:\l827:                                              \l  %828 = phi \<2 x i16\> [ undef, %768 ], [ %823, %780 ]\l  %829 = phi i32 [ 0, %768 ], [ %824, %780 ]\l  %830 = phi \<2 x i16\> [ %772, %768 ], [ %823, %780 ]\l  %831 = icmp eq i32 %776, 0\l  br i1 %831, label %844, label %832\l|{<s0>T|<s1>F}}"];
	Node0x640d840:s0 -> Node0x640fc70;
	Node0x640d840:s1 -> Node0x640fcc0;
	Node0x640fcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%832:\l832:                                              \l  %833 = phi i32 [ %841, %832 ], [ %829, %827 ]\l  %834 = phi \<2 x i16\> [ %840, %832 ], [ %830, %827 ]\l  %835 = phi i32 [ %842, %832 ], [ 0, %827 ]\l  %836 = or i32 %833, 1\l  %837 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %836\l  %838 = bitcast i16 addrspace(3)* %837 to \<2 x i16\> addrspace(3)*\l  %839 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %838, align 2, !tbaa !5\l  %840 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %834, \<2 x i16\> %839)\l  %841 = add nuw i32 %833, 2\l  %842 = add i32 %835, 1\l  %843 = icmp eq i32 %842, %776\l  br i1 %843, label %844, label %832, !llvm.loop !35\l|{<s0>T|<s1>F}}"];
	Node0x640fcc0:s0 -> Node0x640fc70;
	Node0x640fcc0:s1 -> Node0x640fcc0;
	Node0x640fc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%844:\l844:                                              \l  %845 = phi \<2 x i16\> [ %828, %827 ], [ %840, %832 ]\l  %846 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %845)\l  %847 = icmp eq i32 %77, %769\l  br i1 %847, label %859, label %848\l|{<s0>T|<s1>F}}"];
	Node0x640fc70:s0 -> Node0x640cdd0;
	Node0x640fc70:s1 -> Node0x640d160;
	Node0x640d160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%848:\l848:                                              \l  %849 = phi i32 [ 1, %766 ], [ %770, %844 ]\l  %850 = phi i16 [ %765, %766 ], [ %846, %844 ]\l  br label %851\l}"];
	Node0x640d160 -> Node0x6410ad0;
	Node0x6410ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%851:\l851:                                              \l  %852 = phi i32 [ %857, %851 ], [ %849, %848 ]\l  %853 = phi i16 [ %856, %851 ], [ %850, %848 ]\l  %854 = getelementptr inbounds i16, i16 addrspace(3)* %764, i32 %852\l  %855 = load i16, i16 addrspace(3)* %854, align 2, !tbaa !5\l  %856 = tail call i16 @llvm.umin.i16(i16 %853, i16 %855)\l  %857 = add nuw nsw i32 %852, 1\l  %858 = icmp eq i32 %852, %77\l  br i1 %858, label %859, label %851, !llvm.loop !36\l|{<s0>T|<s1>F}}"];
	Node0x6410ad0:s0 -> Node0x640cdd0;
	Node0x6410ad0:s1 -> Node0x6410ad0;
	Node0x640cdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%859:\l859:                                              \l  %860 = phi i16 [ %765, %760 ], [ %846, %844 ], [ %856, %851 ]\l  %861 = getelementptr inbounds i16, i16 addrspace(1)* %58, i64 128\l  store i16 %860, i16 addrspace(1)* %861, align 2, !tbaa !5\l  ret void\l}"];
	Node0x63ed700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%862:\l862:                                              \l  %863 = phi i32 [ %868, %862 ], [ %164, %163 ]\l  %864 = phi i16 [ %867, %862 ], [ %165, %163 ]\l  %865 = getelementptr inbounds i16, i16 addrspace(3)* %79, i32 %863\l  %866 = load i16, i16 addrspace(3)* %865, align 2, !tbaa !5\l  %867 = tail call i16 @llvm.umin.i16(i16 %864, i16 %866)\l  %868 = add nuw nsw i32 %863, 1\l  %869 = icmp eq i32 %863, %77\l  br i1 %869, label %166, label %862, !llvm.loop !37\l|{<s0>T|<s1>F}}"];
	Node0x63ed700:s0 -> Node0x63e8280;
	Node0x63ed700:s1 -> Node0x63ed700;
}
