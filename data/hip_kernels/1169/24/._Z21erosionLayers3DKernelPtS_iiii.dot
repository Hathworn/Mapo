digraph "CFG for '_Z21erosionLayers3DKernelPtS_iiii' function" {
	label="CFG for '_Z21erosionLayers3DKernelPtS_iiii' function";

	Node0x5753fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = shl i32 %9, 3\l  %11 = add i32 %10, %7\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %13 = shl i32 %12, 3\l  %14 = add i32 %13, %8\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %16 = shl i32 %15, 3\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !4\l  %18 = add nsw i32 %17, -8\l  %19 = add i32 %18, %16\l  %20 = mul nsw i32 %19, %3\l  %21 = add nsw i32 %14, %20\l  %22 = mul nsw i32 %21, %2\l  %23 = add nsw i32 %11, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %24\l  %26 = mul nsw i32 %3, %2\l  %27 = shl nsw i32 %26, 3\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 %28\l  %30 = load i16, i16 addrspace(1)* %29, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %31 = add nuw nsw i32 %17, 8\l  %32 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %31\l  store i16 %30, i16 addrspace(3)* %32, align 2, !tbaa !5\l  %33 = mul nsw i32 %26, 12\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 %34\l  %36 = load i16, i16 addrspace(1)* %35, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  %37 = add nuw nsw i32 %17, 12\l  %38 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %37\l  store i16 %36, i16 addrspace(3)* %38, align 2, !tbaa !5\l  %39 = icmp sgt i32 %19, -1\l  br i1 %39, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5753fe0:s0 -> Node0x57584d0;
	Node0x5753fe0:s1 -> Node0x57587b0;
	Node0x57584d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%40:\l40:                                               \l  %41 = load i16, i16 addrspace(1)* %25, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %42\l}"];
	Node0x57584d0 -> Node0x57587b0;
	Node0x57587b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%42:\l42:                                               \l  %43 = phi i16 [ %41, %40 ], [ 0, %6 ]\l  %44 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %17\l  store i16 %43, i16 addrspace(3)* %44, align 2, !tbaa !5\l  %45 = icmp sgt i32 %19, -5\l  br i1 %45, label %46, label %51\l|{<s0>T|<s1>F}}"];
	Node0x57587b0:s0 -> Node0x5758ab0;
	Node0x57587b0:s1 -> Node0x5758d50;
	Node0x5758ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%46:\l46:                                               \l  %47 = shl nsw i32 %26, 2\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 %48\l  %50 = load i16, i16 addrspace(1)* %49, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %51\l}"];
	Node0x5758ab0 -> Node0x5758d50;
	Node0x5758d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = phi i16 [ %50, %46 ], [ 0, %42 ]\l  %53 = add nuw nsw i32 %17, 4\l  %54 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %53\l  store i16 %52, i16 addrspace(3)* %54, align 2, !tbaa !5\l  %55 = add nsw i32 %19, 16\l  %56 = icmp slt i32 %55, %4\l  br i1 %56, label %57, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5758d50:s0 -> Node0x57592b0;
	Node0x5758d50:s1 -> Node0x57595e0;
	Node0x57592b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%57:\l57:                                               \l  %58 = shl nsw i32 %26, 4\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 %59\l  %61 = load i16, i16 addrspace(1)* %60, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %62\l}"];
	Node0x57592b0 -> Node0x57595e0;
	Node0x57595e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%62:\l62:                                               \l  %63 = phi i16 [ %61, %57 ], [ 0, %51 ]\l  %64 = add nuw nsw i32 %17, 16\l  %65 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %64\l  store i16 %63, i16 addrspace(3)* %65, align 2, !tbaa !5\l  %66 = add nsw i32 %19, 20\l  %67 = icmp slt i32 %66, %4\l  br i1 %67, label %68, label %73\l|{<s0>T|<s1>F}}"];
	Node0x57595e0:s0 -> Node0x5757470;
	Node0x57595e0:s1 -> Node0x575a040;
	Node0x5757470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%68:\l68:                                               \l  %69 = mul nsw i32 %26, 20\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i16, i16 addrspace(1)* %25, i64 %70\l  %72 = load i16, i16 addrspace(1)* %71, align 2, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %73\l}"];
	Node0x5757470 -> Node0x575a040;
	Node0x575a040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%73:\l73:                                               \l  %74 = phi i16 [ %72, %68 ], [ 0, %62 ]\l  %75 = add nuw nsw i32 %17, 20\l  %76 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %75\l  store i16 %74, i16 addrspace(3)* %76, align 2, !tbaa !5\l  %77 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %24\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = sub i32 %17, %5\l  %79 = shl i32 %5, 1\l  %80 = icmp slt i32 %5, 1\l  %81 = tail call i32 @llvm.smax.i32(i32 %79, i32 1)\l  %82 = add i32 %78, 8\l  %83 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %82\l  %84 = load i16, i16 addrspace(3)* %83, align 2, !tbaa !5\l  br i1 %80, label %170, label %85\l|{<s0>T|<s1>F}}"];
	Node0x575a040:s0 -> Node0x575aeb0;
	Node0x575a040:s1 -> Node0x575b0e0;
	Node0x575b0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%85:\l85:                                               \l  %86 = icmp ult i32 %81, 2\l  br i1 %86, label %167, label %87\l|{<s0>T|<s1>F}}"];
	Node0x575b0e0:s0 -> Node0x575b2b0;
	Node0x575b0e0:s1 -> Node0x575b300;
	Node0x575b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%87:\l87:                                               \l  %88 = and i32 %81, 2147483646\l  %89 = or i32 %81, 1\l  %90 = insertelement \<2 x i16\> poison, i16 %84, i64 0\l  %91 = shufflevector \<2 x i16\> %90, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %92 = add nsw i32 %81, -2\l  %93 = lshr i32 %92, 1\l  %94 = add nuw i32 %93, 1\l  %95 = and i32 %94, 7\l  %96 = icmp ult i32 %92, 14\l  br i1 %96, label %146, label %97\l|{<s0>T|<s1>F}}"];
	Node0x575b300:s0 -> Node0x575c850;
	Node0x575b300:s1 -> Node0x575c8e0;
	Node0x575c8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%97:\l97:                                               \l  %98 = and i32 %94, -8\l  br label %99\l}"];
	Node0x575c8e0 -> Node0x575cab0;
	Node0x575cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%99:\l99:                                               \l  %100 = phi i32 [ 0, %97 ], [ %143, %99 ]\l  %101 = phi \<2 x i16\> [ %91, %97 ], [ %142, %99 ]\l  %102 = phi i32 [ 0, %97 ], [ %144, %99 ]\l  %103 = or i32 %100, 1\l  %104 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %103\l  %105 = bitcast i16 addrspace(3)* %104 to \<2 x i16\> addrspace(3)*\l  %106 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %105, align 2, !tbaa !5\l  %107 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %101, \<2 x i16\> %106)\l  %108 = or i32 %100, 3\l  %109 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %108\l  %110 = bitcast i16 addrspace(3)* %109 to \<2 x i16\> addrspace(3)*\l  %111 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %110, align 2, !tbaa !5\l  %112 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %107, \<2 x i16\> %111)\l  %113 = or i32 %100, 5\l  %114 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %113\l  %115 = bitcast i16 addrspace(3)* %114 to \<2 x i16\> addrspace(3)*\l  %116 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %115, align 2, !tbaa !5\l  %117 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %112, \<2 x i16\> %116)\l  %118 = or i32 %100, 7\l  %119 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %118\l  %120 = bitcast i16 addrspace(3)* %119 to \<2 x i16\> addrspace(3)*\l  %121 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %120, align 2, !tbaa !5\l  %122 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %117, \<2 x i16\> %121)\l  %123 = or i32 %100, 9\l  %124 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %123\l  %125 = bitcast i16 addrspace(3)* %124 to \<2 x i16\> addrspace(3)*\l  %126 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %125, align 2, !tbaa !5\l  %127 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %122, \<2 x i16\> %126)\l  %128 = or i32 %100, 11\l  %129 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %128\l  %130 = bitcast i16 addrspace(3)* %129 to \<2 x i16\> addrspace(3)*\l  %131 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %130, align 2, !tbaa !5\l  %132 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %127, \<2 x i16\> %131)\l  %133 = or i32 %100, 13\l  %134 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %133\l  %135 = bitcast i16 addrspace(3)* %134 to \<2 x i16\> addrspace(3)*\l  %136 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %135, align 2, !tbaa !5\l  %137 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %132, \<2 x i16\> %136)\l  %138 = or i32 %100, 15\l  %139 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %138\l  %140 = bitcast i16 addrspace(3)* %139 to \<2 x i16\> addrspace(3)*\l  %141 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %140, align 2, !tbaa !5\l  %142 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %137, \<2 x i16\> %141)\l  %143 = add nuw i32 %100, 16\l  %144 = add i32 %102, 8\l  %145 = icmp eq i32 %144, %98\l  br i1 %145, label %146, label %99, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x575cab0:s0 -> Node0x575c850;
	Node0x575cab0:s1 -> Node0x575cab0;
	Node0x575c850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%146:\l146:                                              \l  %147 = phi \<2 x i16\> [ undef, %87 ], [ %142, %99 ]\l  %148 = phi i32 [ 0, %87 ], [ %143, %99 ]\l  %149 = phi \<2 x i16\> [ %91, %87 ], [ %142, %99 ]\l  %150 = icmp eq i32 %95, 0\l  br i1 %150, label %163, label %151\l|{<s0>T|<s1>F}}"];
	Node0x575c850:s0 -> Node0x575f3e0;
	Node0x575c850:s1 -> Node0x575f430;
	Node0x575f430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%151:\l151:                                              \l  %152 = phi i32 [ %160, %151 ], [ %148, %146 ]\l  %153 = phi \<2 x i16\> [ %159, %151 ], [ %149, %146 ]\l  %154 = phi i32 [ %161, %151 ], [ 0, %146 ]\l  %155 = or i32 %152, 1\l  %156 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %155\l  %157 = bitcast i16 addrspace(3)* %156 to \<2 x i16\> addrspace(3)*\l  %158 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %157, align 2, !tbaa !5\l  %159 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %153, \<2 x i16\> %158)\l  %160 = add nuw i32 %152, 2\l  %161 = add i32 %154, 1\l  %162 = icmp eq i32 %161, %95\l  br i1 %162, label %163, label %151, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x575f430:s0 -> Node0x575f3e0;
	Node0x575f430:s1 -> Node0x575f430;
	Node0x575f3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%163:\l163:                                              \l  %164 = phi \<2 x i16\> [ %147, %146 ], [ %159, %151 ]\l  %165 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %164)\l  %166 = icmp eq i32 %81, %88\l  br i1 %166, label %170, label %167\l|{<s0>T|<s1>F}}"];
	Node0x575f3e0:s0 -> Node0x575aeb0;
	Node0x575f3e0:s1 -> Node0x575b2b0;
	Node0x575b2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%167:\l167:                                              \l  %168 = phi i32 [ 1, %85 ], [ %89, %163 ]\l  %169 = phi i16 [ %84, %85 ], [ %165, %163 ]\l  br label %272\l}"];
	Node0x575b2b0 -> Node0x57602d0;
	Node0x575aeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%170:\l170:                                              \l  %171 = phi i16 [ %84, %73 ], [ %165, %163 ], [ %277, %272 ]\l  %172 = getelementptr inbounds i16, i16 addrspace(1)* %77, i64 %28\l  store i16 %171, i16 addrspace(1)* %172, align 2, !tbaa !5\l  %173 = add i32 %78, 12\l  %174 = getelementptr inbounds [8 x [8 x [25 x i16]]], [8 x [8 x [25 x i16]]]\l... addrspace(3)* @_ZZ21erosionLayers3DKernelPtS_iiiiE4smem, i32 0, i32 %7, i32\l... %8, i32 %173\l  %175 = load i16, i16 addrspace(3)* %174, align 2, !tbaa !5\l  br i1 %80, label %269, label %176\l|{<s0>T|<s1>F}}"];
	Node0x575aeb0:s0 -> Node0x5760670;
	Node0x575aeb0:s1 -> Node0x5760870;
	Node0x5760870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%176:\l176:                                              \l  %177 = icmp ult i32 %81, 2\l  br i1 %177, label %258, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5760870:s0 -> Node0x5760a40;
	Node0x5760870:s1 -> Node0x5760a90;
	Node0x5760a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%178:\l178:                                              \l  %179 = and i32 %81, 2147483646\l  %180 = or i32 %81, 1\l  %181 = insertelement \<2 x i16\> poison, i16 %175, i64 0\l  %182 = shufflevector \<2 x i16\> %181, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %183 = add nsw i32 %81, -2\l  %184 = lshr i32 %183, 1\l  %185 = add nuw i32 %184, 1\l  %186 = and i32 %185, 7\l  %187 = icmp ult i32 %183, 14\l  br i1 %187, label %237, label %188\l|{<s0>T|<s1>F}}"];
	Node0x5760a90:s0 -> Node0x5761120;
	Node0x5760a90:s1 -> Node0x5761170;
	Node0x5761170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%188:\l188:                                              \l  %189 = and i32 %185, -8\l  br label %190\l}"];
	Node0x5761170 -> Node0x5761340;
	Node0x5761340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%190:\l190:                                              \l  %191 = phi i32 [ 0, %188 ], [ %234, %190 ]\l  %192 = phi \<2 x i16\> [ %182, %188 ], [ %233, %190 ]\l  %193 = phi i32 [ 0, %188 ], [ %235, %190 ]\l  %194 = or i32 %191, 1\l  %195 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %194\l  %196 = bitcast i16 addrspace(3)* %195 to \<2 x i16\> addrspace(3)*\l  %197 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %196, align 2, !tbaa !5\l  %198 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %192, \<2 x i16\> %197)\l  %199 = or i32 %191, 3\l  %200 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %199\l  %201 = bitcast i16 addrspace(3)* %200 to \<2 x i16\> addrspace(3)*\l  %202 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %201, align 2, !tbaa !5\l  %203 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %198, \<2 x i16\> %202)\l  %204 = or i32 %191, 5\l  %205 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %204\l  %206 = bitcast i16 addrspace(3)* %205 to \<2 x i16\> addrspace(3)*\l  %207 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %206, align 2, !tbaa !5\l  %208 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %203, \<2 x i16\> %207)\l  %209 = or i32 %191, 7\l  %210 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %209\l  %211 = bitcast i16 addrspace(3)* %210 to \<2 x i16\> addrspace(3)*\l  %212 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %211, align 2, !tbaa !5\l  %213 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %208, \<2 x i16\> %212)\l  %214 = or i32 %191, 9\l  %215 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %214\l  %216 = bitcast i16 addrspace(3)* %215 to \<2 x i16\> addrspace(3)*\l  %217 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %216, align 2, !tbaa !5\l  %218 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %213, \<2 x i16\> %217)\l  %219 = or i32 %191, 11\l  %220 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %219\l  %221 = bitcast i16 addrspace(3)* %220 to \<2 x i16\> addrspace(3)*\l  %222 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %221, align 2, !tbaa !5\l  %223 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %218, \<2 x i16\> %222)\l  %224 = or i32 %191, 13\l  %225 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %224\l  %226 = bitcast i16 addrspace(3)* %225 to \<2 x i16\> addrspace(3)*\l  %227 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %226, align 2, !tbaa !5\l  %228 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %223, \<2 x i16\> %227)\l  %229 = or i32 %191, 15\l  %230 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %229\l  %231 = bitcast i16 addrspace(3)* %230 to \<2 x i16\> addrspace(3)*\l  %232 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %231, align 2, !tbaa !5\l  %233 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %228, \<2 x i16\> %232)\l  %234 = add nuw i32 %191, 16\l  %235 = add i32 %193, 8\l  %236 = icmp eq i32 %235, %189\l  br i1 %236, label %237, label %190, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5761340:s0 -> Node0x5761120;
	Node0x5761340:s1 -> Node0x5761340;
	Node0x5761120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%237:\l237:                                              \l  %238 = phi \<2 x i16\> [ undef, %178 ], [ %233, %190 ]\l  %239 = phi i32 [ 0, %178 ], [ %234, %190 ]\l  %240 = phi \<2 x i16\> [ %182, %178 ], [ %233, %190 ]\l  %241 = icmp eq i32 %186, 0\l  br i1 %241, label %254, label %242\l|{<s0>T|<s1>F}}"];
	Node0x5761120:s0 -> Node0x5763580;
	Node0x5761120:s1 -> Node0x57635d0;
	Node0x57635d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%242:\l242:                                              \l  %243 = phi i32 [ %251, %242 ], [ %239, %237 ]\l  %244 = phi \<2 x i16\> [ %250, %242 ], [ %240, %237 ]\l  %245 = phi i32 [ %252, %242 ], [ 0, %237 ]\l  %246 = or i32 %243, 1\l  %247 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %246\l  %248 = bitcast i16 addrspace(3)* %247 to \<2 x i16\> addrspace(3)*\l  %249 = load \<2 x i16\>, \<2 x i16\> addrspace(3)* %248, align 2, !tbaa !5\l  %250 = tail call \<2 x i16\> @llvm.umin.v2i16(\<2 x i16\> %244, \<2 x i16\> %249)\l  %251 = add nuw i32 %243, 2\l  %252 = add i32 %245, 1\l  %253 = icmp eq i32 %252, %186\l  br i1 %253, label %254, label %242, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x57635d0:s0 -> Node0x5763580;
	Node0x57635d0:s1 -> Node0x57635d0;
	Node0x5763580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%254:\l254:                                              \l  %255 = phi \<2 x i16\> [ %238, %237 ], [ %250, %242 ]\l  %256 = tail call i16 @llvm.vector.reduce.umin.v2i16(\<2 x i16\> %255)\l  %257 = icmp eq i32 %81, %179\l  br i1 %257, label %269, label %258\l|{<s0>T|<s1>F}}"];
	Node0x5763580:s0 -> Node0x5760670;
	Node0x5763580:s1 -> Node0x5760a40;
	Node0x5760a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%258:\l258:                                              \l  %259 = phi i32 [ 1, %176 ], [ %180, %254 ]\l  %260 = phi i16 [ %175, %176 ], [ %256, %254 ]\l  br label %261\l}"];
	Node0x5760a40 -> Node0x575e380;
	Node0x575e380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%261:\l261:                                              \l  %262 = phi i32 [ %267, %261 ], [ %259, %258 ]\l  %263 = phi i16 [ %266, %261 ], [ %260, %258 ]\l  %264 = getelementptr inbounds i16, i16 addrspace(3)* %174, i32 %262\l  %265 = load i16, i16 addrspace(3)* %264, align 2, !tbaa !5\l  %266 = tail call i16 @llvm.umin.i16(i16 %263, i16 %265)\l  %267 = add nuw nsw i32 %262, 1\l  %268 = icmp eq i32 %262, %81\l  br i1 %268, label %269, label %261, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x575e380:s0 -> Node0x5760670;
	Node0x575e380:s1 -> Node0x575e380;
	Node0x5760670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%269:\l269:                                              \l  %270 = phi i16 [ %175, %170 ], [ %256, %254 ], [ %266, %261 ]\l  %271 = getelementptr inbounds i16, i16 addrspace(1)* %77, i64 %34\l  store i16 %270, i16 addrspace(1)* %271, align 2, !tbaa !5\l  ret void\l}"];
	Node0x57602d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%272:\l272:                                              \l  %273 = phi i32 [ %278, %272 ], [ %168, %167 ]\l  %274 = phi i16 [ %277, %272 ], [ %169, %167 ]\l  %275 = getelementptr inbounds i16, i16 addrspace(3)* %83, i32 %273\l  %276 = load i16, i16 addrspace(3)* %275, align 2, !tbaa !5\l  %277 = tail call i16 @llvm.umin.i16(i16 %274, i16 %276)\l  %278 = add nuw nsw i32 %273, 1\l  %279 = icmp eq i32 %273, %81\l  br i1 %279, label %170, label %272, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x57602d0:s0 -> Node0x575aeb0;
	Node0x57602d0:s1 -> Node0x57602d0;
}
