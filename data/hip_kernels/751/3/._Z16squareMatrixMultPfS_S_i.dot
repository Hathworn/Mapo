digraph "CFG for '_Z16squareMatrixMultPfS_S_i' function" {
	label="CFG for '_Z16squareMatrixMultPfS_S_i' function";

	Node0x4c54ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = shl i32 %5, 5\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = add i32 %6, %7\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = shl i32 %9, 5\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = add i32 %10, %11\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !5\l  %17 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !14, !invariant.load\l... !15\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %16, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %16, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = icmp eq i32 %25, 0\l  br i1 %26, label %35, label %27\l|{<s0>T|<s1>F}}"];
	Node0x4c54ee0:s0 -> Node0x4c57fe0;
	Node0x4c54ee0:s1 -> Node0x4c58070;
	Node0x4c58070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %8, %3\l  %29 = add i32 %28, %11\l  %30 = mul nsw i32 %3, %3\l  %31 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x float]]\l... addrspace(3)* @_ZZ16squareMatrixMultPfS_S_iE6tile_a, i32 0, i32 %7, i32 %11\l  %32 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x float]]\l... addrspace(3)* @_ZZ16squareMatrixMultPfS_S_iE6tile_b, i32 0, i32 %7, i32 %11\l  %33 = udiv i32 %11, %3\l  %34 = icmp ult i32 %33, 32\l  br label %40\l}"];
	Node0x4c58070 -> Node0x4c583b0;
	Node0x4c57fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%35:\l35:                                               \l  %36 = phi float [ 0.000000e+00, %4 ], [ %63, %62 ]\l  %37 = icmp slt i32 %8, %3\l  %38 = icmp slt i32 %12, %3\l  %39 = select i1 %37, i1 %38, i1 false\l  br i1 %39, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0x4c57fe0:s0 -> Node0x4c595f0;
	Node0x4c57fe0:s1 -> Node0x4c59680;
	Node0x4c583b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %27 ], [ %64, %62 ]\l  %42 = phi float [ 0.000000e+00, %27 ], [ %63, %62 ]\l  %43 = shl nsw i32 %41, 5\l  %44 = add i32 %29, %43\l  %45 = icmp slt i32 %44, %30\l  br i1 %45, label %46, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4c583b0:s0 -> Node0x4c59b00;
	Node0x4c583b0:s1 -> Node0x4c59b90;
	Node0x4c59b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%46:\l46:                                               \l  %47 = sext i32 %44 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  br label %50\l}"];
	Node0x4c59b00 -> Node0x4c59b90;
	Node0x4c59b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%50:\l50:                                               \l  %51 = phi float [ %49, %46 ], [ 0.000000e+00, %40 ]\l  store float %51, float addrspace(3)* %31, align 4, !tbaa !16\l  %52 = add nuw i32 %43, %7\l  %53 = mul i32 %52, %3\l  %54 = add i32 %53, %12\l  %55 = icmp slt i32 %54, %30\l  br i1 %55, label %56, label %60\l|{<s0>T|<s1>F}}"];
	Node0x4c59b90:s0 -> Node0x4c5afd0;
	Node0x4c59b90:s1 -> Node0x4c5b020;
	Node0x4c5afd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%56:\l56:                                               \l  %57 = sext i32 %54 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  br label %60\l}"];
	Node0x4c5afd0 -> Node0x4c5b020;
	Node0x4c5b020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%60:\l60:                                               \l  %61 = phi float [ %59, %56 ], [ 0.000000e+00, %50 ]\l  store float %61, float addrspace(3)* %32, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %34, label %66, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4c5b020:s0 -> Node0x4c5b750;
	Node0x4c5b020:s1 -> Node0x4c592b0;
	Node0x4c592b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%62:\l62:                                               \l  %63 = phi float [ %42, %60 ], [ %74, %66 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %64 = add nuw nsw i32 %41, 1\l  %65 = icmp eq i32 %64, %25\l  br i1 %65, label %35, label %40, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c592b0:s0 -> Node0x4c57fe0;
	Node0x4c592b0:s1 -> Node0x4c583b0;
	Node0x4c5b750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ %75, %66 ], [ %33, %60 ]\l  %68 = phi float [ %74, %66 ], [ %42, %60 ]\l  %69 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x float]]\l... addrspace(3)* @_ZZ16squareMatrixMultPfS_S_iE6tile_a, i32 0, i32 %7, i32 %67\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !16\l  %71 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x float]]\l... addrspace(3)* @_ZZ16squareMatrixMultPfS_S_iE6tile_b, i32 0, i32 %67, i32 %11\l  %72 = load float, float addrspace(3)* %71, align 4, !tbaa !16\l  %73 = fmul contract float %70, %72\l  %74 = fadd contract float %68, %73\l  %75 = add nuw nsw i32 %67, 1\l  %76 = icmp ult i32 %67, 31\l  br i1 %76, label %66, label %62, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4c5b750:s0 -> Node0x4c5b750;
	Node0x4c5b750:s1 -> Node0x4c592b0;
	Node0x4c595f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%77:\l77:                                               \l  %78 = mul nsw i32 %8, %3\l  %79 = add nsw i32 %78, %12\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  store float %36, float addrspace(1)* %81, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x4c595f0 -> Node0x4c59680;
	Node0x4c59680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%82:\l82:                                               \l  ret void\l}"];
}
