digraph "CFG for '_Z20NmDistanceGradKerneliiPKfiS0_S0_PKiPfS3_' function" {
	label="CFG for '_Z20NmDistanceGradKerneliiPKfiS0_S0_PKiPfS3_' function";

	Node0x4c9e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = icmp slt i32 %10, %0\l  br i1 %11, label %12, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4c9e9c0:s0 -> Node0x4c9f7c0;
	Node0x4c9e9c0:s1 -> Node0x4c9f850;
	Node0x4c9f7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%12:\l12:                                               \l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !7\l  %23 = mul i32 %14, %19\l  %24 = add i32 %23, %13\l  %25 = icmp slt i32 %24, %1\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 16\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = getelementptr i8, i8 addrspace(4)* %15, i64 6\l  %29 = bitcast i8 addrspace(4)* %28 to i16 addrspace(4)*\l  %30 = load i16, i16 addrspace(4)* %29, align 2\l  %31 = zext i16 %30 to i32\l  %32 = udiv i32 %22, %19\l  %33 = mul i32 %32, %19\l  %34 = icmp ugt i32 %22, %33\l  %35 = zext i1 %34 to i32\l  br label %37\l}"];
	Node0x4c9f7c0 -> Node0x4ca21d0;
	Node0x4c9f850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x4ca21d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %10, %12 ], [ %51, %49 ]\l  br i1 %25, label %39, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4ca21d0:s0 -> Node0x4ca2450;
	Node0x4ca21d0:s1 -> Node0x4ca2350;
	Node0x4ca2450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%39:\l39:                                               \l  %40 = mul nsw i32 %38, %1\l  %41 = mul nsw i32 %38, %3\l  %42 = load i32, i32 addrspace(4)* %27, align 8, !tbaa !16\l  %43 = udiv i32 %42, %31\l  %44 = mul i32 %43, %31\l  %45 = icmp ugt i32 %42, %44\l  %46 = zext i1 %45 to i32\l  %47 = add i32 %43, %46\l  %48 = mul i32 %47, %19\l  br label %53\l}"];
	Node0x4ca2450 -> Node0x4ca2b90;
	Node0x4ca2350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = add i32 %32, %38\l  %51 = add i32 %50, %35\l  %52 = icmp slt i32 %51, %0\l  br i1 %52, label %37, label %36, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4ca2350:s0 -> Node0x4ca21d0;
	Node0x4ca2350:s1 -> Node0x4c9f850;
	Node0x4ca2b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi i32 [ %24, %39 ], [ %108, %53 ]\l  %55 = add nsw i32 %54, %40\l  %56 = mul nsw i32 %55, 3\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !19\l  %60 = add nsw i32 %56, 1\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !19\l  %64 = add nsw i32 %56, 2\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !19\l  %68 = sext i32 %55 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !23\l  %71 = add nsw i32 %70, %41\l  %72 = mul nsw i32 %71, 3\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %4, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !19\l  %76 = add nsw i32 %72, 1\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %4, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !19\l  %80 = add nsw i32 %72, 2\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !19\l  %84 = getelementptr inbounds float, float addrspace(1)* %5, i64 %68\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !19\l  %86 = fmul contract float %85, 2.000000e+00\l  %87 = getelementptr inbounds float, float addrspace(1)* %7, i64 %57\l  %88 = fsub contract float %59, %75\l  %89 = fmul contract float %88, %86\l  %90 = atomicrmw fadd float addrspace(1)* %87, float %89\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %91 = getelementptr inbounds float, float addrspace(1)* %7, i64 %61\l  %92 = fsub contract float %63, %79\l  %93 = fmul contract float %92, %86\l  %94 = atomicrmw fadd float addrspace(1)* %91, float %93\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %95 = getelementptr inbounds float, float addrspace(1)* %7, i64 %65\l  %96 = fsub contract float %67, %83\l  %97 = fmul contract float %96, %86\l  %98 = atomicrmw fadd float addrspace(1)* %95, float %97\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %99 = getelementptr inbounds float, float addrspace(1)* %8, i64 %73\l  %100 = fneg contract float %89\l  %101 = atomicrmw fadd float addrspace(1)* %99, float %100\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %102 = getelementptr inbounds float, float addrspace(1)* %8, i64 %77\l  %103 = fneg contract float %93\l  %104 = atomicrmw fadd float addrspace(1)* %102, float %103\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %105 = getelementptr inbounds float, float addrspace(1)* %8, i64 %81\l  %106 = fneg contract float %97\l  %107 = atomicrmw fadd float addrspace(1)* %105, float %106\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %108 = add i32 %48, %54\l  %109 = icmp slt i32 %108, %1\l  br i1 %109, label %53, label %49, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4ca2b90:s0 -> Node0x4ca2b90;
	Node0x4ca2b90:s1 -> Node0x4ca2350;
}
