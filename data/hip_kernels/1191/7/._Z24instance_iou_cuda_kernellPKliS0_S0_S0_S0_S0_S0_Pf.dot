digraph "CFG for '_Z24instance_iou_cuda_kernellPKliS0_S0_S0_S0_S0_S0_Pf' function" {
	label="CFG for '_Z24instance_iou_cuda_kernellPKliS0_S0_S0_S0_S0_S0_Pf' function";

	Node0x5837610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = icmp slt i32 %11, %2\l  br i1 %12, label %13, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5837610:s0 -> Node0x5838710;
	Node0x5837610:s1 -> Node0x58387a0;
	Node0x5838710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%13:\l13:                                               \l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %15 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !5\l  %21 = load i16, i16 addrspace(4)* %17, align 4, !range !14, !invariant.load\l... !15\l  %22 = zext i16 %21 to i32\l  %23 = udiv i32 %20, %22\l  %24 = mul i32 %23, %22\l  %25 = icmp ugt i32 %20, %24\l  %26 = zext i1 %25 to i32\l  br label %28\l}"];
	Node0x5838710 -> Node0x583a950;
	Node0x58387a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%27:\l27:                                               \l  ret void\l}"];
	Node0x583a950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%28:\l28:                                               \l  %29 = phi i32 [ %11, %13 ], [ %59, %57 ]\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %30\l  %32 = load i64, i64 addrspace(1)* %31, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %33 = trunc i64 %32 to i32\l  %34 = add nsw i32 %29, 1\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %35\l  %37 = load i64, i64 addrspace(1)* %36, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %38 = trunc i64 %37 to i32\l  %39 = shl i64 %32, 32\l  %40 = ashr exact i64 %39, 32\l  %41 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %40\l  %42 = load i64, i64 addrspace(1)* %41, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %43 = getelementptr inbounds i64, i64 addrspace(1)* %7, i64 %42\l  %44 = load i64, i64 addrspace(1)* %43, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %45 = shl i64 %44, 32\l  %46 = ashr exact i64 %45, 32\l  %47 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %46\l  %48 = load i64, i64 addrspace(1)* %47, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %49 = trunc i64 %48 to i32\l  %50 = getelementptr inbounds i64, i64 addrspace(1)* %6, i64 %46\l  %51 = load i64, i64 addrspace(1)* %50, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %52 = trunc i64 %51 to i32\l  %53 = icmp slt i32 %14, %49\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x583a950:s0 -> Node0x583c870;
	Node0x583a950:s1 -> Node0x583aaa0;
	Node0x583c870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%54:\l54:                                               \l  %55 = icmp slt i32 %33, %38\l  %56 = mul nsw i64 %30, %0\l  br label %61\l}"];
	Node0x583c870 -> Node0x583cad0;
	Node0x583aaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%57:\l57:                                               \l  %58 = add i32 %23, %29\l  %59 = add i32 %58, %26\l  %60 = icmp slt i32 %59, %2\l  br i1 %60, label %28, label %27, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x583aaa0:s0 -> Node0x583a950;
	Node0x583aaa0:s1 -> Node0x58387a0;
	Node0x583cad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%61:\l61:                                               \l  %62 = phi i32 [ %14, %54 ], [ %84, %70 ]\l  %63 = add nsw i32 %62, %52\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i64, i64 addrspace(1)* %8, i64 %64\l  %66 = load i64, i64 addrspace(1)* %65, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %67 = trunc i64 %66 to i32\l  br i1 %55, label %68, label %70\l|{<s0>T|<s1>F}}"];
	Node0x583cad0:s0 -> Node0x583b670;
	Node0x583cad0:s1 -> Node0x583ceb0;
	Node0x583b670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%68:\l68:                                               \l  %69 = add nsw i32 %62, 1\l  br label %86\l}"];
	Node0x583b670 -> Node0x583d680;
	Node0x583ceb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%70:\l70:                                               \l  %71 = phi i32 [ 0, %61 ], [ %99, %86 ]\l  %72 = sitofp i32 %71 to float\l  %73 = fpext float %72 to double\l  %74 = add i32 %38, %67\l  %75 = add i32 %71, %33\l  %76 = sub i32 %74, %75\l  %77 = sitofp i32 %76 to float\l  %78 = fpext float %77 to double\l  %79 = fadd contract double %78, 1.000000e-05\l  %80 = fdiv contract double %73, %79\l  %81 = fptrunc double %80 to float\l  %82 = add nsw i64 %56, %64\l  %83 = getelementptr inbounds float, float addrspace(1)* %9, i64 %82\l  store float %81, float addrspace(1)* %83, align 4, !tbaa !22\l  %84 = add i32 %62, %22\l  %85 = icmp slt i32 %84, %49\l  br i1 %85, label %61, label %57, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x583ceb0:s0 -> Node0x583cad0;
	Node0x583ceb0:s1 -> Node0x583aaa0;
	Node0x583d680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%86:\l86:                                               \l  %87 = phi i32 [ %33, %68 ], [ %100, %86 ]\l  %88 = phi i32 [ 0, %68 ], [ %99, %86 ]\l  %89 = sext i32 %87 to i64\l  %90 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %89\l  %91 = load i64, i64 addrspace(1)* %90, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %92 = shl i64 %91, 32\l  %93 = ashr exact i64 %92, 32\l  %94 = getelementptr inbounds i64, i64 addrspace(1)* %5, i64 %93\l  %95 = load i64, i64 addrspace(1)* %94, align 8, !tbaa !16, !amdgpu.noclobber\l... !15\l  %96 = trunc i64 %95 to i32\l  %97 = icmp eq i32 %69, %96\l  %98 = zext i1 %97 to i32\l  %99 = add nuw nsw i32 %88, %98\l  %100 = add nsw i32 %87, 1\l  %101 = icmp slt i32 %100, %38\l  br i1 %101, label %86, label %70, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x583d680:s0 -> Node0x583d680;
	Node0x583d680:s1 -> Node0x583ceb0;
}
