digraph "CFG for '_Z18selection_sort_gpuiiiiPKfPiPf' function" {
	label="CFG for '_Z18selection_sort_gpuiiiiPKfPiPf' function";

	Node0x4d52300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul i32 %8, %1\l  %10 = mul i32 %9, %2\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds float, float addrspace(1)* %4, i64 %11\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %11\l  %14 = getelementptr inbounds float, float addrspace(1)* %6, i64 %11\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = icmp slt i32 %15, %2\l  br i1 %21, label %22, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4d52300:s0 -> Node0x4d544e0;
	Node0x4d52300:s1 -> Node0x4d54570;
	Node0x4d544e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%22:\l22:                                               \l  %23 = icmp sgt i32 %1, 0\l  %24 = and i32 %1, 7\l  %25 = icmp ult i32 %1, 8\l  %26 = and i32 %1, -8\l  %27 = icmp eq i32 %24, 0\l  br label %28\l}"];
	Node0x4d544e0 -> Node0x4d54a10;
	Node0x4d54a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = phi i32 [ %15, %22 ], [ %50, %49 ]\l  br i1 %23, label %30, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4d54a10:s0 -> Node0x4d54c40;
	Node0x4d54a10:s1 -> Node0x4d54b00;
	Node0x4d54c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %29, %1\l  br i1 %25, label %35, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4d54c40:s0 -> Node0x4d54e10;
	Node0x4d54c40:s1 -> Node0x4d54e60;
	Node0x4d54fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  br i1 %21, label %33, label %113\l|{<s0>T|<s1>F}}"];
	Node0x4d54fa0:s0 -> Node0x4d53890;
	Node0x4d54fa0:s1 -> Node0x4d54570;
	Node0x4d53890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%33:\l33:                                               \l  %34 = icmp sgt i32 %3, 0\l  br label %114\l}"];
	Node0x4d53890 -> Node0x4d552d0;
	Node0x4d54e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = phi i32 [ 0, %30 ], [ %110, %52 ]\l  br i1 %27, label %49, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4d54e10:s0 -> Node0x4d54b00;
	Node0x4d54e10:s1 -> Node0x4d55470;
	Node0x4d55470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%37:\l37:                                               \l  %38 = phi i32 [ %46, %37 ], [ %36, %35 ]\l  %39 = phi i32 [ %47, %37 ], [ 0, %35 ]\l  %40 = add nsw i32 %38, %31\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %12, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7\l  %44 = getelementptr inbounds float, float addrspace(1)* %14, i64 %41\l  store float %43, float addrspace(1)* %44, align 4, !tbaa !7\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %41\l  store i32 %38, i32 addrspace(1)* %45, align 4, !tbaa !11\l  %46 = add nuw nsw i32 %38, 1\l  %47 = add i32 %39, 1\l  %48 = icmp eq i32 %47, %24\l  br i1 %48, label %49, label %37, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4d55470:s0 -> Node0x4d54b00;
	Node0x4d55470:s1 -> Node0x4d55470;
	Node0x4d54b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %29, %20\l  %51 = icmp slt i32 %50, %2\l  br i1 %51, label %28, label %32, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4d54b00:s0 -> Node0x4d54a10;
	Node0x4d54b00:s1 -> Node0x4d54fa0;
	Node0x4d54e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%52:\l52:                                               \l  %53 = phi i32 [ %110, %52 ], [ 0, %30 ]\l  %54 = phi i32 [ %111, %52 ], [ 0, %30 ]\l  %55 = add nsw i32 %53, %31\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %12, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %59 = getelementptr inbounds float, float addrspace(1)* %14, i64 %56\l  store float %58, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %56\l  store i32 %53, i32 addrspace(1)* %60, align 4, !tbaa !11\l  %61 = or i32 %53, 1\l  %62 = add nsw i32 %61, %31\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %12, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = getelementptr inbounds float, float addrspace(1)* %14, i64 %63\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %63\l  store i32 %61, i32 addrspace(1)* %67, align 4, !tbaa !11\l  %68 = or i32 %53, 2\l  %69 = add nsw i32 %68, %31\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %12, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = getelementptr inbounds float, float addrspace(1)* %14, i64 %70\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %70\l  store i32 %68, i32 addrspace(1)* %74, align 4, !tbaa !11\l  %75 = or i32 %53, 3\l  %76 = add nsw i32 %75, %31\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %12, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = getelementptr inbounds float, float addrspace(1)* %14, i64 %77\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !7\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %77\l  store i32 %75, i32 addrspace(1)* %81, align 4, !tbaa !11\l  %82 = or i32 %53, 4\l  %83 = add nsw i32 %82, %31\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %12, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = getelementptr inbounds float, float addrspace(1)* %14, i64 %84\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %84\l  store i32 %82, i32 addrspace(1)* %88, align 4, !tbaa !11\l  %89 = or i32 %53, 5\l  %90 = add nsw i32 %89, %31\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %12, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7\l  %94 = getelementptr inbounds float, float addrspace(1)* %14, i64 %91\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !7\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %91\l  store i32 %89, i32 addrspace(1)* %95, align 4, !tbaa !11\l  %96 = or i32 %53, 6\l  %97 = add nsw i32 %96, %31\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %12, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = getelementptr inbounds float, float addrspace(1)* %14, i64 %98\l  store float %100, float addrspace(1)* %101, align 4, !tbaa !7\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %98\l  store i32 %96, i32 addrspace(1)* %102, align 4, !tbaa !11\l  %103 = or i32 %53, 7\l  %104 = add nsw i32 %103, %31\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %12, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = getelementptr inbounds float, float addrspace(1)* %14, i64 %105\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !7\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %105\l  store i32 %103, i32 addrspace(1)* %109, align 4, !tbaa !11\l  %110 = add nuw nsw i32 %53, 8\l  %111 = add i32 %54, 8\l  %112 = icmp eq i32 %111, %26\l  br i1 %112, label %35, label %52, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4d54e60:s0 -> Node0x4d54e10;
	Node0x4d54e60:s1 -> Node0x4d54e60;
	Node0x4d54570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%113:\l113:                                              \l  ret void\l}"];
	Node0x4d552d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%114:\l114:                                              \l  %115 = phi i32 [ %15, %33 ], [ %120, %119 ]\l  %116 = mul nsw i32 %115, %1\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %14, i64 %117\l  br i1 %34, label %122, label %119\l|{<s0>T|<s1>F}}"];
	Node0x4d552d0:s0 -> Node0x4d5a240;
	Node0x4d552d0:s1 -> Node0x4d59fa0;
	Node0x4d59fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%119:\l119:                                              \l  %120 = add nuw nsw i32 %115, %20\l  %121 = icmp slt i32 %120, %2\l  br i1 %121, label %114, label %113, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4d59fa0:s0 -> Node0x4d552d0;
	Node0x4d59fa0:s1 -> Node0x4d54570;
	Node0x4d5a240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%122:\l122:                                              \l  %123 = phi i32 [ %124, %157 ], [ 0, %114 ]\l  %124 = add nuw nsw i32 %123, 1\l  %125 = icmp slt i32 %124, %1\l  br i1 %125, label %129, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4d5a240:s0 -> Node0x4d5a870;
	Node0x4d5a240:s1 -> Node0x4d5a8c0;
	Node0x4d5a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%126:\l126:                                              \l  %127 = phi i32 [ %123, %122 ], [ %139, %129 ]\l  %128 = icmp eq i32 %127, %123\l  br i1 %128, label %157, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4d5a8c0:s0 -> Node0x4d5a610;
	Node0x4d5a8c0:s1 -> Node0x4d578a0;
	Node0x4d5a870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi i32 [ %140, %129 ], [ %124, %122 ]\l  %131 = phi i32 [ %139, %129 ], [ %123, %122 ]\l  %132 = zext i32 %130 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %118, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = sext i32 %131 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %118, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !7\l  %138 = fcmp contract olt float %134, %137\l  %139 = select i1 %138, i32 %130, i32 %131\l  %140 = add nuw nsw i32 %130, 1\l  %141 = icmp slt i32 %140, %1\l  br i1 %141, label %129, label %126, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4d5a870:s0 -> Node0x4d5a870;
	Node0x4d5a870:s1 -> Node0x4d5a8c0;
	Node0x4d578a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%142:\l142:                                              \l  %143 = sext i32 %127 to i64\l  %144 = getelementptr inbounds float, float addrspace(1)* %118, i64 %143\l  %145 = load float, float addrspace(1)* %144, align 4, !tbaa !7\l  %146 = zext i32 %123 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %118, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7\l  store float %148, float addrspace(1)* %144, align 4, !tbaa !7\l  store float %145, float addrspace(1)* %147, align 4, !tbaa !7\l  %149 = add nsw i32 %127, %116\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !11\l  %153 = add nsw i32 %123, %116\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %154\l  %156 = load i32, i32 addrspace(1)* %155, align 4, !tbaa !11\l  store i32 %156, i32 addrspace(1)* %151, align 4, !tbaa !11\l  store i32 %152, i32 addrspace(1)* %155, align 4, !tbaa !11\l  br label %157\l}"];
	Node0x4d578a0 -> Node0x4d5a610;
	Node0x4d5a610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%157:\l157:                                              \l  %158 = icmp eq i32 %124, %3\l  br i1 %158, label %119, label %122, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d5a610:s0 -> Node0x4d59fa0;
	Node0x4d5a610:s1 -> Node0x4d5a240;
}
