digraph "CFG for '_Z22selection_k_radius_gpuiiifPKiPKfPiPf' function" {
	label="CFG for '_Z22selection_k_radius_gpuiiifPKiPKfPiPf' function";

	Node0x59bfa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul nsw i32 %9, %1\l  %11 = mul nsw i32 %10, %2\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %12\l  %14 = getelementptr inbounds float, float addrspace(1)* %5, i64 %12\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %12\l  %16 = getelementptr inbounds float, float addrspace(1)* %7, i64 %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = icmp slt i32 %17, %1\l  br i1 %18, label %19, label %36\l|{<s0>T|<s1>F}}"];
	Node0x59bfa50:s0 -> Node0x59c0f80;
	Node0x59bfa50:s1 -> Node0x59c1010;
	Node0x59c0f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = icmp sgt i32 %2, 0\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 4, !range !5, !invariant.load !6\l  %25 = zext i16 %24 to i32\l  %26 = and i32 %2, 3\l  %27 = icmp ult i32 %2, 4\l  %28 = and i32 %2, -4\l  %29 = icmp eq i32 %26, 0\l  br label %30\l}"];
	Node0x59c0f80 -> Node0x59c21c0;
	Node0x59c21c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%30:\l30:                                               \l  %31 = phi i32 [ %17, %19 ], [ %60, %59 ]\l  br i1 %20, label %32, label %59\l|{<s0>T|<s1>F}}"];
	Node0x59c21c0:s0 -> Node0x59c2430;
	Node0x59c21c0:s1 -> Node0x59c22f0;
	Node0x59c2430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %31, %2\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %14, i64 %34\l  br i1 %27, label %37, label %62\l|{<s0>T|<s1>F}}"];
	Node0x59c2430:s0 -> Node0x59c2820;
	Node0x59c2430:s1 -> Node0x59c2870;
	Node0x59c1010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x59c2820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %32 ], [ %124, %117 ]\l  br i1 %29, label %59, label %39\l|{<s0>T|<s1>F}}"];
	Node0x59c2820:s0 -> Node0x59c22f0;
	Node0x59c2820:s1 -> Node0x59c2b30;
	Node0x59c2b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %56, %49 ], [ %38, %37 ]\l  %41 = phi i32 [ %57, %49 ], [ 0, %37 ]\l  %42 = add nsw i32 %40, %33\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %14, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !7\l  %46 = fcmp contract olt float %45, %3\l  br i1 %46, label %49, label %47\l|{<s0>T|<s1>F}}"];
	Node0x59c2b30:s0 -> Node0x59c2ca0;
	Node0x59c2b30:s1 -> Node0x59c3310;
	Node0x59c3310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%47:\l47:                                               \l  %48 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x59c3310 -> Node0x59c2ca0;
	Node0x59c2ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi i64 [ %34, %47 ], [ %43, %39 ]\l  %51 = phi float [ %48, %47 ], [ %45, %39 ]\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %50\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !11\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %43\l  store i32 %53, i32 addrspace(1)* %54, align 4\l  %55 = getelementptr inbounds float, float addrspace(1)* %16, i64 %43\l  store float %51, float addrspace(1)* %55, align 4\l  %56 = add nuw nsw i32 %40, 1\l  %57 = add i32 %41, 1\l  %58 = icmp eq i32 %57, %26\l  br i1 %58, label %59, label %39, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x59c2ca0:s0 -> Node0x59c22f0;
	Node0x59c2ca0:s1 -> Node0x59c2b30;
	Node0x59c22f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%59:\l59:                                               \l  %60 = add i32 %31, %25\l  %61 = icmp slt i32 %60, %1\l  br i1 %61, label %30, label %36, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x59c22f0:s0 -> Node0x59c21c0;
	Node0x59c22f0:s1 -> Node0x59c1010;
	Node0x59c2870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%62:\l62:                                               \l  %63 = phi i32 [ %124, %117 ], [ 0, %32 ]\l  %64 = phi i32 [ %125, %117 ], [ 0, %32 ]\l  %65 = add nsw i32 %63, %33\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %14, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fcmp contract olt float %68, %3\l  br i1 %69, label %72, label %70\l|{<s0>T|<s1>F}}"];
	Node0x59c2870:s0 -> Node0x59c4c80;
	Node0x59c2870:s1 -> Node0x59c4d10;
	Node0x59c4d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%70:\l70:                                               \l  %71 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x59c4d10 -> Node0x59c4c80;
	Node0x59c4c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%72:\l72:                                               \l  %73 = phi i64 [ %34, %70 ], [ %66, %62 ]\l  %74 = phi float [ %71, %70 ], [ %68, %62 ]\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %73\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !11\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %66\l  store i32 %76, i32 addrspace(1)* %77, align 4\l  %78 = getelementptr inbounds float, float addrspace(1)* %16, i64 %66\l  store float %74, float addrspace(1)* %78, align 4\l  %79 = or i32 %63, 1\l  %80 = add nsw i32 %79, %33\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %14, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = fcmp contract olt float %83, %3\l  br i1 %84, label %87, label %85\l|{<s0>T|<s1>F}}"];
	Node0x59c4c80:s0 -> Node0x59c5d40;
	Node0x59c4c80:s1 -> Node0x59c5d90;
	Node0x59c5d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%85:\l85:                                               \l  %86 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %87\l}"];
	Node0x59c5d90 -> Node0x59c5d40;
	Node0x59c5d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%87:\l87:                                               \l  %88 = phi i64 [ %34, %85 ], [ %81, %72 ]\l  %89 = phi float [ %86, %85 ], [ %83, %72 ]\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %88\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !11\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %81\l  store i32 %91, i32 addrspace(1)* %92, align 4\l  %93 = getelementptr inbounds float, float addrspace(1)* %16, i64 %81\l  store float %89, float addrspace(1)* %93, align 4\l  %94 = or i32 %63, 2\l  %95 = add nsw i32 %94, %33\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %14, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = fcmp contract olt float %98, %3\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x59c5d40:s0 -> Node0x59c6770;
	Node0x59c5d40:s1 -> Node0x59c67c0;
	Node0x59c67c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%100:\l100:                                              \l  %101 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %102\l}"];
	Node0x59c67c0 -> Node0x59c6770;
	Node0x59c6770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%102:\l102:                                              \l  %103 = phi i64 [ %34, %100 ], [ %96, %87 ]\l  %104 = phi float [ %101, %100 ], [ %98, %87 ]\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %103\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !11\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %96\l  store i32 %106, i32 addrspace(1)* %107, align 4\l  %108 = getelementptr inbounds float, float addrspace(1)* %16, i64 %96\l  store float %104, float addrspace(1)* %108, align 4\l  %109 = or i32 %63, 3\l  %110 = add nsw i32 %109, %33\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %14, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7\l  %114 = fcmp contract olt float %113, %3\l  br i1 %114, label %117, label %115\l|{<s0>T|<s1>F}}"];
	Node0x59c6770:s0 -> Node0x59c2a30;
	Node0x59c6770:s1 -> Node0x59c71a0;
	Node0x59c71a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%115:\l115:                                              \l  %116 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %117\l}"];
	Node0x59c71a0 -> Node0x59c2a30;
	Node0x59c2a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%117:\l117:                                              \l  %118 = phi i64 [ %34, %115 ], [ %111, %102 ]\l  %119 = phi float [ %116, %115 ], [ %113, %102 ]\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %118\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !11\l  %122 = getelementptr inbounds i32, i32 addrspace(1)* %15, i64 %111\l  store i32 %121, i32 addrspace(1)* %122, align 4\l  %123 = getelementptr inbounds float, float addrspace(1)* %16, i64 %111\l  store float %119, float addrspace(1)* %123, align 4\l  %124 = add nuw nsw i32 %63, 4\l  %125 = add i32 %64, 4\l  %126 = icmp eq i32 %125, %28\l  br i1 %126, label %37, label %62, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x59c2a30:s0 -> Node0x59c2820;
	Node0x59c2a30:s1 -> Node0x59c2870;
}
