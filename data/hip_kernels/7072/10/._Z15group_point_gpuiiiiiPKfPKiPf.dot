digraph "CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function" {
	label="CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function";

	Node0x62ec880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %2\l  %11 = mul i32 %10, %1\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds float, float addrspace(1)* %5, i64 %12\l  %14 = mul nsw i32 %4, %3\l  %15 = mul nsw i32 %14, %9\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %16\l  %18 = mul i32 %10, %14\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %7, i64 %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %22 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = icmp slt i32 %21, %3\l  br i1 %27, label %28, label %39\l|{<s0>T|<s1>F}}"];
	Node0x62ec880:s0 -> Node0x62eecd0;
	Node0x62ec880:s1 -> Node0x62eed60;
	Node0x62eecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %4, 0\l  %30 = icmp sgt i32 %2, 0\l  %31 = and i32 %2, 7\l  %32 = icmp ult i32 %2, 8\l  %33 = and i32 %2, -8\l  %34 = icmp eq i32 %31, 0\l  br label %35\l}"];
	Node0x62eecd0 -> Node0x62ecf30;
	Node0x62ecf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = phi i32 [ %21, %28 ], [ %41, %40 ]\l  br i1 %29, label %37, label %40\l|{<s0>T|<s1>F}}"];
	Node0x62ecf30:s0 -> Node0x62ef5c0;
	Node0x62ecf30:s1 -> Node0x62ef480;
	Node0x62ef5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %36, %4\l  br label %43\l}"];
	Node0x62ef5c0 -> Node0x62ef790;
	Node0x62eed60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%39:\l39:                                               \l  ret void\l}"];
	Node0x62ef480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %36, %26\l  %42 = icmp slt i32 %41, %3\l  br i1 %42, label %35, label %39, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x62ef480:s0 -> Node0x62ecf30;
	Node0x62ef480:s1 -> Node0x62eed60;
	Node0x62ef790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %37 ], [ %68, %67 ]\l  %45 = add nsw i32 %44, %38\l  br i1 %30, label %46, label %67\l|{<s0>T|<s1>F}}"];
	Node0x62ef790:s0 -> Node0x62efcc0;
	Node0x62ef790:s1 -> Node0x62efaf0;
	Node0x62efcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%46:\l46:                                               \l  %47 = sext i32 %45 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %17, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !9, !amdgpu.noclobber\l... !6\l  %50 = mul nsw i32 %49, %2\l  %51 = mul i32 %45, %2\l  br i1 %32, label %52, label %70\l|{<s0>T|<s1>F}}"];
	Node0x62efcc0:s0 -> Node0x62f0860;
	Node0x62efcc0:s1 -> Node0x62f08f0;
	Node0x62f0860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %46 ], [ %136, %70 ]\l  br i1 %34, label %67, label %54\l|{<s0>T|<s1>F}}"];
	Node0x62f0860:s0 -> Node0x62efaf0;
	Node0x62f0860:s1 -> Node0x62f0ae0;
	Node0x62f0ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %64, %54 ], [ %53, %52 ]\l  %56 = phi i32 [ %65, %54 ], [ 0, %52 ]\l  %57 = add nsw i32 %55, %50\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %13, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !13\l  %61 = add nsw i32 %55, %51\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %20, i64 %62\l  store float %60, float addrspace(1)* %63, align 4, !tbaa !13\l  %64 = add nuw nsw i32 %55, 1\l  %65 = add i32 %56, 1\l  %66 = icmp eq i32 %65, %31\l  br i1 %66, label %67, label %54, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x62f0ae0:s0 -> Node0x62efaf0;
	Node0x62f0ae0:s1 -> Node0x62f0ae0;
	Node0x62efaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%67:\l67:                                               \l  %68 = add nuw nsw i32 %44, 1\l  %69 = icmp eq i32 %68, %4\l  br i1 %69, label %40, label %43, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x62efaf0:s0 -> Node0x62ef480;
	Node0x62efaf0:s1 -> Node0x62ef790;
	Node0x62f08f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%70:\l70:                                               \l  %71 = phi i32 [ %136, %70 ], [ 0, %46 ]\l  %72 = phi i32 [ %137, %70 ], [ 0, %46 ]\l  %73 = add nsw i32 %71, %50\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %13, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !13\l  %77 = add nsw i32 %71, %51\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %20, i64 %78\l  store float %76, float addrspace(1)* %79, align 4, !tbaa !13\l  %80 = or i32 %71, 1\l  %81 = add nsw i32 %80, %50\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %13, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !13\l  %85 = add nsw i32 %80, %51\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %20, i64 %86\l  store float %84, float addrspace(1)* %87, align 4, !tbaa !13\l  %88 = or i32 %71, 2\l  %89 = add nsw i32 %88, %50\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %13, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !13\l  %93 = add nsw i32 %88, %51\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %20, i64 %94\l  store float %92, float addrspace(1)* %95, align 4, !tbaa !13\l  %96 = or i32 %71, 3\l  %97 = add nsw i32 %96, %50\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %13, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !13\l  %101 = add nsw i32 %96, %51\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %20, i64 %102\l  store float %100, float addrspace(1)* %103, align 4, !tbaa !13\l  %104 = or i32 %71, 4\l  %105 = add nsw i32 %104, %50\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %13, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !13\l  %109 = add nsw i32 %104, %51\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %20, i64 %110\l  store float %108, float addrspace(1)* %111, align 4, !tbaa !13\l  %112 = or i32 %71, 5\l  %113 = add nsw i32 %112, %50\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %13, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !13\l  %117 = add nsw i32 %112, %51\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %20, i64 %118\l  store float %116, float addrspace(1)* %119, align 4, !tbaa !13\l  %120 = or i32 %71, 6\l  %121 = add nsw i32 %120, %50\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %13, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !13\l  %125 = add nsw i32 %120, %51\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %20, i64 %126\l  store float %124, float addrspace(1)* %127, align 4, !tbaa !13\l  %128 = or i32 %71, 7\l  %129 = add nsw i32 %128, %50\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %13, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !13\l  %133 = add nsw i32 %128, %51\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %20, i64 %134\l  store float %132, float addrspace(1)* %135, align 4, !tbaa !13\l  %136 = add nuw nsw i32 %71, 8\l  %137 = add i32 %72, 8\l  %138 = icmp eq i32 %137, %33\l  br i1 %138, label %52, label %70, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x62f08f0:s0 -> Node0x62f0860;
	Node0x62f08f0:s1 -> Node0x62f08f0;
}
