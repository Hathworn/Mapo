digraph "CFG for '_Z15cube_select_twoiifPKfPi' function" {
	label="CFG for '_Z15cube_select_twoiifPKfPi' function";

	Node0x5e72e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = mul nsw i32 %6, %1\l  %8 = mul nsw i32 %7, 3\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds float, float addrspace(1)* %3, i64 %9\l  %11 = shl nsw i32 %7, 4\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %12\l  %14 = fmul contract float %2, %2\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5e72e20:s0 -> Node0x5e73730;
	Node0x5e72e20:s1 -> Node0x5e74a40;
	Node0x5e73730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%17:\l17:                                               \l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = insertelement \<16 x float\> poison, float %14, i64 0\l  %24 = shufflevector \<16 x float\> %23, \<16 x float\> poison, \<16 x i32\>\l... zeroinitializer\l  br label %26\l}"];
	Node0x5e73730 -> Node0x5e76290;
	Node0x5e74a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x5e76290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%26:\l26:                                               \l  %27 = phi i32 [ %15, %17 ], [ %89, %88 ]\l  %28 = mul nsw i32 %27, 3\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %10, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %32 = add nsw i32 %28, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %10, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %36 = add nsw i32 %28, 2\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %10, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = shl nsw i32 %27, 4\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %41\l  store i32 %27, i32 addrspace(1)* %42, align 4, !tbaa !11\l  %43 = add nuw nsw i32 %40, 1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %44\l  store i32 %27, i32 addrspace(1)* %45, align 4, !tbaa !11\l  %46 = add nuw nsw i32 %40, 2\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %47\l  store i32 %27, i32 addrspace(1)* %48, align 4, !tbaa !11\l  %49 = add nuw nsw i32 %40, 3\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %50\l  store i32 %27, i32 addrspace(1)* %51, align 4, !tbaa !11\l  %52 = add nuw nsw i32 %40, 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %53\l  store i32 %27, i32 addrspace(1)* %54, align 4, !tbaa !11\l  %55 = add nuw nsw i32 %40, 5\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %56\l  store i32 %27, i32 addrspace(1)* %57, align 4, !tbaa !11\l  %58 = add nuw nsw i32 %40, 6\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %59\l  store i32 %27, i32 addrspace(1)* %60, align 4, !tbaa !11\l  %61 = add nuw nsw i32 %40, 7\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %62\l  store i32 %27, i32 addrspace(1)* %63, align 4, !tbaa !11\l  %64 = add nuw nsw i32 %40, 8\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %65\l  store i32 %27, i32 addrspace(1)* %66, align 4, !tbaa !11\l  %67 = add nuw nsw i32 %40, 9\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %68\l  store i32 %27, i32 addrspace(1)* %69, align 4, !tbaa !11\l  %70 = add nuw nsw i32 %40, 10\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %71\l  store i32 %27, i32 addrspace(1)* %72, align 4, !tbaa !11\l  %73 = add nuw nsw i32 %40, 11\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %74\l  store i32 %27, i32 addrspace(1)* %75, align 4, !tbaa !11\l  %76 = add nuw nsw i32 %40, 12\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %77\l  store i32 %27, i32 addrspace(1)* %78, align 4, !tbaa !11\l  %79 = add nuw nsw i32 %40, 13\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %80\l  store i32 %27, i32 addrspace(1)* %81, align 4, !tbaa !11\l  %82 = add nuw nsw i32 %40, 14\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %83\l  store i32 %27, i32 addrspace(1)* %84, align 4, !tbaa !11\l  %85 = add nuw nsw i32 %40, 15\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %86\l  store i32 %27, i32 addrspace(1)* %87, align 4, !tbaa !11\l  br label %91\l}"];
	Node0x5e76290 -> Node0x5e7a9d0;
	Node0x5e76410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%88:\l88:                                               \l  %89 = add i32 %27, %22\l  %90 = icmp slt i32 %89, %1\l  br i1 %90, label %26, label %25, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5e76410:s0 -> Node0x5e76290;
	Node0x5e76410:s1 -> Node0x5e74a40;
	Node0x5e7a9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i32 [ 0, %26 ], [ %153, %151 ]\l  %93 = phi \<16 x float\> [ %24, %26 ], [ %152, %151 ]\l  %94 = icmp eq i32 %27, %92\l  br i1 %94, label %151, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5e7a9d0:s0 -> Node0x5e7ad20;
	Node0x5e7a9d0:s1 -> Node0x5e7afe0;
	Node0x5e7afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%95:\l95:                                               \l  %96 = mul nsw i32 %92, 3\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %10, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %100 = add nuw nsw i32 %96, 1\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %10, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %104 = add nuw nsw i32 %96, 2\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %10, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = fsub contract float %31, %99\l  %109 = fmul contract float %108, %108\l  %110 = fsub contract float %35, %103\l  %111 = fmul contract float %110, %110\l  %112 = fadd contract float %109, %111\l  %113 = fsub contract float %39, %107\l  %114 = fmul contract float %113, %113\l  %115 = fadd contract float %112, %114\l  %116 = fcmp contract ogt float %115, %14\l  br i1 %116, label %151, label %117\l|{<s0>T|<s1>F}}"];
	Node0x5e7afe0:s0 -> Node0x5e7ad20;
	Node0x5e7afe0:s1 -> Node0x5e7bd10;
	Node0x5e7bd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%117:\l117:                                              \l  %118 = fcmp contract ogt float %99, %31\l  %119 = fcmp contract ogt float %103, %35\l  %120 = fcmp contract ogt float %107, %39\l  %121 = select i1 %118, i32 8, i32 0\l  %122 = select i1 %119, i32 4, i32 0\l  %123 = or i32 %122, %121\l  %124 = select i1 %120, i32 2, i32 0\l  %125 = or i32 %123, %124\l  %126 = extractelement \<16 x float\> %93, i32 %125\l  %127 = fcmp contract olt float %115, %126\l  br i1 %127, label %128, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5e7bd10:s0 -> Node0x5e7c450;
	Node0x5e7bd10:s1 -> Node0x5e7c4a0;
	Node0x5e7c450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%128:\l128:                                              \l  %129 = phi i32 [ 0, %117 ], [ 1, %147 ]\l  %130 = phi i32 [ %125, %117 ], [ %148, %147 ]\l  %131 = or i32 %125, %40\l  br i1 %127, label %132, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5e7c450:s0 -> Node0x5e79710;
	Node0x5e7c450:s1 -> Node0x5e797a0;
	Node0x5e79710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%132:\l132:                                              \l  %133 = or i32 %131, 1\l  %134 = sext i32 %131 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %134\l  %136 = sext i32 %133 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %136\l  %138 = or i32 %125, 1\l  %139 = load i32, i32 addrspace(1)* %135, align 4, !tbaa !11\l  %140 = insertelement \<16 x float\> %93, float %126, i32 %138\l  store i32 %139, i32 addrspace(1)* %137, align 4, !tbaa !11\l  br label %141\l}"];
	Node0x5e79710 -> Node0x5e797a0;
	Node0x5e797a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%141:\l141:                                              \l  %142 = phi \<16 x float\> [ %140, %132 ], [ %93, %128 ]\l  %143 = or i32 %131, %129\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %144\l  store i32 %92, i32 addrspace(1)* %145, align 4, !tbaa !11\l  %146 = insertelement \<16 x float\> %142, float %115, i32 %130\l  br label %151\l}"];
	Node0x5e797a0 -> Node0x5e7ad20;
	Node0x5e7c4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%147:\l147:                                              \l  %148 = or i32 %125, 1\l  %149 = extractelement \<16 x float\> %93, i32 %148\l  %150 = fcmp contract olt float %115, %149\l  br i1 %150, label %128, label %151\l|{<s0>T|<s1>F}}"];
	Node0x5e7c4a0:s0 -> Node0x5e7c450;
	Node0x5e7c4a0:s1 -> Node0x5e7ad20;
	Node0x5e7ad20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%151:\l151:                                              \l  %152 = phi \<16 x float\> [ %93, %91 ], [ %93, %95 ], [ %146, %141 ], [ %93,\l... %147 ]\l  %153 = add nuw nsw i32 %92, 1\l  %154 = icmp eq i32 %153, %1\l  br i1 %154, label %88, label %91, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5e7ad20:s0 -> Node0x5e76410;
	Node0x5e7ad20:s1 -> Node0x5e7a9d0;
}
