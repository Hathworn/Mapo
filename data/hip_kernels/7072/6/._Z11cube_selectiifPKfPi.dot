digraph "CFG for '_Z11cube_selectiifPKfPi' function" {
	label="CFG for '_Z11cube_selectiifPKfPi' function";

	Node0x554e420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = mul nsw i32 %6, %1\l  %8 = mul nsw i32 %7, 3\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds float, float addrspace(1)* %3, i64 %9\l  %11 = shl nsw i32 %7, 3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %12\l  %14 = fmul contract float %2, %2\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %23\l|{<s0>T|<s1>F}}"];
	Node0x554e420:s0 -> Node0x554ed30;
	Node0x554e420:s1 -> Node0x5550010;
	Node0x554ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%17:\l17:                                               \l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  br label %24\l}"];
	Node0x554ed30 -> Node0x5550850;
	Node0x5550010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x5550850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%24:\l24:                                               \l  %25 = phi i32 [ %15, %17 ], [ %63, %62 ]\l  %26 = mul nsw i32 %25, 3\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %10, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %30 = add nsw i32 %26, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %10, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %34 = add nsw i32 %26, 2\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %10, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = shl nsw i32 %25, 3\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %39\l  store i32 %25, i32 addrspace(1)* %40, align 4, !tbaa !11\l  %41 = add nuw nsw i32 %38, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %42\l  store i32 %25, i32 addrspace(1)* %43, align 4, !tbaa !11\l  %44 = add nuw nsw i32 %38, 2\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %45\l  store i32 %25, i32 addrspace(1)* %46, align 4, !tbaa !11\l  %47 = add nuw nsw i32 %38, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %48\l  store i32 %25, i32 addrspace(1)* %49, align 4, !tbaa !11\l  %50 = add nuw nsw i32 %38, 4\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %51\l  store i32 %25, i32 addrspace(1)* %52, align 4, !tbaa !11\l  %53 = add nuw nsw i32 %38, 5\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %54\l  store i32 %25, i32 addrspace(1)* %55, align 4, !tbaa !11\l  %56 = add nuw nsw i32 %38, 6\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %57\l  store i32 %25, i32 addrspace(1)* %58, align 4, !tbaa !11\l  %59 = add nuw nsw i32 %38, 7\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %60\l  store i32 %25, i32 addrspace(1)* %61, align 4, !tbaa !11\l  br label %65\l}"];
	Node0x5550850 -> Node0x5553a50;
	Node0x55509a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%62:\l62:                                               \l  %63 = add i32 %25, %22\l  %64 = icmp slt i32 %63, %1\l  br i1 %64, label %24, label %23, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x55509a0:s0 -> Node0x5550850;
	Node0x55509a0:s1 -> Node0x5550010;
	Node0x5553a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ 0, %24 ], [ %109, %107 ]\l  %67 = phi \<8 x float\> [ \<float 1.000000e+08, float 1.000000e+08, float\l... 1.000000e+08, float 1.000000e+08, float 1.000000e+08, float 1.000000e+08,\l... float 1.000000e+08, float 1.000000e+08\>, %24 ], [ %108, %107 ]\l  %68 = icmp eq i32 %25, %66\l  br i1 %68, label %107, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5553a50:s0 -> Node0x55517c0;
	Node0x5553a50:s1 -> Node0x55554a0;
	Node0x55554a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%69:\l69:                                               \l  %70 = mul nsw i32 %66, 3\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %10, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %74 = add nuw nsw i32 %70, 1\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %10, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = add nuw nsw i32 %70, 2\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %10, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %82 = fsub contract float %29, %73\l  %83 = fmul contract float %82, %82\l  %84 = fsub contract float %33, %77\l  %85 = fmul contract float %84, %84\l  %86 = fadd contract float %83, %85\l  %87 = fsub contract float %37, %81\l  %88 = fmul contract float %87, %87\l  %89 = fadd contract float %86, %88\l  %90 = fcmp contract ogt float %89, %14\l  br i1 %90, label %107, label %91\l|{<s0>T|<s1>F}}"];
	Node0x55554a0:s0 -> Node0x55517c0;
	Node0x55554a0:s1 -> Node0x55561d0;
	Node0x55561d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%91:\l91:                                               \l  %92 = fcmp contract ogt float %73, %29\l  %93 = fcmp contract ogt float %77, %33\l  %94 = fcmp contract ogt float %81, %37\l  %95 = zext i1 %94 to i32\l  %96 = select i1 %92, i32 4, i32 0\l  %97 = select i1 %93, i32 2, i32 0\l  %98 = or i32 %97, %96\l  %99 = or i32 %98, %95\l  %100 = extractelement \<8 x float\> %67, i32 %99\l  %101 = fcmp contract olt float %89, %100\l  br i1 %101, label %102, label %107\l|{<s0>T|<s1>F}}"];
	Node0x55561d0:s0 -> Node0x55568d0;
	Node0x55561d0:s1 -> Node0x55517c0;
	Node0x55568d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%102:\l102:                                              \l  %103 = or i32 %99, %38\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %13, i64 %104\l  store i32 %66, i32 addrspace(1)* %105, align 4, !tbaa !11\l  %106 = insertelement \<8 x float\> %67, float %89, i32 %99\l  br label %107\l}"];
	Node0x55568d0 -> Node0x55517c0;
	Node0x55517c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi \<8 x float\> [ %67, %65 ], [ %67, %69 ], [ %106, %102 ], [ %67,\l... %91 ]\l  %109 = add nuw nsw i32 %66, 1\l  %110 = icmp eq i32 %109, %1\l  br i1 %110, label %62, label %65, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x55517c0:s0 -> Node0x55509a0;
	Node0x55517c0:s1 -> Node0x5553a50;
}
