digraph "CFG for '_Z16dot_cmp_kernaldmPKfS0_S0_Pfiii' function" {
	label="CFG for '_Z16dot_cmp_kernaldmPKfS0_S0_Pfiii' function";

	Node0x4547a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %5\l  %11 = add i32 %10, %8\l  %12 = add i32 %11, %6\l  %13 = freeze i32 %12\l  %14 = icmp sgt i32 %4, 0\l  br i1 %14, label %15, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4547a30:s0 -> Node0x45492b0;
	Node0x4547a30:s1 -> Node0x4549340;
	Node0x45492b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = srem i32 %13, %4\l  %17 = sub nsw i32 %13, %16\l  %18 = and i32 %4, 3\l  %19 = icmp ult i32 %4, 4\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x45492b0:s0 -> Node0x45497a0;
	Node0x45492b0:s1 -> Node0x45497f0;
	Node0x45497f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %4, -4\l  br label %63\l}"];
	Node0x45497f0 -> Node0x45499f0;
	Node0x45497a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = phi float [ undef, %15 ], [ %141, %140 ]\l  %24 = phi float [ undef, %15 ], [ %142, %140 ]\l  %25 = phi float [ 0.000000e+00, %15 ], [ %142, %140 ]\l  %26 = phi i32 [ 0, %15 ], [ %143, %140 ]\l  %27 = phi float [ 0.000000e+00, %15 ], [ %141, %140 ]\l  %28 = icmp eq i32 %18, 0\l  br i1 %28, label %55, label %29\l|{<s0>T|<s1>F}}"];
	Node0x45497a0:s0 -> Node0x454aec0;
	Node0x45497a0:s1 -> Node0x454af50;
	Node0x454af50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi float [ %51, %49 ], [ %25, %22 ]\l  %31 = phi i32 [ %52, %49 ], [ %26, %22 ]\l  %32 = phi float [ %50, %49 ], [ %27, %22 ]\l  %33 = phi i32 [ %53, %49 ], [ 0, %22 ]\l  %34 = add i32 %17, %31\l  %35 = mul i32 %34, %4\l  %36 = add i32 %35, %16\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %40 = fcmp contract ogt float %39, 5.000000e-01\l  br i1 %40, label %41, label %49\l|{<s0>T|<s1>F}}"];
	Node0x454af50:s0 -> Node0x454bde0;
	Node0x454af50:s1 -> Node0x454b0c0;
	Node0x454bde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %46 = fmul contract float %43, %45\l  %47 = fadd contract float %30, %46\l  %48 = fadd contract float %32, 1.000000e+00\l  br label %49\l}"];
	Node0x454bde0 -> Node0x454b0c0;
	Node0x454b0c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  %50 = phi float [ %48, %41 ], [ %32, %29 ]\l  %51 = phi float [ %47, %41 ], [ %30, %29 ]\l  %52 = add nuw nsw i32 %31, 1\l  %53 = add i32 %33, 1\l  %54 = icmp eq i32 %53, %18\l  br i1 %54, label %55, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x454b0c0:s0 -> Node0x454aec0;
	Node0x454b0c0:s1 -> Node0x454af50;
	Node0x454aec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%55:\l55:                                               \l  %56 = phi float [ %23, %22 ], [ %50, %49 ]\l  %57 = phi float [ %24, %22 ], [ %51, %49 ]\l  %58 = fdiv contract float %57, %56\l  br label %59\l}"];
	Node0x454aec0 -> Node0x4549340;
	Node0x4549340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%59:\l59:                                               \l  %60 = phi float [ %58, %55 ], [ 0x7FF8000000000000, %7 ]\l  %61 = sext i32 %13 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %3, i64 %61\l  store float %60, float addrspace(1)* %62, align 4, !tbaa !5\l  ret void\l}"];
	Node0x45499f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%63:\l63:                                               \l  %64 = phi float [ 0.000000e+00, %20 ], [ %142, %140 ]\l  %65 = phi i32 [ 0, %20 ], [ %143, %140 ]\l  %66 = phi float [ 0.000000e+00, %20 ], [ %141, %140 ]\l  %67 = phi i32 [ 0, %20 ], [ %144, %140 ]\l  %68 = add i32 %17, %65\l  %69 = mul i32 %68, %4\l  %70 = add i32 %69, %16\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %74 = fcmp contract ogt float %73, 5.000000e-01\l  br i1 %74, label %75, label %83\l|{<s0>T|<s1>F}}"];
	Node0x45499f0:s0 -> Node0x454b600;
	Node0x45499f0:s1 -> Node0x454e1c0;
	Node0x454b600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%75:\l75:                                               \l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %80 = fmul contract float %77, %79\l  %81 = fadd contract float %64, %80\l  %82 = fadd contract float %66, 1.000000e+00\l  br label %83\l}"];
	Node0x454b600 -> Node0x454e1c0;
	Node0x454e1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%83:\l83:                                               \l  %84 = phi float [ %82, %75 ], [ %66, %63 ]\l  %85 = phi float [ %81, %75 ], [ %64, %63 ]\l  %86 = or i32 %65, 1\l  %87 = add i32 %17, %86\l  %88 = mul i32 %87, %4\l  %89 = add i32 %88, %16\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %93 = fcmp contract ogt float %92, 5.000000e-01\l  br i1 %93, label %94, label %102\l|{<s0>T|<s1>F}}"];
	Node0x454e1c0:s0 -> Node0x454ed30;
	Node0x454e1c0:s1 -> Node0x454edc0;
	Node0x454ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%94:\l94:                                               \l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %99 = fmul contract float %96, %98\l  %100 = fadd contract float %85, %99\l  %101 = fadd contract float %84, 1.000000e+00\l  br label %102\l}"];
	Node0x454ed30 -> Node0x454edc0;
	Node0x454edc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%102:\l102:                                              \l  %103 = phi float [ %101, %94 ], [ %84, %83 ]\l  %104 = phi float [ %100, %94 ], [ %85, %83 ]\l  %105 = or i32 %65, 2\l  %106 = add i32 %17, %105\l  %107 = mul i32 %106, %4\l  %108 = add i32 %107, %16\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %112 = fcmp contract ogt float %111, 5.000000e-01\l  br i1 %112, label %113, label %121\l|{<s0>T|<s1>F}}"];
	Node0x454edc0:s0 -> Node0x454f930;
	Node0x454edc0:s1 -> Node0x454f9c0;
	Node0x454f930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%113:\l113:                                              \l  %114 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %109\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %118 = fmul contract float %115, %117\l  %119 = fadd contract float %104, %118\l  %120 = fadd contract float %103, 1.000000e+00\l  br label %121\l}"];
	Node0x454f930 -> Node0x454f9c0;
	Node0x454f9c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%121:\l121:                                              \l  %122 = phi float [ %120, %113 ], [ %103, %102 ]\l  %123 = phi float [ %119, %113 ], [ %104, %102 ]\l  %124 = or i32 %65, 3\l  %125 = add i32 %17, %124\l  %126 = mul i32 %125, %4\l  %127 = add i32 %126, %16\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %2, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %131 = fcmp contract ogt float %130, 5.000000e-01\l  br i1 %131, label %132, label %140\l|{<s0>T|<s1>F}}"];
	Node0x454f9c0:s0 -> Node0x454db90;
	Node0x454f9c0:s1 -> Node0x4549f00;
	Node0x454db90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %128\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fmul contract float %134, %136\l  %138 = fadd contract float %123, %137\l  %139 = fadd contract float %122, 1.000000e+00\l  br label %140\l}"];
	Node0x454db90 -> Node0x4549f00;
	Node0x4549f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%140:\l140:                                              \l  %141 = phi float [ %139, %132 ], [ %122, %121 ]\l  %142 = phi float [ %138, %132 ], [ %123, %121 ]\l  %143 = add nuw nsw i32 %65, 4\l  %144 = add i32 %67, 4\l  %145 = icmp eq i32 %144, %21\l  br i1 %145, label %22, label %63, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4549f00:s0 -> Node0x45497a0;
	Node0x4549f00:s1 -> Node0x45499f0;
}
