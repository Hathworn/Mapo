digraph "CFG for '_Z18complexmult_kernalPfPKfi' function" {
	label="CFG for '_Z18complexmult_kernalPfPKfi' function";

	Node0x5dc6700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !5\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !14, !invariant.load\l... !15\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = shl i32 %21, 8\l  %23 = shl nuw nsw i32 %4, 1\l  %24 = add i32 %22, %23\l  %25 = icmp ult i32 %24, %2\l  br i1 %25, label %26, label %44\l|{<s0>T|<s1>F}}"];
	Node0x5dc6700:s0 -> Node0x5dc7490;
	Node0x5dc6700:s1 -> Node0x5dc90b0;
	Node0x5dc7490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = or i32 %24, 1\l  %28 = zext i32 %24 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %31 = zext i32 %27 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %38 = fmul contract float %30, %35\l  %39 = fmul contract float %33, %37\l  %40 = fsub contract float %38, %39\l  store float %40, float addrspace(1)* %29, align 4, !tbaa !16\l  %41 = fmul contract float %33, %35\l  %42 = fmul contract float %30, %37\l  %43 = fadd contract float %41, %42\l  store float %43, float addrspace(1)* %32, align 4, !tbaa !16\l  br label %44\l}"];
	Node0x5dc7490 -> Node0x5dc90b0;
	Node0x5dc90b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
