digraph "CFG for '_Z12sumup_kernalPKfPfiiii' function" {
	label="CFG for '_Z12sumup_kernalPKfPfiiii' function";

	Node0x54e9e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul i32 %8, %4\l  %10 = add i32 %9, %7\l  %11 = add i32 %10, %5\l  %12 = icmp sgt i32 %2, 0\l  br i1 %12, label %13, label %37\l|{<s0>T|<s1>F}}"];
	Node0x54e9e50:s0 -> Node0x54e9080;
	Node0x54e9e50:s1 -> Node0x54eb6b0;
	Node0x54e9080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = srem i32 %11, %3\l  %15 = and i32 %2, 7\l  %16 = icmp ult i32 %2, 8\l  br i1 %16, label %19, label %17\l|{<s0>T|<s1>F}}"];
	Node0x54e9080:s0 -> Node0x54ead90;
	Node0x54e9080:s1 -> Node0x54ebb10;
	Node0x54ebb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%17:\l17:                                               \l  %18 = and i32 %2, -8\l  br label %43\l}"];
	Node0x54ebb10 -> Node0x54ebcd0;
	Node0x54ead90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = phi float [ undef, %13 ], [ %101, %43 ]\l  %21 = phi float [ 0.000000e+00, %13 ], [ %101, %43 ]\l  %22 = phi i32 [ 0, %13 ], [ %102, %43 ]\l  %23 = icmp eq i32 %15, 0\l  br i1 %23, label %37, label %24\l|{<s0>T|<s1>F}}"];
	Node0x54ead90:s0 -> Node0x54eb6b0;
	Node0x54ead90:s1 -> Node0x54ecf40;
	Node0x54ecf40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi float [ %33, %24 ], [ %21, %19 ]\l  %26 = phi i32 [ %34, %24 ], [ %22, %19 ]\l  %27 = phi i32 [ %35, %24 ], [ 0, %19 ]\l  %28 = mul nsw i32 %26, %3\l  %29 = add nsw i32 %14, %28\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %33 = fadd contract float %25, %32\l  %34 = add nuw nsw i32 %26, 1\l  %35 = add i32 %27, 1\l  %36 = icmp eq i32 %35, %15\l  br i1 %36, label %37, label %24, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x54ecf40:s0 -> Node0x54eb6b0;
	Node0x54ecf40:s1 -> Node0x54ecf40;
	Node0x54eb6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%37:\l37:                                               \l  %38 = phi float [ 0.000000e+00, %6 ], [ %20, %19 ], [ %33, %24 ]\l  %39 = sitofp i32 %2 to float\l  %40 = fdiv contract float %38, %39\l  %41 = sext i32 %11 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  store float %40, float addrspace(1)* %42, align 4, !tbaa !5\l  ret void\l}"];
	Node0x54ebcd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %17 ], [ %101, %43 ]\l  %45 = phi i32 [ 0, %17 ], [ %102, %43 ]\l  %46 = phi i32 [ 0, %17 ], [ %103, %43 ]\l  %47 = mul nsw i32 %45, %3\l  %48 = add nsw i32 %14, %47\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = fadd contract float %44, %51\l  %53 = or i32 %45, 1\l  %54 = mul nsw i32 %53, %3\l  %55 = add nsw i32 %14, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %59 = fadd contract float %52, %58\l  %60 = or i32 %45, 2\l  %61 = mul nsw i32 %60, %3\l  %62 = add nsw i32 %14, %61\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %66 = fadd contract float %59, %65\l  %67 = or i32 %45, 3\l  %68 = mul nsw i32 %67, %3\l  %69 = add nsw i32 %14, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = fadd contract float %66, %72\l  %74 = or i32 %45, 4\l  %75 = mul nsw i32 %74, %3\l  %76 = add nsw i32 %14, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %80 = fadd contract float %73, %79\l  %81 = or i32 %45, 5\l  %82 = mul nsw i32 %81, %3\l  %83 = add nsw i32 %14, %82\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %87 = fadd contract float %80, %86\l  %88 = or i32 %45, 6\l  %89 = mul nsw i32 %88, %3\l  %90 = add nsw i32 %14, %89\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fadd contract float %87, %93\l  %95 = or i32 %45, 7\l  %96 = mul nsw i32 %95, %3\l  %97 = add nsw i32 %14, %96\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %101 = fadd contract float %94, %100\l  %102 = add nuw nsw i32 %45, 8\l  %103 = add i32 %46, 8\l  %104 = icmp eq i32 %103, %18\l  br i1 %104, label %19, label %43, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x54ebcd0:s0 -> Node0x54ead90;
	Node0x54ebcd0:s1 -> Node0x54ebcd0;
}
