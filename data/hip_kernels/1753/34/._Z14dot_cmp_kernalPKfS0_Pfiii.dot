digraph "CFG for '_Z14dot_cmp_kernalPKfS0_Pfiii' function" {
	label="CFG for '_Z14dot_cmp_kernalPKfS0_Pfiii' function";

	Node0x4ff7650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = mul i32 %8, %4\l  %10 = add i32 %9, %7\l  %11 = add i32 %10, %5\l  %12 = freeze i32 %11\l  %13 = icmp sgt i32 %3, 0\l  br i1 %13, label %14, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4ff7650:s0 -> Node0x4ff6880;
	Node0x4ff7650:s1 -> Node0x4ff8f20;
	Node0x4ff6880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%14:\l14:                                               \l  %15 = srem i32 %12, %3\l  %16 = sub nsw i32 %12, %15\l  %17 = and i32 %3, 7\l  %18 = icmp ult i32 %3, 8\l  br i1 %18, label %21, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4ff6880:s0 -> Node0x4ff93b0;
	Node0x4ff6880:s1 -> Node0x4ff9400;
	Node0x4ff9400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%19:\l19:                                               \l  %20 = and i32 %3, -8\l  br label %49\l}"];
	Node0x4ff9400 -> Node0x4ff95d0;
	Node0x4ff93b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = phi float [ undef, %14 ], [ %139, %49 ]\l  %23 = phi float [ 0.000000e+00, %14 ], [ %139, %49 ]\l  %24 = phi i32 [ 0, %14 ], [ %140, %49 ]\l  %25 = icmp eq i32 %17, 0\l  br i1 %25, label %43, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4ff93b0:s0 -> Node0x4ff8f20;
	Node0x4ff93b0:s1 -> Node0x4ffa840;
	Node0x4ffa840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi float [ %39, %26 ], [ %23, %21 ]\l  %28 = phi i32 [ %40, %26 ], [ %24, %21 ]\l  %29 = phi i32 [ %41, %26 ], [ 0, %21 ]\l  %30 = add i32 %16, %28\l  %31 = mul i32 %30, %3\l  %32 = add i32 %31, %15\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = fmul contract float %35, %37\l  %39 = fadd contract float %27, %38\l  %40 = add nuw nsw i32 %28, 1\l  %41 = add i32 %29, 1\l  %42 = icmp eq i32 %41, %17\l  br i1 %42, label %43, label %26, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4ffa840:s0 -> Node0x4ff8f20;
	Node0x4ffa840:s1 -> Node0x4ffa840;
	Node0x4ff8f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %6 ], [ %22, %21 ], [ %39, %26 ]\l  %45 = sitofp i32 %3 to float\l  %46 = fdiv contract float %44, %45\l  %47 = sext i32 %12 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !5\l  ret void\l}"];
	Node0x4ff95d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%49:\l49:                                               \l  %50 = phi float [ 0.000000e+00, %19 ], [ %139, %49 ]\l  %51 = phi i32 [ 0, %19 ], [ %140, %49 ]\l  %52 = phi i32 [ 0, %19 ], [ %141, %49 ]\l  %53 = add i32 %16, %51\l  %54 = mul i32 %53, %3\l  %55 = add i32 %54, %15\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = fmul contract float %58, %60\l  %62 = fadd contract float %50, %61\l  %63 = or i32 %51, 1\l  %64 = add i32 %16, %63\l  %65 = mul i32 %64, %3\l  %66 = add i32 %65, %15\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %72 = fmul contract float %69, %71\l  %73 = fadd contract float %62, %72\l  %74 = or i32 %51, 2\l  %75 = add i32 %16, %74\l  %76 = mul i32 %75, %3\l  %77 = add i32 %76, %15\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %83 = fmul contract float %80, %82\l  %84 = fadd contract float %73, %83\l  %85 = or i32 %51, 3\l  %86 = add i32 %16, %85\l  %87 = mul i32 %86, %3\l  %88 = add i32 %87, %15\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fmul contract float %91, %93\l  %95 = fadd contract float %84, %94\l  %96 = or i32 %51, 4\l  %97 = add i32 %16, %96\l  %98 = mul i32 %97, %3\l  %99 = add i32 %98, %15\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %105 = fmul contract float %102, %104\l  %106 = fadd contract float %95, %105\l  %107 = or i32 %51, 5\l  %108 = add i32 %16, %107\l  %109 = mul i32 %108, %3\l  %110 = add i32 %109, %15\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %111\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %116 = fmul contract float %113, %115\l  %117 = fadd contract float %106, %116\l  %118 = or i32 %51, 6\l  %119 = add i32 %16, %118\l  %120 = mul i32 %119, %3\l  %121 = add i32 %120, %15\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %122\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %127 = fmul contract float %124, %126\l  %128 = fadd contract float %117, %127\l  %129 = or i32 %51, 7\l  %130 = add i32 %16, %129\l  %131 = mul i32 %130, %3\l  %132 = add i32 %131, %15\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = fmul contract float %135, %137\l  %139 = fadd contract float %128, %138\l  %140 = add nuw nsw i32 %51, 8\l  %141 = add i32 %52, 8\l  %142 = icmp eq i32 %141, %20\l  br i1 %142, label %21, label %49, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4ff95d0:s0 -> Node0x4ff93b0;
	Node0x4ff95d0:s1 -> Node0x4ff95d0;
}
