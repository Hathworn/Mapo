digraph "CFG for '_Z19fsc_tomo_cmp_kernalPKfS0_Pfffiiii' function" {
	label="CFG for '_Z19fsc_tomo_cmp_kernalPKfS0_Pfffiiii' function";

	Node0x612e0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = shl i32 %11, 7\l  %13 = add i32 %12, %10\l  %14 = add i32 %13, %8\l  %15 = icmp sgt i32 %6, 0\l  br i1 %15, label %16, label %70\l|{<s0>T|<s1>F}}"];
	Node0x612e0c0:s0 -> Node0x6130420;
	Node0x612e0c0:s1 -> Node0x61304b0;
	Node0x6130420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = srem i32 %14, %5\l  %18 = sdiv i32 %17, 2\l  %19 = shl nsw i32 %18, 1\l  %20 = shl nsw i32 %14, 1\l  %21 = sdiv i32 %20, %5\l  %22 = mul i32 %7, %6\l  %23 = mul i32 %22, %21\l  %24 = and i32 %6, 1\l  %25 = icmp eq i32 %6, 1\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x6130420:s0 -> Node0x6130be0;
	Node0x6130420:s1 -> Node0x6130c30;
	Node0x6130c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%26:\l26:                                               \l  %27 = and i32 %6, -2\l  br label %83\l}"];
	Node0x6130c30 -> Node0x6130e30;
	Node0x6130be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%28:\l28:                                               \l  %29 = phi float [ undef, %16 ], [ %159, %158 ]\l  %30 = phi float [ undef, %16 ], [ %160, %158 ]\l  %31 = phi float [ undef, %16 ], [ %161, %158 ]\l  %32 = phi float [ 0.000000e+00, %16 ], [ %161, %158 ]\l  %33 = phi float [ 0.000000e+00, %16 ], [ %160, %158 ]\l  %34 = phi float [ 0.000000e+00, %16 ], [ %159, %158 ]\l  %35 = phi i32 [ 0, %16 ], [ %162, %158 ]\l  %36 = icmp eq i32 %24, 0\l  br i1 %36, label %70, label %37\l|{<s0>T|<s1>F}}"];
	Node0x6130be0:s0 -> Node0x61304b0;
	Node0x6130be0:s1 -> Node0x61325e0;
	Node0x61325e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %35, %5\l  %39 = add nsw i32 %19, %38\l  %40 = add nsw i32 %39, %23\l  %41 = add i32 %40, 1\l  %42 = sext i32 %40 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = sext i32 %41 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = fmul contract float %44, %44\l  %53 = fmul contract float %47, %47\l  %54 = fadd contract float %52, %53\l  %55 = fcmp contract ogt float %54, %3\l  br i1 %55, label %56, label %70\l|{<s0>T|<s1>F}}"];
	Node0x61325e0:s0 -> Node0x61340c0;
	Node0x61325e0:s1 -> Node0x61304b0;
	Node0x61340c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%56:\l56:                                               \l  %57 = fmul contract float %49, %49\l  %58 = fmul contract float %51, %51\l  %59 = fadd contract float %57, %58\l  %60 = fcmp contract ogt float %59, %4\l  %61 = fmul contract float %44, %49\l  %62 = fmul contract float %47, %51\l  %63 = fadd contract float %61, %62\l  %64 = select i1 %60, float %63, float -0.000000e+00\l  %65 = fadd contract float %34, %64\l  %66 = select i1 %60, float %59, float -0.000000e+00\l  %67 = fadd contract float %33, %66\l  %68 = select i1 %60, float %54, float -0.000000e+00\l  %69 = fadd contract float %32, %68\l  br label %70\l}"];
	Node0x61340c0 -> Node0x61304b0;
	Node0x61304b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%70:\l70:                                               \l  %71 = phi float [ 0.000000e+00, %9 ], [ %29, %28 ], [ %34, %37 ], [ %65, %56\l... ]\l  %72 = phi float [ 0.000000e+00, %9 ], [ %30, %28 ], [ %33, %37 ], [ %67, %56\l... ]\l  %73 = phi float [ 0.000000e+00, %9 ], [ %31, %28 ], [ %32, %37 ], [ %69, %56\l... ]\l  %74 = mul nsw i32 %14, 3\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  store float %71, float addrspace(1)* %76, align 4, !tbaa !5\l  %77 = add nsw i32 %74, 1\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %2, i64 %78\l  store float %73, float addrspace(1)* %79, align 4, !tbaa !5\l  %80 = add nsw i32 %74, 2\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %2, i64 %81\l  store float %72, float addrspace(1)* %82, align 4, !tbaa !5\l  ret void\l}"];
	Node0x6130e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi float [ 0.000000e+00, %26 ], [ %161, %158 ]\l  %85 = phi float [ 0.000000e+00, %26 ], [ %160, %158 ]\l  %86 = phi float [ 0.000000e+00, %26 ], [ %159, %158 ]\l  %87 = phi i32 [ 0, %26 ], [ %162, %158 ]\l  %88 = phi i32 [ 0, %26 ], [ %163, %158 ]\l  %89 = mul nsw i32 %87, %5\l  %90 = add nsw i32 %19, %89\l  %91 = add nsw i32 %90, %23\l  %92 = add i32 %91, 1\l  %93 = sext i32 %91 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %96 = sext i32 %92 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %99 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %96\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %103 = fmul contract float %95, %95\l  %104 = fmul contract float %98, %98\l  %105 = fadd contract float %103, %104\l  %106 = fcmp contract ogt float %105, %3\l  br i1 %106, label %107, label %121\l|{<s0>T|<s1>F}}"];
	Node0x6130e30:s0 -> Node0x6136430;
	Node0x6130e30:s1 -> Node0x61364c0;
	Node0x6136430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%107:\l107:                                              \l  %108 = fmul contract float %100, %100\l  %109 = fmul contract float %102, %102\l  %110 = fadd contract float %108, %109\l  %111 = fcmp contract ogt float %110, %4\l  %112 = fmul contract float %95, %100\l  %113 = fmul contract float %98, %102\l  %114 = fadd contract float %112, %113\l  %115 = select i1 %111, float %114, float -0.000000e+00\l  %116 = fadd contract float %86, %115\l  %117 = select i1 %111, float %110, float -0.000000e+00\l  %118 = fadd contract float %85, %117\l  %119 = select i1 %111, float %105, float -0.000000e+00\l  %120 = fadd contract float %84, %119\l  br label %121\l}"];
	Node0x6136430 -> Node0x61364c0;
	Node0x61364c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = phi float [ %86, %83 ], [ %116, %107 ]\l  %123 = phi float [ %85, %83 ], [ %118, %107 ]\l  %124 = phi float [ %84, %83 ], [ %120, %107 ]\l  %125 = or i32 %87, 1\l  %126 = mul nsw i32 %125, %5\l  %127 = add nsw i32 %19, %126\l  %128 = add nsw i32 %127, %23\l  %129 = add i32 %128, 1\l  %130 = sext i32 %128 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %133 = sext i32 %129 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %136 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %133\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %140 = fmul contract float %132, %132\l  %141 = fmul contract float %135, %135\l  %142 = fadd contract float %140, %141\l  %143 = fcmp contract ogt float %142, %3\l  br i1 %143, label %144, label %158\l|{<s0>T|<s1>F}}"];
	Node0x61364c0:s0 -> Node0x6137ef0;
	Node0x61364c0:s1 -> Node0x6131340;
	Node0x6137ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%144:\l144:                                              \l  %145 = fmul contract float %137, %137\l  %146 = fmul contract float %139, %139\l  %147 = fadd contract float %145, %146\l  %148 = fcmp contract ogt float %147, %4\l  %149 = fmul contract float %132, %137\l  %150 = fmul contract float %135, %139\l  %151 = fadd contract float %149, %150\l  %152 = select i1 %148, float %151, float -0.000000e+00\l  %153 = fadd contract float %122, %152\l  %154 = select i1 %148, float %147, float -0.000000e+00\l  %155 = fadd contract float %123, %154\l  %156 = select i1 %148, float %142, float -0.000000e+00\l  %157 = fadd contract float %124, %156\l  br label %158\l}"];
	Node0x6137ef0 -> Node0x6131340;
	Node0x6131340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  %159 = phi float [ %122, %121 ], [ %153, %144 ]\l  %160 = phi float [ %123, %121 ], [ %155, %144 ]\l  %161 = phi float [ %124, %121 ], [ %157, %144 ]\l  %162 = add nuw nsw i32 %87, 2\l  %163 = add i32 %88, 2\l  %164 = icmp eq i32 %163, %27\l  br i1 %164, label %28, label %83, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x6131340:s0 -> Node0x6130be0;
	Node0x6131340:s1 -> Node0x6130e30;
}
