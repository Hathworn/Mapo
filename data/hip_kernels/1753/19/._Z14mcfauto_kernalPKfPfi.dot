digraph "CFG for '_Z14mcfauto_kernalPKfPfi' function" {
	label="CFG for '_Z14mcfauto_kernalPKfPfi' function";

	Node0x56d6c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !5\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !14, !invariant.load\l... !15\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %5\l  %22 = shl i32 %21, 8\l  %23 = shl nuw nsw i32 %4, 1\l  %24 = add i32 %22, %23\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %62\l|{<s0>T|<s1>F}}"];
	Node0x56d6c20:s0 -> Node0x56d79b0;
	Node0x56d6c20:s1 -> Node0x56d95d0;
	Node0x56d79b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = sext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %32 = fmul contract float %29, %31\l  %33 = or i32 %24, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !15\l  %39 = fmul contract float %36, %38\l  %40 = fadd contract float %32, %39\l  %41 = fcmp olt float %40, 0x39F0000000000000\l  %42 = select i1 %41, float 0x41F0000000000000, float 1.000000e+00\l  %43 = fmul float %40, %42\l  %44 = tail call float @llvm.sqrt.f32(float %43)\l  %45 = bitcast float %44 to i32\l  %46 = add nsw i32 %45, -1\l  %47 = bitcast i32 %46 to float\l  %48 = add nsw i32 %45, 1\l  %49 = bitcast i32 %48 to float\l  %50 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 608)\l  %51 = select i1 %41, float 0x3EF0000000000000, float 1.000000e+00\l  %52 = fneg float %49\l  %53 = tail call float @llvm.fma.f32(float %52, float %44, float %43)\l  %54 = fcmp ogt float %53, 0.000000e+00\l  %55 = fneg float %47\l  %56 = tail call float @llvm.fma.f32(float %55, float %44, float %43)\l  %57 = fcmp ole float %56, 0.000000e+00\l  %58 = select i1 %57, float %47, float %44\l  %59 = select i1 %54, float %49, float %58\l  %60 = fmul float %51, %59\l  %61 = select i1 %50, float %43, float %60\l  store float %61, float addrspace(1)* %30, align 4, !tbaa !16\l  store float 0.000000e+00, float addrspace(1)* %37, align 4, !tbaa !16\l  br label %62\l}"];
	Node0x56d79b0 -> Node0x56d95d0;
	Node0x56d95d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  ret void\l}"];
}
