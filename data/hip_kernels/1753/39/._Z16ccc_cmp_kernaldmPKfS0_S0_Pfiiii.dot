digraph "CFG for '_Z16ccc_cmp_kernaldmPKfS0_S0_Pfiiii' function" {
	label="CFG for '_Z16ccc_cmp_kernaldmPKfS0_S0_Pfiiii' function";

	Node0x5353bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %6\l  %12 = add i32 %11, %9\l  %13 = add i32 %12, %7\l  %14 = freeze i32 %13\l  %15 = icmp sgt i32 %4, 0\l  br i1 %15, label %16, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5353bd0:s0 -> Node0x5355450;
	Node0x5353bd0:s1 -> Node0x53554e0;
	Node0x5355450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = srem i32 %14, %4\l  %18 = sub nsw i32 %14, %17\l  %19 = and i32 %4, 1\l  %20 = icmp eq i32 %4, 1\l  br i1 %20, label %23, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5355450:s0 -> Node0x5355910;
	Node0x5355450:s1 -> Node0x5355960;
	Node0x5355960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%21:\l21:                                               \l  %22 = and i32 %4, -2\l  br label %89\l}"];
	Node0x5355960 -> Node0x5355b60;
	Node0x5355910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%23:\l23:                                               \l  %24 = phi float [ undef, %16 ], [ %149, %148 ]\l  %25 = phi float [ undef, %16 ], [ %150, %148 ]\l  %26 = phi float [ undef, %16 ], [ %151, %148 ]\l  %27 = phi float [ undef, %16 ], [ %152, %148 ]\l  %28 = phi float [ undef, %16 ], [ %153, %148 ]\l  %29 = phi float [ undef, %16 ], [ %154, %148 ]\l  %30 = phi float [ 0.000000e+00, %16 ], [ %154, %148 ]\l  %31 = phi i32 [ 0, %16 ], [ %155, %148 ]\l  %32 = phi float [ 0.000000e+00, %16 ], [ %153, %148 ]\l  %33 = phi float [ 0.000000e+00, %16 ], [ %152, %148 ]\l  %34 = phi float [ 0.000000e+00, %16 ], [ %151, %148 ]\l  %35 = phi float [ 0.000000e+00, %16 ], [ %150, %148 ]\l  %36 = phi float [ 0.000000e+00, %16 ], [ %149, %148 ]\l  %37 = icmp eq i32 %19, 0\l  br i1 %37, label %60, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5355910:s0 -> Node0x53554e0;
	Node0x5355910:s1 -> Node0x5357880;
	Node0x5357880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%38:\l38:                                               \l  %39 = add i32 %18, %31\l  %40 = mul i32 %39, %4\l  %41 = add i32 %40, %17\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = fcmp contract ogt float %44, 5.000000e-01\l  br i1 %45, label %46, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5357880:s0 -> Node0x53580e0;
	Node0x5357880:s1 -> Node0x53554e0;
	Node0x53580e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%46:\l46:                                               \l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = fadd contract float %30, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = fadd contract float %32, %51\l  %53 = fmul contract float %48, %48\l  %54 = fadd contract float %33, %53\l  %55 = fmul contract float %51, %51\l  %56 = fadd contract float %34, %55\l  %57 = fmul contract float %48, %51\l  %58 = fadd contract float %36, %57\l  %59 = fadd contract float %35, 1.000000e+00\l  br label %60\l}"];
	Node0x53580e0 -> Node0x53554e0;
	Node0x53554e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%60:\l60:                                               \l  %61 = phi float [ 0.000000e+00, %8 ], [ %24, %23 ], [ %58, %46 ], [ %36, %38\l... ]\l  %62 = phi float [ 0.000000e+00, %8 ], [ %25, %23 ], [ %59, %46 ], [ %35, %38\l... ]\l  %63 = phi float [ 0.000000e+00, %8 ], [ %26, %23 ], [ %56, %46 ], [ %34, %38\l... ]\l  %64 = phi float [ 0.000000e+00, %8 ], [ %27, %23 ], [ %54, %46 ], [ %33, %38\l... ]\l  %65 = phi float [ 0.000000e+00, %8 ], [ %28, %23 ], [ %52, %46 ], [ %32, %38\l... ]\l  %66 = phi float [ 0.000000e+00, %8 ], [ %29, %23 ], [ %49, %46 ], [ %30, %38\l... ]\l  %67 = fdiv contract float %66, %62\l  %68 = sext i32 %14 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %3, i64 %68\l  store float %67, float addrspace(1)* %69, align 4, !tbaa !5\l  %70 = fdiv contract float %65, %62\l  %71 = add nsw i32 %14, %5\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %3, i64 %72\l  store float %70, float addrspace(1)* %73, align 4, !tbaa !5\l  %74 = fdiv contract float %64, %62\l  %75 = shl nsw i32 %5, 1\l  %76 = add nsw i32 %14, %75\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %77\l  store float %74, float addrspace(1)* %78, align 4, !tbaa !5\l  %79 = fdiv contract float %63, %62\l  %80 = mul nsw i32 %5, 3\l  %81 = add nsw i32 %14, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %3, i64 %82\l  store float %79, float addrspace(1)* %83, align 4, !tbaa !5\l  %84 = fdiv contract float %61, %62\l  %85 = shl nsw i32 %5, 2\l  %86 = add nsw i32 %14, %85\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %3, i64 %87\l  store float %84, float addrspace(1)* %88, align 4, !tbaa !5\l  ret void\l}"];
	Node0x5355b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  %90 = phi float [ 0.000000e+00, %21 ], [ %154, %148 ]\l  %91 = phi i32 [ 0, %21 ], [ %155, %148 ]\l  %92 = phi float [ 0.000000e+00, %21 ], [ %153, %148 ]\l  %93 = phi float [ 0.000000e+00, %21 ], [ %152, %148 ]\l  %94 = phi float [ 0.000000e+00, %21 ], [ %151, %148 ]\l  %95 = phi float [ 0.000000e+00, %21 ], [ %150, %148 ]\l  %96 = phi float [ 0.000000e+00, %21 ], [ %149, %148 ]\l  %97 = phi i32 [ 0, %21 ], [ %156, %148 ]\l  %98 = add i32 %18, %91\l  %99 = mul i32 %98, %4\l  %100 = add i32 %99, %17\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %104 = fcmp contract ogt float %103, 5.000000e-01\l  br i1 %104, label %105, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5355b60:s0 -> Node0x535b770;
	Node0x5355b60:s1 -> Node0x535b800;
	Node0x535b770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%105:\l105:                                              \l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %108 = fadd contract float %90, %107\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %111 = fadd contract float %92, %110\l  %112 = fmul contract float %107, %107\l  %113 = fadd contract float %93, %112\l  %114 = fmul contract float %110, %110\l  %115 = fadd contract float %94, %114\l  %116 = fmul contract float %107, %110\l  %117 = fadd contract float %96, %116\l  %118 = fadd contract float %95, 1.000000e+00\l  br label %119\l}"];
	Node0x535b770 -> Node0x535b800;
	Node0x535b800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi float [ %117, %105 ], [ %96, %89 ]\l  %121 = phi float [ %118, %105 ], [ %95, %89 ]\l  %122 = phi float [ %115, %105 ], [ %94, %89 ]\l  %123 = phi float [ %113, %105 ], [ %93, %89 ]\l  %124 = phi float [ %111, %105 ], [ %92, %89 ]\l  %125 = phi float [ %108, %105 ], [ %90, %89 ]\l  %126 = or i32 %91, 1\l  %127 = add i32 %18, %126\l  %128 = mul i32 %127, %4\l  %129 = add i32 %128, %17\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %2, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %133 = fcmp contract ogt float %132, 5.000000e-01\l  br i1 %133, label %134, label %148\l|{<s0>T|<s1>F}}"];
	Node0x535b800:s0 -> Node0x5359d00;
	Node0x535b800:s1 -> Node0x5356070;
	Node0x5359d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%134:\l134:                                              \l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %130\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fadd contract float %125, %136\l  %138 = getelementptr inbounds float, float addrspace(1)* %1, i64 %130\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %140 = fadd contract float %124, %139\l  %141 = fmul contract float %136, %136\l  %142 = fadd contract float %123, %141\l  %143 = fmul contract float %139, %139\l  %144 = fadd contract float %122, %143\l  %145 = fmul contract float %136, %139\l  %146 = fadd contract float %120, %145\l  %147 = fadd contract float %121, 1.000000e+00\l  br label %148\l}"];
	Node0x5359d00 -> Node0x5356070;
	Node0x5356070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  %149 = phi float [ %146, %134 ], [ %120, %119 ]\l  %150 = phi float [ %147, %134 ], [ %121, %119 ]\l  %151 = phi float [ %144, %134 ], [ %122, %119 ]\l  %152 = phi float [ %142, %134 ], [ %123, %119 ]\l  %153 = phi float [ %140, %134 ], [ %124, %119 ]\l  %154 = phi float [ %137, %134 ], [ %125, %119 ]\l  %155 = add nuw nsw i32 %91, 2\l  %156 = add i32 %97, 2\l  %157 = icmp eq i32 %156, %22\l  br i1 %157, label %23, label %89, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5356070:s0 -> Node0x5355910;
	Node0x5356070:s1 -> Node0x5355b60;
}
