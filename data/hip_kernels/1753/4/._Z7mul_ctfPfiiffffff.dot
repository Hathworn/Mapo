digraph "CFG for '_Z7mul_ctfPfiiffffff' function" {
	label="CFG for '_Z7mul_ctfPfiiffffff' function";

	Node0x62d3710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = sitofp i32 %10 to float\l  %13 = ashr i32 %2, 1\l  %14 = icmp slt i32 %11, %13\l  %15 = select i1 %14, i32 0, i32 %2\l  %16 = sub nsw i32 %11, %15\l  %17 = sitofp i32 %16 to float\l  %18 = shl nsw i32 %10, 1\l  %19 = add nsw i32 %1, 2\l  %20 = mul nsw i32 %19, %11\l  %21 = add nsw i32 %20, %18\l  %22 = fmul contract float %12, %12\l  %23 = fmul contract float %17, %17\l  %24 = fadd contract float %22, %23\l  %25 = fcmp olt float %24, 0x39F0000000000000\l  %26 = select i1 %25, float 0x41F0000000000000, float 1.000000e+00\l  %27 = fmul float %24, %26\l  %28 = tail call float @llvm.sqrt.f32(float %27)\l  %29 = bitcast float %28 to i32\l  %30 = add nsw i32 %29, -1\l  %31 = bitcast i32 %30 to float\l  %32 = add nsw i32 %29, 1\l  %33 = bitcast i32 %32 to float\l  %34 = tail call i1 @llvm.amdgcn.class.f32(float %27, i32 608)\l  %35 = select i1 %25, float 0x3EF0000000000000, float 1.000000e+00\l  %36 = fneg float %33\l  %37 = tail call float @llvm.fma.f32(float %36, float %28, float %27)\l  %38 = fcmp ogt float %37, 0.000000e+00\l  %39 = fneg float %31\l  %40 = tail call float @llvm.fma.f32(float %39, float %28, float %27)\l  %41 = fcmp ole float %40, 0.000000e+00\l  %42 = select i1 %41, float %31, float %28\l  %43 = select i1 %38, float %33, float %42\l  %44 = fmul float %35, %43\l  %45 = select i1 %34, float %27, float %44\l  %46 = sitofp i32 %1 to float\l  %47 = fdiv contract float %45, %46\l  %48 = fdiv contract float %47, %6\l  %49 = fmul contract float %4, 1.000000e+07\l  %50 = fdiv contract float %8, 1.000000e+02\l  %51 = fmul contract float %50, %50\l  %52 = fsub contract float 1.000000e+00, %51\l  %53 = fcmp olt float %52, 0x39F0000000000000\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %52, %54\l  %56 = tail call float @llvm.sqrt.f32(float %55)\l  %57 = bitcast float %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = bitcast i32 %58 to float\l  %60 = add nsw i32 %57, 1\l  %61 = bitcast i32 %60 to float\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %55, i32 608)\l  %63 = select i1 %53, float 0x3EF0000000000000, float 1.000000e+00\l  %64 = fneg float %61\l  %65 = tail call float @llvm.fma.f32(float %64, float %56, float %55)\l  %66 = fcmp ogt float %65, 0.000000e+00\l  %67 = fneg float %59\l  %68 = tail call float @llvm.fma.f32(float %67, float %56, float %55)\l  %69 = fcmp ole float %68, 0.000000e+00\l  %70 = select i1 %69, float %59, float %56\l  %71 = select i1 %66, float %61, float %70\l  %72 = fmul float %63, %71\l  %73 = select i1 %62, float %55, float %72\l  %74 = fdiv contract float %50, %73\l  %75 = tail call float @llvm.fabs.f32(float %74)\l  %76 = fcmp ogt float %75, 1.000000e+00\l  %77 = tail call float @llvm.amdgcn.rcp.f32(float %75)\l  %78 = select i1 %76, float %77, float %75\l  %79 = fmul float %78, %78\l  %80 = tail call float @llvm.fmuladd.f32(float %79, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %81 = tail call float @llvm.fmuladd.f32(float %79, float %80, float\l... 0x3FA53F67E0000000)\l  %82 = tail call float @llvm.fmuladd.f32(float %79, float %81, float\l... 0xBFB2FA9AE0000000)\l  %83 = tail call float @llvm.fmuladd.f32(float %79, float %82, float\l... 0x3FBB263640000000)\l  %84 = tail call float @llvm.fmuladd.f32(float %79, float %83, float\l... 0xBFC22C1CC0000000)\l  %85 = tail call float @llvm.fmuladd.f32(float %79, float %84, float\l... 0x3FC99717E0000000)\l  %86 = tail call float @llvm.fmuladd.f32(float %79, float %85, float\l... 0xBFD5554C40000000)\l  %87 = fmul float %79, %86\l  %88 = tail call float @llvm.fmuladd.f32(float %78, float %87, float %78)\l  %89 = fsub float 0x3FF921FB60000000, %88\l  %90 = select i1 %76, float %89, float %88\l  %91 = tail call float @llvm.copysign.f32(float %90, float %74)\l  %92 = fadd contract float %5, 1.022000e+03\l  %93 = fmul contract float %92, %5\l  %94 = fcmp olt float %93, 0x39F0000000000000\l  %95 = select i1 %94, float 0x41F0000000000000, float 1.000000e+00\l  %96 = fmul float %93, %95\l  %97 = tail call float @llvm.sqrt.f32(float %96)\l  %98 = bitcast float %97 to i32\l  %99 = add nsw i32 %98, -1\l  %100 = bitcast i32 %99 to float\l  %101 = add nsw i32 %98, 1\l  %102 = bitcast i32 %101 to float\l  %103 = tail call i1 @llvm.amdgcn.class.f32(float %96, i32 608)\l  %104 = select i1 %94, float 0x3EF0000000000000, float 1.000000e+00\l  %105 = fneg float %102\l  %106 = tail call float @llvm.fma.f32(float %105, float %97, float %96)\l  %107 = fcmp ogt float %106, 0.000000e+00\l  %108 = fneg float %100\l  %109 = tail call float @llvm.fma.f32(float %108, float %97, float %96)\l  %110 = fcmp ole float %109, 0.000000e+00\l  %111 = select i1 %110, float %100, float %97\l  %112 = select i1 %107, float %102, float %111\l  %113 = fmul float %104, %112\l  %114 = select i1 %103, float %96, float %113\l  %115 = fdiv contract float 0x4028CBC6A0000000, %114\l  %116 = fmul contract float %48, %48\l  %117 = fmul contract float %3, 1.000000e+04\l  %118 = fmul contract float %117, %115\l  %119 = fmul contract float %118, %116\l  %120 = fmul contract float %49, %115\l  %121 = fmul contract float %115, %120\l  %122 = fmul contract float %115, %121\l  %123 = fmul contract float %122, %116\l  %124 = fmul contract float %116, %123\l  %125 = fmul contract float %124, 5.000000e-01\l  %126 = fsub contract float %119, %125\l  %127 = fpext float %126 to double\l  %128 = fmul contract double %127, 3.141590e+00\l  %129 = fpext float %91 to double\l  %130 = fadd contract double %128, %129\l  %131 = tail call double @llvm.fabs.f64(double %130)\l  %132 = fcmp olt double %131, 0x41D0000000000000\l  br i1 %132, label %133, label %152\l|{<s0>T|<s1>F}}"];
	Node0x62d3710:s0 -> Node0x62d9100;
	Node0x62d3710:s1 -> Node0x62dcda0;
	Node0x62d9100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%133:\l133:                                              \l  %134 = fmul double %131, 0x3FE45F306DC9C883\l  %135 = tail call double @llvm.rint.f64(double %134)\l  %136 = tail call double @llvm.fma.f64(double %135, double\l... 0xBFF921FB54442D18, double %131)\l  %137 = tail call double @llvm.fma.f64(double %135, double\l... 0xBC91A62633145C00, double %136)\l  %138 = fmul double %135, 0x3C91A62633145C00\l  %139 = fneg double %138\l  %140 = tail call double @llvm.fma.f64(double %135, double\l... 0x3C91A62633145C00, double %139)\l  %141 = fsub double %136, %138\l  %142 = fsub double %136, %141\l  %143 = fsub double %142, %138\l  %144 = fsub double %141, %137\l  %145 = fadd double %144, %143\l  %146 = fsub double %145, %140\l  %147 = tail call double @llvm.fma.f64(double %135, double\l... 0xB97B839A252049C0, double %146)\l  %148 = fadd double %137, %147\l  %149 = fsub double %148, %137\l  %150 = fsub double %147, %149\l  %151 = fptosi double %135 to i32\l  br label %228\l}"];
	Node0x62d9100 -> Node0x62ddf60;
	Node0x62dcda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%152:\l152:                                              \l  %153 = tail call double @llvm.amdgcn.trig.preop.f64(double %131, i32 0)\l  %154 = tail call double @llvm.amdgcn.trig.preop.f64(double %131, i32 1)\l  %155 = tail call double @llvm.amdgcn.trig.preop.f64(double %131, i32 2)\l  %156 = fcmp oge double %131, 0x7B00000000000000\l  %157 = tail call double @llvm.amdgcn.ldexp.f64(double %131, i32 -128)\l  %158 = select i1 %156, double %157, double %131\l  %159 = fmul double %155, %158\l  %160 = fneg double %159\l  %161 = tail call double @llvm.fma.f64(double %155, double %158, double %160)\l  %162 = fmul double %154, %158\l  %163 = fneg double %162\l  %164 = tail call double @llvm.fma.f64(double %154, double %158, double %163)\l  %165 = fmul double %153, %158\l  %166 = fneg double %165\l  %167 = tail call double @llvm.fma.f64(double %153, double %158, double %166)\l  %168 = fadd double %162, %167\l  %169 = fsub double %168, %162\l  %170 = fsub double %168, %169\l  %171 = fsub double %167, %169\l  %172 = fsub double %162, %170\l  %173 = fadd double %171, %172\l  %174 = fadd double %159, %164\l  %175 = fsub double %174, %159\l  %176 = fsub double %174, %175\l  %177 = fsub double %164, %175\l  %178 = fsub double %159, %176\l  %179 = fadd double %177, %178\l  %180 = fadd double %174, %173\l  %181 = fsub double %180, %174\l  %182 = fsub double %180, %181\l  %183 = fsub double %173, %181\l  %184 = fsub double %174, %182\l  %185 = fadd double %183, %184\l  %186 = fadd double %179, %185\l  %187 = fadd double %161, %186\l  %188 = fadd double %165, %168\l  %189 = fsub double %188, %165\l  %190 = fsub double %168, %189\l  %191 = fadd double %190, %180\l  %192 = fsub double %191, %190\l  %193 = fsub double %180, %192\l  %194 = fadd double %193, %187\l  %195 = tail call double @llvm.amdgcn.ldexp.f64(double %188, i32 -2)\l  %196 = tail call double @llvm.amdgcn.fract.f64(double %195)\l  %197 = tail call i1 @llvm.amdgcn.class.f64(double %195, i32 516)\l  %198 = select i1 %197, double 0.000000e+00, double %196\l  %199 = tail call double @llvm.amdgcn.ldexp.f64(double %198, i32 2)\l  %200 = fadd double %199, %191\l  %201 = fcmp olt double %200, 0.000000e+00\l  %202 = select i1 %201, double 4.000000e+00, double 0.000000e+00\l  %203 = fadd double %199, %202\l  %204 = fadd double %191, %203\l  %205 = fptosi double %204 to i32\l  %206 = sitofp i32 %205 to double\l  %207 = fsub double %203, %206\l  %208 = fadd double %191, %207\l  %209 = fsub double %208, %207\l  %210 = fsub double %191, %209\l  %211 = fadd double %194, %210\l  %212 = fcmp oge double %208, 5.000000e-01\l  %213 = zext i1 %212 to i32\l  %214 = add nsw i32 %213, %205\l  %215 = select i1 %212, double 1.000000e+00, double 0.000000e+00\l  %216 = fsub double %208, %215\l  %217 = fadd double %216, %211\l  %218 = fsub double %217, %216\l  %219 = fsub double %211, %218\l  %220 = fmul double %217, 0x3FF921FB54442D18\l  %221 = fneg double %220\l  %222 = tail call double @llvm.fma.f64(double %217, double\l... 0x3FF921FB54442D18, double %221)\l  %223 = tail call double @llvm.fma.f64(double %217, double\l... 0x3C91A62633145C07, double %222)\l  %224 = tail call double @llvm.fma.f64(double %219, double\l... 0x3FF921FB54442D18, double %223)\l  %225 = fadd double %220, %224\l  %226 = fsub double %225, %220\l  %227 = fsub double %224, %226\l  br label %228\l}"];
	Node0x62dcda0 -> Node0x62ddf60;
	Node0x62ddf60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%228:\l228:                                              \l  %229 = phi double [ %150, %133 ], [ %227, %152 ]\l  %230 = phi double [ %148, %133 ], [ %225, %152 ]\l  %231 = phi i32 [ %151, %133 ], [ %214, %152 ]\l  %232 = fmul double %230, %230\l  %233 = fmul double %232, 5.000000e-01\l  %234 = fsub double 1.000000e+00, %233\l  %235 = fsub double 1.000000e+00, %234\l  %236 = fsub double %235, %233\l  %237 = fmul double %232, %232\l  %238 = tail call double @llvm.fma.f64(double %232, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %239 = tail call double @llvm.fma.f64(double %232, double %238, double\l... 0xBE927E4FA17F65F6)\l  %240 = tail call double @llvm.fma.f64(double %232, double %239, double\l... 0x3EFA01A019F4EC90)\l  %241 = tail call double @llvm.fma.f64(double %232, double %240, double\l... 0xBF56C16C16C16967)\l  %242 = tail call double @llvm.fma.f64(double %232, double %241, double\l... 0x3FA5555555555555)\l  %243 = fneg double %229\l  %244 = tail call double @llvm.fma.f64(double %230, double %243, double %236)\l  %245 = tail call double @llvm.fma.f64(double %237, double %242, double %244)\l  %246 = fadd double %234, %245\l  %247 = tail call double @llvm.fma.f64(double %232, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %248 = tail call double @llvm.fma.f64(double %232, double %247, double\l... 0x3EC71DE3796CDE01)\l  %249 = tail call double @llvm.fma.f64(double %232, double %248, double\l... 0xBF2A01A019E83E5C)\l  %250 = tail call double @llvm.fma.f64(double %232, double %249, double\l... 0x3F81111111110BB3)\l  %251 = fneg double %232\l  %252 = fmul double %230, %251\l  %253 = fmul double %229, 5.000000e-01\l  %254 = tail call double @llvm.fma.f64(double %252, double %250, double %253)\l  %255 = tail call double @llvm.fma.f64(double %232, double %254, double %243)\l  %256 = tail call double @llvm.fma.f64(double %252, double\l... 0xBFC5555555555555, double %255)\l  %257 = fsub double %230, %256\l  %258 = and i32 %231, 1\l  %259 = icmp eq i32 %258, 0\l  %260 = select i1 %259, double %257, double %246\l  %261 = bitcast double %260 to \<2 x i32\>\l  %262 = shl i32 %231, 30\l  %263 = bitcast double %130 to \<2 x i32\>\l  %264 = extractelement \<2 x i32\> %263, i64 1\l  %265 = xor i32 %262, %264\l  %266 = and i32 %265, -2147483648\l  %267 = extractelement \<2 x i32\> %261, i64 1\l  %268 = xor i32 %267, %266\l  %269 = insertelement \<2 x i32\> %261, i32 %268, i64 1\l  %270 = tail call i1 @llvm.amdgcn.class.f64(double %131, i32 504)\l  %271 = select i1 %270, \<2 x i32\> %269, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %272 = bitcast \<2 x i32\> %271 to double\l  %273 = fptrunc double %272 to float\l  %274 = fcmp contract une float %7, 0.000000e+00\l  br i1 %274, label %275, label %294\l|{<s0>T|<s1>F}}"];
	Node0x62ddf60:s0 -> Node0x62e4f60;
	Node0x62ddf60:s1 -> Node0x62e4ff0;
	Node0x62e4f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e97a5f70",label="{%275:\l275:                                              \l  %276 = fneg contract float %7\l  %277 = fmul contract float %116, %276\l  %278 = fmul contract float %277, 2.500000e-01\l  %279 = fmul float %278, 0x3FF7154760000000\l  %280 = tail call float @llvm.rint.f32(float %279)\l  %281 = fcmp ogt float %278, 0x40562E4300000000\l  %282 = fcmp olt float %278, 0xC059D1DA00000000\l  %283 = fneg float %279\l  %284 = tail call float @llvm.fma.f32(float %278, float 0x3FF7154760000000,\l... float %283)\l  %285 = tail call float @llvm.fma.f32(float %278, float 0x3E54AE0BE0000000,\l... float %284)\l  %286 = fsub float %279, %280\l  %287 = fadd float %285, %286\l  %288 = tail call float @llvm.exp2.f32(float %287)\l  %289 = fptosi float %280 to i32\l  %290 = tail call float @llvm.amdgcn.ldexp.f32(float %288, i32 %289)\l  %291 = select i1 %282, float 0.000000e+00, float %290\l  %292 = select i1 %281, float 0x7FF0000000000000, float %291\l  %293 = fmul contract float %292, %273\l  br label %294\l}"];
	Node0x62e4f60 -> Node0x62e4ff0;
	Node0x62e4ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%294:\l294:                                              \l  %295 = phi float [ %293, %275 ], [ %273, %228 ]\l  %296 = sext i32 %21 to i64\l  %297 = getelementptr inbounds float, float addrspace(1)* %0, i64 %296\l  %298 = load float, float addrspace(1)* %297, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %299 = fmul contract float %295, %298\l  store float %299, float addrspace(1)* %297, align 4, !tbaa !5\l  %300 = add nsw i32 %21, 1\l  %301 = sext i32 %300 to i64\l  %302 = getelementptr inbounds float, float addrspace(1)* %0, i64 %301\l  %303 = load float, float addrspace(1)* %302, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %304 = fmul contract float %295, %303\l  store float %304, float addrspace(1)* %302, align 4, !tbaa !5\l  ret void\l}"];
}
