digraph "CFG for '_Z27ComplementNBNormalizeKernelPfS_jj' function" {
	label="CFG for '_Z27ComplementNBNormalizeKernelPfS_jj' function";

	Node0x453bc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp ult i32 %13, %3\l  %15 = icmp ne i32 %2, 0\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %85\l|{<s0>T|<s1>F}}"];
	Node0x453bc80:s0 -> Node0x453bd10;
	Node0x453bc80:s1 -> Node0x453d5a0;
	Node0x453bd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = and i32 %2, 3\l  %19 = icmp ult i32 %2, 4\l  br i1 %19, label %67, label %20\l|{<s0>T|<s1>F}}"];
	Node0x453bd10:s0 -> Node0x453e100;
	Node0x453bd10:s1 -> Node0x453e150;
	Node0x453e150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %2, -4\l  br label %22\l}"];
	Node0x453e150 -> Node0x453e350;
	Node0x453e350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = phi i32 [ 0, %20 ], [ %64, %22 ]\l  %24 = phi i32 [ 0, %20 ], [ %65, %22 ]\l  %25 = zext i32 %23 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %28 = mul i32 %23, %3\l  %29 = add i32 %28, %13\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7\l  %33 = fdiv contract float %32, %27\l  store float %33, float addrspace(1)* %31, align 4, !tbaa !7\l  %34 = or i32 %23, 1\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %38 = mul i32 %34, %3\l  %39 = add i32 %38, %13\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = fdiv contract float %42, %37\l  store float %43, float addrspace(1)* %41, align 4, !tbaa !7\l  %44 = or i32 %23, 2\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = mul i32 %44, %3\l  %49 = add i32 %48, %13\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fdiv contract float %52, %47\l  store float %53, float addrspace(1)* %51, align 4, !tbaa !7\l  %54 = or i32 %23, 3\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = mul i32 %54, %3\l  %59 = add i32 %58, %13\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fdiv contract float %62, %57\l  store float %63, float addrspace(1)* %61, align 4, !tbaa !7\l  %64 = add nuw i32 %23, 4\l  %65 = add i32 %24, 4\l  %66 = icmp eq i32 %65, %21\l  br i1 %66, label %67, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x453e350:s0 -> Node0x453e100;
	Node0x453e350:s1 -> Node0x453e350;
	Node0x453e100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%67:\l67:                                               \l  %68 = phi i32 [ 0, %17 ], [ %64, %22 ]\l  %69 = icmp eq i32 %18, 0\l  br i1 %69, label %85, label %70\l|{<s0>T|<s1>F}}"];
	Node0x453e100:s0 -> Node0x453d5a0;
	Node0x453e100:s1 -> Node0x4540c10;
	Node0x4540c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ %82, %70 ], [ %68, %67 ]\l  %72 = phi i32 [ %83, %70 ], [ 0, %67 ]\l  %73 = zext i32 %71 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = mul i32 %71, %3\l  %77 = add i32 %76, %13\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  %80 = load float, float addrspace(1)* %79, align 4, !tbaa !7\l  %81 = fdiv contract float %80, %75\l  store float %81, float addrspace(1)* %79, align 4, !tbaa !7\l  %82 = add nuw i32 %71, 1\l  %83 = add i32 %72, 1\l  %84 = icmp eq i32 %83, %18\l  br i1 %84, label %85, label %70, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4540c10:s0 -> Node0x453d5a0;
	Node0x4540c10:s1 -> Node0x4540c10;
	Node0x453d5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%85:\l85:                                               \l  ret void\l}"];
}
