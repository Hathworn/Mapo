digraph "CFG for '_Z22BernoulliNBLearnKernelPfS_PKfjjj' function" {
	label="CFG for '_Z22BernoulliNBLearnKernelPfS_PKfjjj' function";

	Node0x54738e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %5\l  %17 = icmp ne i32 %4, 0\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %139\l|{<s0>T|<s1>F}}"];
	Node0x54738e0:s0 -> Node0x54759c0;
	Node0x54738e0:s1 -> Node0x5475a50;
	Node0x54759c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%19:\l19:                                               \l  %20 = icmp eq i32 %15, 0\l  %21 = uitofp i32 %3 to float\l  br i1 %20, label %27, label %22\l|{<s0>T|<s1>F}}"];
	Node0x54759c0:s0 -> Node0x5475c90;
	Node0x54759c0:s1 -> Node0x5475ce0;
	Node0x5475ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%22:\l22:                                               \l  %23 = and i32 %4, 3\l  %24 = icmp ult i32 %4, 4\l  br i1 %24, label %121, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5475ce0:s0 -> Node0x5475fa0;
	Node0x5475ce0:s1 -> Node0x5475ff0;
	Node0x5475ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%25:\l25:                                               \l  %26 = and i32 %4, -4\l  br label %32\l}"];
	Node0x5475ff0 -> Node0x54761f0;
	Node0x5475c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%27:\l27:                                               \l  %28 = and i32 %4, 1\l  %29 = icmp eq i32 %4, 1\l  br i1 %29, label %106, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5475c90:s0 -> Node0x5476400;
	Node0x5475c90:s1 -> Node0x5476450;
	Node0x5476450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%30:\l30:                                               \l  %31 = and i32 %4, -2\l  br label %77\l}"];
	Node0x5476450 -> Node0x5476650;
	Node0x54761f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %25 ], [ %74, %32 ]\l  %34 = phi i32 [ 0, %25 ], [ %75, %32 ]\l  %35 = zext i32 %33 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %38 = mul i32 %33, %5\l  %39 = add i32 %38, %15\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = fdiv contract float %42, %37\l  store float %43, float addrspace(1)* %41, align 4, !tbaa !7\l  %44 = or i32 %33, 1\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = mul i32 %44, %5\l  %49 = add i32 %48, %15\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fdiv contract float %52, %47\l  store float %53, float addrspace(1)* %51, align 4, !tbaa !7\l  %54 = or i32 %33, 2\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7\l  %58 = mul i32 %54, %5\l  %59 = add i32 %58, %15\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fdiv contract float %62, %57\l  store float %63, float addrspace(1)* %61, align 4, !tbaa !7\l  %64 = or i32 %33, 3\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %1, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = mul i32 %64, %5\l  %69 = add i32 %68, %15\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = fdiv contract float %72, %67\l  store float %73, float addrspace(1)* %71, align 4, !tbaa !7\l  %74 = add nuw i32 %33, 4\l  %75 = add i32 %34, 4\l  %76 = icmp eq i32 %75, %26\l  br i1 %76, label %121, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x54761f0:s0 -> Node0x5475fa0;
	Node0x54761f0:s1 -> Node0x54761f0;
	Node0x5476650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %30 ], [ %103, %77 ]\l  %79 = phi i32 [ 0, %30 ], [ %104, %77 ]\l  %80 = zext i32 %78 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = mul i32 %78, %5\l  %84 = add i32 %83, %15\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7\l  %88 = fdiv contract float %87, %82\l  store float %88, float addrspace(1)* %86, align 4, !tbaa !7\l  %89 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %90 = fdiv contract float %89, %21\l  store float %90, float addrspace(1)* %81, align 4, !tbaa !7\l  %91 = or i32 %78, 1\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %95 = mul i32 %91, %5\l  %96 = add i32 %95, %15\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  %100 = fdiv contract float %99, %94\l  store float %100, float addrspace(1)* %98, align 4, !tbaa !7\l  %101 = load float, float addrspace(1)* %93, align 4, !tbaa !7\l  %102 = fdiv contract float %101, %21\l  store float %102, float addrspace(1)* %93, align 4, !tbaa !7\l  %103 = add nuw i32 %78, 2\l  %104 = add i32 %79, 2\l  %105 = icmp eq i32 %104, %31\l  br i1 %105, label %106, label %77, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5476650:s0 -> Node0x5476400;
	Node0x5476650:s1 -> Node0x5476650;
	Node0x5476400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%106:\l106:                                              \l  %107 = phi i32 [ 0, %27 ], [ %103, %77 ]\l  %108 = icmp eq i32 %28, 0\l  br i1 %108, label %139, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5476400:s0 -> Node0x5475a50;
	Node0x5476400:s1 -> Node0x547a710;
	Node0x547a710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%109:\l109:                                              \l  %110 = zext i32 %107 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %1, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = mul i32 %107, %5\l  %114 = add i32 %113, %15\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = fdiv contract float %117, %112\l  store float %118, float addrspace(1)* %116, align 4, !tbaa !7\l  %119 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %120 = fdiv contract float %119, %21\l  store float %120, float addrspace(1)* %111, align 4, !tbaa !7\l  br label %139\l}"];
	Node0x547a710 -> Node0x5475a50;
	Node0x5475fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%121:\l121:                                              \l  %122 = phi i32 [ 0, %22 ], [ %74, %32 ]\l  %123 = icmp eq i32 %23, 0\l  br i1 %123, label %139, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5475fa0:s0 -> Node0x5475a50;
	Node0x5475fa0:s1 -> Node0x547b090;
	Node0x547b090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi i32 [ %136, %124 ], [ %122, %121 ]\l  %126 = phi i32 [ %137, %124 ], [ 0, %121 ]\l  %127 = zext i32 %125 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %130 = mul i32 %125, %5\l  %131 = add i32 %130, %15\l  %132 = zext i32 %131 to i64\l  %133 = getelementptr inbounds float, float addrspace(1)* %0, i64 %132\l  %134 = load float, float addrspace(1)* %133, align 4, !tbaa !7\l  %135 = fdiv contract float %134, %129\l  store float %135, float addrspace(1)* %133, align 4, !tbaa !7\l  %136 = add nuw i32 %125, 1\l  %137 = add i32 %126, 1\l  %138 = icmp eq i32 %137, %23\l  br i1 %138, label %139, label %124, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x547b090:s0 -> Node0x5475a50;
	Node0x547b090:s1 -> Node0x547b090;
	Node0x5475a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%139:\l139:                                              \l  ret void\l}"];
}
