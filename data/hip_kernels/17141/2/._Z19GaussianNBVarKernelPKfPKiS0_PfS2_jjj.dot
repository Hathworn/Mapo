digraph "CFG for '_Z19GaussianNBVarKernelPKfPKiS0_PfS2_jjj' function" {
	label="CFG for '_Z19GaussianNBVarKernelPKfPKiS0_PfS2_jjj' function";

	Node0x46093b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %9\l  %18 = icmp ult i32 %17, %7\l  br i1 %18, label %19, label %269\l|{<s0>T|<s1>F}}"];
	Node0x46093b0:s0 -> Node0x460b320;
	Node0x46093b0:s1 -> Node0x460b3b0;
	Node0x460b320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%19:\l19:                                               \l  %20 = icmp eq i32 %5, 0\l  br i1 %20, label %21, label %28\l|{<s0>T|<s1>F}}"];
	Node0x460b320:s0 -> Node0x460b580;
	Node0x460b320:s1 -> Node0x460b5d0;
	Node0x460b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%21:\l21:                                               \l  %22 = icmp eq i32 %6, 0\l  br i1 %22, label %269, label %23\l|{<s0>T|<s1>F}}"];
	Node0x460b580:s0 -> Node0x460b3b0;
	Node0x460b580:s1 -> Node0x460b7a0;
	Node0x460b7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%23:\l23:                                               \l  %24 = and i32 %6, 3\l  %25 = icmp ult i32 %6, 4\l  br i1 %25, label %250, label %26\l|{<s0>T|<s1>F}}"];
	Node0x460b7a0:s0 -> Node0x460ba20;
	Node0x460b7a0:s1 -> Node0x460ba70;
	Node0x460ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%26:\l26:                                               \l  %27 = and i32 %6, -4\l  br label %201\l}"];
	Node0x460ba70 -> Node0x460bc70;
	Node0x460b5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %199, %28 ], [ 0, %19 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %33 = mul i32 %29, %7\l  %34 = add i32 %33, %17\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !11\l  %38 = mul i32 %32, %7\l  %39 = add i32 %38, %17\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !11\l  %43 = fsub contract float %37, %42\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = tail call float @llvm.amdgcn.frexp.mant.f32(float %44)\l  %46 = fcmp olt float %45, 0x3FE5555560000000\l  %47 = zext i1 %46 to i32\l  %48 = tail call float @llvm.amdgcn.ldexp.f32(float %45, i32 %47)\l  %49 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %44)\l  %50 = sub nsw i32 %49, %47\l  %51 = fadd float %48, -1.000000e+00\l  %52 = fadd float %48, 1.000000e+00\l  %53 = fadd float %52, -1.000000e+00\l  %54 = fsub float %48, %53\l  %55 = tail call float @llvm.amdgcn.rcp.f32(float %52)\l  %56 = fmul float %51, %55\l  %57 = fmul float %52, %56\l  %58 = fneg float %57\l  %59 = tail call float @llvm.fma.f32(float %56, float %52, float %58)\l  %60 = tail call float @llvm.fma.f32(float %56, float %54, float %59)\l  %61 = fadd float %57, %60\l  %62 = fsub float %61, %57\l  %63 = fsub float %60, %62\l  %64 = fsub float %51, %61\l  %65 = fsub float %51, %64\l  %66 = fsub float %65, %61\l  %67 = fsub float %66, %63\l  %68 = fadd float %64, %67\l  %69 = fmul float %55, %68\l  %70 = fadd float %56, %69\l  %71 = fsub float %70, %56\l  %72 = fsub float %69, %71\l  %73 = fmul float %70, %70\l  %74 = fneg float %73\l  %75 = tail call float @llvm.fma.f32(float %70, float %70, float %74)\l  %76 = fmul float %72, 2.000000e+00\l  %77 = tail call float @llvm.fma.f32(float %70, float %76, float %75)\l  %78 = fadd float %73, %77\l  %79 = fsub float %78, %73\l  %80 = fsub float %77, %79\l  %81 = tail call float @llvm.fmuladd.f32(float %78, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %82 = tail call float @llvm.fmuladd.f32(float %78, float %81, float\l... 0x3FD999BDE0000000)\l  %83 = sitofp i32 %50 to float\l  %84 = fmul float %83, 0x3FE62E4300000000\l  %85 = fneg float %84\l  %86 = tail call float @llvm.fma.f32(float %83, float 0x3FE62E4300000000,\l... float %85)\l  %87 = tail call float @llvm.fma.f32(float %83, float 0xBE205C6100000000,\l... float %86)\l  %88 = fadd float %84, %87\l  %89 = fsub float %88, %84\l  %90 = fsub float %87, %89\l  %91 = tail call float @llvm.amdgcn.ldexp.f32(float %70, i32 1)\l  %92 = fmul float %70, %78\l  %93 = fneg float %92\l  %94 = tail call float @llvm.fma.f32(float %78, float %70, float %93)\l  %95 = tail call float @llvm.fma.f32(float %78, float %72, float %94)\l  %96 = tail call float @llvm.fma.f32(float %80, float %70, float %95)\l  %97 = fadd float %92, %96\l  %98 = fsub float %97, %92\l  %99 = fsub float %96, %98\l  %100 = fmul float %78, %82\l  %101 = fneg float %100\l  %102 = tail call float @llvm.fma.f32(float %78, float %82, float %101)\l  %103 = tail call float @llvm.fma.f32(float %80, float %82, float %102)\l  %104 = fadd float %100, %103\l  %105 = fsub float %104, %100\l  %106 = fsub float %103, %105\l  %107 = fadd float %104, 0x3FE5555540000000\l  %108 = fadd float %107, 0xBFE5555540000000\l  %109 = fsub float %104, %108\l  %110 = fadd float %106, 0x3E2E720200000000\l  %111 = fadd float %110, %109\l  %112 = fadd float %107, %111\l  %113 = fsub float %112, %107\l  %114 = fsub float %111, %113\l  %115 = fmul float %97, %112\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %97, float %112, float %116)\l  %118 = tail call float @llvm.fma.f32(float %97, float %114, float %117)\l  %119 = tail call float @llvm.fma.f32(float %99, float %112, float %118)\l  %120 = tail call float @llvm.amdgcn.ldexp.f32(float %72, i32 1)\l  %121 = fadd float %115, %119\l  %122 = fsub float %121, %115\l  %123 = fsub float %119, %122\l  %124 = fadd float %91, %121\l  %125 = fsub float %124, %91\l  %126 = fsub float %121, %125\l  %127 = fadd float %120, %123\l  %128 = fadd float %127, %126\l  %129 = fadd float %124, %128\l  %130 = fsub float %129, %124\l  %131 = fsub float %128, %130\l  %132 = fadd float %88, %129\l  %133 = fsub float %132, %88\l  %134 = fsub float %132, %133\l  %135 = fsub float %88, %134\l  %136 = fsub float %129, %133\l  %137 = fadd float %136, %135\l  %138 = fadd float %90, %131\l  %139 = fsub float %138, %90\l  %140 = fsub float %138, %139\l  %141 = fsub float %90, %140\l  %142 = fsub float %131, %139\l  %143 = fadd float %142, %141\l  %144 = fadd float %138, %137\l  %145 = fadd float %132, %144\l  %146 = fsub float %145, %132\l  %147 = fsub float %144, %146\l  %148 = fadd float %143, %147\l  %149 = fadd float %145, %148\l  %150 = fsub float %149, %145\l  %151 = fsub float %148, %150\l  %152 = fmul float %149, 2.000000e+00\l  %153 = fneg float %152\l  %154 = tail call float @llvm.fma.f32(float %149, float 2.000000e+00, float\l... %153)\l  %155 = fmul float %149, 0.000000e+00\l  %156 = tail call float @llvm.fma.f32(float %151, float 2.000000e+00, float\l... %155)\l  %157 = fadd float %154, %156\l  %158 = fadd float %152, %157\l  %159 = fsub float %158, %152\l  %160 = fsub float %157, %159\l  %161 = tail call float @llvm.fabs.f32(float %152) #3\l  %162 = fcmp oeq float %161, 0x7FF0000000000000\l  %163 = select i1 %162, float %152, float %158\l  %164 = tail call float @llvm.fabs.f32(float %163) #3\l  %165 = fcmp oeq float %164, 0x7FF0000000000000\l  %166 = select i1 %165, float 0.000000e+00, float %160\l  %167 = fcmp oeq float %163, 0x40562E4300000000\l  %168 = select i1 %167, float 0x3EE0000000000000, float 0.000000e+00\l  %169 = fsub float %163, %168\l  %170 = fadd float %168, %166\l  %171 = fmul float %169, 0x3FF7154760000000\l  %172 = tail call float @llvm.rint.f32(float %171)\l  %173 = fcmp ogt float %169, 0x40562E4300000000\l  %174 = fcmp olt float %169, 0xC059D1DA00000000\l  %175 = fneg float %171\l  %176 = tail call float @llvm.fma.f32(float %169, float 0x3FF7154760000000,\l... float %175)\l  %177 = tail call float @llvm.fma.f32(float %169, float 0x3E54AE0BE0000000,\l... float %176)\l  %178 = fsub float %171, %172\l  %179 = fadd float %177, %178\l  %180 = tail call float @llvm.exp2.f32(float %179)\l  %181 = fptosi float %172 to i32\l  %182 = tail call float @llvm.amdgcn.ldexp.f32(float %180, i32 %181)\l  %183 = select i1 %174, float 0.000000e+00, float %182\l  %184 = select i1 %173, float 0x7FF0000000000000, float %183\l  %185 = tail call float @llvm.fma.f32(float %184, float %170, float %184)\l  %186 = tail call float @llvm.fabs.f32(float %184) #3\l  %187 = fcmp oeq float %186, 0x7FF0000000000000\l  %188 = select i1 %187, float %184, float %185\l  %189 = tail call float @llvm.fabs.f32(float %188)\l  %190 = fcmp oeq float %44, 0x7FF0000000000000\l  %191 = fcmp oeq float %43, 0.000000e+00\l  %192 = select i1 %190, float 0x7FF0000000000000, float %189\l  %193 = select i1 %191, float 0.000000e+00, float %192\l  %194 = fcmp uno float %43, 0.000000e+00\l  %195 = select i1 %194, float 0x7FF8000000000000, float %193\l  %196 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %197 = load float, float addrspace(1)* %196, align 4, !tbaa !11\l  %198 = fadd contract float %197, %195\l  store float %198, float addrspace(1)* %196, align 4, !tbaa !11\l  %199 = add nuw i32 %29, 1\l  %200 = icmp eq i32 %199, %5\l  br i1 %200, label %21, label %28, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x460b5d0:s0 -> Node0x460b580;
	Node0x460b5d0:s1 -> Node0x460b5d0;
	Node0x460bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%201:\l201:                                              \l  %202 = phi i32 [ 0, %26 ], [ %247, %201 ]\l  %203 = phi i32 [ 0, %26 ], [ %248, %201 ]\l  %204 = zext i32 %202 to i64\l  %205 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %204\l  %206 = load i32, i32 addrspace(1)* %205, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %207 = sitofp i32 %206 to float\l  %208 = mul i32 %202, %7\l  %209 = add i32 %208, %17\l  %210 = zext i32 %209 to i64\l  %211 = getelementptr inbounds float, float addrspace(1)* %3, i64 %210\l  %212 = load float, float addrspace(1)* %211, align 4, !tbaa !11\l  %213 = fdiv contract float %212, %207\l  store float %213, float addrspace(1)* %211, align 4, !tbaa !11\l  %214 = or i32 %202, 1\l  %215 = zext i32 %214 to i64\l  %216 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %215\l  %217 = load i32, i32 addrspace(1)* %216, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %218 = sitofp i32 %217 to float\l  %219 = mul i32 %214, %7\l  %220 = add i32 %219, %17\l  %221 = zext i32 %220 to i64\l  %222 = getelementptr inbounds float, float addrspace(1)* %3, i64 %221\l  %223 = load float, float addrspace(1)* %222, align 4, !tbaa !11\l  %224 = fdiv contract float %223, %218\l  store float %224, float addrspace(1)* %222, align 4, !tbaa !11\l  %225 = or i32 %202, 2\l  %226 = zext i32 %225 to i64\l  %227 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %226\l  %228 = load i32, i32 addrspace(1)* %227, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %229 = sitofp i32 %228 to float\l  %230 = mul i32 %225, %7\l  %231 = add i32 %230, %17\l  %232 = zext i32 %231 to i64\l  %233 = getelementptr inbounds float, float addrspace(1)* %3, i64 %232\l  %234 = load float, float addrspace(1)* %233, align 4, !tbaa !11\l  %235 = fdiv contract float %234, %229\l  store float %235, float addrspace(1)* %233, align 4, !tbaa !11\l  %236 = or i32 %202, 3\l  %237 = zext i32 %236 to i64\l  %238 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %237\l  %239 = load i32, i32 addrspace(1)* %238, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %240 = sitofp i32 %239 to float\l  %241 = mul i32 %236, %7\l  %242 = add i32 %241, %17\l  %243 = zext i32 %242 to i64\l  %244 = getelementptr inbounds float, float addrspace(1)* %3, i64 %243\l  %245 = load float, float addrspace(1)* %244, align 4, !tbaa !11\l  %246 = fdiv contract float %245, %240\l  store float %246, float addrspace(1)* %244, align 4, !tbaa !11\l  %247 = add nuw i32 %202, 4\l  %248 = add i32 %203, 4\l  %249 = icmp eq i32 %248, %27\l  br i1 %249, label %250, label %201, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x460bc70:s0 -> Node0x460ba20;
	Node0x460bc70:s1 -> Node0x460bc70;
	Node0x460ba20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%250:\l250:                                              \l  %251 = phi i32 [ 0, %23 ], [ %247, %201 ]\l  %252 = icmp eq i32 %24, 0\l  br i1 %252, label %269, label %253\l|{<s0>T|<s1>F}}"];
	Node0x460ba20:s0 -> Node0x460b3b0;
	Node0x460ba20:s1 -> Node0x46189a0;
	Node0x46189a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%253:\l253:                                              \l  %254 = phi i32 [ %266, %253 ], [ %251, %250 ]\l  %255 = phi i32 [ %267, %253 ], [ 0, %250 ]\l  %256 = zext i32 %254 to i64\l  %257 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %256\l  %258 = load i32, i32 addrspace(1)* %257, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %259 = sitofp i32 %258 to float\l  %260 = mul i32 %254, %7\l  %261 = add i32 %260, %17\l  %262 = zext i32 %261 to i64\l  %263 = getelementptr inbounds float, float addrspace(1)* %3, i64 %262\l  %264 = load float, float addrspace(1)* %263, align 4, !tbaa !11\l  %265 = fdiv contract float %264, %259\l  store float %265, float addrspace(1)* %263, align 4, !tbaa !11\l  %266 = add nuw i32 %254, 1\l  %267 = add i32 %255, 1\l  %268 = icmp eq i32 %267, %24\l  br i1 %268, label %269, label %253, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x46189a0:s0 -> Node0x460b3b0;
	Node0x46189a0:s1 -> Node0x46189a0;
	Node0x460b3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%269:\l269:                                              \l  ret void\l}"];
}
