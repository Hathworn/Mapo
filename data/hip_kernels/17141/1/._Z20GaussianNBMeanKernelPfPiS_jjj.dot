digraph "CFG for '_Z20GaussianNBMeanKernelPfPiS_jjj' function" {
	label="CFG for '_Z20GaussianNBMeanKernelPfPiS_jjj' function";

	Node0x4ce9b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %5\l  %17 = icmp ne i32 %4, 0\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %147\l|{<s0>T|<s1>F}}"];
	Node0x4ce9b10:s0 -> Node0x4cebbb0;
	Node0x4ce9b10:s1 -> Node0x4cebc40;
	Node0x4cebbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%19:\l19:                                               \l  %20 = icmp eq i32 %15, 0\l  %21 = uitofp i32 %3 to float\l  br i1 %20, label %27, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4cebbb0:s0 -> Node0x4cebe80;
	Node0x4cebbb0:s1 -> Node0x4cebed0;
	Node0x4cebed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%22:\l22:                                               \l  %23 = and i32 %4, 3\l  %24 = icmp ult i32 %4, 4\l  br i1 %24, label %128, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4cebed0:s0 -> Node0x4cec190;
	Node0x4cebed0:s1 -> Node0x4cec1e0;
	Node0x4cec1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%25:\l25:                                               \l  %26 = and i32 %4, -4\l  br label %32\l}"];
	Node0x4cec1e0 -> Node0x4cec3e0;
	Node0x4cebe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%27:\l27:                                               \l  %28 = and i32 %4, 1\l  %29 = icmp eq i32 %4, 1\l  br i1 %29, label %112, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4cebe80:s0 -> Node0x4cec5f0;
	Node0x4cebe80:s1 -> Node0x4cec640;
	Node0x4cec640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%30:\l30:                                               \l  %31 = and i32 %4, -2\l  br label %81\l}"];
	Node0x4cec640 -> Node0x4cec840;
	Node0x4cec3e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %25 ], [ %78, %32 ]\l  %34 = phi i32 [ 0, %25 ], [ %79, %32 ]\l  %35 = zext i32 %33 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %38 = sitofp i32 %37 to float\l  %39 = mul i32 %33, %5\l  %40 = add i32 %39, %15\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !11\l  %44 = fdiv contract float %43, %38\l  store float %44, float addrspace(1)* %42, align 4, !tbaa !11\l  %45 = or i32 %33, 1\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = sitofp i32 %48 to float\l  %50 = mul i32 %45, %5\l  %51 = add i32 %50, %15\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !11\l  %55 = fdiv contract float %54, %49\l  store float %55, float addrspace(1)* %53, align 4, !tbaa !11\l  %56 = or i32 %33, 2\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %60 = sitofp i32 %59 to float\l  %61 = mul i32 %56, %5\l  %62 = add i32 %61, %15\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !11\l  %66 = fdiv contract float %65, %60\l  store float %66, float addrspace(1)* %64, align 4, !tbaa !11\l  %67 = or i32 %33, 3\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %71 = sitofp i32 %70 to float\l  %72 = mul i32 %67, %5\l  %73 = add i32 %72, %15\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !11\l  %77 = fdiv contract float %76, %71\l  store float %77, float addrspace(1)* %75, align 4, !tbaa !11\l  %78 = add nuw i32 %33, 4\l  %79 = add i32 %34, 4\l  %80 = icmp eq i32 %79, %26\l  br i1 %80, label %128, label %32, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cec3e0:s0 -> Node0x4cec190;
	Node0x4cec3e0:s1 -> Node0x4cec3e0;
	Node0x4cec840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%81:\l81:                                               \l  %82 = phi i32 [ 0, %30 ], [ %109, %81 ]\l  %83 = phi i32 [ 0, %30 ], [ %110, %81 ]\l  %84 = zext i32 %82 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %87 = sitofp i32 %86 to float\l  %88 = mul i32 %82, %5\l  %89 = add i32 %88, %15\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %0, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !11\l  %93 = fdiv contract float %92, %87\l  store float %93, float addrspace(1)* %91, align 4, !tbaa !11\l  %94 = fdiv contract float %87, %21\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  store float %94, float addrspace(1)* %95, align 4, !tbaa !11\l  %96 = or i32 %82, 1\l  %97 = zext i32 %96 to i64\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %97\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %100 = sitofp i32 %99 to float\l  %101 = mul i32 %96, %5\l  %102 = add i32 %101, %15\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !11\l  %106 = fdiv contract float %105, %100\l  store float %106, float addrspace(1)* %104, align 4, !tbaa !11\l  %107 = fdiv contract float %100, %21\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %97\l  store float %107, float addrspace(1)* %108, align 4, !tbaa !11\l  %109 = add nuw i32 %82, 2\l  %110 = add i32 %83, 2\l  %111 = icmp eq i32 %110, %31\l  br i1 %111, label %112, label %81, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cec840:s0 -> Node0x4cec5f0;
	Node0x4cec840:s1 -> Node0x4cec840;
	Node0x4cec5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%112:\l112:                                              \l  %113 = phi i32 [ 0, %27 ], [ %109, %81 ]\l  %114 = icmp eq i32 %28, 0\l  br i1 %114, label %147, label %115\l|{<s0>T|<s1>F}}"];
	Node0x4cec5f0:s0 -> Node0x4cebc40;
	Node0x4cec5f0:s1 -> Node0x4cf1b30;
	Node0x4cf1b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%115:\l115:                                              \l  %116 = zext i32 %113 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %116\l  %118 = load i32, i32 addrspace(1)* %117, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %119 = sitofp i32 %118 to float\l  %120 = mul i32 %113, %5\l  %121 = add i32 %120, %15\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !11\l  %125 = fdiv contract float %124, %119\l  store float %125, float addrspace(1)* %123, align 4, !tbaa !11\l  %126 = fdiv contract float %119, %21\l  %127 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  store float %126, float addrspace(1)* %127, align 4, !tbaa !11\l  br label %147\l}"];
	Node0x4cf1b30 -> Node0x4cebc40;
	Node0x4cec190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%128:\l128:                                              \l  %129 = phi i32 [ 0, %22 ], [ %78, %32 ]\l  %130 = icmp eq i32 %23, 0\l  br i1 %130, label %147, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4cec190:s0 -> Node0x4cebc40;
	Node0x4cec190:s1 -> Node0x4cef3f0;
	Node0x4cef3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi i32 [ %144, %131 ], [ %129, %128 ]\l  %133 = phi i32 [ %145, %131 ], [ 0, %128 ]\l  %134 = zext i32 %132 to i64\l  %135 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %134\l  %136 = load i32, i32 addrspace(1)* %135, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %137 = sitofp i32 %136 to float\l  %138 = mul i32 %132, %5\l  %139 = add i32 %138, %15\l  %140 = zext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %0, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !11\l  %143 = fdiv contract float %142, %137\l  store float %143, float addrspace(1)* %141, align 4, !tbaa !11\l  %144 = add nuw i32 %132, 1\l  %145 = add i32 %133, 1\l  %146 = icmp eq i32 %145, %23\l  br i1 %146, label %147, label %131, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4cef3f0:s0 -> Node0x4cebc40;
	Node0x4cef3f0:s1 -> Node0x4cef3f0;
	Node0x4cebc40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%147:\l147:                                              \l  ret void\l}"];
}
