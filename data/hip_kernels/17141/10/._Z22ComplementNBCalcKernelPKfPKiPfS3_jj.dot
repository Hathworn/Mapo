digraph "CFG for '_Z22ComplementNBCalcKernelPKfPKiPfS3_jj' function" {
	label="CFG for '_Z22ComplementNBCalcKernelPKfPKiPfS3_jj' function";

	Node0x5a28730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %5\l  %17 = icmp ne i32 %4, 0\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %129\l|{<s0>T|<s1>F}}"];
	Node0x5a28730:s0 -> Node0x5a2a810;
	Node0x5a28730:s1 -> Node0x5a2a8a0;
	Node0x5a2a810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = zext i32 %15 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %3, i64 %20\l  %22 = and i32 %4, 3\l  %23 = icmp ult i32 %4, 4\l  br i1 %23, label %103, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5a2a810:s0 -> Node0x5a2ac70;
	Node0x5a2a810:s1 -> Node0x5a2acc0;
	Node0x5a2acc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %4, -4\l  br label %26\l}"];
	Node0x5a2acc0 -> Node0x5a2aec0;
	Node0x5a2aec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi i32 [ 0, %24 ], [ %100, %26 ]\l  %28 = phi i32 [ 0, %24 ], [ %101, %26 ]\l  %29 = zext i32 %27 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = mul i32 %27, %5\l  %33 = add i32 %32, %15\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !11\l  %37 = mul i32 %31, %5\l  %38 = add i32 %37, %15\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !11\l  %42 = fadd contract float %36, %41\l  store float %42, float addrspace(1)* %40, align 4, !tbaa !11\l  %43 = load float, float addrspace(1)* %35, align 4, !tbaa !11\l  %44 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %45 = fadd contract float %43, %44\l  store float %45, float addrspace(1)* %21, align 4, !tbaa !11\l  %46 = or i32 %27, 1\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %50 = mul i32 %46, %5\l  %51 = add i32 %50, %15\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !11\l  %55 = mul i32 %49, %5\l  %56 = add i32 %55, %15\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !11\l  %60 = fadd contract float %54, %59\l  store float %60, float addrspace(1)* %58, align 4, !tbaa !11\l  %61 = load float, float addrspace(1)* %53, align 4, !tbaa !11\l  %62 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %63 = fadd contract float %61, %62\l  store float %63, float addrspace(1)* %21, align 4, !tbaa !11\l  %64 = or i32 %27, 2\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %68 = mul i32 %64, %5\l  %69 = add i32 %68, %15\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !11\l  %73 = mul i32 %67, %5\l  %74 = add i32 %73, %15\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !11\l  %78 = fadd contract float %72, %77\l  store float %78, float addrspace(1)* %76, align 4, !tbaa !11\l  %79 = load float, float addrspace(1)* %71, align 4, !tbaa !11\l  %80 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %81 = fadd contract float %79, %80\l  store float %81, float addrspace(1)* %21, align 4, !tbaa !11\l  %82 = or i32 %27, 3\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %86 = mul i32 %82, %5\l  %87 = add i32 %86, %15\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !11\l  %91 = mul i32 %85, %5\l  %92 = add i32 %91, %15\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %2, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !11\l  %96 = fadd contract float %90, %95\l  store float %96, float addrspace(1)* %94, align 4, !tbaa !11\l  %97 = load float, float addrspace(1)* %89, align 4, !tbaa !11\l  %98 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %99 = fadd contract float %97, %98\l  store float %99, float addrspace(1)* %21, align 4, !tbaa !11\l  %100 = add nuw i32 %27, 4\l  %101 = add i32 %28, 4\l  %102 = icmp eq i32 %101, %25\l  br i1 %102, label %103, label %26, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a2aec0:s0 -> Node0x5a2ac70;
	Node0x5a2aec0:s1 -> Node0x5a2aec0;
	Node0x5a2ac70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%103:\l103:                                              \l  %104 = phi i32 [ 0, %19 ], [ %100, %26 ]\l  %105 = icmp eq i32 %22, 0\l  br i1 %105, label %129, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5a2ac70:s0 -> Node0x5a2a8a0;
	Node0x5a2ac70:s1 -> Node0x5a2f8c0;
	Node0x5a2f8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %126, %106 ], [ %104, %103 ]\l  %108 = phi i32 [ %127, %106 ], [ 0, %103 ]\l  %109 = zext i32 %107 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %112 = mul i32 %107, %5\l  %113 = add i32 %112, %15\l  %114 = zext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %0, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !11\l  %117 = mul i32 %111, %5\l  %118 = add i32 %117, %15\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %2, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !11\l  %122 = fadd contract float %116, %121\l  store float %122, float addrspace(1)* %120, align 4, !tbaa !11\l  %123 = load float, float addrspace(1)* %115, align 4, !tbaa !11\l  %124 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %125 = fadd contract float %123, %124\l  store float %125, float addrspace(1)* %21, align 4, !tbaa !11\l  %126 = add nuw i32 %107, 1\l  %127 = add i32 %108, 1\l  %128 = icmp eq i32 %127, %22\l  br i1 %128, label %129, label %106, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5a2f8c0:s0 -> Node0x5a2a8a0;
	Node0x5a2f8c0:s1 -> Node0x5a2f8c0;
	Node0x5a2a8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%129:\l129:                                              \l  ret void\l}"];
}
