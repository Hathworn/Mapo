digraph "CFG for '_Z21reduced_sum_axis_zeroPKfPfii' function" {
	label="CFG for '_Z21reduced_sum_axis_zeroPKfPfii' function";

	Node0x4cea070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4cea070:s0 -> Node0x4cebfb0;
	Node0x4cea070:s1 -> Node0x4cec040;
	Node0x4cebfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  store float 0.000000e+00, float addrspace(1)* %17, align 4, !tbaa !7\l  %18 = sdiv i32 %2, %3\l  %19 = icmp sgt i32 %18, 0\l  br i1 %19, label %20, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4cebfb0:s0 -> Node0x4ced010;
	Node0x4cebfb0:s1 -> Node0x4cec040;
	Node0x4ced010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = and i32 %18, 7\l  %22 = icmp ult i32 %18, 8\l  br i1 %22, label %87, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4ced010:s0 -> Node0x4ced2d0;
	Node0x4ced010:s1 -> Node0x4ced320;
	Node0x4ced320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %18, -8\l  br label %25\l}"];
	Node0x4ced320 -> Node0x4ced520;
	Node0x4ced520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%25:\l25:                                               \l  %26 = phi float [ 0.000000e+00, %23 ], [ %83, %25 ]\l  %27 = phi i32 [ 0, %23 ], [ %84, %25 ]\l  %28 = phi i32 [ 0, %23 ], [ %85, %25 ]\l  %29 = mul nsw i32 %27, %3\l  %30 = add nsw i32 %29, %13\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7\l  %34 = fadd contract float %33, %26\l  store float %34, float addrspace(1)* %17, align 4, !tbaa !7\l  %35 = or i32 %27, 1\l  %36 = mul nsw i32 %35, %3\l  %37 = add nsw i32 %36, %13\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %41 = fadd contract float %40, %34\l  store float %41, float addrspace(1)* %17, align 4, !tbaa !7\l  %42 = or i32 %27, 2\l  %43 = mul nsw i32 %42, %3\l  %44 = add nsw i32 %43, %13\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = fadd contract float %47, %41\l  store float %48, float addrspace(1)* %17, align 4, !tbaa !7\l  %49 = or i32 %27, 3\l  %50 = mul nsw i32 %49, %3\l  %51 = add nsw i32 %50, %13\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = fadd contract float %54, %48\l  store float %55, float addrspace(1)* %17, align 4, !tbaa !7\l  %56 = or i32 %27, 4\l  %57 = mul nsw i32 %56, %3\l  %58 = add nsw i32 %57, %13\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fadd contract float %61, %55\l  store float %62, float addrspace(1)* %17, align 4, !tbaa !7\l  %63 = or i32 %27, 5\l  %64 = mul nsw i32 %63, %3\l  %65 = add nsw i32 %64, %13\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fadd contract float %68, %62\l  store float %69, float addrspace(1)* %17, align 4, !tbaa !7\l  %70 = or i32 %27, 6\l  %71 = mul nsw i32 %70, %3\l  %72 = add nsw i32 %71, %13\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = fadd contract float %75, %69\l  store float %76, float addrspace(1)* %17, align 4, !tbaa !7\l  %77 = or i32 %27, 7\l  %78 = mul nsw i32 %77, %3\l  %79 = add nsw i32 %78, %13\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = fadd contract float %82, %76\l  store float %83, float addrspace(1)* %17, align 4, !tbaa !7\l  %84 = add nuw nsw i32 %27, 8\l  %85 = add i32 %28, 8\l  %86 = icmp eq i32 %85, %24\l  br i1 %86, label %87, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ced520:s0 -> Node0x4ced2d0;
	Node0x4ced520:s1 -> Node0x4ced520;
	Node0x4ced2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%87:\l87:                                               \l  %88 = phi float [ 0.000000e+00, %20 ], [ %83, %25 ]\l  %89 = phi i32 [ 0, %20 ], [ %84, %25 ]\l  %90 = icmp eq i32 %21, 0\l  br i1 %90, label %104, label %91\l|{<s0>T|<s1>F}}"];
	Node0x4ced2d0:s0 -> Node0x4cec040;
	Node0x4ced2d0:s1 -> Node0x4cf0a30;
	Node0x4cf0a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi float [ %100, %91 ], [ %88, %87 ]\l  %93 = phi i32 [ %101, %91 ], [ %89, %87 ]\l  %94 = phi i32 [ %102, %91 ], [ 0, %87 ]\l  %95 = mul nsw i32 %93, %3\l  %96 = add nsw i32 %95, %13\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  %100 = fadd contract float %99, %92\l  store float %100, float addrspace(1)* %17, align 4, !tbaa !7\l  %101 = add nuw nsw i32 %93, 1\l  %102 = add i32 %94, 1\l  %103 = icmp eq i32 %102, %21\l  br i1 %103, label %104, label %91, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cf0a30:s0 -> Node0x4cec040;
	Node0x4cf0a30:s1 -> Node0x4cf0a30;
	Node0x4cec040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%104:\l104:                                              \l  ret void\l}"];
}
