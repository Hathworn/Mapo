digraph "CFG for '_Z14softmax_kernelllPKfPf' function" {
	label="CFG for '_Z14softmax_kernelllPKfPf' function";

	Node0x527c2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %5, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %15, %16\l  %19 = mul i32 %18, %10\l  %20 = add i32 %19, %17\l  %21 = sext i32 %20 to i64\l  %22 = icmp slt i64 %21, %0\l  br i1 %22, label %23, label %91\l|{<s0>T|<s1>F}}"];
	Node0x527c2d0:s0 -> Node0x527fa70;
	Node0x527c2d0:s1 -> Node0x527fb00;
	Node0x527fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%23:\l23:                                               \l  %24 = mul nsw i64 %21, %1\l  %25 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %24\l  %27 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = icmp sgt i64 %1, 1\l  br i1 %28, label %32, label %29\l|{<s0>T|<s1>F}}"];
	Node0x527fa70:s0 -> Node0x52800c0;
	Node0x527fa70:s1 -> Node0x5280150;
	Node0x5280150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%29:\l29:                                               \l  %30 = phi float [ %27, %23 ], [ %37, %32 ]\l  %31 = icmp sgt i64 %1, 0\l  br i1 %31, label %43, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5280150:s0 -> Node0x5280430;
	Node0x5280150:s1 -> Node0x52804c0;
	Node0x52800c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%32:\l32:                                               \l  %33 = phi i64 [ %39, %32 ], [ 1, %23 ]\l  %34 = phi float [ %37, %32 ], [ %27, %23 ]\l  %35 = getelementptr inbounds float, float addrspace(1)* %25, i64 %33\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = tail call float @llvm.maxnum.f32(float %34, float %36)\l  %38 = add nuw nsw i64 %33, 1\l  %39 = and i64 %38, 4294967295\l  %40 = icmp slt i64 %39, %1\l  br i1 %40, label %32, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x52800c0:s0 -> Node0x52800c0;
	Node0x52800c0:s1 -> Node0x5280150;
	Node0x52804c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%41:\l41:                                               \l  %42 = phi float [ 0.000000e+00, %29 ], [ %63, %43 ]\l  br i1 %31, label %67, label %91\l|{<s0>T|<s1>F}}"];
	Node0x52804c0:s0 -> Node0x5282050;
	Node0x52804c0:s1 -> Node0x527fb00;
	Node0x5280430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i64 [ %65, %43 ], [ 0, %29 ]\l  %45 = phi float [ %63, %43 ], [ 0.000000e+00, %29 ]\l  %46 = getelementptr inbounds float, float addrspace(1)* %25, i64 %44\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fsub contract float %47, %30\l  %49 = fmul float %48, 0x3FF7154760000000\l  %50 = tail call float @llvm.rint.f32(float %49)\l  %51 = fcmp ogt float %48, 0x40562E4300000000\l  %52 = fcmp olt float %48, 0xC059D1DA00000000\l  %53 = fneg float %49\l  %54 = tail call float @llvm.fma.f32(float %48, float 0x3FF7154760000000,\l... float %53)\l  %55 = tail call float @llvm.fma.f32(float %48, float 0x3E54AE0BE0000000,\l... float %54)\l  %56 = fsub float %49, %50\l  %57 = fadd float %55, %56\l  %58 = tail call float @llvm.exp2.f32(float %57)\l  %59 = fptosi float %50 to i32\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 %59)\l  %61 = select i1 %52, float 0.000000e+00, float %60\l  %62 = select i1 %51, float 0x7FF0000000000000, float %61\l  %63 = fadd contract float %45, %62\l  %64 = add nuw nsw i64 %44, 1\l  %65 = and i64 %64, 4294967295\l  %66 = icmp slt i64 %65, %1\l  br i1 %66, label %43, label %41, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5280430:s0 -> Node0x5280430;
	Node0x5280430:s1 -> Node0x52804c0;
	Node0x5282050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i64 [ %89, %67 ], [ 0, %41 ]\l  %69 = getelementptr inbounds float, float addrspace(1)* %25, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = fsub contract float %70, %30\l  %72 = fmul float %71, 0x3FF7154760000000\l  %73 = tail call float @llvm.rint.f32(float %72)\l  %74 = fcmp ogt float %71, 0x40562E4300000000\l  %75 = fcmp olt float %71, 0xC059D1DA00000000\l  %76 = fneg float %72\l  %77 = tail call float @llvm.fma.f32(float %71, float 0x3FF7154760000000,\l... float %76)\l  %78 = tail call float @llvm.fma.f32(float %71, float 0x3E54AE0BE0000000,\l... float %77)\l  %79 = fsub float %72, %73\l  %80 = fadd float %78, %79\l  %81 = tail call float @llvm.exp2.f32(float %80)\l  %82 = fptosi float %73 to i32\l  %83 = tail call float @llvm.amdgcn.ldexp.f32(float %81, i32 %82)\l  %84 = select i1 %75, float 0.000000e+00, float %83\l  %85 = select i1 %74, float 0x7FF0000000000000, float %84\l  %86 = fdiv contract float %85, %42\l  %87 = getelementptr inbounds float, float addrspace(1)* %26, i64 %68\l  store float %86, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nuw nsw i64 %68, 1\l  %89 = and i64 %88, 4294967295\l  %90 = icmp slt i64 %89, %1\l  br i1 %90, label %67, label %91, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5282050:s0 -> Node0x5282050;
	Node0x5282050:s1 -> Node0x527fb00;
	Node0x527fb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%91:\l91:                                               \l  ret void\l}"];
}
