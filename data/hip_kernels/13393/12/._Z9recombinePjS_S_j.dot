digraph "CFG for '_Z9recombinePjS_S_j' function" {
	label="CFG for '_Z9recombinePjS_S_j' function";

	Node0x58b3620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = add i32 %11, %5\l  %14 = mul i32 %13, %10\l  %15 = add i32 %14, %12\l  %16 = icmp ult i32 %15, %3\l  br i1 %16, label %17, label %21\l|{<s0>T|<s1>F}}"];
	Node0x58b3620:s0 -> Node0x58b4d20;
	Node0x58b3620:s1 -> Node0x58b5eb0;
	Node0x58b4d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %21\l}"];
	Node0x58b4d20 -> Node0x58b5eb0;
	Node0x58b5eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ %20, %17 ], [ 0, %4 ]\l  br i1 %16, label %23, label %30\l|{<s0>T|<s1>F}}"];
	Node0x58b5eb0:s0 -> Node0x58b6a50;
	Node0x58b5eb0:s1 -> Node0x58b6aa0;
	Node0x58b6a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%23:\l23:                                               \l  %24 = zext i32 %15 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = zext i32 %15 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %30\l}"];
	Node0x58b6a50 -> Node0x58b6aa0;
	Node0x58b6aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %26, %23 ], [ 0, %21 ]\l  %32 = phi i32 [ %29, %23 ], [ 0, %21 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %16, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x58b6aa0:s0 -> Node0x58b7c90;
	Node0x58b6aa0:s1 -> Node0x58b7ce0;
	Node0x58b7c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = xor i32 %32, -1\l  %35 = and i32 %22, %34\l  %36 = and i32 %32, %31\l  %37 = or i32 %35, %36\l  %38 = zext i32 %15 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  store i32 %37, i32 addrspace(1)* %39, align 4, !tbaa !7\l  br label %40\l}"];
	Node0x58b7c90 -> Node0x58b7ce0;
	Node0x58b7ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  ret void\l}"];
}
