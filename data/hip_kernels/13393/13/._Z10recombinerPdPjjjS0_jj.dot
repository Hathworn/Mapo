digraph "CFG for '_Z10recombinerPdPjjjS0_jj' function" {
	label="CFG for '_Z10recombinerPdPjjjS0_jj' function";

	Node0x61c8b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = add i32 %8, %6\l  %10 = zext i32 %9 to i64\l  %11 = getelementptr inbounds double, double addrspace(1)* %0, i64 %10\l  %12 = load double, double addrspace(1)* %11, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !9\l  %15 = add i32 %13, %14\l  %16 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %17 = getelementptr i8, i8 addrspace(4)* %16, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !10, !invariant.load\l... !8\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %15, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !9\l  %23 = add i32 %21, %22\l  %24 = add i32 %2, -1\l  %25 = lshr i32 %24, 1\l  %26 = uitofp i32 %25 to double\l  %27 = fmul contract double %12, %26\l  %28 = fptoui double %27 to i32\l  %29 = shl i32 %3, 1\l  %30 = mul i32 %29, %28\l  %31 = add i32 %23, %30\l  %32 = icmp ult i32 %23, %3\l  br i1 %32, label %33, label %41\l|{<s0>T|<s1>F}}"];
	Node0x61c8b40:s0 -> Node0x61ca7b0;
	Node0x61c8b40:s1 -> Node0x61ca840;
	Node0x61ca7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = zext i32 %31 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !11, !amdgpu.noclobber\l... !8\l  %37 = add i32 %31, %3\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !11, !amdgpu.noclobber\l... !8\l  br label %41\l}"];
	Node0x61ca7b0 -> Node0x61ca840;
	Node0x61ca840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i32 [ %36, %33 ], [ 0, %7 ]\l  %43 = phi i32 [ %40, %33 ], [ 0, %7 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = icmp ult i32 %23, %5\l  br i1 %44, label %45, label %51\l|{<s0>T|<s1>F}}"];
	Node0x61ca840:s0 -> Node0x61cd900;
	Node0x61ca840:s1 -> Node0x61cd950;
	Node0x61cd900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%45:\l45:                                               \l  %46 = mul i32 %9, %5\l  %47 = add i32 %23, %46\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !11, !amdgpu.noclobber\l... !8\l  br label %51\l}"];
	Node0x61cd900 -> Node0x61cd950;
	Node0x61cd950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %50, %45 ], [ 0, %41 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %44, label %53, label %62\l|{<s0>T|<s1>F}}"];
	Node0x61cd950:s0 -> Node0x61ce0f0;
	Node0x61cd950:s1 -> Node0x61ce140;
	Node0x61ce0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%53:\l53:                                               \l  %54 = xor i32 %52, -1\l  %55 = and i32 %42, %54\l  %56 = and i32 %52, %43\l  %57 = or i32 %55, %56\l  %58 = mul i32 %9, %5\l  %59 = add i32 %23, %58\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %60\l  store i32 %57, i32 addrspace(1)* %61, align 4, !tbaa !11\l  br label %62\l}"];
	Node0x61ce0f0 -> Node0x61ce140;
	Node0x61ce140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  ret void\l}"];
}
