digraph "CFG for '_Z10kernelFlouPhPj' function" {
	label="CFG for '_Z10kernelFlouPhPj' function";

	Node0x4efb5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  store i8 0, i8 addrspace(3)* getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(3)* @_ZZ10kernelFlouPhPjE3sum, i32 0, i32 0), align 1, !tbaa !4\l  store i8 0, i8 addrspace(3)* getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(3)* @_ZZ10kernelFlouPhPjE3sum, i32 0, i32 1), align 1, !tbaa !4\l  store i8 0, i8 addrspace(3)* getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(3)* @_ZZ10kernelFlouPhPjE3sum, i32 0, i32 2), align 1, !tbaa !4\l  store i8 0, i8 addrspace(3)* getelementptr inbounds ([4 x i8], [4 x i8]\l... addrspace(3)* @_ZZ10kernelFlouPhPjE3sum, i32 0, i32 3), align 1, !tbaa !4\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !7\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !7\l  %7 = shl nsw i32 %4, 1\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !7\l  %9 = add i32 %7, %8\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !8\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !17, !invariant.load\l... !18\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  %24 = add i32 %23, %3\l  %25 = shl i32 %24, 3\l  %26 = shl nuw nsw i32 %6, 2\l  %27 = add i32 %25, %26\l  %28 = mul i32 %22, %4\l  %29 = add i32 %28, %3\l  %30 = shl i32 %29, 2\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = add nsw i32 %27, %5\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %32\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !4, !amdgpu.noclobber !18\l  %35 = lshr i8 %34, 2\l  %36 = getelementptr inbounds [4 x i8], [4 x i8] addrspace(3)*\l... @_ZZ10kernelFlouPhPjE3sum, i32 0, i32 %5\l  %37 = load i8, i8 addrspace(3)* %36, align 1, !tbaa !4\l  %38 = add i8 %37, %35\l  store i8 %38, i8 addrspace(3)* %36, align 1, !tbaa !4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = load i8, i8 addrspace(3)* %36, align 1, !tbaa !4\l  store i8 %39, i8 addrspace(1)* %33, align 1, !tbaa !4\l  %40 = sext i8 %39 to i32\l  %41 = add nsw i32 %30, %5\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %42\l  store i32 %40, i32 addrspace(1)* %43, align 4, !tbaa !19\l  ret void\l}"];
}
