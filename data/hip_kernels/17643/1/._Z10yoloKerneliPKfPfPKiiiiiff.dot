digraph "CFG for '_Z10yoloKerneliPKfPfPKiiiiiff' function" {
	label="CFG for '_Z10yoloKerneliPKfPfPKiiiiiff' function";

	Node0x5d51e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %0\l  br i1 %20, label %21, label %232\l|{<s0>T|<s1>F}}"];
	Node0x5d51e60:s0 -> Node0x5d54470;
	Node0x5d51e60:s1 -> Node0x5d54500;
	Node0x5d54470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%21:\l21:                                               \l  %22 = shl nsw i32 %4, 1\l  %23 = icmp ult i32 %18, %22\l  br i1 %23, label %24, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5d54470:s0 -> Node0x5d54760;
	Node0x5d54470:s1 -> Node0x5d547b0;
	Node0x5d54760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%24:\l24:                                               \l  %25 = zext i32 %18 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shared_anchors, i32 0, i32 %18\l  store i32 %27, i32 addrspace(3)* %28, align 4, !tbaa !7\l  br label %29\l}"];
	Node0x5d54760 -> Node0x5d547b0;
	Node0x5d547b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%29:\l29:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = freeze i32 %19\l  %31 = freeze i32 %7\l  %32 = sdiv i32 %30, %31\l  %33 = mul i32 %32, %31\l  %34 = sub i32 %30, %33\l  %35 = freeze i32 %6\l  %36 = sdiv i32 %32, %35\l  %37 = mul i32 %36, %35\l  %38 = sub i32 %32, %37\l  %39 = freeze i32 %4\l  %40 = sdiv i32 %36, %39\l  %41 = mul i32 %40, %39\l  %42 = sub i32 %36, %41\l  %43 = add nsw i32 %5, 5\l  %44 = mul nsw i32 %7, %6\l  %45 = mul i32 %40, %4\l  %46 = add i32 %45, %42\l  %47 = mul i32 %43, %6\l  %48 = mul i32 %47, %46\l  %49 = add nsw i32 %48, %38\l  %50 = mul nsw i32 %49, %7\l  %51 = add nsw i32 %50, %34\l  %52 = shl nsw i32 %44, 2\l  %53 = add nsw i32 %51, %52\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %57 = fneg contract float %56\l  %58 = fmul float %56, 0xBFF7154760000000\l  %59 = tail call float @llvm.rint.f32(float %58)\l  %60 = fcmp olt float %56, 0xC0562E4300000000\l  %61 = fcmp ogt float %56, 0x4059D1DA00000000\l  %62 = fneg float %58\l  %63 = tail call float @llvm.fma.f32(float %57, float 0x3FF7154760000000,\l... float %62)\l  %64 = tail call float @llvm.fma.f32(float %57, float 0x3E54AE0BE0000000,\l... float %63)\l  %65 = fsub float %58, %59\l  %66 = fadd float %64, %65\l  %67 = tail call float @llvm.exp2.f32(float %66)\l  %68 = fptosi float %59 to i32\l  %69 = tail call float @llvm.amdgcn.ldexp.f32(float %67, i32 %68)\l  %70 = select i1 %61, float 0.000000e+00, float %69\l  %71 = select i1 %60, float 0x7FF0000000000000, float %70\l  %72 = fpext float %71 to double\l  %73 = fadd contract double %72, 1.000000e+00\l  %74 = fdiv contract double 1.000000e+00, %73\l  %75 = fptrunc double %74 to float\l  %76 = fcmp contract ogt float %75, %9\l  br i1 %76, label %77, label %232\l|{<s0>T|<s1>F}}"];
	Node0x5d547b0:s0 -> Node0x5d58e60;
	Node0x5d547b0:s1 -> Node0x5d54500;
	Node0x5d58e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%77:\l77:                                               \l  %78 = icmp sgt i32 %5, 0\l  br i1 %78, label %83, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5d58e60:s0 -> Node0x5d59030;
	Node0x5d58e60:s1 -> Node0x5d59080;
	Node0x5d59080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%79:\l79:                                               \l  %80 = phi float [ %9, %77 ], [ %114, %83 ]\l  %81 = phi i32 [ -1, %77 ], [ %115, %83 ]\l  %82 = icmp sgt i32 %81, -1\l  br i1 %82, label %118, label %232\l|{<s0>T|<s1>F}}"];
	Node0x5d59080:s0 -> Node0x5d59480;
	Node0x5d59080:s1 -> Node0x5d54500;
	Node0x5d59030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%83:\l83:                                               \l  %84 = phi i32 [ %115, %83 ], [ -1, %77 ]\l  %85 = phi float [ %114, %83 ], [ %9, %77 ]\l  %86 = phi i32 [ %116, %83 ], [ 0, %77 ]\l  %87 = add nuw nsw i32 %86, 5\l  %88 = mul nsw i32 %87, %44\l  %89 = add nsw i32 %88, %51\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %93 = fneg contract float %92\l  %94 = fmul float %92, 0xBFF7154760000000\l  %95 = tail call float @llvm.rint.f32(float %94)\l  %96 = fcmp olt float %92, 0xC0562E4300000000\l  %97 = fcmp ogt float %92, 0x4059D1DA00000000\l  %98 = fneg float %94\l  %99 = tail call float @llvm.fma.f32(float %93, float 0x3FF7154760000000,\l... float %98)\l  %100 = tail call float @llvm.fma.f32(float %93, float 0x3E54AE0BE0000000,\l... float %99)\l  %101 = fsub float %94, %95\l  %102 = fadd float %100, %101\l  %103 = tail call float @llvm.exp2.f32(float %102)\l  %104 = fptosi float %95 to i32\l  %105 = tail call float @llvm.amdgcn.ldexp.f32(float %103, i32 %104)\l  %106 = select i1 %97, float 0.000000e+00, float %105\l  %107 = select i1 %96, float 0x7FF0000000000000, float %106\l  %108 = fpext float %107 to double\l  %109 = fadd contract double %108, 1.000000e+00\l  %110 = fdiv contract double 1.000000e+00, %109\l  %111 = fptrunc double %110 to float\l  %112 = fmul contract float %75, %111\l  %113 = fcmp contract ogt float %112, %85\l  %114 = select i1 %113, float %112, float %85\l  %115 = select i1 %113, i32 %86, i32 %84\l  %116 = add nuw nsw i32 %86, 1\l  %117 = icmp eq i32 %116, %5\l  br i1 %117, label %79, label %83, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5d59030:s0 -> Node0x5d59080;
	Node0x5d59030:s1 -> Node0x5d59030;
	Node0x5d59480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%118:\l118:                                              \l  %119 = atomicrmw fadd float addrspace(1)* %2, float 1.000000e+00\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %120 = fptosi float %119 to i32\l  %121 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %122 = mul nsw i32 %120, 7\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %121, i64 %123\l  %125 = sitofp i32 %34 to float\l  %126 = sext i32 %51 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %1, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !11\l  %129 = fneg contract float %128\l  %130 = fmul float %128, 0xBFF7154760000000\l  %131 = tail call float @llvm.rint.f32(float %130)\l  %132 = fcmp olt float %128, 0xC0562E4300000000\l  %133 = fcmp ogt float %128, 0x4059D1DA00000000\l  %134 = fneg float %130\l  %135 = tail call float @llvm.fma.f32(float %129, float 0x3FF7154760000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %129, float 0x3E54AE0BE0000000,\l... float %135)\l  %137 = fsub float %130, %131\l  %138 = fadd float %136, %137\l  %139 = tail call float @llvm.exp2.f32(float %138)\l  %140 = fptosi float %131 to i32\l  %141 = tail call float @llvm.amdgcn.ldexp.f32(float %139, i32 %140)\l  %142 = select i1 %133, float 0.000000e+00, float %141\l  %143 = select i1 %132, float 0x7FF0000000000000, float %142\l  %144 = fpext float %143 to double\l  %145 = fadd contract double %144, 1.000000e+00\l  %146 = fdiv contract double 1.000000e+00, %145\l  %147 = fptrunc double %146 to float\l  %148 = fadd contract float %125, %147\l  %149 = fmul contract float %148, %8\l  store float %149, float addrspace(1)* %124, align 4, !tbaa !11\l  %150 = sitofp i32 %38 to float\l  %151 = add nsw i32 %51, %44\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %1, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !11\l  %155 = fneg contract float %154\l  %156 = fmul float %154, 0xBFF7154760000000\l  %157 = tail call float @llvm.rint.f32(float %156)\l  %158 = fcmp olt float %154, 0xC0562E4300000000\l  %159 = fcmp ogt float %154, 0x4059D1DA00000000\l  %160 = fneg float %156\l  %161 = tail call float @llvm.fma.f32(float %155, float 0x3FF7154760000000,\l... float %160)\l  %162 = tail call float @llvm.fma.f32(float %155, float 0x3E54AE0BE0000000,\l... float %161)\l  %163 = fsub float %156, %157\l  %164 = fadd float %162, %163\l  %165 = tail call float @llvm.exp2.f32(float %164)\l  %166 = fptosi float %157 to i32\l  %167 = tail call float @llvm.amdgcn.ldexp.f32(float %165, i32 %166)\l  %168 = select i1 %159, float 0.000000e+00, float %167\l  %169 = select i1 %158, float 0x7FF0000000000000, float %168\l  %170 = fpext float %169 to double\l  %171 = fadd contract double %170, 1.000000e+00\l  %172 = fdiv contract double 1.000000e+00, %171\l  %173 = fptrunc double %172 to float\l  %174 = fadd contract float %150, %173\l  %175 = fmul contract float %174, %8\l  %176 = getelementptr inbounds float, float addrspace(1)* %124, i64 1\l  store float %175, float addrspace(1)* %176, align 4, !tbaa !11\l  %177 = shl nsw i32 %44, 1\l  %178 = add nsw i32 %51, %177\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %1, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !11\l  %182 = fmul float %181, 0x3FF7154760000000\l  %183 = tail call float @llvm.rint.f32(float %182)\l  %184 = fcmp ogt float %181, 0x40562E4300000000\l  %185 = fcmp olt float %181, 0xC059D1DA00000000\l  %186 = fneg float %182\l  %187 = tail call float @llvm.fma.f32(float %181, float 0x3FF7154760000000,\l... float %186)\l  %188 = tail call float @llvm.fma.f32(float %181, float 0x3E54AE0BE0000000,\l... float %187)\l  %189 = fsub float %182, %183\l  %190 = fadd float %188, %189\l  %191 = tail call float @llvm.exp2.f32(float %190)\l  %192 = fptosi float %183 to i32\l  %193 = tail call float @llvm.amdgcn.ldexp.f32(float %191, i32 %192)\l  %194 = select i1 %185, float 0.000000e+00, float %193\l  %195 = select i1 %184, float 0x7FF0000000000000, float %194\l  %196 = shl nsw i32 %42, 1\l  %197 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shared_anchors, i32 0, i32 %196\l  %198 = load i32, i32 addrspace(3)* %197, align 4, !tbaa !7\l  %199 = sitofp i32 %198 to float\l  %200 = fmul contract float %195, %199\l  %201 = getelementptr inbounds float, float addrspace(1)* %124, i64 2\l  store float %200, float addrspace(1)* %201, align 4, !tbaa !11\l  %202 = mul nsw i32 %44, 3\l  %203 = add nsw i32 %51, %202\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %1, i64 %204\l  %206 = load float, float addrspace(1)* %205, align 4, !tbaa !11\l  %207 = fmul float %206, 0x3FF7154760000000\l  %208 = tail call float @llvm.rint.f32(float %207)\l  %209 = fcmp ogt float %206, 0x40562E4300000000\l  %210 = fcmp olt float %206, 0xC059D1DA00000000\l  %211 = fneg float %207\l  %212 = tail call float @llvm.fma.f32(float %206, float 0x3FF7154760000000,\l... float %211)\l  %213 = tail call float @llvm.fma.f32(float %206, float 0x3E54AE0BE0000000,\l... float %212)\l  %214 = fsub float %207, %208\l  %215 = fadd float %213, %214\l  %216 = tail call float @llvm.exp2.f32(float %215)\l  %217 = fptosi float %208 to i32\l  %218 = tail call float @llvm.amdgcn.ldexp.f32(float %216, i32 %217)\l  %219 = select i1 %210, float 0.000000e+00, float %218\l  %220 = select i1 %209, float 0x7FF0000000000000, float %219\l  %221 = add nuw nsw i32 %196, 1\l  %222 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @shared_anchors, i32 0, i32 %221\l  %223 = load i32, i32 addrspace(3)* %222, align 4, !tbaa !7\l  %224 = sitofp i32 %223 to float\l  %225 = fmul contract float %220, %224\l  %226 = getelementptr inbounds float, float addrspace(1)* %124, i64 3\l  store float %225, float addrspace(1)* %226, align 4, !tbaa !11\l  %227 = sitofp i32 %81 to float\l  %228 = getelementptr inbounds float, float addrspace(1)* %124, i64 4\l  store float %227, float addrspace(1)* %228, align 4, !tbaa !11\l  %229 = getelementptr inbounds float, float addrspace(1)* %124, i64 5\l  store float %80, float addrspace(1)* %229, align 4, !tbaa !11\l  %230 = sitofp i32 %40 to float\l  %231 = getelementptr inbounds float, float addrspace(1)* %124, i64 6\l  store float %230, float addrspace(1)* %231, align 4, !tbaa !11\l  br label %232\l}"];
	Node0x5d59480 -> Node0x5d54500;
	Node0x5d54500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%232:\l232:                                              \l  ret void\l}"];
}
