digraph "CFG for '_Z15DiffusionJacobiP15HIP_vector_typeIfLj2EES1_S1_fffjj' function" {
	label="CFG for '_Z15DiffusionJacobiP15HIP_vector_typeIfLj2EES1_S1_fffjj' function";

	Node0x5ed9a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = mul i32 %25, %6\l  %27 = add i32 %26, %17\l  %28 = zext i32 %27 to i64\l  %29 = fmul contract float %4, %4\l  %30 = fmul contract float %3, %5\l  %31 = fdiv contract float %29, %30\l  %32 = icmp eq i32 %17, 0\l  %33 = icmp eq i32 %25, 0\l  %34 = select i1 %32, i1 true, i1 %33\l  %35 = add i32 %6, -1\l  %36 = icmp eq i32 %17, %35\l  %37 = select i1 %34, i1 true, i1 %36\l  %38 = add i32 %7, -1\l  %39 = icmp eq i32 %25, %38\l  %40 = select i1 %37, i1 true, i1 %39\l  br i1 %40, label %89, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5ed9a40:s0 -> Node0x5eddca0;
	Node0x5ed9a40:s1 -> Node0x5eddd30;
	Node0x5eddd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %43 = load float, float addrspace(1)* %42, align 4\l  %44 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %45 = load float, float addrspace(1)* %44, align 8\l  %46 = add i32 %25, -1\l  %47 = mul i32 %46, %6\l  %48 = add i32 %47, %17\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %49, i32 0, i32 0, i32 0, i64 0\l  %51 = load float, float addrspace(1)* %50, align 8\l  %52 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %49, i32 0, i32 0, i32 0, i64 1\l  %53 = load float, float addrspace(1)* %52, align 4\l  %54 = add i32 %27, -1\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %55, i32 0, i32 0, i32 0, i64 0\l  %57 = load float, float addrspace(1)* %56, align 8\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %55, i32 0, i32 0, i32 0, i64 1\l  %59 = load float, float addrspace(1)* %58, align 4\l  %60 = add i32 %25, 1\l  %61 = mul i32 %60, %6\l  %62 = add i32 %61, %17\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %63, i32 0, i32 0, i32 0, i64 0\l  %65 = load float, float addrspace(1)* %64, align 8\l  %66 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %63, i32 0, i32 0, i32 0, i64 1\l  %67 = load float, float addrspace(1)* %66, align 4\l  %68 = add i32 %27, 1\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %69, i32 0, i32 0, i32 0, i64 0\l  %71 = load float, float addrspace(1)* %70, align 8\l  %72 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %69, i32 0, i32 0, i32 0, i64 1\l  %73 = load float, float addrspace(1)* %72, align 4\l  %74 = fadd contract float %51, %57\l  %75 = fadd contract float %74, %65\l  %76 = fadd contract float %75, %71\l  %77 = fmul contract float %31, %45\l  %78 = fadd contract float %77, %76\l  %79 = fadd contract float %31, 4.000000e+00\l  %80 = fdiv contract float %78, %79\l  %81 = fadd contract float %53, %59\l  %82 = fadd contract float %81, %67\l  %83 = fadd contract float %82, %73\l  %84 = fmul contract float %31, %43\l  %85 = fadd contract float %84, %83\l  %86 = fdiv contract float %85, %79\l  %87 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 0\l  store float %80, float addrspace(1)* %87, align 8\l  %88 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 1\l  store float %86, float addrspace(1)* %88, align 4\l  br label %89\l}"];
	Node0x5eddd30 -> Node0x5eddca0;
	Node0x5eddca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%89:\l89:                                               \l  ret void\l}"];
}
