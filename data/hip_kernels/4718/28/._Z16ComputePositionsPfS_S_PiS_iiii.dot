digraph "CFG for '_Z16ComputePositionsPfS_S_PiS_iiii' function" {
	label="CFG for '_Z16ComputePositionsPfS_S_PiS_iiii' function";

	Node0x628d710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl i32 %10, 8\l  %12 = ashr exact i32 %11, 3\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = add nsw i32 %12, %13\l  %15 = icmp slt i32 %14, %5\l  br i1 %15, label %16, label %206\l|{<s0>T|<s1>F}}"];
	Node0x628d710:s0 -> Node0x628ebc0;
	Node0x628d710:s1 -> Node0x628ec50;
	Node0x628ebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%16:\l16:                                               \l  %17 = sext i32 %14 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %1, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %23 = add nsw i32 %19, -1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %27 = add nsw i32 %19, 1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %31 = fsub contract float %30, %26\l  %32 = fmul contract float %31, 5.000000e-01\l  %33 = fmul contract float %22, 2.000000e+00\l  %34 = fsub contract float %33, %26\l  %35 = fsub contract float %34, %30\l  %36 = sub nsw i32 %19, %7\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %40 = add nsw i32 %19, %7\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %44 = fsub contract float %43, %39\l  %45 = fmul contract float %44, 5.000000e-01\l  %46 = fsub contract float %33, %39\l  %47 = fsub contract float %46, %43\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %20\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %52 = fsub contract float %51, %49\l  %53 = fmul contract float %52, 5.000000e-01\l  %54 = fsub contract float %33, %49\l  %55 = fsub contract float %54, %51\l  %56 = add nsw i32 %40, 1\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %60 = add nsw i32 %36, -1\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %64 = fadd contract float %59, %63\l  %65 = add nsw i32 %36, 1\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %1, i64 %66\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %69 = fsub contract float %64, %68\l  %70 = add nsw i32 %40, -1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %74 = fsub contract float %69, %73\l  %75 = fmul contract float %74, 2.500000e-01\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %28\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %80 = fadd contract float %77, %79\l  %81 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %83 = fsub contract float %80, %82\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %24\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %86 = fsub contract float %83, %85\l  %87 = fmul contract float %86, 2.500000e-01\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %41\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %92 = fadd contract float %89, %91\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %95 = fsub contract float %92, %94\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !10,\l... !amdgpu.noclobber !9\l  %98 = fsub contract float %95, %97\l  %99 = fmul contract float %98, 2.500000e-01\l  %100 = fmul contract float %47, %55\l  %101 = fmul contract float %99, %99\l  %102 = fsub contract float %100, %101\l  %103 = fmul contract float %87, %99\l  %104 = fmul contract float %55, %75\l  %105 = fsub contract float %103, %104\l  %106 = fmul contract float %75, %99\l  %107 = fmul contract float %47, %87\l  %108 = fsub contract float %106, %107\l  %109 = fmul contract float %35, %55\l  %110 = fmul contract float %87, %87\l  %111 = fsub contract float %109, %110\l  %112 = fmul contract float %75, %87\l  %113 = fmul contract float %35, %99\l  %114 = fsub contract float %112, %113\l  %115 = fmul contract float %35, %47\l  %116 = fmul contract float %75, %75\l  %117 = fsub contract float %115, %116\l  %118 = fmul contract float %35, %102\l  %119 = fmul contract float %75, %105\l  %120 = fadd contract float %118, %119\l  %121 = fmul contract float %87, %108\l  %122 = fadd contract float %121, %120\l  %123 = fdiv contract float 1.000000e+00, %122\l  %124 = fmul contract float %32, %102\l  %125 = fmul contract float %45, %105\l  %126 = fadd contract float %124, %125\l  %127 = fmul contract float %53, %108\l  %128 = fadd contract float %127, %126\l  %129 = fmul contract float %128, %123\l  %130 = fmul contract float %32, %105\l  %131 = fmul contract float %45, %111\l  %132 = fadd contract float %131, %130\l  %133 = fmul contract float %53, %114\l  %134 = fadd contract float %133, %132\l  %135 = fmul contract float %134, %123\l  %136 = fmul contract float %32, %108\l  %137 = fmul contract float %45, %114\l  %138 = fadd contract float %136, %137\l  %139 = fmul contract float %53, %117\l  %140 = fadd contract float %139, %138\l  %141 = fmul contract float %140, %123\l  %142 = fcmp contract olt float %129, -5.000000e-01\l  %143 = fcmp contract ogt float %129, 5.000000e-01\l  %144 = or i1 %142, %143\l  %145 = fcmp contract olt float %135, -5.000000e-01\l  %146 = select i1 %144, i1 true, i1 %145\l  %147 = fcmp contract ogt float %135, 5.000000e-01\l  %148 = select i1 %146, i1 true, i1 %147\l  %149 = fcmp contract olt float %141, -5.000000e-01\l  %150 = select i1 %148, i1 true, i1 %149\l  %151 = fcmp contract ogt float %141, 5.000000e-01\l  %152 = select i1 %150, i1 true, i1 %151\l  br i1 %152, label %153, label %157\l|{<s0>T|<s1>F}}"];
	Node0x628ebc0:s0 -> Node0x6296020;
	Node0x628ebc0:s1 -> Node0x62960b0;
	Node0x6296020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%153:\l153:                                              \l  %154 = fdiv contract float %32, %35\l  %155 = fdiv contract float %45, %47\l  %156 = fdiv contract float %53, %55\l  br label %157\l}"];
	Node0x6296020 -> Node0x62960b0;
	Node0x62960b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%157:\l157:                                              \l  %158 = phi float [ %154, %153 ], [ %129, %16 ]\l  %159 = phi float [ %155, %153 ], [ %135, %16 ]\l  %160 = phi float [ %156, %153 ], [ %141, %16 ]\l  %161 = fmul contract float %32, %158\l  %162 = fmul contract float %45, %159\l  %163 = fadd contract float %161, %162\l  %164 = fmul contract float %53, %160\l  %165 = fadd contract float %163, %164\l  %166 = fmul contract float %165, 5.000000e-01\l  %167 = freeze i32 %19\l  %168 = freeze i32 %7\l  %169 = sdiv i32 %167, %168\l  %170 = mul i32 %169, %168\l  %171 = sub i32 %167, %170\l  %172 = sitofp i32 %171 to float\l  %173 = fadd contract float %158, %172\l  %174 = getelementptr inbounds float, float addrspace(1)* %4, i64 %17\l  store float %173, float addrspace(1)* %174, align 4, !tbaa !10\l  %175 = sitofp i32 %169 to float\l  %176 = fadd contract float %159, %175\l  %177 = add nsw i32 %14, %6\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %4, i64 %178\l  store float %176, float addrspace(1)* %179, align 4, !tbaa !10\l  %180 = load float, float addrspace(4)* getelementptr inbounds ([8 x float],\l... [8 x float] addrspace(4)* @d_ConstantA, i64 0, i64 0), align 16, !tbaa !10\l  %181 = load float, float addrspace(4)* getelementptr inbounds ([8 x float],\l... [8 x float] addrspace(4)* @d_ConstantB, i64 0, i64 0), align 16, !tbaa !10\l  %182 = fmul contract float %160, %181\l  %183 = fcmp olt float %182, -1.260000e+02\l  %184 = select i1 %183, float 0x3BF0000000000000, float 1.000000e+00\l  %185 = select i1 %183, float 6.400000e+01, float 0.000000e+00\l  %186 = fadd float %182, %185\l  %187 = tail call float @llvm.exp2.f32(float %186)\l  %188 = fmul float %184, %187\l  %189 = fmul contract float %180, %188\l  %190 = shl nsw i32 %6, 1\l  %191 = add nsw i32 %190, %14\l  %192 = sext i32 %191 to i64\l  %193 = getelementptr inbounds float, float addrspace(1)* %4, i64 %192\l  store float %189, float addrspace(1)* %193, align 4, !tbaa !10\l  %194 = fadd contract float %22, %166\l  %195 = mul nsw i32 %6, 3\l  %196 = add nsw i32 %195, %14\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %4, i64 %197\l  store float %194, float addrspace(1)* %198, align 4, !tbaa !10\l  %199 = fadd contract float %35, %47\l  %200 = fmul contract float %199, %199\l  %201 = fdiv contract float %200, %117\l  %202 = shl nsw i32 %6, 2\l  %203 = add nsw i32 %202, %14\l  %204 = sext i32 %203 to i64\l  %205 = getelementptr inbounds float, float addrspace(1)* %4, i64 %204\l  store float %201, float addrspace(1)* %205, align 4, !tbaa !10\l  br label %206\l}"];
	Node0x62960b0 -> Node0x628ec50;
	Node0x628ec50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%206:\l206:                                              \l  ret void\l}"];
}
