digraph "CFG for '_Z10multKernelPfS_S_i' function" {
	label="CFG for '_Z10multKernelPfS_S_i' function";

	Node0x6113330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %6\l  %16 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %7, %19\l  %21 = add i32 %20, %5\l  %22 = sdiv i32 %3, 16\l  %23 = icmp sgt i32 %3, 15\l  %24 = mul nsw i32 %15, %3\l  br i1 %23, label %25, label %61\l|{<s0>T|<s1>F}}"];
	Node0x6113330:s0 -> Node0x6116df0;
	Node0x6113330:s1 -> Node0x6116e80;
	Node0x6116df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = add i32 %24, %5\l  %27 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 %5\l  %28 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 %6, i32 %5\l  %29 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 0\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 0, i32 %5\l  %31 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 1\l  %32 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 1, i32 %5\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 2\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 2, i32 %5\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 3\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 3, i32 %5\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 4\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 4, i32 %5\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 5\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 5, i32 %5\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 6\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 6, i32 %5\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 7\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 7, i32 %5\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 8\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 8, i32 %5\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 9\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 9, i32 %5\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 10\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 10, i32 %5\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 11\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 11, i32 %5\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 12\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 12, i32 %5\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 13\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 13, i32 %5\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 14\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 14, i32 %5\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_a, i32 0, i32 %6, i32 15\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ10multKernelPfS_S_iE3s_b, i32 0, i32 15, i32 %5\l  br label %66\l}"];
	Node0x6116df0 -> Node0x61191f0;
	Node0x6116e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  %62 = phi float [ 0.000000e+00, %4 ], [ %143, %66 ]\l  %63 = add nsw i32 %24, %21\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  store float %62, float addrspace(1)* %65, align 4, !tbaa !7\l  ret void\l}"];
	Node0x61191f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ 0, %25 ], [ %144, %66 ]\l  %68 = phi float [ 0.000000e+00, %25 ], [ %143, %66 ]\l  %69 = shl nsw i32 %67, 4\l  %70 = add i32 %26, %69\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %73, float addrspace(3)* %27, align 4, !tbaa !7\l  %74 = add nuw nsw i32 %69, %6\l  %75 = mul nsw i32 %74, %3\l  %76 = add nsw i32 %75, %21\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store float %79, float addrspace(3)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %80 = load float, float addrspace(3)* %29, align 16, !tbaa !7\l  %81 = load float, float addrspace(3)* %30, align 4, !tbaa !7\l  %82 = fmul contract float %80, %81\l  %83 = fadd contract float %68, %82\l  %84 = load float, float addrspace(3)* %31, align 4, !tbaa !7\l  %85 = load float, float addrspace(3)* %32, align 4, !tbaa !7\l  %86 = fmul contract float %84, %85\l  %87 = fadd contract float %83, %86\l  %88 = load float, float addrspace(3)* %33, align 8, !tbaa !7\l  %89 = load float, float addrspace(3)* %34, align 4, !tbaa !7\l  %90 = fmul contract float %88, %89\l  %91 = fadd contract float %87, %90\l  %92 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %93 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %94 = fmul contract float %92, %93\l  %95 = fadd contract float %91, %94\l  %96 = load float, float addrspace(3)* %37, align 16, !tbaa !7\l  %97 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %98 = fmul contract float %96, %97\l  %99 = fadd contract float %95, %98\l  %100 = load float, float addrspace(3)* %39, align 4, !tbaa !7\l  %101 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %102 = fmul contract float %100, %101\l  %103 = fadd contract float %99, %102\l  %104 = load float, float addrspace(3)* %41, align 8, !tbaa !7\l  %105 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %106 = fmul contract float %104, %105\l  %107 = fadd contract float %103, %106\l  %108 = load float, float addrspace(3)* %43, align 4, !tbaa !7\l  %109 = load float, float addrspace(3)* %44, align 4, !tbaa !7\l  %110 = fmul contract float %108, %109\l  %111 = fadd contract float %107, %110\l  %112 = load float, float addrspace(3)* %45, align 16, !tbaa !7\l  %113 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %114 = fmul contract float %112, %113\l  %115 = fadd contract float %111, %114\l  %116 = load float, float addrspace(3)* %47, align 4, !tbaa !7\l  %117 = load float, float addrspace(3)* %48, align 4, !tbaa !7\l  %118 = fmul contract float %116, %117\l  %119 = fadd contract float %115, %118\l  %120 = load float, float addrspace(3)* %49, align 8, !tbaa !7\l  %121 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %122 = fmul contract float %120, %121\l  %123 = fadd contract float %119, %122\l  %124 = load float, float addrspace(3)* %51, align 4, !tbaa !7\l  %125 = load float, float addrspace(3)* %52, align 4, !tbaa !7\l  %126 = fmul contract float %124, %125\l  %127 = fadd contract float %123, %126\l  %128 = load float, float addrspace(3)* %53, align 16, !tbaa !7\l  %129 = load float, float addrspace(3)* %54, align 4, !tbaa !7\l  %130 = fmul contract float %128, %129\l  %131 = fadd contract float %127, %130\l  %132 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %133 = load float, float addrspace(3)* %56, align 4, !tbaa !7\l  %134 = fmul contract float %132, %133\l  %135 = fadd contract float %131, %134\l  %136 = load float, float addrspace(3)* %57, align 8, !tbaa !7\l  %137 = load float, float addrspace(3)* %58, align 4, !tbaa !7\l  %138 = fmul contract float %136, %137\l  %139 = fadd contract float %135, %138\l  %140 = load float, float addrspace(3)* %59, align 4, !tbaa !7\l  %141 = load float, float addrspace(3)* %60, align 4, !tbaa !7\l  %142 = fmul contract float %140, %141\l  %143 = fadd contract float %139, %142\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %144 = add nuw nsw i32 %67, 1\l  %145 = icmp eq i32 %144, %22\l  br i1 %145, label %61, label %66, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x61191f0:s0 -> Node0x6116e80;
	Node0x61191f0:s1 -> Node0x61191f0;
}
