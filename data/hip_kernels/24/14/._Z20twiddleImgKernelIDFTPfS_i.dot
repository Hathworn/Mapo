digraph "CFG for '_Z20twiddleImgKernelIDFTPfS_i' function" {
	label="CFG for '_Z20twiddleImgKernelIDFTPfS_i' function";

	Node0x4b349c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4b349c0:s0 -> Node0x4b368c0;
	Node0x4b349c0:s1 -> Node0x4b36950;
	Node0x4b368c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%14:\l14:                                               \l  %15 = icmp eq i32 %12, 0\l  br i1 %15, label %16, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4b368c0:s0 -> Node0x4b36b20;
	Node0x4b368c0:s1 -> Node0x4b36b70;
	Node0x4b36b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %2, 0\l  br i1 %17, label %18, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4b36b20:s0 -> Node0x4b36dc0;
	Node0x4b36b20:s1 -> Node0x4b36950;
	Node0x4b36dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%18:\l18:                                               \l  %19 = and i32 %2, 7\l  %20 = icmp ult i32 %2, 8\l  br i1 %20, label %113, label %21\l|{<s0>T|<s1>F}}"];
	Node0x4b36dc0:s0 -> Node0x4b37040;
	Node0x4b36dc0:s1 -> Node0x4b37090;
	Node0x4b37090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%21:\l21:                                               \l  %22 = and i32 %2, -8\l  br label %23\l}"];
	Node0x4b37090 -> Node0x4b37290;
	Node0x4b37290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %49, %23 ]\l  %25 = phi i32 [ 0, %21 ], [ %50, %23 ]\l  %26 = zext i32 %24 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float 0.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = or i32 %24, 1\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  store float 0.000000e+00, float addrspace(1)* %30, align 4, !tbaa !7\l  %31 = or i32 %24, 2\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  store float 0.000000e+00, float addrspace(1)* %33, align 4, !tbaa !7\l  %34 = or i32 %24, 3\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float 0.000000e+00, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = or i32 %24, 4\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  store float 0.000000e+00, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = or i32 %24, 5\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  store float 0.000000e+00, float addrspace(1)* %42, align 4, !tbaa !7\l  %43 = or i32 %24, 6\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float 0.000000e+00, float addrspace(1)* %45, align 4, !tbaa !7\l  %46 = or i32 %24, 7\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float 0.000000e+00, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nuw nsw i32 %24, 8\l  %50 = add i32 %25, 8\l  %51 = icmp eq i32 %50, %22\l  br i1 %51, label %113, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b37290:s0 -> Node0x4b37040;
	Node0x4b37290:s1 -> Node0x4b37290;
	Node0x4b36b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%52:\l52:                                               \l  %53 = mul nsw i32 %12, %2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  store float 0.000000e+00, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = icmp sgt i32 %2, 1\l  br i1 %56, label %57, label %143\l|{<s0>T|<s1>F}}"];
	Node0x4b36b70:s0 -> Node0x4b3a010;
	Node0x4b36b70:s1 -> Node0x4b36950;
	Node0x4b3a010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%57:\l57:                                               \l  %58 = add i32 %2, -1\l  %59 = add i32 %2, -2\l  %60 = and i32 %58, 3\l  %61 = icmp ult i32 %59, 3\l  br i1 %61, label %124, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4b3a010:s0 -> Node0x4b3a350;
	Node0x4b3a010:s1 -> Node0x4b3a3a0;
	Node0x4b3a3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%62:\l62:                                               \l  %63 = and i32 %58, -4\l  br label %64\l}"];
	Node0x4b3a3a0 -> Node0x4b3a570;
	Node0x4b3a570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi i32 [ 1, %62 ], [ %110, %64 ]\l  %66 = phi i32 [ 0, %62 ], [ %111, %64 ]\l  %67 = mul nsw i32 %65, %12\l  %68 = srem i32 %67, %2\l  %69 = shl nsw i32 %68, 1\l  %70 = add nuw nsw i32 %69, 1\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %1, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = add nsw i32 %65, %53\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  store float %73, float addrspace(1)* %76, align 4, !tbaa !7\l  %77 = add nuw nsw i32 %65, 1\l  %78 = mul nsw i32 %77, %12\l  %79 = srem i32 %78, %2\l  %80 = shl nsw i32 %79, 1\l  %81 = add nuw nsw i32 %80, 1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = add nsw i32 %77, %53\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  store float %84, float addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nuw nsw i32 %65, 2\l  %89 = mul nsw i32 %88, %12\l  %90 = srem i32 %89, %2\l  %91 = shl nsw i32 %90, 1\l  %92 = add nuw nsw i32 %91, 1\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %1, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = add nsw i32 %88, %53\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  store float %95, float addrspace(1)* %98, align 4, !tbaa !7\l  %99 = add nuw nsw i32 %65, 3\l  %100 = mul nsw i32 %99, %12\l  %101 = srem i32 %100, %2\l  %102 = shl nsw i32 %101, 1\l  %103 = add nuw nsw i32 %102, 1\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7\l  %107 = add nsw i32 %99, %53\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  store float %106, float addrspace(1)* %109, align 4, !tbaa !7\l  %110 = add nuw nsw i32 %65, 4\l  %111 = add i32 %66, 4\l  %112 = icmp eq i32 %111, %63\l  br i1 %112, label %124, label %64, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4b3a570:s0 -> Node0x4b3a350;
	Node0x4b3a570:s1 -> Node0x4b3a570;
	Node0x4b37040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%113:\l113:                                              \l  %114 = phi i32 [ 0, %18 ], [ %49, %23 ]\l  %115 = icmp eq i32 %19, 0\l  br i1 %115, label %143, label %116\l|{<s0>T|<s1>F}}"];
	Node0x4b37040:s0 -> Node0x4b36950;
	Node0x4b37040:s1 -> Node0x4b3c800;
	Node0x4b3c800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%116:\l116:                                              \l  %117 = phi i32 [ %121, %116 ], [ %114, %113 ]\l  %118 = phi i32 [ %122, %116 ], [ 0, %113 ]\l  %119 = zext i32 %117 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %0, i64 %119\l  store float 0.000000e+00, float addrspace(1)* %120, align 4, !tbaa !7\l  %121 = add nuw nsw i32 %117, 1\l  %122 = add i32 %118, 1\l  %123 = icmp eq i32 %122, %19\l  br i1 %123, label %143, label %116, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4b3c800:s0 -> Node0x4b36950;
	Node0x4b3c800:s1 -> Node0x4b3c800;
	Node0x4b3a350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%124:\l124:                                              \l  %125 = phi i32 [ 1, %57 ], [ %110, %64 ]\l  %126 = icmp eq i32 %60, 0\l  br i1 %126, label %143, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4b3a350:s0 -> Node0x4b36950;
	Node0x4b3a350:s1 -> Node0x4b3d0d0;
	Node0x4b3d0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%127:\l127:                                              \l  %128 = phi i32 [ %140, %127 ], [ %125, %124 ]\l  %129 = phi i32 [ %141, %127 ], [ 0, %124 ]\l  %130 = mul nsw i32 %128, %12\l  %131 = srem i32 %130, %2\l  %132 = shl nsw i32 %131, 1\l  %133 = add nuw nsw i32 %132, 1\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = add nsw i32 %128, %53\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %0, i64 %138\l  store float %136, float addrspace(1)* %139, align 4, !tbaa !7\l  %140 = add nuw nsw i32 %128, 1\l  %141 = add i32 %129, 1\l  %142 = icmp eq i32 %141, %60\l  br i1 %142, label %143, label %127, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4b3d0d0:s0 -> Node0x4b36950;
	Node0x4b3d0d0:s1 -> Node0x4b3d0d0;
	Node0x4b36950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%143:\l143:                                              \l  ret void\l}"];
}
