digraph "CFG for '_Z17twiddleRealKernelPfS_i' function" {
	label="CFG for '_Z17twiddleRealKernelPfS_i' function";

	Node0x627b920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %138\l|{<s0>T|<s1>F}}"];
	Node0x627b920:s0 -> Node0x627d820;
	Node0x627b920:s1 -> Node0x627d8b0;
	Node0x627d820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%14:\l14:                                               \l  %15 = icmp eq i32 %12, 0\l  br i1 %15, label %16, label %52\l|{<s0>T|<s1>F}}"];
	Node0x627d820:s0 -> Node0x627da80;
	Node0x627d820:s1 -> Node0x627dad0;
	Node0x627da80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %2, 0\l  br i1 %17, label %18, label %138\l|{<s0>T|<s1>F}}"];
	Node0x627da80:s0 -> Node0x627dd20;
	Node0x627da80:s1 -> Node0x627d8b0;
	Node0x627dd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%18:\l18:                                               \l  %19 = and i32 %2, 7\l  %20 = icmp ult i32 %2, 8\l  br i1 %20, label %109, label %21\l|{<s0>T|<s1>F}}"];
	Node0x627dd20:s0 -> Node0x627dfa0;
	Node0x627dd20:s1 -> Node0x627dff0;
	Node0x627dff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%21:\l21:                                               \l  %22 = and i32 %2, -8\l  br label %23\l}"];
	Node0x627dff0 -> Node0x627e1f0;
	Node0x627e1f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %49, %23 ]\l  %25 = phi i32 [ 0, %21 ], [ %50, %23 ]\l  %26 = zext i32 %24 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float 1.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = or i32 %24, 1\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  store float 1.000000e+00, float addrspace(1)* %30, align 4, !tbaa !7\l  %31 = or i32 %24, 2\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  store float 1.000000e+00, float addrspace(1)* %33, align 4, !tbaa !7\l  %34 = or i32 %24, 3\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  store float 1.000000e+00, float addrspace(1)* %36, align 4, !tbaa !7\l  %37 = or i32 %24, 4\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  store float 1.000000e+00, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = or i32 %24, 5\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  store float 1.000000e+00, float addrspace(1)* %42, align 4, !tbaa !7\l  %43 = or i32 %24, 6\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  store float 1.000000e+00, float addrspace(1)* %45, align 4, !tbaa !7\l  %46 = or i32 %24, 7\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float 1.000000e+00, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nuw nsw i32 %24, 8\l  %50 = add i32 %25, 8\l  %51 = icmp eq i32 %50, %22\l  br i1 %51, label %109, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x627e1f0:s0 -> Node0x627dfa0;
	Node0x627e1f0:s1 -> Node0x627e1f0;
	Node0x627dad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%52:\l52:                                               \l  %53 = mul nsw i32 %12, %2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  store float 1.000000e+00, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = icmp sgt i32 %2, 1\l  br i1 %56, label %57, label %138\l|{<s0>T|<s1>F}}"];
	Node0x627dad0:s0 -> Node0x6280f70;
	Node0x627dad0:s1 -> Node0x627d8b0;
	Node0x6280f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%57:\l57:                                               \l  %58 = add i32 %2, -1\l  %59 = add i32 %2, -2\l  %60 = and i32 %58, 3\l  %61 = icmp ult i32 %59, 3\l  br i1 %61, label %120, label %62\l|{<s0>T|<s1>F}}"];
	Node0x6280f70:s0 -> Node0x62812b0;
	Node0x6280f70:s1 -> Node0x6281300;
	Node0x6281300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%62:\l62:                                               \l  %63 = and i32 %58, -4\l  br label %64\l}"];
	Node0x6281300 -> Node0x62814d0;
	Node0x62814d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi i32 [ 1, %62 ], [ %106, %64 ]\l  %66 = phi i32 [ 0, %62 ], [ %107, %64 ]\l  %67 = mul nsw i32 %65, %12\l  %68 = srem i32 %67, %2\l  %69 = shl nsw i32 %68, 1\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7\l  %73 = add nsw i32 %65, %53\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  store float %72, float addrspace(1)* %75, align 4, !tbaa !7\l  %76 = add nuw nsw i32 %65, 1\l  %77 = mul nsw i32 %76, %12\l  %78 = srem i32 %77, %2\l  %79 = shl nsw i32 %78, 1\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = add nsw i32 %76, %53\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  store float %82, float addrspace(1)* %85, align 4, !tbaa !7\l  %86 = add nuw nsw i32 %65, 2\l  %87 = mul nsw i32 %86, %12\l  %88 = srem i32 %87, %2\l  %89 = shl nsw i32 %88, 1\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = add nsw i32 %86, %53\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  store float %92, float addrspace(1)* %95, align 4, !tbaa !7\l  %96 = add nuw nsw i32 %65, 3\l  %97 = mul nsw i32 %96, %12\l  %98 = srem i32 %97, %2\l  %99 = shl nsw i32 %98, 1\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !7\l  %103 = add nsw i32 %96, %53\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  store float %102, float addrspace(1)* %105, align 4, !tbaa !7\l  %106 = add nuw nsw i32 %65, 4\l  %107 = add i32 %66, 4\l  %108 = icmp eq i32 %107, %63\l  br i1 %108, label %120, label %64, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x62814d0:s0 -> Node0x62812b0;
	Node0x62814d0:s1 -> Node0x62814d0;
	Node0x627dfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%109:\l109:                                              \l  %110 = phi i32 [ 0, %18 ], [ %49, %23 ]\l  %111 = icmp eq i32 %19, 0\l  br i1 %111, label %138, label %112\l|{<s0>T|<s1>F}}"];
	Node0x627dfa0:s0 -> Node0x627d8b0;
	Node0x627dfa0:s1 -> Node0x6283520;
	Node0x6283520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%112:\l112:                                              \l  %113 = phi i32 [ %117, %112 ], [ %110, %109 ]\l  %114 = phi i32 [ %118, %112 ], [ 0, %109 ]\l  %115 = zext i32 %113 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  store float 1.000000e+00, float addrspace(1)* %116, align 4, !tbaa !7\l  %117 = add nuw nsw i32 %113, 1\l  %118 = add i32 %114, 1\l  %119 = icmp eq i32 %118, %19\l  br i1 %119, label %138, label %112, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x6283520:s0 -> Node0x627d8b0;
	Node0x6283520:s1 -> Node0x6283520;
	Node0x62812b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%120:\l120:                                              \l  %121 = phi i32 [ 1, %57 ], [ %106, %64 ]\l  %122 = icmp eq i32 %60, 0\l  br i1 %122, label %138, label %123\l|{<s0>T|<s1>F}}"];
	Node0x62812b0:s0 -> Node0x627d8b0;
	Node0x62812b0:s1 -> Node0x6283df0;
	Node0x6283df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%123:\l123:                                              \l  %124 = phi i32 [ %135, %123 ], [ %121, %120 ]\l  %125 = phi i32 [ %136, %123 ], [ 0, %120 ]\l  %126 = mul nsw i32 %124, %12\l  %127 = srem i32 %126, %2\l  %128 = shl nsw i32 %127, 1\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = add nsw i32 %124, %53\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  store float %131, float addrspace(1)* %134, align 4, !tbaa !7\l  %135 = add nuw nsw i32 %124, 1\l  %136 = add i32 %125, 1\l  %137 = icmp eq i32 %136, %60\l  br i1 %137, label %138, label %123, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6283df0:s0 -> Node0x627d8b0;
	Node0x6283df0:s1 -> Node0x6283df0;
	Node0x627d8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%138:\l138:                                              \l  ret void\l}"];
}
