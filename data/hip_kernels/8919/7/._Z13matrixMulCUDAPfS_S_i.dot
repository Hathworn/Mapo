digraph "CFG for '_Z13matrixMulCUDAPfS_S_i' function" {
	label="CFG for '_Z13matrixMulCUDAPfS_S_i' function";

	Node0x500e700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = icmp slt i32 %5, %3\l  %8 = icmp slt i32 %6, %3\l  %9 = select i1 %7, i1 %8, i1 false\l  br i1 %9, label %10, label %147\l|{<s0>T|<s1>F}}"];
	Node0x500e700:s0 -> Node0x5010510;
	Node0x500e700:s1 -> Node0x50105a0;
	Node0x5010510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = mul nsw i32 %5, %3\l  %12 = add i32 %3, -1\l  %13 = and i32 %3, 7\l  %14 = icmp ult i32 %12, 7\l  br i1 %14, label %119, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5010510:s0 -> Node0x5010980;
	Node0x5010510:s1 -> Node0x50109d0;
	Node0x50109d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%15:\l15:                                               \l  %16 = and i32 %3, -8\l  br label %17\l}"];
	Node0x50109d0 -> Node0x500fdc0;
	Node0x500fdc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = phi float [ 0.000000e+00, %15 ], [ %115, %17 ]\l  %19 = phi i32 [ 0, %15 ], [ %116, %17 ]\l  %20 = phi i32 [ 0, %15 ], [ %117, %17 ]\l  %21 = add nsw i32 %19, %11\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %25 = mul nsw i32 %19, %3\l  %26 = add nsw i32 %25, %6\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %30 = fmul contract float %24, %29\l  %31 = fadd contract float %18, %30\l  %32 = or i32 %19, 1\l  %33 = add nsw i32 %32, %11\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %37 = mul nsw i32 %32, %3\l  %38 = add nsw i32 %37, %6\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %42 = fmul contract float %36, %41\l  %43 = fadd contract float %31, %42\l  %44 = or i32 %19, 2\l  %45 = add nsw i32 %44, %11\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %49 = mul nsw i32 %44, %3\l  %50 = add nsw i32 %49, %6\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = fmul contract float %48, %53\l  %55 = fadd contract float %43, %54\l  %56 = or i32 %19, 3\l  %57 = add nsw i32 %56, %11\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = mul nsw i32 %56, %3\l  %62 = add nsw i32 %61, %6\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %2, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %66 = fmul contract float %60, %65\l  %67 = fadd contract float %55, %66\l  %68 = or i32 %19, 4\l  %69 = add nsw i32 %68, %11\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %73 = mul nsw i32 %68, %3\l  %74 = add nsw i32 %73, %6\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %2, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = fmul contract float %72, %77\l  %79 = fadd contract float %67, %78\l  %80 = or i32 %19, 5\l  %81 = add nsw i32 %80, %11\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %85 = mul nsw i32 %80, %3\l  %86 = add nsw i32 %85, %6\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %90 = fmul contract float %84, %89\l  %91 = fadd contract float %79, %90\l  %92 = or i32 %19, 6\l  %93 = add nsw i32 %92, %11\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = mul nsw i32 %92, %3\l  %98 = add nsw i32 %97, %6\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %99\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %102 = fmul contract float %96, %101\l  %103 = fadd contract float %91, %102\l  %104 = or i32 %19, 7\l  %105 = add nsw i32 %104, %11\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %109 = mul nsw i32 %104, %3\l  %110 = add nsw i32 %109, %6\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %2, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %114 = fmul contract float %108, %113\l  %115 = fadd contract float %103, %114\l  %116 = add nuw nsw i32 %19, 8\l  %117 = add i32 %20, 8\l  %118 = icmp eq i32 %117, %16\l  br i1 %118, label %119, label %17, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x500fdc0:s0 -> Node0x5010980;
	Node0x500fdc0:s1 -> Node0x500fdc0;
	Node0x5010980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%119:\l119:                                              \l  %120 = phi float [ undef, %10 ], [ %115, %17 ]\l  %121 = phi float [ 0.000000e+00, %10 ], [ %115, %17 ]\l  %122 = phi i32 [ 0, %10 ], [ %116, %17 ]\l  %123 = icmp eq i32 %13, 0\l  br i1 %123, label %142, label %124\l|{<s0>T|<s1>F}}"];
	Node0x5010980:s0 -> Node0x5016e00;
	Node0x5010980:s1 -> Node0x5016e50;
	Node0x5016e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  %125 = phi float [ %138, %124 ], [ %121, %119 ]\l  %126 = phi i32 [ %139, %124 ], [ %122, %119 ]\l  %127 = phi i32 [ %140, %124 ], [ 0, %119 ]\l  %128 = add nsw i32 %126, %11\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %1, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %132 = mul nsw i32 %126, %3\l  %133 = add nsw i32 %132, %6\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %2, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %137 = fmul contract float %131, %136\l  %138 = fadd contract float %125, %137\l  %139 = add nuw nsw i32 %126, 1\l  %140 = add i32 %127, 1\l  %141 = icmp eq i32 %140, %13\l  br i1 %141, label %142, label %124, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5016e50:s0 -> Node0x5016e00;
	Node0x5016e50:s1 -> Node0x5016e50;
	Node0x5016e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%142:\l142:                                              \l  %143 = phi float [ %120, %119 ], [ %138, %124 ]\l  %144 = add nsw i32 %11, %6\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  store float %143, float addrspace(1)* %146, align 4, !tbaa !5\l  br label %147\l}"];
	Node0x5016e00 -> Node0x50105a0;
	Node0x50105a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%147:\l147:                                              \l  ret void\l}"];
}
