digraph "CFG for '_Z8multiplyPfS_S_i' function" {
	label="CFG for '_Z8multiplyPfS_S_i' function";

	Node0x5dc17e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !7\l  %22 = mul i32 %14, %18\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = udiv i32 %21, %18\l  %26 = mul i32 %25, %18\l  %27 = icmp ugt i32 %21, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = icmp eq i32 %29, 0\l  %31 = mul nsw i32 %13, %3\l  br i1 %30, label %68, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5dc17e0:s0 -> Node0x5dc5770;
	Node0x5dc17e0:s1 -> Node0x5dc5800;
	Node0x5dc5800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%32:\l32:                                               \l  %33 = add i32 %31, %23\l  %34 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 %23\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 %12, i32 %23\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 0\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 0, i32 %23\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 1\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 1, i32 %23\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 2\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 2, i32 %23\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 3\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 3, i32 %23\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 4\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 4, i32 %23\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 5\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 5, i32 %23\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 6\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 6, i32 %23\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 7\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 7, i32 %23\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 8\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 8, i32 %23\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 9\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 9, i32 %23\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 10\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 10, i32 %23\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 11\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 11, i32 %23\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 12\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 12, i32 %23\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 13\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 13, i32 %23\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 14\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 14, i32 %23\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE13Left_shared_t, i32 0, i32 %12, i32 15\l  %67 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ8multiplyPfS_S_iE14Right_shared_t, i32 0, i32 15, i32 %23\l  br label %73\l}"];
	Node0x5dc5800 -> Node0x5dc39e0;
	Node0x5dc5770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%68:\l68:                                               \l  %69 = phi float [ 0.000000e+00, %4 ], [ %150, %73 ]\l  %70 = add nsw i32 %31, %24\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !16\l  ret void\l}"];
	Node0x5dc39e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = phi i32 [ 0, %32 ], [ %151, %73 ]\l  %75 = phi float [ 0.000000e+00, %32 ], [ %150, %73 ]\l  %76 = shl nsw i32 %74, 4\l  %77 = add nuw i32 %76, %12\l  %78 = add i32 %33, %76\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  store float %81, float addrspace(3)* %34, align 4, !tbaa !16\l  %82 = mul nsw i32 %77, %3\l  %83 = add nsw i32 %82, %24\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16,\l... !amdgpu.noclobber !5\l  store float %86, float addrspace(3)* %35, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %87 = load float, float addrspace(3)* %36, align 16, !tbaa !16\l  %88 = load float, float addrspace(3)* %37, align 4, !tbaa !16\l  %89 = fmul contract float %87, %88\l  %90 = fadd contract float %75, %89\l  %91 = load float, float addrspace(3)* %38, align 4, !tbaa !16\l  %92 = load float, float addrspace(3)* %39, align 4, !tbaa !16\l  %93 = fmul contract float %91, %92\l  %94 = fadd contract float %90, %93\l  %95 = load float, float addrspace(3)* %40, align 8, !tbaa !16\l  %96 = load float, float addrspace(3)* %41, align 4, !tbaa !16\l  %97 = fmul contract float %95, %96\l  %98 = fadd contract float %94, %97\l  %99 = load float, float addrspace(3)* %42, align 4, !tbaa !16\l  %100 = load float, float addrspace(3)* %43, align 4, !tbaa !16\l  %101 = fmul contract float %99, %100\l  %102 = fadd contract float %98, %101\l  %103 = load float, float addrspace(3)* %44, align 16, !tbaa !16\l  %104 = load float, float addrspace(3)* %45, align 4, !tbaa !16\l  %105 = fmul contract float %103, %104\l  %106 = fadd contract float %102, %105\l  %107 = load float, float addrspace(3)* %46, align 4, !tbaa !16\l  %108 = load float, float addrspace(3)* %47, align 4, !tbaa !16\l  %109 = fmul contract float %107, %108\l  %110 = fadd contract float %106, %109\l  %111 = load float, float addrspace(3)* %48, align 8, !tbaa !16\l  %112 = load float, float addrspace(3)* %49, align 4, !tbaa !16\l  %113 = fmul contract float %111, %112\l  %114 = fadd contract float %110, %113\l  %115 = load float, float addrspace(3)* %50, align 4, !tbaa !16\l  %116 = load float, float addrspace(3)* %51, align 4, !tbaa !16\l  %117 = fmul contract float %115, %116\l  %118 = fadd contract float %114, %117\l  %119 = load float, float addrspace(3)* %52, align 16, !tbaa !16\l  %120 = load float, float addrspace(3)* %53, align 4, !tbaa !16\l  %121 = fmul contract float %119, %120\l  %122 = fadd contract float %118, %121\l  %123 = load float, float addrspace(3)* %54, align 4, !tbaa !16\l  %124 = load float, float addrspace(3)* %55, align 4, !tbaa !16\l  %125 = fmul contract float %123, %124\l  %126 = fadd contract float %122, %125\l  %127 = load float, float addrspace(3)* %56, align 8, !tbaa !16\l  %128 = load float, float addrspace(3)* %57, align 4, !tbaa !16\l  %129 = fmul contract float %127, %128\l  %130 = fadd contract float %126, %129\l  %131 = load float, float addrspace(3)* %58, align 4, !tbaa !16\l  %132 = load float, float addrspace(3)* %59, align 4, !tbaa !16\l  %133 = fmul contract float %131, %132\l  %134 = fadd contract float %130, %133\l  %135 = load float, float addrspace(3)* %60, align 16, !tbaa !16\l  %136 = load float, float addrspace(3)* %61, align 4, !tbaa !16\l  %137 = fmul contract float %135, %136\l  %138 = fadd contract float %134, %137\l  %139 = load float, float addrspace(3)* %62, align 4, !tbaa !16\l  %140 = load float, float addrspace(3)* %63, align 4, !tbaa !16\l  %141 = fmul contract float %139, %140\l  %142 = fadd contract float %138, %141\l  %143 = load float, float addrspace(3)* %64, align 8, !tbaa !16\l  %144 = load float, float addrspace(3)* %65, align 4, !tbaa !16\l  %145 = fmul contract float %143, %144\l  %146 = fadd contract float %142, %145\l  %147 = load float, float addrspace(3)* %66, align 4, !tbaa !16\l  %148 = load float, float addrspace(3)* %67, align 4, !tbaa !16\l  %149 = fmul contract float %147, %148\l  %150 = fadd contract float %146, %149\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %151 = add nuw nsw i32 %74, 1\l  %152 = icmp eq i32 %151, %29\l  br i1 %152, label %68, label %73, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5dc39e0:s0 -> Node0x5dc5770;
	Node0x5dc39e0:s1 -> Node0x5dc39e0;
}
