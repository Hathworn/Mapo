digraph "CFG for '_Z32CudaKernel_BatchResize_GRAY2GRAYiPhiPiiiPf' function" {
	label="CFG for '_Z32CudaKernel_BatchResize_GRAY2GRAYiPhiPiiiPf' function";

	Node0x62be090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = mul nsw i32 %5, %4\l  %18 = mul nsw i32 %17, %2\l  %19 = icmp sgt i32 %18, %16\l  br i1 %19, label %20, label %113\l|{<s0>T|<s1>F}}"];
	Node0x62be090:s0 -> Node0x62c0120;
	Node0x62be090:s1 -> Node0x62c01b0;
	Node0x62c0120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = freeze i32 %16\l  %22 = freeze i32 %17\l  %23 = sdiv i32 %21, %22\l  %24 = mul i32 %23, %22\l  %25 = sub i32 %21, %24\l  %26 = shl nsw i32 %23, 2\l  %27 = add nuw nsw i32 %26, 2\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %31 = sitofp i32 %30 to float\l  %32 = sitofp i32 %4 to float\l  %33 = fdiv contract float %31, %32\l  %34 = freeze i32 %4\l  %35 = sdiv i32 %25, %34\l  %36 = mul i32 %35, %34\l  %37 = sub i32 %25, %36\l  %38 = sitofp i32 %37 to float\l  %39 = fadd contract float %38, 5.000000e-01\l  %40 = fmul contract float %33, %39\l  %41 = fadd contract float %40, -5.000000e-01\l  %42 = tail call float @llvm.floor.f32(float %41)\l  %43 = fptosi float %42 to i32\l  %44 = sitofp i32 %43 to float\l  %45 = fsub contract float %44, %41\l  %46 = fadd contract float %45, 1.000000e+00\l  %47 = add nuw nsw i32 %26, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = sitofp i32 %50 to float\l  %52 = sitofp i32 %5 to float\l  %53 = fdiv contract float %51, %52\l  %54 = sitofp i32 %35 to float\l  %55 = fadd contract float %54, 5.000000e-01\l  %56 = fmul contract float %53, %55\l  %57 = fadd contract float %56, -5.000000e-01\l  %58 = tail call float @llvm.floor.f32(float %57)\l  %59 = fptosi float %58 to i32\l  %60 = sitofp i32 %59 to float\l  %61 = fsub contract float %60, %57\l  %62 = fadd contract float %61, 1.000000e+00\l  %63 = sext i32 %26 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %66 = add nuw nsw i32 %26, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = add nsw i32 %69, %59\l  %71 = mul nsw i32 %70, %0\l  %72 = add nsw i32 %65, %43\l  %73 = add nsw i32 %71, %72\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %77 = uitofp i8 %76 to float\l  %78 = fmul contract float %46, %77\l  %79 = fmul contract float %78, %62\l  %80 = fadd contract float %79, 0.000000e+00\l  %81 = add nsw i32 %72, 1\l  %82 = add nsw i32 %71, %81\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %83\l  %85 = load i8, i8 addrspace(1)* %84, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %86 = uitofp i8 %85 to float\l  %87 = fsub contract float 1.000000e+00, %46\l  %88 = fmul contract float %87, %86\l  %89 = fmul contract float %88, %62\l  %90 = fadd contract float %89, %80\l  %91 = add nsw i32 %70, 1\l  %92 = mul nsw i32 %91, %0\l  %93 = add nsw i32 %92, %72\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %94\l  %96 = load i8, i8 addrspace(1)* %95, align 1, !tbaa !11, !amdgpu.noclobber !5\l  %97 = uitofp i8 %96 to float\l  %98 = fmul contract float %46, %97\l  %99 = fsub contract float 1.000000e+00, %62\l  %100 = fmul contract float %98, %99\l  %101 = fadd contract float %100, %90\l  %102 = add nsw i32 %92, %81\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %103\l  %105 = load i8, i8 addrspace(1)* %104, align 1, !tbaa !11, !amdgpu.noclobber\l... !5\l  %106 = uitofp i8 %105 to float\l  %107 = fmul contract float %87, %106\l  %108 = fmul contract float %107, %99\l  %109 = fadd contract float %108, %101\l  %110 = fdiv contract float %109, 2.550000e+02\l  %111 = zext i32 %16 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %6, i64 %111\l  store float %110, float addrspace(1)* %112, align 4, !tbaa !12\l  br label %113\l}"];
	Node0x62c0120 -> Node0x62c01b0;
	Node0x62c01b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  ret void\l}"];
}
