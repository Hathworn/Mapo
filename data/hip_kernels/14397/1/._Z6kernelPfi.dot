digraph "CFG for '_Z6kernelPfi' function" {
	label="CFG for '_Z6kernelPfi' function";

	Node0x4841490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !7\l  %13 = mul i32 %4, %9\l  %14 = add i32 %13, %3\l  %15 = icmp slt i32 %14, %1\l  br i1 %15, label %16, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4841490:s0 -> Node0x4842440;
	Node0x4841490:s1 -> Node0x4843750;
	Node0x4842440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = udiv i32 %12, %9\l  %18 = mul i32 %17, %9\l  %19 = icmp ugt i32 %12, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %9\l  br label %24\l}"];
	Node0x4842440 -> Node0x4843c50;
	Node0x4843750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x4843c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %14, %16 ], [ %94, %24 ]\l  %26 = sitofp i32 %25 to double\l  %27 = fmul double %26, 0x3FF250CF662ABF9A\l  %28 = fneg double %27\l  %29 = tail call double @llvm.fma.f64(double %26, double 0x3FF250CF662ABF9A,\l... double %28)\l  %30 = tail call double @llvm.fma.f64(double %26, double 0x3C96EBD950D8F4A6,\l... double %29)\l  %31 = fadd double %27, %30\l  %32 = fsub double %31, %27\l  %33 = fsub double %30, %32\l  %34 = tail call double @llvm.fabs.f64(double %27) #3\l  %35 = fcmp oeq double %34, 0x7FF0000000000000\l  %36 = select i1 %35, double %27, double %31\l  %37 = tail call double @llvm.fabs.f64(double %36) #3\l  %38 = fcmp oeq double %37, 0x7FF0000000000000\l  %39 = select i1 %38, double 0.000000e+00, double %33\l  %40 = fmul double %36, 0x3FF71547652B82FE\l  %41 = tail call double @llvm.rint.f64(double %40)\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double 0x3FE62E42FEFA39EF,\l... double %36)\l  %44 = tail call double @llvm.fma.f64(double %42, double 0x3C7ABC9E3B39803F,\l... double %43)\l  %45 = tail call double @llvm.fma.f64(double %44, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %46 = tail call double @llvm.fma.f64(double %44, double %45, double\l... 0x3EC71DEE623FDE64)\l  %47 = tail call double @llvm.fma.f64(double %44, double %46, double\l... 0x3EFA01997C89E6B0)\l  %48 = tail call double @llvm.fma.f64(double %44, double %47, double\l... 0x3F2A01A014761F6E)\l  %49 = tail call double @llvm.fma.f64(double %44, double %48, double\l... 0x3F56C16C1852B7B0)\l  %50 = tail call double @llvm.fma.f64(double %44, double %49, double\l... 0x3F81111111122322)\l  %51 = tail call double @llvm.fma.f64(double %44, double %50, double\l... 0x3FA55555555502A1)\l  %52 = tail call double @llvm.fma.f64(double %44, double %51, double\l... 0x3FC5555555555511)\l  %53 = tail call double @llvm.fma.f64(double %44, double %52, double\l... 0x3FE000000000000B)\l  %54 = tail call double @llvm.fma.f64(double %44, double %53, double\l... 1.000000e+00)\l  %55 = tail call double @llvm.fma.f64(double %44, double %54, double\l... 1.000000e+00)\l  %56 = fptosi double %41 to i32\l  %57 = tail call double @llvm.amdgcn.ldexp.f64(double %55, i32 %56)\l  %58 = fcmp ogt double %36, 1.024000e+03\l  %59 = select i1 %58, double 0x7FF0000000000000, double %57\l  %60 = fcmp olt double %36, -1.075000e+03\l  %61 = select i1 %60, double 0.000000e+00, double %59\l  %62 = tail call double @llvm.fma.f64(double %61, double %39, double %61)\l  %63 = tail call double @llvm.fabs.f64(double %61) #3\l  %64 = fcmp oeq double %63, 0x7FF0000000000000\l  %65 = select i1 %64, double %61, double %62\l  %66 = tail call double @llvm.fabs.f64(double %65)\l  %67 = icmp eq i32 %25, 0\l  %68 = select i1 %67, double 1.000000e+00, double %66\l  %69 = fcmp olt double %68, 0x1000000000000000\l  %70 = select i1 %69, double 0x4FF0000000000000, double 1.000000e+00\l  %71 = fmul double %68, %70\l  %72 = tail call double @llvm.amdgcn.rsq.f64(double %71)\l  %73 = fmul double %71, %72\l  %74 = fmul double %72, 5.000000e-01\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %75, double %73, double\l... 5.000000e-01)\l  %77 = tail call double @llvm.fma.f64(double %74, double %76, double %74)\l  %78 = tail call double @llvm.fma.f64(double %73, double %76, double %73)\l  %79 = fneg double %78\l  %80 = tail call double @llvm.fma.f64(double %79, double %78, double %71)\l  %81 = tail call double @llvm.fma.f64(double %80, double %77, double %78)\l  %82 = fneg double %81\l  %83 = tail call double @llvm.fma.f64(double %82, double %81, double %71)\l  %84 = tail call double @llvm.fma.f64(double %83, double %77, double %81)\l  %85 = select i1 %69, double 0x37F0000000000000, double 1.000000e+00\l  %86 = fmul double %85, %84\l  %87 = fcmp oeq double %71, 0.000000e+00\l  %88 = fcmp oeq double %71, 0x7FF0000000000000\l  %89 = or i1 %87, %88\l  %90 = select i1 %89, double %71, double %86\l  %91 = fptrunc double %90 to float\l  %92 = sext i32 %25 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  store float %91, float addrspace(1)* %93, align 4, !tbaa !16\l  %94 = add i32 %22, %25\l  %95 = icmp slt i32 %94, %1\l  br i1 %95, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4843c50:s0 -> Node0x4843c50;
	Node0x4843c50:s1 -> Node0x4843750;
}
