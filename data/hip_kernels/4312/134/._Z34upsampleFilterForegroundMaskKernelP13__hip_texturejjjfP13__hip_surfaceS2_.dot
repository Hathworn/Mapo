digraph "CFG for '_Z34upsampleFilterForegroundMaskKernelP13__hip_texturejjjfP13__hip_surfaceS2_' function" {
	label="CFG for '_Z34upsampleFilterForegroundMaskKernelP13__hip_texturejjjfP13__hip_surfaceS2_' function";

	Node0x61dd840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp ult i32 %16, %2\l  %26 = icmp ult i32 %24, %1\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %244\l|{<s0>T|<s1>F}}"];
	Node0x61dd840:s0 -> Node0x61e0c80;
	Node0x61dd840:s1 -> Node0x61e0d10;
	Node0x61e0c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%28:\l28:                                               \l  %29 = tail call float @llvm.ceil.f32(float %4)\l  %30 = fptoui float %29 to i32\l  %31 = shl i32 %30, 1\l  %32 = sub nsw i32 %24, %31\l  %33 = add i32 %24, %31\l  %34 = icmp sgt i32 %32, %33\l  br i1 %34, label %49, label %35\l|{<s0>T|<s1>F}}"];
	Node0x61e0c80:s0 -> Node0x61df0e0;
	Node0x61e0c80:s1 -> Node0x61e1470;
	Node0x61e1470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%35:\l35:                                               \l  %36 = sub nsw i32 %16, %31\l  %37 = add i32 %16, %31\l  %38 = icmp sgt i32 %36, %37\l  %39 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %40 = addrspacecast i32 addrspace(1)* %39 to i32 addrspace(4)*\l  %41 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 12\l  %42 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 10\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 2\l  %44 = getelementptr inbounds i32, i32 addrspace(4)* %40, i64 14\l  %45 = fmul contract float %4, %4\l  %46 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %47 = addrspacecast \<8 x i32\> addrspace(1)* %46 to \<8 x i32\> addrspace(4)*\l  %48 = bitcast i32 addrspace(4)* %41 to \<4 x i32\> addrspace(4)*\l  br label %96\l}"];
	Node0x61e1470 -> Node0x61e2340;
	Node0x61df0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%49:\l49:                                               \l  %50 = phi float [ 0.000000e+00, %28 ], [ %130, %129 ]\l  %51 = phi float [ 0.000000e+00, %28 ], [ %131, %129 ]\l  %52 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %53 = addrspacecast i32 addrspace(1)* %52 to i32 addrspace(4)*\l  %54 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %55 = addrspacecast \<8 x i32\> addrspace(1)* %54 to \<8 x i32\> addrspace(4)*\l  %56 = udiv i32 %16, %3\l  %57 = udiv i32 %24, %3\l  %58 = uitofp i32 %56 to float\l  %59 = uitofp i32 %57 to float\l  %60 = getelementptr inbounds i32, i32 addrspace(4)* %53, i64 12\l  %61 = getelementptr inbounds i32, i32 addrspace(4)* %53, i64 10\l  %62 = load i32, i32 addrspace(4)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %63 = uitofp i32 %62 to float\l  %64 = getelementptr inbounds i32, i32 addrspace(4)* %53, i64 2\l  %65 = load i32, i32 addrspace(4)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %66 = lshr i32 %65, 14\l  %67 = and i32 %66, 16383\l  %68 = add nuw nsw i32 %67, 1\l  %69 = uitofp i32 %68 to float\l  %70 = load i32, i32 addrspace(4)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %71 = and i32 %70, 32768\l  %72 = icmp eq i32 %71, 0\l  %73 = select i1 %72, float %63, float 1.000000e+00\l  %74 = select i1 %72, float %69, float 1.000000e+00\l  %75 = getelementptr inbounds i32, i32 addrspace(4)* %53, i64 14\l  %76 = load i32, i32 addrspace(4)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %77 = and i32 %76, 1048576\l  %78 = icmp eq i32 %77, 0\l  %79 = bitcast i32 addrspace(4)* %60 to \<4 x i32\> addrspace(4)*\l  %80 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %79, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %81 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %55, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %82 = tail call float @llvm.amdgcn.rcp.f32(float %74)\l  %83 = fmul float %74, %59\l  %84 = tail call float @llvm.floor.f32(float %83)\l  %85 = fmul float %82, %84\l  %86 = select i1 %78, float %85, float %59\l  %87 = tail call float @llvm.amdgcn.rcp.f32(float %73)\l  %88 = fmul float %73, %58\l  %89 = tail call float @llvm.floor.f32(float %88)\l  %90 = fmul float %87, %89\l  %91 = select i1 %78, float %90, float %58\l  %92 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %91, float %86, \<8 x i32\> %81, \<4 x i32\> %80, i1 false, i32 0, i32 0)\l  %93 = bitcast float %92 to i32\l  %94 = and i32 %93, 255\l  %95 = icmp eq i32 %94, 0\l  br i1 %95, label %173, label %176\l|{<s0>T|<s1>F}}"];
	Node0x61df0e0:s0 -> Node0x61e62b0;
	Node0x61df0e0:s1 -> Node0x61e6300;
	Node0x61e2340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%96:\l96:                                               \l  %97 = phi float [ 0.000000e+00, %35 ], [ %131, %129 ]\l  %98 = phi float [ 0.000000e+00, %35 ], [ %130, %129 ]\l  %99 = phi i32 [ %32, %35 ], [ %132, %129 ]\l  br i1 %38, label %129, label %100\l|{<s0>T|<s1>F}}"];
	Node0x61e2340:s0 -> Node0x61e2ec0;
	Node0x61e2340:s1 -> Node0x61e6680;
	Node0x61e6680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%100:\l100:                                              \l  %101 = udiv i32 %99, %3\l  %102 = uitofp i32 %101 to float\l  %103 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %104 = uitofp i32 %103 to float\l  %105 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %106 = lshr i32 %105, 14\l  %107 = and i32 %106, 16383\l  %108 = add nuw nsw i32 %107, 1\l  %109 = uitofp i32 %108 to float\l  %110 = load i32, i32 addrspace(4)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %111 = and i32 %110, 32768\l  %112 = icmp eq i32 %111, 0\l  %113 = select i1 %112, float %104, float 1.000000e+00\l  %114 = select i1 %112, float %109, float 1.000000e+00\l  %115 = load i32, i32 addrspace(4)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %116 = and i32 %115, 1048576\l  %117 = icmp eq i32 %116, 0\l  %118 = sub nsw i32 %99, %24\l  %119 = mul nsw i32 %118, %118\l  %120 = sitofp i32 %119 to float\l  %121 = tail call float @llvm.amdgcn.rcp.f32(float %113)\l  %122 = tail call float @llvm.amdgcn.rcp.f32(float %114)\l  %123 = fmul float %114, %102\l  %124 = tail call float @llvm.floor.f32(float %123)\l  %125 = fmul float %122, %124\l  %126 = select i1 %117, float %125, float %102\l  %127 = icmp sgt i32 %99, -1\l  %128 = icmp ult i32 %99, %1\l  br label %134\l}"];
	Node0x61e6680 -> Node0x61e3950;
	Node0x61e2ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%129:\l129:                                              \l  %130 = phi float [ %98, %96 ], [ %169, %168 ]\l  %131 = phi float [ %97, %96 ], [ %170, %168 ]\l  %132 = add i32 %99, 1\l  %133 = icmp eq i32 %99, %33\l  br i1 %133, label %49, label %96, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x61e2ec0:s0 -> Node0x61df0e0;
	Node0x61e2ec0:s1 -> Node0x61e2340;
	Node0x61e3950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi float [ %97, %100 ], [ %170, %168 ]\l  %136 = phi float [ %98, %100 ], [ %169, %168 ]\l  %137 = phi i32 [ %36, %100 ], [ %171, %168 ]\l  %138 = udiv i32 %137, %3\l  %139 = uitofp i32 %138 to float\l  %140 = sub nsw i32 %137, %16\l  %141 = mul nsw i32 %140, %140\l  %142 = sitofp i32 %141 to float\l  %143 = fadd contract float %120, %142\l  %144 = fmul contract float %143, 5.000000e-01\l  %145 = fdiv contract float %144, %45\l  %146 = tail call float @llvm.exp.f32(float %145)\l  %147 = icmp sgt i32 %137, -1\l  br i1 %147, label %148, label %168\l|{<s0>T|<s1>F}}"];
	Node0x61e3950:s0 -> Node0x61e8bd0;
	Node0x61e3950:s1 -> Node0x61e3a10;
	Node0x61e8bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%148:\l148:                                              \l  %149 = fmul float %113, %139\l  %150 = tail call float @llvm.floor.f32(float %149)\l  %151 = fmul float %121, %150\l  %152 = select i1 %117, float %151, float %139\l  %153 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %47, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %154 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %48, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %155 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %152, float %126, \<8 x i32\> %153, \<4 x i32\> %154, i1 false, i32 0, i32 0)\l  %156 = bitcast float %155 to i32\l  %157 = icmp ult i32 %137, %2\l  %158 = select i1 %157, i1 %127, i1 false\l  %159 = select i1 %158, i1 %128, i1 false\l  %160 = and i32 %156, 255\l  %161 = sub nsw i32 1, %160\l  %162 = sitofp i32 %161 to float\l  %163 = fmul contract float %146, %162\l  %164 = select i1 %159, float %163, float -0.000000e+00\l  %165 = fadd contract float %136, %164\l  %166 = select i1 %159, float %146, float -0.000000e+00\l  %167 = fadd contract float %135, %166\l  br label %168\l}"];
	Node0x61e8bd0 -> Node0x61e3a10;
	Node0x61e3a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%168:\l168:                                              \l  %169 = phi float [ %136, %134 ], [ %165, %148 ]\l  %170 = phi float [ %135, %134 ], [ %167, %148 ]\l  %171 = add i32 %137, 1\l  %172 = icmp eq i32 %137, %37\l  br i1 %172, label %129, label %134, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x61e3a10:s0 -> Node0x61e2ec0;
	Node0x61e3a10:s1 -> Node0x61e3950;
	Node0x61e62b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%173:\l173:                                              \l  %174 = fadd contract float %51, 0x3F50624DE0000000\l  %175 = fdiv contract float %50, %174\l  br label %176\l}"];
	Node0x61e62b0 -> Node0x61e6300;
	Node0x61e6300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%176:\l176:                                              \l  %177 = phi float [ %175, %173 ], [ 0.000000e+00, %49 ]\l  %178 = bitcast %struct.__hip_surface addrspace(1)* %5 to i32 addrspace(1)*\l  %179 = addrspacecast i32 addrspace(1)* %178 to i32 addrspace(4)*\l  %180 = getelementptr inbounds i32, i32 addrspace(4)* %179, i64 8\l  %181 = load i32, i32 addrspace(4)* %180, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %182 = getelementptr inbounds i32, i32 addrspace(4)* %179, i64 9\l  %183 = load i32, i32 addrspace(4)* %182, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %184 = icmp eq i32 %181, 4\l  br i1 %184, label %185, label %187\l|{<s0>T|<s1>F}}"];
	Node0x61e6300:s0 -> Node0x61ea4b0;
	Node0x61e6300:s1 -> Node0x61ea540;
	Node0x61ea4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%185:\l185:                                              \l  %186 = sdiv i32 %16, 3\l  br label %192\l}"];
	Node0x61ea4b0 -> Node0x61ea710;
	Node0x61ea540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%187:\l187:                                              \l  %188 = sext i32 %181 to i64\l  %189 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %188\l  %190 = load i32, i32 addrspace(4)* %189, align 4, !tbaa !15\l  %191 = ashr i32 %16, %190\l  br label %192\l}"];
	Node0x61ea540 -> Node0x61ea710;
	Node0x61ea710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%192:\l192:                                              \l  %193 = phi i32 [ %186, %185 ], [ %191, %187 ]\l  %194 = sext i32 %183 to i64\l  %195 = lshr i64 4176, %194\l  %196 = and i64 %195, 1\l  %197 = icmp eq i64 %196, 0\l  br i1 %197, label %200, label %198\l|{<s0>T|<s1>F}}"];
	Node0x61ea710:s0 -> Node0x61eae70;
	Node0x61ea710:s1 -> Node0x61eaec0;
	Node0x61eaec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%198:\l198:                                              \l  %199 = sdiv i32 %193, 3\l  br label %204\l}"];
	Node0x61eaec0 -> Node0x61eb090;
	Node0x61eae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%200:\l200:                                              \l  %201 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %194\l  %202 = load i32, i32 addrspace(4)* %201, align 4, !tbaa !15\l  %203 = ashr i32 %193, %202\l  br label %204\l}"];
	Node0x61eae70 -> Node0x61eb090;
	Node0x61eb090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%204:\l204:                                              \l  %205 = phi i32 [ %199, %198 ], [ %203, %200 ]\l  %206 = bitcast i32 %94 to float\l  %207 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %206, i64 0\l  %208 = bitcast %struct.__hip_surface addrspace(1)* %5 to \<8 x i32\>\l... addrspace(1)*\l  %209 = addrspacecast \<8 x i32\> addrspace(1)* %208 to \<8 x i32\> addrspace(4)*\l  %210 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %209, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %207, i32\l... 15, i32 %205, i32 %24, \<8 x i32\> %210, i32 0, i32 0)\l  %211 = shl i32 %16, 2\l  %212 = bitcast %struct.__hip_surface addrspace(1)* %6 to i32 addrspace(1)*\l  %213 = addrspacecast i32 addrspace(1)* %212 to i32 addrspace(4)*\l  %214 = getelementptr inbounds i32, i32 addrspace(4)* %213, i64 8\l  %215 = load i32, i32 addrspace(4)* %214, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %216 = getelementptr inbounds i32, i32 addrspace(4)* %213, i64 9\l  %217 = load i32, i32 addrspace(4)* %216, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %218 = icmp eq i32 %215, 4\l  br i1 %218, label %219, label %221\l|{<s0>T|<s1>F}}"];
	Node0x61eb090:s0 -> Node0x61ecb50;
	Node0x61eb090:s1 -> Node0x61ecbe0;
	Node0x61ecb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%219:\l219:                                              \l  %220 = sdiv i32 %211, 3\l  br label %226\l}"];
	Node0x61ecb50 -> Node0x61ecdb0;
	Node0x61ecbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%221:\l221:                                              \l  %222 = sext i32 %215 to i64\l  %223 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %222\l  %224 = load i32, i32 addrspace(4)* %223, align 4, !tbaa !15\l  %225 = ashr i32 %211, %224\l  br label %226\l}"];
	Node0x61ecbe0 -> Node0x61ecdb0;
	Node0x61ecdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%226:\l226:                                              \l  %227 = phi i32 [ %220, %219 ], [ %225, %221 ]\l  %228 = sext i32 %217 to i64\l  %229 = lshr i64 4176, %228\l  %230 = and i64 %229, 1\l  %231 = icmp eq i64 %230, 0\l  br i1 %231, label %234, label %232\l|{<s0>T|<s1>F}}"];
	Node0x61ecdb0:s0 -> Node0x61ed430;
	Node0x61ecdb0:s1 -> Node0x61ed480;
	Node0x61ed480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%232:\l232:                                              \l  %233 = sdiv i32 %227, 3\l  br label %238\l}"];
	Node0x61ed480 -> Node0x61ed610;
	Node0x61ed430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%234:\l234:                                              \l  %235 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %228\l  %236 = load i32, i32 addrspace(4)* %235, align 4, !tbaa !15\l  %237 = ashr i32 %227, %236\l  br label %238\l}"];
	Node0x61ed430 -> Node0x61ed610;
	Node0x61ed610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%238:\l238:                                              \l  %239 = phi i32 [ %233, %232 ], [ %237, %234 ]\l  %240 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %177, i64 0\l  %241 = bitcast %struct.__hip_surface addrspace(1)* %6 to \<8 x i32\>\l... addrspace(1)*\l  %242 = addrspacecast \<8 x i32\> addrspace(1)* %241 to \<8 x i32\> addrspace(4)*\l  %243 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %242, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %240, i32\l... 15, i32 %239, i32 %24, \<8 x i32\> %243, i32 0, i32 0)\l  br label %244\l}"];
	Node0x61ed610 -> Node0x61e0d10;
	Node0x61e0d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%244:\l244:                                              \l  ret void\l}"];
}
