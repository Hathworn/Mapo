digraph "CFG for '_Z25assembleBinBlockCSRKerneljPKfS0_PKiPKjPf' function" {
	label="CFG for '_Z25assembleBinBlockCSRKerneljPKfS0_PKiPKjPf' function";

	Node0x62365f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = icmp ult i32 %15, %0\l  br i1 %16, label %17, label %122\l|{<s0>T|<s1>F}}"];
	Node0x62365f0:s0 -> Node0x62375c0;
	Node0x62365f0:s1 -> Node0x62385e0;
	Node0x62375c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%17:\l17:                                               \l  %18 = zext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %21 = freeze i32 %15\l  %22 = udiv i32 %21, 6\l  %23 = mul i32 %22, 6\l  %24 = sub i32 %21, %23\l  %25 = mul i32 %22, 36\l  %26 = add i32 %25, %24\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !11\l  %30 = sext i32 %20 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %5, i64 %30\l  store float %29, float addrspace(1)* %31, align 4, !tbaa !11\l  %32 = add nsw i32 %20, 32\l  %33 = add i32 %26, 6\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !11\l  %37 = sext i32 %32 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %5, i64 %37\l  store float %36, float addrspace(1)* %38, align 4, !tbaa !11\l  %39 = add nsw i32 %20, 64\l  %40 = add i32 %26, 12\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !11\l  %44 = sext i32 %39 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %5, i64 %44\l  store float %43, float addrspace(1)* %45, align 4, !tbaa !11\l  %46 = add nsw i32 %20, 96\l  %47 = add i32 %26, 18\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !11\l  %51 = sext i32 %46 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %5, i64 %51\l  store float %50, float addrspace(1)* %52, align 4, !tbaa !11\l  %53 = add nsw i32 %20, 128\l  %54 = add i32 %26, 24\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !11\l  %58 = sext i32 %53 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  store float %57, float addrspace(1)* %59, align 4, !tbaa !11\l  %60 = add nsw i32 %20, 160\l  %61 = add i32 %26, 30\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %1, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !11\l  %65 = sext i32 %60 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %5, i64 %65\l  store float %64, float addrspace(1)* %66, align 4, !tbaa !11\l  %67 = zext i32 %22 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %67\l  %69 = bitcast i32 addrspace(1)* %68 to \<2 x i32\> addrspace(1)*\l  %70 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %69, align 4, !tbaa !7\l  %71 = extractelement \<2 x i32\> %70, i64 0\l  %72 = extractelement \<2 x i32\> %70, i64 1\l  %73 = icmp ult i32 %71, %72\l  br i1 %73, label %74, label %122\l|{<s0>T|<s1>F}}"];
	Node0x62375c0:s0 -> Node0x623c860;
	Node0x62375c0:s1 -> Node0x62385e0;
	Node0x623c860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ %120, %74 ], [ %71, %17 ]\l  %76 = phi i32 [ %77, %74 ], [ %20, %17 ]\l  %77 = add nsw i32 %76, 192\l  %78 = mul i32 %75, 36\l  %79 = add i32 %78, %24\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !11\l  %83 = sext i32 %77 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %5, i64 %83\l  store float %82, float addrspace(1)* %84, align 4, !tbaa !11\l  %85 = add nsw i32 %76, 224\l  %86 = add i32 %79, 6\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !11\l  %90 = sext i32 %85 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 %90\l  store float %89, float addrspace(1)* %91, align 4, !tbaa !11\l  %92 = add nsw i32 %76, 256\l  %93 = add i32 %79, 12\l  %94 = zext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !11\l  %97 = sext i32 %92 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %5, i64 %97\l  store float %96, float addrspace(1)* %98, align 4, !tbaa !11\l  %99 = add nsw i32 %76, 288\l  %100 = add i32 %79, 18\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %2, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !11\l  %104 = sext i32 %99 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %5, i64 %104\l  store float %103, float addrspace(1)* %105, align 4, !tbaa !11\l  %106 = add nsw i32 %76, 320\l  %107 = add i32 %79, 24\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %2, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !11\l  %111 = sext i32 %106 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %5, i64 %111\l  store float %110, float addrspace(1)* %112, align 4, !tbaa !11\l  %113 = add nsw i32 %76, 352\l  %114 = add i32 %79, 30\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %2, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !11\l  %118 = sext i32 %113 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %5, i64 %118\l  store float %117, float addrspace(1)* %119, align 4, !tbaa !11\l  %120 = add nuw i32 %75, 1\l  %121 = icmp ult i32 %120, %72\l  br i1 %121, label %74, label %122, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x623c860:s0 -> Node0x623c860;
	Node0x623c860:s1 -> Node0x62385e0;
	Node0x62385e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%122:\l122:                                              \l  ret void\l}"];
}
