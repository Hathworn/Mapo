digraph "CFG for '_Z22filterDensityMapKernelP13__hip_texturejjP13__hip_surface' function" {
	label="CFG for '_Z22filterDensityMapKernelP13__hip_texturejjP13__hip_surface' function";

	Node0x596dfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp ult i32 %13, %2\l  %23 = icmp ult i32 %21, %1\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %185\l|{<s0>T|<s1>F}}"];
	Node0x596dfc0:s0 -> Node0x5971400;
	Node0x596dfc0:s1 -> Node0x5971490;
	Node0x5971400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%25:\l25:                                               \l  %26 = uitofp i32 %13 to float\l  %27 = uitofp i32 %21 to float\l  %28 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %29 = addrspacecast i32 addrspace(1)* %28 to i32 addrspace(4)*\l  %30 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 12\l  %31 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 10\l  %32 = load i32, i32 addrspace(4)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %33 = uitofp i32 %32 to float\l  %34 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 2\l  %35 = load i32, i32 addrspace(4)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = lshr i32 %35, 14\l  %37 = and i32 %36, 16383\l  %38 = add nuw nsw i32 %37, 1\l  %39 = uitofp i32 %38 to float\l  %40 = load i32, i32 addrspace(4)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %41 = and i32 %40, 32768\l  %42 = icmp eq i32 %41, 0\l  %43 = select i1 %42, float %33, float 1.000000e+00\l  %44 = select i1 %42, float %39, float 1.000000e+00\l  %45 = getelementptr inbounds i32, i32 addrspace(4)* %29, i64 14\l  %46 = load i32, i32 addrspace(4)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %47 = and i32 %46, 1048576\l  %48 = icmp eq i32 %47, 0\l  %49 = bitcast i32 addrspace(4)* %30 to \<4 x i32\> addrspace(4)*\l  %50 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %49, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %51 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %52 = addrspacecast \<8 x i32\> addrspace(1)* %51 to \<8 x i32\> addrspace(4)*\l  %53 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %52, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %54 = tail call float @llvm.amdgcn.rcp.f32(float %44)\l  %55 = fmul float %44, %27\l  %56 = tail call float @llvm.floor.f32(float %55)\l  %57 = fmul float %54, %56\l  %58 = select i1 %48, float %57, float %27\l  %59 = tail call float @llvm.amdgcn.rcp.f32(float %43)\l  %60 = fmul float %43, %26\l  %61 = tail call float @llvm.floor.f32(float %60)\l  %62 = fmul float %59, %61\l  %63 = select i1 %48, float %62, float %26\l  %64 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %63, float %58, \<8 x i32\> %53, \<4 x i32\> %50, i1 false, i32 0, i32 0)\l  %65 = add i32 %21, -5\l  %66 = add i32 %21, 5\l  %67 = icmp ugt i32 %65, %66\l  br i1 %67, label %74, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5971400:s0 -> Node0x5975840;
	Node0x5971400:s1 -> Node0x59758d0;
	Node0x59758d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%68:\l68:                                               \l  %69 = add i32 %13, -5\l  %70 = add i32 %13, 5\l  %71 = icmp ugt i32 %69, %70\l  br label %88\l}"];
	Node0x59758d0 -> Node0x5975bc0;
	Node0x5975c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%72:\l72:                                               \l  %73 = fdiv contract float %102, %101\l  br label %74\l}"];
	Node0x5975c80 -> Node0x5975840;
	Node0x5975840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%74:\l74:                                               \l  %75 = phi float [ %73, %72 ], [ 0x7FF8000000000000, %25 ]\l  %76 = fcmp contract ult float %75, 1.000000e+00\l  %77 = fcmp contract oge float %75, 0.000000e+00\l  %78 = select contract i1 %77, float %75, float 0.000000e+00\l  %79 = select i1 %76, float %78, float 1.000000e+00\l  %80 = shl i32 %13, 2\l  %81 = bitcast %struct.__hip_surface addrspace(1)* %3 to i32 addrspace(1)*\l  %82 = addrspacecast i32 addrspace(1)* %81 to i32 addrspace(4)*\l  %83 = getelementptr inbounds i32, i32 addrspace(4)* %82, i64 8\l  %84 = load i32, i32 addrspace(4)* %83, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %85 = getelementptr inbounds i32, i32 addrspace(4)* %82, i64 9\l  %86 = load i32, i32 addrspace(4)* %85, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %87 = icmp eq i32 %84, 4\l  br i1 %87, label %160, label %162\l|{<s0>T|<s1>F}}"];
	Node0x5975840:s0 -> Node0x5976760;
	Node0x5975840:s1 -> Node0x59767f0;
	Node0x5975bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%88:\l88:                                               \l  %89 = phi float [ 0.000000e+00, %68 ], [ %102, %100 ]\l  %90 = phi float [ 0.000000e+00, %68 ], [ %101, %100 ]\l  %91 = phi i32 [ %65, %68 ], [ %103, %100 ]\l  br i1 %71, label %100, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5975bc0:s0 -> Node0x5976930;
	Node0x5975bc0:s1 -> Node0x5976c00;
	Node0x5976c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%92:\l92:                                               \l  %93 = uitofp i32 %91 to float\l  %94 = fmul float %44, %93\l  %95 = tail call float @llvm.floor.f32(float %94)\l  %96 = fmul float %54, %95\l  %97 = select i1 %48, float %96, float %93\l  %98 = sub i32 %91, %21\l  %99 = mul i32 %98, %98\l  br label %105\l}"];
	Node0x5976c00 -> Node0x59771c0;
	Node0x5976930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%100:\l100:                                              \l  %101 = phi float [ %90, %88 ], [ %155, %105 ]\l  %102 = phi float [ %89, %88 ], [ %157, %105 ]\l  %103 = add i32 %91, 1\l  %104 = icmp ugt i32 %103, %66\l  br i1 %104, label %72, label %88, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5976930:s0 -> Node0x5975c80;
	Node0x5976930:s1 -> Node0x5975bc0;
	Node0x59771c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi float [ %89, %92 ], [ %157, %105 ]\l  %107 = phi float [ %90, %92 ], [ %155, %105 ]\l  %108 = phi i32 [ %69, %92 ], [ %158, %105 ]\l  %109 = uitofp i32 %108 to float\l  %110 = fmul float %43, %109\l  %111 = tail call float @llvm.floor.f32(float %110)\l  %112 = fmul float %59, %111\l  %113 = select i1 %48, float %112, float %109\l  %114 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %113, float %97, \<8 x i32\> %53, \<4 x i32\> %50, i1 false, i32 0, i32 0)\l  %115 = fsub contract float %64, %114\l  %116 = fmul contract float %115, %115\l  %117 = sub i32 %108, %13\l  %118 = mul i32 %117, %117\l  %119 = add i32 %118, %99\l  %120 = uitofp i32 %119 to float\l  %121 = fcmp contract ogt float %114, 0.000000e+00\l  %122 = uitofp i1 %121 to float\l  %123 = fmul contract float %120, 0xBFA47AE140000000\l  %124 = fmul float %123, 0x3FF7154760000000\l  %125 = tail call float @llvm.rint.f32(float %124)\l  %126 = fcmp ogt float %123, 0x40562E4300000000\l  %127 = fcmp olt float %123, 0xC059D1DA00000000\l  %128 = fneg float %124\l  %129 = tail call float @llvm.fma.f32(float %123, float 0x3FF7154760000000,\l... float %128)\l  %130 = tail call float @llvm.fma.f32(float %123, float 0x3E54AE0BE0000000,\l... float %129)\l  %131 = fsub float %124, %125\l  %132 = fadd float %130, %131\l  %133 = tail call float @llvm.exp2.f32(float %132)\l  %134 = fptosi float %125 to i32\l  %135 = tail call float @llvm.amdgcn.ldexp.f32(float %133, i32 %134)\l  %136 = select i1 %127, float 0.000000e+00, float %135\l  %137 = select i1 %126, float 0x7FF0000000000000, float %136\l  %138 = fmul contract float %137, %122\l  %139 = fmul contract float %116, -1.000000e+02\l  %140 = fmul float %139, 0x3FF7154760000000\l  %141 = tail call float @llvm.rint.f32(float %140)\l  %142 = fcmp ogt float %139, 0x40562E4300000000\l  %143 = fcmp olt float %139, 0xC059D1DA00000000\l  %144 = fneg float %140\l  %145 = tail call float @llvm.fma.f32(float %139, float 0x3FF7154760000000,\l... float %144)\l  %146 = tail call float @llvm.fma.f32(float %139, float 0x3E54AE0BE0000000,\l... float %145)\l  %147 = fsub float %140, %141\l  %148 = fadd float %146, %147\l  %149 = tail call float @llvm.exp2.f32(float %148)\l  %150 = fptosi float %141 to i32\l  %151 = tail call float @llvm.amdgcn.ldexp.f32(float %149, i32 %150)\l  %152 = select i1 %143, float 0.000000e+00, float %151\l  %153 = select i1 %142, float 0x7FF0000000000000, float %152\l  %154 = fmul contract float %138, %153\l  %155 = fadd contract float %107, %154\l  %156 = fmul contract float %114, %154\l  %157 = fadd contract float %106, %156\l  %158 = add i32 %108, 1\l  %159 = icmp ugt i32 %158, %70\l  br i1 %159, label %100, label %105, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x59771c0:s0 -> Node0x5976930;
	Node0x59771c0:s1 -> Node0x59771c0;
	Node0x5976760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%160:\l160:                                              \l  %161 = sdiv i32 %80, 3\l  br label %167\l}"];
	Node0x5976760 -> Node0x597a880;
	Node0x59767f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%162:\l162:                                              \l  %163 = sext i32 %84 to i64\l  %164 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %163\l  %165 = load i32, i32 addrspace(4)* %164, align 4, !tbaa !15\l  %166 = ashr i32 %80, %165\l  br label %167\l}"];
	Node0x59767f0 -> Node0x597a880;
	Node0x597a880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%167:\l167:                                              \l  %168 = phi i32 [ %161, %160 ], [ %166, %162 ]\l  %169 = sext i32 %86 to i64\l  %170 = lshr i64 4176, %169\l  %171 = and i64 %170, 1\l  %172 = icmp eq i64 %171, 0\l  br i1 %172, label %175, label %173\l|{<s0>T|<s1>F}}"];
	Node0x597a880:s0 -> Node0x597af90;
	Node0x597a880:s1 -> Node0x597afe0;
	Node0x597afe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%173:\l173:                                              \l  %174 = sdiv i32 %168, 3\l  br label %179\l}"];
	Node0x597afe0 -> Node0x597b1b0;
	Node0x597af90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%175:\l175:                                              \l  %176 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %169\l  %177 = load i32, i32 addrspace(4)* %176, align 4, !tbaa !15\l  %178 = ashr i32 %168, %177\l  br label %179\l}"];
	Node0x597af90 -> Node0x597b1b0;
	Node0x597b1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%179:\l179:                                              \l  %180 = phi i32 [ %174, %173 ], [ %178, %175 ]\l  %181 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %79, i64 0\l  %182 = bitcast %struct.__hip_surface addrspace(1)* %3 to \<8 x i32\>\l... addrspace(1)*\l  %183 = addrspacecast \<8 x i32\> addrspace(1)* %182 to \<8 x i32\> addrspace(4)*\l  %184 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %183, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %181, i32\l... 15, i32 %180, i32 %21, \<8 x i32\> %184, i32 0, i32 0)\l  br label %185\l}"];
	Node0x597b1b0 -> Node0x5971490;
	Node0x5971490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%185:\l185:                                              \l  ret void\l}"];
}
