digraph "CFG for '_Z34foregroundMaskUpsampleFilterKernelP13__hip_texturejjfP13__hip_surfaceS2_' function" {
	label="CFG for '_Z34foregroundMaskUpsampleFilterKernelP13__hip_texturejjfP13__hip_surfaceS2_' function";

	Node0x45ad820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %9, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = icmp ult i32 %15, %2\l  %25 = icmp ult i32 %23, %1\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %243\l|{<s0>T|<s1>F}}"];
	Node0x45ad820:s0 -> Node0x45b0c60;
	Node0x45ad820:s1 -> Node0x45b0cf0;
	Node0x45b0c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%27:\l27:                                               \l  %28 = tail call float @llvm.ceil.f32(float %3)\l  %29 = fptoui float %28 to i32\l  %30 = shl i32 %29, 1\l  %31 = sub nsw i32 %23, %30\l  %32 = add i32 %23, %30\l  %33 = icmp sgt i32 %31, %32\l  br i1 %33, label %48, label %34\l|{<s0>T|<s1>F}}"];
	Node0x45b0c60:s0 -> Node0x45af8b0;
	Node0x45b0c60:s1 -> Node0x45b1450;
	Node0x45b1450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%34:\l34:                                               \l  %35 = sub nsw i32 %15, %30\l  %36 = add i32 %15, %30\l  %37 = icmp sgt i32 %35, %36\l  %38 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %39 = addrspacecast i32 addrspace(1)* %38 to i32 addrspace(4)*\l  %40 = getelementptr inbounds i32, i32 addrspace(4)* %39, i64 12\l  %41 = getelementptr inbounds i32, i32 addrspace(4)* %39, i64 10\l  %42 = getelementptr inbounds i32, i32 addrspace(4)* %39, i64 2\l  %43 = getelementptr inbounds i32, i32 addrspace(4)* %39, i64 14\l  %44 = fmul contract float %3, %3\l  %45 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %46 = addrspacecast \<8 x i32\> addrspace(1)* %45 to \<8 x i32\> addrspace(4)*\l  %47 = bitcast i32 addrspace(4)* %40 to \<4 x i32\> addrspace(4)*\l  br label %95\l}"];
	Node0x45b1450 -> Node0x45b2320;
	Node0x45af8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%48:\l48:                                               \l  %49 = phi float [ 0.000000e+00, %27 ], [ %129, %128 ]\l  %50 = phi float [ 0.000000e+00, %27 ], [ %130, %128 ]\l  %51 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %52 = addrspacecast i32 addrspace(1)* %51 to i32 addrspace(4)*\l  %53 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %54 = addrspacecast \<8 x i32\> addrspace(1)* %53 to \<8 x i32\> addrspace(4)*\l  %55 = sdiv i32 %15, 2\l  %56 = sdiv i32 %23, 2\l  %57 = sitofp i32 %55 to float\l  %58 = sitofp i32 %56 to float\l  %59 = getelementptr inbounds i32, i32 addrspace(4)* %52, i64 12\l  %60 = getelementptr inbounds i32, i32 addrspace(4)* %52, i64 10\l  %61 = load i32, i32 addrspace(4)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %62 = uitofp i32 %61 to float\l  %63 = getelementptr inbounds i32, i32 addrspace(4)* %52, i64 2\l  %64 = load i32, i32 addrspace(4)* %63, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %65 = lshr i32 %64, 14\l  %66 = and i32 %65, 16383\l  %67 = add nuw nsw i32 %66, 1\l  %68 = uitofp i32 %67 to float\l  %69 = load i32, i32 addrspace(4)* %59, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %70 = and i32 %69, 32768\l  %71 = icmp eq i32 %70, 0\l  %72 = select i1 %71, float %62, float 1.000000e+00\l  %73 = select i1 %71, float %68, float 1.000000e+00\l  %74 = getelementptr inbounds i32, i32 addrspace(4)* %52, i64 14\l  %75 = load i32, i32 addrspace(4)* %74, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %76 = and i32 %75, 1048576\l  %77 = icmp eq i32 %76, 0\l  %78 = bitcast i32 addrspace(4)* %59 to \<4 x i32\> addrspace(4)*\l  %79 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %78, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %80 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %54, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %81 = tail call float @llvm.amdgcn.rcp.f32(float %73)\l  %82 = fmul float %73, %58\l  %83 = tail call float @llvm.floor.f32(float %82)\l  %84 = fmul float %81, %83\l  %85 = select i1 %77, float %84, float %58\l  %86 = tail call float @llvm.amdgcn.rcp.f32(float %72)\l  %87 = fmul float %72, %57\l  %88 = tail call float @llvm.floor.f32(float %87)\l  %89 = fmul float %86, %88\l  %90 = select i1 %77, float %89, float %57\l  %91 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %90, float %85, \<8 x i32\> %80, \<4 x i32\> %79, i1 false, i32 0, i32 0)\l  %92 = bitcast float %91 to i32\l  %93 = and i32 %92, 255\l  %94 = icmp eq i32 %93, 0\l  br i1 %94, label %172, label %175\l|{<s0>T|<s1>F}}"];
	Node0x45af8b0:s0 -> Node0x45b6290;
	Node0x45af8b0:s1 -> Node0x45b62e0;
	Node0x45b2320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%95:\l95:                                               \l  %96 = phi float [ 0.000000e+00, %34 ], [ %130, %128 ]\l  %97 = phi float [ 0.000000e+00, %34 ], [ %129, %128 ]\l  %98 = phi i32 [ %31, %34 ], [ %131, %128 ]\l  br i1 %37, label %128, label %99\l|{<s0>T|<s1>F}}"];
	Node0x45b2320:s0 -> Node0x45b2ea0;
	Node0x45b2320:s1 -> Node0x45b6660;
	Node0x45b6660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%99:\l99:                                               \l  %100 = sdiv i32 %98, 2\l  %101 = sitofp i32 %100 to float\l  %102 = load i32, i32 addrspace(4)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %103 = uitofp i32 %102 to float\l  %104 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %105 = lshr i32 %104, 14\l  %106 = and i32 %105, 16383\l  %107 = add nuw nsw i32 %106, 1\l  %108 = uitofp i32 %107 to float\l  %109 = load i32, i32 addrspace(4)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %110 = and i32 %109, 32768\l  %111 = icmp eq i32 %110, 0\l  %112 = select i1 %111, float %103, float 1.000000e+00\l  %113 = select i1 %111, float %108, float 1.000000e+00\l  %114 = load i32, i32 addrspace(4)* %43, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %115 = and i32 %114, 1048576\l  %116 = icmp eq i32 %115, 0\l  %117 = sub nsw i32 %98, %23\l  %118 = mul nsw i32 %117, %117\l  %119 = sitofp i32 %118 to float\l  %120 = tail call float @llvm.amdgcn.rcp.f32(float %112)\l  %121 = tail call float @llvm.amdgcn.rcp.f32(float %113)\l  %122 = fmul float %113, %101\l  %123 = tail call float @llvm.floor.f32(float %122)\l  %124 = fmul float %121, %123\l  %125 = select i1 %116, float %124, float %101\l  %126 = icmp sgt i32 %98, -1\l  %127 = icmp ult i32 %98, %1\l  br label %133\l}"];
	Node0x45b6660 -> Node0x45b7990;
	Node0x45b2ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%128:\l128:                                              \l  %129 = phi float [ %97, %95 ], [ %168, %167 ]\l  %130 = phi float [ %96, %95 ], [ %169, %167 ]\l  %131 = add i32 %98, 1\l  %132 = icmp eq i32 %98, %32\l  br i1 %132, label %48, label %95, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x45b2ea0:s0 -> Node0x45af8b0;
	Node0x45b2ea0:s1 -> Node0x45b2320;
	Node0x45b7990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi float [ %96, %99 ], [ %169, %167 ]\l  %135 = phi float [ %97, %99 ], [ %168, %167 ]\l  %136 = phi i32 [ %35, %99 ], [ %170, %167 ]\l  %137 = sdiv i32 %136, 2\l  %138 = sitofp i32 %137 to float\l  %139 = sub nsw i32 %136, %15\l  %140 = mul nsw i32 %139, %139\l  %141 = sitofp i32 %140 to float\l  %142 = fadd contract float %119, %141\l  %143 = fmul contract float %142, 5.000000e-01\l  %144 = fdiv contract float %143, %44\l  %145 = tail call float @llvm.exp.f32(float %144)\l  %146 = icmp sgt i32 %136, -1\l  br i1 %146, label %147, label %167\l|{<s0>T|<s1>F}}"];
	Node0x45b7990:s0 -> Node0x45b8bc0;
	Node0x45b7990:s1 -> Node0x45b3ff0;
	Node0x45b8bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%147:\l147:                                              \l  %148 = fmul float %112, %138\l  %149 = tail call float @llvm.floor.f32(float %148)\l  %150 = fmul float %120, %149\l  %151 = select i1 %116, float %150, float %138\l  %152 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %46, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %153 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %47, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %154 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %151, float %125, \<8 x i32\> %152, \<4 x i32\> %153, i1 false, i32 0, i32 0)\l  %155 = bitcast float %154 to i32\l  %156 = icmp ult i32 %136, %2\l  %157 = select i1 %156, i1 %126, i1 false\l  %158 = select i1 %157, i1 %127, i1 false\l  %159 = and i32 %155, 255\l  %160 = sub nsw i32 1, %159\l  %161 = sitofp i32 %160 to float\l  %162 = fmul contract float %145, %161\l  %163 = select i1 %158, float %162, float -0.000000e+00\l  %164 = fadd contract float %135, %163\l  %165 = select i1 %158, float %145, float -0.000000e+00\l  %166 = fadd contract float %134, %165\l  br label %167\l}"];
	Node0x45b8bc0 -> Node0x45b3ff0;
	Node0x45b3ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  %168 = phi float [ %135, %133 ], [ %164, %147 ]\l  %169 = phi float [ %134, %133 ], [ %166, %147 ]\l  %170 = add i32 %136, 1\l  %171 = icmp eq i32 %136, %36\l  br i1 %171, label %128, label %133, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x45b3ff0:s0 -> Node0x45b2ea0;
	Node0x45b3ff0:s1 -> Node0x45b7990;
	Node0x45b6290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%172:\l172:                                              \l  %173 = fadd contract float %50, 0x3F50624DE0000000\l  %174 = fdiv contract float %49, %173\l  br label %175\l}"];
	Node0x45b6290 -> Node0x45b62e0;
	Node0x45b62e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%175:\l175:                                              \l  %176 = phi float [ %174, %172 ], [ 0.000000e+00, %48 ]\l  %177 = bitcast %struct.__hip_surface addrspace(1)* %4 to i32 addrspace(1)*\l  %178 = addrspacecast i32 addrspace(1)* %177 to i32 addrspace(4)*\l  %179 = getelementptr inbounds i32, i32 addrspace(4)* %178, i64 8\l  %180 = load i32, i32 addrspace(4)* %179, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %181 = getelementptr inbounds i32, i32 addrspace(4)* %178, i64 9\l  %182 = load i32, i32 addrspace(4)* %181, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %183 = icmp eq i32 %180, 4\l  br i1 %183, label %184, label %186\l|{<s0>T|<s1>F}}"];
	Node0x45b62e0:s0 -> Node0x45ba4a0;
	Node0x45b62e0:s1 -> Node0x45ba530;
	Node0x45ba4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%184:\l184:                                              \l  %185 = sdiv i32 %15, 3\l  br label %191\l}"];
	Node0x45ba4a0 -> Node0x45ba700;
	Node0x45ba530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%186:\l186:                                              \l  %187 = sext i32 %180 to i64\l  %188 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %187\l  %189 = load i32, i32 addrspace(4)* %188, align 4, !tbaa !15\l  %190 = ashr i32 %15, %189\l  br label %191\l}"];
	Node0x45ba530 -> Node0x45ba700;
	Node0x45ba700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%191:\l191:                                              \l  %192 = phi i32 [ %185, %184 ], [ %190, %186 ]\l  %193 = sext i32 %182 to i64\l  %194 = lshr i64 4176, %193\l  %195 = and i64 %194, 1\l  %196 = icmp eq i64 %195, 0\l  br i1 %196, label %199, label %197\l|{<s0>T|<s1>F}}"];
	Node0x45ba700:s0 -> Node0x45bae60;
	Node0x45ba700:s1 -> Node0x45baeb0;
	Node0x45baeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%197:\l197:                                              \l  %198 = sdiv i32 %192, 3\l  br label %203\l}"];
	Node0x45baeb0 -> Node0x45bb080;
	Node0x45bae60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%199:\l199:                                              \l  %200 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %193\l  %201 = load i32, i32 addrspace(4)* %200, align 4, !tbaa !15\l  %202 = ashr i32 %192, %201\l  br label %203\l}"];
	Node0x45bae60 -> Node0x45bb080;
	Node0x45bb080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%203:\l203:                                              \l  %204 = phi i32 [ %198, %197 ], [ %202, %199 ]\l  %205 = bitcast i32 %93 to float\l  %206 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %205, i64 0\l  %207 = bitcast %struct.__hip_surface addrspace(1)* %4 to \<8 x i32\>\l... addrspace(1)*\l  %208 = addrspacecast \<8 x i32\> addrspace(1)* %207 to \<8 x i32\> addrspace(4)*\l  %209 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %208, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %206, i32\l... 15, i32 %204, i32 %23, \<8 x i32\> %209, i32 0, i32 0)\l  %210 = shl i32 %15, 2\l  %211 = bitcast %struct.__hip_surface addrspace(1)* %5 to i32 addrspace(1)*\l  %212 = addrspacecast i32 addrspace(1)* %211 to i32 addrspace(4)*\l  %213 = getelementptr inbounds i32, i32 addrspace(4)* %212, i64 8\l  %214 = load i32, i32 addrspace(4)* %213, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %215 = getelementptr inbounds i32, i32 addrspace(4)* %212, i64 9\l  %216 = load i32, i32 addrspace(4)* %215, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %217 = icmp eq i32 %214, 4\l  br i1 %217, label %218, label %220\l|{<s0>T|<s1>F}}"];
	Node0x45bb080:s0 -> Node0x45bcb40;
	Node0x45bb080:s1 -> Node0x45bcbd0;
	Node0x45bcb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%218:\l218:                                              \l  %219 = sdiv i32 %210, 3\l  br label %225\l}"];
	Node0x45bcb40 -> Node0x45bcda0;
	Node0x45bcbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%220:\l220:                                              \l  %221 = sext i32 %214 to i64\l  %222 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %221\l  %223 = load i32, i32 addrspace(4)* %222, align 4, !tbaa !15\l  %224 = ashr i32 %210, %223\l  br label %225\l}"];
	Node0x45bcbd0 -> Node0x45bcda0;
	Node0x45bcda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%225:\l225:                                              \l  %226 = phi i32 [ %219, %218 ], [ %224, %220 ]\l  %227 = sext i32 %216 to i64\l  %228 = lshr i64 4176, %227\l  %229 = and i64 %228, 1\l  %230 = icmp eq i64 %229, 0\l  br i1 %230, label %233, label %231\l|{<s0>T|<s1>F}}"];
	Node0x45bcda0:s0 -> Node0x45bd420;
	Node0x45bcda0:s1 -> Node0x45bd470;
	Node0x45bd470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%231:\l231:                                              \l  %232 = sdiv i32 %226, 3\l  br label %237\l}"];
	Node0x45bd470 -> Node0x45bd600;
	Node0x45bd420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%233:\l233:                                              \l  %234 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %227\l  %235 = load i32, i32 addrspace(4)* %234, align 4, !tbaa !15\l  %236 = ashr i32 %226, %235\l  br label %237\l}"];
	Node0x45bd420 -> Node0x45bd600;
	Node0x45bd600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%237:\l237:                                              \l  %238 = phi i32 [ %232, %231 ], [ %236, %233 ]\l  %239 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %176, i64 0\l  %240 = bitcast %struct.__hip_surface addrspace(1)* %5 to \<8 x i32\>\l... addrspace(1)*\l  %241 = addrspacecast \<8 x i32\> addrspace(1)* %240 to \<8 x i32\> addrspace(4)*\l  %242 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %241, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %239, i32\l... 15, i32 %238, i32 %23, \<8 x i32\> %242, i32 0, i32 0)\l  br label %243\l}"];
	Node0x45bd600 -> Node0x45b0cf0;
	Node0x45b0cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%243:\l243:                                              \l  ret void\l}"];
}
