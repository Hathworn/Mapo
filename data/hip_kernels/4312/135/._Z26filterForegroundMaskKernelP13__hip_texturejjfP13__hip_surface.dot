digraph "CFG for '_Z26filterForegroundMaskKernelP13__hip_texturejjfP13__hip_surface' function" {
	label="CFG for '_Z26filterForegroundMaskKernelP13__hip_texturejjfP13__hip_surface' function";

	Node0x4e5f310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = add i32 %13, %6\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = icmp ult i32 %14, %2\l  %24 = icmp ult i32 %22, %1\l  %25 = select i1 %23, i1 %24, i1 false\l  br i1 %25, label %26, label %205\l|{<s0>T|<s1>F}}"];
	Node0x4e5f310:s0 -> Node0x4e62740;
	Node0x4e5f310:s1 -> Node0x4e627d0;
	Node0x4e62740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%26:\l26:                                               \l  %27 = tail call float @llvm.ceil.f32(float %3)\l  %28 = fptoui float %27 to i32\l  %29 = shl i32 %28, 1\l  %30 = sub nsw i32 %22, %29\l  %31 = add i32 %22, %29\l  %32 = icmp sgt i32 %30, %31\l  br i1 %32, label %47, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4e62740:s0 -> Node0x4e614f0;
	Node0x4e62740:s1 -> Node0x4e61580;
	Node0x4e61580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%33:\l33:                                               \l  %34 = sub nsw i32 %14, %29\l  %35 = add i32 %14, %29\l  %36 = icmp sgt i32 %34, %35\l  %37 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %38 = addrspacecast i32 addrspace(1)* %37 to i32 addrspace(4)*\l  %39 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 12\l  %40 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 10\l  %41 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 2\l  %42 = getelementptr inbounds i32, i32 addrspace(4)* %38, i64 14\l  %43 = fmul contract float %3, %3\l  %44 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %45 = addrspacecast \<8 x i32\> addrspace(1)* %44 to \<8 x i32\> addrspace(4)*\l  %46 = bitcast i32 addrspace(4)* %39 to \<4 x i32\> addrspace(4)*\l  br label %92\l}"];
	Node0x4e61580 -> Node0x4e63e00;
	Node0x4e614f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%47:\l47:                                               \l  %48 = phi float [ 0.000000e+00, %26 ], [ %125, %124 ]\l  %49 = phi float [ 0.000000e+00, %26 ], [ %126, %124 ]\l  %50 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %51 = addrspacecast i32 addrspace(1)* %50 to i32 addrspace(4)*\l  %52 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %53 = addrspacecast \<8 x i32\> addrspace(1)* %52 to \<8 x i32\> addrspace(4)*\l  %54 = sitofp i32 %14 to float\l  %55 = sitofp i32 %22 to float\l  %56 = getelementptr inbounds i32, i32 addrspace(4)* %51, i64 12\l  %57 = getelementptr inbounds i32, i32 addrspace(4)* %51, i64 10\l  %58 = load i32, i32 addrspace(4)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %59 = uitofp i32 %58 to float\l  %60 = getelementptr inbounds i32, i32 addrspace(4)* %51, i64 2\l  %61 = load i32, i32 addrspace(4)* %60, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %62 = lshr i32 %61, 14\l  %63 = and i32 %62, 16383\l  %64 = add nuw nsw i32 %63, 1\l  %65 = uitofp i32 %64 to float\l  %66 = load i32, i32 addrspace(4)* %56, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %67 = and i32 %66, 32768\l  %68 = icmp eq i32 %67, 0\l  %69 = select i1 %68, float %59, float 1.000000e+00\l  %70 = select i1 %68, float %65, float 1.000000e+00\l  %71 = getelementptr inbounds i32, i32 addrspace(4)* %51, i64 14\l  %72 = load i32, i32 addrspace(4)* %71, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %73 = and i32 %72, 1048576\l  %74 = icmp eq i32 %73, 0\l  %75 = bitcast i32 addrspace(4)* %56 to \<4 x i32\> addrspace(4)*\l  %76 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %75, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %77 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %53, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %78 = tail call float @llvm.amdgcn.rcp.f32(float %70)\l  %79 = fmul float %70, %55\l  %80 = tail call float @llvm.floor.f32(float %79)\l  %81 = fmul float %78, %80\l  %82 = select i1 %74, float %81, float %55\l  %83 = tail call float @llvm.amdgcn.rcp.f32(float %69)\l  %84 = fmul float %69, %54\l  %85 = tail call float @llvm.floor.f32(float %84)\l  %86 = fmul float %83, %85\l  %87 = select i1 %74, float %86, float %54\l  %88 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %87, float %82, \<8 x i32\> %77, \<4 x i32\> %76, i1 false, i32 0, i32 0)\l  %89 = bitcast float %88 to i32\l  %90 = and i32 %89, 255\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %167, label %170\l|{<s0>T|<s1>F}}"];
	Node0x4e614f0:s0 -> Node0x4e67c50;
	Node0x4e614f0:s1 -> Node0x4e67ca0;
	Node0x4e63e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%92:\l92:                                               \l  %93 = phi float [ 0.000000e+00, %33 ], [ %126, %124 ]\l  %94 = phi float [ 0.000000e+00, %33 ], [ %125, %124 ]\l  %95 = phi i32 [ %30, %33 ], [ %127, %124 ]\l  br i1 %36, label %124, label %96\l|{<s0>T|<s1>F}}"];
	Node0x4e63e00:s0 -> Node0x4e64980;
	Node0x4e63e00:s1 -> Node0x4e68020;
	Node0x4e68020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%96:\l96:                                               \l  %97 = sitofp i32 %95 to float\l  %98 = load i32, i32 addrspace(4)* %40, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %99 = uitofp i32 %98 to float\l  %100 = load i32, i32 addrspace(4)* %41, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %101 = lshr i32 %100, 14\l  %102 = and i32 %101, 16383\l  %103 = add nuw nsw i32 %102, 1\l  %104 = uitofp i32 %103 to float\l  %105 = load i32, i32 addrspace(4)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %106 = and i32 %105, 32768\l  %107 = icmp eq i32 %106, 0\l  %108 = select i1 %107, float %99, float 1.000000e+00\l  %109 = select i1 %107, float %104, float 1.000000e+00\l  %110 = load i32, i32 addrspace(4)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %111 = and i32 %110, 1048576\l  %112 = icmp eq i32 %111, 0\l  %113 = sub nsw i32 %95, %22\l  %114 = mul nsw i32 %113, %113\l  %115 = sitofp i32 %114 to float\l  %116 = tail call float @llvm.amdgcn.rcp.f32(float %108)\l  %117 = tail call float @llvm.amdgcn.rcp.f32(float %109)\l  %118 = fmul float %109, %97\l  %119 = tail call float @llvm.floor.f32(float %118)\l  %120 = fmul float %117, %119\l  %121 = select i1 %112, float %120, float %97\l  %122 = icmp sgt i32 %95, -1\l  %123 = icmp ult i32 %95, %1\l  br label %129\l}"];
	Node0x4e68020 -> Node0x4e692c0;
	Node0x4e64980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%124:\l124:                                              \l  %125 = phi float [ %94, %92 ], [ %163, %162 ]\l  %126 = phi float [ %93, %92 ], [ %164, %162 ]\l  %127 = add i32 %95, 1\l  %128 = icmp eq i32 %95, %31\l  br i1 %128, label %47, label %92, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4e64980:s0 -> Node0x4e614f0;
	Node0x4e64980:s1 -> Node0x4e63e00;
	Node0x4e692c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi float [ %93, %96 ], [ %164, %162 ]\l  %131 = phi float [ %94, %96 ], [ %163, %162 ]\l  %132 = phi i32 [ %34, %96 ], [ %165, %162 ]\l  %133 = sitofp i32 %132 to float\l  %134 = sub nsw i32 %132, %14\l  %135 = mul nsw i32 %134, %134\l  %136 = sitofp i32 %135 to float\l  %137 = fadd contract float %115, %136\l  %138 = fmul contract float %137, 5.000000e-01\l  %139 = fdiv contract float %138, %43\l  %140 = tail call float @llvm.exp.f32(float %139)\l  %141 = icmp sgt i32 %132, -1\l  br i1 %141, label %142, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4e692c0:s0 -> Node0x4e6a460;
	Node0x4e692c0:s1 -> Node0x4e69380;
	Node0x4e6a460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%142:\l142:                                              \l  %143 = fmul float %108, %133\l  %144 = tail call float @llvm.floor.f32(float %143)\l  %145 = fmul float %116, %144\l  %146 = select i1 %112, float %145, float %133\l  %147 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %45, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %148 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %46, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %149 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %146, float %121, \<8 x i32\> %147, \<4 x i32\> %148, i1 false, i32 0, i32 0)\l  %150 = bitcast float %149 to i32\l  %151 = icmp ult i32 %132, %2\l  %152 = select i1 %151, i1 %122, i1 false\l  %153 = select i1 %152, i1 %123, i1 false\l  %154 = and i32 %150, 255\l  %155 = sub nsw i32 1, %154\l  %156 = sitofp i32 %155 to float\l  %157 = fmul contract float %140, %156\l  %158 = select i1 %153, float %157, float -0.000000e+00\l  %159 = fadd contract float %131, %158\l  %160 = select i1 %153, float %140, float -0.000000e+00\l  %161 = fadd contract float %130, %160\l  br label %162\l}"];
	Node0x4e6a460 -> Node0x4e69380;
	Node0x4e69380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  %163 = phi float [ %131, %129 ], [ %159, %142 ]\l  %164 = phi float [ %130, %129 ], [ %161, %142 ]\l  %165 = add i32 %132, 1\l  %166 = icmp eq i32 %132, %35\l  br i1 %166, label %124, label %129, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4e69380:s0 -> Node0x4e64980;
	Node0x4e69380:s1 -> Node0x4e692c0;
	Node0x4e67c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%167:\l167:                                              \l  %168 = fadd contract float %49, 0x3F50624DE0000000\l  %169 = fdiv contract float %48, %168\l  br label %170\l}"];
	Node0x4e67c50 -> Node0x4e67ca0;
	Node0x4e67ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%170:\l170:                                              \l  %171 = phi float [ %169, %167 ], [ 0.000000e+00, %47 ]\l  %172 = shl i32 %14, 2\l  %173 = bitcast %struct.__hip_surface addrspace(1)* %4 to i32 addrspace(1)*\l  %174 = addrspacecast i32 addrspace(1)* %173 to i32 addrspace(4)*\l  %175 = getelementptr inbounds i32, i32 addrspace(4)* %174, i64 8\l  %176 = load i32, i32 addrspace(4)* %175, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %177 = getelementptr inbounds i32, i32 addrspace(4)* %174, i64 9\l  %178 = load i32, i32 addrspace(4)* %177, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %179 = icmp eq i32 %176, 4\l  br i1 %179, label %180, label %182\l|{<s0>T|<s1>F}}"];
	Node0x4e67ca0:s0 -> Node0x4e6bdd0;
	Node0x4e67ca0:s1 -> Node0x4e6be60;
	Node0x4e6bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%180:\l180:                                              \l  %181 = sdiv i32 %172, 3\l  br label %187\l}"];
	Node0x4e6bdd0 -> Node0x4e6c030;
	Node0x4e6be60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%182:\l182:                                              \l  %183 = sext i32 %176 to i64\l  %184 = getelementptr inbounds [16 x i32], [16 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE9FormatLUT, i64 0, i64 %183\l  %185 = load i32, i32 addrspace(4)* %184, align 4, !tbaa !15\l  %186 = ashr i32 %172, %185\l  br label %187\l}"];
	Node0x4e6be60 -> Node0x4e6c030;
	Node0x4e6c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%187:\l187:                                              \l  %188 = phi i32 [ %181, %180 ], [ %186, %182 ]\l  %189 = sext i32 %178 to i64\l  %190 = lshr i64 4176, %189\l  %191 = and i64 %190, 1\l  %192 = icmp eq i64 %191, 0\l  br i1 %192, label %195, label %193\l|{<s0>T|<s1>F}}"];
	Node0x4e6c030:s0 -> Node0x4e6c790;
	Node0x4e6c030:s1 -> Node0x4e6c7e0;
	Node0x4e6c7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%193:\l193:                                              \l  %194 = sdiv i32 %188, 3\l  br label %199\l}"];
	Node0x4e6c7e0 -> Node0x4e6c9b0;
	Node0x4e6c790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%195:\l195:                                              \l  %196 = getelementptr inbounds [20 x i32], [20 x i32] addrspace(4)*\l... @_ZZL17__hipGetPixelAddriiiE8OrderLUT, i64 0, i64 %189\l  %197 = load i32, i32 addrspace(4)* %196, align 4, !tbaa !15\l  %198 = ashr i32 %188, %197\l  br label %199\l}"];
	Node0x4e6c790 -> Node0x4e6c9b0;
	Node0x4e6c9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%199:\l199:                                              \l  %200 = phi i32 [ %194, %193 ], [ %198, %195 ]\l  %201 = insertelement \<4 x float\> \<float poison, float 0.000000e+00, float\l... 0.000000e+00, float 0.000000e+00\>, float %171, i64 0\l  %202 = bitcast %struct.__hip_surface addrspace(1)* %4 to \<8 x i32\>\l... addrspace(1)*\l  %203 = addrspacecast \<8 x i32\> addrspace(1)* %202 to \<8 x i32\> addrspace(4)*\l  %204 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %203, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  tail call void @llvm.amdgcn.image.store.2d.v4f32.i32(\<4 x float\> %201, i32\l... 15, i32 %200, i32 %22, \<8 x i32\> %204, i32 0, i32 0)\l  br label %205\l}"];
	Node0x4e6c9b0 -> Node0x4e627d0;
	Node0x4e627d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%205:\l205:                                              \l  ret void\l}"];
}
