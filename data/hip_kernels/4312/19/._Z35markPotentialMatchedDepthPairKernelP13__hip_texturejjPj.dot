digraph "CFG for '_Z35markPotentialMatchedDepthPairKernelP13__hip_texturejjPj' function" {
	label="CFG for '_Z35markPotentialMatchedDepthPairKernelP13__hip_texturejjPj' function";

	Node0x5ea5900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %7, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp ult i32 %13, %2\l  %23 = icmp ult i32 %21, %1\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %72\l|{<s0>T|<s1>F}}"];
	Node0x5ea5900:s0 -> Node0x5eabbc0;
	Node0x5ea5900:s1 -> Node0x5eabc50;
	Node0x5eabbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul i32 %21, %2\l  %27 = add i32 %26, %13\l  %28 = uitofp i32 %13 to float\l  %29 = uitofp i32 %21 to float\l  %30 = bitcast %struct.__hip_texture addrspace(1)* %0 to i32 addrspace(1)*\l  %31 = addrspacecast i32 addrspace(1)* %30 to i32 addrspace(4)*\l  %32 = getelementptr inbounds i32, i32 addrspace(4)* %31, i64 12\l  %33 = getelementptr inbounds i32, i32 addrspace(4)* %31, i64 10\l  %34 = load i32, i32 addrspace(4)* %33, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %35 = uitofp i32 %34 to float\l  %36 = getelementptr inbounds i32, i32 addrspace(4)* %31, i64 2\l  %37 = load i32, i32 addrspace(4)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %38 = lshr i32 %37, 14\l  %39 = and i32 %38, 16383\l  %40 = add nuw nsw i32 %39, 1\l  %41 = uitofp i32 %40 to float\l  %42 = load i32, i32 addrspace(4)* %32, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %43 = and i32 %42, 32768\l  %44 = icmp eq i32 %43, 0\l  %45 = select i1 %44, float %35, float 1.000000e+00\l  %46 = select i1 %44, float %41, float 1.000000e+00\l  %47 = getelementptr inbounds i32, i32 addrspace(4)* %31, i64 14\l  %48 = load i32, i32 addrspace(4)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = and i32 %48, 1048576\l  %50 = icmp eq i32 %49, 0\l  %51 = bitcast i32 addrspace(4)* %32 to \<4 x i32\> addrspace(4)*\l  %52 = load \<4 x i32\>, \<4 x i32\> addrspace(4)* %51, align 16, !tbaa !11,\l... !amdgpu.noclobber !6\l  %53 = bitcast %struct.__hip_texture addrspace(1)* %0 to \<8 x i32\>\l... addrspace(1)*\l  %54 = addrspacecast \<8 x i32\> addrspace(1)* %53 to \<8 x i32\> addrspace(4)*\l  %55 = load \<8 x i32\>, \<8 x i32\> addrspace(4)* %54, align 32, !tbaa !11,\l... !amdgpu.noclobber !6\l  %56 = tail call float @llvm.amdgcn.rcp.f32(float %46)\l  %57 = fmul float %46, %29\l  %58 = tail call float @llvm.floor.f32(float %57)\l  %59 = fmul float %56, %58\l  %60 = select i1 %50, float %59, float %29\l  %61 = tail call float @llvm.amdgcn.rcp.f32(float %45)\l  %62 = fmul float %45, %28\l  %63 = tail call float @llvm.floor.f32(float %62)\l  %64 = fmul float %61, %63\l  %65 = select i1 %50, float %64, float %28\l  %66 = tail call float @llvm.amdgcn.image.sample.lz.2d.f32.f32(i32 1, float\l... %65, float %60, \<8 x i32\> %55, \<4 x i32\> %52, i1 false, i32 0, i32 0)\l  %67 = bitcast float %66 to i32\l  %68 = icmp ne i32 %67, -1\l  %69 = zext i1 %68 to i32\l  %70 = zext i32 %27 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %70\l  store i32 %69, i32 addrspace(1)* %71, align 4, !tbaa !12\l  br label %72\l}"];
	Node0x5eabbc0 -> Node0x5eabc50;
	Node0x5eabc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
