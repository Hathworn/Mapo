digraph "CFG for '_Z14bp_weight_convPfS_S_iiiiib' function" {
	label="CFG for '_Z14bp_weight_convPfS_S_iiiiib' function";

	Node0x4ad2230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !6\l  %19 = mul i32 %10, %15\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %21 = add i32 %19, %20\l  %22 = udiv i32 %18, %15\l  %23 = mul i32 %22, %15\l  %24 = icmp ugt i32 %18, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %15\l  %28 = mul i32 %5, %3\l  %29 = mul i32 %7, %6\l  %30 = mul i32 %29, %28\l  %31 = mul i32 %30, %28\l  %32 = add nsw i32 %3, -1\l  %33 = sdiv i32 %32, -2\l  %34 = mul nsw i32 %21, %31\l  %35 = sdiv i32 %34, %27\l  %36 = add nsw i32 %21, 1\l  %37 = mul nsw i32 %36, %31\l  %38 = sdiv i32 %37, %27\l  %39 = icmp slt i32 %35, %38\l  br i1 %39, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4ad2230:s0 -> Node0x4ad5ad0;
	Node0x4ad2230:s1 -> Node0x4ad5b60;
	Node0x4ad5ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%40:\l40:                                               \l  %41 = select i1 %8, i32 %33, i32 0\l  br label %43\l}"];
	Node0x4ad5ad0 -> Node0x4ad5d80;
	Node0x4ad5b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%42:\l42:                                               \l  ret void\l}"];
	Node0x4ad5d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i32 [ %101, %100 ], [ %35, %40 ]\l  %45 = freeze i32 %44\l  %46 = freeze i32 %3\l  %47 = sdiv i32 %45, %46\l  %48 = mul i32 %47, %46\l  %49 = sub i32 %45, %48\l  %50 = freeze i32 %3\l  %51 = sdiv i32 %47, %50\l  %52 = mul i32 %51, %50\l  %53 = sub i32 %47, %52\l  %54 = freeze i32 %29\l  %55 = sdiv i32 %51, %54\l  %56 = mul i32 %55, %54\l  %57 = sub i32 %51, %56\l  %58 = freeze i32 %5\l  %59 = sdiv i32 %55, %58\l  %60 = mul i32 %59, %58\l  %61 = sub i32 %55, %60\l  %62 = srem i32 %59, %5\l  %63 = add nsw i32 %61, %49\l  %64 = add nsw i32 %62, %53\l  %65 = add i32 %64, %33\l  %66 = add nsw i32 %62, %53\l  %67 = select i1 %8, i32 %65, i32 %66\l  %68 = add i32 %63, %41\l  %69 = icmp sgt i32 %68, -1\l  br i1 %69, label %70, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4ad5d80:s0 -> Node0x4ad6f90;
	Node0x4ad5d80:s1 -> Node0x4ad5ec0;
	Node0x4ad6f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%70:\l70:                                               \l  %71 = icmp slt i32 %68, %4\l  %72 = icmp sgt i32 %67, -1\l  %73 = select i1 %71, i1 %72, i1 false\l  %74 = icmp slt i32 %67, %4\l  %75 = select i1 %73, i1 %74, i1 false\l  br i1 %75, label %76, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4ad6f90:s0 -> Node0x4ad73d0;
	Node0x4ad6f90:s1 -> Node0x4ad5ec0;
	Node0x4ad73d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%76:\l76:                                               \l  %77 = mul nsw i32 %57, %3\l  %78 = add nsw i32 %77, %53\l  %79 = mul nsw i32 %78, %3\l  %80 = add nsw i32 %79, %49\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = srem i32 %57, %7\l  %84 = mul nsw i32 %83, %5\l  %85 = add nsw i32 %84, %62\l  %86 = mul nsw i32 %85, %5\l  %87 = add nsw i32 %86, %61\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16\l  %91 = srem i32 %57, %6\l  %92 = mul nsw i32 %91, %4\l  %93 = add nuw i32 %68, %67\l  %94 = add i32 %93, %92\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !16\l  %98 = fmul contract float %90, %97\l  %99 = atomicrmw fadd float addrspace(1)* %82, float %98\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %100\l}"];
	Node0x4ad73d0 -> Node0x4ad5ec0;
	Node0x4ad5ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%100:\l100:                                              \l  %101 = add nsw i32 %44, 1\l  %102 = icmp slt i32 %101, %38\l  br i1 %102, label %43, label %42, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4ad5ec0:s0 -> Node0x4ad5d80;
	Node0x4ad5ec0:s1 -> Node0x4ad5b60;
}
