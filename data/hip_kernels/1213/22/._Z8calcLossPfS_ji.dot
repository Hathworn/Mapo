digraph "CFG for '_Z8calcLossPfS_ji' function" {
	label="CFG for '_Z8calcLossPfS_ji' function";

	Node0x63b4500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = mul i32 %5, %10\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %16 = add i32 %14, %15\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = mul nsw i32 %16, %3\l  %24 = sdiv i32 %23, %22\l  %25 = add nsw i32 %16, 1\l  %26 = mul nsw i32 %25, %3\l  %27 = sdiv i32 %26, %22\l  %28 = icmp slt i32 %24, %27\l  br i1 %28, label %30, label %29\l|{<s0>T|<s1>F}}"];
	Node0x63b4500:s0 -> Node0x63b6d90;
	Node0x63b4500:s1 -> Node0x63b6e20;
	Node0x63b6e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x63b6d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %39, %30 ], [ %24, %4 ]\l  %32 = icmp eq i32 %31, %2\l  %33 = select contract i1 %32, float 1.000000e+00, float 0.000000e+00\l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %37 = fsub contract float %33, %36\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  store float %37, float addrspace(1)* %38, align 4, !tbaa !16\l  %39 = add nsw i32 %31, 1\l  %40 = icmp slt i32 %39, %27\l  br i1 %40, label %30, label %29, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x63b6d90:s0 -> Node0x63b6d90;
	Node0x63b6d90:s1 -> Node0x63b6e20;
}
