digraph "CFG for '_Z12fp_preact_fcPfS_S_iii' function" {
	label="CFG for '_Z12fp_preact_fcPfS_S_iii' function";

	Node0x50a9880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = udiv i32 %15, %12\l  %20 = mul i32 %19, %12\l  %21 = icmp ugt i32 %15, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %12\l  %25 = mul nsw i32 %5, %4\l  %26 = mul i32 %3, %3\l  %27 = mul i32 %26, %25\l  %28 = mul nsw i32 %18, %27\l  %29 = sdiv i32 %28, %24\l  %30 = add nsw i32 %18, 1\l  %31 = mul nsw i32 %30, %27\l  %32 = sdiv i32 %31, %24\l  %33 = icmp slt i32 %29, %32\l  br i1 %33, label %35, label %34\l|{<s0>T|<s1>F}}"];
	Node0x50a9880:s0 -> Node0x50ab660;
	Node0x50a9880:s1 -> Node0x50ac450;
	Node0x50ac450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%34:\l34:                                               \l  ret void\l}"];
	Node0x50ab660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %67, %35 ], [ %29, %6 ]\l  %37 = freeze i32 %36\l  %38 = freeze i32 %25\l  %39 = sdiv i32 %37, %38\l  %40 = mul i32 %39, %38\l  %41 = sub i32 %37, %40\l  %42 = freeze i32 %3\l  %43 = sdiv i32 %39, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %39, %44\l  %46 = srem i32 %43, %3\l  %47 = srem i32 %41, %5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = mul nsw i32 %41, %3\l  %51 = add nsw i32 %46, %50\l  %52 = mul nsw i32 %51, %3\l  %53 = add nsw i32 %52, %45\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = srem i32 %41, %4\l  %58 = mul nsw i32 %57, %3\l  %59 = add nsw i32 %58, %46\l  %60 = mul nsw i32 %59, %3\l  %61 = add nsw i32 %60, %45\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = fmul contract float %56, %64\l  %66 = atomicrmw fadd float addrspace(1)* %49, float %65\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %67 = add nsw i32 %36, 1\l  %68 = icmp slt i32 %67, %32\l  br i1 %68, label %35, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50ab660:s0 -> Node0x50ab660;
	Node0x50ab660:s1 -> Node0x50ac450;
}
