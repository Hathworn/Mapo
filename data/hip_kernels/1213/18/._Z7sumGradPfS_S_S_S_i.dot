digraph "CFG for '_Z7sumGradPfS_S_S_S_i' function" {
	label="CFG for '_Z7sumGradPfS_S_S_S_i' function";

	Node0x480a8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %11\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %18 = add i32 %16, %17\l  %19 = zext i32 %18 to i64\l  %20 = udiv i32 %14, %11\l  %21 = mul i32 %20, %11\l  %22 = icmp ugt i32 %14, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = mul i32 %24, %11\l  %26 = zext i32 %25 to i64\l  %27 = sext i32 %5 to i64\l  %28 = mul nsw i64 %19, %27\l  %29 = udiv i64 %28, %26\l  %30 = add nuw nsw i64 %19, 1\l  %31 = mul nsw i64 %30, %27\l  %32 = udiv i64 %31, %26\l  %33 = shl i64 %29, 32\l  %34 = ashr exact i64 %33, 32\l  %35 = icmp ugt i64 %32, %34\l  br i1 %35, label %36, label %38\l|{<s0>T|<s1>F}}"];
	Node0x480a8c0:s0 -> Node0x480c690;
	Node0x480a8c0:s1 -> Node0x480d540;
	Node0x480c690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%36:\l36:                                               \l  %37 = trunc i64 %29 to i32\l  br label %39\l}"];
	Node0x480c690 -> Node0x480d6f0;
	Node0x480d540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  ret void\l}"];
	Node0x480d6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i64 [ %55, %39 ], [ %34, %36 ]\l  %41 = phi i32 [ %54, %39 ], [ %37, %36 ]\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = fadd contract float %43, %45\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %40\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fadd contract float %46, %48\l  %50 = getelementptr inbounds float, float addrspace(1)* %4, i64 %40\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = fadd contract float %49, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !16\l  %54 = add nsw i32 %41, 1\l  %55 = sext i32 %54 to i64\l  %56 = icmp ugt i64 %32, %55\l  br i1 %56, label %39, label %38, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x480d6f0:s0 -> Node0x480d6f0;
	Node0x480d6f0:s1 -> Node0x480d540;
}
