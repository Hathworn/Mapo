digraph "CFG for '_Z14bp_output_convPfS_S_iiiiibb' function" {
	label="CFG for '_Z14bp_output_convPfS_S_iiiiibb' function";

	Node0x5d8b2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = udiv i32 %19, %16\l  %24 = mul i32 %23, %16\l  %25 = icmp ugt i32 %19, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %16\l  %29 = mul i32 %4, %3\l  %30 = mul i32 %7, %6\l  %31 = mul i32 %30, %29\l  %32 = mul i32 %31, %29\l  %33 = add nsw i32 %4, -1\l  %34 = sdiv i32 %33, 2\l  %35 = mul nsw i32 %22, %32\l  %36 = sdiv i32 %35, %28\l  %37 = add nsw i32 %22, 1\l  %38 = mul nsw i32 %37, %32\l  %39 = sdiv i32 %38, %28\l  %40 = icmp slt i32 %36, %39\l  br i1 %40, label %41, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5d8b2d0:s0 -> Node0x5d8eba0;
	Node0x5d8b2d0:s1 -> Node0x5d8ec30;
	Node0x5d8eba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%41:\l41:                                               \l  %42 = mul i32 %34, -2\l  %43 = sub nsw i32 0, %34\l  %44 = select i1 %9, i32 %43, i32 %42\l  %45 = sub nsw i32 0, %34\l  %46 = select i1 %9, i32 %45, i32 %42\l  br label %48\l}"];
	Node0x5d8eba0 -> Node0x5d8f0e0;
	Node0x5d8ec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x5d8f0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %36, %41 ], [ %108, %107 ]\l  %50 = freeze i32 %49\l  %51 = freeze i32 %30\l  %52 = sdiv i32 %50, %51\l  %53 = mul i32 %52, %51\l  %54 = sub i32 %50, %53\l  %55 = freeze i32 %4\l  %56 = sdiv i32 %52, %55\l  %57 = mul i32 %56, %55\l  %58 = sub i32 %52, %57\l  %59 = freeze i32 %4\l  %60 = sdiv i32 %56, %59\l  %61 = mul i32 %60, %59\l  %62 = sub i32 %56, %61\l  %63 = freeze i32 %3\l  %64 = sdiv i32 %60, %63\l  %65 = mul i32 %64, %63\l  %66 = sub i32 %60, %65\l  %67 = srem i32 %64, %3\l  %68 = add nsw i32 %66, %58\l  %69 = add nsw i32 %67, %62\l  %70 = add i32 %69, %44\l  %71 = add i32 %68, %46\l  %72 = icmp sgt i32 %71, -1\l  br i1 %72, label %73, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5d8f0e0:s0 -> Node0x5d8e750;
	Node0x5d8f0e0:s1 -> Node0x5d8f220;
	Node0x5d8e750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%73:\l73:                                               \l  %74 = icmp slt i32 %71, %5\l  %75 = icmp sgt i32 %70, -1\l  %76 = select i1 %74, i1 %75, i1 false\l  %77 = icmp slt i32 %70, %5\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %79, label %107\l|{<s0>T|<s1>F}}"];
	Node0x5d8e750:s0 -> Node0x5d90600;
	Node0x5d8e750:s1 -> Node0x5d8f220;
	Node0x5d90600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%79:\l79:                                               \l  %80 = srem i32 %54, %6\l  %81 = mul nsw i32 %80, %3\l  %82 = add nsw i32 %81, %67\l  %83 = mul nsw i32 %82, %3\l  %84 = add nsw i32 %83, %66\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = mul nsw i32 %54, %4\l  %88 = add i32 %87, %33\l  %89 = sub i32 %88, %62\l  %90 = mul nsw i32 %89, %4\l  %91 = xor i32 %58, -1\l  %92 = add i32 %91, %4\l  %93 = add i32 %92, %90\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16\l  %97 = srem i32 %54, %7\l  %98 = mul nsw i32 %97, %5\l  %99 = add nsw i32 %98, %70\l  %100 = mul nsw i32 %99, %5\l  %101 = add nsw i32 %100, %71\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !16\l  %105 = fmul contract float %96, %104\l  %106 = atomicrmw fadd float addrspace(1)* %86, float %105\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %107\l}"];
	Node0x5d90600 -> Node0x5d8f220;
	Node0x5d8f220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = add nsw i32 %49, 1\l  %109 = icmp slt i32 %108, %39\l  br i1 %109, label %48, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5d8f220:s0 -> Node0x5d8f0e0;
	Node0x5d8f220:s1 -> Node0x5d8ec30;
}
