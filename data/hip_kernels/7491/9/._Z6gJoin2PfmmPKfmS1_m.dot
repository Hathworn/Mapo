digraph "CFG for '_Z6gJoin2PfmmPKfmS1_m' function" {
	label="CFG for '_Z6gJoin2PfmmPKfmS1_m' function";

	Node0x5a0eb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%7:\l  %8 = add i64 %6, %4\l  %9 = trunc i64 %8 to i32\l  %10 = mul i64 %8, %1\l  %11 = trunc i64 %10 to i32\l  %12 = icmp sgt i32 %11, 0\l  br i1 %12, label %13, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5a0eb70:s0 -> Node0x5a0f460;
	Node0x5a0eb70:s1 -> Node0x5a0f4f0;
	Node0x5a0f460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%13:\l13:                                               \l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = trunc i64 %4 to i32\l  %16 = icmp eq i64 %2, 0\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %18 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4\l  %24 = load i16, i16 addrspace(4)* %20, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %23, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %23, %27\l  %29 = zext i1 %28 to i32\l  br label %31\l}"];
	Node0x5a0f460 -> Node0x5a11290;
	Node0x5a0f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x5a11290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %13 ], [ %76, %74 ]\l  %33 = add i32 %32, %14\l  %34 = icmp slt i32 %33, %11\l  br i1 %34, label %35, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5a11290:s0 -> Node0x5a0f980;
	Node0x5a11290:s1 -> Node0x5a113e0;
	Node0x5a0f980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = mul i64 %36, %2\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = freeze i32 %33\l  %40 = freeze i32 %9\l  %41 = sdiv i32 %39, %40\l  %42 = mul i32 %41, %40\l  %43 = sub i32 %39, %42\l  %44 = zext i32 %41 to i64\l  %45 = sext i32 %43 to i64\l  %46 = mul i32 %41, %15\l  %47 = add i32 %46, %43\l  %48 = mul i64 %44, %6\l  %49 = sub i64 %45, %4\l  %50 = add i64 %49, %48\l  %51 = sext i32 %47 to i64\l  %52 = mul i64 %51, %2\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %52\l  %54 = shl i64 %50, 32\l  %55 = ashr exact i64 %54, 32\l  %56 = mul i64 %55, %2\l  %57 = getelementptr inbounds float, float addrspace(1)* %5, i64 %56\l  br i1 %16, label %74, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5a0f980:s0 -> Node0x5a113e0;
	Node0x5a0f980:s1 -> Node0x5a12440;
	Node0x5a12440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%58:\l58:                                               \l  %59 = icmp ult i64 %45, %4\l  %60 = select i1 %59, float addrspace(1)* %53, float addrspace(1)* %57\l  br label %61\l}"];
	Node0x5a12440 -> Node0x5a12680;
	Node0x5a12680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %58 ], [ %71, %70 ]\l  %63 = add i32 %62, %17\l  %64 = sext i32 %63 to i64\l  %65 = icmp ult i64 %64, %2\l  br i1 %65, label %66, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5a12680:s0 -> Node0x5a11570;
	Node0x5a12680:s1 -> Node0x5a12740;
	Node0x5a11570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds float, float addrspace(1)* %38, i64 %64\l  %68 = getelementptr inbounds float, float addrspace(1)* %60, i64 %64\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !15\l  store float %69, float addrspace(1)* %67, align 4, !tbaa !15\l  br label %70\l}"];
	Node0x5a11570 -> Node0x5a12740;
	Node0x5a12740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = add i32 %62, %25\l  %72 = sext i32 %71 to i64\l  %73 = icmp ult i64 %72, %2\l  br i1 %73, label %61, label %74, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5a12740:s0 -> Node0x5a12680;
	Node0x5a12740:s1 -> Node0x5a113e0;
	Node0x5a113e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%74:\l74:                                               \l  %75 = add i32 %26, %32\l  %76 = add i32 %75, %29\l  %77 = icmp slt i32 %76, %11\l  br i1 %77, label %31, label %30, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5a113e0:s0 -> Node0x5a11290;
	Node0x5a113e0:s1 -> Node0x5a0f4f0;
}
