digraph "CFG for '_Z12gSoftmaxGradPfPKfS1_ii' function" {
	label="CFG for '_Z12gSoftmaxGradPfPKfS1_ii' function";

	Node0x503eca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%5:\l  %6 = icmp sgt i32 %3, 0\l  br i1 %6, label %7, label %26\l|{<s0>T|<s1>F}}"];
	Node0x503eca0:s0 -> Node0x503ec40;
	Node0x503eca0:s1 -> Node0x503f3d0;
	Node0x503ec40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%7:\l7:                                                \l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %13 = icmp sgt i32 %4, 0\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %16, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %18\l  %24 = getelementptr inbounds float, float addrspace(3)* %23, i32 %12\l  %25 = icmp eq i16 %17, 1\l  br label %27\l}"];
	Node0x503ec40 -> Node0x5041320;
	Node0x503f3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x5041320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %7 ], [ %93, %91 ]\l  %29 = add i32 %28, %8\l  %30 = icmp slt i32 %29, %3\l  br i1 %30, label %31, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5041320:s0 -> Node0x5041690;
	Node0x5041320:s1 -> Node0x5041470;
	Node0x5041690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %29, %4\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !15\l  br i1 %13, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5041690:s0 -> Node0x50427c0;
	Node0x5041690:s1 -> Node0x5042850;
	Node0x5042850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %25, label %69, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5042850:s0 -> Node0x5042c70;
	Node0x5042850:s1 -> Node0x5042cc0;
	Node0x50427c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi float [ %52, %51 ], [ 0.000000e+00, %31 ]\l  %40 = phi i32 [ %53, %51 ], [ 0, %31 ]\l  %41 = add i32 %40, %12\l  %42 = icmp slt i32 %41, %4\l  br i1 %42, label %43, label %51\l|{<s0>T|<s1>F}}"];
	Node0x50427c0:s0 -> Node0x5043180;
	Node0x50427c0:s1 -> Node0x5042e00;
	Node0x5043180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  %44 = sext i32 %41 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %36, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !15\l  %47 = getelementptr inbounds float, float addrspace(1)* %35, i64 %44\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !15\l  %49 = fmul contract float %46, %48\l  %50 = fadd contract float %39, %49\l  store float %50, float addrspace(3)* %24, align 4, !tbaa !15\l  br label %51\l}"];
	Node0x5043180 -> Node0x5042e00;
	Node0x5042e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi float [ %50, %43 ], [ %39, %38 ]\l  %53 = add i32 %40, %18\l  %54 = icmp slt i32 %53, %4\l  br i1 %54, label %38, label %37, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5042e00:s0 -> Node0x50427c0;
	Node0x5042e00:s1 -> Node0x5042850;
	Node0x5042cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%55:\l55:                                               \l  %56 = phi i32 [ %58, %67 ], [ %18, %37 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %57 = add nsw i32 %56, 1\l  %58 = ashr i32 %57, 1\l  %59 = ashr i32 %56, 1\l  %60 = icmp ult i32 %12, %59\l  br i1 %60, label %61, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5042cc0:s0 -> Node0x50445e0;
	Node0x5042cc0:s1 -> Node0x50440b0;
	Node0x50445e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = add nsw i32 %58, %12\l  %63 = getelementptr inbounds float, float addrspace(3)* %23, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !15\l  %65 = load float, float addrspace(3)* %24, align 4, !tbaa !15\l  %66 = fadd contract float %64, %65\l  store float %66, float addrspace(3)* %24, align 4, !tbaa !15\l  br label %67\l}"];
	Node0x50445e0 -> Node0x50440b0;
	Node0x50440b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%67:\l67:                                               \l  %68 = icmp eq i32 %58, 1\l  br i1 %68, label %69, label %55, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x50440b0:s0 -> Node0x5042c70;
	Node0x50440b0:s1 -> Node0x5042cc0;
	Node0x5042c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%69:\l69:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %13, label %70, label %91\l|{<s0>T|<s1>F}}"];
	Node0x5042c70:s0 -> Node0x5044fc0;
	Node0x5042c70:s1 -> Node0x5041470;
	Node0x5044fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ %89, %88 ], [ 0, %69 ]\l  %72 = add i32 %71, %12\l  %73 = icmp slt i32 %72, %4\l  br i1 %73, label %74, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5044fc0:s0 -> Node0x5045320;
	Node0x5044fc0:s1 -> Node0x50450c0;
	Node0x5045320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%74:\l74:                                               \l  %75 = sext i32 %72 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %36, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !15\l  %78 = getelementptr inbounds float, float addrspace(1)* %35, i64 %75\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !15\l  %80 = load float, float addrspace(3)* %23, align 4, !tbaa !15\l  %81 = fsub contract float %79, %80\l  %82 = fmul contract float %77, %81\l  %83 = fcmp contract une float %82, 0.000000e+00\l  br i1 %83, label %84, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5045320:s0 -> Node0x5045910;
	Node0x5045320:s1 -> Node0x50450c0;
	Node0x5045910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds float, float addrspace(1)* %34, i64 %75\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !15\l  %87 = fadd contract float %82, %86\l  store float %87, float addrspace(1)* %85, align 4, !tbaa !15\l  br label %88\l}"];
	Node0x5045910 -> Node0x50450c0;
	Node0x50450c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = add i32 %71, %18\l  %90 = icmp slt i32 %89, %4\l  br i1 %90, label %70, label %91, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x50450c0:s0 -> Node0x5044fc0;
	Node0x50450c0:s1 -> Node0x5041470;
	Node0x5041470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%91:\l91:                                               \l  %92 = add i32 %19, %28\l  %93 = add i32 %92, %22\l  %94 = icmp slt i32 %93, %3\l  br i1 %94, label %27, label %26, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5041470:s0 -> Node0x5041320;
	Node0x5041470:s1 -> Node0x503f3d0;
}
