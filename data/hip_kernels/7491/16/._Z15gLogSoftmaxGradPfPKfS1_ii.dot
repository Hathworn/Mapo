digraph "CFG for '_Z15gLogSoftmaxGradPfPKfS1_ii' function" {
	label="CFG for '_Z15gLogSoftmaxGradPfPKfS1_ii' function";

	Node0x50650d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%5:\l  %6 = icmp sgt i32 %3, 0\l  br i1 %6, label %7, label %26\l|{<s0>T|<s1>F}}"];
	Node0x50650d0:s0 -> Node0x5065070;
	Node0x50650d0:s1 -> Node0x5065800;
	Node0x5065070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%7:\l7:                                                \l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %13 = icmp sgt i32 %4, 0\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !4\l  %17 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %16, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @_share,\l... i32 0, i32 %18\l  %24 = getelementptr inbounds float, float addrspace(3)* %23, i32 %12\l  %25 = icmp eq i16 %17, 1\l  br label %27\l}"];
	Node0x5065070 -> Node0x5067750;
	Node0x5065800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%26:\l26:                                               \l  ret void\l}"];
	Node0x5067750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%27:\l27:                                               \l  %28 = phi i32 [ 0, %7 ], [ %102, %100 ]\l  %29 = add i32 %28, %8\l  %30 = icmp slt i32 %29, %3\l  br i1 %30, label %31, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5067750:s0 -> Node0x5067ac0;
	Node0x5067750:s1 -> Node0x50678a0;
	Node0x5067ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %29, %4\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %36 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  store float 0.000000e+00, float addrspace(3)* %24, align 4, !tbaa !15\l  br i1 %13, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5067ac0:s0 -> Node0x5068bf0;
	Node0x5067ac0:s1 -> Node0x5068c80;
	Node0x5068c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %25, label %66, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5068c80:s0 -> Node0x50690a0;
	Node0x5068c80:s1 -> Node0x50690f0;
	Node0x5068bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi float [ %49, %48 ], [ 0.000000e+00, %31 ]\l  %40 = phi i32 [ %50, %48 ], [ 0, %31 ]\l  %41 = add i32 %40, %12\l  %42 = icmp slt i32 %41, %4\l  br i1 %42, label %43, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5068bf0:s0 -> Node0x50695b0;
	Node0x5068bf0:s1 -> Node0x5069230;
	Node0x50695b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%43:\l43:                                               \l  %44 = sext i32 %41 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %35, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !15\l  %47 = fadd contract float %46, %39\l  store float %47, float addrspace(3)* %24, align 4, !tbaa !15\l  br label %48\l}"];
	Node0x50695b0 -> Node0x5069230;
	Node0x5069230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi float [ %47, %43 ], [ %39, %38 ]\l  %50 = add i32 %40, %18\l  %51 = icmp slt i32 %50, %4\l  br i1 %51, label %38, label %37, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5069230:s0 -> Node0x5068bf0;
	Node0x5069230:s1 -> Node0x5068c80;
	Node0x50690f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%52:\l52:                                               \l  %53 = phi i32 [ %55, %64 ], [ %18, %37 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %54 = add nsw i32 %53, 1\l  %55 = ashr i32 %54, 1\l  %56 = ashr i32 %53, 1\l  %57 = icmp ult i32 %12, %56\l  br i1 %57, label %58, label %64\l|{<s0>T|<s1>F}}"];
	Node0x50690f0:s0 -> Node0x506a840;
	Node0x50690f0:s1 -> Node0x506a310;
	Node0x506a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%58:\l58:                                               \l  %59 = add nsw i32 %55, %12\l  %60 = getelementptr inbounds float, float addrspace(3)* %23, i32 %59\l  %61 = load float, float addrspace(3)* %60, align 4, !tbaa !15\l  %62 = load float, float addrspace(3)* %24, align 4, !tbaa !15\l  %63 = fadd contract float %61, %62\l  store float %63, float addrspace(3)* %24, align 4, !tbaa !15\l  br label %64\l}"];
	Node0x506a840 -> Node0x506a310;
	Node0x506a310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%64:\l64:                                               \l  %65 = icmp eq i32 %55, 1\l  br i1 %65, label %66, label %52, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x506a310:s0 -> Node0x50690a0;
	Node0x506a310:s1 -> Node0x50690f0;
	Node0x50690a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%66:\l66:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %13, label %67, label %100\l|{<s0>T|<s1>F}}"];
	Node0x50690a0:s0 -> Node0x506b210;
	Node0x50690a0:s1 -> Node0x50678a0;
	Node0x506b210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %98, %97 ], [ 0, %66 ]\l  %69 = add i32 %68, %12\l  %70 = icmp slt i32 %69, %4\l  br i1 %70, label %71, label %97\l|{<s0>T|<s1>F}}"];
	Node0x506b210:s0 -> Node0x506b570;
	Node0x506b210:s1 -> Node0x506b310;
	Node0x506b570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%71:\l71:                                               \l  %72 = sext i32 %69 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %35, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !15\l  %75 = getelementptr inbounds float, float addrspace(1)* %36, i64 %72\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !15\l  %77 = fmul float %76, 0x3FF7154760000000\l  %78 = tail call float @llvm.rint.f32(float %77)\l  %79 = fcmp ogt float %76, 0x40562E4300000000\l  %80 = fcmp olt float %76, 0xC059D1DA00000000\l  %81 = fneg float %77\l  %82 = tail call float @llvm.fma.f32(float %76, float 0x3FF7154760000000,\l... float %81)\l  %83 = tail call float @llvm.fma.f32(float %76, float 0x3E54AE0BE0000000,\l... float %82)\l  %84 = fsub float %77, %78\l  %85 = fadd float %83, %84\l  %86 = tail call float @llvm.exp2.f32(float %85)\l  %87 = fptosi float %78 to i32\l  %88 = tail call float @llvm.amdgcn.ldexp.f32(float %86, i32 %87)\l  %89 = select i1 %80, float 0.000000e+00, float %88\l  %90 = select i1 %79, float 0x7FF0000000000000, float %89\l  %91 = load float, float addrspace(3)* %23, align 4, !tbaa !15\l  %92 = fmul contract float %91, %90\l  %93 = fsub contract float %74, %92\l  %94 = getelementptr inbounds float, float addrspace(1)* %34, i64 %72\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !15\l  %96 = fadd contract float %95, %93\l  store float %96, float addrspace(1)* %94, align 4, !tbaa !15\l  br label %97\l}"];
	Node0x506b570 -> Node0x506b310;
	Node0x506b310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = add i32 %68, %18\l  %99 = icmp slt i32 %98, %4\l  br i1 %99, label %67, label %100, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x506b310:s0 -> Node0x506b210;
	Node0x506b310:s1 -> Node0x50678a0;
	Node0x50678a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%100:\l100:                                              \l  %101 = add i32 %19, %28\l  %102 = add i32 %101, %22\l  %103 = icmp slt i32 %102, %3\l  br i1 %103, label %27, label %26, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x50678a0:s0 -> Node0x5067750;
	Node0x50678a0:s1 -> Node0x5065800;
}
