digraph "CFG for '_Z18gMaxPoolingForwardPfiiS_iiS_iiii' function" {
	label="CFG for '_Z18gMaxPoolingForwardPfiiS_iiS_iiii' function";

	Node0x5c86120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %12\l  %21 = mul nsw i32 %2, %1\l  %22 = icmp slt i32 %20, %21\l  br i1 %22, label %23, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5c86120:s0 -> Node0x5c88cc0;
	Node0x5c86120:s1 -> Node0x5c88d50;
	Node0x5c88cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%23:\l23:                                               \l  %24 = freeze i32 %20\l  %25 = freeze i32 %1\l  %26 = sdiv i32 %24, %25\l  %27 = mul i32 %26, %25\l  %28 = sub i32 %24, %27\l  %29 = mul nsw i32 %26, %5\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  %32 = mul nsw i32 %28, %9\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %31, i64 %33\l  %35 = sdiv i32 %26, %7\l  %36 = mul nsw i32 %35, %8\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %6, i64 %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %38, i64 %33\l  %40 = add nsw i32 %1, -1\l  %41 = icmp eq i32 %28, %40\l  %42 = select i1 %41, i32 %10, i32 %9\l  %43 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %44 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = fmul contract float %43, %44\l  %46 = icmp sgt i32 %42, 1\l  br i1 %46, label %47, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5c88cc0:s0 -> Node0x5c8a9e0;
	Node0x5c88cc0:s1 -> Node0x5c8aa70;
	Node0x5c8a9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%47:\l47:                                               \l  %48 = add i32 %42, -1\l  %49 = add i32 %42, -2\l  %50 = and i32 %48, 7\l  %51 = icmp ult i32 %49, 7\l  br i1 %51, label %54, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5c8a9e0:s0 -> Node0x5c8ae50;
	Node0x5c8a9e0:s1 -> Node0x5c8aea0;
	Node0x5c8aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%52:\l52:                                               \l  %53 = and i32 %48, -8\l  br label %80\l}"];
	Node0x5c8aea0 -> Node0x5c8b0a0;
	Node0x5c8ae50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = phi float [ undef, %47 ], [ %154, %80 ]\l  %56 = phi i32 [ 1, %47 ], [ %155, %80 ]\l  %57 = phi float [ %45, %47 ], [ %154, %80 ]\l  %58 = icmp eq i32 %50, 0\l  br i1 %58, label %74, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5c8ae50:s0 -> Node0x5c8aa70;
	Node0x5c8ae50:s1 -> Node0x5c8b8f0;
	Node0x5c8b8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %71, %59 ], [ %56, %54 ]\l  %61 = phi float [ %70, %59 ], [ %57, %54 ]\l  %62 = phi i32 [ %72, %59 ], [ 0, %54 ]\l  %63 = zext i32 %60 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %34, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = getelementptr inbounds float, float addrspace(1)* %39, i64 %63\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %68 = fmul contract float %65, %67\l  %69 = fcmp contract ogt float %68, %61\l  %70 = select i1 %69, float %68, float %61\l  %71 = add nuw nsw i32 %60, 1\l  %72 = add i32 %62, 1\l  %73 = icmp eq i32 %72, %50\l  br i1 %73, label %74, label %59, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c8b8f0:s0 -> Node0x5c8aa70;
	Node0x5c8b8f0:s1 -> Node0x5c8b8f0;
	Node0x5c8aa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%74:\l74:                                               \l  %75 = phi float [ %45, %23 ], [ %55, %54 ], [ %70, %59 ]\l  %76 = mul nsw i32 %28, %2\l  %77 = add nsw i32 %76, %26\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  store float %75, float addrspace(1)* %79, align 4, !tbaa !7\l  br label %158\l}"];
	Node0x5c8aa70 -> Node0x5c88d50;
	Node0x5c8b0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%80:\l80:                                               \l  %81 = phi i32 [ 1, %52 ], [ %155, %80 ]\l  %82 = phi float [ %45, %52 ], [ %154, %80 ]\l  %83 = phi i32 [ 0, %52 ], [ %156, %80 ]\l  %84 = zext i32 %81 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %34, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %87 = getelementptr inbounds float, float addrspace(1)* %39, i64 %84\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %89 = fmul contract float %86, %88\l  %90 = fcmp contract ogt float %89, %82\l  %91 = select i1 %90, float %89, float %82\l  %92 = add nuw nsw i32 %81, 1\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %34, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %96 = getelementptr inbounds float, float addrspace(1)* %39, i64 %93\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %98 = fmul contract float %95, %97\l  %99 = fcmp contract ogt float %98, %91\l  %100 = select i1 %99, float %98, float %91\l  %101 = add nuw nsw i32 %81, 2\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %34, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %105 = getelementptr inbounds float, float addrspace(1)* %39, i64 %102\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %107 = fmul contract float %104, %106\l  %108 = fcmp contract ogt float %107, %100\l  %109 = select i1 %108, float %107, float %100\l  %110 = add nuw nsw i32 %81, 3\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %34, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %114 = getelementptr inbounds float, float addrspace(1)* %39, i64 %111\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %116 = fmul contract float %113, %115\l  %117 = fcmp contract ogt float %116, %109\l  %118 = select i1 %117, float %116, float %109\l  %119 = add nuw nsw i32 %81, 4\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %34, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %123 = getelementptr inbounds float, float addrspace(1)* %39, i64 %120\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %125 = fmul contract float %122, %124\l  %126 = fcmp contract ogt float %125, %118\l  %127 = select i1 %126, float %125, float %118\l  %128 = add nuw nsw i32 %81, 5\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %34, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %132 = getelementptr inbounds float, float addrspace(1)* %39, i64 %129\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %134 = fmul contract float %131, %133\l  %135 = fcmp contract ogt float %134, %127\l  %136 = select i1 %135, float %134, float %127\l  %137 = add nuw nsw i32 %81, 6\l  %138 = zext i32 %137 to i64\l  %139 = getelementptr inbounds float, float addrspace(1)* %34, i64 %138\l  %140 = load float, float addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %141 = getelementptr inbounds float, float addrspace(1)* %39, i64 %138\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %143 = fmul contract float %140, %142\l  %144 = fcmp contract ogt float %143, %136\l  %145 = select i1 %144, float %143, float %136\l  %146 = add nuw nsw i32 %81, 7\l  %147 = zext i32 %146 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %34, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %150 = getelementptr inbounds float, float addrspace(1)* %39, i64 %147\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %152 = fmul contract float %149, %151\l  %153 = fcmp contract ogt float %152, %145\l  %154 = select i1 %153, float %152, float %145\l  %155 = add nuw nsw i32 %81, 8\l  %156 = add i32 %83, 8\l  %157 = icmp eq i32 %156, %53\l  br i1 %157, label %54, label %80, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c8b0a0:s0 -> Node0x5c8ae50;
	Node0x5c8b0a0:s1 -> Node0x5c8b0a0;
	Node0x5c88d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%158:\l158:                                              \l  ret void\l}"];
}
