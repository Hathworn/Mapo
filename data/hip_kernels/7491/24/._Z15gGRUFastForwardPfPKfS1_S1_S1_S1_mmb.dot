digraph "CFG for '_Z15gGRUFastForwardPfPKfS1_S1_S1_S1_mmb' function" {
	label="CFG for '_Z15gGRUFastForwardPfPKfS1_S1_S1_S1_mmb' function";

	Node0x4b09a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%9:\l  %10 = icmp eq i64 %6, 0\l  br i1 %10, label %30, label %11\l|{<s0>T|<s1>F}}"];
	Node0x4b09a20:s0 -> Node0x4b097c0;
	Node0x4b09a20:s1 -> Node0x4b09810;
	Node0x4b09810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%11:\l11:                                               \l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = icmp eq float addrspace(1)* %5, addrspacecast (float* null to float\l... addrspace(1)*)\l  %14 = icmp eq i64 %7, 0\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %16 = trunc i64 %7 to i32\l  %17 = shl i32 %16, 1\l  %18 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4\l  %24 = load i16, i16 addrspace(4)* %20, align 4, !range !13, !invariant.load\l... !14\l  %25 = zext i16 %24 to i32\l  %26 = udiv i32 %23, %25\l  %27 = mul i32 %26, %25\l  %28 = icmp ugt i32 %23, %27\l  %29 = zext i1 %28 to i32\l  br label %31\l}"];
	Node0x4b09810 -> Node0x4b0d240;
	Node0x4b097c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%30:\l30:                                               \l  ret void\l}"];
	Node0x4b0d240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %11 ], [ %252, %250 ]\l  %33 = add i32 %32, %12\l  %34 = sext i32 %33 to i64\l  %35 = icmp ult i64 %34, %6\l  br i1 %35, label %36, label %250\l|{<s0>T|<s1>F}}"];
	Node0x4b0d240:s0 -> Node0x4b0d730;
	Node0x4b0d240:s1 -> Node0x4b0d390;
	Node0x4b0d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%36:\l36:                                               \l  br i1 %13, label %41, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4b0d730:s0 -> Node0x4b0d870;
	Node0x4b0d730:s1 -> Node0x4b0d8c0;
	Node0x4b0d8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !15\l  %40 = fcmp contract une float %39, 0.000000e+00\l  br label %41\l}"];
	Node0x4b0d8c0 -> Node0x4b0d870;
	Node0x4b0d870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%41:\l41:                                               \l  %42 = phi i1 [ true, %36 ], [ %40, %37 ]\l  %43 = uitofp i1 %42 to float\l  %44 = mul i64 %34, %7\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %47 = mul i64 %44, 3\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %47\l  br i1 %14, label %250, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4b0d870:s0 -> Node0x4b0d390;
	Node0x4b0d870:s1 -> Node0x4b0ec80;
	Node0x4b0ec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = fsub contract float 1.000000e+00, %43\l  br label %52\l}"];
	Node0x4b0ec80 -> Node0x4b0ee10;
	Node0x4b0ee10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %50 ], [ %247, %246 ]\l  %54 = add i32 %53, %15\l  %55 = sext i32 %54 to i64\l  %56 = icmp ult i64 %55, %7\l  br i1 %56, label %57, label %246\l|{<s0>T|<s1>F}}"];
	Node0x4b0ee10:s0 -> Node0x4b0f210;
	Node0x4b0ee10:s1 -> Node0x4b0ef40;
	Node0x4b0f210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds float, float addrspace(1)* %48, i64 %55\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !15\l  %60 = getelementptr inbounds float, float addrspace(1)* %49, i64 %55\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !15\l  %62 = fadd contract float %59, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %4, i64 %55\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !15\l  %65 = fadd contract float %62, %64\l  %66 = fcmp contract ult float %65, 0.000000e+00\l  br i1 %66, label %84, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4b0f210:s0 -> Node0x4b0d5b0;
	Node0x4b0f210:s1 -> Node0x4b0d600;
	Node0x4b0d600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%67:\l67:                                               \l  %68 = fneg contract float %65\l  %69 = fmul float %65, 0xBFF7154760000000\l  %70 = tail call float @llvm.rint.f32(float %69)\l  %71 = fcmp olt float %65, 0xC0562E4300000000\l  %72 = fcmp ogt float %65, 0x4059D1DA00000000\l  %73 = fneg float %69\l  %74 = tail call float @llvm.fma.f32(float %68, float 0x3FF7154760000000,\l... float %73)\l  %75 = tail call float @llvm.fma.f32(float %68, float 0x3E54AE0BE0000000,\l... float %74)\l  %76 = fsub float %69, %70\l  %77 = fadd float %75, %76\l  %78 = tail call float @llvm.exp2.f32(float %77)\l  %79 = fptosi float %70 to i32\l  %80 = tail call float @llvm.amdgcn.ldexp.f32(float %78, i32 %79)\l  %81 = select i1 %72, float 0.000000e+00, float %80\l  %82 = select i1 %71, float 0x7FF0000000000000, float %81\l  %83 = fpext float %82 to double\l  br label %100\l}"];
	Node0x4b0d600 -> Node0x4b11320;
	Node0x4b0d5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%84:\l84:                                               \l  %85 = fmul float %65, 0x3FF7154760000000\l  %86 = tail call float @llvm.rint.f32(float %85)\l  %87 = fcmp ogt float %65, 0x40562E4300000000\l  %88 = fcmp olt float %65, 0xC059D1DA00000000\l  %89 = fneg float %85\l  %90 = tail call float @llvm.fma.f32(float %65, float 0x3FF7154760000000,\l... float %89)\l  %91 = tail call float @llvm.fma.f32(float %65, float 0x3E54AE0BE0000000,\l... float %90)\l  %92 = fsub float %85, %86\l  %93 = fadd float %91, %92\l  %94 = tail call float @llvm.exp2.f32(float %93)\l  %95 = fptosi float %86 to i32\l  %96 = tail call float @llvm.amdgcn.ldexp.f32(float %94, i32 %95)\l  %97 = select i1 %88, float 0.000000e+00, float %96\l  %98 = select i1 %87, float 0x7FF0000000000000, float %97\l  %99 = fpext float %98 to double\l  br label %100\l}"];
	Node0x4b0d5b0 -> Node0x4b11320;
	Node0x4b11320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%100:\l100:                                              \l  %101 = phi double [ %99, %84 ], [ %83, %67 ]\l  %102 = phi double [ %99, %84 ], [ 1.000000e+00, %67 ]\l  %103 = fadd contract double %101, 1.000000e+00\l  %104 = fdiv contract double %102, %103\l  %105 = fptrunc double %104 to float\l  %106 = add i32 %54, %16\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %48, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !15\l  %110 = getelementptr inbounds float, float addrspace(1)* %49, i64 %107\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !15\l  %112 = fadd contract float %109, %111\l  %113 = getelementptr inbounds float, float addrspace(1)* %4, i64 %107\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !15\l  %115 = fadd contract float %112, %114\l  %116 = fcmp contract ult float %115, 0.000000e+00\l  br i1 %116, label %134, label %117\l|{<s0>T|<s1>F}}"];
	Node0x4b11320:s0 -> Node0x4b12950;
	Node0x4b11320:s1 -> Node0x4b129a0;
	Node0x4b129a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%117:\l117:                                              \l  %118 = fneg contract float %115\l  %119 = fmul float %115, 0xBFF7154760000000\l  %120 = tail call float @llvm.rint.f32(float %119)\l  %121 = fcmp olt float %115, 0xC0562E4300000000\l  %122 = fcmp ogt float %115, 0x4059D1DA00000000\l  %123 = fneg float %119\l  %124 = tail call float @llvm.fma.f32(float %118, float 0x3FF7154760000000,\l... float %123)\l  %125 = tail call float @llvm.fma.f32(float %118, float 0x3E54AE0BE0000000,\l... float %124)\l  %126 = fsub float %119, %120\l  %127 = fadd float %125, %126\l  %128 = tail call float @llvm.exp2.f32(float %127)\l  %129 = fptosi float %120 to i32\l  %130 = tail call float @llvm.amdgcn.ldexp.f32(float %128, i32 %129)\l  %131 = select i1 %122, float 0.000000e+00, float %130\l  %132 = select i1 %121, float 0x7FF0000000000000, float %131\l  %133 = fpext float %132 to double\l  br label %150\l}"];
	Node0x4b129a0 -> Node0x4b10070;
	Node0x4b12950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%134:\l134:                                              \l  %135 = fmul float %115, 0x3FF7154760000000\l  %136 = tail call float @llvm.rint.f32(float %135)\l  %137 = fcmp ogt float %115, 0x40562E4300000000\l  %138 = fcmp olt float %115, 0xC059D1DA00000000\l  %139 = fneg float %135\l  %140 = tail call float @llvm.fma.f32(float %115, float 0x3FF7154760000000,\l... float %139)\l  %141 = tail call float @llvm.fma.f32(float %115, float 0x3E54AE0BE0000000,\l... float %140)\l  %142 = fsub float %135, %136\l  %143 = fadd float %141, %142\l  %144 = tail call float @llvm.exp2.f32(float %143)\l  %145 = fptosi float %136 to i32\l  %146 = tail call float @llvm.amdgcn.ldexp.f32(float %144, i32 %145)\l  %147 = select i1 %138, float 0.000000e+00, float %146\l  %148 = select i1 %137, float 0x7FF0000000000000, float %147\l  %149 = fpext float %148 to double\l  br label %150\l}"];
	Node0x4b12950 -> Node0x4b10070;
	Node0x4b10070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%150:\l150:                                              \l  %151 = phi double [ %149, %134 ], [ %133, %117 ]\l  %152 = phi double [ %149, %134 ], [ 1.000000e+00, %117 ]\l  %153 = fadd contract double %151, 1.000000e+00\l  %154 = fdiv contract double %152, %153\l  %155 = fptrunc double %154 to float\l  %156 = add i32 %54, %17\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %48, i64 %157\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !15\l  %160 = getelementptr inbounds float, float addrspace(1)* %49, i64 %157\l  %161 = load float, float addrspace(1)* %160, align 4, !tbaa !15\l  br i1 %8, label %162, label %198\l|{<s0>T|<s1>F}}"];
	Node0x4b10070:s0 -> Node0x4b14c30;
	Node0x4b10070:s1 -> Node0x4b14c80;
	Node0x4b14c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%162:\l162:                                              \l  %163 = getelementptr inbounds float, float addrspace(1)* %4, i64 %157\l  %164 = load float, float addrspace(1)* %163, align 4, !tbaa !15\l  %165 = fadd contract float %161, %164\l  %166 = fmul contract float %165, %105\l  %167 = fadd contract float %159, %166\l  %168 = tail call float @llvm.fabs.f32(float %167)\l  %169 = fcmp olt float %168, 6.250000e-01\l  br i1 %169, label %170, label %178\l|{<s0>T|<s1>F}}"];
	Node0x4b14c30:s0 -> Node0x4b15290;
	Node0x4b14c30:s1 -> Node0x4b15320;
	Node0x4b15290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%170:\l170:                                              \l  %171 = fmul float %167, %167\l  %172 = tail call float @llvm.fmuladd.f32(float %171, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %173 = tail call float @llvm.fmuladd.f32(float %171, float %172, float\l... 0xBFAB8389C0000000)\l  %174 = tail call float @llvm.fmuladd.f32(float %171, float %173, float\l... 0x3FC1107040000000)\l  %175 = tail call float @llvm.fmuladd.f32(float %171, float %174, float\l... 0xBFD5555320000000)\l  %176 = fmul float %168, %175\l  %177 = tail call float @llvm.fmuladd.f32(float %171, float %176, float %168)\l  br label %195\l}"];
	Node0x4b15290 -> Node0x4b15e30;
	Node0x4b15320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%178:\l178:                                              \l  %179 = fmul float %168, 2.000000e+00\l  %180 = fmul float %179, 0x3FF7154760000000\l  %181 = tail call float @llvm.rint.f32(float %180)\l  %182 = fcmp ogt float %179, 0x40562E4300000000\l  %183 = fneg float %180\l  %184 = tail call float @llvm.fma.f32(float %179, float 0x3FF7154760000000,\l... float %183)\l  %185 = tail call float @llvm.fma.f32(float %179, float 0x3E54AE0BE0000000,\l... float %184)\l  %186 = fsub float %180, %181\l  %187 = fadd float %185, %186\l  %188 = tail call float @llvm.exp2.f32(float %187)\l  %189 = fptosi float %181 to i32\l  %190 = tail call float @llvm.amdgcn.ldexp.f32(float %188, i32 %189)\l  %191 = fadd float %190, 1.000000e+00\l  %192 = select i1 %182, float 0x7FF0000000000000, float %191\l  %193 = tail call float @llvm.amdgcn.rcp.f32(float %192)\l  %194 = tail call float @llvm.fmuladd.f32(float %193, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %195\l}"];
	Node0x4b15320 -> Node0x4b15e30;
	Node0x4b15e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%195:\l195:                                              \l  %196 = phi float [ %177, %170 ], [ %194, %178 ]\l  %197 = tail call float @llvm.copysign.f32(float %196, float %167)\l  br label %234\l}"];
	Node0x4b15e30 -> Node0x4b17030;
	Node0x4b14c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%198:\l198:                                              \l  %199 = fmul contract float %161, %105\l  %200 = fadd contract float %159, %199\l  %201 = getelementptr inbounds float, float addrspace(1)* %4, i64 %157\l  %202 = load float, float addrspace(1)* %201, align 4, !tbaa !15\l  %203 = fadd contract float %202, %200\l  %204 = tail call float @llvm.fabs.f32(float %203)\l  %205 = fcmp olt float %204, 6.250000e-01\l  br i1 %205, label %206, label %214\l|{<s0>T|<s1>F}}"];
	Node0x4b14c80:s0 -> Node0x4b17590;
	Node0x4b14c80:s1 -> Node0x4b175e0;
	Node0x4b17590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%206:\l206:                                              \l  %207 = fmul float %203, %203\l  %208 = tail call float @llvm.fmuladd.f32(float %207, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %209 = tail call float @llvm.fmuladd.f32(float %207, float %208, float\l... 0xBFAB8389C0000000)\l  %210 = tail call float @llvm.fmuladd.f32(float %207, float %209, float\l... 0x3FC1107040000000)\l  %211 = tail call float @llvm.fmuladd.f32(float %207, float %210, float\l... 0xBFD5555320000000)\l  %212 = fmul float %204, %211\l  %213 = tail call float @llvm.fmuladd.f32(float %207, float %212, float %204)\l  br label %231\l}"];
	Node0x4b17590 -> Node0x4b17e30;
	Node0x4b175e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%214:\l214:                                              \l  %215 = fmul float %204, 2.000000e+00\l  %216 = fmul float %215, 0x3FF7154760000000\l  %217 = tail call float @llvm.rint.f32(float %216)\l  %218 = fcmp ogt float %215, 0x40562E4300000000\l  %219 = fneg float %216\l  %220 = tail call float @llvm.fma.f32(float %215, float 0x3FF7154760000000,\l... float %219)\l  %221 = tail call float @llvm.fma.f32(float %215, float 0x3E54AE0BE0000000,\l... float %220)\l  %222 = fsub float %216, %217\l  %223 = fadd float %221, %222\l  %224 = tail call float @llvm.exp2.f32(float %223)\l  %225 = fptosi float %217 to i32\l  %226 = tail call float @llvm.amdgcn.ldexp.f32(float %224, i32 %225)\l  %227 = fadd float %226, 1.000000e+00\l  %228 = select i1 %218, float 0x7FF0000000000000, float %227\l  %229 = tail call float @llvm.amdgcn.rcp.f32(float %228)\l  %230 = tail call float @llvm.fmuladd.f32(float %229, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %231\l}"];
	Node0x4b175e0 -> Node0x4b17e30;
	Node0x4b17e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%231:\l231:                                              \l  %232 = phi float [ %213, %206 ], [ %230, %214 ]\l  %233 = tail call float @llvm.copysign.f32(float %232, float %203)\l  br label %234\l}"];
	Node0x4b17e30 -> Node0x4b17030;
	Node0x4b17030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%234:\l234:                                              \l  %235 = phi float [ %197, %195 ], [ %233, %231 ]\l  %236 = fsub contract float 1.000000e+00, %155\l  %237 = fmul contract float %236, %235\l  %238 = getelementptr inbounds float, float addrspace(1)* %46, i64 %55\l  %239 = load float, float addrspace(1)* %238, align 4, !tbaa !15\l  %240 = fmul contract float %239, %155\l  %241 = fadd contract float %237, %240\l  %242 = fmul contract float %241, %43\l  %243 = fmul contract float %51, %239\l  %244 = fadd contract float %243, %242\l  %245 = getelementptr inbounds float, float addrspace(1)* %45, i64 %55\l  store float %244, float addrspace(1)* %245, align 4, !tbaa !15\l  br label %246\l}"];
	Node0x4b17030 -> Node0x4b0ef40;
	Node0x4b0ef40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%246:\l246:                                              \l  %247 = add i32 %53, %25\l  %248 = sext i32 %247 to i64\l  %249 = icmp ult i64 %248, %7\l  br i1 %249, label %52, label %250, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4b0ef40:s0 -> Node0x4b0ee10;
	Node0x4b0ef40:s1 -> Node0x4b0d390;
	Node0x4b0d390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%250:\l250:                                              \l  %251 = add i32 %26, %32\l  %252 = add i32 %251, %29\l  %253 = sext i32 %252 to i64\l  %254 = icmp ult i64 %253, %6\l  br i1 %254, label %31, label %30, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x4b0d390:s0 -> Node0x4b0d240;
	Node0x4b0d390:s1 -> Node0x4b097c0;
}
