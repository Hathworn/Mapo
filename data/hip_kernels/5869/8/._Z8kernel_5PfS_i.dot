digraph "CFG for '_Z8kernel_5PfS_i' function" {
	label="CFG for '_Z8kernel_5PfS_i' function";

	Node0x4783020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = shl i32 %5, 1\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %4\l  %14 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %4\l  %15 = addrspacecast float addrspace(3)* %14 to float*\l  store volatile float 0.000000e+00, float* %15, align 4, !tbaa !7\l  %16 = icmp slt i32 %13, %2\l  br i1 %16, label %17, label %21\l|{<s0>T|<s1>F}}"];
	Node0x4783020:s0 -> Node0x4784930;
	Node0x4783020:s1 -> Node0x4785ea0;
	Node0x4784930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = sext i32 %13 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store volatile float %20, float* %15, align 4, !tbaa !7\l  br label %21\l}"];
	Node0x4784930 -> Node0x4785ea0;
	Node0x4785ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%21:\l21:                                               \l  %22 = add i32 %13, %10\l  %23 = icmp ult i32 %22, %2\l  br i1 %23, label %24, label %30\l|{<s0>T|<s1>F}}"];
	Node0x4785ea0:s0 -> Node0x4786fd0;
	Node0x4785ea0:s1 -> Node0x4787020;
	Node0x4786fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = zext i32 %22 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %28 = load volatile float, float* %15, align 4, !tbaa !7\l  %29 = fadd contract float %27, %28\l  store volatile float %29, float* %15, align 4, !tbaa !7\l  br label %30\l}"];
	Node0x4786fd0 -> Node0x4787020;
	Node0x4787020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%30:\l30:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = icmp ugt i16 %9, 127\l  br i1 %31, label %34, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4787020:s0 -> Node0x4787800;
	Node0x4787020:s1 -> Node0x4787890;
	Node0x4787890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%32:\l32:                                               \l  %33 = icmp ult i32 %4, 32\l  br i1 %33, label %47, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4787890:s0 -> Node0x4785e50;
	Node0x4787890:s1 -> Node0x4787be0;
	Node0x4787800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %36, %45 ], [ %10, %30 ]\l  %36 = lshr i32 %35, 1\l  %37 = icmp ult i32 %4, %36\l  br i1 %37, label %38, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4787800:s0 -> Node0x4787fb0;
	Node0x4787800:s1 -> Node0x4787d50;
	Node0x4787fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = add nuw nsw i32 %36, %4\l  %40 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %39\l  %41 = addrspacecast float addrspace(3)* %40 to float*\l  %42 = load volatile float, float* %41, align 4, !tbaa !7\l  %43 = load volatile float, float* %15, align 4, !tbaa !7\l  %44 = fadd contract float %42, %43\l  store volatile float %44, float* %15, align 4, !tbaa !7\l  br label %45\l}"];
	Node0x4787fb0 -> Node0x4787d50;
	Node0x4787d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %46 = icmp ugt i32 %35, 255\l  br i1 %46, label %34, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4787d50:s0 -> Node0x4787800;
	Node0x4787d50:s1 -> Node0x4787890;
	Node0x4785e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%47:\l47:                                               \l  %48 = add nuw nsw i32 %4, 32\l  %49 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %48\l  %50 = addrspacecast float addrspace(3)* %49 to float*\l  %51 = load volatile float, float* %50, align 4, !tbaa !7\l  %52 = load volatile float, float* %15, align 4, !tbaa !7\l  %53 = fadd contract float %51, %52\l  store volatile float %53, float* %15, align 4, !tbaa !7\l  %54 = add nuw nsw i32 %4, 16\l  %55 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %54\l  %56 = addrspacecast float addrspace(3)* %55 to float*\l  %57 = load volatile float, float* %56, align 4, !tbaa !7\l  %58 = load volatile float, float* %15, align 4, !tbaa !7\l  %59 = fadd contract float %57, %58\l  store volatile float %59, float* %15, align 4, !tbaa !7\l  %60 = add nuw nsw i32 %4, 8\l  %61 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %60\l  %62 = addrspacecast float addrspace(3)* %61 to float*\l  %63 = load volatile float, float* %62, align 4, !tbaa !7\l  %64 = load volatile float, float* %15, align 4, !tbaa !7\l  %65 = fadd contract float %63, %64\l  store volatile float %65, float* %15, align 4, !tbaa !7\l  %66 = add nuw nsw i32 %4, 4\l  %67 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %66\l  %68 = addrspacecast float addrspace(3)* %67 to float*\l  %69 = load volatile float, float* %68, align 4, !tbaa !7\l  %70 = load volatile float, float* %15, align 4, !tbaa !7\l  %71 = fadd contract float %69, %70\l  store volatile float %71, float* %15, align 4, !tbaa !7\l  %72 = add nuw nsw i32 %4, 2\l  %73 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %72\l  %74 = addrspacecast float addrspace(3)* %73 to float*\l  %75 = load volatile float, float* %74, align 4, !tbaa !7\l  %76 = load volatile float, float* %15, align 4, !tbaa !7\l  %77 = fadd contract float %75, %76\l  store volatile float %77, float* %15, align 4, !tbaa !7\l  %78 = add nuw nsw i32 %4, 1\l  %79 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_5PfS_iE6s_data, i32 0, i32 %78\l  %80 = addrspacecast float addrspace(3)* %79 to float*\l  %81 = load volatile float, float* %80, align 4, !tbaa !7\l  %82 = load volatile float, float* %15, align 4, !tbaa !7\l  %83 = fadd contract float %81, %82\l  store volatile float %83, float* %15, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4785e50 -> Node0x4787be0;
	Node0x4787be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  %85 = icmp eq i32 %4, 0\l  br i1 %85, label %86, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4787be0:s0 -> Node0x478a2d0;
	Node0x4787be0:s1 -> Node0x478a320;
	Node0x478a2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%86:\l86:                                               \l  %87 = load volatile float, float* %15, align 4, !tbaa !7\l  %88 = zext i32 %5 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %1, i64 %88\l  store float %87, float addrspace(1)* %89, align 4, !tbaa !7\l  br label %90\l}"];
	Node0x478a2d0 -> Node0x478a320;
	Node0x478a320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%90:\l90:                                               \l  ret void\l}"];
}
