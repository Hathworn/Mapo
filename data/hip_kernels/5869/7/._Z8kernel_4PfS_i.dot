digraph "CFG for '_Z8kernel_4PfS_i' function" {
	label="CFG for '_Z8kernel_4PfS_i' function";

	Node0x4c2bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %4\l  %14 = addrspacecast float addrspace(3)* %13 to float*\l  store volatile float 0.000000e+00, float* %14, align 4, !tbaa !7\l  %15 = icmp slt i32 %12, %2\l  br i1 %15, label %16, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4c2bdd0:s0 -> Node0x4c2ea70;
	Node0x4c2bdd0:s1 -> Node0x4c2eb00;
	Node0x4c2ea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%16:\l16:                                               \l  %17 = sext i32 %12 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  store volatile float %19, float* %14, align 4, !tbaa !7\l  br label %20\l}"];
	Node0x4c2ea70 -> Node0x4c2eb00;
	Node0x4c2eb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%20:\l20:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %21 = icmp ugt i16 %9, 127\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4c2eb00:s0 -> Node0x4c2fed0;
	Node0x4c2eb00:s1 -> Node0x4c2ff60;
	Node0x4c2ff60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%22:\l22:                                               \l  %23 = icmp ult i32 %4, 32\l  br i1 %23, label %37, label %74\l|{<s0>T|<s1>F}}"];
	Node0x4c2ff60:s0 -> Node0x4c30160;
	Node0x4c2ff60:s1 -> Node0x4c301b0;
	Node0x4c2fed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %26, %35 ], [ %10, %20 ]\l  %26 = lshr i32 %25, 1\l  %27 = icmp ult i32 %4, %26\l  br i1 %27, label %28, label %35\l|{<s0>T|<s1>F}}"];
	Node0x4c2fed0:s0 -> Node0x4c305b0;
	Node0x4c2fed0:s1 -> Node0x4c30320;
	Node0x4c305b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%28:\l28:                                               \l  %29 = add nuw nsw i32 %26, %4\l  %30 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %29\l  %31 = addrspacecast float addrspace(3)* %30 to float*\l  %32 = load volatile float, float* %31, align 4, !tbaa !7\l  %33 = load volatile float, float* %14, align 4, !tbaa !7\l  %34 = fadd contract float %32, %33\l  store volatile float %34, float* %14, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x4c305b0 -> Node0x4c30320;
	Node0x4c30320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = icmp ugt i32 %25, 255\l  br i1 %36, label %24, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c30320:s0 -> Node0x4c2fed0;
	Node0x4c30320:s1 -> Node0x4c2ff60;
	Node0x4c30160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = add nuw nsw i32 %4, 32\l  %39 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %38\l  %40 = addrspacecast float addrspace(3)* %39 to float*\l  %41 = load volatile float, float* %40, align 4, !tbaa !7\l  %42 = load volatile float, float* %14, align 4, !tbaa !7\l  %43 = fadd contract float %41, %42\l  store volatile float %43, float* %14, align 4, !tbaa !7\l  %44 = add nuw nsw i32 %4, 16\l  %45 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %44\l  %46 = addrspacecast float addrspace(3)* %45 to float*\l  %47 = load volatile float, float* %46, align 4, !tbaa !7\l  %48 = load volatile float, float* %14, align 4, !tbaa !7\l  %49 = fadd contract float %47, %48\l  store volatile float %49, float* %14, align 4, !tbaa !7\l  %50 = add nuw nsw i32 %4, 8\l  %51 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %50\l  %52 = addrspacecast float addrspace(3)* %51 to float*\l  %53 = load volatile float, float* %52, align 4, !tbaa !7\l  %54 = load volatile float, float* %14, align 4, !tbaa !7\l  %55 = fadd contract float %53, %54\l  store volatile float %55, float* %14, align 4, !tbaa !7\l  %56 = add nuw nsw i32 %4, 4\l  %57 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %56\l  %58 = addrspacecast float addrspace(3)* %57 to float*\l  %59 = load volatile float, float* %58, align 4, !tbaa !7\l  %60 = load volatile float, float* %14, align 4, !tbaa !7\l  %61 = fadd contract float %59, %60\l  store volatile float %61, float* %14, align 4, !tbaa !7\l  %62 = add nuw nsw i32 %4, 2\l  %63 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %62\l  %64 = addrspacecast float addrspace(3)* %63 to float*\l  %65 = load volatile float, float* %64, align 4, !tbaa !7\l  %66 = load volatile float, float* %14, align 4, !tbaa !7\l  %67 = fadd contract float %65, %66\l  store volatile float %67, float* %14, align 4, !tbaa !7\l  %68 = add nuw nsw i32 %4, 1\l  %69 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ8kernel_4PfS_iE6s_data, i32 0, i32 %68\l  %70 = addrspacecast float addrspace(3)* %69 to float*\l  %71 = load volatile float, float* %70, align 4, !tbaa !7\l  %72 = load volatile float, float* %14, align 4, !tbaa !7\l  %73 = fadd contract float %71, %72\l  store volatile float %73, float* %14, align 4, !tbaa !7\l  br label %74\l}"];
	Node0x4c30160 -> Node0x4c301b0;
	Node0x4c301b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%74:\l74:                                               \l  %75 = icmp eq i32 %4, 0\l  br i1 %75, label %76, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4c301b0:s0 -> Node0x4c329e0;
	Node0x4c301b0:s1 -> Node0x4c32a30;
	Node0x4c329e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%76:\l76:                                               \l  %77 = load volatile float, float* %14, align 4, !tbaa !7\l  %78 = zext i32 %5 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %1, i64 %78\l  store float %77, float addrspace(1)* %79, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x4c329e0 -> Node0x4c32a30;
	Node0x4c32a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%80:\l80:                                               \l  ret void\l}"];
}
