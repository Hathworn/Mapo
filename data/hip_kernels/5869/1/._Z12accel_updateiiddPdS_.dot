digraph "CFG for '_Z12accel_updateiiddPdS_' function" {
	label="CFG for '_Z12accel_updateiiddPdS_' function";

	Node0x4c0f920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = freeze i32 %15\l  %17 = freeze i32 %0\l  %18 = sdiv i32 %16, %17\l  %19 = mul i32 %18, %17\l  %20 = sub i32 %16, %19\l  %21 = mul nsw i32 %1, %0\l  %22 = icmp slt i32 %15, %21\l  br i1 %22, label %23, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4c0f920:s0 -> Node0x4c11ba0;
	Node0x4c0f920:s1 -> Node0x4c11c30;
	Node0x4c11ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%23:\l23:                                               \l  %24 = add nsw i32 %1, -1\l  %25 = icmp slt i32 %18, %24\l  %26 = icmp sgt i32 %18, 0\l  %27 = and i1 %25, %26\l  br i1 %27, label %28, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4c11ba0:s0 -> Node0x4c11fe0;
	Node0x4c11ba0:s1 -> Node0x4c12030;
	Node0x4c11fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%28:\l28:                                               \l  %29 = add nsw i32 %0, -1\l  %30 = icmp slt i32 %20, %29\l  %31 = icmp sgt i32 %20, 0\l  %32 = and i1 %30, %31\l  br i1 %32, label %33, label %62\l|{<s0>T|<s1>F}}"];
	Node0x4c11fe0:s0 -> Node0x4c117c0;
	Node0x4c11fe0:s1 -> Node0x4c12030;
	Node0x4c117c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = add nsw i32 %15, %0\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %4, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = sub nsw i32 %15, %0\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %4, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fadd contract double %37, %41\l  %43 = sext i32 %15 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %4, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fmul contract double %45, 2.000000e+00\l  %47 = fsub contract double %42, %46\l  %48 = fmul contract double %47, %2\l  %49 = add nsw i32 %15, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %4, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = add nsw i32 %15, -1\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %4, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fadd contract double %52, %56\l  %58 = fsub contract double %57, %46\l  %59 = fmul contract double %58, %3\l  %60 = fadd contract double %48, %59\l  %61 = fmul contract double %60, 5.000000e-01\l  br label %64\l}"];
	Node0x4c117c0 -> Node0x4c14e20;
	Node0x4c12030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%62:\l62:                                               \l  %63 = sext i32 %15 to i64\l  br label %64\l}"];
	Node0x4c12030 -> Node0x4c14e20;
	Node0x4c14e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%64:\l64:                                               \l  %65 = phi i64 [ %43, %33 ], [ %63, %62 ]\l  %66 = phi double [ %61, %33 ], [ 0.000000e+00, %62 ]\l  %67 = getelementptr inbounds double, double addrspace(1)* %5, i64 %65\l  store double %66, double addrspace(1)* %67, align 8, !tbaa !7\l  br label %68\l}"];
	Node0x4c14e20 -> Node0x4c11c30;
	Node0x4c11c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
