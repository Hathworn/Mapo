digraph "CFG for '_Z10pos_updateiidPdS_S_' function" {
	label="CFG for '_Z10pos_updateiidPdS_S_' function";

	Node0x4f29440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = freeze i32 %15\l  %17 = freeze i32 %0\l  %18 = sdiv i32 %16, %17\l  %19 = mul i32 %18, %17\l  %20 = sub i32 %16, %19\l  %21 = add nsw i32 %1, -1\l  %22 = icmp slt i32 %18, %21\l  %23 = icmp sgt i32 %18, 0\l  %24 = and i1 %22, %23\l  br i1 %24, label %25, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4f29440:s0 -> Node0x4f2b810;
	Node0x4f29440:s1 -> Node0x4f2b8a0;
	Node0x4f2b810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = add nsw i32 %0, -1\l  %27 = icmp slt i32 %20, %26\l  %28 = icmp sgt i32 %20, 0\l  %29 = and i1 %27, %28\l  br i1 %29, label %30, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4f2b810:s0 -> Node0x4f2bc20;
	Node0x4f2b810:s1 -> Node0x4f2b8a0;
	Node0x4f2bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%30:\l30:                                               \l  %31 = sext i32 %15 to i64\l  %32 = getelementptr inbounds double, double addrspace(1)* %4, i64 %31\l  %33 = load double, double addrspace(1)* %32, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = getelementptr inbounds double, double addrspace(1)* %5, i64 %31\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fmul contract double %35, %2\l  %37 = fadd contract double %33, %36\l  store double %37, double addrspace(1)* %32, align 8, !tbaa !7\l  %38 = getelementptr inbounds double, double addrspace(1)* %3, i64 %31\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !7\l  %40 = fmul contract double %37, %2\l  %41 = fadd contract double %39, %40\l  store double %41, double addrspace(1)* %38, align 8, !tbaa !7\l  br label %42\l}"];
	Node0x4f2bc20 -> Node0x4f2b8a0;
	Node0x4f2b8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  ret void\l}"];
}
