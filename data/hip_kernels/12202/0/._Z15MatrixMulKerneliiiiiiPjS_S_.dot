digraph "CFG for '_Z15MatrixMulKerneliiiiiiPjS_S_' function" {
	label="CFG for '_Z15MatrixMulKerneliiiiiiPjS_S_' function";

	Node0x49557a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = shl i32 %10, 1\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = shl i32 %14, 1\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %17 = add i32 %15, %16\l  %18 = icmp sgt i32 %1, 0\l  br i1 %18, label %19, label %31\l|{<s0>T|<s1>F}}"];
	Node0x49557a0:s0 -> Node0x49581c0;
	Node0x49557a0:s1 -> Node0x4958250;
	Node0x49581c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%19:\l19:                                               \l  %20 = add nuw nsw i32 %1, 1\l  %21 = lshr i32 %20, 1\l  %22 = icmp slt i32 %13, %0\l  %23 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2As, i32 0, i32 %12, i32 %16\l  %24 = mul nsw i32 %13, %1\l  %25 = icmp slt i32 %17, %3\l  %26 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2Bs, i32 0, i32 %12, i32 %16\l  %27 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2As, i32 0, i32 %12, i32 0\l  %28 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2Bs, i32 0, i32 0, i32 %16\l  %29 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2As, i32 0, i32 %12, i32 1\l  %30 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(3)*\l... @_ZZ15MatrixMulKerneliiiiiiPjS_S_E2Bs, i32 0, i32 1, i32 %16\l  br label %36\l}"];
	Node0x49581c0 -> Node0x4958590;
	Node0x4958250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%31:\l31:                                               \l  %32 = phi i32 [ 0, %9 ], [ %68, %59 ]\l  %33 = icmp slt i32 %13, %4\l  %34 = icmp slt i32 %17, %5\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %71, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4958250:s0 -> Node0x49580b0;
	Node0x4958250:s1 -> Node0x4959180;
	Node0x4958590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %19 ], [ %69, %59 ]\l  %38 = phi i32 [ 0, %19 ], [ %68, %59 ]\l  %39 = shl nuw nsw i32 %37, 1\l  %40 = add nuw i32 %39, %16\l  %41 = icmp ult i32 %40, %1\l  %42 = select i1 %41, i1 %22, i1 false\l  br i1 %42, label %43, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4958590:s0 -> Node0x49596b0;
	Node0x4958590:s1 -> Node0x4959740;
	Node0x49596b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = add i32 %40, %24\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %48\l}"];
	Node0x49596b0 -> Node0x4959740;
	Node0x4959740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %47, %43 ], [ 0, %36 ]\l  store i32 %49, i32 addrspace(3)* %23, align 4, !tbaa !5\l  %50 = add nuw i32 %39, %12\l  %51 = icmp ult i32 %50, %2\l  %52 = select i1 %51, i1 %25, i1 false\l  br i1 %52, label %53, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4959740:s0 -> Node0x495a6d0;
	Node0x4959740:s1 -> Node0x4958cb0;
	Node0x495a6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = mul i32 %50, %3\l  %55 = add i32 %54, %17\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !5, !amdgpu.noclobber\l... !9\l  br label %59\l}"];
	Node0x495a6d0 -> Node0x4958cb0;
	Node0x4958cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %58, %53 ], [ 0, %48 ]\l  store i32 %60, i32 addrspace(3)* %26, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %61 = load i32, i32 addrspace(3)* %27, align 8, !tbaa !5\l  %62 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !5\l  %63 = mul nsw i32 %62, %61\l  %64 = add nsw i32 %63, %38\l  %65 = load i32, i32 addrspace(3)* %29, align 4, !tbaa !5\l  %66 = load i32, i32 addrspace(3)* %30, align 4, !tbaa !5\l  %67 = mul nsw i32 %66, %65\l  %68 = add nsw i32 %67, %64\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %69 = add nuw nsw i32 %37, 1\l  %70 = icmp eq i32 %69, %21\l  br i1 %70, label %31, label %36, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4958cb0:s0 -> Node0x4958250;
	Node0x4958cb0:s1 -> Node0x4958590;
	Node0x49580b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%71:\l71:                                               \l  %72 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %73 = getelementptr i8, i8 addrspace(4)* %72, i64 6\l  %74 = bitcast i8 addrspace(4)* %73 to i16 addrspace(4)*\l  %75 = load i16, i16 addrspace(4)* %74, align 2, !range !12, !invariant.load\l... !9\l  %76 = zext i16 %75 to i32\l  %77 = mul i32 %10, %76\l  %78 = add i32 %77, %12\l  %79 = mul i32 %78, %5\l  %80 = getelementptr i8, i8 addrspace(4)* %72, i64 4\l  %81 = bitcast i8 addrspace(4)* %80 to i16 addrspace(4)*\l  %82 = load i16, i16 addrspace(4)* %81, align 4, !range !12, !invariant.load\l... !9\l  %83 = zext i16 %82 to i32\l  %84 = mul i32 %14, %83\l  %85 = add i32 %84, %16\l  %86 = add i32 %85, %79\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %87\l  store i32 %32, i32 addrspace(1)* %88, align 4, !tbaa !5\l  br label %89\l}"];
	Node0x49580b0 -> Node0x4959180;
	Node0x4959180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%89:\l89:                                               \l  ret void\l}"];
}
