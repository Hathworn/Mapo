digraph "CFG for '_Z16estimationKernelPfmS_mff' function" {
	label="CFG for '_Z16estimationKernelPfmS_mff' function";

	Node0x5206380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = udiv i32 %16, %13\l  %20 = mul i32 %19, %13\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %13\l  %25 = sext i32 %18 to i64\l  %26 = icmp ult i64 %25, %3\l  br i1 %26, label %27, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5206380:s0 -> Node0x5208950;
	Node0x5206380:s1 -> Node0x52089e0;
	Node0x5208950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%27:\l27:                                               \l  %28 = icmp eq i64 %1, 0\l  %29 = uitofp i64 %1 to float\l  %30 = fmul contract float %29, %5\l  %31 = fpext float %30 to double\l  %32 = tail call double @llvm.amdgcn.rsq.f64(double 0x401921FB54442D18)\l  %33 = fmul double %32, 0x401921FB54442D18\l  %34 = fmul double %32, 5.000000e-01\l  %35 = fneg double %34\l  %36 = tail call double @llvm.fma.f64(double %35, double %33, double\l... 5.000000e-01)\l  %37 = tail call double @llvm.fma.f64(double %34, double %36, double %34)\l  %38 = tail call double @llvm.fma.f64(double %33, double %36, double %33)\l  %39 = fneg double %38\l  %40 = tail call double @llvm.fma.f64(double %39, double %38, double\l... 0x401921FB54442D18)\l  %41 = tail call double @llvm.fma.f64(double %40, double %37, double %38)\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double %41, double\l... 0x401921FB54442D18)\l  %44 = tail call double @llvm.fma.f64(double %43, double %37, double %41)\l  %45 = fmul contract double %44, %31\l  br label %47\l}"];
	Node0x5208950 -> Node0x520a760;
	Node0x52089e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%46:\l46:                                               \l  ret void\l}"];
	Node0x520a760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%47:\l47:                                               \l  %48 = phi i64 [ %25, %27 ], [ %59, %53 ]\l  %49 = phi i32 [ %18, %27 ], [ %58, %53 ]\l  %50 = sitofp i32 %49 to float\l  %51 = fmul contract float %50, %4\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  store float 0.000000e+00, float addrspace(1)* %52, align 4, !tbaa !16\l  br i1 %28, label %53, label %61\l|{<s0>T|<s1>F}}"];
	Node0x520a760:s0 -> Node0x520a8b0;
	Node0x520a760:s1 -> Node0x520aeb0;
	Node0x520a8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%53:\l53:                                               \l  %54 = phi float [ 0.000000e+00, %47 ], [ %85, %61 ]\l  %55 = fpext float %54 to double\l  %56 = fdiv contract double %55, %45\l  %57 = fptrunc double %56 to float\l  store float %57, float addrspace(1)* %52, align 4, !tbaa !16\l  %58 = add nsw i32 %49, %24\l  %59 = sext i32 %58 to i64\l  %60 = icmp ult i64 %59, %3\l  br i1 %60, label %47, label %46, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x520a8b0:s0 -> Node0x520a760;
	Node0x520a8b0:s1 -> Node0x52089e0;
	Node0x520aeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  %62 = phi float [ %85, %61 ], [ 0.000000e+00, %47 ]\l  %63 = phi i64 [ %87, %61 ], [ 0, %47 ]\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !16\l  %66 = fsub contract float %51, %65\l  %67 = fmul contract float %66, -5.000000e-01\l  %68 = fmul contract float %66, %67\l  %69 = fdiv contract float %68, %5\l  %70 = fdiv contract float %69, %5\l  %71 = fmul float %70, 0x3FF7154760000000\l  %72 = tail call float @llvm.rint.f32(float %71)\l  %73 = fcmp ogt float %70, 0x40562E4300000000\l  %74 = fcmp olt float %70, 0xC059D1DA00000000\l  %75 = fneg float %71\l  %76 = tail call float @llvm.fma.f32(float %70, float 0x3FF7154760000000,\l... float %75)\l  %77 = tail call float @llvm.fma.f32(float %70, float 0x3E54AE0BE0000000,\l... float %76)\l  %78 = fsub float %71, %72\l  %79 = fadd float %77, %78\l  %80 = tail call float @llvm.exp2.f32(float %79)\l  %81 = fptosi float %72 to i32\l  %82 = tail call float @llvm.amdgcn.ldexp.f32(float %80, i32 %81)\l  %83 = select i1 %74, float 0.000000e+00, float %82\l  %84 = select i1 %73, float 0x7FF0000000000000, float %83\l  %85 = fadd contract float %62, %84\l  store float %85, float addrspace(1)* %52, align 4, !tbaa !16\l  %86 = add nuw nsw i64 %63, 1\l  %87 = and i64 %86, 4294967295\l  %88 = icmp ult i64 %87, %1\l  br i1 %88, label %61, label %53, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x520aeb0:s0 -> Node0x520aeb0;
	Node0x520aeb0:s1 -> Node0x520a8b0;
}
