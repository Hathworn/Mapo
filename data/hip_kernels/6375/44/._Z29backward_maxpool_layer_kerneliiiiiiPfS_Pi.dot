digraph "CFG for '_Z29backward_maxpool_layer_kerneliiiiiiPfS_Pi' function" {
	label="CFG for '_Z29backward_maxpool_layer_kerneliiiiiiPfS_Pi' function";

	Node0x46c1360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%9:\l  %10 = add nsw i32 %1, -1\l  %11 = sdiv i32 %10, %4\l  %12 = add nsw i32 %11, 1\l  %13 = add nsw i32 %2, -1\l  %14 = sdiv i32 %13, %4\l  %15 = add nsw i32 %14, 1\l  %16 = add nsw i32 %5, -1\l  %17 = sdiv i32 %16, %4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %20, i64 12\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !4\l  %24 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %19\l  %34 = add i32 %33, %18\l  %35 = mul i32 %34, %27\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %37 = add i32 %35, %36\l  %38 = icmp slt i32 %37, %0\l  br i1 %38, label %39, label %102\l|{<s0>T|<s1>F}}"];
	Node0x46c1360:s0 -> Node0x46c4f30;
	Node0x46c1360:s1 -> Node0x46c4fc0;
	Node0x46c4f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%39:\l39:                                               \l  %40 = freeze i32 %37\l  %41 = freeze i32 %2\l  %42 = sdiv i32 %40, %41\l  %43 = xor i32 %5, -1\l  %44 = sdiv i32 %43, 2\l  %45 = add nsw i32 %44, 1\l  %46 = sub i32 0, %17\l  %47 = icmp slt i32 %17, 0\l  br i1 %47, label %96, label %48\l|{<s0>T|<s1>F}}"];
	Node0x46c4f30:s0 -> Node0x46c5570;
	Node0x46c4f30:s1 -> Node0x46c55c0;
	Node0x46c55c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%48:\l48:                                               \l  %49 = freeze i32 %42\l  %50 = freeze i32 %1\l  %51 = sdiv i32 %49, %50\l  %52 = freeze i32 %51\l  %53 = mul i32 %51, %50\l  %54 = sub i32 %49, %53\l  %55 = mul i32 %42, %41\l  %56 = sub i32 %40, %55\l  %57 = sub nsw i32 %56, %45\l  %58 = sub nsw i32 %54, %45\l  %59 = mul nsw i32 %52, %12\l  %60 = sdiv i32 %57, %4\l  %61 = sdiv i32 %58, %4\l  br label %62\l}"];
	Node0x46c55c0 -> Node0x46c5df0;
	Node0x46c5df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%62:\l62:                                               \l  %63 = phi float [ 0.000000e+00, %48 ], [ %90, %93 ]\l  %64 = phi i32 [ %46, %48 ], [ %94, %93 ]\l  %65 = add nsw i32 %61, %64\l  %66 = add nsw i32 %65, %59\l  %67 = mul nsw i32 %66, %15\l  %68 = icmp sgt i32 %65, -1\l  %69 = icmp sle i32 %65, %11\l  br label %70\l}"];
	Node0x46c5df0 -> Node0x46c49f0;
	Node0x46c49f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi float [ %63, %62 ], [ %90, %88 ]\l  %72 = phi i32 [ %46, %62 ], [ %91, %88 ]\l  %73 = add nsw i32 %60, %72\l  %74 = add nsw i32 %67, %73\l  %75 = icmp sgt i32 %73, -1\l  br i1 %75, label %76, label %88\l|{<s0>T|<s1>F}}"];
	Node0x46c49f0:s0 -> Node0x46c7540;
	Node0x46c49f0:s1 -> Node0x46c7170;
	Node0x46c7540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%76:\l76:                                               \l  %77 = icmp sle i32 %73, %14\l  %78 = select i1 %77, i1 %68, i1 false\l  %79 = select i1 %78, i1 %69, i1 false\l  br i1 %79, label %80, label %88\l|{<s0>T|<s1>F}}"];
	Node0x46c7540:s0 -> Node0x46c78a0;
	Node0x46c7540:s1 -> Node0x46c7170;
	Node0x46c78a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%80:\l80:                                               \l  %81 = sext i32 %74 to i64\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %84 = icmp eq i32 %83, %37\l  br i1 %84, label %85, label %88\l|{<s0>T|<s1>F}}"];
	Node0x46c78a0:s0 -> Node0x46c8370;
	Node0x46c78a0:s1 -> Node0x46c7170;
	Node0x46c8370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%85:\l85:                                               \l  %86 = getelementptr inbounds float, float addrspace(1)* %6, i64 %81\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !20,\l... !amdgpu.noclobber !14\l  br label %88\l}"];
	Node0x46c8370 -> Node0x46c7170;
	Node0x46c7170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = phi contract float [ %87, %85 ], [ 0.000000e+00, %80 ], [\l... 0.000000e+00, %76 ], [ 0.000000e+00, %70 ]\l  %90 = fadd contract float %71, %89\l  %91 = add i32 %72, 1\l  %92 = icmp eq i32 %72, %17\l  br i1 %92, label %93, label %70, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x46c7170:s0 -> Node0x46c6930;
	Node0x46c7170:s1 -> Node0x46c49f0;
	Node0x46c6930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%93:\l93:                                               \l  %94 = add i32 %64, 1\l  %95 = icmp eq i32 %64, %17\l  br i1 %95, label %96, label %62, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x46c6930:s0 -> Node0x46c5570;
	Node0x46c6930:s1 -> Node0x46c5df0;
	Node0x46c5570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%96:\l96:                                               \l  %97 = phi float [ 0.000000e+00, %39 ], [ %90, %93 ]\l  %98 = sext i32 %37 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %7, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !20,\l... !amdgpu.noclobber !14\l  %101 = fadd contract float %97, %100\l  store float %101, float addrspace(1)* %99, align 4, !tbaa !20\l  br label %102\l}"];
	Node0x46c5570 -> Node0x46c4fc0;
	Node0x46c4fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%102:\l102:                                              \l  ret void\l}"];
}
