digraph "CFG for '_Z15cuInsertionSortPfiPiiiii' function" {
	label="CFG for '_Z15cuInsertionSortPfiPiiiii' function";

	Node0x5208d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp ult i32 %16, %4\l  br i1 %17, label %18, label %147\l|{<s0>T|<s1>F}}"];
	Node0x5208d40:s0 -> Node0x520ac40;
	Node0x5208d40:s1 -> Node0x520acd0;
	Node0x520ac40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %19\l  %22 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store i32 1, i32 addrspace(1)* %21, align 4, !tbaa !11\l  %23 = icmp sgt i32 %6, 1\l  br i1 %23, label %24, label %84\l|{<s0>T|<s1>F}}"];
	Node0x520ac40:s0 -> Node0x520ba50;
	Node0x520ac40:s1 -> Node0x520bae0;
	Node0x520ba50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%24:\l24:                                               \l  %25 = phi i32 [ %81, %80 ], [ 1, %18 ]\l  %26 = phi float [ %82, %80 ], [ %22, %18 ]\l  %27 = mul nsw i32 %25, %1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %20, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  %31 = fcmp contract olt float %30, %26\l  br i1 %31, label %32, label %75\l|{<s0>T|<s1>F}}"];
	Node0x520ba50:s0 -> Node0x520c730;
	Node0x520ba50:s1 -> Node0x520c7c0;
	Node0x520c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%32:\l32:                                               \l  %33 = add nsw i32 %25, -1\l  %34 = icmp ugt i32 %25, 1\l  br i1 %34, label %35, label %45\l|{<s0>T|<s1>F}}"];
	Node0x520c730:s0 -> Node0x520abf0;
	Node0x520c730:s1 -> Node0x520cba0;
	Node0x520abf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%35:\l35:                                               \l  %36 = phi i32 [ %43, %42 ], [ 0, %32 ]\l  %37 = mul nsw i32 %36, %1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %20, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %41 = fcmp contract ogt float %40, %30\l  br i1 %41, label %45, label %42\l|{<s0>T|<s1>F}}"];
	Node0x520abf0:s0 -> Node0x520cba0;
	Node0x520abf0:s1 -> Node0x520cd10;
	Node0x520cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%42:\l42:                                               \l  %43 = add nuw nsw i32 %36, 1\l  %44 = icmp ult i32 %43, %33\l  br i1 %44, label %35, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x520cd10:s0 -> Node0x520abf0;
	Node0x520cd10:s1 -> Node0x520cba0;
	Node0x520cba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%45:\l45:                                               \l  %46 = phi i32 [ %33, %32 ], [ %33, %42 ], [ %36, %35 ]\l  %47 = icmp ugt i32 %25, %46\l  br i1 %47, label %48, label %66\l|{<s0>T|<s1>F}}"];
	Node0x520cba0:s0 -> Node0x520d5f0;
	Node0x520cba0:s1 -> Node0x520d640;
	Node0x520d5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i32 [ %50, %48 ], [ %25, %45 ]\l  %50 = add nsw i32 %49, -1\l  %51 = mul nsw i32 %50, %1\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %20, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7\l  %55 = mul nsw i32 %49, %1\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %20, i64 %56\l  store float %54, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = mul nsw i32 %50, %3\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !11\l  %62 = mul nsw i32 %49, %3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %63\l  store i32 %61, i32 addrspace(1)* %64, align 4, !tbaa !11\l  %65 = icmp sgt i32 %50, %46\l  br i1 %65, label %48, label %66, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x520d5f0:s0 -> Node0x520d5f0;
	Node0x520d5f0:s1 -> Node0x520d640;
	Node0x520d640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%66:\l66:                                               \l  %67 = mul nsw i32 %46, %1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %20, i64 %68\l  store float %30, float addrspace(1)* %69, align 4, !tbaa !7\l  %70 = add nuw nsw i32 %25, 1\l  %71 = mul nsw i32 %46, %3\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %72\l  store i32 %70, i32 addrspace(1)* %73, align 4, !tbaa !11\l  %74 = load float, float addrspace(1)* %29, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x520d640 -> Node0x520bc20;
	Node0x520c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%75:\l75:                                               \l  %76 = add nuw nsw i32 %25, 1\l  %77 = mul nsw i32 %25, %3\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %78\l  store i32 %76, i32 addrspace(1)* %79, align 4, !tbaa !11\l  br label %80\l}"];
	Node0x520c7c0 -> Node0x520bc20;
	Node0x520bc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%80:\l80:                                               \l  %81 = phi i32 [ %76, %75 ], [ %70, %66 ]\l  %82 = phi float [ %30, %75 ], [ %74, %66 ]\l  %83 = icmp eq i32 %81, %6\l  br i1 %83, label %84, label %24, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x520bc20:s0 -> Node0x520bae0;
	Node0x520bc20:s1 -> Node0x520ba50;
	Node0x520bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%84:\l84:                                               \l  %85 = phi float [ %22, %18 ], [ %82, %80 ]\l  %86 = add i32 %6, -1\l  %87 = icmp slt i32 %6, %5\l  br i1 %87, label %88, label %147\l|{<s0>T|<s1>F}}"];
	Node0x520bae0:s0 -> Node0x520f980;
	Node0x520bae0:s1 -> Node0x520acd0;
	Node0x520f980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%88:\l88:                                               \l  %89 = mul nsw i32 %86, %1\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %20, i64 %90\l  br label %92\l}"];
	Node0x520f980 -> Node0x520fc20;
	Node0x520fc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%92:\l92:                                               \l  %93 = phi i32 [ %6, %88 ], [ %144, %143 ]\l  %94 = phi float [ %85, %88 ], [ %145, %143 ]\l  %95 = mul nsw i32 %93, %1\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %20, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = fcmp contract olt float %98, %94\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x520fc20:s0 -> Node0x5210130;
	Node0x520fc20:s1 -> Node0x52101c0;
	Node0x52101c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%100:\l100:                                              \l  %101 = add nsw i32 %93, 1\l  br label %143\l}"];
	Node0x52101c0 -> Node0x520fce0;
	Node0x5210130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%102:\l102:                                              \l  br i1 %23, label %103, label %113\l|{<s0>T|<s1>F}}"];
	Node0x5210130:s0 -> Node0x5210400;
	Node0x5210130:s1 -> Node0x5210450;
	Node0x5210400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%103:\l103:                                              \l  %104 = phi i32 [ %111, %110 ], [ 0, %102 ]\l  %105 = mul nsw i32 %104, %1\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %20, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = fcmp contract ogt float %108, %98\l  br i1 %109, label %113, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5210400:s0 -> Node0x5210450;
	Node0x5210400:s1 -> Node0x5210550;
	Node0x5210550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%110:\l110:                                              \l  %111 = add nuw nsw i32 %104, 1\l  %112 = icmp eq i32 %111, %86\l  br i1 %112, label %113, label %103, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5210550:s0 -> Node0x5210450;
	Node0x5210550:s1 -> Node0x5210400;
	Node0x5210450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%113:\l113:                                              \l  %114 = phi i32 [ %86, %102 ], [ %86, %110 ], [ %104, %103 ]\l  %115 = icmp sgt i32 %86, %114\l  br i1 %115, label %116, label %134\l|{<s0>T|<s1>F}}"];
	Node0x5210450:s0 -> Node0x5210dd0;
	Node0x5210450:s1 -> Node0x5210e20;
	Node0x5210dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%116:\l116:                                              \l  %117 = phi i32 [ %118, %116 ], [ %86, %113 ]\l  %118 = add nsw i32 %117, -1\l  %119 = mul nsw i32 %118, %1\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %20, i64 %120\l  %122 = load float, float addrspace(1)* %121, align 4, !tbaa !7\l  %123 = mul nsw i32 %117, %1\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %20, i64 %124\l  store float %122, float addrspace(1)* %125, align 4, !tbaa !7\l  %126 = mul nsw i32 %118, %3\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %127\l  %129 = load i32, i32 addrspace(1)* %128, align 4, !tbaa !11\l  %130 = mul nsw i32 %117, %3\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %131\l  store i32 %129, i32 addrspace(1)* %132, align 4, !tbaa !11\l  %133 = icmp sgt i32 %118, %114\l  br i1 %133, label %116, label %134, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5210dd0:s0 -> Node0x5210dd0;
	Node0x5210dd0:s1 -> Node0x5210e20;
	Node0x5210e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%134:\l134:                                              \l  %135 = mul nsw i32 %114, %1\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %20, i64 %136\l  store float %98, float addrspace(1)* %137, align 4, !tbaa !7\l  %138 = add nsw i32 %93, 1\l  %139 = mul nsw i32 %114, %3\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %21, i64 %140\l  store i32 %138, i32 addrspace(1)* %141, align 4, !tbaa !11\l  %142 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %143\l}"];
	Node0x5210e20 -> Node0x520fce0;
	Node0x520fce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%143:\l143:                                              \l  %144 = phi i32 [ %101, %100 ], [ %138, %134 ]\l  %145 = phi float [ %94, %100 ], [ %142, %134 ]\l  %146 = icmp slt i32 %144, %5\l  br i1 %146, label %92, label %147, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x520fce0:s0 -> Node0x520fc20;
	Node0x520fce0:s1 -> Node0x520acd0;
	Node0x520acd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%147:\l147:                                              \l  ret void\l}"];
}
