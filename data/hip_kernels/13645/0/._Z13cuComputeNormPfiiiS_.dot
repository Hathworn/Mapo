digraph "CFG for '_Z13cuComputeNormPfiiiS_' function" {
	label="CFG for '_Z13cuComputeNormPfiiiS_' function";

	Node0x52281a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %14, %1\l  br i1 %15, label %16, label %116\l|{<s0>T|<s1>F}}"];
	Node0x52281a0:s0 -> Node0x522a060;
	Node0x52281a0:s1 -> Node0x522a0f0;
	Node0x522a060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = icmp sgt i32 %3, 0\l  br i1 %17, label %18, label %112\l|{<s0>T|<s1>F}}"];
	Node0x522a060:s0 -> Node0x522a340;
	Node0x522a060:s1 -> Node0x522a390;
	Node0x522a340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = and i32 %3, 7\l  %20 = icmp ult i32 %3, 8\l  br i1 %20, label %93, label %21\l|{<s0>T|<s1>F}}"];
	Node0x522a340:s0 -> Node0x522a650;
	Node0x522a340:s1 -> Node0x522a6a0;
	Node0x522a6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %3, -8\l  br label %23\l}"];
	Node0x522a6a0 -> Node0x522a8a0;
	Node0x522a8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = phi i32 [ 0, %21 ], [ %90, %23 ]\l  %25 = phi float [ 0.000000e+00, %21 ], [ %89, %23 ]\l  %26 = phi i32 [ 0, %21 ], [ %91, %23 ]\l  %27 = mul nsw i32 %24, %2\l  %28 = add i32 %27, %14\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = fmul contract float %31, %31\l  %33 = fadd contract float %25, %32\l  %34 = or i32 %24, 1\l  %35 = mul nsw i32 %34, %2\l  %36 = add i32 %35, %14\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fmul contract float %39, %39\l  %41 = fadd contract float %33, %40\l  %42 = or i32 %24, 2\l  %43 = mul nsw i32 %42, %2\l  %44 = add i32 %43, %14\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fmul contract float %47, %47\l  %49 = fadd contract float %41, %48\l  %50 = or i32 %24, 3\l  %51 = mul nsw i32 %50, %2\l  %52 = add i32 %51, %14\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %55, %55\l  %57 = fadd contract float %49, %56\l  %58 = or i32 %24, 4\l  %59 = mul nsw i32 %58, %2\l  %60 = add i32 %59, %14\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fmul contract float %63, %63\l  %65 = fadd contract float %57, %64\l  %66 = or i32 %24, 5\l  %67 = mul nsw i32 %66, %2\l  %68 = add i32 %67, %14\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %72 = fmul contract float %71, %71\l  %73 = fadd contract float %65, %72\l  %74 = or i32 %24, 6\l  %75 = mul nsw i32 %74, %2\l  %76 = add i32 %75, %14\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = fmul contract float %79, %79\l  %81 = fadd contract float %73, %80\l  %82 = or i32 %24, 7\l  %83 = mul nsw i32 %82, %2\l  %84 = add i32 %83, %14\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fmul contract float %87, %87\l  %89 = fadd contract float %81, %88\l  %90 = add nuw nsw i32 %24, 8\l  %91 = add i32 %26, 8\l  %92 = icmp eq i32 %91, %22\l  br i1 %92, label %93, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x522a8a0:s0 -> Node0x522a650;
	Node0x522a8a0:s1 -> Node0x522a8a0;
	Node0x522a650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%93:\l93:                                               \l  %94 = phi float [ undef, %18 ], [ %89, %23 ]\l  %95 = phi i32 [ 0, %18 ], [ %90, %23 ]\l  %96 = phi float [ 0.000000e+00, %18 ], [ %89, %23 ]\l  %97 = icmp eq i32 %19, 0\l  br i1 %97, label %112, label %98\l|{<s0>T|<s1>F}}"];
	Node0x522a650:s0 -> Node0x522a390;
	Node0x522a650:s1 -> Node0x522f650;
	Node0x522f650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  %99 = phi i32 [ %109, %98 ], [ %95, %93 ]\l  %100 = phi float [ %108, %98 ], [ %96, %93 ]\l  %101 = phi i32 [ %110, %98 ], [ 0, %93 ]\l  %102 = mul nsw i32 %99, %2\l  %103 = add i32 %102, %14\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = fmul contract float %106, %106\l  %108 = fadd contract float %100, %107\l  %109 = add nuw nsw i32 %99, 1\l  %110 = add i32 %101, 1\l  %111 = icmp eq i32 %110, %19\l  br i1 %111, label %112, label %98, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x522f650:s0 -> Node0x522a390;
	Node0x522f650:s1 -> Node0x522f650;
	Node0x522a390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%112:\l112:                                              \l  %113 = phi float [ 0.000000e+00, %16 ], [ %94, %93 ], [ %108, %98 ]\l  %114 = zext i32 %14 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %4, i64 %114\l  store float %113, float addrspace(1)* %115, align 4, !tbaa !7\l  br label %116\l}"];
	Node0x522a390 -> Node0x522a0f0;
	Node0x522a0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%116:\l116:                                              \l  ret void\l}"];
}
