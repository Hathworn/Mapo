digraph "CFG for '_Z16computeMI_KernelPfPhiiPii' function" {
	label="CFG for '_Z16computeMI_KernelPfPhiiPii' function";

	Node0x6008910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%6:\l  %7 = alloca [2 x [2 x i32]], align 16, addrspace(5)\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %8, %5\l  %17 = add i32 %16, %15\l  %18 = add nsw i32 %2, -1\l  %19 = mul nsw i32 %18, %2\l  %20 = sdiv i32 %19, 2\l  %21 = icmp sgt i32 %17, %20\l  br i1 %21, label %252, label %22\l|{<s0>T|<s1>F}}"];
	Node0x6008910:s0 -> Node0x600b160;
	Node0x6008910:s1 -> Node0x600b1f0;
	Node0x600b1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%22:\l22:                                               \l  %23 = bitcast [2 x [2 x i32]] addrspace(5)* %7 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 16, i8 addrspace(5)* %23) #5\l  call void @llvm.memset.p5i8.i64(i8 addrspace(5)* noundef align 16\l... dereferenceable(16) %23, i8 0, i64 16, i1 false)\l  %24 = sext i32 %17 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = icmp slt i32 %2, 3\l  %27 = icmp slt i32 %17, %18\l  %28 = select i1 %26, i1 true, i1 %27\l  br i1 %28, label %43, label %29\l|{<s0>T|<s1>F}}"];
	Node0x600b1f0:s0 -> Node0x600bb10;
	Node0x600b1f0:s1 -> Node0x600bba0;
	Node0x600bba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %37, %29 ], [ %18, %22 ]\l  %31 = phi i32 [ %35, %29 ], [ 0, %22 ]\l  %32 = phi i32 [ %34, %29 ], [ 1, %22 ]\l  %33 = phi i32 [ %36, %29 ], [ %17, %22 ]\l  %34 = add nuw nsw i32 %32, 1\l  %35 = add nuw nsw i32 %31, 1\l  %36 = sub nsw i32 %33, %30\l  %37 = add nsw i32 %30, -1\l  %38 = icmp ult i32 %30, 3\l  %39 = icmp slt i32 %36, %37\l  %40 = select i1 %38, i1 true, i1 %39\l  br i1 %40, label %41, label %29, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x600bba0:s0 -> Node0x600aea0;
	Node0x600bba0:s1 -> Node0x600bba0;
	Node0x600aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%41:\l41:                                               \l  %42 = zext i32 %35 to i64\l  br label %43\l}"];
	Node0x600aea0 -> Node0x600bb10;
	Node0x600bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%43:\l43:                                               \l  %44 = phi i32 [ %17, %22 ], [ %36, %41 ]\l  %45 = phi i32 [ 1, %22 ], [ %34, %41 ]\l  %46 = phi i64 [ 0, %22 ], [ %42, %41 ]\l  %47 = add nsw i32 %45, %44\l  store float 0.000000e+00, float addrspace(1)* %25, align 4, !tbaa !9\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !13, !amdgpu.noclobber\l... !6\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %46\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !13, !amdgpu.noclobber\l... !6\l  %53 = icmp sgt i32 %3, 0\l  br i1 %53, label %54, label %84\l|{<s0>T|<s1>F}}"];
	Node0x600bb10:s0 -> Node0x600e840;
	Node0x600bb10:s1 -> Node0x600e8d0;
	Node0x600e840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %46\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %48\l  %57 = sext i32 %2 to i64\l  %58 = and i32 %3, 7\l  %59 = icmp ult i32 %3, 8\l  br i1 %59, label %62, label %60\l|{<s0>T|<s1>F}}"];
	Node0x600e840:s0 -> Node0x600ece0;
	Node0x600e840:s1 -> Node0x600ed30;
	Node0x600ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%60:\l60:                                               \l  %61 = and i32 %3, -8\l  br label %90\l}"];
	Node0x600ed30 -> Node0x600ef30;
	Node0x600ece0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%62:\l62:                                               \l  %63 = phi i8 addrspace(1)* [ %55, %54 ], [ %165, %90 ]\l  %64 = phi i8 addrspace(1)* [ %56, %54 ], [ %164, %90 ]\l  %65 = icmp eq i32 %58, 0\l  br i1 %65, label %81, label %66\l|{<s0>T|<s1>F}}"];
	Node0x600ece0:s0 -> Node0x600c0c0;
	Node0x600ece0:s1 -> Node0x600c150;
	Node0x600c150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = phi i8 addrspace(1)* [ %78, %66 ], [ %63, %62 ]\l  %68 = phi i8 addrspace(1)* [ %77, %66 ], [ %64, %62 ]\l  %69 = phi i32 [ %79, %66 ], [ 0, %62 ]\l  %70 = load i8, i8 addrspace(1)* %68, align 1, !tbaa !15\l  %71 = zext i8 %70 to i32\l  %72 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !15\l  %73 = zext i8 %72 to i32\l  %74 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %71, i32 %73\l  %75 = load i32, i32 addrspace(5)* %74, align 4, !tbaa !13\l  %76 = add nsw i32 %75, 1\l  store i32 %76, i32 addrspace(5)* %74, align 4, !tbaa !13\l  %77 = getelementptr inbounds i8, i8 addrspace(1)* %68, i64 %57\l  %78 = getelementptr inbounds i8, i8 addrspace(1)* %67, i64 %57\l  %79 = add i32 %69, 1\l  %80 = icmp eq i32 %79, %58\l  br i1 %80, label %81, label %66, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x600c150:s0 -> Node0x600c0c0;
	Node0x600c150:s1 -> Node0x600c150;
	Node0x600c0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%81:\l81:                                               \l  %82 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 0, i32 0\l  %83 = load i32, i32 addrspace(5)* %82, align 16, !tbaa !13\l  br label %84\l}"];
	Node0x600c0c0 -> Node0x600e8d0;
	Node0x600e8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%84:\l84:                                               \l  %85 = phi i32 [ %83, %81 ], [ 0, %43 ]\l  %86 = sitofp i32 %3 to float\l  %87 = sub nsw i32 %3, %50\l  %88 = sub nsw i32 %3, %52\l  %89 = icmp eq i32 %85, 0\l  br i1 %89, label %185, label %168\l|{<s0>T|<s1>F}}"];
	Node0x600e8d0:s0 -> Node0x6010d40;
	Node0x600e8d0:s1 -> Node0x6010d90;
	Node0x600ef30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%90:\l90:                                               \l  %91 = phi i8 addrspace(1)* [ %55, %60 ], [ %165, %90 ]\l  %92 = phi i8 addrspace(1)* [ %56, %60 ], [ %164, %90 ]\l  %93 = phi i32 [ 0, %60 ], [ %166, %90 ]\l  %94 = load i8, i8 addrspace(1)* %92, align 1, !tbaa !15\l  %95 = zext i8 %94 to i32\l  %96 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !15\l  %97 = zext i8 %96 to i32\l  %98 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %95, i32 %97\l  %99 = load i32, i32 addrspace(5)* %98, align 4, !tbaa !13\l  %100 = add nsw i32 %99, 1\l  store i32 %100, i32 addrspace(5)* %98, align 4, !tbaa !13\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %92, i64 %57\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %91, i64 %57\l  %103 = load i8, i8 addrspace(1)* %101, align 1, !tbaa !15\l  %104 = zext i8 %103 to i32\l  %105 = load i8, i8 addrspace(1)* %102, align 1, !tbaa !15\l  %106 = zext i8 %105 to i32\l  %107 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %104, i32 %106\l  %108 = load i32, i32 addrspace(5)* %107, align 4, !tbaa !13\l  %109 = add nsw i32 %108, 1\l  store i32 %109, i32 addrspace(5)* %107, align 4, !tbaa !13\l  %110 = getelementptr inbounds i8, i8 addrspace(1)* %101, i64 %57\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %102, i64 %57\l  %112 = load i8, i8 addrspace(1)* %110, align 1, !tbaa !15\l  %113 = zext i8 %112 to i32\l  %114 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !15\l  %115 = zext i8 %114 to i32\l  %116 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %113, i32 %115\l  %117 = load i32, i32 addrspace(5)* %116, align 4, !tbaa !13\l  %118 = add nsw i32 %117, 1\l  store i32 %118, i32 addrspace(5)* %116, align 4, !tbaa !13\l  %119 = getelementptr inbounds i8, i8 addrspace(1)* %110, i64 %57\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %111, i64 %57\l  %121 = load i8, i8 addrspace(1)* %119, align 1, !tbaa !15\l  %122 = zext i8 %121 to i32\l  %123 = load i8, i8 addrspace(1)* %120, align 1, !tbaa !15\l  %124 = zext i8 %123 to i32\l  %125 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %122, i32 %124\l  %126 = load i32, i32 addrspace(5)* %125, align 4, !tbaa !13\l  %127 = add nsw i32 %126, 1\l  store i32 %127, i32 addrspace(5)* %125, align 4, !tbaa !13\l  %128 = getelementptr inbounds i8, i8 addrspace(1)* %119, i64 %57\l  %129 = getelementptr inbounds i8, i8 addrspace(1)* %120, i64 %57\l  %130 = load i8, i8 addrspace(1)* %128, align 1, !tbaa !15\l  %131 = zext i8 %130 to i32\l  %132 = load i8, i8 addrspace(1)* %129, align 1, !tbaa !15\l  %133 = zext i8 %132 to i32\l  %134 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %131, i32 %133\l  %135 = load i32, i32 addrspace(5)* %134, align 4, !tbaa !13\l  %136 = add nsw i32 %135, 1\l  store i32 %136, i32 addrspace(5)* %134, align 4, !tbaa !13\l  %137 = getelementptr inbounds i8, i8 addrspace(1)* %128, i64 %57\l  %138 = getelementptr inbounds i8, i8 addrspace(1)* %129, i64 %57\l  %139 = load i8, i8 addrspace(1)* %137, align 1, !tbaa !15\l  %140 = zext i8 %139 to i32\l  %141 = load i8, i8 addrspace(1)* %138, align 1, !tbaa !15\l  %142 = zext i8 %141 to i32\l  %143 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %140, i32 %142\l  %144 = load i32, i32 addrspace(5)* %143, align 4, !tbaa !13\l  %145 = add nsw i32 %144, 1\l  store i32 %145, i32 addrspace(5)* %143, align 4, !tbaa !13\l  %146 = getelementptr inbounds i8, i8 addrspace(1)* %137, i64 %57\l  %147 = getelementptr inbounds i8, i8 addrspace(1)* %138, i64 %57\l  %148 = load i8, i8 addrspace(1)* %146, align 1, !tbaa !15\l  %149 = zext i8 %148 to i32\l  %150 = load i8, i8 addrspace(1)* %147, align 1, !tbaa !15\l  %151 = zext i8 %150 to i32\l  %152 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %149, i32 %151\l  %153 = load i32, i32 addrspace(5)* %152, align 4, !tbaa !13\l  %154 = add nsw i32 %153, 1\l  store i32 %154, i32 addrspace(5)* %152, align 4, !tbaa !13\l  %155 = getelementptr inbounds i8, i8 addrspace(1)* %146, i64 %57\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %147, i64 %57\l  %157 = load i8, i8 addrspace(1)* %155, align 1, !tbaa !15\l  %158 = zext i8 %157 to i32\l  %159 = load i8, i8 addrspace(1)* %156, align 1, !tbaa !15\l  %160 = zext i8 %159 to i32\l  %161 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 %158, i32 %160\l  %162 = load i32, i32 addrspace(5)* %161, align 4, !tbaa !13\l  %163 = add nsw i32 %162, 1\l  store i32 %163, i32 addrspace(5)* %161, align 4, !tbaa !13\l  %164 = getelementptr inbounds i8, i8 addrspace(1)* %155, i64 %57\l  %165 = getelementptr inbounds i8, i8 addrspace(1)* %156, i64 %57\l  %166 = add i32 %93, 8\l  %167 = icmp eq i32 %166, %61\l  br i1 %167, label %62, label %90, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x600ef30:s0 -> Node0x600ece0;
	Node0x600ef30:s1 -> Node0x600ef30;
	Node0x6010d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%168:\l168:                                              \l  %169 = sitofp i32 %85 to float\l  %170 = fdiv contract float %169, %86\l  %171 = sitofp i32 %87 to float\l  %172 = fdiv contract float %171, %86\l  %173 = fdiv contract float %170, %172\l  %174 = sitofp i32 %88 to float\l  %175 = fdiv contract float %174, %86\l  %176 = fdiv contract float %173, %175\l  %177 = tail call i1 @llvm.amdgcn.class.f32(float %176, i32 144)\l  %178 = select i1 %177, float 0x41F0000000000000, float 1.000000e+00\l  %179 = fmul float %176, %178\l  %180 = tail call float @llvm.log2.f32(float %179)\l  %181 = select i1 %177, float 3.200000e+01, float 0.000000e+00\l  %182 = fsub float %180, %181\l  %183 = fmul contract float %170, %182\l  %184 = fadd contract float %183, 0.000000e+00\l  store float %184, float addrspace(1)* %25, align 4, !tbaa !9\l  br label %185\l}"];
	Node0x6010d90 -> Node0x6010d40;
	Node0x6010d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%185:\l185:                                              \l  %186 = phi float [ 0.000000e+00, %84 ], [ %184, %168 ]\l  %187 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 1, i32 0\l  %188 = load i32, i32 addrspace(5)* %187, align 8, !tbaa !13\l  %189 = icmp eq i32 %188, 0\l  br i1 %189, label %207, label %190\l|{<s0>T|<s1>F}}"];
	Node0x6010d40:s0 -> Node0x6015820;
	Node0x6010d40:s1 -> Node0x6015870;
	Node0x6015870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%190:\l190:                                              \l  %191 = sitofp i32 %188 to float\l  %192 = fdiv contract float %191, %86\l  %193 = sitofp i32 %50 to float\l  %194 = fdiv contract float %193, %86\l  %195 = fdiv contract float %192, %194\l  %196 = sitofp i32 %88 to float\l  %197 = fdiv contract float %196, %86\l  %198 = fdiv contract float %195, %197\l  %199 = tail call i1 @llvm.amdgcn.class.f32(float %198, i32 144)\l  %200 = select i1 %199, float 0x41F0000000000000, float 1.000000e+00\l  %201 = fmul float %198, %200\l  %202 = tail call float @llvm.log2.f32(float %201)\l  %203 = select i1 %199, float 3.200000e+01, float 0.000000e+00\l  %204 = fsub float %202, %203\l  %205 = fmul contract float %192, %204\l  %206 = fadd contract float %205, %186\l  store float %206, float addrspace(1)* %25, align 4, !tbaa !9\l  br label %207\l}"];
	Node0x6015870 -> Node0x6015820;
	Node0x6015820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%207:\l207:                                              \l  %208 = phi float [ %206, %190 ], [ %186, %185 ]\l  %209 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 0, i32 1\l  %210 = load i32, i32 addrspace(5)* %209, align 4, !tbaa !13\l  %211 = icmp eq i32 %210, 0\l  br i1 %211, label %229, label %212\l|{<s0>T|<s1>F}}"];
	Node0x6015820:s0 -> Node0x6009c20;
	Node0x6015820:s1 -> Node0x6009c70;
	Node0x6009c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%212:\l212:                                              \l  %213 = sitofp i32 %210 to float\l  %214 = fdiv contract float %213, %86\l  %215 = sitofp i32 %87 to float\l  %216 = fdiv contract float %215, %86\l  %217 = fdiv contract float %214, %216\l  %218 = sitofp i32 %52 to float\l  %219 = fdiv contract float %218, %86\l  %220 = fdiv contract float %217, %219\l  %221 = tail call i1 @llvm.amdgcn.class.f32(float %220, i32 144)\l  %222 = select i1 %221, float 0x41F0000000000000, float 1.000000e+00\l  %223 = fmul float %220, %222\l  %224 = tail call float @llvm.log2.f32(float %223)\l  %225 = select i1 %221, float 3.200000e+01, float 0.000000e+00\l  %226 = fsub float %224, %225\l  %227 = fmul contract float %214, %226\l  %228 = fadd contract float %227, %208\l  store float %228, float addrspace(1)* %25, align 4, !tbaa !9\l  br label %229\l}"];
	Node0x6009c70 -> Node0x6009c20;
	Node0x6009c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%229:\l229:                                              \l  %230 = phi float [ %228, %212 ], [ %208, %207 ]\l  %231 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(5)*\l... %7, i32 0, i32 1, i32 1\l  %232 = load i32, i32 addrspace(5)* %231, align 4, !tbaa !13\l  %233 = icmp eq i32 %232, 0\l  br i1 %233, label %251, label %234\l|{<s0>T|<s1>F}}"];
	Node0x6009c20:s0 -> Node0x6017fe0;
	Node0x6009c20:s1 -> Node0x6018030;
	Node0x6018030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%234:\l234:                                              \l  %235 = sitofp i32 %232 to float\l  %236 = fdiv contract float %235, %86\l  %237 = sitofp i32 %50 to float\l  %238 = fdiv contract float %237, %86\l  %239 = fdiv contract float %236, %238\l  %240 = sitofp i32 %52 to float\l  %241 = fdiv contract float %240, %86\l  %242 = fdiv contract float %239, %241\l  %243 = tail call i1 @llvm.amdgcn.class.f32(float %242, i32 144)\l  %244 = select i1 %243, float 0x41F0000000000000, float 1.000000e+00\l  %245 = fmul float %242, %244\l  %246 = tail call float @llvm.log2.f32(float %245)\l  %247 = select i1 %243, float 3.200000e+01, float 0.000000e+00\l  %248 = fsub float %246, %247\l  %249 = fmul contract float %236, %248\l  %250 = fadd contract float %249, %230\l  store float %250, float addrspace(1)* %25, align 4, !tbaa !9\l  br label %251\l}"];
	Node0x6018030 -> Node0x6017fe0;
	Node0x6017fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%251:\l251:                                              \l  call void @llvm.lifetime.end.p5i8(i64 16, i8 addrspace(5)* %23) #5\l  br label %252\l}"];
	Node0x6017fe0 -> Node0x600b160;
	Node0x600b160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%252:\l252:                                              \l  ret void\l}"];
}
