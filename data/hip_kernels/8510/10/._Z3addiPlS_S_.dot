digraph "CFG for '_Z3addiPlS_S_' function" {
	label="CFG for '_Z3addiPlS_S_' function";

	Node0x59101d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %492\l|{<s0>T|<s1>F}}"];
	Node0x59101d0:s0 -> Node0x59120f0;
	Node0x59101d0:s1 -> Node0x5912180;
	Node0x59120f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %16\l  %18 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %19 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %16\l  %20 = load i64, i64 addrspace(1)* %19, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = add nsw i64 %20, %18\l  %22 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %16\l  store i64 %21, i64 addrspace(1)* %22, align 8, !tbaa !7\l  %23 = load i64, i64 addrspace(1)* %17, align 8, !tbaa !7\l  %24 = load i64, i64 addrspace(1)* %19, align 8, !tbaa !7\l  %25 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 24\l  %27 = bitcast i8 addrspace(4)* %26 to i64 addrspace(4)*\l  %28 = load i64, i64 addrspace(4)* %27, align 8, !tbaa !11\l  %29 = inttoptr i64 %28 to i8 addrspace(1)*\l  %30 = addrspacecast i8 addrspace(1)* %29 to i8*\l  %31 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %32 = extractelement \<2 x i64\> %31, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([34 x i8], [34 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %33, label %37\l|{<s0>T|<s1>F}}"];
	Node0x59120f0:s0 -> Node0x59144a0;
	Node0x59120f0:s1 -> Node0x5914f90;
	Node0x59144a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%33:\l33:                                               \l  %34 = and i64 %32, -225\l  %35 = or i64 %34, 32\l  %36 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef %35, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %478\l}"];
	Node0x59144a0 -> Node0x5915250;
	Node0x5914f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%37:\l37:                                               \l  %38 = and i64 %32, 2\l  %39 = and i64 %32, -3\l  %40 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %39, i64 0\l  br label %41\l}"];
	Node0x5914f90 -> Node0x5915df0;
	Node0x5915df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%41:\l41:                                               \l  %42 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([34 x i8], [34 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([34 x i8], [34 x i8] addrspace(4)*\l... @.str, i64 0, i64 33) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([34 x i8]* addrspacecast ([34 x i8] addrspace(4)* @.str to [34 x i8]*) to\l... i64)), i64 1))), %37 ], [ %475, %467 ]\l  %43 = phi i8 addrspace(4)* [ getelementptr inbounds ([34 x i8], [34 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %37 ], [ %476, %467 ]\l  %44 = phi \<2 x i64\> [ %40, %37 ], [ %474, %467 ]\l  %45 = icmp ugt i64 %42, 56\l  %46 = extractelement \<2 x i64\> %44, i64 0\l  %47 = or i64 %46, %38\l  %48 = insertelement \<2 x i64\> poison, i64 %47, i64 0\l  %49 = select i1 %45, \<2 x i64\> %44, \<2 x i64\> %48\l  %50 = tail call i64 @llvm.umin.i64(i64 %42, i64 56)\l  %51 = trunc i64 %50 to i32\l  %52 = extractelement \<2 x i64\> %49, i64 0\l  %53 = icmp ugt i32 %51, 7\l  br i1 %53, label %56, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5915df0:s0 -> Node0x5916d30;
	Node0x5915df0:s1 -> Node0x5916dc0;
	Node0x5916dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%54:\l54:                                               \l  %55 = icmp eq i32 %51, 0\l  br i1 %55, label %109, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5916dc0:s0 -> Node0x5916fc0;
	Node0x5916dc0:s1 -> Node0x5917010;
	Node0x5916d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%56:\l56:                                               \l  %57 = load i8, i8 addrspace(4)* %43, align 1, !tbaa !15\l  %58 = zext i8 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 1\l  %60 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !15\l  %61 = zext i8 %60 to i64\l  %62 = shl nuw nsw i64 %61, 8\l  %63 = or i64 %62, %58\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 2\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !15\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw nsw i64 %66, 16\l  %68 = or i64 %63, %67\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 3\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !15\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 24\l  %73 = or i64 %68, %72\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 4\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !15\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw nsw i64 %76, 32\l  %78 = or i64 %73, %77\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 5\l  %80 = load i8, i8 addrspace(4)* %79, align 1, !tbaa !15\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 40\l  %83 = or i64 %78, %82\l  %84 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 6\l  %85 = load i8, i8 addrspace(4)* %84, align 1, !tbaa !15\l  %86 = zext i8 %85 to i64\l  %87 = shl nuw nsw i64 %86, 48\l  %88 = or i64 %83, %87\l  %89 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 7\l  %90 = load i8, i8 addrspace(4)* %89, align 1, !tbaa !15\l  %91 = zext i8 %90 to i64\l  %92 = shl nuw i64 %91, 56\l  %93 = or i64 %88, %92\l  %94 = add nsw i32 %51, -8\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 8\l  br label %109\l}"];
	Node0x5916d30 -> Node0x5916fc0;
	Node0x5917010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%96:\l96:                                               \l  %97 = phi i32 [ %107, %96 ], [ 0, %54 ]\l  %98 = phi i64 [ %106, %96 ], [ 0, %54 ]\l  %99 = zext i32 %97 to i64\l  %100 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 %99\l  %101 = load i8, i8 addrspace(4)* %100, align 1, !tbaa !15\l  %102 = zext i8 %101 to i64\l  %103 = shl i32 %97, 3\l  %104 = zext i32 %103 to i64\l  %105 = shl nuw i64 %102, %104\l  %106 = or i64 %105, %98\l  %107 = add nuw nsw i32 %97, 1\l  %108 = icmp eq i32 %107, %51\l  br i1 %108, label %109, label %96, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5917010:s0 -> Node0x5916fc0;
	Node0x5917010:s1 -> Node0x5917010;
	Node0x5916fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%109:\l109:                                              \l  %110 = phi i8 addrspace(4)* [ %95, %56 ], [ %43, %54 ], [ %43, %96 ]\l  %111 = phi i32 [ %94, %56 ], [ 0, %54 ], [ 0, %96 ]\l  %112 = phi i64 [ %93, %56 ], [ 0, %54 ], [ %106, %96 ]\l  %113 = icmp ugt i32 %111, 7\l  br i1 %113, label %116, label %114\l|{<s0>T|<s1>F}}"];
	Node0x5916fc0:s0 -> Node0x5919cc0;
	Node0x5916fc0:s1 -> Node0x5919d10;
	Node0x5919d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%114:\l114:                                              \l  %115 = icmp eq i32 %111, 0\l  br i1 %115, label %169, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5919d10:s0 -> Node0x5919ee0;
	Node0x5919d10:s1 -> Node0x5919f30;
	Node0x5919cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%116:\l116:                                              \l  %117 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !15\l  %118 = zext i8 %117 to i64\l  %119 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 1\l  %120 = load i8, i8 addrspace(4)* %119, align 1, !tbaa !15\l  %121 = zext i8 %120 to i64\l  %122 = shl nuw nsw i64 %121, 8\l  %123 = or i64 %122, %118\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 2\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !15\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw nsw i64 %126, 16\l  %128 = or i64 %123, %127\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 3\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !15\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 24\l  %133 = or i64 %128, %132\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 4\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !15\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 32\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 5\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !15\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 40\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 6\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !15\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw nsw i64 %146, 48\l  %148 = or i64 %143, %147\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 7\l  %150 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !15\l  %151 = zext i8 %150 to i64\l  %152 = shl nuw i64 %151, 56\l  %153 = or i64 %148, %152\l  %154 = add nsw i32 %111, -8\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 8\l  br label %169\l}"];
	Node0x5919cc0 -> Node0x5919ee0;
	Node0x5919f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%156:\l156:                                              \l  %157 = phi i32 [ %167, %156 ], [ 0, %114 ]\l  %158 = phi i64 [ %166, %156 ], [ 0, %114 ]\l  %159 = zext i32 %157 to i64\l  %160 = getelementptr inbounds i8, i8 addrspace(4)* %110, i64 %159\l  %161 = load i8, i8 addrspace(4)* %160, align 1, !tbaa !15\l  %162 = zext i8 %161 to i64\l  %163 = shl i32 %157, 3\l  %164 = zext i32 %163 to i64\l  %165 = shl nuw i64 %162, %164\l  %166 = or i64 %165, %158\l  %167 = add nuw nsw i32 %157, 1\l  %168 = icmp eq i32 %167, %111\l  br i1 %168, label %169, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5919f30:s0 -> Node0x5919ee0;
	Node0x5919f30:s1 -> Node0x5919f30;
	Node0x5919ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%169:\l169:                                              \l  %170 = phi i8 addrspace(4)* [ %155, %116 ], [ %110, %114 ], [ %110, %156 ]\l  %171 = phi i32 [ %154, %116 ], [ 0, %114 ], [ 0, %156 ]\l  %172 = phi i64 [ %153, %116 ], [ 0, %114 ], [ %166, %156 ]\l  %173 = icmp ugt i32 %171, 7\l  br i1 %173, label %176, label %174\l|{<s0>T|<s1>F}}"];
	Node0x5919ee0:s0 -> Node0x591c410;
	Node0x5919ee0:s1 -> Node0x591c460;
	Node0x591c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%174:\l174:                                              \l  %175 = icmp eq i32 %171, 0\l  br i1 %175, label %229, label %216\l|{<s0>T|<s1>F}}"];
	Node0x591c460:s0 -> Node0x591c5f0;
	Node0x591c460:s1 -> Node0x591c640;
	Node0x591c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%176:\l176:                                              \l  %177 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !15\l  %178 = zext i8 %177 to i64\l  %179 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 1\l  %180 = load i8, i8 addrspace(4)* %179, align 1, !tbaa !15\l  %181 = zext i8 %180 to i64\l  %182 = shl nuw nsw i64 %181, 8\l  %183 = or i64 %182, %178\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 2\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !15\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw nsw i64 %186, 16\l  %188 = or i64 %183, %187\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 3\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !15\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 24\l  %193 = or i64 %188, %192\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 4\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !15\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 32\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 5\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !15\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 40\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 6\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !15\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw nsw i64 %206, 48\l  %208 = or i64 %203, %207\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 7\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !15\l  %211 = zext i8 %210 to i64\l  %212 = shl nuw i64 %211, 56\l  %213 = or i64 %208, %212\l  %214 = add nsw i32 %171, -8\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 8\l  br label %229\l}"];
	Node0x591c410 -> Node0x591c5f0;
	Node0x591c640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%216:\l216:                                              \l  %217 = phi i32 [ %227, %216 ], [ 0, %174 ]\l  %218 = phi i64 [ %226, %216 ], [ 0, %174 ]\l  %219 = zext i32 %217 to i64\l  %220 = getelementptr inbounds i8, i8 addrspace(4)* %170, i64 %219\l  %221 = load i8, i8 addrspace(4)* %220, align 1, !tbaa !15\l  %222 = zext i8 %221 to i64\l  %223 = shl i32 %217, 3\l  %224 = zext i32 %223 to i64\l  %225 = shl nuw i64 %222, %224\l  %226 = or i64 %225, %218\l  %227 = add nuw nsw i32 %217, 1\l  %228 = icmp eq i32 %227, %171\l  br i1 %228, label %229, label %216\l|{<s0>T|<s1>F}}"];
	Node0x591c640:s0 -> Node0x591c5f0;
	Node0x591c640:s1 -> Node0x591c640;
	Node0x591c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%229:\l229:                                              \l  %230 = phi i8 addrspace(4)* [ %215, %176 ], [ %170, %174 ], [ %170, %216 ]\l  %231 = phi i32 [ %214, %176 ], [ 0, %174 ], [ 0, %216 ]\l  %232 = phi i64 [ %213, %176 ], [ 0, %174 ], [ %226, %216 ]\l  %233 = icmp ugt i32 %231, 7\l  br i1 %233, label %236, label %234\l|{<s0>T|<s1>F}}"];
	Node0x591c5f0:s0 -> Node0x591e690;
	Node0x591c5f0:s1 -> Node0x591e6e0;
	Node0x591e6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%234:\l234:                                              \l  %235 = icmp eq i32 %231, 0\l  br i1 %235, label %289, label %276\l|{<s0>T|<s1>F}}"];
	Node0x591e6e0:s0 -> Node0x591e870;
	Node0x591e6e0:s1 -> Node0x591e8c0;
	Node0x591e690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%236:\l236:                                              \l  %237 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !15\l  %238 = zext i8 %237 to i64\l  %239 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 1\l  %240 = load i8, i8 addrspace(4)* %239, align 1, !tbaa !15\l  %241 = zext i8 %240 to i64\l  %242 = shl nuw nsw i64 %241, 8\l  %243 = or i64 %242, %238\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 2\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !15\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw nsw i64 %246, 16\l  %248 = or i64 %243, %247\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 3\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !15\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 24\l  %253 = or i64 %248, %252\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 4\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !15\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 32\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 5\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !15\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 40\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 6\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !15\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw nsw i64 %266, 48\l  %268 = or i64 %263, %267\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 7\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !15\l  %271 = zext i8 %270 to i64\l  %272 = shl nuw i64 %271, 56\l  %273 = or i64 %268, %272\l  %274 = add nsw i32 %231, -8\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 8\l  br label %289\l}"];
	Node0x591e690 -> Node0x591e870;
	Node0x591e8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%276:\l276:                                              \l  %277 = phi i32 [ %287, %276 ], [ 0, %234 ]\l  %278 = phi i64 [ %286, %276 ], [ 0, %234 ]\l  %279 = zext i32 %277 to i64\l  %280 = getelementptr inbounds i8, i8 addrspace(4)* %230, i64 %279\l  %281 = load i8, i8 addrspace(4)* %280, align 1, !tbaa !15\l  %282 = zext i8 %281 to i64\l  %283 = shl i32 %277, 3\l  %284 = zext i32 %283 to i64\l  %285 = shl nuw i64 %282, %284\l  %286 = or i64 %285, %278\l  %287 = add nuw nsw i32 %277, 1\l  %288 = icmp eq i32 %287, %231\l  br i1 %288, label %289, label %276\l|{<s0>T|<s1>F}}"];
	Node0x591e8c0:s0 -> Node0x591e870;
	Node0x591e8c0:s1 -> Node0x591e8c0;
	Node0x591e870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%289:\l289:                                              \l  %290 = phi i8 addrspace(4)* [ %275, %236 ], [ %230, %234 ], [ %230, %276 ]\l  %291 = phi i32 [ %274, %236 ], [ 0, %234 ], [ 0, %276 ]\l  %292 = phi i64 [ %273, %236 ], [ 0, %234 ], [ %286, %276 ]\l  %293 = icmp ugt i32 %291, 7\l  br i1 %293, label %296, label %294\l|{<s0>T|<s1>F}}"];
	Node0x591e870:s0 -> Node0x5921110;
	Node0x591e870:s1 -> Node0x5921160;
	Node0x5921160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%294:\l294:                                              \l  %295 = icmp eq i32 %291, 0\l  br i1 %295, label %349, label %336\l|{<s0>T|<s1>F}}"];
	Node0x5921160:s0 -> Node0x59212f0;
	Node0x5921160:s1 -> Node0x5921340;
	Node0x5921110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%296:\l296:                                              \l  %297 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !15\l  %298 = zext i8 %297 to i64\l  %299 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 1\l  %300 = load i8, i8 addrspace(4)* %299, align 1, !tbaa !15\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 8\l  %303 = or i64 %302, %298\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 2\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !15\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 16\l  %308 = or i64 %303, %307\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 3\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !15\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 24\l  %313 = or i64 %308, %312\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 4\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !15\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 32\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 5\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !15\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 40\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 6\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !15\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw nsw i64 %326, 48\l  %328 = or i64 %323, %327\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 7\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !15\l  %331 = zext i8 %330 to i64\l  %332 = shl nuw i64 %331, 56\l  %333 = or i64 %328, %332\l  %334 = add nsw i32 %291, -8\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 8\l  br label %349\l}"];
	Node0x5921110 -> Node0x59212f0;
	Node0x5921340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%336:\l336:                                              \l  %337 = phi i32 [ %347, %336 ], [ 0, %294 ]\l  %338 = phi i64 [ %346, %336 ], [ 0, %294 ]\l  %339 = zext i32 %337 to i64\l  %340 = getelementptr inbounds i8, i8 addrspace(4)* %290, i64 %339\l  %341 = load i8, i8 addrspace(4)* %340, align 1, !tbaa !15\l  %342 = zext i8 %341 to i64\l  %343 = shl i32 %337, 3\l  %344 = zext i32 %343 to i64\l  %345 = shl nuw i64 %342, %344\l  %346 = or i64 %345, %338\l  %347 = add nuw nsw i32 %337, 1\l  %348 = icmp eq i32 %347, %291\l  br i1 %348, label %349, label %336\l|{<s0>T|<s1>F}}"];
	Node0x5921340:s0 -> Node0x59212f0;
	Node0x5921340:s1 -> Node0x5921340;
	Node0x59212f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%349:\l349:                                              \l  %350 = phi i8 addrspace(4)* [ %335, %296 ], [ %290, %294 ], [ %290, %336 ]\l  %351 = phi i32 [ %334, %296 ], [ 0, %294 ], [ 0, %336 ]\l  %352 = phi i64 [ %333, %296 ], [ 0, %294 ], [ %346, %336 ]\l  %353 = icmp ugt i32 %351, 7\l  br i1 %353, label %356, label %354\l|{<s0>T|<s1>F}}"];
	Node0x59212f0:s0 -> Node0x5923d80;
	Node0x59212f0:s1 -> Node0x5923dd0;
	Node0x5923dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%354:\l354:                                              \l  %355 = icmp eq i32 %351, 0\l  br i1 %355, label %409, label %396\l|{<s0>T|<s1>F}}"];
	Node0x5923dd0:s0 -> Node0x5923f60;
	Node0x5923dd0:s1 -> Node0x5923fb0;
	Node0x5923d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%356:\l356:                                              \l  %357 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !15\l  %358 = zext i8 %357 to i64\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 1\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !15\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 8\l  %363 = or i64 %362, %358\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 2\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !15\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw nsw i64 %366, 16\l  %368 = or i64 %363, %367\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 3\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !15\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 24\l  %373 = or i64 %368, %372\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 4\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !15\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 32\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 5\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !15\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 40\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 6\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !15\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw nsw i64 %386, 48\l  %388 = or i64 %383, %387\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 7\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !15\l  %391 = zext i8 %390 to i64\l  %392 = shl nuw i64 %391, 56\l  %393 = or i64 %388, %392\l  %394 = add nsw i32 %351, -8\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 8\l  br label %409\l}"];
	Node0x5923d80 -> Node0x5923f60;
	Node0x5923fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%396:\l396:                                              \l  %397 = phi i32 [ %407, %396 ], [ 0, %354 ]\l  %398 = phi i64 [ %406, %396 ], [ 0, %354 ]\l  %399 = zext i32 %397 to i64\l  %400 = getelementptr inbounds i8, i8 addrspace(4)* %350, i64 %399\l  %401 = load i8, i8 addrspace(4)* %400, align 1, !tbaa !15\l  %402 = zext i8 %401 to i64\l  %403 = shl i32 %397, 3\l  %404 = zext i32 %403 to i64\l  %405 = shl nuw i64 %402, %404\l  %406 = or i64 %405, %398\l  %407 = add nuw nsw i32 %397, 1\l  %408 = icmp eq i32 %407, %351\l  br i1 %408, label %409, label %396\l|{<s0>T|<s1>F}}"];
	Node0x5923fb0:s0 -> Node0x5923f60;
	Node0x5923fb0:s1 -> Node0x5923fb0;
	Node0x5923f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%409:\l409:                                              \l  %410 = phi i8 addrspace(4)* [ %395, %356 ], [ %350, %354 ], [ %350, %396 ]\l  %411 = phi i32 [ %394, %356 ], [ 0, %354 ], [ 0, %396 ]\l  %412 = phi i64 [ %393, %356 ], [ 0, %354 ], [ %406, %396 ]\l  %413 = icmp ugt i32 %411, 7\l  br i1 %413, label %416, label %414\l|{<s0>T|<s1>F}}"];
	Node0x5923f60:s0 -> Node0x59265e0;
	Node0x5923f60:s1 -> Node0x5926630;
	Node0x5926630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%414:\l414:                                              \l  %415 = icmp eq i32 %411, 0\l  br i1 %415, label %467, label %454\l|{<s0>T|<s1>F}}"];
	Node0x5926630:s0 -> Node0x5916260;
	Node0x5926630:s1 -> Node0x59267c0;
	Node0x59265e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%416:\l416:                                              \l  %417 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !15\l  %418 = zext i8 %417 to i64\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 1\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !15\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 8\l  %423 = or i64 %422, %418\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 2\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !15\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw nsw i64 %426, 16\l  %428 = or i64 %423, %427\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 3\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !15\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 24\l  %433 = or i64 %428, %432\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 4\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !15\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 32\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 5\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !15\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 40\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 6\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !15\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw nsw i64 %446, 48\l  %448 = or i64 %443, %447\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 7\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !15\l  %451 = zext i8 %450 to i64\l  %452 = shl nuw i64 %451, 56\l  %453 = or i64 %448, %452\l  br label %467\l}"];
	Node0x59265e0 -> Node0x5916260;
	Node0x59267c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%454:\l454:                                              \l  %455 = phi i32 [ %465, %454 ], [ 0, %414 ]\l  %456 = phi i64 [ %464, %454 ], [ 0, %414 ]\l  %457 = zext i32 %455 to i64\l  %458 = getelementptr inbounds i8, i8 addrspace(4)* %410, i64 %457\l  %459 = load i8, i8 addrspace(4)* %458, align 1, !tbaa !15\l  %460 = zext i8 %459 to i64\l  %461 = shl i32 %455, 3\l  %462 = zext i32 %461 to i64\l  %463 = shl nuw i64 %460, %462\l  %464 = or i64 %463, %456\l  %465 = add nuw nsw i32 %455, 1\l  %466 = icmp eq i32 %465, %411\l  br i1 %466, label %467, label %454\l|{<s0>T|<s1>F}}"];
	Node0x59267c0:s0 -> Node0x5916260;
	Node0x59267c0:s1 -> Node0x59267c0;
	Node0x5916260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%467:\l467:                                              \l  %468 = phi i64 [ %453, %416 ], [ 0, %414 ], [ %464, %454 ]\l  %469 = shl nuw nsw i64 %50, 2\l  %470 = add nuw nsw i64 %469, 28\l  %471 = and i64 %470, 480\l  %472 = and i64 %52, -225\l  %473 = or i64 %472, %471\l  %474 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef %473, i64 noundef %112, i64 noundef %172, i64 noundef %232, i64\l... noundef %292, i64 noundef %352, i64 noundef %412, i64 noundef %468) #10\l  %475 = sub i64 %42, %50\l  %476 = getelementptr inbounds i8, i8 addrspace(4)* %43, i64 %50\l  %477 = icmp eq i64 %475, 0\l  br i1 %477, label %478, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5916260:s0 -> Node0x5915250;
	Node0x5916260:s1 -> Node0x5915df0;
	Node0x5915250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%478:\l478:                                              \l  %479 = phi \<2 x i64\> [ %36, %33 ], [ %474, %467 ]\l  %480 = extractelement \<2 x i64\> %479, i64 0\l  %481 = and i64 %480, -225\l  %482 = or i64 %481, 32\l  %483 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef %482, i64 noundef %23, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %484 = extractelement \<2 x i64\> %483, i64 0\l  %485 = and i64 %484, -225\l  %486 = or i64 %485, 32\l  %487 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef %486, i64 noundef %24, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %488 = extractelement \<2 x i64\> %487, i64 0\l  %489 = and i64 %488, -227\l  %490 = or i64 %489, 34\l  %491 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %30,\l... i64 noundef %490, i64 noundef %21, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %492\l}"];
	Node0x5915250 -> Node0x5912180;
	Node0x5912180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%492:\l492:                                              \l  ret void\l}"];
}
