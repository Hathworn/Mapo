digraph "CFG for '_Z12vectorLengthiPKdS0_Pd' function" {
	label="CFG for '_Z12vectorLengthiPKdS0_Pd' function";

	Node0x4def7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = zext i32 %5 to i64\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i64\l  %14 = mul nuw nsw i64 %13, %8\l  %15 = add nuw nsw i64 %14, %6\l  %16 = sext i32 %0 to i64\l  %17 = icmp slt i64 %15, %16\l  br i1 %17, label %18, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4def7b0:s0 -> Node0x4df1880;
	Node0x4def7b0:s1 -> Node0x4df1910;
	Node0x4df1880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = fmul contract double %20, %20\l  %22 = getelementptr inbounds double, double addrspace(1)* %2, i64 %15\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %24 = fmul contract double %23, %23\l  %25 = fadd contract double %21, %24\l  %26 = fcmp olt double %25, 0x1000000000000000\l  %27 = select i1 %26, double 0x4FF0000000000000, double 1.000000e+00\l  %28 = fmul double %25, %27\l  %29 = tail call double @llvm.amdgcn.rsq.f64(double %28)\l  %30 = fmul double %28, %29\l  %31 = fmul double %29, 5.000000e-01\l  %32 = fneg double %31\l  %33 = tail call double @llvm.fma.f64(double %32, double %30, double\l... 5.000000e-01)\l  %34 = tail call double @llvm.fma.f64(double %31, double %33, double %31)\l  %35 = tail call double @llvm.fma.f64(double %30, double %33, double %30)\l  %36 = fneg double %35\l  %37 = tail call double @llvm.fma.f64(double %36, double %35, double %28)\l  %38 = tail call double @llvm.fma.f64(double %37, double %34, double %35)\l  %39 = fneg double %38\l  %40 = tail call double @llvm.fma.f64(double %39, double %38, double %28)\l  %41 = tail call double @llvm.fma.f64(double %40, double %34, double %38)\l  %42 = select i1 %26, double 0x37F0000000000000, double 1.000000e+00\l  %43 = fmul double %42, %41\l  %44 = fcmp oeq double %28, 0.000000e+00\l  %45 = fcmp oeq double %28, 0x7FF0000000000000\l  %46 = or i1 %44, %45\l  %47 = select i1 %46, double %28, double %43\l  %48 = getelementptr inbounds double, double addrspace(1)* %3, i64 %15\l  store double %47, double addrspace(1)* %48, align 8, !tbaa !7\l  br label %49\l}"];
	Node0x4df1880 -> Node0x4df1910;
	Node0x4df1910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
