digraph "CFG for '_Z22calculateIntermediatesiPdPiS0_S_S_ii' function" {
	label="CFG for '_Z22calculateIntermediatesiPdPiS0_S_S_ii' function";

	Node0x5ce2140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%8:\l  %9 = sdiv i32 %0, 450\l  %10 = add nsw i32 %9, 1\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %10, %11\l  %13 = add nsw i32 %12, %10\l  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 %0)\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = icmp slt i32 %15, %6\l  br i1 %16, label %17, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5ce2140:s0 -> Node0x5ce21d0;
	Node0x5ce2140:s1 -> Node0x5ce3df0;
	Node0x5ce21d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%17:\l17:                                               \l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %19 = icmp slt i32 %18, %7\l  %20 = icmp slt i32 %12, %14\l  %21 = mul i32 %11, %6\l  %22 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %23 = getelementptr i8, i8 addrspace(4)* %22, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = getelementptr i8, i8 addrspace(4)* %22, i64 6\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 2, !range !5, !invariant.load !6\l  %28 = zext i16 %27 to i32\l  br label %29\l}"];
	Node0x5ce21d0 -> Node0x5ce5130;
	Node0x5ce5130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%29:\l29:                                               \l  %30 = phi i32 [ %15, %17 ], [ %39, %38 ]\l  br i1 %19, label %31, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5ce5130:s0 -> Node0x5ce5370;
	Node0x5ce5130:s1 -> Node0x5ce5230;
	Node0x5ce5370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%31:\l31:                                               \l  %32 = add i32 %30, %21\l  %33 = zext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %33\l  %35 = mul i32 %32, %7\l  %36 = load i16, i16 addrspace(4)* %24, align 4, !range !5, !invariant.load !6\l  %37 = zext i16 %36 to i32\l  br label %41\l}"];
	Node0x5ce5370 -> Node0x5ce64e0;
	Node0x5ce5230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%38:\l38:                                               \l  %39 = add i32 %30, %28\l  %40 = icmp slt i32 %39, %6\l  br i1 %40, label %29, label %90, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5ce5230:s0 -> Node0x5ce5130;
	Node0x5ce5230:s1 -> Node0x5ce3df0;
	Node0x5ce64e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = phi i32 [ %18, %31 ], [ %66, %59 ]\l  %43 = icmp eq i32 %42, 0\l  br i1 %43, label %44, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5ce64e0:s0 -> Node0x5ce6a70;
	Node0x5ce64e0:s1 -> Node0x5ce6b00;
	Node0x5ce6a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%44:\l44:                                               \l  br i1 %20, label %47, label %45\l|{<s0>T|<s1>F}}"];
	Node0x5ce6a70:s0 -> Node0x5ce6c40;
	Node0x5ce6a70:s1 -> Node0x5ce6c90;
	Node0x5ce6c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %44 ], [ %55, %47 ]\l  store i32 %46, i32 addrspace(1)* %34, align 4, !tbaa !9\l  br label %58\l}"];
	Node0x5ce6c90 -> Node0x5ce6b00;
	Node0x5ce6c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%47:\l47:                                               \l  %48 = phi i32 [ %56, %47 ], [ %12, %44 ]\l  %49 = phi i32 [ %55, %47 ], [ 0, %44 ]\l  %50 = sext i32 %48 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !9\l  %53 = icmp eq i32 %52, %30\l  %54 = zext i1 %53 to i32\l  %55 = add nuw nsw i32 %49, %54\l  %56 = add nsw i32 %48, 1\l  %57 = icmp slt i32 %56, %14\l  br i1 %57, label %47, label %45, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ce6c40:s0 -> Node0x5ce6c40;
	Node0x5ce6c40:s1 -> Node0x5ce6c90;
	Node0x5ce6b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%58:\l58:                                               \l  br i1 %20, label %68, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5ce6b00:s0 -> Node0x5ce7e30;
	Node0x5ce6b00:s1 -> Node0x5ce6870;
	Node0x5ce6870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%59:\l59:                                               \l  %60 = phi double [ 0.000000e+00, %58 ], [ %86, %85 ]\l  %61 = phi double [ 0.000000e+00, %58 ], [ %87, %85 ]\l  %62 = add i32 %42, %35\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %4, i64 %63\l  store double %60, double addrspace(1)* %64, align 8, !tbaa !14\l  %65 = getelementptr inbounds double, double addrspace(1)* %5, i64 %63\l  store double %61, double addrspace(1)* %65, align 8, !tbaa !14\l  %66 = add i32 %42, %37\l  %67 = icmp slt i32 %66, %7\l  br i1 %67, label %41, label %38, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5ce6870:s0 -> Node0x5ce64e0;
	Node0x5ce6870:s1 -> Node0x5ce5230;
	Node0x5ce7e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi i32 [ %88, %85 ], [ %12, %58 ]\l  %70 = phi double [ %87, %85 ], [ 0.000000e+00, %58 ]\l  %71 = phi double [ %86, %85 ], [ 0.000000e+00, %58 ]\l  %72 = sext i32 %69 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !9\l  %75 = icmp eq i32 %74, %30\l  br i1 %75, label %76, label %85\l|{<s0>T|<s1>F}}"];
	Node0x5ce7e30:s0 -> Node0x5ce9f90;
	Node0x5ce7e30:s1 -> Node0x5ce8980;
	Node0x5ce9f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%76:\l76:                                               \l  %77 = mul nsw i32 %69, %7\l  %78 = add nsw i32 %77, %42\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %1, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !14\l  %82 = fadd contract double %71, %81\l  %83 = fmul contract double %81, %81\l  %84 = fadd contract double %70, %83\l  br label %85\l}"];
	Node0x5ce9f90 -> Node0x5ce8980;
	Node0x5ce8980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  %86 = phi double [ %82, %76 ], [ %71, %68 ]\l  %87 = phi double [ %84, %76 ], [ %70, %68 ]\l  %88 = add nsw i32 %69, 1\l  %89 = icmp slt i32 %88, %14\l  br i1 %89, label %68, label %59, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5ce8980:s0 -> Node0x5ce7e30;
	Node0x5ce8980:s1 -> Node0x5ce6870;
	Node0x5ce3df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%90:\l90:                                               \l  ret void\l}"];
}
