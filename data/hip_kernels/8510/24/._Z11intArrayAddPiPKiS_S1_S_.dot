digraph "CFG for '_Z11intArrayAddPiPKiS_S1_S_' function" {
	label="CFG for '_Z11intArrayAddPiPKiS_S1_S_' function";

	Node0x64e84b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = zext i32 %6 to i64\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = zext i32 %8 to i64\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i64\l  %15 = mul nuw nsw i64 %14, %9\l  %16 = add nuw nsw i64 %15, %7\l  %17 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %18 = sext i32 %17 to i64\l  %19 = icmp slt i64 %16, %18\l  br i1 %19, label %20, label %39\l|{<s0>T|<s1>F}}"];
	Node0x64e84b0:s0 -> Node0x64ead90;
	Node0x64e84b0:s1 -> Node0x64eae20;
	Node0x64ead90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%20:\l20:                                               \l  %21 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !7\l  %22 = sext i32 %21 to i64\l  %23 = mul nsw i64 %16, %22\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %23\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %23\l  %26 = icmp sgt i32 %21, 0\l  br i1 %26, label %27, label %39\l|{<s0>T|<s1>F}}"];
	Node0x64ead90:s0 -> Node0x64eb8b0;
	Node0x64ead90:s1 -> Node0x64eae20;
	Node0x64eb8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i64 [ %35, %27 ], [ 0, %20 ]\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %24, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %28\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %33 = add nsw i32 %32, %30\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %25, i64 %28\l  store i32 %33, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %35 = add nuw nsw i64 %28, 1\l  %36 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !7\l  %37 = sext i32 %36 to i64\l  %38 = icmp slt i64 %35, %37\l  br i1 %38, label %27, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x64eb8b0:s0 -> Node0x64eb8b0;
	Node0x64eb8b0:s1 -> Node0x64eae20;
	Node0x64eae20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%39:\l39:                                               \l  ret void\l}"];
}
