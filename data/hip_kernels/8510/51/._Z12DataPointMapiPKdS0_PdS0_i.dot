digraph "CFG for '_Z12DataPointMapiPKdS0_PdS0_i' function" {
	label="CFG for '_Z12DataPointMapiPKdS0_PdS0_i' function";

	Node0x56b8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = zext i32 %9 to i64\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i64\l  %16 = mul nuw nsw i64 %15, %10\l  %17 = add nuw nsw i64 %16, %8\l  %18 = sext i32 %0 to i64\l  %19 = icmp slt i64 %17, %18\l  br i1 %19, label %20, label %107\l|{<s0>T|<s1>F}}"];
	Node0x56b8680:s0 -> Node0x56ba6c0;
	Node0x56b8680:s1 -> Node0x56ba750;
	Node0x56ba6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%20:\l20:                                               \l  %21 = sext i32 %5 to i64\l  %22 = mul nsw i64 %17, %21\l  %23 = getelementptr inbounds double, double addrspace(1)* %1, i64 %22\l  %24 = getelementptr inbounds double, double addrspace(1)* %3, i64 %22\l  %25 = icmp sgt i32 %5, 0\l  br i1 %25, label %26, label %107\l|{<s0>T|<s1>F}}"];
	Node0x56ba6c0:s0 -> Node0x56bab60;
	Node0x56ba6c0:s1 -> Node0x56ba750;
	Node0x56bab60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%26:\l26:                                               \l  %27 = and i64 %21, 7\l  %28 = icmp ult i32 %5, 8\l  br i1 %28, label %92, label %29\l|{<s0>T|<s1>F}}"];
	Node0x56bab60:s0 -> Node0x56bade0;
	Node0x56bab60:s1 -> Node0x56bae30;
	Node0x56bae30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  %30 = and i64 %21, -8\l  br label %31\l}"];
	Node0x56bae30 -> Node0x56bb030;
	Node0x56bb030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = phi i64 [ 0, %29 ], [ %89, %31 ]\l  %33 = phi i64 [ 0, %29 ], [ %90, %31 ]\l  %34 = getelementptr inbounds double, double addrspace(1)* %23, i64 %32\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = getelementptr inbounds double, double addrspace(1)* %4, i64 %32\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %38 = fadd contract double %35, %37\l  %39 = getelementptr inbounds double, double addrspace(1)* %24, i64 %32\l  store double %38, double addrspace(1)* %39, align 8, !tbaa !7\l  %40 = or i64 %32, 1\l  %41 = getelementptr inbounds double, double addrspace(1)* %23, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 %40\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7\l  %45 = fadd contract double %42, %44\l  %46 = getelementptr inbounds double, double addrspace(1)* %24, i64 %40\l  store double %45, double addrspace(1)* %46, align 8, !tbaa !7\l  %47 = or i64 %32, 2\l  %48 = getelementptr inbounds double, double addrspace(1)* %23, i64 %47\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7\l  %50 = getelementptr inbounds double, double addrspace(1)* %4, i64 %47\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %52 = fadd contract double %49, %51\l  %53 = getelementptr inbounds double, double addrspace(1)* %24, i64 %47\l  store double %52, double addrspace(1)* %53, align 8, !tbaa !7\l  %54 = or i64 %32, 3\l  %55 = getelementptr inbounds double, double addrspace(1)* %23, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %57 = getelementptr inbounds double, double addrspace(1)* %4, i64 %54\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7\l  %59 = fadd contract double %56, %58\l  %60 = getelementptr inbounds double, double addrspace(1)* %24, i64 %54\l  store double %59, double addrspace(1)* %60, align 8, !tbaa !7\l  %61 = or i64 %32, 4\l  %62 = getelementptr inbounds double, double addrspace(1)* %23, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = getelementptr inbounds double, double addrspace(1)* %4, i64 %61\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %66 = fadd contract double %63, %65\l  %67 = getelementptr inbounds double, double addrspace(1)* %24, i64 %61\l  store double %66, double addrspace(1)* %67, align 8, !tbaa !7\l  %68 = or i64 %32, 5\l  %69 = getelementptr inbounds double, double addrspace(1)* %23, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !7\l  %71 = getelementptr inbounds double, double addrspace(1)* %4, i64 %68\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = fadd contract double %70, %72\l  %74 = getelementptr inbounds double, double addrspace(1)* %24, i64 %68\l  store double %73, double addrspace(1)* %74, align 8, !tbaa !7\l  %75 = or i64 %32, 6\l  %76 = getelementptr inbounds double, double addrspace(1)* %23, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  %78 = getelementptr inbounds double, double addrspace(1)* %4, i64 %75\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7\l  %80 = fadd contract double %77, %79\l  %81 = getelementptr inbounds double, double addrspace(1)* %24, i64 %75\l  store double %80, double addrspace(1)* %81, align 8, !tbaa !7\l  %82 = or i64 %32, 7\l  %83 = getelementptr inbounds double, double addrspace(1)* %23, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !7\l  %85 = getelementptr inbounds double, double addrspace(1)* %4, i64 %82\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = fadd contract double %84, %86\l  %88 = getelementptr inbounds double, double addrspace(1)* %24, i64 %82\l  store double %87, double addrspace(1)* %88, align 8, !tbaa !7\l  %89 = add nuw nsw i64 %32, 8\l  %90 = add nuw i64 %33, 8\l  %91 = icmp eq i64 %90, %30\l  br i1 %91, label %92, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56bb030:s0 -> Node0x56bade0;
	Node0x56bb030:s1 -> Node0x56bb030;
	Node0x56bade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%92:\l92:                                               \l  %93 = phi i64 [ 0, %26 ], [ %89, %31 ]\l  %94 = icmp eq i64 %27, 0\l  br i1 %94, label %107, label %95\l|{<s0>T|<s1>F}}"];
	Node0x56bade0:s0 -> Node0x56ba750;
	Node0x56bade0:s1 -> Node0x56be600;
	Node0x56be600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = phi i64 [ %104, %95 ], [ %93, %92 ]\l  %97 = phi i64 [ %105, %95 ], [ 0, %92 ]\l  %98 = getelementptr inbounds double, double addrspace(1)* %23, i64 %96\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !7\l  %100 = getelementptr inbounds double, double addrspace(1)* %4, i64 %96\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !7\l  %102 = fadd contract double %99, %101\l  %103 = getelementptr inbounds double, double addrspace(1)* %24, i64 %96\l  store double %102, double addrspace(1)* %103, align 8, !tbaa !7\l  %104 = add nuw nsw i64 %96, 1\l  %105 = add i64 %97, 1\l  %106 = icmp eq i64 %105, %27\l  br i1 %106, label %107, label %95, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56be600:s0 -> Node0x56ba750;
	Node0x56be600:s1 -> Node0x56be600;
	Node0x56ba750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%107:\l107:                                              \l  ret void\l}"];
}
