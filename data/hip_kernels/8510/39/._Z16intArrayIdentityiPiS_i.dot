digraph "CFG for '_Z16intArrayIdentityiPiS_i' function" {
	label="CFG for '_Z16intArrayIdentityiPiS_i' function";

	Node0x5f5cdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5f5cdc0:s0 -> Node0x5f5ce10;
	Node0x5f5cdc0:s1 -> Node0x5f5ed50;
	Node0x5f5ce10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = mul nsw i32 %13, %3\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %17\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %17\l  %20 = sext i32 %3 to i64\l  %21 = icmp sgt i32 %3, 0\l  br i1 %21, label %22, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5f5ce10:s0 -> Node0x5f5f270;
	Node0x5f5ce10:s1 -> Node0x5f5ed50;
	Node0x5f5f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%22:\l22:                                               \l  %23 = and i64 %20, 7\l  %24 = icmp ult i32 %3, 8\l  br i1 %24, label %64, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f5f270:s0 -> Node0x5f5f4f0;
	Node0x5f5f270:s1 -> Node0x5f5f540;
	Node0x5f5f540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i64 %20, -8\l  br label %27\l}"];
	Node0x5f5f540 -> Node0x5f5f740;
	Node0x5f5f740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi i64 [ 0, %25 ], [ %61, %27 ]\l  %29 = phi i64 [ 0, %25 ], [ %62, %27 ]\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %28\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %28\l  store i32 %31, i32 addrspace(1)* %32, align 4, !tbaa !7\l  %33 = or i64 %28, 1\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %33\l  store i32 %35, i32 addrspace(1)* %36, align 4, !tbaa !7\l  %37 = or i64 %28, 2\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !7\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %37\l  store i32 %39, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %41 = or i64 %28, 3\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %41\l  store i32 %43, i32 addrspace(1)* %44, align 4, !tbaa !7\l  %45 = or i64 %28, 4\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !7\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %45\l  store i32 %47, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %49 = or i64 %28, 5\l  %50 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %49\l  %51 = load i32, i32 addrspace(1)* %50, align 4, !tbaa !7\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %49\l  store i32 %51, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %53 = or i64 %28, 6\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %53\l  store i32 %55, i32 addrspace(1)* %56, align 4, !tbaa !7\l  %57 = or i64 %28, 7\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %57\l  store i32 %59, i32 addrspace(1)* %60, align 4, !tbaa !7\l  %61 = add nuw nsw i64 %28, 8\l  %62 = add i64 %29, 8\l  %63 = icmp eq i64 %62, %26\l  br i1 %63, label %64, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f5f740:s0 -> Node0x5f5f4f0;
	Node0x5f5f740:s1 -> Node0x5f5f740;
	Node0x5f5f4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%64:\l64:                                               \l  %65 = phi i64 [ 0, %22 ], [ %61, %27 ]\l  %66 = icmp eq i64 %23, 0\l  br i1 %66, label %76, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5f5f4f0:s0 -> Node0x5f5ed50;
	Node0x5f5f4f0:s1 -> Node0x5f5fe90;
	Node0x5f5fe90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i64 [ %73, %67 ], [ %65, %64 ]\l  %69 = phi i64 [ %74, %67 ], [ 0, %64 ]\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %18, i64 %68\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %68\l  store i32 %71, i32 addrspace(1)* %72, align 4, !tbaa !7\l  %73 = add nuw nsw i64 %68, 1\l  %74 = add i64 %69, 1\l  %75 = icmp eq i64 %74, %23\l  br i1 %75, label %76, label %67, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f5fe90:s0 -> Node0x5f5ed50;
	Node0x5f5fe90:s1 -> Node0x5f5fe90;
	Node0x5f5ed50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%76:\l76:                                               \l  ret void\l}"];
}
