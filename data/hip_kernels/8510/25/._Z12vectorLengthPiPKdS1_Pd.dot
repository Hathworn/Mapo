digraph "CFG for '_Z12vectorLengthPiPKdS1_Pd' function" {
	label="CFG for '_Z12vectorLengthPiPKdS1_Pd' function";

	Node0x4794850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = zext i32 %5 to i64\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = zext i32 %7 to i64\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i64\l  %14 = mul nuw nsw i64 %13, %8\l  %15 = add nuw nsw i64 %14, %6\l  %16 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %17 = sext i32 %16 to i64\l  %18 = icmp slt i64 %15, %17\l  br i1 %18, label %19, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4794850:s0 -> Node0x4797180;
	Node0x4794850:s1 -> Node0x4797210;
	Node0x4797180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  %20 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %22 = fmul contract double %21, %21\l  %23 = getelementptr inbounds double, double addrspace(1)* %2, i64 %15\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !11,\l... !amdgpu.noclobber !6\l  %25 = fmul contract double %24, %24\l  %26 = fadd contract double %22, %25\l  %27 = fcmp olt double %26, 0x1000000000000000\l  %28 = select i1 %27, double 0x4FF0000000000000, double 1.000000e+00\l  %29 = fmul double %26, %28\l  %30 = tail call double @llvm.amdgcn.rsq.f64(double %29)\l  %31 = fmul double %29, %30\l  %32 = fmul double %30, 5.000000e-01\l  %33 = fneg double %32\l  %34 = tail call double @llvm.fma.f64(double %33, double %31, double\l... 5.000000e-01)\l  %35 = tail call double @llvm.fma.f64(double %32, double %34, double %32)\l  %36 = tail call double @llvm.fma.f64(double %31, double %34, double %31)\l  %37 = fneg double %36\l  %38 = tail call double @llvm.fma.f64(double %37, double %36, double %29)\l  %39 = tail call double @llvm.fma.f64(double %38, double %35, double %36)\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %40, double %39, double %29)\l  %42 = tail call double @llvm.fma.f64(double %41, double %35, double %39)\l  %43 = select i1 %27, double 0x37F0000000000000, double 1.000000e+00\l  %44 = fmul double %43, %42\l  %45 = fcmp oeq double %29, 0.000000e+00\l  %46 = fcmp oeq double %29, 0x7FF0000000000000\l  %47 = or i1 %45, %46\l  %48 = select i1 %47, double %29, double %44\l  %49 = getelementptr inbounds double, double addrspace(1)* %3, i64 %15\l  store double %48, double addrspace(1)* %49, align 8, !tbaa !11\l  br label %50\l}"];
	Node0x4797180 -> Node0x4797210;
	Node0x4797210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  ret void\l}"];
}
