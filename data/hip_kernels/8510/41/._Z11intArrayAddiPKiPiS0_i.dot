digraph "CFG for '_Z11intArrayAddiPKiPiS0_i' function" {
	label="CFG for '_Z11intArrayAddiPKiPiS0_i' function";

	Node0x5f12420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = zext i32 %6 to i64\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = zext i32 %8 to i64\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i64\l  %15 = mul nuw nsw i64 %14, %9\l  %16 = add nuw nsw i64 %15, %7\l  %17 = sext i32 %0 to i64\l  %18 = icmp slt i64 %16, %17\l  br i1 %18, label %19, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5f12420:s0 -> Node0x5f144c0;
	Node0x5f12420:s1 -> Node0x5f14550;
	Node0x5f144c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%19:\l19:                                               \l  %20 = sext i32 %4 to i64\l  %21 = mul nsw i64 %16, %20\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %21\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %21\l  %24 = icmp sgt i32 %4, 0\l  br i1 %24, label %25, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5f144c0:s0 -> Node0x5f14960;
	Node0x5f144c0:s1 -> Node0x5f14550;
	Node0x5f14960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = and i64 %20, 7\l  %27 = icmp ult i32 %4, 8\l  br i1 %27, label %91, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5f14960:s0 -> Node0x5f14be0;
	Node0x5f14960:s1 -> Node0x5f14c30;
	Node0x5f14c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%28:\l28:                                               \l  %29 = and i64 %20, -8\l  br label %30\l}"];
	Node0x5f14c30 -> Node0x5f14e30;
	Node0x5f14e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%30:\l30:                                               \l  %31 = phi i64 [ 0, %28 ], [ %88, %30 ]\l  %32 = phi i64 [ 0, %28 ], [ %89, %30 ]\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %31\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !7\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %31\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %37 = add nsw i32 %36, %34\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %31\l  store i32 %37, i32 addrspace(1)* %38, align 4, !tbaa !7\l  %39 = or i64 %31, 1\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %39\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7\l  %44 = add nsw i32 %43, %41\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %39\l  store i32 %44, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %46 = or i64 %31, 2\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %46\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = add nsw i32 %50, %48\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %46\l  store i32 %51, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %53 = or i64 %31, 3\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !7\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %53\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7\l  %58 = add nsw i32 %57, %55\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %53\l  store i32 %58, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %60 = or i64 %31, 4\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %60\l  %64 = load i32, i32 addrspace(1)* %63, align 4, !tbaa !7\l  %65 = add nsw i32 %64, %62\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %60\l  store i32 %65, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %67 = or i64 %31, 5\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %67\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !7\l  %72 = add nsw i32 %71, %69\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %67\l  store i32 %72, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %74 = or i64 %31, 6\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %74\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !7\l  %79 = add nsw i32 %78, %76\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %74\l  store i32 %79, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %81 = or i64 %31, 7\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %81\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !7\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %81\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7\l  %86 = add nsw i32 %85, %83\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %81\l  store i32 %86, i32 addrspace(1)* %87, align 4, !tbaa !7\l  %88 = add nuw nsw i64 %31, 8\l  %89 = add i64 %32, 8\l  %90 = icmp eq i64 %89, %29\l  br i1 %90, label %91, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f14e30:s0 -> Node0x5f14be0;
	Node0x5f14e30:s1 -> Node0x5f14e30;
	Node0x5f14be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%91:\l91:                                               \l  %92 = phi i64 [ 0, %25 ], [ %88, %30 ]\l  %93 = icmp eq i64 %26, 0\l  br i1 %93, label %106, label %94\l|{<s0>T|<s1>F}}"];
	Node0x5f14be0:s0 -> Node0x5f14550;
	Node0x5f14be0:s1 -> Node0x5f18400;
	Node0x5f18400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  %95 = phi i64 [ %103, %94 ], [ %92, %91 ]\l  %96 = phi i64 [ %104, %94 ], [ 0, %91 ]\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %22, i64 %95\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %99 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %95\l  %100 = load i32, i32 addrspace(1)* %99, align 4, !tbaa !7\l  %101 = add nsw i32 %100, %98\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %23, i64 %95\l  store i32 %101, i32 addrspace(1)* %102, align 4, !tbaa !7\l  %103 = add nuw nsw i64 %95, 1\l  %104 = add i64 %96, 1\l  %105 = icmp eq i64 %104, %26\l  br i1 %105, label %106, label %94, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5f18400:s0 -> Node0x5f14550;
	Node0x5f18400:s1 -> Node0x5f18400;
	Node0x5f14550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%106:\l106:                                              \l  ret void\l}"];
}
