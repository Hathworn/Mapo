digraph "CFG for '_Z8MNKerneliPlS_S_i' function" {
	label="CFG for '_Z8MNKerneliPlS_S_i' function";

	Node0x59fbc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp sgt i32 %4, 0\l  %24 = mul nsw i32 %22, %4\l  br i1 %23, label %25, label %47\l|{<s0>T|<s1>F}}"];
	Node0x59fbc50:s0 -> Node0x59ff610;
	Node0x59fbc50:s1 -> Node0x59ff6a0;
	Node0x59ff610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%25:\l25:                                               \l  %26 = and i32 %4, 1\l  %27 = icmp eq i32 %4, 1\l  br i1 %27, label %30, label %28\l|{<s0>T|<s1>F}}"];
	Node0x59ff610:s0 -> Node0x59ff930;
	Node0x59ff610:s1 -> Node0x59ff980;
	Node0x59ff980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = and i32 %4, -2\l  br label %52\l}"];
	Node0x59ff980 -> Node0x59ffb80;
	Node0x59ff930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%30:\l30:                                               \l  %31 = phi i64 [ undef, %25 ], [ %78, %52 ]\l  %32 = phi i32 [ 0, %25 ], [ %79, %52 ]\l  %33 = phi i64 [ 0, %25 ], [ %78, %52 ]\l  %34 = icmp eq i32 %26, 0\l  br i1 %34, label %47, label %35\l|{<s0>T|<s1>F}}"];
	Node0x59ff930:s0 -> Node0x59ff6a0;
	Node0x59ff930:s1 -> Node0x5a00500;
	Node0x5a00500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = add nsw i32 %32, %24\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %37\l  %39 = load i64, i64 addrspace(1)* %38, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %40 = mul nsw i32 %32, %4\l  %41 = add nsw i32 %40, %14\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %42\l  %44 = load i64, i64 addrspace(1)* %43, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %45 = mul nsw i64 %44, %39\l  %46 = add nsw i64 %45, %33\l  br label %47\l}"];
	Node0x5a00500 -> Node0x59ff6a0;
	Node0x59ff6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%47:\l47:                                               \l  %48 = phi i64 [ 0, %5 ], [ %31, %30 ], [ %46, %35 ]\l  %49 = add nsw i32 %24, %14\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %50\l  store i64 %48, i64 addrspace(1)* %51, align 8, !tbaa !7\l  ret void\l}"];
	Node0x59ffb80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %28 ], [ %79, %52 ]\l  %54 = phi i64 [ 0, %28 ], [ %78, %52 ]\l  %55 = phi i32 [ 0, %28 ], [ %80, %52 ]\l  %56 = add nsw i32 %53, %24\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %57\l  %59 = load i64, i64 addrspace(1)* %58, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %60 = mul nsw i32 %53, %4\l  %61 = add nsw i32 %60, %14\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %62\l  %64 = load i64, i64 addrspace(1)* %63, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %65 = mul nsw i64 %64, %59\l  %66 = add nsw i64 %65, %54\l  %67 = or i32 %53, 1\l  %68 = add nsw i32 %67, %24\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i64, i64 addrspace(1)* %1, i64 %69\l  %71 = load i64, i64 addrspace(1)* %70, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %72 = mul nsw i32 %67, %4\l  %73 = add nsw i32 %72, %14\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i64, i64 addrspace(1)* %2, i64 %74\l  %76 = load i64, i64 addrspace(1)* %75, align 8, !tbaa !7, !amdgpu.noclobber\l... !5\l  %77 = mul nsw i64 %76, %71\l  %78 = add nsw i64 %77, %66\l  %79 = add nuw nsw i32 %53, 2\l  %80 = add i32 %55, 2\l  %81 = icmp eq i32 %80, %29\l  br i1 %81, label %30, label %52, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x59ffb80:s0 -> Node0x59ff930;
	Node0x59ffb80:s1 -> Node0x59ffb80;
}
