digraph "CFG for '_Z12DataPointMapPiPKdS1_PdS1_S_' function" {
	label="CFG for '_Z12DataPointMapPiPKdS1_PdS1_S_' function";

	Node0x5bae7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = zext i32 %7 to i64\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = zext i32 %9 to i64\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i64\l  %16 = mul nuw nsw i64 %15, %10\l  %17 = add nuw nsw i64 %16, %8\l  %18 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %19 = sext i32 %18 to i64\l  %20 = icmp slt i64 %17, %19\l  br i1 %20, label %21, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5bae7b0:s0 -> Node0x5bb1030;
	Node0x5bae7b0:s1 -> Node0x5bb10c0;
	Node0x5bb1030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%21:\l21:                                               \l  %22 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %23 = sext i32 %22 to i64\l  %24 = mul nsw i64 %17, %23\l  %25 = getelementptr inbounds double, double addrspace(1)* %1, i64 %24\l  %26 = getelementptr inbounds double, double addrspace(1)* %3, i64 %24\l  %27 = icmp sgt i32 %22, 0\l  br i1 %27, label %28, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5bb1030:s0 -> Node0x5bb1b50;
	Node0x5bb1030:s1 -> Node0x5bb10c0;
	Node0x5bb1b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = and i64 %23, 7\l  %30 = icmp ult i32 %22, 8\l  br i1 %30, label %94, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5bb1b50:s0 -> Node0x5bb1e10;
	Node0x5bb1b50:s1 -> Node0x5bb1e60;
	Node0x5bb1e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = and i64 %23, -8\l  br label %33\l}"];
	Node0x5bb1e60 -> Node0x5bb05e0;
	Node0x5bb05e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%33:\l33:                                               \l  %34 = phi i64 [ 0, %31 ], [ %91, %33 ]\l  %35 = phi i64 [ 0, %31 ], [ %92, %33 ]\l  %36 = getelementptr inbounds double, double addrspace(1)* %25, i64 %34\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !11\l  %38 = getelementptr inbounds double, double addrspace(1)* %4, i64 %34\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !11\l  %40 = fadd contract double %37, %39\l  %41 = getelementptr inbounds double, double addrspace(1)* %26, i64 %34\l  store double %40, double addrspace(1)* %41, align 8, !tbaa !11\l  %42 = or i64 %34, 1\l  %43 = getelementptr inbounds double, double addrspace(1)* %25, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !11\l  %45 = getelementptr inbounds double, double addrspace(1)* %4, i64 %42\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !11\l  %47 = fadd contract double %44, %46\l  %48 = getelementptr inbounds double, double addrspace(1)* %26, i64 %42\l  store double %47, double addrspace(1)* %48, align 8, !tbaa !11\l  %49 = or i64 %34, 2\l  %50 = getelementptr inbounds double, double addrspace(1)* %25, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !11\l  %52 = getelementptr inbounds double, double addrspace(1)* %4, i64 %49\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !11\l  %54 = fadd contract double %51, %53\l  %55 = getelementptr inbounds double, double addrspace(1)* %26, i64 %49\l  store double %54, double addrspace(1)* %55, align 8, !tbaa !11\l  %56 = or i64 %34, 3\l  %57 = getelementptr inbounds double, double addrspace(1)* %25, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !11\l  %59 = getelementptr inbounds double, double addrspace(1)* %4, i64 %56\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !11\l  %61 = fadd contract double %58, %60\l  %62 = getelementptr inbounds double, double addrspace(1)* %26, i64 %56\l  store double %61, double addrspace(1)* %62, align 8, !tbaa !11\l  %63 = or i64 %34, 4\l  %64 = getelementptr inbounds double, double addrspace(1)* %25, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !11\l  %66 = getelementptr inbounds double, double addrspace(1)* %4, i64 %63\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !11\l  %68 = fadd contract double %65, %67\l  %69 = getelementptr inbounds double, double addrspace(1)* %26, i64 %63\l  store double %68, double addrspace(1)* %69, align 8, !tbaa !11\l  %70 = or i64 %34, 5\l  %71 = getelementptr inbounds double, double addrspace(1)* %25, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !11\l  %73 = getelementptr inbounds double, double addrspace(1)* %4, i64 %70\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !11\l  %75 = fadd contract double %72, %74\l  %76 = getelementptr inbounds double, double addrspace(1)* %26, i64 %70\l  store double %75, double addrspace(1)* %76, align 8, !tbaa !11\l  %77 = or i64 %34, 6\l  %78 = getelementptr inbounds double, double addrspace(1)* %25, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !11\l  %80 = getelementptr inbounds double, double addrspace(1)* %4, i64 %77\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !11\l  %82 = fadd contract double %79, %81\l  %83 = getelementptr inbounds double, double addrspace(1)* %26, i64 %77\l  store double %82, double addrspace(1)* %83, align 8, !tbaa !11\l  %84 = or i64 %34, 7\l  %85 = getelementptr inbounds double, double addrspace(1)* %25, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !11\l  %87 = getelementptr inbounds double, double addrspace(1)* %4, i64 %84\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !11\l  %89 = fadd contract double %86, %88\l  %90 = getelementptr inbounds double, double addrspace(1)* %26, i64 %84\l  store double %89, double addrspace(1)* %90, align 8, !tbaa !11\l  %91 = add nuw nsw i64 %34, 8\l  %92 = add nuw i64 %35, 8\l  %93 = icmp eq i64 %92, %32\l  br i1 %93, label %94, label %33, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bb05e0:s0 -> Node0x5bb1e10;
	Node0x5bb05e0:s1 -> Node0x5bb05e0;
	Node0x5bb1e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%94:\l94:                                               \l  %95 = phi i64 [ 0, %28 ], [ %91, %33 ]\l  %96 = icmp eq i64 %29, 0\l  br i1 %96, label %109, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5bb1e10:s0 -> Node0x5bb10c0;
	Node0x5bb1e10:s1 -> Node0x5bb5630;
	Node0x5bb5630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi i64 [ %106, %97 ], [ %95, %94 ]\l  %99 = phi i64 [ %107, %97 ], [ 0, %94 ]\l  %100 = getelementptr inbounds double, double addrspace(1)* %25, i64 %98\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !11\l  %102 = getelementptr inbounds double, double addrspace(1)* %4, i64 %98\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !11\l  %104 = fadd contract double %101, %103\l  %105 = getelementptr inbounds double, double addrspace(1)* %26, i64 %98\l  store double %104, double addrspace(1)* %105, align 8, !tbaa !11\l  %106 = add nuw nsw i64 %98, 1\l  %107 = add i64 %99, 1\l  %108 = icmp eq i64 %107, %29\l  br i1 %108, label %109, label %97, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5bb5630:s0 -> Node0x5bb10c0;
	Node0x5bb5630:s1 -> Node0x5bb5630;
	Node0x5bb10c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%109:\l109:                                              \l  ret void\l}"];
}
