digraph "CFG for '_Z24bilinearSamplingFromGridPfiiiiS_iiiiS_iiiiiiii' function" {
	label="CFG for '_Z24bilinearSamplingFromGridPfiiiiS_iiiiS_iiiiiiii' function";

	Node0x54f02c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%19:\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %21, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %20, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %29, %18\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %33 = icmp eq i32 %28, 0\l  br i1 %33, label %34, label %49\l|{<s0>T|<s1>F}}"];
	Node0x54f02c0:s0 -> Node0x54f0410;
	Node0x54f02c0:s1 -> Node0x54f39a0;
	Node0x54f0410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%34:\l34:                                               \l  %35 = lshr i32 %31, 1\l  %36 = add i32 %27, %35\l  %37 = icmp ult i32 %36, %18\l  br i1 %37, label %38, label %49\l|{<s0>T|<s1>F}}"];
	Node0x54f0410:s0 -> Node0x54f3cc0;
	Node0x54f0410:s1 -> Node0x54f39a0;
	Node0x54f3cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %32, %6\l  %40 = mul nsw i32 %22, %8\l  %41 = mul nsw i32 %29, %9\l  %42 = add i32 %39, %31\l  %43 = add i32 %42, %40\l  %44 = add i32 %43, %41\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %5, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ24bilinearSamplingFromGridPfiiiiS_iiiiS_iiiiiiiiE8gridData, i32 0, i32 %31\l  store float %47, float addrspace(3)* %48, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x54f3cc0 -> Node0x54f39a0;
	Node0x54f39a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %30, label %50, label %166\l|{<s0>T|<s1>F}}"];
	Node0x54f39a0:s0 -> Node0x54f5530;
	Node0x54f39a0:s1 -> Node0x54f55c0;
	Node0x54f5530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%50:\l50:                                               \l  %51 = shl nuw nsw i32 %28, 1\l  %52 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ24bilinearSamplingFromGridPfiiiiS_iiiiS_iiiiiiiiE8gridData, i32 0, i32 %51\l  %53 = load float, float addrspace(3)* %52, align 8, !tbaa !7\l  %54 = add nuw nsw i32 %51, 1\l  %55 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ24bilinearSamplingFromGridPfiiiiS_iiiiS_iiiiiiiiE8gridData, i32 0, i32 %54\l  %56 = load float, float addrspace(3)* %55, align 4, !tbaa !7\l  %57 = fadd contract float %56, 1.000000e+00\l  %58 = add nsw i32 %17, -1\l  %59 = sitofp i32 %58 to float\l  %60 = fmul contract float %57, %59\l  %61 = fmul contract float %60, 5.000000e-01\l  %62 = tail call float @llvm.floor.f32(float %61)\l  %63 = fptosi float %62 to i32\l  %64 = sitofp i32 %63 to float\l  %65 = fsub contract float %64, %61\l  %66 = fadd contract float %65, 1.000000e+00\l  %67 = fadd contract float %53, 1.000000e+00\l  %68 = add nsw i32 %16, -1\l  %69 = sitofp i32 %68 to float\l  %70 = fmul contract float %67, %69\l  %71 = fmul contract float %70, 5.000000e-01\l  %72 = tail call float @llvm.floor.f32(float %71)\l  %73 = fptosi float %72 to i32\l  %74 = sitofp i32 %73 to float\l  %75 = fsub contract float %74, %71\l  %76 = fadd contract float %75, 1.000000e+00\l  %77 = mul nsw i32 %32, %11\l  %78 = mul nsw i32 %22, %13\l  %79 = add nsw i32 %78, %77\l  %80 = mul nsw i32 %29, %14\l  %81 = add nsw i32 %79, %80\l  %82 = mul nsw i32 %32, %1\l  %83 = mul nsw i32 %73, %3\l  %84 = add nsw i32 %83, %82\l  %85 = mul nsw i32 %63, %4\l  %86 = add nsw i32 %84, %85\l  %87 = add nsw i32 %86, %3\l  %88 = icmp sgt i32 %63, -1\l  %89 = icmp slt i32 %63, %17\l  %90 = select i1 %88, i1 %89, i1 false\l  %91 = icmp sgt i32 %73, -1\l  %92 = icmp slt i32 %73, %16\l  %93 = select i1 %90, i1 %91, i1 false\l  %94 = select i1 %93, i1 %92, i1 false\l  %95 = icmp sgt i32 %63, -2\l  %96 = icmp sgt i32 %58, %63\l  %97 = select i1 %95, i1 %96, i1 false\l  %98 = select i1 %97, i1 %91, i1 false\l  %99 = select i1 %98, i1 %92, i1 false\l  %100 = icmp sgt i32 %73, -2\l  %101 = icmp sgt i32 %68, %73\l  %102 = select i1 %90, i1 %100, i1 false\l  %103 = select i1 %102, i1 %101, i1 false\l  %104 = select i1 %97, i1 %100, i1 false\l  %105 = select i1 %104, i1 %101, i1 false\l  %106 = icmp slt i32 %31, %15\l  br i1 %106, label %107, label %166\l|{<s0>T|<s1>F}}"];
	Node0x54f5530:s0 -> Node0x54f8610;
	Node0x54f5530:s1 -> Node0x54f55c0;
	Node0x54f8610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%107:\l107:                                              \l  %108 = fmul contract float %76, %66\l  %109 = fsub contract float 1.000000e+00, %66\l  %110 = fmul contract float %76, %109\l  %111 = fsub contract float 1.000000e+00, %76\l  %112 = fmul contract float %66, %111\l  %113 = fmul contract float %111, %109\l  %114 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %115 = bitcast i8 addrspace(4)* %114 to i16 addrspace(4)*\l  %116 = load i16, i16 addrspace(4)* %115, align 4, !range !4, !invariant.load\l... !5\l  %117 = zext i16 %116 to i32\l  br label %118\l}"];
	Node0x54f8610 -> Node0x54f92e0;
	Node0x54f92e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = phi i32 [ %31, %107 ], [ %164, %152 ]\l  %120 = phi float [ 0.000000e+00, %107 ], [ %130, %152 ]\l  %121 = phi float [ 0.000000e+00, %107 ], [ %138, %152 ]\l  %122 = phi float [ 0.000000e+00, %107 ], [ %153, %152 ]\l  %123 = phi float [ 0.000000e+00, %107 ], [ %145, %152 ]\l  br i1 %94, label %124, label %129\l|{<s0>T|<s1>F}}"];
	Node0x54f92e0:s0 -> Node0x54f9a10;
	Node0x54f92e0:s1 -> Node0x54f9aa0;
	Node0x54f9a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%124:\l124:                                              \l  %125 = add nsw i32 %119, %86\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %0, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !7\l  br label %129\l}"];
	Node0x54f9a10 -> Node0x54f9aa0;
	Node0x54f9aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%129:\l129:                                              \l  %130 = phi float [ %128, %124 ], [ %120, %118 ]\l  br i1 %99, label %131, label %137\l|{<s0>T|<s1>F}}"];
	Node0x54f9aa0:s0 -> Node0x54f6bc0;
	Node0x54f9aa0:s1 -> Node0x54f6c10;
	Node0x54f6bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%131:\l131:                                              \l  %132 = add i32 %119, %86\l  %133 = add i32 %132, %4\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  br label %137\l}"];
	Node0x54f6bc0 -> Node0x54f6c10;
	Node0x54f6c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi float [ %136, %131 ], [ %121, %129 ]\l  br i1 %103, label %139, label %144\l|{<s0>T|<s1>F}}"];
	Node0x54f6c10:s0 -> Node0x54fa830;
	Node0x54f6c10:s1 -> Node0x54fa880;
	Node0x54fa830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%139:\l139:                                              \l  %140 = add nsw i32 %119, %87\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7\l  br label %144\l}"];
	Node0x54fa830 -> Node0x54fa880;
	Node0x54fa880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%144:\l144:                                              \l  %145 = phi float [ %143, %139 ], [ %123, %137 ]\l  br i1 %105, label %146, label %152\l|{<s0>T|<s1>F}}"];
	Node0x54fa880:s0 -> Node0x54facb0;
	Node0x54fa880:s1 -> Node0x54f9410;
	Node0x54facb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%146:\l146:                                              \l  %147 = add i32 %119, %87\l  %148 = add i32 %147, %4\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !7\l  br label %152\l}"];
	Node0x54facb0 -> Node0x54f9410;
	Node0x54f9410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%152:\l152:                                              \l  %153 = phi float [ %151, %146 ], [ %122, %144 ]\l  %154 = fmul contract float %108, %130\l  %155 = fmul contract float %110, %138\l  %156 = fadd contract float %154, %155\l  %157 = fmul contract float %112, %145\l  %158 = fadd contract float %156, %157\l  %159 = fmul contract float %113, %153\l  %160 = fadd contract float %158, %159\l  %161 = add nsw i32 %81, %119\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds float, float addrspace(1)* %10, i64 %162\l  store float %160, float addrspace(1)* %163, align 4, !tbaa !7\l  %164 = add i32 %119, %117\l  %165 = icmp slt i32 %164, %15\l  br i1 %165, label %118, label %166, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x54f9410:s0 -> Node0x54f92e0;
	Node0x54f9410:s1 -> Node0x54f55c0;
	Node0x54f55c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%166:\l166:                                              \l  ret void\l}"];
}
