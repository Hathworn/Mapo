digraph "CFG for '_Z17kMultiSoftmaxCostPfS_S_S_S_S_iii' function" {
	label="CFG for '_Z17kMultiSoftmaxCostPfS_S_S_S_S_iii' function";

	Node0x5add2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl i32 %10, 7\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %6\l  br i1 %14, label %15, label %185\l|{<s0>T|<s1>F}}"];
	Node0x5add2e0:s0 -> Node0x5adf5d0;
	Node0x5add2e0:s1 -> Node0x5adf660;
	Node0x5adf5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %19 = fptosi float %18 to i32\l  %20 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %22 = mul nsw i32 %19, %6\l  %23 = add nsw i32 %22, %13\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %27 = tail call float @llvm.log.f32(float %26)\l  %28 = getelementptr inbounds float, float addrspace(1)* %3, i64 %16\l  store float %27, float addrspace(1)* %28, align 4, !tbaa !5\l  %29 = icmp sgt i32 %7, 0\l  br i1 %29, label %30, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5adf5d0:s0 -> Node0x5ae1120;
	Node0x5adf5d0:s1 -> Node0x5ae11b0;
	Node0x5ae1120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%30:\l30:                                               \l  %31 = and i32 %7, 7\l  %32 = icmp ult i32 %7, 8\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5ae1120:s0 -> Node0x5adf810;
	Node0x5ae1120:s1 -> Node0x5adf860;
	Node0x5adf860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%33:\l33:                                               \l  %34 = and i32 %7, -8\l  br label %67\l}"];
	Node0x5adf860 -> Node0x5ae1790;
	Node0x5adf810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%35:\l35:                                               \l  %36 = phi i32 [ undef, %30 ], [ %163, %67 ]\l  %37 = phi i32 [ undef, %30 ], [ %166, %67 ]\l  %38 = phi i32 [ 0, %30 ], [ %163, %67 ]\l  %39 = phi i32 [ 0, %30 ], [ %167, %67 ]\l  %40 = phi i32 [ 0, %30 ], [ %166, %67 ]\l  %41 = icmp eq i32 %31, 0\l  br i1 %41, label %61, label %42\l|{<s0>T|<s1>F}}"];
	Node0x5adf810:s0 -> Node0x5ae11b0;
	Node0x5adf810:s1 -> Node0x5ae2180;
	Node0x5ae2180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %54, %42 ], [ %38, %35 ]\l  %44 = phi i32 [ %58, %42 ], [ %39, %35 ]\l  %45 = phi i32 [ %57, %42 ], [ %40, %35 ]\l  %46 = phi i32 [ %59, %42 ], [ 0, %35 ]\l  %47 = mul nsw i32 %44, %6\l  %48 = add nsw i32 %47, %13\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5\l  %52 = fcmp contract ogt float %51, %26\l  %53 = zext i1 %52 to i32\l  %54 = add nuw nsw i32 %43, %53\l  %55 = fcmp contract oeq float %51, %26\l  %56 = zext i1 %55 to i32\l  %57 = add nuw nsw i32 %45, %56\l  %58 = add nuw nsw i32 %44, 1\l  %59 = add i32 %46, 1\l  %60 = icmp eq i32 %59, %31\l  br i1 %60, label %61, label %42, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5ae2180:s0 -> Node0x5ae11b0;
	Node0x5ae2180:s1 -> Node0x5ae2180;
	Node0x5ae11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %15 ], [ %37, %35 ], [ %57, %42 ]\l  %63 = phi i32 [ 0, %15 ], [ %36, %35 ], [ %54, %42 ]\l  %64 = sub nsw i32 %8, %63\l  %65 = sitofp i32 %64 to float\l  %66 = icmp slt i32 %64, 1\l  br i1 %66, label %175, label %170\l|{<s0>T|<s1>F}}"];
	Node0x5ae11b0:s0 -> Node0x5ae1540;
	Node0x5ae11b0:s1 -> Node0x5ae1590;
	Node0x5ae1790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%67:\l67:                                               \l  %68 = phi i32 [ 0, %33 ], [ %163, %67 ]\l  %69 = phi i32 [ 0, %33 ], [ %167, %67 ]\l  %70 = phi i32 [ 0, %33 ], [ %166, %67 ]\l  %71 = phi i32 [ 0, %33 ], [ %168, %67 ]\l  %72 = mul nsw i32 %69, %6\l  %73 = add nsw i32 %72, %13\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = fcmp contract ogt float %76, %26\l  %78 = zext i1 %77 to i32\l  %79 = add nuw nsw i32 %68, %78\l  %80 = fcmp contract oeq float %76, %26\l  %81 = zext i1 %80 to i32\l  %82 = add nuw nsw i32 %70, %81\l  %83 = or i32 %69, 1\l  %84 = mul nsw i32 %83, %6\l  %85 = add nsw i32 %84, %13\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !5\l  %89 = fcmp contract ogt float %88, %26\l  %90 = zext i1 %89 to i32\l  %91 = add nuw nsw i32 %79, %90\l  %92 = fcmp contract oeq float %88, %26\l  %93 = zext i1 %92 to i32\l  %94 = add nuw nsw i32 %82, %93\l  %95 = or i32 %69, 2\l  %96 = mul nsw i32 %95, %6\l  %97 = add nsw i32 %96, %13\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !5\l  %101 = fcmp contract ogt float %100, %26\l  %102 = zext i1 %101 to i32\l  %103 = add nuw nsw i32 %91, %102\l  %104 = fcmp contract oeq float %100, %26\l  %105 = zext i1 %104 to i32\l  %106 = add nuw nsw i32 %94, %105\l  %107 = or i32 %69, 3\l  %108 = mul nsw i32 %107, %6\l  %109 = add nsw i32 %108, %13\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !5\l  %113 = fcmp contract ogt float %112, %26\l  %114 = zext i1 %113 to i32\l  %115 = add nuw nsw i32 %103, %114\l  %116 = fcmp contract oeq float %112, %26\l  %117 = zext i1 %116 to i32\l  %118 = add nuw nsw i32 %106, %117\l  %119 = or i32 %69, 4\l  %120 = mul nsw i32 %119, %6\l  %121 = add nsw i32 %120, %13\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !5\l  %125 = fcmp contract ogt float %124, %26\l  %126 = zext i1 %125 to i32\l  %127 = add nuw nsw i32 %115, %126\l  %128 = fcmp contract oeq float %124, %26\l  %129 = zext i1 %128 to i32\l  %130 = add nuw nsw i32 %118, %129\l  %131 = or i32 %69, 5\l  %132 = mul nsw i32 %131, %6\l  %133 = add nsw i32 %132, %13\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !5\l  %137 = fcmp contract ogt float %136, %26\l  %138 = zext i1 %137 to i32\l  %139 = add nuw nsw i32 %127, %138\l  %140 = fcmp contract oeq float %136, %26\l  %141 = zext i1 %140 to i32\l  %142 = add nuw nsw i32 %130, %141\l  %143 = or i32 %69, 6\l  %144 = mul nsw i32 %143, %6\l  %145 = add nsw i32 %144, %13\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !5\l  %149 = fcmp contract ogt float %148, %26\l  %150 = zext i1 %149 to i32\l  %151 = add nuw nsw i32 %139, %150\l  %152 = fcmp contract oeq float %148, %26\l  %153 = zext i1 %152 to i32\l  %154 = add nuw nsw i32 %142, %153\l  %155 = or i32 %69, 7\l  %156 = mul nsw i32 %155, %6\l  %157 = add nsw i32 %156, %13\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %0, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !5\l  %161 = fcmp contract ogt float %160, %26\l  %162 = zext i1 %161 to i32\l  %163 = add nuw nsw i32 %151, %162\l  %164 = fcmp contract oeq float %160, %26\l  %165 = zext i1 %164 to i32\l  %166 = add nuw nsw i32 %154, %165\l  %167 = add nuw nsw i32 %69, 8\l  %168 = add i32 %71, 8\l  %169 = icmp eq i32 %168, %34\l  br i1 %169, label %35, label %67, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5ae1790:s0 -> Node0x5adf810;
	Node0x5ae1790:s1 -> Node0x5ae1790;
	Node0x5ae1590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%170:\l170:                                              \l  %171 = icmp sgt i32 %62, %64\l  br i1 %171, label %172, label %175\l|{<s0>T|<s1>F}}"];
	Node0x5ae1590:s0 -> Node0x5ae7340;
	Node0x5ae1590:s1 -> Node0x5ae1540;
	Node0x5ae7340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%172:\l172:                                              \l  %173 = sitofp i32 %62 to float\l  %174 = fdiv contract float %65, %173\l  br label %175\l}"];
	Node0x5ae7340 -> Node0x5ae1540;
	Node0x5ae1540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%175:\l175:                                              \l  %176 = phi contract float [ 0.000000e+00, %61 ], [ %174, %172 ], [\l... 1.000000e+00, %170 ]\l  %177 = getelementptr inbounds float, float addrspace(1)* %5, i64 %16\l  store float %176, float addrspace(1)* %177, align 4, !tbaa !5\l  %178 = fcmp contract une float %26, %21\l  br i1 %178, label %182, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5ae1540:s0 -> Node0x5ae8250;
	Node0x5ae1540:s1 -> Node0x5ae82a0;
	Node0x5ae82a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%179:\l179:                                              \l  %180 = sitofp i32 %62 to float\l  %181 = fdiv contract float 1.000000e+00, %180\l  br label %182\l}"];
	Node0x5ae82a0 -> Node0x5ae8250;
	Node0x5ae8250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%182:\l182:                                              \l  %183 = phi contract float [ %181, %179 ], [ 0.000000e+00, %175 ]\l  %184 = getelementptr inbounds float, float addrspace(1)* %4, i64 %16\l  store float %183, float addrspace(1)* %184, align 4, !tbaa !5\l  br label %185\l}"];
	Node0x5ae8250 -> Node0x5adf660;
	Node0x5adf660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%185:\l185:                                              \l  ret void\l}"];
}
