digraph "CFG for '_Z15laplacianFilterPhS_jj' function" {
	label="CFG for '_Z15laplacianFilterPhS_jj' function";

	Node0x556b7d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp sgt i32 %13, 0\l  br i1 %22, label %23, label %63\l|{<s0>T|<s1>F}}"];
	Node0x556b7d0:s0 -> Node0x556f130;
	Node0x556b7d0:s1 -> Node0x556f1c0;
	Node0x556f130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%23:\l23:                                               \l  %24 = add i32 %2, -1\l  %25 = icmp ult i32 %13, %24\l  %26 = icmp sgt i32 %21, 0\l  %27 = select i1 %25, i1 %26, i1 false\l  %28 = add i32 %3, -1\l  %29 = icmp ult i32 %21, %28\l  %30 = select i1 %27, i1 %29, i1 false\l  br i1 %30, label %31, label %63\l|{<s0>T|<s1>F}}"];
	Node0x556f130:s0 -> Node0x556f790;
	Node0x556f130:s1 -> Node0x556f1c0;
	Node0x556f790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%31:\l31:                                               \l  %32 = add nsw i32 %21, -1\l  %33 = mul i32 %32, %2\l  %34 = add i32 %33, %13\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %38 = mul i32 %21, %2\l  %39 = add i32 %38, %13\l  %40 = add i32 %39, -1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %41\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %44 = add i8 %37, %43\l  %45 = zext i32 %39 to i64\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %45\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %48 = shl i8 %47, 2\l  %49 = add i32 %39, 1\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = add i8 %44, %52\l  %54 = add nuw nsw i32 %21, 1\l  %55 = mul i32 %54, %2\l  %56 = add i32 %55, %13\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %60 = add i8 %53, %59\l  %61 = sub i8 %48, %60\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %45\l  store i8 %61, i8 addrspace(1)* %62, align 1, !tbaa !7\l  br label %63\l}"];
	Node0x556f790 -> Node0x556f1c0;
	Node0x556f1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
