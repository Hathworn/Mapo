digraph "CFG for '_Z9boxFilterPhS_jji' function" {
	label="CFG for '_Z9boxFilterPhS_jji' function";

	Node0x5180fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = icmp sgt i32 %14, 0\l  br i1 %23, label %24, label %118\l|{<s0>T|<s1>F}}"];
	Node0x5180fc0:s0 -> Node0x51848f0;
	Node0x5180fc0:s1 -> Node0x5184980;
	Node0x51848f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  %25 = add i32 %2, -1\l  %26 = icmp ult i32 %14, %25\l  %27 = icmp sgt i32 %22, 0\l  %28 = select i1 %26, i1 %27, i1 false\l  %29 = add i32 %3, -1\l  %30 = icmp ult i32 %22, %29\l  %31 = select i1 %28, i1 %30, i1 false\l  %32 = icmp sgt i32 %4, 0\l  %33 = select i1 %31, i1 %32, i1 false\l  br i1 %33, label %34, label %118\l|{<s0>T|<s1>F}}"];
	Node0x51848f0:s0 -> Node0x5183120;
	Node0x51848f0:s1 -> Node0x5184980;
	Node0x5183120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  %35 = mul i32 %22, %2\l  %36 = add i32 %35, %14\l  %37 = mul i32 %36, %4\l  %38 = add nuw nsw i32 %22, 1\l  %39 = mul i32 %38, %2\l  %40 = add i32 %39, %14\l  %41 = add i32 %40, -1\l  %42 = mul i32 %41, %4\l  %43 = add nsw i32 %22, -1\l  %44 = mul i32 %43, %2\l  %45 = add i32 %44, %14\l  %46 = add i32 %45, -1\l  %47 = mul i32 %46, %4\l  %48 = mul i32 %45, %4\l  %49 = add i32 %45, 1\l  %50 = mul i32 %49, %4\l  %51 = add i32 %36, -1\l  %52 = mul i32 %51, %4\l  %53 = add i32 %36, 1\l  %54 = mul i32 %53, %4\l  %55 = mul i32 %40, %4\l  %56 = add i32 %40, 1\l  %57 = mul i32 %56, %4\l  br label %58\l}"];
	Node0x5183120 -> Node0x5185fc0;
	Node0x5185fc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %34 ], [ %116, %58 ]\l  %60 = add i32 %47, %59\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %61\l  %63 = load i8, i8 addrspace(1)* %62, align 1, !tbaa !7\l  %64 = uitofp i8 %63 to float\l  %65 = add i32 %48, %59\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %66\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa !7\l  %69 = uitofp i8 %68 to float\l  %70 = fadd contract float %64, %69\l  %71 = add i32 %50, %59\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %72\l  %74 = load i8, i8 addrspace(1)* %73, align 1, !tbaa !7\l  %75 = uitofp i8 %74 to float\l  %76 = fadd contract float %70, %75\l  %77 = add i32 %52, %59\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !7\l  %81 = uitofp i8 %80 to float\l  %82 = fadd contract float %76, %81\l  %83 = add i32 %37, %59\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %84\l  %86 = load i8, i8 addrspace(1)* %85, align 1, !tbaa !7\l  %87 = uitofp i8 %86 to float\l  %88 = fadd contract float %82, %87\l  %89 = add i32 %54, %59\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %90\l  %92 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !7\l  %93 = uitofp i8 %92 to float\l  %94 = fadd contract float %88, %93\l  %95 = add i32 %42, %59\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %96\l  %98 = load i8, i8 addrspace(1)* %97, align 1, !tbaa !7\l  %99 = uitofp i8 %98 to float\l  %100 = fadd contract float %94, %99\l  %101 = add i32 %55, %59\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %102\l  %104 = load i8, i8 addrspace(1)* %103, align 1, !tbaa !7\l  %105 = uitofp i8 %104 to float\l  %106 = fadd contract float %100, %105\l  %107 = add i32 %57, %59\l  %108 = zext i32 %107 to i64\l  %109 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %108\l  %110 = load i8, i8 addrspace(1)* %109, align 1, !tbaa !7\l  %111 = uitofp i8 %110 to float\l  %112 = fadd contract float %106, %111\l  %113 = fdiv contract float %112, 9.000000e+00\l  %114 = fptoui float %113 to i8\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %84\l  store i8 %114, i8 addrspace(1)* %115, align 1, !tbaa !7\l  %116 = add nuw nsw i32 %59, 1\l  %117 = icmp eq i32 %116, %4\l  br i1 %117, label %118, label %58, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5185fc0:s0 -> Node0x5184980;
	Node0x5185fc0:s1 -> Node0x5185fc0;
	Node0x5184980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%118:\l118:                                              \l  ret void\l}"];
}
