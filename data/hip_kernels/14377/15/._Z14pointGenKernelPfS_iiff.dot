digraph "CFG for '_Z14pointGenKernelPfS_iiff' function" {
	label="CFG for '_Z14pointGenKernelPfS_iiff' function";

	Node0x55118c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = udiv i32 %7, %2\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul nsw i32 %8, %2\l  %15 = sub i32 %7, %14\l  %16 = mul i32 %15, %13\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %3\l  %28 = icmp slt i32 %26, %3\l  %29 = select i1 %27, i1 %28, i1 false\l  %30 = icmp slt i32 %8, %3\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %61\l|{<s0>T|<s1>F}}"];
	Node0x55118c0:s0 -> Node0x55155d0;
	Node0x55118c0:s1 -> Node0x5515660;
	Node0x55155d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sitofp i32 %18 to float\l  %34 = fmul contract float %33, %5\l  %35 = fadd contract float %34, %4\l  %36 = sitofp i32 %26 to float\l  %37 = fmul contract float %36, %5\l  %38 = fadd contract float %37, %4\l  %39 = sitofp i32 %8 to float\l  %40 = fmul contract float %39, %5\l  %41 = fadd contract float %40, %4\l  %42 = mul i32 %8, %3\l  %43 = add i32 %26, %42\l  %44 = mul i32 %43, %3\l  %45 = add i32 %44, %18\l  %46 = mul nsw i32 %45, 3\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %35, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nsw i32 %46, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %38, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = add nsw i32 %46, 2\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  store float %41, float addrspace(1)* %54, align 4, !tbaa !7\l  %55 = fadd contract float %35, -1.000000e+01\l  %56 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  store float %55, float addrspace(1)* %56, align 4, !tbaa !7\l  %57 = fadd contract float %38, -1.000000e+01\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = fadd contract float %41, -1.000000e+01\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  store float %59, float addrspace(1)* %60, align 4, !tbaa !7\l  br label %61\l}"];
	Node0x55155d0 -> Node0x5515660;
	Node0x5515660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
