digraph "CFG for '_Z20weight_division_calcPfS_S_Pbm' function" {
	label="CFG for '_Z20weight_division_calcPfS_S_Pbm' function";

	Node0x47392c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = sext i32 %17 to i64\l  %19 = icmp ult i64 %18, %4\l  br i1 %19, label %20, label %546\l|{<s0>T|<s1>F}}"];
	Node0x47392c0:s0 -> Node0x473b5b0;
	Node0x47392c0:s1 -> Node0x473b640;
	Node0x473b5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%20:\l20:                                               \l  %21 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 24\l  %23 = bitcast i8 addrspace(4)* %22 to i64 addrspace(4)*\l  br label %24\l}"];
	Node0x473b5b0 -> Node0x473ba30;
	Node0x473ba30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%24:\l24:                                               \l  %25 = phi i64 [ %18, %20 ], [ %544, %536 ]\l  %26 = phi i32 [ %17, %20 ], [ %543, %536 ]\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %25\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !16, !range !20\l  %29 = icmp eq i8 %28, 0\l  br i1 %29, label %536, label %30\l|{<s0>T|<s1>F}}"];
	Node0x473ba30:s0 -> Node0x473bb60;
	Node0x473ba30:s1 -> Node0x473c280;
	Node0x473c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%30:\l30:                                               \l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !21\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %25\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !21\l  %35 = fsub contract float %32, %34\l  %36 = fpext float %35 to double\l  %37 = fcmp contract olt double %36, 1.000000e-02\l  br i1 %37, label %38, label %488\l|{<s0>T|<s1>F}}"];
	Node0x473c280:s0 -> Node0x473da00;
	Node0x473c280:s1 -> Node0x473da90;
	Node0x473da00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%38:\l38:                                               \l  %39 = load i64, i64 addrspace(4)* %23, align 8, !tbaa !23\l  %40 = inttoptr i64 %39 to i8 addrspace(1)*\l  %41 = addrspacecast i8 addrspace(1)* %40 to i8*\l  %42 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %43 = extractelement \<2 x i64\> %42, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([62 x i8], [62 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %44, label %48\l|{<s0>T|<s1>F}}"];
	Node0x473da00:s0 -> Node0x473e670;
	Node0x473da00:s1 -> Node0x473f060;
	Node0x473e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%44:\l44:                                               \l  %45 = and i64 %43, -227\l  %46 = or i64 %45, 34\l  %47 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %46, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %488\l}"];
	Node0x473e670 -> Node0x473da90;
	Node0x473f060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%48:\l48:                                               \l  %49 = and i64 %43, -3\l  %50 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %49, i64 0\l  br label %51\l}"];
	Node0x473f060 -> Node0x473fda0;
	Node0x473fda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%51:\l51:                                               \l  %52 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([62 x i8], [62 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([62 x i8], [62 x i8] addrspace(4)*\l... @.str, i64 0, i64 61) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([62 x i8]* addrspacecast ([62 x i8] addrspace(4)* @.str to [62 x i8]*) to\l... i64)), i64 1))), %48 ], [ %485, %477 ]\l  %53 = phi i8 addrspace(4)* [ getelementptr inbounds ([62 x i8], [62 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %48 ], [ %486, %477 ]\l  %54 = phi \<2 x i64\> [ %50, %48 ], [ %484, %477 ]\l  %55 = icmp ugt i64 %52, 56\l  %56 = extractelement \<2 x i64\> %54, i64 0\l  %57 = or i64 %56, 2\l  %58 = insertelement \<2 x i64\> poison, i64 %57, i64 0\l  %59 = select i1 %55, \<2 x i64\> %54, \<2 x i64\> %58\l  %60 = tail call i64 @llvm.umin.i64(i64 %52, i64 56)\l  %61 = trunc i64 %60 to i32\l  %62 = extractelement \<2 x i64\> %59, i64 0\l  %63 = icmp ugt i32 %61, 7\l  br i1 %63, label %66, label %64\l|{<s0>T|<s1>F}}"];
	Node0x473fda0:s0 -> Node0x4740d10;
	Node0x473fda0:s1 -> Node0x4740da0;
	Node0x4740da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%64:\l64:                                               \l  %65 = icmp eq i32 %61, 0\l  br i1 %65, label %119, label %106\l|{<s0>T|<s1>F}}"];
	Node0x4740da0:s0 -> Node0x473c690;
	Node0x4740da0:s1 -> Node0x473c6e0;
	Node0x4740d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%66:\l66:                                               \l  %67 = load i8, i8 addrspace(4)* %53, align 1, !tbaa !24\l  %68 = zext i8 %67 to i64\l  %69 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 1\l  %70 = load i8, i8 addrspace(4)* %69, align 1, !tbaa !24\l  %71 = zext i8 %70 to i64\l  %72 = shl nuw nsw i64 %71, 8\l  %73 = or i64 %72, %68\l  %74 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 2\l  %75 = load i8, i8 addrspace(4)* %74, align 1, !tbaa !24\l  %76 = zext i8 %75 to i64\l  %77 = shl nuw nsw i64 %76, 16\l  %78 = or i64 %73, %77\l  %79 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 3\l  %80 = load i8, i8 addrspace(4)* %79, align 1, !tbaa !24\l  %81 = zext i8 %80 to i64\l  %82 = shl nuw nsw i64 %81, 24\l  %83 = or i64 %78, %82\l  %84 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 4\l  %85 = load i8, i8 addrspace(4)* %84, align 1, !tbaa !24\l  %86 = zext i8 %85 to i64\l  %87 = shl nuw nsw i64 %86, 32\l  %88 = or i64 %83, %87\l  %89 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 5\l  %90 = load i8, i8 addrspace(4)* %89, align 1, !tbaa !24\l  %91 = zext i8 %90 to i64\l  %92 = shl nuw nsw i64 %91, 40\l  %93 = or i64 %88, %92\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 6\l  %95 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !24\l  %96 = zext i8 %95 to i64\l  %97 = shl nuw nsw i64 %96, 48\l  %98 = or i64 %93, %97\l  %99 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 7\l  %100 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !24\l  %101 = zext i8 %100 to i64\l  %102 = shl nuw i64 %101, 56\l  %103 = or i64 %98, %102\l  %104 = add nsw i32 %61, -8\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 8\l  br label %119\l}"];
	Node0x4740d10 -> Node0x473c690;
	Node0x473c6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %117, %106 ], [ 0, %64 ]\l  %108 = phi i64 [ %116, %106 ], [ 0, %64 ]\l  %109 = zext i32 %107 to i64\l  %110 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 %109\l  %111 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !24\l  %112 = zext i8 %111 to i64\l  %113 = shl i32 %107, 3\l  %114 = zext i32 %113 to i64\l  %115 = shl nuw i64 %112, %114\l  %116 = or i64 %115, %108\l  %117 = add nuw nsw i32 %107, 1\l  %118 = icmp eq i32 %117, %61\l  br i1 %118, label %119, label %106, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x473c6e0:s0 -> Node0x473c690;
	Node0x473c6e0:s1 -> Node0x473c6e0;
	Node0x473c690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%119:\l119:                                              \l  %120 = phi i8 addrspace(4)* [ %105, %66 ], [ %53, %64 ], [ %53, %106 ]\l  %121 = phi i32 [ %104, %66 ], [ 0, %64 ], [ 0, %106 ]\l  %122 = phi i64 [ %103, %66 ], [ 0, %64 ], [ %116, %106 ]\l  %123 = icmp ugt i32 %121, 7\l  br i1 %123, label %126, label %124\l|{<s0>T|<s1>F}}"];
	Node0x473c690:s0 -> Node0x4743cd0;
	Node0x473c690:s1 -> Node0x4743d20;
	Node0x4743d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%124:\l124:                                              \l  %125 = icmp eq i32 %121, 0\l  br i1 %125, label %179, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4743d20:s0 -> Node0x4743ef0;
	Node0x4743d20:s1 -> Node0x4743f40;
	Node0x4743cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%126:\l126:                                              \l  %127 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !24\l  %128 = zext i8 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 1\l  %130 = load i8, i8 addrspace(4)* %129, align 1, !tbaa !24\l  %131 = zext i8 %130 to i64\l  %132 = shl nuw nsw i64 %131, 8\l  %133 = or i64 %132, %128\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 2\l  %135 = load i8, i8 addrspace(4)* %134, align 1, !tbaa !24\l  %136 = zext i8 %135 to i64\l  %137 = shl nuw nsw i64 %136, 16\l  %138 = or i64 %133, %137\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 3\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !24\l  %141 = zext i8 %140 to i64\l  %142 = shl nuw nsw i64 %141, 24\l  %143 = or i64 %138, %142\l  %144 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 4\l  %145 = load i8, i8 addrspace(4)* %144, align 1, !tbaa !24\l  %146 = zext i8 %145 to i64\l  %147 = shl nuw nsw i64 %146, 32\l  %148 = or i64 %143, %147\l  %149 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 5\l  %150 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !24\l  %151 = zext i8 %150 to i64\l  %152 = shl nuw nsw i64 %151, 40\l  %153 = or i64 %148, %152\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 6\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !24\l  %156 = zext i8 %155 to i64\l  %157 = shl nuw nsw i64 %156, 48\l  %158 = or i64 %153, %157\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 7\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !24\l  %161 = zext i8 %160 to i64\l  %162 = shl nuw i64 %161, 56\l  %163 = or i64 %158, %162\l  %164 = add nsw i32 %121, -8\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 8\l  br label %179\l}"];
	Node0x4743cd0 -> Node0x4743ef0;
	Node0x4743f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%166:\l166:                                              \l  %167 = phi i32 [ %177, %166 ], [ 0, %124 ]\l  %168 = phi i64 [ %176, %166 ], [ 0, %124 ]\l  %169 = zext i32 %167 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %120, i64 %169\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !24\l  %172 = zext i8 %171 to i64\l  %173 = shl i32 %167, 3\l  %174 = zext i32 %173 to i64\l  %175 = shl nuw i64 %172, %174\l  %176 = or i64 %175, %168\l  %177 = add nuw nsw i32 %167, 1\l  %178 = icmp eq i32 %177, %121\l  br i1 %178, label %179, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4743f40:s0 -> Node0x4743ef0;
	Node0x4743f40:s1 -> Node0x4743f40;
	Node0x4743ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%179:\l179:                                              \l  %180 = phi i8 addrspace(4)* [ %165, %126 ], [ %120, %124 ], [ %120, %166 ]\l  %181 = phi i32 [ %164, %126 ], [ 0, %124 ], [ 0, %166 ]\l  %182 = phi i64 [ %163, %126 ], [ 0, %124 ], [ %176, %166 ]\l  %183 = icmp ugt i32 %181, 7\l  br i1 %183, label %186, label %184\l|{<s0>T|<s1>F}}"];
	Node0x4743ef0:s0 -> Node0x4746420;
	Node0x4743ef0:s1 -> Node0x4746470;
	Node0x4746470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%184:\l184:                                              \l  %185 = icmp eq i32 %181, 0\l  br i1 %185, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x4746470:s0 -> Node0x4746600;
	Node0x4746470:s1 -> Node0x4746650;
	Node0x4746420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%186:\l186:                                              \l  %187 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !24\l  %188 = zext i8 %187 to i64\l  %189 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 1\l  %190 = load i8, i8 addrspace(4)* %189, align 1, !tbaa !24\l  %191 = zext i8 %190 to i64\l  %192 = shl nuw nsw i64 %191, 8\l  %193 = or i64 %192, %188\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 2\l  %195 = load i8, i8 addrspace(4)* %194, align 1, !tbaa !24\l  %196 = zext i8 %195 to i64\l  %197 = shl nuw nsw i64 %196, 16\l  %198 = or i64 %193, %197\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 3\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !24\l  %201 = zext i8 %200 to i64\l  %202 = shl nuw nsw i64 %201, 24\l  %203 = or i64 %198, %202\l  %204 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 4\l  %205 = load i8, i8 addrspace(4)* %204, align 1, !tbaa !24\l  %206 = zext i8 %205 to i64\l  %207 = shl nuw nsw i64 %206, 32\l  %208 = or i64 %203, %207\l  %209 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 5\l  %210 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !24\l  %211 = zext i8 %210 to i64\l  %212 = shl nuw nsw i64 %211, 40\l  %213 = or i64 %208, %212\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 6\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !24\l  %216 = zext i8 %215 to i64\l  %217 = shl nuw nsw i64 %216, 48\l  %218 = or i64 %213, %217\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 7\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !24\l  %221 = zext i8 %220 to i64\l  %222 = shl nuw i64 %221, 56\l  %223 = or i64 %218, %222\l  %224 = add nsw i32 %181, -8\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 8\l  br label %239\l}"];
	Node0x4746420 -> Node0x4746600;
	Node0x4746650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%226:\l226:                                              \l  %227 = phi i32 [ %237, %226 ], [ 0, %184 ]\l  %228 = phi i64 [ %236, %226 ], [ 0, %184 ]\l  %229 = zext i32 %227 to i64\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %180, i64 %229\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !24\l  %232 = zext i8 %231 to i64\l  %233 = shl i32 %227, 3\l  %234 = zext i32 %233 to i64\l  %235 = shl nuw i64 %232, %234\l  %236 = or i64 %235, %228\l  %237 = add nuw nsw i32 %227, 1\l  %238 = icmp eq i32 %237, %181\l  br i1 %238, label %239, label %226\l|{<s0>T|<s1>F}}"];
	Node0x4746650:s0 -> Node0x4746600;
	Node0x4746650:s1 -> Node0x4746650;
	Node0x4746600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%239:\l239:                                              \l  %240 = phi i8 addrspace(4)* [ %225, %186 ], [ %180, %184 ], [ %180, %226 ]\l  %241 = phi i32 [ %224, %186 ], [ 0, %184 ], [ 0, %226 ]\l  %242 = phi i64 [ %223, %186 ], [ 0, %184 ], [ %236, %226 ]\l  %243 = icmp ugt i32 %241, 7\l  br i1 %243, label %246, label %244\l|{<s0>T|<s1>F}}"];
	Node0x4746600:s0 -> Node0x47486a0;
	Node0x4746600:s1 -> Node0x47486f0;
	Node0x47486f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%244:\l244:                                              \l  %245 = icmp eq i32 %241, 0\l  br i1 %245, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x47486f0:s0 -> Node0x4748880;
	Node0x47486f0:s1 -> Node0x47488d0;
	Node0x47486a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%246:\l246:                                              \l  %247 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !24\l  %248 = zext i8 %247 to i64\l  %249 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 1\l  %250 = load i8, i8 addrspace(4)* %249, align 1, !tbaa !24\l  %251 = zext i8 %250 to i64\l  %252 = shl nuw nsw i64 %251, 8\l  %253 = or i64 %252, %248\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 2\l  %255 = load i8, i8 addrspace(4)* %254, align 1, !tbaa !24\l  %256 = zext i8 %255 to i64\l  %257 = shl nuw nsw i64 %256, 16\l  %258 = or i64 %253, %257\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 3\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !24\l  %261 = zext i8 %260 to i64\l  %262 = shl nuw nsw i64 %261, 24\l  %263 = or i64 %258, %262\l  %264 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 4\l  %265 = load i8, i8 addrspace(4)* %264, align 1, !tbaa !24\l  %266 = zext i8 %265 to i64\l  %267 = shl nuw nsw i64 %266, 32\l  %268 = or i64 %263, %267\l  %269 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 5\l  %270 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !24\l  %271 = zext i8 %270 to i64\l  %272 = shl nuw nsw i64 %271, 40\l  %273 = or i64 %268, %272\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 6\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !24\l  %276 = zext i8 %275 to i64\l  %277 = shl nuw nsw i64 %276, 48\l  %278 = or i64 %273, %277\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 7\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !24\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw i64 %281, 56\l  %283 = or i64 %278, %282\l  %284 = add nsw i32 %241, -8\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 8\l  br label %299\l}"];
	Node0x47486a0 -> Node0x4748880;
	Node0x47488d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%286:\l286:                                              \l  %287 = phi i32 [ %297, %286 ], [ 0, %244 ]\l  %288 = phi i64 [ %296, %286 ], [ 0, %244 ]\l  %289 = zext i32 %287 to i64\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %240, i64 %289\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !24\l  %292 = zext i8 %291 to i64\l  %293 = shl i32 %287, 3\l  %294 = zext i32 %293 to i64\l  %295 = shl nuw i64 %292, %294\l  %296 = or i64 %295, %288\l  %297 = add nuw nsw i32 %287, 1\l  %298 = icmp eq i32 %297, %241\l  br i1 %298, label %299, label %286\l|{<s0>T|<s1>F}}"];
	Node0x47488d0:s0 -> Node0x4748880;
	Node0x47488d0:s1 -> Node0x47488d0;
	Node0x4748880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%299:\l299:                                              \l  %300 = phi i8 addrspace(4)* [ %285, %246 ], [ %240, %244 ], [ %240, %286 ]\l  %301 = phi i32 [ %284, %246 ], [ 0, %244 ], [ 0, %286 ]\l  %302 = phi i64 [ %283, %246 ], [ 0, %244 ], [ %296, %286 ]\l  %303 = icmp ugt i32 %301, 7\l  br i1 %303, label %306, label %304\l|{<s0>T|<s1>F}}"];
	Node0x4748880:s0 -> Node0x474b120;
	Node0x4748880:s1 -> Node0x474b170;
	Node0x474b170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%304:\l304:                                              \l  %305 = icmp eq i32 %301, 0\l  br i1 %305, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x474b170:s0 -> Node0x474b300;
	Node0x474b170:s1 -> Node0x474b350;
	Node0x474b120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%306:\l306:                                              \l  %307 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !24\l  %308 = zext i8 %307 to i64\l  %309 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 1\l  %310 = load i8, i8 addrspace(4)* %309, align 1, !tbaa !24\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw nsw i64 %311, 8\l  %313 = or i64 %312, %308\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 2\l  %315 = load i8, i8 addrspace(4)* %314, align 1, !tbaa !24\l  %316 = zext i8 %315 to i64\l  %317 = shl nuw nsw i64 %316, 16\l  %318 = or i64 %313, %317\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 3\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !24\l  %321 = zext i8 %320 to i64\l  %322 = shl nuw nsw i64 %321, 24\l  %323 = or i64 %318, %322\l  %324 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 4\l  %325 = load i8, i8 addrspace(4)* %324, align 1, !tbaa !24\l  %326 = zext i8 %325 to i64\l  %327 = shl nuw nsw i64 %326, 32\l  %328 = or i64 %323, %327\l  %329 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 5\l  %330 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !24\l  %331 = zext i8 %330 to i64\l  %332 = shl nuw nsw i64 %331, 40\l  %333 = or i64 %328, %332\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 6\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !24\l  %336 = zext i8 %335 to i64\l  %337 = shl nuw nsw i64 %336, 48\l  %338 = or i64 %333, %337\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 7\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !24\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw i64 %341, 56\l  %343 = or i64 %338, %342\l  %344 = add nsw i32 %301, -8\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 8\l  br label %359\l}"];
	Node0x474b120 -> Node0x474b300;
	Node0x474b350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%346:\l346:                                              \l  %347 = phi i32 [ %357, %346 ], [ 0, %304 ]\l  %348 = phi i64 [ %356, %346 ], [ 0, %304 ]\l  %349 = zext i32 %347 to i64\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %300, i64 %349\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !24\l  %352 = zext i8 %351 to i64\l  %353 = shl i32 %347, 3\l  %354 = zext i32 %353 to i64\l  %355 = shl nuw i64 %352, %354\l  %356 = or i64 %355, %348\l  %357 = add nuw nsw i32 %347, 1\l  %358 = icmp eq i32 %357, %301\l  br i1 %358, label %359, label %346\l|{<s0>T|<s1>F}}"];
	Node0x474b350:s0 -> Node0x474b300;
	Node0x474b350:s1 -> Node0x474b350;
	Node0x474b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%359:\l359:                                              \l  %360 = phi i8 addrspace(4)* [ %345, %306 ], [ %300, %304 ], [ %300, %346 ]\l  %361 = phi i32 [ %344, %306 ], [ 0, %304 ], [ 0, %346 ]\l  %362 = phi i64 [ %343, %306 ], [ 0, %304 ], [ %356, %346 ]\l  %363 = icmp ugt i32 %361, 7\l  br i1 %363, label %366, label %364\l|{<s0>T|<s1>F}}"];
	Node0x474b300:s0 -> Node0x474ddc0;
	Node0x474b300:s1 -> Node0x474de10;
	Node0x474de10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%364:\l364:                                              \l  %365 = icmp eq i32 %361, 0\l  br i1 %365, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x474de10:s0 -> Node0x474dfa0;
	Node0x474de10:s1 -> Node0x474dff0;
	Node0x474ddc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%366:\l366:                                              \l  %367 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !24\l  %368 = zext i8 %367 to i64\l  %369 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 1\l  %370 = load i8, i8 addrspace(4)* %369, align 1, !tbaa !24\l  %371 = zext i8 %370 to i64\l  %372 = shl nuw nsw i64 %371, 8\l  %373 = or i64 %372, %368\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 2\l  %375 = load i8, i8 addrspace(4)* %374, align 1, !tbaa !24\l  %376 = zext i8 %375 to i64\l  %377 = shl nuw nsw i64 %376, 16\l  %378 = or i64 %373, %377\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 3\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !24\l  %381 = zext i8 %380 to i64\l  %382 = shl nuw nsw i64 %381, 24\l  %383 = or i64 %378, %382\l  %384 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 4\l  %385 = load i8, i8 addrspace(4)* %384, align 1, !tbaa !24\l  %386 = zext i8 %385 to i64\l  %387 = shl nuw nsw i64 %386, 32\l  %388 = or i64 %383, %387\l  %389 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 5\l  %390 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !24\l  %391 = zext i8 %390 to i64\l  %392 = shl nuw nsw i64 %391, 40\l  %393 = or i64 %388, %392\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 6\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !24\l  %396 = zext i8 %395 to i64\l  %397 = shl nuw nsw i64 %396, 48\l  %398 = or i64 %393, %397\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 7\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !24\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw i64 %401, 56\l  %403 = or i64 %398, %402\l  %404 = add nsw i32 %361, -8\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 8\l  br label %419\l}"];
	Node0x474ddc0 -> Node0x474dfa0;
	Node0x474dff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%406:\l406:                                              \l  %407 = phi i32 [ %417, %406 ], [ 0, %364 ]\l  %408 = phi i64 [ %416, %406 ], [ 0, %364 ]\l  %409 = zext i32 %407 to i64\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %360, i64 %409\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !24\l  %412 = zext i8 %411 to i64\l  %413 = shl i32 %407, 3\l  %414 = zext i32 %413 to i64\l  %415 = shl nuw i64 %412, %414\l  %416 = or i64 %415, %408\l  %417 = add nuw nsw i32 %407, 1\l  %418 = icmp eq i32 %417, %361\l  br i1 %418, label %419, label %406\l|{<s0>T|<s1>F}}"];
	Node0x474dff0:s0 -> Node0x474dfa0;
	Node0x474dff0:s1 -> Node0x474dff0;
	Node0x474dfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%419:\l419:                                              \l  %420 = phi i8 addrspace(4)* [ %405, %366 ], [ %360, %364 ], [ %360, %406 ]\l  %421 = phi i32 [ %404, %366 ], [ 0, %364 ], [ 0, %406 ]\l  %422 = phi i64 [ %403, %366 ], [ 0, %364 ], [ %416, %406 ]\l  %423 = icmp ugt i32 %421, 7\l  br i1 %423, label %426, label %424\l|{<s0>T|<s1>F}}"];
	Node0x474dfa0:s0 -> Node0x4750620;
	Node0x474dfa0:s1 -> Node0x4750670;
	Node0x4750670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%424:\l424:                                              \l  %425 = icmp eq i32 %421, 0\l  br i1 %425, label %477, label %464\l|{<s0>T|<s1>F}}"];
	Node0x4750670:s0 -> Node0x4740210;
	Node0x4750670:s1 -> Node0x4750800;
	Node0x4750620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%426:\l426:                                              \l  %427 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !24\l  %428 = zext i8 %427 to i64\l  %429 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 1\l  %430 = load i8, i8 addrspace(4)* %429, align 1, !tbaa !24\l  %431 = zext i8 %430 to i64\l  %432 = shl nuw nsw i64 %431, 8\l  %433 = or i64 %432, %428\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 2\l  %435 = load i8, i8 addrspace(4)* %434, align 1, !tbaa !24\l  %436 = zext i8 %435 to i64\l  %437 = shl nuw nsw i64 %436, 16\l  %438 = or i64 %433, %437\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 3\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !24\l  %441 = zext i8 %440 to i64\l  %442 = shl nuw nsw i64 %441, 24\l  %443 = or i64 %438, %442\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 4\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !24\l  %446 = zext i8 %445 to i64\l  %447 = shl nuw nsw i64 %446, 32\l  %448 = or i64 %443, %447\l  %449 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 5\l  %450 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !24\l  %451 = zext i8 %450 to i64\l  %452 = shl nuw nsw i64 %451, 40\l  %453 = or i64 %448, %452\l  %454 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 6\l  %455 = load i8, i8 addrspace(4)* %454, align 1, !tbaa !24\l  %456 = zext i8 %455 to i64\l  %457 = shl nuw nsw i64 %456, 48\l  %458 = or i64 %453, %457\l  %459 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 7\l  %460 = load i8, i8 addrspace(4)* %459, align 1, !tbaa !24\l  %461 = zext i8 %460 to i64\l  %462 = shl nuw i64 %461, 56\l  %463 = or i64 %458, %462\l  br label %477\l}"];
	Node0x4750620 -> Node0x4740210;
	Node0x4750800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%464:\l464:                                              \l  %465 = phi i32 [ %475, %464 ], [ 0, %424 ]\l  %466 = phi i64 [ %474, %464 ], [ 0, %424 ]\l  %467 = zext i32 %465 to i64\l  %468 = getelementptr inbounds i8, i8 addrspace(4)* %420, i64 %467\l  %469 = load i8, i8 addrspace(4)* %468, align 1, !tbaa !24\l  %470 = zext i8 %469 to i64\l  %471 = shl i32 %465, 3\l  %472 = zext i32 %471 to i64\l  %473 = shl nuw i64 %470, %472\l  %474 = or i64 %473, %466\l  %475 = add nuw nsw i32 %465, 1\l  %476 = icmp eq i32 %475, %421\l  br i1 %476, label %477, label %464\l|{<s0>T|<s1>F}}"];
	Node0x4750800:s0 -> Node0x4740210;
	Node0x4750800:s1 -> Node0x4750800;
	Node0x4740210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%477:\l477:                                              \l  %478 = phi i64 [ %463, %426 ], [ 0, %424 ], [ %474, %464 ]\l  %479 = shl nuw nsw i64 %60, 2\l  %480 = add nuw nsw i64 %479, 28\l  %481 = and i64 %480, 480\l  %482 = and i64 %62, -225\l  %483 = or i64 %482, %481\l  %484 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %483, i64 noundef %122, i64 noundef %182, i64 noundef %242, i64\l... noundef %302, i64 noundef %362, i64 noundef %422, i64 noundef %478) #11\l  %485 = sub i64 %52, %60\l  %486 = getelementptr inbounds i8, i8 addrspace(4)* %53, i64 %60\l  %487 = icmp eq i64 %485, 0\l  br i1 %487, label %488, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4740210:s0 -> Node0x473da90;
	Node0x4740210:s1 -> Node0x473fda0;
	Node0x473da90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%488:\l488:                                              \l  %489 = load float, float addrspace(1)* %31, align 4, !tbaa !21\l  %490 = load float, float addrspace(1)* %33, align 4, !tbaa !21\l  %491 = fadd contract float %489, %490\l  %492 = fcmp olt float %491, 0x39F0000000000000\l  %493 = select i1 %492, float 0x41F0000000000000, float 1.000000e+00\l  %494 = fmul float %491, %493\l  %495 = tail call float @llvm.sqrt.f32(float %494)\l  %496 = bitcast float %495 to i32\l  %497 = add nsw i32 %496, -1\l  %498 = bitcast i32 %497 to float\l  %499 = add nsw i32 %496, 1\l  %500 = bitcast i32 %499 to float\l  %501 = tail call i1 @llvm.amdgcn.class.f32(float %494, i32 608)\l  %502 = select i1 %492, float 0x3EF0000000000000, float 1.000000e+00\l  %503 = fneg float %500\l  %504 = tail call float @llvm.fma.f32(float %503, float %495, float %494)\l  %505 = fcmp ogt float %504, 0.000000e+00\l  %506 = fneg float %498\l  %507 = tail call float @llvm.fma.f32(float %506, float %495, float %494)\l  %508 = fcmp ole float %507, 0.000000e+00\l  %509 = select i1 %508, float %498, float %495\l  %510 = select i1 %505, float %500, float %509\l  %511 = fmul float %502, %510\l  %512 = select i1 %501, float %494, float %511\l  %513 = fcmp olt float %489, 0x39F0000000000000\l  %514 = select i1 %513, float 0x41F0000000000000, float 1.000000e+00\l  %515 = fmul float %489, %514\l  %516 = tail call float @llvm.sqrt.f32(float %515)\l  %517 = bitcast float %516 to i32\l  %518 = add nsw i32 %517, -1\l  %519 = bitcast i32 %518 to float\l  %520 = add nsw i32 %517, 1\l  %521 = bitcast i32 %520 to float\l  %522 = tail call i1 @llvm.amdgcn.class.f32(float %515, i32 608)\l  %523 = select i1 %513, float 0x3EF0000000000000, float 1.000000e+00\l  %524 = fneg float %521\l  %525 = tail call float @llvm.fma.f32(float %524, float %516, float %515)\l  %526 = fcmp ogt float %525, 0.000000e+00\l  %527 = fneg float %519\l  %528 = tail call float @llvm.fma.f32(float %527, float %516, float %515)\l  %529 = fcmp ole float %528, 0.000000e+00\l  %530 = select i1 %529, float %519, float %516\l  %531 = select i1 %526, float %521, float %530\l  %532 = fmul float %523, %531\l  %533 = select i1 %522, float %515, float %532\l  %534 = fdiv contract float %512, %533\l  %535 = getelementptr inbounds float, float addrspace(1)* %2, i64 %25\l  store float %534, float addrspace(1)* %535, align 4, !tbaa !21\l  br label %536\l}"];
	Node0x473da90 -> Node0x473bb60;
	Node0x473bb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%536:\l536:                                              \l  %537 = udiv i32 %15, %12\l  %538 = mul i32 %537, %12\l  %539 = icmp ugt i32 %15, %538\l  %540 = zext i1 %539 to i32\l  %541 = add i32 %537, %540\l  %542 = mul i32 %541, %12\l  %543 = add i32 %542, %26\l  %544 = sext i32 %543 to i64\l  %545 = icmp ult i64 %544, %4\l  br i1 %545, label %24, label %546, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x473bb60:s0 -> Node0x473ba30;
	Node0x473bb60:s1 -> Node0x473b640;
	Node0x473b640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%546:\l546:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
