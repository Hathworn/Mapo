digraph "CFG for '_Z59conductance_calculate_postsynaptic_current_injection_kernelPfS_iPiS_S_S_fm' function" {
	label="CFG for '_Z59conductance_calculate_postsynaptic_current_injection_kernelPfS_iPiS_S_S_fm' function";

	Node0x553ec90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !7\l  %20 = mul i32 %11, %16\l  %21 = add i32 %20, %10\l  %22 = sext i32 %21 to i64\l  %23 = icmp ult i64 %22, %8\l  br i1 %23, label %24, label %104\l|{<s0>T|<s1>F}}"];
	Node0x553ec90:s0 -> Node0x5541b10;
	Node0x553ec90:s1 -> Node0x5541ba0;
	Node0x5541b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%24:\l24:                                               \l  %25 = icmp sgt i32 %2, 0\l  %26 = fneg contract float %7\l  %27 = udiv i32 %19, %16\l  %28 = mul i32 %27, %16\l  %29 = icmp ugt i32 %19, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = mul i32 %31, %16\l  %33 = icmp eq i32 %2, 1\l  br label %34\l}"];
	Node0x5541b10 -> Node0x5541620;
	Node0x5541620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%34:\l34:                                               \l  %35 = phi float [ undef, %24 ], [ %67, %66 ]\l  %36 = phi i64 [ %22, %24 ], [ %69, %66 ]\l  %37 = trunc i64 %36 to i32\l  %38 = getelementptr inbounds float, float addrspace(1)* %6, i64 %36\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  br i1 %25, label %40, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5541620:s0 -> Node0x5542d40;
	Node0x5541620:s1 -> Node0x55427f0;
	Node0x5542d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds float, float addrspace(1)* %5, i64 %36\l  store float 0.000000e+00, float addrspace(1)* %41, align 4, !tbaa !16\l  %42 = getelementptr inbounds float, float addrspace(1)* %4, i64 %36\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16\l  %44 = load float, float addrspace(1)* %0, align 4, !tbaa !16\l  %45 = fdiv contract float %26, %44\l  %46 = fmul float %45, 0x3FF7154760000000\l  %47 = tail call float @llvm.rint.f32(float %46)\l  %48 = fcmp ogt float %45, 0x40562E4300000000\l  %49 = fcmp olt float %45, 0xC059D1DA00000000\l  %50 = fneg float %46\l  %51 = tail call float @llvm.fma.f32(float %45, float 0x3FF7154760000000,\l... float %50)\l  %52 = tail call float @llvm.fma.f32(float %45, float 0x3E54AE0BE0000000,\l... float %51)\l  %53 = fsub float %46, %47\l  %54 = fadd float %52, %53\l  %55 = tail call float @llvm.exp2.f32(float %54)\l  %56 = fptosi float %47 to i32\l  %57 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 %56)\l  %58 = select i1 %49, float 0.000000e+00, float %57\l  %59 = select i1 %48, float 0x7FF0000000000000, float %58\l  %60 = fmul contract float %43, %59\l  store float %60, float addrspace(1)* %42, align 4, !tbaa !16\l  %61 = load float, float addrspace(1)* %1, align 4, !tbaa !16\l  %62 = fsub contract float %61, %39\l  %63 = fmul contract float %62, %60\l  %64 = load float, float addrspace(1)* %41, align 4, !tbaa !16\l  %65 = fadd contract float %64, %63\l  store float %65, float addrspace(1)* %41, align 4, !tbaa !16\l  br i1 %33, label %66, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5542d40:s0 -> Node0x55427f0;
	Node0x5542d40:s1 -> Node0x5542240;
	Node0x55427f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%66:\l66:                                               \l  %67 = phi float [ %35, %34 ], [ %35, %40 ], [ %75, %71 ]\l  %68 = add i32 %32, %37\l  %69 = sext i32 %68 to i64\l  %70 = icmp ult i64 %69, %8\l  br i1 %70, label %34, label %104, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x55427f0:s0 -> Node0x5541620;
	Node0x55427f0:s1 -> Node0x5541ba0;
	Node0x5542240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %102, %71 ], [ 1, %40 ]\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !16\l  %76 = mul i64 %73, %8\l  %77 = add i64 %76, %36\l  %78 = getelementptr inbounds float, float addrspace(1)* %4, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fdiv contract float %26, %75\l  %81 = fmul float %80, 0x3FF7154760000000\l  %82 = tail call float @llvm.rint.f32(float %81)\l  %83 = fcmp ogt float %80, 0x40562E4300000000\l  %84 = fcmp olt float %80, 0xC059D1DA00000000\l  %85 = fneg float %81\l  %86 = tail call float @llvm.fma.f32(float %80, float 0x3FF7154760000000,\l... float %85)\l  %87 = tail call float @llvm.fma.f32(float %80, float 0x3E54AE0BE0000000,\l... float %86)\l  %88 = fsub float %81, %82\l  %89 = fadd float %87, %88\l  %90 = tail call float @llvm.exp2.f32(float %89)\l  %91 = fptosi float %82 to i32\l  %92 = tail call float @llvm.amdgcn.ldexp.f32(float %90, i32 %91)\l  %93 = select i1 %84, float 0.000000e+00, float %92\l  %94 = select i1 %83, float 0x7FF0000000000000, float %93\l  %95 = fmul contract float %79, %94\l  store float %95, float addrspace(1)* %78, align 4, !tbaa !16\l  %96 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !16\l  %98 = fsub contract float %97, %39\l  %99 = fmul contract float %98, %95\l  %100 = load float, float addrspace(1)* %41, align 4, !tbaa !16\l  %101 = fadd contract float %100, %99\l  store float %101, float addrspace(1)* %41, align 4, !tbaa !16\l  %102 = add nuw nsw i32 %72, 1\l  %103 = icmp eq i32 %102, %2\l  br i1 %103, label %66, label %71, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5542240:s0 -> Node0x55427f0;
	Node0x5542240:s1 -> Node0x5542240;
	Node0x5541ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%104:\l104:                                              \l  ret void\l}"];
}
