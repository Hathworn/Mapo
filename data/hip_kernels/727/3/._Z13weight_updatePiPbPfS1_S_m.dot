digraph "CFG for '_Z13weight_updatePiPbPfS1_S_m' function" {
	label="CFG for '_Z13weight_updatePiPbPfS1_S_m' function";

	Node0x4e769d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = sext i32 %18 to i64\l  %20 = icmp ult i64 %19, %5\l  br i1 %20, label %21, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4e769d0:s0 -> Node0x4e78c60;
	Node0x4e769d0:s1 -> Node0x4e78cf0;
	Node0x4e78c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = udiv i32 %16, %13\l  %23 = mul i32 %22, %13\l  %24 = icmp ugt i32 %16, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %13\l  br label %28\l}"];
	Node0x4e78c60 -> Node0x4e79170;
	Node0x4e79170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i64 [ %19, %21 ], [ %50, %48 ]\l  %30 = trunc i64 %29 to i32\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %29\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %36\l  %38 = load i8, i8 addrspace(1)* %37, align 1, !tbaa !20, !range !22,\l... !amdgpu.noclobber !6\l  %39 = icmp eq i8 %38, 0\l  br i1 %39, label %48, label %40\l|{<s0>T|<s1>F}}"];
	Node0x4e79170:s0 -> Node0x4e79230;
	Node0x4e79170:s1 -> Node0x4e7aad0;
	Node0x4e7aad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !23\l  %43 = fcmp contract une float %42, 1.000000e+00\l  br i1 %43, label %44, label %48\l|{<s0>T|<s1>F}}"];
	Node0x4e7aad0:s0 -> Node0x4e7b8f0;
	Node0x4e7aad0:s1 -> Node0x4e79230;
	Node0x4e7b8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !23\l  %47 = fdiv contract float %46, %42\l  store float %47, float addrspace(1)* %45, align 4, !tbaa !23\l  br label %48\l}"];
	Node0x4e7b8f0 -> Node0x4e79230;
	Node0x4e79230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = add i32 %27, %30\l  %50 = sext i32 %49 to i64\l  %51 = icmp ult i64 %50, %5\l  br i1 %51, label %28, label %52, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4e79230:s0 -> Node0x4e79170;
	Node0x4e79230:s1 -> Node0x4e78cf0;
	Node0x4e78cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  ret void\l}"];
}
