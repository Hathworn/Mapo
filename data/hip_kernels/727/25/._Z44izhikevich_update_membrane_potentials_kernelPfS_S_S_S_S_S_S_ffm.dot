digraph "CFG for '_Z44izhikevich_update_membrane_potentials_kernelPfS_S_S_S_S_S_S_ffm' function" {
	label="CFG for '_Z44izhikevich_update_membrane_potentials_kernelPfS_S_S_S_S_S_S_ffm' function";

	Node0x5acc490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%11:\l  %12 = fmul contract float %9, 1.000000e+03\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !7\l  %23 = mul i32 %14, %19\l  %24 = add i32 %23, %13\l  %25 = sext i32 %24 to i64\l  %26 = icmp ult i64 %25, %10\l  br i1 %26, label %27, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5acc490:s0 -> Node0x5acfe30;
	Node0x5acc490:s1 -> Node0x5acfec0;
	Node0x5acfe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%27:\l27:                                               \l  %28 = udiv i32 %22, %19\l  %29 = mul i32 %28, %19\l  %30 = icmp ugt i32 %22, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %19\l  br label %34\l}"];
	Node0x5acfe30 -> Node0x5acf4a0;
	Node0x5acf4a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i64 [ %25, %27 ], [ %72, %70 ]\l  %36 = trunc i64 %35 to i32\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %39 = fmul contract float %38, 0x3FA47AE140000000\l  %40 = fmul contract float %38, %39\l  %41 = fmul contract float %38, 5.000000e+00\l  %42 = fadd contract float %41, %40\l  %43 = fadd contract float %42, 1.400000e+02\l  %44 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %46 = fsub contract float %43, %45\l  %47 = getelementptr inbounds float, float addrspace(1)* %4, i64 %35\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fadd contract float %48, %46\l  %50 = fmul contract float %12, %49\l  %51 = fadd contract float %38, %50\l  store float %51, float addrspace(1)* %37, align 4, !tbaa !16\l  %52 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = getelementptr inbounds float, float addrspace(1)* %3, i64 %35\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !16\l  %56 = fmul contract float %55, %51\l  %57 = load float, float addrspace(1)* %44, align 4, !tbaa !16\l  %58 = fsub contract float %56, %57\l  %59 = fmul contract float %53, %58\l  %60 = fmul contract float %12, %59\l  %61 = fadd contract float %57, %60\l  store float %61, float addrspace(1)* %44, align 4, !tbaa !16\l  %62 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %63 = getelementptr inbounds float, float addrspace(1)* %5, i64 %35\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !16\l  %65 = fcmp contract ult float %62, %64\l  br i1 %65, label %70, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5acf4a0:s0 -> Node0x5ad0530;
	Node0x5acf4a0:s1 -> Node0x5ad0340;
	Node0x5ad0340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%66:\l66:                                               \l  %67 = getelementptr inbounds float, float addrspace(1)* %7, i64 %35\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !16\l  store float %68, float addrspace(1)* %37, align 4, !tbaa !16\l  %69 = getelementptr inbounds float, float addrspace(1)* %6, i64 %35\l  store float %8, float addrspace(1)* %69, align 4, !tbaa !16\l  br label %70\l}"];
	Node0x5ad0340 -> Node0x5ad0530;
	Node0x5ad0530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = add i32 %33, %36\l  %72 = sext i32 %71 to i64\l  %73 = icmp ult i64 %72, %10\l  br i1 %73, label %34, label %74, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ad0530:s0 -> Node0x5acf4a0;
	Node0x5ad0530:s1 -> Node0x5acfec0;
	Node0x5acfec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%74:\l74:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
