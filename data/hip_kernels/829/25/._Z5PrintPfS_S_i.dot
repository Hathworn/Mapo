digraph "CFG for '_Z5PrintPfS_S_i' function" {
	label="CFG for '_Z5PrintPfS_S_i' function";

	Node0x56993b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%4:\l  %5 = load float, float addrspace(1)* %0, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %6 = fpext float %5 to double\l  %7 = load float, float addrspace(1)* %1, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %8 = fpext float %7 to double\l  %9 = load float, float addrspace(1)* %2, align 4, !tbaa !4,\l... !amdgpu.noclobber !8\l  %10 = fpext float %9 to double\l  %11 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 24\l  %13 = bitcast i8 addrspace(4)* %12 to i64 addrspace(4)*\l  %14 = load i64, i64 addrspace(4)* %13, align 8, !tbaa !9\l  %15 = inttoptr i64 %14 to i8 addrspace(1)*\l  %16 = addrspacecast i8 addrspace(1)* %15 to i8*\l  %17 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %18 = extractelement \<2 x i64\> %17, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([39 x i8], [39 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x56993b0:s0 -> Node0x569c560;
	Node0x56993b0:s1 -> Node0x569cf50;
	Node0x569c560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = and i64 %18, -225\l  %21 = or i64 %20, 32\l  %22 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %21, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %464\l}"];
	Node0x569c560 -> Node0x569d230;
	Node0x569cf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%23:\l23:                                               \l  %24 = and i64 %18, 2\l  %25 = and i64 %18, -3\l  %26 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %25, i64 0\l  br label %27\l}"];
	Node0x569cf50 -> Node0x569ddd0;
	Node0x569ddd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%27:\l27:                                               \l  %28 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)*\l... @.str, i64 0, i64 38) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([39 x i8]* addrspacecast ([39 x i8] addrspace(4)* @.str to [39 x i8]*) to\l... i64)), i64 1))), %23 ], [ %461, %453 ]\l  %29 = phi i8 addrspace(4)* [ getelementptr inbounds ([39 x i8], [39 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %23 ], [ %462, %453 ]\l  %30 = phi \<2 x i64\> [ %26, %23 ], [ %460, %453 ]\l  %31 = icmp ugt i64 %28, 56\l  %32 = extractelement \<2 x i64\> %30, i64 0\l  %33 = or i64 %32, %24\l  %34 = insertelement \<2 x i64\> poison, i64 %33, i64 0\l  %35 = select i1 %31, \<2 x i64\> %30, \<2 x i64\> %34\l  %36 = tail call i64 @llvm.umin.i64(i64 %28, i64 56)\l  %37 = trunc i64 %36 to i32\l  %38 = extractelement \<2 x i64\> %35, i64 0\l  %39 = icmp ugt i32 %37, 7\l  br i1 %39, label %42, label %40\l|{<s0>T|<s1>F}}"];
	Node0x569ddd0:s0 -> Node0x569ee50;
	Node0x569ddd0:s1 -> Node0x569eee0;
	Node0x569eee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%40:\l40:                                               \l  %41 = icmp eq i32 %37, 0\l  br i1 %41, label %95, label %82\l|{<s0>T|<s1>F}}"];
	Node0x569eee0:s0 -> Node0x569f0e0;
	Node0x569eee0:s1 -> Node0x569f130;
	Node0x569ee50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%42:\l42:                                               \l  %43 = load i8, i8 addrspace(4)* %29, align 1, !tbaa !13\l  %44 = zext i8 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 1\l  %46 = load i8, i8 addrspace(4)* %45, align 1, !tbaa !13\l  %47 = zext i8 %46 to i64\l  %48 = shl nuw nsw i64 %47, 8\l  %49 = or i64 %48, %44\l  %50 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 2\l  %51 = load i8, i8 addrspace(4)* %50, align 1, !tbaa !13\l  %52 = zext i8 %51 to i64\l  %53 = shl nuw nsw i64 %52, 16\l  %54 = or i64 %49, %53\l  %55 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 3\l  %56 = load i8, i8 addrspace(4)* %55, align 1, !tbaa !13\l  %57 = zext i8 %56 to i64\l  %58 = shl nuw nsw i64 %57, 24\l  %59 = or i64 %54, %58\l  %60 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 4\l  %61 = load i8, i8 addrspace(4)* %60, align 1, !tbaa !13\l  %62 = zext i8 %61 to i64\l  %63 = shl nuw nsw i64 %62, 32\l  %64 = or i64 %59, %63\l  %65 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 5\l  %66 = load i8, i8 addrspace(4)* %65, align 1, !tbaa !13\l  %67 = zext i8 %66 to i64\l  %68 = shl nuw nsw i64 %67, 40\l  %69 = or i64 %64, %68\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 6\l  %71 = load i8, i8 addrspace(4)* %70, align 1, !tbaa !13\l  %72 = zext i8 %71 to i64\l  %73 = shl nuw nsw i64 %72, 48\l  %74 = or i64 %69, %73\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 7\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !13\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw i64 %77, 56\l  %79 = or i64 %74, %78\l  %80 = add nsw i32 %37, -8\l  %81 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 8\l  br label %95\l}"];
	Node0x569ee50 -> Node0x569f0e0;
	Node0x569f130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i32 [ %93, %82 ], [ 0, %40 ]\l  %84 = phi i64 [ %92, %82 ], [ 0, %40 ]\l  %85 = zext i32 %83 to i64\l  %86 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 %85\l  %87 = load i8, i8 addrspace(4)* %86, align 1, !tbaa !13\l  %88 = zext i8 %87 to i64\l  %89 = shl i32 %83, 3\l  %90 = zext i32 %89 to i64\l  %91 = shl nuw i64 %88, %90\l  %92 = or i64 %91, %84\l  %93 = add nuw nsw i32 %83, 1\l  %94 = icmp eq i32 %93, %37\l  br i1 %94, label %95, label %82, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x569f130:s0 -> Node0x569f0e0;
	Node0x569f130:s1 -> Node0x569f130;
	Node0x569f0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%95:\l95:                                               \l  %96 = phi i8 addrspace(4)* [ %81, %42 ], [ %29, %40 ], [ %29, %82 ]\l  %97 = phi i32 [ %80, %42 ], [ 0, %40 ], [ 0, %82 ]\l  %98 = phi i64 [ %79, %42 ], [ 0, %40 ], [ %92, %82 ]\l  %99 = icmp ugt i32 %97, 7\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x569f0e0:s0 -> Node0x56a1e10;
	Node0x569f0e0:s1 -> Node0x56a1e60;
	Node0x56a1e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%100:\l100:                                              \l  %101 = icmp eq i32 %97, 0\l  br i1 %101, label %155, label %142\l|{<s0>T|<s1>F}}"];
	Node0x56a1e60:s0 -> Node0x56a2030;
	Node0x56a1e60:s1 -> Node0x56a2080;
	Node0x56a1e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%102:\l102:                                              \l  %103 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !13\l  %104 = zext i8 %103 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 1\l  %106 = load i8, i8 addrspace(4)* %105, align 1, !tbaa !13\l  %107 = zext i8 %106 to i64\l  %108 = shl nuw nsw i64 %107, 8\l  %109 = or i64 %108, %104\l  %110 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 2\l  %111 = load i8, i8 addrspace(4)* %110, align 1, !tbaa !13\l  %112 = zext i8 %111 to i64\l  %113 = shl nuw nsw i64 %112, 16\l  %114 = or i64 %109, %113\l  %115 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 3\l  %116 = load i8, i8 addrspace(4)* %115, align 1, !tbaa !13\l  %117 = zext i8 %116 to i64\l  %118 = shl nuw nsw i64 %117, 24\l  %119 = or i64 %114, %118\l  %120 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 4\l  %121 = load i8, i8 addrspace(4)* %120, align 1, !tbaa !13\l  %122 = zext i8 %121 to i64\l  %123 = shl nuw nsw i64 %122, 32\l  %124 = or i64 %119, %123\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 5\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !13\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 40\l  %129 = or i64 %124, %128\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 6\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !13\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 48\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 7\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !13\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw i64 %137, 56\l  %139 = or i64 %134, %138\l  %140 = add nsw i32 %97, -8\l  %141 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 8\l  br label %155\l}"];
	Node0x56a1e10 -> Node0x56a2030;
	Node0x56a2080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %153, %142 ], [ 0, %100 ]\l  %144 = phi i64 [ %152, %142 ], [ 0, %100 ]\l  %145 = zext i32 %143 to i64\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %96, i64 %145\l  %147 = load i8, i8 addrspace(4)* %146, align 1, !tbaa !13\l  %148 = zext i8 %147 to i64\l  %149 = shl i32 %143, 3\l  %150 = zext i32 %149 to i64\l  %151 = shl nuw i64 %148, %150\l  %152 = or i64 %151, %144\l  %153 = add nuw nsw i32 %143, 1\l  %154 = icmp eq i32 %153, %97\l  br i1 %154, label %155, label %142\l|{<s0>T|<s1>F}}"];
	Node0x56a2080:s0 -> Node0x56a2030;
	Node0x56a2080:s1 -> Node0x56a2080;
	Node0x56a2030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%155:\l155:                                              \l  %156 = phi i8 addrspace(4)* [ %141, %102 ], [ %96, %100 ], [ %96, %142 ]\l  %157 = phi i32 [ %140, %102 ], [ 0, %100 ], [ 0, %142 ]\l  %158 = phi i64 [ %139, %102 ], [ 0, %100 ], [ %152, %142 ]\l  %159 = icmp ugt i32 %157, 7\l  br i1 %159, label %162, label %160\l|{<s0>T|<s1>F}}"];
	Node0x56a2030:s0 -> Node0x56a4550;
	Node0x56a2030:s1 -> Node0x56a45a0;
	Node0x56a45a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%160:\l160:                                              \l  %161 = icmp eq i32 %157, 0\l  br i1 %161, label %215, label %202\l|{<s0>T|<s1>F}}"];
	Node0x56a45a0:s0 -> Node0x56a4730;
	Node0x56a45a0:s1 -> Node0x56a4780;
	Node0x56a4550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%162:\l162:                                              \l  %163 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !13\l  %164 = zext i8 %163 to i64\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 1\l  %166 = load i8, i8 addrspace(4)* %165, align 1, !tbaa !13\l  %167 = zext i8 %166 to i64\l  %168 = shl nuw nsw i64 %167, 8\l  %169 = or i64 %168, %164\l  %170 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 2\l  %171 = load i8, i8 addrspace(4)* %170, align 1, !tbaa !13\l  %172 = zext i8 %171 to i64\l  %173 = shl nuw nsw i64 %172, 16\l  %174 = or i64 %169, %173\l  %175 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 3\l  %176 = load i8, i8 addrspace(4)* %175, align 1, !tbaa !13\l  %177 = zext i8 %176 to i64\l  %178 = shl nuw nsw i64 %177, 24\l  %179 = or i64 %174, %178\l  %180 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 4\l  %181 = load i8, i8 addrspace(4)* %180, align 1, !tbaa !13\l  %182 = zext i8 %181 to i64\l  %183 = shl nuw nsw i64 %182, 32\l  %184 = or i64 %179, %183\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 5\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !13\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 40\l  %189 = or i64 %184, %188\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 6\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !13\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 48\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 7\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !13\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw i64 %197, 56\l  %199 = or i64 %194, %198\l  %200 = add nsw i32 %157, -8\l  %201 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 8\l  br label %215\l}"];
	Node0x56a4550 -> Node0x56a4730;
	Node0x56a4780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%202:\l202:                                              \l  %203 = phi i32 [ %213, %202 ], [ 0, %160 ]\l  %204 = phi i64 [ %212, %202 ], [ 0, %160 ]\l  %205 = zext i32 %203 to i64\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %156, i64 %205\l  %207 = load i8, i8 addrspace(4)* %206, align 1, !tbaa !13\l  %208 = zext i8 %207 to i64\l  %209 = shl i32 %203, 3\l  %210 = zext i32 %209 to i64\l  %211 = shl nuw i64 %208, %210\l  %212 = or i64 %211, %204\l  %213 = add nuw nsw i32 %203, 1\l  %214 = icmp eq i32 %213, %157\l  br i1 %214, label %215, label %202\l|{<s0>T|<s1>F}}"];
	Node0x56a4780:s0 -> Node0x56a4730;
	Node0x56a4780:s1 -> Node0x56a4780;
	Node0x56a4730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%215:\l215:                                              \l  %216 = phi i8 addrspace(4)* [ %201, %162 ], [ %156, %160 ], [ %156, %202 ]\l  %217 = phi i32 [ %200, %162 ], [ 0, %160 ], [ 0, %202 ]\l  %218 = phi i64 [ %199, %162 ], [ 0, %160 ], [ %212, %202 ]\l  %219 = icmp ugt i32 %217, 7\l  br i1 %219, label %222, label %220\l|{<s0>T|<s1>F}}"];
	Node0x56a4730:s0 -> Node0x56a67d0;
	Node0x56a4730:s1 -> Node0x56a6820;
	Node0x56a6820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%220:\l220:                                              \l  %221 = icmp eq i32 %217, 0\l  br i1 %221, label %275, label %262\l|{<s0>T|<s1>F}}"];
	Node0x56a6820:s0 -> Node0x56a69b0;
	Node0x56a6820:s1 -> Node0x56a6a00;
	Node0x56a67d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%222:\l222:                                              \l  %223 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !13\l  %224 = zext i8 %223 to i64\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 1\l  %226 = load i8, i8 addrspace(4)* %225, align 1, !tbaa !13\l  %227 = zext i8 %226 to i64\l  %228 = shl nuw nsw i64 %227, 8\l  %229 = or i64 %228, %224\l  %230 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 2\l  %231 = load i8, i8 addrspace(4)* %230, align 1, !tbaa !13\l  %232 = zext i8 %231 to i64\l  %233 = shl nuw nsw i64 %232, 16\l  %234 = or i64 %229, %233\l  %235 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 3\l  %236 = load i8, i8 addrspace(4)* %235, align 1, !tbaa !13\l  %237 = zext i8 %236 to i64\l  %238 = shl nuw nsw i64 %237, 24\l  %239 = or i64 %234, %238\l  %240 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 4\l  %241 = load i8, i8 addrspace(4)* %240, align 1, !tbaa !13\l  %242 = zext i8 %241 to i64\l  %243 = shl nuw nsw i64 %242, 32\l  %244 = or i64 %239, %243\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 5\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !13\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 40\l  %249 = or i64 %244, %248\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 6\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !13\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 48\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 7\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !13\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw i64 %257, 56\l  %259 = or i64 %254, %258\l  %260 = add nsw i32 %217, -8\l  %261 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 8\l  br label %275\l}"];
	Node0x56a67d0 -> Node0x56a69b0;
	Node0x56a6a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%262:\l262:                                              \l  %263 = phi i32 [ %273, %262 ], [ 0, %220 ]\l  %264 = phi i64 [ %272, %262 ], [ 0, %220 ]\l  %265 = zext i32 %263 to i64\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %216, i64 %265\l  %267 = load i8, i8 addrspace(4)* %266, align 1, !tbaa !13\l  %268 = zext i8 %267 to i64\l  %269 = shl i32 %263, 3\l  %270 = zext i32 %269 to i64\l  %271 = shl nuw i64 %268, %270\l  %272 = or i64 %271, %264\l  %273 = add nuw nsw i32 %263, 1\l  %274 = icmp eq i32 %273, %217\l  br i1 %274, label %275, label %262\l|{<s0>T|<s1>F}}"];
	Node0x56a6a00:s0 -> Node0x56a69b0;
	Node0x56a6a00:s1 -> Node0x56a6a00;
	Node0x56a69b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%275:\l275:                                              \l  %276 = phi i8 addrspace(4)* [ %261, %222 ], [ %216, %220 ], [ %216, %262 ]\l  %277 = phi i32 [ %260, %222 ], [ 0, %220 ], [ 0, %262 ]\l  %278 = phi i64 [ %259, %222 ], [ 0, %220 ], [ %272, %262 ]\l  %279 = icmp ugt i32 %277, 7\l  br i1 %279, label %282, label %280\l|{<s0>T|<s1>F}}"];
	Node0x56a69b0:s0 -> Node0x56a9220;
	Node0x56a69b0:s1 -> Node0x56a9270;
	Node0x56a9270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%280:\l280:                                              \l  %281 = icmp eq i32 %277, 0\l  br i1 %281, label %335, label %322\l|{<s0>T|<s1>F}}"];
	Node0x56a9270:s0 -> Node0x56a9400;
	Node0x56a9270:s1 -> Node0x56a9450;
	Node0x56a9220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%282:\l282:                                              \l  %283 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !13\l  %284 = zext i8 %283 to i64\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 1\l  %286 = load i8, i8 addrspace(4)* %285, align 1, !tbaa !13\l  %287 = zext i8 %286 to i64\l  %288 = shl nuw nsw i64 %287, 8\l  %289 = or i64 %288, %284\l  %290 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 2\l  %291 = load i8, i8 addrspace(4)* %290, align 1, !tbaa !13\l  %292 = zext i8 %291 to i64\l  %293 = shl nuw nsw i64 %292, 16\l  %294 = or i64 %289, %293\l  %295 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 3\l  %296 = load i8, i8 addrspace(4)* %295, align 1, !tbaa !13\l  %297 = zext i8 %296 to i64\l  %298 = shl nuw nsw i64 %297, 24\l  %299 = or i64 %294, %298\l  %300 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 4\l  %301 = load i8, i8 addrspace(4)* %300, align 1, !tbaa !13\l  %302 = zext i8 %301 to i64\l  %303 = shl nuw nsw i64 %302, 32\l  %304 = or i64 %299, %303\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 5\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !13\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 40\l  %309 = or i64 %304, %308\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 6\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !13\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 48\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 7\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !13\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw i64 %317, 56\l  %319 = or i64 %314, %318\l  %320 = add nsw i32 %277, -8\l  %321 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 8\l  br label %335\l}"];
	Node0x56a9220 -> Node0x56a9400;
	Node0x56a9450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%322:\l322:                                              \l  %323 = phi i32 [ %333, %322 ], [ 0, %280 ]\l  %324 = phi i64 [ %332, %322 ], [ 0, %280 ]\l  %325 = zext i32 %323 to i64\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %276, i64 %325\l  %327 = load i8, i8 addrspace(4)* %326, align 1, !tbaa !13\l  %328 = zext i8 %327 to i64\l  %329 = shl i32 %323, 3\l  %330 = zext i32 %329 to i64\l  %331 = shl nuw i64 %328, %330\l  %332 = or i64 %331, %324\l  %333 = add nuw nsw i32 %323, 1\l  %334 = icmp eq i32 %333, %277\l  br i1 %334, label %335, label %322\l|{<s0>T|<s1>F}}"];
	Node0x56a9450:s0 -> Node0x56a9400;
	Node0x56a9450:s1 -> Node0x56a9450;
	Node0x56a9400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%335:\l335:                                              \l  %336 = phi i8 addrspace(4)* [ %321, %282 ], [ %276, %280 ], [ %276, %322 ]\l  %337 = phi i32 [ %320, %282 ], [ 0, %280 ], [ 0, %322 ]\l  %338 = phi i64 [ %319, %282 ], [ 0, %280 ], [ %332, %322 ]\l  %339 = icmp ugt i32 %337, 7\l  br i1 %339, label %342, label %340\l|{<s0>T|<s1>F}}"];
	Node0x56a9400:s0 -> Node0x56abe80;
	Node0x56a9400:s1 -> Node0x56abed0;
	Node0x56abed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%340:\l340:                                              \l  %341 = icmp eq i32 %337, 0\l  br i1 %341, label %395, label %382\l|{<s0>T|<s1>F}}"];
	Node0x56abed0:s0 -> Node0x56ac060;
	Node0x56abed0:s1 -> Node0x56ac0b0;
	Node0x56abe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%342:\l342:                                              \l  %343 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !13\l  %344 = zext i8 %343 to i64\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 1\l  %346 = load i8, i8 addrspace(4)* %345, align 1, !tbaa !13\l  %347 = zext i8 %346 to i64\l  %348 = shl nuw nsw i64 %347, 8\l  %349 = or i64 %348, %344\l  %350 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 2\l  %351 = load i8, i8 addrspace(4)* %350, align 1, !tbaa !13\l  %352 = zext i8 %351 to i64\l  %353 = shl nuw nsw i64 %352, 16\l  %354 = or i64 %349, %353\l  %355 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 3\l  %356 = load i8, i8 addrspace(4)* %355, align 1, !tbaa !13\l  %357 = zext i8 %356 to i64\l  %358 = shl nuw nsw i64 %357, 24\l  %359 = or i64 %354, %358\l  %360 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 4\l  %361 = load i8, i8 addrspace(4)* %360, align 1, !tbaa !13\l  %362 = zext i8 %361 to i64\l  %363 = shl nuw nsw i64 %362, 32\l  %364 = or i64 %359, %363\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 5\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !13\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 40\l  %369 = or i64 %364, %368\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 6\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !13\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 48\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 7\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !13\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw i64 %377, 56\l  %379 = or i64 %374, %378\l  %380 = add nsw i32 %337, -8\l  %381 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 8\l  br label %395\l}"];
	Node0x56abe80 -> Node0x56ac060;
	Node0x56ac0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%382:\l382:                                              \l  %383 = phi i32 [ %393, %382 ], [ 0, %340 ]\l  %384 = phi i64 [ %392, %382 ], [ 0, %340 ]\l  %385 = zext i32 %383 to i64\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %336, i64 %385\l  %387 = load i8, i8 addrspace(4)* %386, align 1, !tbaa !13\l  %388 = zext i8 %387 to i64\l  %389 = shl i32 %383, 3\l  %390 = zext i32 %389 to i64\l  %391 = shl nuw i64 %388, %390\l  %392 = or i64 %391, %384\l  %393 = add nuw nsw i32 %383, 1\l  %394 = icmp eq i32 %393, %337\l  br i1 %394, label %395, label %382\l|{<s0>T|<s1>F}}"];
	Node0x56ac0b0:s0 -> Node0x56ac060;
	Node0x56ac0b0:s1 -> Node0x56ac0b0;
	Node0x56ac060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%395:\l395:                                              \l  %396 = phi i8 addrspace(4)* [ %381, %342 ], [ %336, %340 ], [ %336, %382 ]\l  %397 = phi i32 [ %380, %342 ], [ 0, %340 ], [ 0, %382 ]\l  %398 = phi i64 [ %379, %342 ], [ 0, %340 ], [ %392, %382 ]\l  %399 = icmp ugt i32 %397, 7\l  br i1 %399, label %402, label %400\l|{<s0>T|<s1>F}}"];
	Node0x56ac060:s0 -> Node0x56ae6e0;
	Node0x56ac060:s1 -> Node0x56ae730;
	Node0x56ae730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%400:\l400:                                              \l  %401 = icmp eq i32 %397, 0\l  br i1 %401, label %453, label %440\l|{<s0>T|<s1>F}}"];
	Node0x56ae730:s0 -> Node0x569e270;
	Node0x56ae730:s1 -> Node0x56ae8c0;
	Node0x56ae6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%402:\l402:                                              \l  %403 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !13\l  %404 = zext i8 %403 to i64\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 1\l  %406 = load i8, i8 addrspace(4)* %405, align 1, !tbaa !13\l  %407 = zext i8 %406 to i64\l  %408 = shl nuw nsw i64 %407, 8\l  %409 = or i64 %408, %404\l  %410 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 2\l  %411 = load i8, i8 addrspace(4)* %410, align 1, !tbaa !13\l  %412 = zext i8 %411 to i64\l  %413 = shl nuw nsw i64 %412, 16\l  %414 = or i64 %409, %413\l  %415 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 3\l  %416 = load i8, i8 addrspace(4)* %415, align 1, !tbaa !13\l  %417 = zext i8 %416 to i64\l  %418 = shl nuw nsw i64 %417, 24\l  %419 = or i64 %414, %418\l  %420 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 4\l  %421 = load i8, i8 addrspace(4)* %420, align 1, !tbaa !13\l  %422 = zext i8 %421 to i64\l  %423 = shl nuw nsw i64 %422, 32\l  %424 = or i64 %419, %423\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 5\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !13\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 40\l  %429 = or i64 %424, %428\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 6\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !13\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 48\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 7\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !13\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw i64 %437, 56\l  %439 = or i64 %434, %438\l  br label %453\l}"];
	Node0x56ae6e0 -> Node0x569e270;
	Node0x56ae8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%440:\l440:                                              \l  %441 = phi i32 [ %451, %440 ], [ 0, %400 ]\l  %442 = phi i64 [ %450, %440 ], [ 0, %400 ]\l  %443 = zext i32 %441 to i64\l  %444 = getelementptr inbounds i8, i8 addrspace(4)* %396, i64 %443\l  %445 = load i8, i8 addrspace(4)* %444, align 1, !tbaa !13\l  %446 = zext i8 %445 to i64\l  %447 = shl i32 %441, 3\l  %448 = zext i32 %447 to i64\l  %449 = shl nuw i64 %446, %448\l  %450 = or i64 %449, %442\l  %451 = add nuw nsw i32 %441, 1\l  %452 = icmp eq i32 %451, %397\l  br i1 %452, label %453, label %440\l|{<s0>T|<s1>F}}"];
	Node0x56ae8c0:s0 -> Node0x569e270;
	Node0x56ae8c0:s1 -> Node0x56ae8c0;
	Node0x569e270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%453:\l453:                                              \l  %454 = phi i64 [ %439, %402 ], [ 0, %400 ], [ %450, %440 ]\l  %455 = shl nuw nsw i64 %36, 2\l  %456 = add nuw nsw i64 %455, 28\l  %457 = and i64 %456, 480\l  %458 = and i64 %38, -225\l  %459 = or i64 %458, %457\l  %460 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %459, i64 noundef %98, i64 noundef %158, i64 noundef %218, i64\l... noundef %278, i64 noundef %338, i64 noundef %398, i64 noundef %454) #10\l  %461 = sub i64 %28, %36\l  %462 = getelementptr inbounds i8, i8 addrspace(4)* %29, i64 %36\l  %463 = icmp eq i64 %461, 0\l  br i1 %463, label %464, label %27\l|{<s0>T|<s1>F}}"];
	Node0x569e270:s0 -> Node0x569d230;
	Node0x569e270:s1 -> Node0x569ddd0;
	Node0x569d230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%464:\l464:                                              \l  %465 = phi \<2 x i64\> [ %22, %19 ], [ %460, %453 ]\l  %466 = extractelement \<2 x i64\> %465, i64 0\l  %467 = zext i32 %3 to i64\l  %468 = and i64 %466, -225\l  %469 = or i64 %468, 32\l  %470 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %469, i64 noundef %467, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %471 = extractelement \<2 x i64\> %470, i64 0\l  %472 = bitcast double %6 to i64\l  %473 = and i64 %471, -225\l  %474 = or i64 %473, 32\l  %475 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %474, i64 noundef %472, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %476 = extractelement \<2 x i64\> %475, i64 0\l  %477 = bitcast double %8 to i64\l  %478 = and i64 %476, -225\l  %479 = or i64 %478, 32\l  %480 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %479, i64 noundef %477, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %481 = extractelement \<2 x i64\> %480, i64 0\l  %482 = bitcast double %10 to i64\l  %483 = and i64 %481, -227\l  %484 = or i64 %483, 34\l  %485 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %484, i64 noundef %482, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %486 = getelementptr inbounds float, float addrspace(1)* %0, i64 1\l  %487 = load float, float addrspace(1)* %486, align 4, !tbaa !4\l  %488 = fpext float %487 to double\l  %489 = getelementptr inbounds float, float addrspace(1)* %1, i64 1\l  %490 = load float, float addrspace(1)* %489, align 4, !tbaa !4\l  %491 = fpext float %490 to double\l  %492 = getelementptr inbounds float, float addrspace(1)* %2, i64 1\l  %493 = load float, float addrspace(1)* %492, align 4, !tbaa !4\l  %494 = fpext float %493 to double\l  %495 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %496 = extractelement \<2 x i64\> %495, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([39 x i8], [39 x i8] addrspace(4)* @.str.1, i64 0, i64 0) to i8*), i8*\l... null), label %497, label %501\l|{<s0>T|<s1>F}}"];
	Node0x569d230:s0 -> Node0x56b2a40;
	Node0x569d230:s1 -> Node0x56b2a90;
	Node0x56b2a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%497:\l497:                                              \l  %498 = and i64 %496, -225\l  %499 = or i64 %498, 32\l  %500 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %499, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %942\l}"];
	Node0x56b2a40 -> Node0x56b2d20;
	Node0x56b2a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%501:\l501:                                              \l  %502 = and i64 %496, 2\l  %503 = and i64 %496, -3\l  %504 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %503, i64 0\l  br label %505\l}"];
	Node0x56b2a90 -> Node0x56b2de0;
	Node0x56b2de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%505:\l505:                                              \l  %506 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)* @.str.1, i64 0,\l... i64 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast\l... (i8 addrspace(4)* getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)*\l... @.str.1, i64 0, i64 38) to i8*) to i64), i64 add (i64 sub (i64 0, i64\l... ptrtoint ([39 x i8]* addrspacecast ([39 x i8] addrspace(4)* @.str.1 to [39 x\l... i8]*) to i64)), i64 1))), %501 ], [ %939, %931 ]\l  %507 = phi i8 addrspace(4)* [ getelementptr inbounds ([39 x i8], [39 x i8]\l... addrspace(4)* @.str.1, i64 0, i64 0), %501 ], [ %940, %931 ]\l  %508 = phi \<2 x i64\> [ %504, %501 ], [ %938, %931 ]\l  %509 = icmp ugt i64 %506, 56\l  %510 = extractelement \<2 x i64\> %508, i64 0\l  %511 = or i64 %510, %502\l  %512 = insertelement \<2 x i64\> poison, i64 %511, i64 0\l  %513 = select i1 %509, \<2 x i64\> %508, \<2 x i64\> %512\l  %514 = tail call i64 @llvm.umin.i64(i64 %506, i64 56)\l  %515 = trunc i64 %514 to i32\l  %516 = extractelement \<2 x i64\> %513, i64 0\l  %517 = icmp ugt i32 %515, 7\l  br i1 %517, label %520, label %518\l|{<s0>T|<s1>F}}"];
	Node0x56b2de0:s0 -> Node0x56a8070;
	Node0x56b2de0:s1 -> Node0x56a80c0;
	Node0x56a80c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%518:\l518:                                              \l  %519 = icmp eq i32 %515, 0\l  br i1 %519, label %573, label %560\l|{<s0>T|<s1>F}}"];
	Node0x56a80c0:s0 -> Node0x56a8290;
	Node0x56a80c0:s1 -> Node0x56a82e0;
	Node0x56a8070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%520:\l520:                                              \l  %521 = load i8, i8 addrspace(4)* %507, align 1, !tbaa !13\l  %522 = zext i8 %521 to i64\l  %523 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 1\l  %524 = load i8, i8 addrspace(4)* %523, align 1, !tbaa !13\l  %525 = zext i8 %524 to i64\l  %526 = shl nuw nsw i64 %525, 8\l  %527 = or i64 %526, %522\l  %528 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 2\l  %529 = load i8, i8 addrspace(4)* %528, align 1, !tbaa !13\l  %530 = zext i8 %529 to i64\l  %531 = shl nuw nsw i64 %530, 16\l  %532 = or i64 %527, %531\l  %533 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 3\l  %534 = load i8, i8 addrspace(4)* %533, align 1, !tbaa !13\l  %535 = zext i8 %534 to i64\l  %536 = shl nuw nsw i64 %535, 24\l  %537 = or i64 %532, %536\l  %538 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 4\l  %539 = load i8, i8 addrspace(4)* %538, align 1, !tbaa !13\l  %540 = zext i8 %539 to i64\l  %541 = shl nuw nsw i64 %540, 32\l  %542 = or i64 %537, %541\l  %543 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 5\l  %544 = load i8, i8 addrspace(4)* %543, align 1, !tbaa !13\l  %545 = zext i8 %544 to i64\l  %546 = shl nuw nsw i64 %545, 40\l  %547 = or i64 %542, %546\l  %548 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 6\l  %549 = load i8, i8 addrspace(4)* %548, align 1, !tbaa !13\l  %550 = zext i8 %549 to i64\l  %551 = shl nuw nsw i64 %550, 48\l  %552 = or i64 %547, %551\l  %553 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 7\l  %554 = load i8, i8 addrspace(4)* %553, align 1, !tbaa !13\l  %555 = zext i8 %554 to i64\l  %556 = shl nuw i64 %555, 56\l  %557 = or i64 %552, %556\l  %558 = add nsw i32 %515, -8\l  %559 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 8\l  br label %573\l}"];
	Node0x56a8070 -> Node0x56a8290;
	Node0x56a82e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%560:\l560:                                              \l  %561 = phi i32 [ %571, %560 ], [ 0, %518 ]\l  %562 = phi i64 [ %570, %560 ], [ 0, %518 ]\l  %563 = zext i32 %561 to i64\l  %564 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 %563\l  %565 = load i8, i8 addrspace(4)* %564, align 1, !tbaa !13\l  %566 = zext i8 %565 to i64\l  %567 = shl i32 %561, 3\l  %568 = zext i32 %567 to i64\l  %569 = shl nuw i64 %566, %568\l  %570 = or i64 %569, %562\l  %571 = add nuw nsw i32 %561, 1\l  %572 = icmp eq i32 %571, %515\l  br i1 %572, label %573, label %560, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x56a82e0:s0 -> Node0x56a8290;
	Node0x56a82e0:s1 -> Node0x56a82e0;
	Node0x56a8290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%573:\l573:                                              \l  %574 = phi i8 addrspace(4)* [ %559, %520 ], [ %507, %518 ], [ %507, %560 ]\l  %575 = phi i32 [ %558, %520 ], [ 0, %518 ], [ 0, %560 ]\l  %576 = phi i64 [ %557, %520 ], [ 0, %518 ], [ %570, %560 ]\l  %577 = icmp ugt i32 %575, 7\l  br i1 %577, label %580, label %578\l|{<s0>T|<s1>F}}"];
	Node0x56a8290:s0 -> Node0x56b76c0;
	Node0x56a8290:s1 -> Node0x56b7710;
	Node0x56b7710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%578:\l578:                                              \l  %579 = icmp eq i32 %575, 0\l  br i1 %579, label %633, label %620\l|{<s0>T|<s1>F}}"];
	Node0x56b7710:s0 -> Node0x56b78a0;
	Node0x56b7710:s1 -> Node0x56b78f0;
	Node0x56b76c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%580:\l580:                                              \l  %581 = load i8, i8 addrspace(4)* %574, align 1, !tbaa !13\l  %582 = zext i8 %581 to i64\l  %583 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 1\l  %584 = load i8, i8 addrspace(4)* %583, align 1, !tbaa !13\l  %585 = zext i8 %584 to i64\l  %586 = shl nuw nsw i64 %585, 8\l  %587 = or i64 %586, %582\l  %588 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 2\l  %589 = load i8, i8 addrspace(4)* %588, align 1, !tbaa !13\l  %590 = zext i8 %589 to i64\l  %591 = shl nuw nsw i64 %590, 16\l  %592 = or i64 %587, %591\l  %593 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 3\l  %594 = load i8, i8 addrspace(4)* %593, align 1, !tbaa !13\l  %595 = zext i8 %594 to i64\l  %596 = shl nuw nsw i64 %595, 24\l  %597 = or i64 %592, %596\l  %598 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 4\l  %599 = load i8, i8 addrspace(4)* %598, align 1, !tbaa !13\l  %600 = zext i8 %599 to i64\l  %601 = shl nuw nsw i64 %600, 32\l  %602 = or i64 %597, %601\l  %603 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 5\l  %604 = load i8, i8 addrspace(4)* %603, align 1, !tbaa !13\l  %605 = zext i8 %604 to i64\l  %606 = shl nuw nsw i64 %605, 40\l  %607 = or i64 %602, %606\l  %608 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 6\l  %609 = load i8, i8 addrspace(4)* %608, align 1, !tbaa !13\l  %610 = zext i8 %609 to i64\l  %611 = shl nuw nsw i64 %610, 48\l  %612 = or i64 %607, %611\l  %613 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 7\l  %614 = load i8, i8 addrspace(4)* %613, align 1, !tbaa !13\l  %615 = zext i8 %614 to i64\l  %616 = shl nuw i64 %615, 56\l  %617 = or i64 %612, %616\l  %618 = add nsw i32 %575, -8\l  %619 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 8\l  br label %633\l}"];
	Node0x56b76c0 -> Node0x56b78a0;
	Node0x56b78f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%620:\l620:                                              \l  %621 = phi i32 [ %631, %620 ], [ 0, %578 ]\l  %622 = phi i64 [ %630, %620 ], [ 0, %578 ]\l  %623 = zext i32 %621 to i64\l  %624 = getelementptr inbounds i8, i8 addrspace(4)* %574, i64 %623\l  %625 = load i8, i8 addrspace(4)* %624, align 1, !tbaa !13\l  %626 = zext i8 %625 to i64\l  %627 = shl i32 %621, 3\l  %628 = zext i32 %627 to i64\l  %629 = shl nuw i64 %626, %628\l  %630 = or i64 %629, %622\l  %631 = add nuw nsw i32 %621, 1\l  %632 = icmp eq i32 %631, %575\l  br i1 %632, label %633, label %620\l|{<s0>T|<s1>F}}"];
	Node0x56b78f0:s0 -> Node0x56b78a0;
	Node0x56b78f0:s1 -> Node0x56b78f0;
	Node0x56b78a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%633:\l633:                                              \l  %634 = phi i8 addrspace(4)* [ %619, %580 ], [ %574, %578 ], [ %574, %620 ]\l  %635 = phi i32 [ %618, %580 ], [ 0, %578 ], [ 0, %620 ]\l  %636 = phi i64 [ %617, %580 ], [ 0, %578 ], [ %630, %620 ]\l  %637 = icmp ugt i32 %635, 7\l  br i1 %637, label %640, label %638\l|{<s0>T|<s1>F}}"];
	Node0x56b78a0:s0 -> Node0x56b9940;
	Node0x56b78a0:s1 -> Node0x56b9990;
	Node0x56b9990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%638:\l638:                                              \l  %639 = icmp eq i32 %635, 0\l  br i1 %639, label %693, label %680\l|{<s0>T|<s1>F}}"];
	Node0x56b9990:s0 -> Node0x56b9b20;
	Node0x56b9990:s1 -> Node0x56b9b70;
	Node0x56b9940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%640:\l640:                                              \l  %641 = load i8, i8 addrspace(4)* %634, align 1, !tbaa !13\l  %642 = zext i8 %641 to i64\l  %643 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 1\l  %644 = load i8, i8 addrspace(4)* %643, align 1, !tbaa !13\l  %645 = zext i8 %644 to i64\l  %646 = shl nuw nsw i64 %645, 8\l  %647 = or i64 %646, %642\l  %648 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 2\l  %649 = load i8, i8 addrspace(4)* %648, align 1, !tbaa !13\l  %650 = zext i8 %649 to i64\l  %651 = shl nuw nsw i64 %650, 16\l  %652 = or i64 %647, %651\l  %653 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 3\l  %654 = load i8, i8 addrspace(4)* %653, align 1, !tbaa !13\l  %655 = zext i8 %654 to i64\l  %656 = shl nuw nsw i64 %655, 24\l  %657 = or i64 %652, %656\l  %658 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 4\l  %659 = load i8, i8 addrspace(4)* %658, align 1, !tbaa !13\l  %660 = zext i8 %659 to i64\l  %661 = shl nuw nsw i64 %660, 32\l  %662 = or i64 %657, %661\l  %663 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 5\l  %664 = load i8, i8 addrspace(4)* %663, align 1, !tbaa !13\l  %665 = zext i8 %664 to i64\l  %666 = shl nuw nsw i64 %665, 40\l  %667 = or i64 %662, %666\l  %668 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 6\l  %669 = load i8, i8 addrspace(4)* %668, align 1, !tbaa !13\l  %670 = zext i8 %669 to i64\l  %671 = shl nuw nsw i64 %670, 48\l  %672 = or i64 %667, %671\l  %673 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 7\l  %674 = load i8, i8 addrspace(4)* %673, align 1, !tbaa !13\l  %675 = zext i8 %674 to i64\l  %676 = shl nuw i64 %675, 56\l  %677 = or i64 %672, %676\l  %678 = add nsw i32 %635, -8\l  %679 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 8\l  br label %693\l}"];
	Node0x56b9940 -> Node0x56b9b20;
	Node0x56b9b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%680:\l680:                                              \l  %681 = phi i32 [ %691, %680 ], [ 0, %638 ]\l  %682 = phi i64 [ %690, %680 ], [ 0, %638 ]\l  %683 = zext i32 %681 to i64\l  %684 = getelementptr inbounds i8, i8 addrspace(4)* %634, i64 %683\l  %685 = load i8, i8 addrspace(4)* %684, align 1, !tbaa !13\l  %686 = zext i8 %685 to i64\l  %687 = shl i32 %681, 3\l  %688 = zext i32 %687 to i64\l  %689 = shl nuw i64 %686, %688\l  %690 = or i64 %689, %682\l  %691 = add nuw nsw i32 %681, 1\l  %692 = icmp eq i32 %691, %635\l  br i1 %692, label %693, label %680\l|{<s0>T|<s1>F}}"];
	Node0x56b9b70:s0 -> Node0x56b9b20;
	Node0x56b9b70:s1 -> Node0x56b9b70;
	Node0x56b9b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%693:\l693:                                              \l  %694 = phi i8 addrspace(4)* [ %679, %640 ], [ %634, %638 ], [ %634, %680 ]\l  %695 = phi i32 [ %678, %640 ], [ 0, %638 ], [ 0, %680 ]\l  %696 = phi i64 [ %677, %640 ], [ 0, %638 ], [ %690, %680 ]\l  %697 = icmp ugt i32 %695, 7\l  br i1 %697, label %700, label %698\l|{<s0>T|<s1>F}}"];
	Node0x56b9b20:s0 -> Node0x56ab710;
	Node0x56b9b20:s1 -> Node0x56ab760;
	Node0x56ab760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%698:\l698:                                              \l  %699 = icmp eq i32 %695, 0\l  br i1 %699, label %753, label %740\l|{<s0>T|<s1>F}}"];
	Node0x56ab760:s0 -> Node0x56bd180;
	Node0x56ab760:s1 -> Node0x56bd1d0;
	Node0x56ab710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%700:\l700:                                              \l  %701 = load i8, i8 addrspace(4)* %694, align 1, !tbaa !13\l  %702 = zext i8 %701 to i64\l  %703 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 1\l  %704 = load i8, i8 addrspace(4)* %703, align 1, !tbaa !13\l  %705 = zext i8 %704 to i64\l  %706 = shl nuw nsw i64 %705, 8\l  %707 = or i64 %706, %702\l  %708 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 2\l  %709 = load i8, i8 addrspace(4)* %708, align 1, !tbaa !13\l  %710 = zext i8 %709 to i64\l  %711 = shl nuw nsw i64 %710, 16\l  %712 = or i64 %707, %711\l  %713 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 3\l  %714 = load i8, i8 addrspace(4)* %713, align 1, !tbaa !13\l  %715 = zext i8 %714 to i64\l  %716 = shl nuw nsw i64 %715, 24\l  %717 = or i64 %712, %716\l  %718 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 4\l  %719 = load i8, i8 addrspace(4)* %718, align 1, !tbaa !13\l  %720 = zext i8 %719 to i64\l  %721 = shl nuw nsw i64 %720, 32\l  %722 = or i64 %717, %721\l  %723 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 5\l  %724 = load i8, i8 addrspace(4)* %723, align 1, !tbaa !13\l  %725 = zext i8 %724 to i64\l  %726 = shl nuw nsw i64 %725, 40\l  %727 = or i64 %722, %726\l  %728 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 6\l  %729 = load i8, i8 addrspace(4)* %728, align 1, !tbaa !13\l  %730 = zext i8 %729 to i64\l  %731 = shl nuw nsw i64 %730, 48\l  %732 = or i64 %727, %731\l  %733 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 7\l  %734 = load i8, i8 addrspace(4)* %733, align 1, !tbaa !13\l  %735 = zext i8 %734 to i64\l  %736 = shl nuw i64 %735, 56\l  %737 = or i64 %732, %736\l  %738 = add nsw i32 %695, -8\l  %739 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 8\l  br label %753\l}"];
	Node0x56ab710 -> Node0x56bd180;
	Node0x56bd1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%740:\l740:                                              \l  %741 = phi i32 [ %751, %740 ], [ 0, %698 ]\l  %742 = phi i64 [ %750, %740 ], [ 0, %698 ]\l  %743 = zext i32 %741 to i64\l  %744 = getelementptr inbounds i8, i8 addrspace(4)* %694, i64 %743\l  %745 = load i8, i8 addrspace(4)* %744, align 1, !tbaa !13\l  %746 = zext i8 %745 to i64\l  %747 = shl i32 %741, 3\l  %748 = zext i32 %747 to i64\l  %749 = shl nuw i64 %746, %748\l  %750 = or i64 %749, %742\l  %751 = add nuw nsw i32 %741, 1\l  %752 = icmp eq i32 %751, %695\l  br i1 %752, label %753, label %740\l|{<s0>T|<s1>F}}"];
	Node0x56bd1d0:s0 -> Node0x56bd180;
	Node0x56bd1d0:s1 -> Node0x56bd1d0;
	Node0x56bd180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%753:\l753:                                              \l  %754 = phi i8 addrspace(4)* [ %739, %700 ], [ %694, %698 ], [ %694, %740 ]\l  %755 = phi i32 [ %738, %700 ], [ 0, %698 ], [ 0, %740 ]\l  %756 = phi i64 [ %737, %700 ], [ 0, %698 ], [ %750, %740 ]\l  %757 = icmp ugt i32 %755, 7\l  br i1 %757, label %760, label %758\l|{<s0>T|<s1>F}}"];
	Node0x56bd180:s0 -> Node0x56bfdf0;
	Node0x56bd180:s1 -> Node0x56bfe40;
	Node0x56bfe40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%758:\l758:                                              \l  %759 = icmp eq i32 %755, 0\l  br i1 %759, label %813, label %800\l|{<s0>T|<s1>F}}"];
	Node0x56bfe40:s0 -> Node0x56bffd0;
	Node0x56bfe40:s1 -> Node0x56c0020;
	Node0x56bfdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%760:\l760:                                              \l  %761 = load i8, i8 addrspace(4)* %754, align 1, !tbaa !13\l  %762 = zext i8 %761 to i64\l  %763 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 1\l  %764 = load i8, i8 addrspace(4)* %763, align 1, !tbaa !13\l  %765 = zext i8 %764 to i64\l  %766 = shl nuw nsw i64 %765, 8\l  %767 = or i64 %766, %762\l  %768 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 2\l  %769 = load i8, i8 addrspace(4)* %768, align 1, !tbaa !13\l  %770 = zext i8 %769 to i64\l  %771 = shl nuw nsw i64 %770, 16\l  %772 = or i64 %767, %771\l  %773 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 3\l  %774 = load i8, i8 addrspace(4)* %773, align 1, !tbaa !13\l  %775 = zext i8 %774 to i64\l  %776 = shl nuw nsw i64 %775, 24\l  %777 = or i64 %772, %776\l  %778 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 4\l  %779 = load i8, i8 addrspace(4)* %778, align 1, !tbaa !13\l  %780 = zext i8 %779 to i64\l  %781 = shl nuw nsw i64 %780, 32\l  %782 = or i64 %777, %781\l  %783 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 5\l  %784 = load i8, i8 addrspace(4)* %783, align 1, !tbaa !13\l  %785 = zext i8 %784 to i64\l  %786 = shl nuw nsw i64 %785, 40\l  %787 = or i64 %782, %786\l  %788 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 6\l  %789 = load i8, i8 addrspace(4)* %788, align 1, !tbaa !13\l  %790 = zext i8 %789 to i64\l  %791 = shl nuw nsw i64 %790, 48\l  %792 = or i64 %787, %791\l  %793 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 7\l  %794 = load i8, i8 addrspace(4)* %793, align 1, !tbaa !13\l  %795 = zext i8 %794 to i64\l  %796 = shl nuw i64 %795, 56\l  %797 = or i64 %792, %796\l  %798 = add nsw i32 %755, -8\l  %799 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 8\l  br label %813\l}"];
	Node0x56bfdf0 -> Node0x56bffd0;
	Node0x56c0020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%800:\l800:                                              \l  %801 = phi i32 [ %811, %800 ], [ 0, %758 ]\l  %802 = phi i64 [ %810, %800 ], [ 0, %758 ]\l  %803 = zext i32 %801 to i64\l  %804 = getelementptr inbounds i8, i8 addrspace(4)* %754, i64 %803\l  %805 = load i8, i8 addrspace(4)* %804, align 1, !tbaa !13\l  %806 = zext i8 %805 to i64\l  %807 = shl i32 %801, 3\l  %808 = zext i32 %807 to i64\l  %809 = shl nuw i64 %806, %808\l  %810 = or i64 %809, %802\l  %811 = add nuw nsw i32 %801, 1\l  %812 = icmp eq i32 %811, %755\l  br i1 %812, label %813, label %800\l|{<s0>T|<s1>F}}"];
	Node0x56c0020:s0 -> Node0x56bffd0;
	Node0x56c0020:s1 -> Node0x56c0020;
	Node0x56bffd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%813:\l813:                                              \l  %814 = phi i8 addrspace(4)* [ %799, %760 ], [ %754, %758 ], [ %754, %800 ]\l  %815 = phi i32 [ %798, %760 ], [ 0, %758 ], [ 0, %800 ]\l  %816 = phi i64 [ %797, %760 ], [ 0, %758 ], [ %810, %800 ]\l  %817 = icmp ugt i32 %815, 7\l  br i1 %817, label %820, label %818\l|{<s0>T|<s1>F}}"];
	Node0x56bffd0:s0 -> Node0x56c2040;
	Node0x56bffd0:s1 -> Node0x56c2090;
	Node0x56c2090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%818:\l818:                                              \l  %819 = icmp eq i32 %815, 0\l  br i1 %819, label %873, label %860\l|{<s0>T|<s1>F}}"];
	Node0x56c2090:s0 -> Node0x56c2220;
	Node0x56c2090:s1 -> Node0x56c2270;
	Node0x56c2040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%820:\l820:                                              \l  %821 = load i8, i8 addrspace(4)* %814, align 1, !tbaa !13\l  %822 = zext i8 %821 to i64\l  %823 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 1\l  %824 = load i8, i8 addrspace(4)* %823, align 1, !tbaa !13\l  %825 = zext i8 %824 to i64\l  %826 = shl nuw nsw i64 %825, 8\l  %827 = or i64 %826, %822\l  %828 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 2\l  %829 = load i8, i8 addrspace(4)* %828, align 1, !tbaa !13\l  %830 = zext i8 %829 to i64\l  %831 = shl nuw nsw i64 %830, 16\l  %832 = or i64 %827, %831\l  %833 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 3\l  %834 = load i8, i8 addrspace(4)* %833, align 1, !tbaa !13\l  %835 = zext i8 %834 to i64\l  %836 = shl nuw nsw i64 %835, 24\l  %837 = or i64 %832, %836\l  %838 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 4\l  %839 = load i8, i8 addrspace(4)* %838, align 1, !tbaa !13\l  %840 = zext i8 %839 to i64\l  %841 = shl nuw nsw i64 %840, 32\l  %842 = or i64 %837, %841\l  %843 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 5\l  %844 = load i8, i8 addrspace(4)* %843, align 1, !tbaa !13\l  %845 = zext i8 %844 to i64\l  %846 = shl nuw nsw i64 %845, 40\l  %847 = or i64 %842, %846\l  %848 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 6\l  %849 = load i8, i8 addrspace(4)* %848, align 1, !tbaa !13\l  %850 = zext i8 %849 to i64\l  %851 = shl nuw nsw i64 %850, 48\l  %852 = or i64 %847, %851\l  %853 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 7\l  %854 = load i8, i8 addrspace(4)* %853, align 1, !tbaa !13\l  %855 = zext i8 %854 to i64\l  %856 = shl nuw i64 %855, 56\l  %857 = or i64 %852, %856\l  %858 = add nsw i32 %815, -8\l  %859 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 8\l  br label %873\l}"];
	Node0x56c2040 -> Node0x56c2220;
	Node0x56c2270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%860:\l860:                                              \l  %861 = phi i32 [ %871, %860 ], [ 0, %818 ]\l  %862 = phi i64 [ %870, %860 ], [ 0, %818 ]\l  %863 = zext i32 %861 to i64\l  %864 = getelementptr inbounds i8, i8 addrspace(4)* %814, i64 %863\l  %865 = load i8, i8 addrspace(4)* %864, align 1, !tbaa !13\l  %866 = zext i8 %865 to i64\l  %867 = shl i32 %861, 3\l  %868 = zext i32 %867 to i64\l  %869 = shl nuw i64 %866, %868\l  %870 = or i64 %869, %862\l  %871 = add nuw nsw i32 %861, 1\l  %872 = icmp eq i32 %871, %815\l  br i1 %872, label %873, label %860\l|{<s0>T|<s1>F}}"];
	Node0x56c2270:s0 -> Node0x56c2220;
	Node0x56c2270:s1 -> Node0x56c2270;
	Node0x56c2220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%873:\l873:                                              \l  %874 = phi i8 addrspace(4)* [ %859, %820 ], [ %814, %818 ], [ %814, %860 ]\l  %875 = phi i32 [ %858, %820 ], [ 0, %818 ], [ 0, %860 ]\l  %876 = phi i64 [ %857, %820 ], [ 0, %818 ], [ %870, %860 ]\l  %877 = icmp ugt i32 %875, 7\l  br i1 %877, label %880, label %878\l|{<s0>T|<s1>F}}"];
	Node0x56c2220:s0 -> Node0x56c4290;
	Node0x56c2220:s1 -> Node0x56c42e0;
	Node0x56c42e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%878:\l878:                                              \l  %879 = icmp eq i32 %875, 0\l  br i1 %879, label %931, label %918\l|{<s0>T|<s1>F}}"];
	Node0x56c42e0:s0 -> Node0x56b3460;
	Node0x56c42e0:s1 -> Node0x56c4470;
	Node0x56c4290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%880:\l880:                                              \l  %881 = load i8, i8 addrspace(4)* %874, align 1, !tbaa !13\l  %882 = zext i8 %881 to i64\l  %883 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 1\l  %884 = load i8, i8 addrspace(4)* %883, align 1, !tbaa !13\l  %885 = zext i8 %884 to i64\l  %886 = shl nuw nsw i64 %885, 8\l  %887 = or i64 %886, %882\l  %888 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 2\l  %889 = load i8, i8 addrspace(4)* %888, align 1, !tbaa !13\l  %890 = zext i8 %889 to i64\l  %891 = shl nuw nsw i64 %890, 16\l  %892 = or i64 %887, %891\l  %893 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 3\l  %894 = load i8, i8 addrspace(4)* %893, align 1, !tbaa !13\l  %895 = zext i8 %894 to i64\l  %896 = shl nuw nsw i64 %895, 24\l  %897 = or i64 %892, %896\l  %898 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 4\l  %899 = load i8, i8 addrspace(4)* %898, align 1, !tbaa !13\l  %900 = zext i8 %899 to i64\l  %901 = shl nuw nsw i64 %900, 32\l  %902 = or i64 %897, %901\l  %903 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 5\l  %904 = load i8, i8 addrspace(4)* %903, align 1, !tbaa !13\l  %905 = zext i8 %904 to i64\l  %906 = shl nuw nsw i64 %905, 40\l  %907 = or i64 %902, %906\l  %908 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 6\l  %909 = load i8, i8 addrspace(4)* %908, align 1, !tbaa !13\l  %910 = zext i8 %909 to i64\l  %911 = shl nuw nsw i64 %910, 48\l  %912 = or i64 %907, %911\l  %913 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 7\l  %914 = load i8, i8 addrspace(4)* %913, align 1, !tbaa !13\l  %915 = zext i8 %914 to i64\l  %916 = shl nuw i64 %915, 56\l  %917 = or i64 %912, %916\l  br label %931\l}"];
	Node0x56c4290 -> Node0x56b3460;
	Node0x56c4470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%918:\l918:                                              \l  %919 = phi i32 [ %929, %918 ], [ 0, %878 ]\l  %920 = phi i64 [ %928, %918 ], [ 0, %878 ]\l  %921 = zext i32 %919 to i64\l  %922 = getelementptr inbounds i8, i8 addrspace(4)* %874, i64 %921\l  %923 = load i8, i8 addrspace(4)* %922, align 1, !tbaa !13\l  %924 = zext i8 %923 to i64\l  %925 = shl i32 %919, 3\l  %926 = zext i32 %925 to i64\l  %927 = shl nuw i64 %924, %926\l  %928 = or i64 %927, %920\l  %929 = add nuw nsw i32 %919, 1\l  %930 = icmp eq i32 %929, %875\l  br i1 %930, label %931, label %918\l|{<s0>T|<s1>F}}"];
	Node0x56c4470:s0 -> Node0x56b3460;
	Node0x56c4470:s1 -> Node0x56c4470;
	Node0x56b3460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%931:\l931:                                              \l  %932 = phi i64 [ %917, %880 ], [ 0, %878 ], [ %928, %918 ]\l  %933 = shl nuw nsw i64 %514, 2\l  %934 = add nuw nsw i64 %933, 28\l  %935 = and i64 %934, 480\l  %936 = and i64 %516, -225\l  %937 = or i64 %936, %935\l  %938 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %937, i64 noundef %576, i64 noundef %636, i64 noundef %696, i64\l... noundef %756, i64 noundef %816, i64 noundef %876, i64 noundef %932) #10\l  %939 = sub i64 %506, %514\l  %940 = getelementptr inbounds i8, i8 addrspace(4)* %507, i64 %514\l  %941 = icmp eq i64 %939, 0\l  br i1 %941, label %942, label %505\l|{<s0>T|<s1>F}}"];
	Node0x56b3460:s0 -> Node0x56b2d20;
	Node0x56b3460:s1 -> Node0x56b2de0;
	Node0x56b2d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%942:\l942:                                              \l  %943 = phi \<2 x i64\> [ %500, %497 ], [ %938, %931 ]\l  %944 = extractelement \<2 x i64\> %943, i64 0\l  %945 = and i64 %944, -225\l  %946 = or i64 %945, 32\l  %947 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %946, i64 noundef %467, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %948 = extractelement \<2 x i64\> %947, i64 0\l  %949 = bitcast double %488 to i64\l  %950 = and i64 %948, -225\l  %951 = or i64 %950, 32\l  %952 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %951, i64 noundef %949, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %953 = extractelement \<2 x i64\> %952, i64 0\l  %954 = bitcast double %491 to i64\l  %955 = and i64 %953, -225\l  %956 = or i64 %955, 32\l  %957 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %956, i64 noundef %954, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %958 = extractelement \<2 x i64\> %957, i64 0\l  %959 = bitcast double %494 to i64\l  %960 = and i64 %958, -227\l  %961 = or i64 %960, 34\l  %962 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %961, i64 noundef %959, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %963 = getelementptr inbounds float, float addrspace(1)* %0, i64 2\l  %964 = load float, float addrspace(1)* %963, align 4, !tbaa !4\l  %965 = getelementptr inbounds float, float addrspace(1)* %1, i64 2\l  %966 = load float, float addrspace(1)* %965, align 4, !tbaa !4\l  %967 = getelementptr inbounds float, float addrspace(1)* %2, i64 2\l  %968 = load float, float addrspace(1)* %967, align 4, !tbaa !4\l  %969 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %970 = extractelement \<2 x i64\> %969, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([39 x i8], [39 x i8] addrspace(4)* @.str.2, i64 0, i64 0) to i8*), i8*\l... null), label %971, label %975\l|{<s0>T|<s1>F}}"];
	Node0x56b2d20:s0 -> Node0x56c8450;
	Node0x56b2d20:s1 -> Node0x56c84a0;
	Node0x56c8450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%971:\l971:                                              \l  %972 = and i64 %970, -225\l  %973 = or i64 %972, 32\l  %974 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %16,\l... i64 noundef %973, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %1416\l}"];
	Node0x56c8450 -> Node0x56c8730;
	Node0x56c84a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%975:\l975:                                              \l  %976 = and i64 %970, 2\l  %977 = and i64 %970, -3\l  %978 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %977, i64 0\l  br label %979\l}"];
	Node0x56c84a0 -> Node0x56c87f0;
	Node0x56c87f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%979:\l979:                                              \l  %980 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)* @.str.2, i64 0,\l... i64 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast\l... (i8 addrspace(4)* getelementptr inbounds ([39 x i8], [39 x i8] addrspace(4)*\l... @.str.2, i64 0, i64 38) to i8*) to i64), i64 add (i64 sub (i64 0, i64\l... ptrtoint ([39 x i8]* addrspacecast ([39 x i8] addrspace(4)* @.str.2 to [39 x\l... i8]*) to i64)), i64 1))), %975 ], [ %1413, %1405 ]\l  %981 = phi i8 addrspace(4)* [ getelementptr inbounds ([39 x i8], [39 x i8]\l... addrspace(4)* @.str.2, i64 0, i64 0), %975 ], [ %1414, %1405 ]\l  %982 = phi \<2 x i64\> [ %978, %975 ], [ %1412, %1405 ]\l  %983 = icmp ugt i64 %980, 56\l  %984 = extractelement \<2 x i64\> %982, i64 0\l  %985 = or i64 %984, %976\l  %986 = insertelement \<2 x i64\> poison, i64 %985, i64 0\l  %987 = select i1 %983, \<2 x i64\> %982, \<2 x i64\> %986\l  %988 = tail call i64 @llvm.umin.i64(i64 %980, i64 56)\l  %989 = trunc i64 %988 to i32\l  %990 = extractelement \<2 x i64\> %987, i64 0\l  %991 = icmp ugt i32 %989, 7\l  br i1 %991, label %994, label %992\l|{<s0>T|<s1>F}}"];
	Node0x56c87f0:s0 -> Node0x56c9730;
	Node0x56c87f0:s1 -> Node0x56c97c0;
	Node0x56c97c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%992:\l992:                                              \l  %993 = icmp eq i32 %989, 0\l  br i1 %993, label %1047, label %1034\l|{<s0>T|<s1>F}}"];
	Node0x56c97c0:s0 -> Node0x56c9990;
	Node0x56c97c0:s1 -> Node0x56c99e0;
	Node0x56c9730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%994:\l994:                                              \l  %995 = load i8, i8 addrspace(4)* %981, align 1, !tbaa !13\l  %996 = zext i8 %995 to i64\l  %997 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 1\l  %998 = load i8, i8 addrspace(4)* %997, align 1, !tbaa !13\l  %999 = zext i8 %998 to i64\l  %1000 = shl nuw nsw i64 %999, 8\l  %1001 = or i64 %1000, %996\l  %1002 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 2\l  %1003 = load i8, i8 addrspace(4)* %1002, align 1, !tbaa !13\l  %1004 = zext i8 %1003 to i64\l  %1005 = shl nuw nsw i64 %1004, 16\l  %1006 = or i64 %1001, %1005\l  %1007 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 3\l  %1008 = load i8, i8 addrspace(4)* %1007, align 1, !tbaa !13\l  %1009 = zext i8 %1008 to i64\l  %1010 = shl nuw nsw i64 %1009, 24\l  %1011 = or i64 %1006, %1010\l  %1012 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 4\l  %1013 = load i8, i8 addrspace(4)* %1012, align 1, !tbaa !13\l  %1014 = zext i8 %1013 to i64\l  %1015 = shl nuw nsw i64 %1014, 32\l  %1016 = or i64 %1011, %1015\l  %1017 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 5\l  %1018 = load i8, i8 addrspace(4)* %1017, align 1, !tbaa !13\l  %1019 = zext i8 %1018 to i64\l  %1020 = shl nuw nsw i64 %1019, 40\l  %1021 = or i64 %1016, %1020\l  %1022 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 6\l  %1023 = load i8, i8 addrspace(4)* %1022, align 1, !tbaa !13\l  %1024 = zext i8 %1023 to i64\l  %1025 = shl nuw nsw i64 %1024, 48\l  %1026 = or i64 %1021, %1025\l  %1027 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 7\l  %1028 = load i8, i8 addrspace(4)* %1027, align 1, !tbaa !13\l  %1029 = zext i8 %1028 to i64\l  %1030 = shl nuw i64 %1029, 56\l  %1031 = or i64 %1026, %1030\l  %1032 = add nsw i32 %989, -8\l  %1033 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 8\l  br label %1047\l}"];
	Node0x56c9730 -> Node0x56c9990;
	Node0x56c99e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1034:\l1034:                                             \l  %1035 = phi i32 [ %1045, %1034 ], [ 0, %992 ]\l  %1036 = phi i64 [ %1044, %1034 ], [ 0, %992 ]\l  %1037 = zext i32 %1035 to i64\l  %1038 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 %1037\l  %1039 = load i8, i8 addrspace(4)* %1038, align 1, !tbaa !13\l  %1040 = zext i8 %1039 to i64\l  %1041 = shl i32 %1035, 3\l  %1042 = zext i32 %1041 to i64\l  %1043 = shl nuw i64 %1040, %1042\l  %1044 = or i64 %1043, %1036\l  %1045 = add nuw nsw i32 %1035, 1\l  %1046 = icmp eq i32 %1045, %989\l  br i1 %1046, label %1047, label %1034, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x56c99e0:s0 -> Node0x56c9990;
	Node0x56c99e0:s1 -> Node0x56c99e0;
	Node0x56c9990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1047:\l1047:                                             \l  %1048 = phi i8 addrspace(4)* [ %1033, %994 ], [ %981, %992 ], [ %981, %1034 ]\l  %1049 = phi i32 [ %1032, %994 ], [ 0, %992 ], [ 0, %1034 ]\l  %1050 = phi i64 [ %1031, %994 ], [ 0, %992 ], [ %1044, %1034 ]\l  %1051 = icmp ugt i32 %1049, 7\l  br i1 %1051, label %1054, label %1052\l|{<s0>T|<s1>F}}"];
	Node0x56c9990:s0 -> Node0x56b49b0;
	Node0x56c9990:s1 -> Node0x56b4a00;
	Node0x56b4a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1052:\l1052:                                             \l  %1053 = icmp eq i32 %1049, 0\l  br i1 %1053, label %1107, label %1094\l|{<s0>T|<s1>F}}"];
	Node0x56b4a00:s0 -> Node0x56b4b90;
	Node0x56b4a00:s1 -> Node0x56b4be0;
	Node0x56b49b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1054:\l1054:                                             \l  %1055 = load i8, i8 addrspace(4)* %1048, align 1, !tbaa !13\l  %1056 = zext i8 %1055 to i64\l  %1057 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 1\l  %1058 = load i8, i8 addrspace(4)* %1057, align 1, !tbaa !13\l  %1059 = zext i8 %1058 to i64\l  %1060 = shl nuw nsw i64 %1059, 8\l  %1061 = or i64 %1060, %1056\l  %1062 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 2\l  %1063 = load i8, i8 addrspace(4)* %1062, align 1, !tbaa !13\l  %1064 = zext i8 %1063 to i64\l  %1065 = shl nuw nsw i64 %1064, 16\l  %1066 = or i64 %1061, %1065\l  %1067 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 3\l  %1068 = load i8, i8 addrspace(4)* %1067, align 1, !tbaa !13\l  %1069 = zext i8 %1068 to i64\l  %1070 = shl nuw nsw i64 %1069, 24\l  %1071 = or i64 %1066, %1070\l  %1072 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 4\l  %1073 = load i8, i8 addrspace(4)* %1072, align 1, !tbaa !13\l  %1074 = zext i8 %1073 to i64\l  %1075 = shl nuw nsw i64 %1074, 32\l  %1076 = or i64 %1071, %1075\l  %1077 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 5\l  %1078 = load i8, i8 addrspace(4)* %1077, align 1, !tbaa !13\l  %1079 = zext i8 %1078 to i64\l  %1080 = shl nuw nsw i64 %1079, 40\l  %1081 = or i64 %1076, %1080\l  %1082 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 6\l  %1083 = load i8, i8 addrspace(4)* %1082, align 1, !tbaa !13\l  %1084 = zext i8 %1083 to i64\l  %1085 = shl nuw nsw i64 %1084, 48\l  %1086 = or i64 %1081, %1085\l  %1087 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 7\l  %1088 = load i8, i8 addrspace(4)* %1087, align 1, !tbaa !13\l  %1089 = zext i8 %1088 to i64\l  %1090 = shl nuw i64 %1089, 56\l  %1091 = or i64 %1086, %1090\l  %1092 = add nsw i32 %1049, -8\l  %1093 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 8\l  br label %1107\l}"];
	Node0x56b49b0 -> Node0x56b4b90;
	Node0x56b4be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1094:\l1094:                                             \l  %1095 = phi i32 [ %1105, %1094 ], [ 0, %1052 ]\l  %1096 = phi i64 [ %1104, %1094 ], [ 0, %1052 ]\l  %1097 = zext i32 %1095 to i64\l  %1098 = getelementptr inbounds i8, i8 addrspace(4)* %1048, i64 %1097\l  %1099 = load i8, i8 addrspace(4)* %1098, align 1, !tbaa !13\l  %1100 = zext i8 %1099 to i64\l  %1101 = shl i32 %1095, 3\l  %1102 = zext i32 %1101 to i64\l  %1103 = shl nuw i64 %1100, %1102\l  %1104 = or i64 %1103, %1096\l  %1105 = add nuw nsw i32 %1095, 1\l  %1106 = icmp eq i32 %1105, %1049\l  br i1 %1106, label %1107, label %1094\l|{<s0>T|<s1>F}}"];
	Node0x56b4be0:s0 -> Node0x56b4b90;
	Node0x56b4be0:s1 -> Node0x56b4be0;
	Node0x56b4b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1107:\l1107:                                             \l  %1108 = phi i8 addrspace(4)* [ %1093, %1054 ], [ %1048, %1052 ], [ %1048,\l... %1094 ]\l  %1109 = phi i32 [ %1092, %1054 ], [ 0, %1052 ], [ 0, %1094 ]\l  %1110 = phi i64 [ %1091, %1054 ], [ 0, %1052 ], [ %1104, %1094 ]\l  %1111 = icmp ugt i32 %1109, 7\l  br i1 %1111, label %1114, label %1112\l|{<s0>T|<s1>F}}"];
	Node0x56b4b90:s0 -> Node0x56cfca0;
	Node0x56b4b90:s1 -> Node0x56cfcf0;
	Node0x56cfcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1112:\l1112:                                             \l  %1113 = icmp eq i32 %1109, 0\l  br i1 %1113, label %1167, label %1154\l|{<s0>T|<s1>F}}"];
	Node0x56cfcf0:s0 -> Node0x56cfe80;
	Node0x56cfcf0:s1 -> Node0x56cfed0;
	Node0x56cfca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1114:\l1114:                                             \l  %1115 = load i8, i8 addrspace(4)* %1108, align 1, !tbaa !13\l  %1116 = zext i8 %1115 to i64\l  %1117 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 1\l  %1118 = load i8, i8 addrspace(4)* %1117, align 1, !tbaa !13\l  %1119 = zext i8 %1118 to i64\l  %1120 = shl nuw nsw i64 %1119, 8\l  %1121 = or i64 %1120, %1116\l  %1122 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 2\l  %1123 = load i8, i8 addrspace(4)* %1122, align 1, !tbaa !13\l  %1124 = zext i8 %1123 to i64\l  %1125 = shl nuw nsw i64 %1124, 16\l  %1126 = or i64 %1121, %1125\l  %1127 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 3\l  %1128 = load i8, i8 addrspace(4)* %1127, align 1, !tbaa !13\l  %1129 = zext i8 %1128 to i64\l  %1130 = shl nuw nsw i64 %1129, 24\l  %1131 = or i64 %1126, %1130\l  %1132 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 4\l  %1133 = load i8, i8 addrspace(4)* %1132, align 1, !tbaa !13\l  %1134 = zext i8 %1133 to i64\l  %1135 = shl nuw nsw i64 %1134, 32\l  %1136 = or i64 %1131, %1135\l  %1137 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 5\l  %1138 = load i8, i8 addrspace(4)* %1137, align 1, !tbaa !13\l  %1139 = zext i8 %1138 to i64\l  %1140 = shl nuw nsw i64 %1139, 40\l  %1141 = or i64 %1136, %1140\l  %1142 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 6\l  %1143 = load i8, i8 addrspace(4)* %1142, align 1, !tbaa !13\l  %1144 = zext i8 %1143 to i64\l  %1145 = shl nuw nsw i64 %1144, 48\l  %1146 = or i64 %1141, %1145\l  %1147 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 7\l  %1148 = load i8, i8 addrspace(4)* %1147, align 1, !tbaa !13\l  %1149 = zext i8 %1148 to i64\l  %1150 = shl nuw i64 %1149, 56\l  %1151 = or i64 %1146, %1150\l  %1152 = add nsw i32 %1109, -8\l  %1153 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 8\l  br label %1167\l}"];
	Node0x56cfca0 -> Node0x56cfe80;
	Node0x56cfed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1154:\l1154:                                             \l  %1155 = phi i32 [ %1165, %1154 ], [ 0, %1112 ]\l  %1156 = phi i64 [ %1164, %1154 ], [ 0, %1112 ]\l  %1157 = zext i32 %1155 to i64\l  %1158 = getelementptr inbounds i8, i8 addrspace(4)* %1108, i64 %1157\l  %1159 = load i8, i8 addrspace(4)* %1158, align 1, !tbaa !13\l  %1160 = zext i8 %1159 to i64\l  %1161 = shl i32 %1155, 3\l  %1162 = zext i32 %1161 to i64\l  %1163 = shl nuw i64 %1160, %1162\l  %1164 = or i64 %1163, %1156\l  %1165 = add nuw nsw i32 %1155, 1\l  %1166 = icmp eq i32 %1165, %1109\l  br i1 %1166, label %1167, label %1154\l|{<s0>T|<s1>F}}"];
	Node0x56cfed0:s0 -> Node0x56cfe80;
	Node0x56cfed0:s1 -> Node0x56cfed0;
	Node0x56cfe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1167:\l1167:                                             \l  %1168 = phi i8 addrspace(4)* [ %1153, %1114 ], [ %1108, %1112 ], [ %1108,\l... %1154 ]\l  %1169 = phi i32 [ %1152, %1114 ], [ 0, %1112 ], [ 0, %1154 ]\l  %1170 = phi i64 [ %1151, %1114 ], [ 0, %1112 ], [ %1164, %1154 ]\l  %1171 = icmp ugt i32 %1169, 7\l  br i1 %1171, label %1174, label %1172\l|{<s0>T|<s1>F}}"];
	Node0x56cfe80:s0 -> Node0x56d1ef0;
	Node0x56cfe80:s1 -> Node0x56d1f40;
	Node0x56d1f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1172:\l1172:                                             \l  %1173 = icmp eq i32 %1169, 0\l  br i1 %1173, label %1227, label %1214\l|{<s0>T|<s1>F}}"];
	Node0x56d1f40:s0 -> Node0x56d20d0;
	Node0x56d1f40:s1 -> Node0x56d2120;
	Node0x56d1ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1174:\l1174:                                             \l  %1175 = load i8, i8 addrspace(4)* %1168, align 1, !tbaa !13\l  %1176 = zext i8 %1175 to i64\l  %1177 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 1\l  %1178 = load i8, i8 addrspace(4)* %1177, align 1, !tbaa !13\l  %1179 = zext i8 %1178 to i64\l  %1180 = shl nuw nsw i64 %1179, 8\l  %1181 = or i64 %1180, %1176\l  %1182 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 2\l  %1183 = load i8, i8 addrspace(4)* %1182, align 1, !tbaa !13\l  %1184 = zext i8 %1183 to i64\l  %1185 = shl nuw nsw i64 %1184, 16\l  %1186 = or i64 %1181, %1185\l  %1187 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 3\l  %1188 = load i8, i8 addrspace(4)* %1187, align 1, !tbaa !13\l  %1189 = zext i8 %1188 to i64\l  %1190 = shl nuw nsw i64 %1189, 24\l  %1191 = or i64 %1186, %1190\l  %1192 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 4\l  %1193 = load i8, i8 addrspace(4)* %1192, align 1, !tbaa !13\l  %1194 = zext i8 %1193 to i64\l  %1195 = shl nuw nsw i64 %1194, 32\l  %1196 = or i64 %1191, %1195\l  %1197 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 5\l  %1198 = load i8, i8 addrspace(4)* %1197, align 1, !tbaa !13\l  %1199 = zext i8 %1198 to i64\l  %1200 = shl nuw nsw i64 %1199, 40\l  %1201 = or i64 %1196, %1200\l  %1202 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 6\l  %1203 = load i8, i8 addrspace(4)* %1202, align 1, !tbaa !13\l  %1204 = zext i8 %1203 to i64\l  %1205 = shl nuw nsw i64 %1204, 48\l  %1206 = or i64 %1201, %1205\l  %1207 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 7\l  %1208 = load i8, i8 addrspace(4)* %1207, align 1, !tbaa !13\l  %1209 = zext i8 %1208 to i64\l  %1210 = shl nuw i64 %1209, 56\l  %1211 = or i64 %1206, %1210\l  %1212 = add nsw i32 %1169, -8\l  %1213 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 8\l  br label %1227\l}"];
	Node0x56d1ef0 -> Node0x56d20d0;
	Node0x56d2120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1214:\l1214:                                             \l  %1215 = phi i32 [ %1225, %1214 ], [ 0, %1172 ]\l  %1216 = phi i64 [ %1224, %1214 ], [ 0, %1172 ]\l  %1217 = zext i32 %1215 to i64\l  %1218 = getelementptr inbounds i8, i8 addrspace(4)* %1168, i64 %1217\l  %1219 = load i8, i8 addrspace(4)* %1218, align 1, !tbaa !13\l  %1220 = zext i8 %1219 to i64\l  %1221 = shl i32 %1215, 3\l  %1222 = zext i32 %1221 to i64\l  %1223 = shl nuw i64 %1220, %1222\l  %1224 = or i64 %1223, %1216\l  %1225 = add nuw nsw i32 %1215, 1\l  %1226 = icmp eq i32 %1225, %1169\l  br i1 %1226, label %1227, label %1214\l|{<s0>T|<s1>F}}"];
	Node0x56d2120:s0 -> Node0x56d20d0;
	Node0x56d2120:s1 -> Node0x56d2120;
	Node0x56d20d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1227:\l1227:                                             \l  %1228 = phi i8 addrspace(4)* [ %1213, %1174 ], [ %1168, %1172 ], [ %1168,\l... %1214 ]\l  %1229 = phi i32 [ %1212, %1174 ], [ 0, %1172 ], [ 0, %1214 ]\l  %1230 = phi i64 [ %1211, %1174 ], [ 0, %1172 ], [ %1224, %1214 ]\l  %1231 = icmp ugt i32 %1229, 7\l  br i1 %1231, label %1234, label %1232\l|{<s0>T|<s1>F}}"];
	Node0x56d20d0:s0 -> Node0x56d4140;
	Node0x56d20d0:s1 -> Node0x56d4190;
	Node0x56d4190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1232:\l1232:                                             \l  %1233 = icmp eq i32 %1229, 0\l  br i1 %1233, label %1287, label %1274\l|{<s0>T|<s1>F}}"];
	Node0x56d4190:s0 -> Node0x56d4320;
	Node0x56d4190:s1 -> Node0x56d4370;
	Node0x56d4140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1234:\l1234:                                             \l  %1235 = load i8, i8 addrspace(4)* %1228, align 1, !tbaa !13\l  %1236 = zext i8 %1235 to i64\l  %1237 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 1\l  %1238 = load i8, i8 addrspace(4)* %1237, align 1, !tbaa !13\l  %1239 = zext i8 %1238 to i64\l  %1240 = shl nuw nsw i64 %1239, 8\l  %1241 = or i64 %1240, %1236\l  %1242 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 2\l  %1243 = load i8, i8 addrspace(4)* %1242, align 1, !tbaa !13\l  %1244 = zext i8 %1243 to i64\l  %1245 = shl nuw nsw i64 %1244, 16\l  %1246 = or i64 %1241, %1245\l  %1247 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 3\l  %1248 = load i8, i8 addrspace(4)* %1247, align 1, !tbaa !13\l  %1249 = zext i8 %1248 to i64\l  %1250 = shl nuw nsw i64 %1249, 24\l  %1251 = or i64 %1246, %1250\l  %1252 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 4\l  %1253 = load i8, i8 addrspace(4)* %1252, align 1, !tbaa !13\l  %1254 = zext i8 %1253 to i64\l  %1255 = shl nuw nsw i64 %1254, 32\l  %1256 = or i64 %1251, %1255\l  %1257 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 5\l  %1258 = load i8, i8 addrspace(4)* %1257, align 1, !tbaa !13\l  %1259 = zext i8 %1258 to i64\l  %1260 = shl nuw nsw i64 %1259, 40\l  %1261 = or i64 %1256, %1260\l  %1262 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 6\l  %1263 = load i8, i8 addrspace(4)* %1262, align 1, !tbaa !13\l  %1264 = zext i8 %1263 to i64\l  %1265 = shl nuw nsw i64 %1264, 48\l  %1266 = or i64 %1261, %1265\l  %1267 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 7\l  %1268 = load i8, i8 addrspace(4)* %1267, align 1, !tbaa !13\l  %1269 = zext i8 %1268 to i64\l  %1270 = shl nuw i64 %1269, 56\l  %1271 = or i64 %1266, %1270\l  %1272 = add nsw i32 %1229, -8\l  %1273 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 8\l  br label %1287\l}"];
	Node0x56d4140 -> Node0x56d4320;
	Node0x56d4370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1274:\l1274:                                             \l  %1275 = phi i32 [ %1285, %1274 ], [ 0, %1232 ]\l  %1276 = phi i64 [ %1284, %1274 ], [ 0, %1232 ]\l  %1277 = zext i32 %1275 to i64\l  %1278 = getelementptr inbounds i8, i8 addrspace(4)* %1228, i64 %1277\l  %1279 = load i8, i8 addrspace(4)* %1278, align 1, !tbaa !13\l  %1280 = zext i8 %1279 to i64\l  %1281 = shl i32 %1275, 3\l  %1282 = zext i32 %1281 to i64\l  %1283 = shl nuw i64 %1280, %1282\l  %1284 = or i64 %1283, %1276\l  %1285 = add nuw nsw i32 %1275, 1\l  %1286 = icmp eq i32 %1285, %1229\l  br i1 %1286, label %1287, label %1274\l|{<s0>T|<s1>F}}"];
	Node0x56d4370:s0 -> Node0x56d4320;
	Node0x56d4370:s1 -> Node0x56d4370;
	Node0x56d4320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1287:\l1287:                                             \l  %1288 = phi i8 addrspace(4)* [ %1273, %1234 ], [ %1228, %1232 ], [ %1228,\l... %1274 ]\l  %1289 = phi i32 [ %1272, %1234 ], [ 0, %1232 ], [ 0, %1274 ]\l  %1290 = phi i64 [ %1271, %1234 ], [ 0, %1232 ], [ %1284, %1274 ]\l  %1291 = icmp ugt i32 %1289, 7\l  br i1 %1291, label %1294, label %1292\l|{<s0>T|<s1>F}}"];
	Node0x56d4320:s0 -> Node0x56d6390;
	Node0x56d4320:s1 -> Node0x56d63e0;
	Node0x56d63e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1292:\l1292:                                             \l  %1293 = icmp eq i32 %1289, 0\l  br i1 %1293, label %1347, label %1334\l|{<s0>T|<s1>F}}"];
	Node0x56d63e0:s0 -> Node0x56d6570;
	Node0x56d63e0:s1 -> Node0x56d65c0;
	Node0x56d6390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1294:\l1294:                                             \l  %1295 = load i8, i8 addrspace(4)* %1288, align 1, !tbaa !13\l  %1296 = zext i8 %1295 to i64\l  %1297 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 1\l  %1298 = load i8, i8 addrspace(4)* %1297, align 1, !tbaa !13\l  %1299 = zext i8 %1298 to i64\l  %1300 = shl nuw nsw i64 %1299, 8\l  %1301 = or i64 %1300, %1296\l  %1302 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 2\l  %1303 = load i8, i8 addrspace(4)* %1302, align 1, !tbaa !13\l  %1304 = zext i8 %1303 to i64\l  %1305 = shl nuw nsw i64 %1304, 16\l  %1306 = or i64 %1301, %1305\l  %1307 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 3\l  %1308 = load i8, i8 addrspace(4)* %1307, align 1, !tbaa !13\l  %1309 = zext i8 %1308 to i64\l  %1310 = shl nuw nsw i64 %1309, 24\l  %1311 = or i64 %1306, %1310\l  %1312 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 4\l  %1313 = load i8, i8 addrspace(4)* %1312, align 1, !tbaa !13\l  %1314 = zext i8 %1313 to i64\l  %1315 = shl nuw nsw i64 %1314, 32\l  %1316 = or i64 %1311, %1315\l  %1317 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 5\l  %1318 = load i8, i8 addrspace(4)* %1317, align 1, !tbaa !13\l  %1319 = zext i8 %1318 to i64\l  %1320 = shl nuw nsw i64 %1319, 40\l  %1321 = or i64 %1316, %1320\l  %1322 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 6\l  %1323 = load i8, i8 addrspace(4)* %1322, align 1, !tbaa !13\l  %1324 = zext i8 %1323 to i64\l  %1325 = shl nuw nsw i64 %1324, 48\l  %1326 = or i64 %1321, %1325\l  %1327 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 7\l  %1328 = load i8, i8 addrspace(4)* %1327, align 1, !tbaa !13\l  %1329 = zext i8 %1328 to i64\l  %1330 = shl nuw i64 %1329, 56\l  %1331 = or i64 %1326, %1330\l  %1332 = add nsw i32 %1289, -8\l  %1333 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 8\l  br label %1347\l}"];
	Node0x56d6390 -> Node0x56d6570;
	Node0x56d65c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1334:\l1334:                                             \l  %1335 = phi i32 [ %1345, %1334 ], [ 0, %1292 ]\l  %1336 = phi i64 [ %1344, %1334 ], [ 0, %1292 ]\l  %1337 = zext i32 %1335 to i64\l  %1338 = getelementptr inbounds i8, i8 addrspace(4)* %1288, i64 %1337\l  %1339 = load i8, i8 addrspace(4)* %1338, align 1, !tbaa !13\l  %1340 = zext i8 %1339 to i64\l  %1341 = shl i32 %1335, 3\l  %1342 = zext i32 %1341 to i64\l  %1343 = shl nuw i64 %1340, %1342\l  %1344 = or i64 %1343, %1336\l  %1345 = add nuw nsw i32 %1335, 1\l  %1346 = icmp eq i32 %1345, %1289\l  br i1 %1346, label %1347, label %1334\l|{<s0>T|<s1>F}}"];
	Node0x56d65c0:s0 -> Node0x56d6570;
	Node0x56d65c0:s1 -> Node0x56d65c0;
	Node0x56d6570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1347:\l1347:                                             \l  %1348 = phi i8 addrspace(4)* [ %1333, %1294 ], [ %1288, %1292 ], [ %1288,\l... %1334 ]\l  %1349 = phi i32 [ %1332, %1294 ], [ 0, %1292 ], [ 0, %1334 ]\l  %1350 = phi i64 [ %1331, %1294 ], [ 0, %1292 ], [ %1344, %1334 ]\l  %1351 = icmp ugt i32 %1349, 7\l  br i1 %1351, label %1354, label %1352\l|{<s0>T|<s1>F}}"];
	Node0x56d6570:s0 -> Node0x56bb650;
	Node0x56d6570:s1 -> Node0x56bb6a0;
	Node0x56bb6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1352:\l1352:                                             \l  %1353 = icmp eq i32 %1349, 0\l  br i1 %1353, label %1405, label %1392\l|{<s0>T|<s1>F}}"];
	Node0x56bb6a0:s0 -> Node0x56c8e60;
	Node0x56bb6a0:s1 -> Node0x56bb830;
	Node0x56bb650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%1354:\l1354:                                             \l  %1355 = load i8, i8 addrspace(4)* %1348, align 1, !tbaa !13\l  %1356 = zext i8 %1355 to i64\l  %1357 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 1\l  %1358 = load i8, i8 addrspace(4)* %1357, align 1, !tbaa !13\l  %1359 = zext i8 %1358 to i64\l  %1360 = shl nuw nsw i64 %1359, 8\l  %1361 = or i64 %1360, %1356\l  %1362 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 2\l  %1363 = load i8, i8 addrspace(4)* %1362, align 1, !tbaa !13\l  %1364 = zext i8 %1363 to i64\l  %1365 = shl nuw nsw i64 %1364, 16\l  %1366 = or i64 %1361, %1365\l  %1367 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 3\l  %1368 = load i8, i8 addrspace(4)* %1367, align 1, !tbaa !13\l  %1369 = zext i8 %1368 to i64\l  %1370 = shl nuw nsw i64 %1369, 24\l  %1371 = or i64 %1366, %1370\l  %1372 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 4\l  %1373 = load i8, i8 addrspace(4)* %1372, align 1, !tbaa !13\l  %1374 = zext i8 %1373 to i64\l  %1375 = shl nuw nsw i64 %1374, 32\l  %1376 = or i64 %1371, %1375\l  %1377 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 5\l  %1378 = load i8, i8 addrspace(4)* %1377, align 1, !tbaa !13\l  %1379 = zext i8 %1378 to i64\l  %1380 = shl nuw nsw i64 %1379, 40\l  %1381 = or i64 %1376, %1380\l  %1382 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 6\l  %1383 = load i8, i8 addrspace(4)* %1382, align 1, !tbaa !13\l  %1384 = zext i8 %1383 to i64\l  %1385 = shl nuw nsw i64 %1384, 48\l  %1386 = or i64 %1381, %1385\l  %1387 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 7\l  %1388 = load i8, i8 addrspace(4)* %1387, align 1, !tbaa !13\l  %1389 = zext i8 %1388 to i64\l  %1390 = shl nuw i64 %1389, 56\l  %1391 = or i64 %1386, %1390\l  br label %1405\l}"];
	Node0x56bb650 -> Node0x56c8e60;
	Node0x56bb830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1392:\l1392:                                             \l  %1393 = phi i32 [ %1403, %1392 ], [ 0, %1352 ]\l  %1394 = phi i64 [ %1402, %1392 ], [ 0, %1352 ]\l  %1395 = zext i32 %1393 to i64\l  %1396 = getelementptr inbounds i8, i8 addrspace(4)* %1348, i64 %1395\l  %1397 = load i8, i8 addrspace(4)* %1396, align 1, !tbaa !13\l  %1398 = zext i8 %1397 to i64\l  %1399 = shl i32 %1393, 3\l  %1400 = zext i32 %1399 to i64\l  %1401 = shl nuw i64 %1398, %1400\l  %1402 = or i64 %1401, %1394\l  %1403 = add nuw nsw i32 %1393, 1\l  %1404 = icmp eq i32 %1403, %1349\l  br i1 %1404, label %1405, label %1392\l|{<s0>T|<s1>F}}"];
	Node0x56bb830:s0 -> Node0x56c8e60;
	Node0x56bb830:s1 -> Node0x56bb830;
	Node0x56c8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%1405:\l1405:                                             \l  %1406 = phi i64 [ %1391, %1354 ], [ 0, %1352 ], [ %1402, %1392 ]\l  %1407 = shl nuw nsw i64 %988, 2\l  %1408 = add nuw nsw i64 %1407, 28\l  %1409 = and i64 %1408, 480\l  %1410 = and i64 %990, -225\l  %1411 = or i64 %1410, %1409\l  %1412 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %16, i64 noundef %1411, i64 noundef %1050, i64 noundef %1110, i64 noundef\l... %1170, i64 noundef %1230, i64 noundef %1290, i64 noundef %1350, i64 noundef\l... %1406) #10\l  %1413 = sub i64 %980, %988\l  %1414 = getelementptr inbounds i8, i8 addrspace(4)* %981, i64 %988\l  %1415 = icmp eq i64 %1413, 0\l  br i1 %1415, label %1416, label %979\l|{<s0>T|<s1>F}}"];
	Node0x56c8e60:s0 -> Node0x56c8730;
	Node0x56c8e60:s1 -> Node0x56c87f0;
	Node0x56c8730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%1416:\l1416:                                             \l  %1417 = phi \<2 x i64\> [ %974, %971 ], [ %1412, %1405 ]\l  %1418 = fpext float %964 to double\l  %1419 = fpext float %966 to double\l  %1420 = fpext float %968 to double\l  %1421 = extractelement \<2 x i64\> %1417, i64 0\l  %1422 = and i64 %1421, -225\l  %1423 = or i64 %1422, 32\l  %1424 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %16, i64 noundef %1423, i64 noundef %467, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %1425 = extractelement \<2 x i64\> %1424, i64 0\l  %1426 = bitcast double %1418 to i64\l  %1427 = and i64 %1425, -225\l  %1428 = or i64 %1427, 32\l  %1429 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %16, i64 noundef %1428, i64 noundef %1426, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %1430 = extractelement \<2 x i64\> %1429, i64 0\l  %1431 = bitcast double %1419 to i64\l  %1432 = and i64 %1430, -225\l  %1433 = or i64 %1432, 32\l  %1434 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %16, i64 noundef %1433, i64 noundef %1431, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %1435 = extractelement \<2 x i64\> %1434, i64 0\l  %1436 = bitcast double %1420 to i64\l  %1437 = and i64 %1435, -227\l  %1438 = or i64 %1437, 34\l  %1439 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %16, i64 noundef %1438, i64 noundef %1436, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
