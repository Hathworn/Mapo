digraph "CFG for '_Z15RgbToRgbaKernelPKhPhmmm' function" {
	label="CFG for '_Z15RgbToRgbaKernelPKhPhmmm' function";

	Node0x482f770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = zext i32 %14 to i64\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = zext i32 %23 to i64\l  %25 = icmp ult i64 %15, %3\l  %26 = icmp ult i64 %24, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %50\l|{<s0>T|<s1>F}}"];
	Node0x482f770:s0 -> Node0x48332c0;
	Node0x482f770:s1 -> Node0x4833350;
	Node0x48332c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%28:\l28:                                               \l  %29 = mul i64 %24, %3\l  %30 = add i64 %29, %15\l  %31 = mul i64 %30, 3\l  %32 = shl nuw nsw i64 %15, 2\l  %33 = mul i64 %24, %2\l  %34 = add i64 %33, %32\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %37 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %34\l  store i8 %36, i8 addrspace(1)* %37, align 1, !tbaa !7\l  %38 = add i64 %31, 1\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %38\l  %40 = load i8, i8 addrspace(1)* %39, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %41 = add i64 %34, 1\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %41\l  store i8 %40, i8 addrspace(1)* %42, align 1, !tbaa !7\l  %43 = add i64 %31, 2\l  %44 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %43\l  %45 = load i8, i8 addrspace(1)* %44, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %46 = add i64 %34, 2\l  %47 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %46\l  store i8 %45, i8 addrspace(1)* %47, align 1, !tbaa !7\l  %48 = add i64 %34, 3\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %48\l  store i8 -1, i8 addrspace(1)* %49, align 1, !tbaa !7\l  br label %50\l}"];
	Node0x48332c0 -> Node0x4833350;
	Node0x4833350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  ret void\l}"];
}
