digraph "CFG for '_Z11matricesMulPdS_S_' function" {
	label="CFG for '_Z11matricesMulPdS_S_' function";

	Node0x5d55ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 2, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = icmp slt i32 %12, 1000\l  %22 = icmp slt i32 %20, 1000\l  %23 = select i1 %21, i1 %22, i1 false\l  br i1 %23, label %24, label %154\l|{<s0>T|<s1>F}}"];
	Node0x5d55ac0:s0 -> Node0x5d595a0;
	Node0x5d55ac0:s1 -> Node0x5d59630;
	Node0x5d595a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%24:\l24:                                               \l  %25 = mul nsw i32 %12, 1000\l  br label %30\l}"];
	Node0x5d595a0 -> Node0x5d59800;
	Node0x5d598c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = add nsw i32 %25, %20\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  store double %151, double addrspace(1)* %29, align 8, !tbaa !7\l  br label %154\l}"];
	Node0x5d598c0 -> Node0x5d59630;
	Node0x5d59800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %24 ], [ %152, %30 ]\l  %32 = phi double [ 0.000000e+00, %24 ], [ %151, %30 ]\l  %33 = add nsw i32 %31, %25\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = mul nuw nsw i32 %31, 1000\l  %38 = add nsw i32 %37, %20\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract double %36, %41\l  %43 = fadd contract double %32, %42\l  %44 = or i32 %31, 1\l  %45 = add nsw i32 %44, %25\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = mul nuw nsw i32 %44, 1000\l  %50 = add nsw i32 %49, %20\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %1, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fmul contract double %48, %53\l  %55 = fadd contract double %43, %54\l  %56 = add nuw nsw i32 %31, 2\l  %57 = add nsw i32 %56, %25\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %0, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = mul nuw nsw i32 %56, 1000\l  %62 = add nsw i32 %61, %20\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %1, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fmul contract double %60, %65\l  %67 = fadd contract double %55, %66\l  %68 = add nuw nsw i32 %31, 3\l  %69 = add nsw i32 %68, %25\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = mul nuw nsw i32 %68, 1000\l  %74 = add nsw i32 %73, %20\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %1, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fmul contract double %72, %77\l  %79 = fadd contract double %67, %78\l  %80 = add nuw nsw i32 %31, 4\l  %81 = add nsw i32 %80, %25\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %0, i64 %82\l  %84 = load double, double addrspace(1)* %83, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = mul nuw nsw i32 %80, 1000\l  %86 = add nsw i32 %85, %20\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds double, double addrspace(1)* %1, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fmul contract double %84, %89\l  %91 = fadd contract double %79, %90\l  %92 = add nuw nsw i32 %31, 5\l  %93 = add nsw i32 %92, %25\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds double, double addrspace(1)* %0, i64 %94\l  %96 = load double, double addrspace(1)* %95, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %97 = mul nuw nsw i32 %92, 1000\l  %98 = add nsw i32 %97, %20\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds double, double addrspace(1)* %1, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %102 = fmul contract double %96, %101\l  %103 = fadd contract double %91, %102\l  %104 = add nuw nsw i32 %31, 6\l  %105 = add nsw i32 %104, %25\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds double, double addrspace(1)* %0, i64 %106\l  %108 = load double, double addrspace(1)* %107, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = mul nuw nsw i32 %104, 1000\l  %110 = add nsw i32 %109, %20\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds double, double addrspace(1)* %1, i64 %111\l  %113 = load double, double addrspace(1)* %112, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = fmul contract double %108, %113\l  %115 = fadd contract double %103, %114\l  %116 = add nuw nsw i32 %31, 7\l  %117 = add nsw i32 %116, %25\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds double, double addrspace(1)* %0, i64 %118\l  %120 = load double, double addrspace(1)* %119, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %121 = mul nuw nsw i32 %116, 1000\l  %122 = add nsw i32 %121, %20\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds double, double addrspace(1)* %1, i64 %123\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fmul contract double %120, %125\l  %127 = fadd contract double %115, %126\l  %128 = add nuw nsw i32 %31, 8\l  %129 = add nsw i32 %128, %25\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %0, i64 %130\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = mul nuw nsw i32 %128, 1000\l  %134 = add nsw i32 %133, %20\l  %135 = sext i32 %134 to i64\l  %136 = getelementptr inbounds double, double addrspace(1)* %1, i64 %135\l  %137 = load double, double addrspace(1)* %136, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %138 = fmul contract double %132, %137\l  %139 = fadd contract double %127, %138\l  %140 = add nuw nsw i32 %31, 9\l  %141 = add nsw i32 %140, %25\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds double, double addrspace(1)* %0, i64 %142\l  %144 = load double, double addrspace(1)* %143, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %145 = mul nuw nsw i32 %140, 1000\l  %146 = add nsw i32 %145, %20\l  %147 = sext i32 %146 to i64\l  %148 = getelementptr inbounds double, double addrspace(1)* %1, i64 %147\l  %149 = load double, double addrspace(1)* %148, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %150 = fmul contract double %144, %149\l  %151 = fadd contract double %139, %150\l  %152 = add nuw nsw i32 %31, 10\l  %153 = icmp eq i32 %152, 1000\l  br i1 %153, label %26, label %30, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5d59800:s0 -> Node0x5d598c0;
	Node0x5d59800:s1 -> Node0x5d59800;
	Node0x5d59630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%154:\l154:                                              \l  ret void\l}"];
}
