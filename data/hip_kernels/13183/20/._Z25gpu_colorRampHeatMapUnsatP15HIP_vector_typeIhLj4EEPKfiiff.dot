digraph "CFG for '_Z25gpu_colorRampHeatMapUnsatP15HIP_vector_typeIhLj4EEPKfiiff' function" {
	label="CFG for '_Z25gpu_colorRampHeatMapUnsatP15HIP_vector_typeIhLj4EEPKfiiff' function";

	Node0x4e51700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %2\l  %25 = icmp slt i32 %23, %3\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4e51700:s0 -> Node0x4e55170;
	Node0x4e51700:s1 -> Node0x4e55200;
	Node0x4e55170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %23, %2\l  %29 = add nsw i32 %28, %15\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %30\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %34 = fcmp uno float %33, 0.000000e+00\l  br i1 %34, label %35, label %37\l|{<s0>T|<s1>F}}"];
	Node0x4e55170:s0 -> Node0x4e56400;
	Node0x4e55170:s1 -> Node0x4e56490;
	Node0x4e56400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6282ea70",label="{%35:\l35:                                               \l  %36 = bitcast %struct.HIP_vector_type addrspace(1)* %31 to i32 addrspace(1)*\l  store i32 0, i32 addrspace(1)* %36, align 4\l  br label %130\l}"];
	Node0x4e56400 -> Node0x4e55200;
	Node0x4e56490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%37:\l37:                                               \l  %38 = fsub contract float %33, %4\l  %39 = fsub contract float %5, %4\l  %40 = fdiv contract float %38, %39\l  %41 = tail call float @llvm.minnum.f32(float %40, float 1.000000e+00)\l  %42 = tail call float @llvm.maxnum.f32(float %41, float 0.000000e+00)\l  %43 = fcmp contract oeq float %42, 1.000000e+00\l  br i1 %43, label %89, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4e56490:s0 -> Node0x4e56dc0;
	Node0x4e56490:s1 -> Node0x4e56e50;
	Node0x4e56e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%44:\l44:                                               \l  %45 = tail call float @llvm.fabs.f32(float %42)\l  %46 = fcmp ogt float %45, 2.500000e-01\l  br i1 %46, label %47, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4e56e50:s0 -> Node0x4e57240;
	Node0x4e56e50:s1 -> Node0x4e572d0;
	Node0x4e57240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%47:\l47:                                               \l  %48 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %45)\l  %49 = tail call float @llvm.amdgcn.frexp.mant.f32(float %45)\l  %50 = tail call float @llvm.amdgcn.ldexp.f32(float %49, i32 12)\l  %51 = add i32 %48, 1\l  %52 = icmp sgt i32 %51, 12\l  br i1 %52, label %53, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4e57240:s0 -> Node0x4e57c00;
	Node0x4e57240:s1 -> Node0x4e57c90;
	Node0x4e57c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi float [ %61, %53 ], [ %50, %47 ]\l  %55 = phi i32 [ %62, %53 ], [ %51, %47 ]\l  %56 = tail call float @llvm.rint.f32(float %54)\l  %57 = fsub float %54, %56\l  %58 = fcmp olt float %57, 0.000000e+00\l  %59 = select i1 %58, float 1.000000e+00, float -0.000000e+00\l  %60 = fadd float %57, %59\l  %61 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 12)\l  %62 = add nsw i32 %55, -12\l  %63 = icmp ugt i32 %55, 24\l  br i1 %63, label %53, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4e57c00:s0 -> Node0x4e57c00;
	Node0x4e57c00:s1 -> Node0x4e57c90;
	Node0x4e57c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%64:\l64:                                               \l  %65 = phi i32 [ %51, %47 ], [ %62, %53 ]\l  %66 = phi float [ %50, %47 ], [ %61, %53 ]\l  %67 = add nsw i32 %65, -11\l  %68 = tail call float @llvm.amdgcn.ldexp.f32(float %66, i32 %67)\l  %69 = tail call float @llvm.rint.f32(float %68)\l  %70 = fsub float %68, %69\l  %71 = fcmp olt float %70, 0.000000e+00\l  %72 = select i1 %71, float 1.000000e+00, float -0.000000e+00\l  %73 = fadd float %70, %72\l  %74 = tail call float @llvm.amdgcn.ldexp.f32(float %73, i32 -2)\l  %75 = bitcast float %42 to i32\l  %76 = and i32 %75, -2147483648\l  %77 = bitcast float %74 to i32\l  %78 = xor i32 %76, %77\l  %79 = bitcast i32 %78 to float\l  br label %84\l}"];
	Node0x4e57c90 -> Node0x4e59420;
	Node0x4e572d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%80:\l80:                                               \l  %81 = fcmp oeq float %45, 2.500000e-01\l  %82 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %42)\l  %83 = select i1 %81, float %82, float %42\l  br label %84\l}"];
	Node0x4e572d0 -> Node0x4e59420;
	Node0x4e59420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = phi float [ %79, %64 ], [ %83, %80 ]\l  %86 = tail call i1 @llvm.amdgcn.class.f32(float %42, i32 504)\l  %87 = fmul contract float %85, 4.000000e+00\l  %88 = select i1 %86, float %87, float 0x7FF8000000000000\l  br label %89\l}"];
	Node0x4e59420 -> Node0x4e56dc0;
	Node0x4e56dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%89:\l89:                                               \l  %90 = phi float [ %88, %84 ], [ 1.000000e+00, %37 ]\l  %91 = fcmp contract olt float %42, 2.500000e-01\l  br i1 %91, label %100, label %92\l|{<s0>T|<s1>F}}"];
	Node0x4e56dc0:s0 -> Node0x4e59e60;
	Node0x4e56dc0:s1 -> Node0x4e59eb0;
	Node0x4e59eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%92:\l92:                                               \l  %93 = fcmp contract olt float %42, 5.000000e-01\l  br i1 %93, label %100, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4e59eb0:s0 -> Node0x4e59e60;
	Node0x4e59eb0:s1 -> Node0x4e5a080;
	Node0x4e5a080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%94:\l94:                                               \l  %95 = fcmp contract olt float %42, 7.500000e-01\l  %96 = select i1 %95, i32 4162758, i32 3556288\l  %97 = select i1 %95, i32 9038065, i32 4162758\l  %98 = select i1 %95, float 2.320000e+02, float 1.320000e+02\l  %99 = select i1 %95, float 1.320000e+02, float 6.700000e+01\l  br label %100\l}"];
	Node0x4e5a080 -> Node0x4e59e60;
	Node0x4e59e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%100:\l100:                                              \l  %101 = phi i32 [ 9158432, %89 ], [ 9038065, %92 ], [ %96, %94 ]\l  %102 = phi float [ 1.910000e+02, %89 ], [ 2.320000e+02, %92 ], [ %99, %94 ]\l  %103 = phi i32 [ 9658904, %89 ], [ 9158432, %92 ], [ %97, %94 ]\l  %104 = phi float [ 9.800000e+01, %89 ], [ 1.910000e+02, %92 ], [ %98, %94 ]\l  %105 = lshr i32 %101, 16\l  %106 = lshr i32 %103, 16\l  %107 = fsub contract float 1.000000e+00, %90\l  %108 = and i32 %103, 255\l  %109 = sitofp i32 %108 to float\l  %110 = fmul contract float %107, %109\l  %111 = and i32 %101, 247\l  %112 = sitofp i32 %111 to float\l  %113 = fmul contract float %90, %112\l  %114 = fadd contract float %113, %110\l  %115 = fptoui float %114 to i8\l  %116 = fmul contract float %107, %104\l  %117 = fmul contract float %90, %102\l  %118 = fadd contract float %117, %116\l  %119 = fptoui float %118 to i8\l  %120 = sitofp i32 %106 to float\l  %121 = fmul contract float %107, %120\l  %122 = sitofp i32 %105 to float\l  %123 = fmul contract float %90, %122\l  %124 = fadd contract float %123, %121\l  %125 = fptoui float %124 to i8\l  %126 = insertelement \<4 x i8\> \<i8 poison, i8 poison, i8 poison, i8 -1\>, i8\l... %115, i64 0\l  %127 = insertelement \<4 x i8\> %126, i8 %119, i64 1\l  %128 = insertelement \<4 x i8\> %127, i8 %125, i64 2\l  %129 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %31, i64 0, i32 0, i32 0, i32 0\l  store \<4 x i8\> %128, \<4 x i8\> addrspace(1)* %129, align 4\l  br label %130\l}"];
	Node0x4e59e60 -> Node0x4e55200;
	Node0x4e55200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%130:\l130:                                              \l  ret void\l}"];
}
