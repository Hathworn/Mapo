digraph "CFG for '_Z15forcered_simplePfS_' function" {
	label="CFG for '_Z15forcered_simplePfS_' function";

	Node0x57b8aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !5, !invariant.load !6\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = add i32 %10, %3\l  %12 = freeze i32 %11\l  %13 = icmp slt i32 %12, 1029\l  br i1 %13, label %14, label %16\l|{<s0>T|<s1>F}}"];
	Node0x57b8aa0:s0 -> Node0x57baa10;
	Node0x57b8aa0:s1 -> Node0x57baaa0;
	Node0x57baa10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = getelementptr inbounds [1029 x float], [1029 x float] addrspace(3)*\l... @_ZZ15forcered_simplePfS_E11forcered_sh, i32 0, i32 %12\l  store float 0.000000e+00, float addrspace(3)* %15, align 4, !tbaa !7\l  br label %16\l}"];
	Node0x57baa10 -> Node0x57baaa0;
	Node0x57baaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%16:\l16:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %13, label %17, label %83\l|{<s0>T|<s1>F}}"];
	Node0x57baaa0:s0 -> Node0x57bbcf0;
	Node0x57baaa0:s1 -> Node0x57bbd80;
	Node0x57bbcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = srem i32 %12, 343\l  %19 = sub nsw i32 %12, %18\l  %20 = getelementptr inbounds [1029 x float], [1029 x float] addrspace(3)*\l... @_ZZ15forcered_simplePfS_E11forcered_sh, i32 0, i32 %12\l  %21 = load float, float addrspace(3)* %20, align 4, !tbaa !7\l  br label %22\l}"];
	Node0x57bbcf0 -> Node0x57bc030;
	Node0x57bc030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  %23 = phi i32 [ 0, %17 ], [ %80, %22 ]\l  %24 = phi float [ %21, %17 ], [ %79, %22 ]\l  %25 = add i32 %23, %19\l  %26 = mul i32 %25, 343\l  %27 = add i32 %26, %18\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %31 = fadd contract float %30, %24\l  %32 = add nuw nsw i32 %23, 1\l  %33 = add i32 %32, %19\l  %34 = mul i32 %33, 343\l  %35 = add i32 %34, %18\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %39 = fadd contract float %38, %31\l  %40 = add nuw nsw i32 %23, 2\l  %41 = add i32 %40, %19\l  %42 = mul i32 %41, 343\l  %43 = add i32 %42, %18\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %47 = fadd contract float %46, %39\l  %48 = add nuw nsw i32 %23, 3\l  %49 = add i32 %48, %19\l  %50 = mul i32 %49, 343\l  %51 = add i32 %50, %18\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = fadd contract float %54, %47\l  %56 = add nuw nsw i32 %23, 4\l  %57 = add i32 %56, %19\l  %58 = mul i32 %57, 343\l  %59 = add i32 %58, %18\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %63 = fadd contract float %62, %55\l  %64 = add nuw nsw i32 %23, 5\l  %65 = add i32 %64, %19\l  %66 = mul i32 %65, 343\l  %67 = add i32 %66, %18\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %71 = fadd contract float %70, %63\l  %72 = add nuw nsw i32 %23, 6\l  %73 = add i32 %72, %19\l  %74 = mul i32 %73, 343\l  %75 = add i32 %74, %18\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %79 = fadd contract float %78, %71\l  %80 = add nuw nsw i32 %23, 7\l  %81 = icmp eq i32 %80, 343\l  br i1 %81, label %82, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x57bc030:s0 -> Node0x57bf520;
	Node0x57bc030:s1 -> Node0x57bc030;
	Node0x57bf520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%82:\l82:                                               \l  store float %79, float addrspace(3)* %20, align 4, !tbaa !7\l  br label %83\l}"];
	Node0x57bf520 -> Node0x57bbd80;
	Node0x57bbd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%83:\l83:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %13, label %84, label %89\l|{<s0>T|<s1>F}}"];
	Node0x57bbd80:s0 -> Node0x57bf990;
	Node0x57bbd80:s1 -> Node0x57bf9e0;
	Node0x57bf990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%84:\l84:                                               \l  %85 = sext i32 %12 to i64\l  %86 = getelementptr inbounds [1029 x float], [1029 x float] addrspace(3)*\l... @_ZZ15forcered_simplePfS_E11forcered_sh, i32 0, i32 %12\l  %87 = load float, float addrspace(3)* %86, align 4, !tbaa !7\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %85\l  store float %87, float addrspace(1)* %88, align 4, !tbaa !7\l  br label %89\l}"];
	Node0x57bf990 -> Node0x57bf9e0;
	Node0x57bf9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%89:\l89:                                               \l  ret void\l}"];
}
