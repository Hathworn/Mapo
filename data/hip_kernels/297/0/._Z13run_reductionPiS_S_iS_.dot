digraph "CFG for '_Z13run_reductionPiS_S_iS_' function" {
	label="CFG for '_Z13run_reductionPiS_S_iS_' function";

	Node0x4902a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %9 = bitcast i8 addrspace(4)* %8 to i32 addrspace(4)*\l  %10 = load i32, i32 addrspace(4)* %9, align 4, !tbaa !4\l  %11 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !13, !invariant.load\l... !14\l  %14 = zext i16 %13 to i32\l  %15 = udiv i32 %10, %14\l  %16 = mul i32 %15, %14\l  %17 = icmp ugt i32 %10, %16\l  %18 = zext i1 %17 to i32\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %6\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %3\l  br i1 %23, label %24, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4902a90:s0 -> Node0x4904e20;
	Node0x4902a90:s1 -> Node0x4904eb0;
	Node0x4904e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%24:\l24:                                               \l  %25 = sext i32 %22 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !15, !amdgpu.noclobber\l... !14\l  %28 = shl nuw nsw i32 %14, 1\l  %29 = mul i32 %28, %27\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !19\l  %31 = add i32 %29, %30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !15, !amdgpu.noclobber\l... !14\l  %35 = getelementptr inbounds [64 x i32], [64 x i32] addrspace(3)*\l... @_ZZ13run_reductionPiS_S_iS_E6s_conv, i32 0, i32 %30\l  store i32 %34, i32 addrspace(3)* %35, align 4, !tbaa !15\l  %36 = add i32 %31, %14\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !15, !amdgpu.noclobber\l... !14\l  %40 = add nuw nsw i32 %30, %14\l  %41 = getelementptr inbounds [64 x i32], [64 x i32] addrspace(3)*\l... @_ZZ13run_reductionPiS_S_iS_E6s_conv, i32 0, i32 %40\l  store i32 %39, i32 addrspace(3)* %41, align 4, !tbaa !15\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %44\l}"];
	Node0x4904e20 -> Node0x4906fd0;
	Node0x49070d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%42:\l42:                                               \l  %43 = icmp eq i32 %30, 0\l  br i1 %43, label %59, label %63\l|{<s0>T|<s1>F}}"];
	Node0x49070d0:s0 -> Node0x49071f0;
	Node0x49070d0:s1 -> Node0x4904eb0;
	Node0x4906fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i32 [ %14, %24 ], [ %57, %56 ]\l  %46 = icmp ult i32 %30, %45\l  br i1 %46, label %47, label %56\l|{<s0>T|<s1>F}}"];
	Node0x4906fd0:s0 -> Node0x49074c0;
	Node0x4906fd0:s1 -> Node0x49072f0;
	Node0x49074c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%47:\l47:                                               \l  %48 = load i32, i32 addrspace(3)* %35, align 4, !tbaa !15\l  %49 = icmp ne i32 %48, 0\l  %50 = add nuw nsw i32 %45, %30\l  %51 = getelementptr inbounds [64 x i32], [64 x i32] addrspace(3)*\l... @_ZZ13run_reductionPiS_S_iS_E6s_conv, i32 0, i32 %50\l  %52 = load i32, i32 addrspace(3)* %51, align 4, !tbaa !15\l  %53 = icmp ne i32 %52, 0\l  %54 = select i1 %49, i1 %53, i1 false\l  %55 = zext i1 %54 to i32\l  store i32 %55, i32 addrspace(3)* %35, align 4, !tbaa !15\l  br label %56\l}"];
	Node0x49074c0 -> Node0x49072f0;
	Node0x49072f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %57 = lshr i32 %45, 1\l  %58 = icmp ult i32 %45, 2\l  br i1 %58, label %42, label %44, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x49072f0:s0 -> Node0x49070d0;
	Node0x49072f0:s1 -> Node0x4906fd0;
	Node0x49071f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%59:\l59:                                               \l  %60 = load i32, i32 addrspace(3)* getelementptr inbounds ([64 x i32], [64 x\l... i32] addrspace(3)* @_ZZ13run_reductionPiS_S_iS_E6s_conv, i32 0, i32 0), align\l... 16, !tbaa !15\l  %61 = sext i32 %27 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %61\l  store i32 %60, i32 addrspace(1)* %62, align 4, !tbaa !15\l  br label %63\l}"];
	Node0x49071f0 -> Node0x4904eb0;
	Node0x4904eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%63:\l63:                                               \l  ret void\l}"];
}
