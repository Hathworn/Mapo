digraph "CFG for '_Z3dotPfS_S_' function" {
	label="CFG for '_Z3dotPfS_S_' function";

	Node0x48a9810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = mul i32 %5, %10\l  %15 = add i32 %14, %4\l  %16 = icmp slt i32 %15, 20\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x48a9810:s0 -> Node0x48aa5b0;
	Node0x48a9810:s1 -> Node0x48ab170;
	Node0x48aa5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = udiv i32 %13, %10\l  %19 = mul i32 %18, %10\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %10\l  br label %28\l}"];
	Node0x48aa5b0 -> Node0x48abfa0;
	Node0x48ab170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%24:\l24:                                               \l  %25 = phi float [ 0.000000e+00, %3 ], [ %37, %28 ]\l  %26 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ3dotPfS_S_E5cache, i32 0, i32 %4\l  store float %25, float addrspace(3)* %26, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp ult i16 %9, 2\l  br i1 %27, label %40, label %42\l|{<s0>T|<s1>F}}"];
	Node0x48ab170:s0 -> Node0x48ad1f0;
	Node0x48ab170:s1 -> Node0x48ad280;
	Node0x48abfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %15, %17 ], [ %38, %28 ]\l  %30 = phi float [ 0.000000e+00, %17 ], [ %37, %28 ]\l  %31 = sext i32 %29 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fmul contract float %33, %35\l  %37 = fadd contract float %30, %36\l  %38 = add i32 %23, %29\l  %39 = icmp slt i32 %38, 20\l  br i1 %39, label %28, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x48abfa0:s0 -> Node0x48abfa0;
	Node0x48abfa0:s1 -> Node0x48ab170;
	Node0x48ad1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%40:\l40:                                               \l  %41 = icmp eq i32 %4, 0\l  br i1 %41, label %54, label %58\l|{<s0>T|<s1>F}}"];
	Node0x48ad1f0:s0 -> Node0x48aea50;
	Node0x48ad1f0:s1 -> Node0x48aeaa0;
	Node0x48ad280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi i32 [ %44, %52 ], [ %10, %24 ]\l  %44 = lshr i32 %43, 1\l  %45 = icmp ult i32 %4, %44\l  br i1 %45, label %46, label %52\l|{<s0>T|<s1>F}}"];
	Node0x48ad280:s0 -> Node0x48aee40;
	Node0x48ad280:s1 -> Node0x48aebe0;
	Node0x48aee40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %44, %4\l  %48 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ3dotPfS_S_E5cache, i32 0, i32 %47\l  %49 = load float, float addrspace(3)* %48, align 4, !tbaa !16\l  %50 = load float, float addrspace(3)* %26, align 4, !tbaa !16\l  %51 = fadd contract float %49, %50\l  store float %51, float addrspace(3)* %26, align 4, !tbaa !16\l  br label %52\l}"];
	Node0x48aee40 -> Node0x48aebe0;
	Node0x48aebe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %53 = icmp ult i32 %43, 4\l  br i1 %53, label %40, label %42, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x48aebe0:s0 -> Node0x48ad1f0;
	Node0x48aebe0:s1 -> Node0x48ad280;
	Node0x48aea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%54:\l54:                                               \l  %55 = load float, float addrspace(3)* getelementptr inbounds ([256 x float],\l... [256 x float] addrspace(3)* @_ZZ3dotPfS_S_E5cache, i32 0, i32 0), align 16,\l... !tbaa !16\l  %56 = zext i32 %5 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  store float %55, float addrspace(1)* %57, align 4, !tbaa !16\l  br label %58\l}"];
	Node0x48aea50 -> Node0x48aeaa0;
	Node0x48aeaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%58:\l58:                                               \l  ret void\l}"];
}
