digraph "CFG for '_Z11NV12ToRGBAfPjmP15HIP_vector_typeIfLj4EEmjj' function" {
	label="CFG for '_Z11NV12ToRGBAfPjmP15HIP_vector_typeIfLj4EEmjj' function";

	Node0x58a77a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = bitcast i32 addrspace(1)* %0 to i8 addrspace(1)*\l  %8 = trunc i64 %1 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = shl nuw nsw i16 %13, 1\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %9, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = shl nuw nsw i32 %17, 1\l  %19 = add i32 %16, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp ult i32 %19, %4\l  %29 = icmp ult i32 %27, %5\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %130\l|{<s0>T|<s1>F}}"];
	Node0x58a77a0:s0 -> Node0x58ab710;
	Node0x58a77a0:s1 -> Node0x58ab7a0;
	Node0x58ab710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%31:\l31:                                               \l  %32 = mul i32 %27, %8\l  %33 = add i32 %32, %19\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %37 = zext i8 %36 to i32\l  %38 = shl nuw nsw i32 %37, 2\l  %39 = add i32 %33, 1\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %40\l  %42 = load i8, i8 addrspace(1)* %41, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %43 = zext i8 %42 to i32\l  %44 = shl nuw nsw i32 %43, 2\l  %45 = mul i32 %8, %5\l  %46 = ashr i32 %27, 1\l  %47 = and i32 %27, 1\l  %48 = icmp eq i32 %47, 0\l  %49 = mul i32 %46, %8\l  %50 = add i32 %19, %45\l  %51 = add i32 %50, %49\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %52\l  %54 = load i8, i8 addrspace(1)* %53, align 1, !tbaa !7\l  %55 = zext i8 %54 to i32\l  %56 = add i32 %51, 1\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %57\l  %59 = load i8, i8 addrspace(1)* %58, align 1, !tbaa !7\l  %60 = zext i8 %59 to i32\l  br i1 %48, label %84, label %61\l|{<s0>T|<s1>F}}"];
	Node0x58ab710:s0 -> Node0x58ad130;
	Node0x58ab710:s1 -> Node0x58ad1c0;
	Node0x58ad1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%61:\l61:                                               \l  %62 = lshr i32 %5, 1\l  %63 = add nsw i32 %62, -1\l  %64 = icmp ult i32 %46, %63\l  br i1 %64, label %65, label %84\l|{<s0>T|<s1>F}}"];
	Node0x58ad1c0:s0 -> Node0x58ab970;
	Node0x58ad1c0:s1 -> Node0x58ad130;
	Node0x58ab970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%65:\l65:                                               \l  %66 = add nsw i32 %46, 1\l  %67 = mul i32 %66, %8\l  %68 = add i32 %50, %67\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %72 = zext i8 %71 to i32\l  %73 = add nuw nsw i32 %55, 1\l  %74 = add nuw nsw i32 %73, %72\l  %75 = lshr i32 %74, 1\l  %76 = add i32 %68, 1\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %77\l  %79 = load i8, i8 addrspace(1)* %78, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %80 = zext i8 %79 to i32\l  %81 = add nuw nsw i32 %60, 1\l  %82 = add nuw nsw i32 %81, %80\l  %83 = lshr i32 %82, 1\l  br label %84\l}"];
	Node0x58ab970 -> Node0x58ad130;
	Node0x58ad130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%84:\l84:                                               \l  %85 = phi i32 [ %83, %65 ], [ %60, %61 ], [ %60, %31 ]\l  %86 = phi i32 [ %75, %65 ], [ %55, %61 ], [ %55, %31 ]\l  %87 = shl nuw nsw i32 %86, 12\l  %88 = shl nuw nsw i32 %85, 22\l  %89 = or i32 %88, %87\l  %90 = shl nuw nsw i32 %86, 2\l  %91 = and i32 %90, 1020\l  %92 = lshr i32 %89, 20\l  %93 = uitofp i32 %38 to float\l  %94 = uitofp i32 %91 to float\l  %95 = fadd contract float %94, -5.120000e+02\l  %96 = uitofp i32 %92 to float\l  %97 = fadd contract float %96, -5.120000e+02\l  %98 = fmul contract float %97, 0x3FF23D70A0000000\l  %99 = fadd contract float %98, %93\l  %100 = fmul contract float %95, 0x3FD947AE20000000\l  %101 = fsub contract float %93, %100\l  %102 = fmul contract float %97, 0x3FE2978D40000000\l  %103 = fsub contract float %101, %102\l  %104 = fmul contract float %95, 0x4000418940000000\l  %105 = fadd contract float %104, %93\l  %106 = uitofp i32 %44 to float\l  %107 = fadd contract float %98, %106\l  %108 = fsub contract float %106, %100\l  %109 = fsub contract float %108, %102\l  %110 = fadd contract float %104, %106\l  %111 = fmul contract float %99, 0x3FCFE00000000000\l  %112 = fmul contract float %103, 0x3FCFE00000000000\l  %113 = fmul contract float %105, 0x3FCFE00000000000\l  %114 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 1.000000e+00\>, float %111, i64 0\l  %115 = insertelement \<4 x float\> %114, float %112, i64 1\l  %116 = insertelement \<4 x float\> %115, float %113, i64 2\l  %117 = mul i32 %27, %4\l  %118 = add i32 %117, %19\l  %119 = zext i32 %118 to i64\l  %120 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %119, i32 0, i32 0, i32 0\l  store \<4 x float\> %116, \<4 x float\> addrspace(1)* %120, align 16\l  %121 = fmul contract float %107, 0x3FCFE00000000000\l  %122 = fmul contract float %109, 0x3FCFE00000000000\l  %123 = fmul contract float %110, 0x3FCFE00000000000\l  %124 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 1.000000e+00\>, float %121, i64 0\l  %125 = insertelement \<4 x float\> %124, float %122, i64 1\l  %126 = insertelement \<4 x float\> %125, float %123, i64 2\l  %127 = add i32 %118, 1\l  %128 = zext i32 %127 to i64\l  %129 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %128, i32 0, i32 0, i32 0\l  store \<4 x float\> %126, \<4 x float\> addrspace(1)* %129, align 16\l  br label %130\l}"];
	Node0x58ad130 -> Node0x58ab7a0;
	Node0x58ab7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  ret void\l}"];
}
