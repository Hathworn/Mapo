digraph "CFG for '_Z7binningPfS_S_S_iii' function" {
	label="CFG for '_Z7binningPfS_S_S_iii' function";

	Node0x46df390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7binningPfS_S_S_iiiE4temp, i32 0, i32 %8\l  store float 0.000000e+00, float addrspace(3)* %9, align 4, !tbaa !5\l  %10 = icmp sgt i32 %4, 0\l  br i1 %10, label %11, label %28\l|{<s0>T|<s1>F}}"];
	Node0x46df390:s0 -> Node0x46e1530;
	Node0x46df390:s1 -> Node0x46e15c0;
	Node0x46e1530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%11:\l11:                                               \l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !9, !invariant.load\l... !10\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !11\l  %21 = mul i32 %12, %17\l  %22 = add i32 %21, %8\l  %23 = icmp slt i32 %22, %4\l  %24 = sitofp i32 %6 to float\l  %25 = sitofp i32 %5 to float\l  br label %33\l}"];
	Node0x46e1530 -> Node0x46e2620;
	Node0x46e2720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%26:\l26:                                               \l  %27 = load float, float addrspace(3)* %9, align 4, !tbaa !5\l  br label %28\l}"];
	Node0x46e2720 -> Node0x46e15c0;
	Node0x46e15c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  %29 = phi float [ %27, %26 ], [ 0.000000e+00, %7 ]\l  %30 = zext i32 %8 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %3, i64 %30\l  %32 = atomicrmw fadd float addrspace(1)* %31, float %29\l... syncscope(\"agent-one-as\") monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x46e2620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %11 ], [ %50, %49 ]\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %35\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  br i1 %23, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x46e2620:s0 -> Node0x46e39f0;
	Node0x46e2620:s1 -> Node0x46e34e0;
	Node0x46e39f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%42:\l42:                                               \l  %43 = udiv i32 %20, %17\l  %44 = mul i32 %43, %17\l  %45 = icmp ugt i32 %20, %44\l  %46 = zext i1 %45 to i32\l  %47 = add i32 %43, %46\l  %48 = mul i32 %47, %17\l  br label %52\l}"];
	Node0x46e39f0 -> Node0x46e3e70;
	Node0x46e34e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = add nuw nsw i32 %34, 1\l  %51 = icmp eq i32 %50, %4\l  br i1 %51, label %26, label %33, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x46e34e0:s0 -> Node0x46e2720;
	Node0x46e34e0:s1 -> Node0x46e2620;
	Node0x46e3e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %22, %42 ], [ %98, %97 ]\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5\l  %61 = fmul contract float %37, %56\l  %62 = fmul contract float %39, %58\l  %63 = fadd contract float %61, %62\l  %64 = fmul contract float %41, %60\l  %65 = fadd contract float %63, %64\l  %66 = tail call float @llvm.minnum.f32(float %65, float 1.000000e+00)\l  %67 = tail call float @llvm.fabs.f32(float %66)\l  %68 = tail call float @llvm.fmuladd.f32(float %67, float -5.000000e-01,\l... float 5.000000e-01)\l  %69 = fmul float %66, %66\l  %70 = fcmp ogt float %67, 5.000000e-01\l  %71 = select i1 %70, float %68, float %69\l  %72 = tail call float @llvm.fmuladd.f32(float %71, float 0x3FA38434E0000000,\l... float 0x3F8BF8BB40000000)\l  %73 = tail call float @llvm.fmuladd.f32(float %71, float %72, float\l... 0x3FA0698780000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %71, float %73, float\l... 0x3FA6C83620000000)\l  %75 = tail call float @llvm.fmuladd.f32(float %71, float %74, float\l... 0x3FB3337900000000)\l  %76 = tail call float @llvm.fmuladd.f32(float %71, float %75, float\l... 0x3FC5555580000000)\l  %77 = fmul float %71, %76\l  %78 = tail call float @llvm.sqrt.f32(float %71)\l  %79 = tail call float @llvm.fmuladd.f32(float %78, float %77, float %78)\l  %80 = fmul float %79, 2.000000e+00\l  %81 = fsub float 0x400921FB60000000, %80\l  %82 = fcmp olt float %66, 0.000000e+00\l  %83 = select i1 %82, float %81, float %80\l  %84 = tail call float @llvm.fmuladd.f32(float %66, float %77, float %66)\l  %85 = fsub float 0x3FF921FB60000000, %84\l  %86 = select i1 %70, float %83, float %85\l  %87 = fpext float %86 to double\l  %88 = fmul contract double %87, 1.800000e+02\l  %89 = fdiv contract double %88, 0x400921FB54442D18\l  %90 = fptrunc double %89 to float\l  %91 = fcmp contract olt float %90, %24\l  br i1 %91, label %92, label %97\l|{<s0>T|<s1>F}}"];
	Node0x46e3e70:s0 -> Node0x46e6920;
	Node0x46e3e70:s1 -> Node0x46e41c0;
	Node0x46e6920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%92:\l92:                                               \l  %93 = fmul contract float %25, %90\l  %94 = fptosi float %93 to i32\l  %95 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ7binningPfS_S_S_iiiE4temp, i32 0, i32 %94\l  %96 = atomicrmw fadd float addrspace(3)* %95, float 1.000000e+00\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %97\l}"];
	Node0x46e6920 -> Node0x46e41c0;
	Node0x46e41c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %98 = add i32 %48, %53\l  %99 = icmp slt i32 %98, %4\l  br i1 %99, label %52, label %49, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x46e41c0:s0 -> Node0x46e3e70;
	Node0x46e41c0:s1 -> Node0x46e34e0;
}
