digraph "CFG for '_Z11binning_mixPfS_S_S_S_S_S_iiii' function" {
	label="CFG for '_Z11binning_mixPfS_S_S_S_S_S_iiii' function";

	Node0x491fe70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ11binning_mixPfS_S_S_S_S_S_iiiiE4temp, i32 0, i32 %12\l  store float 0.000000e+00, float addrspace(3)* %13, align 4, !tbaa !5\l  %14 = icmp sgt i32 %7, 0\l  br i1 %14, label %15, label %32\l|{<s0>T|<s1>F}}"];
	Node0x491fe70:s0 -> Node0x49226d0;
	Node0x491fe70:s1 -> Node0x4922760;
	Node0x49226d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%15:\l15:                                               \l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !9, !invariant.load\l... !10\l  %21 = zext i16 %20 to i32\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !11\l  %25 = mul i32 %16, %21\l  %26 = add i32 %25, %12\l  %27 = icmp slt i32 %26, %8\l  %28 = sitofp i32 %10 to float\l  %29 = sitofp i32 %9 to float\l  br label %37\l}"];
	Node0x49226d0 -> Node0x49237c0;
	Node0x49238c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%30:\l30:                                               \l  %31 = load float, float addrspace(3)* %13, align 4, !tbaa !5\l  br label %32\l}"];
	Node0x49238c0 -> Node0x4922760;
	Node0x4922760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%32:\l32:                                               \l  %33 = phi float [ %31, %30 ], [ 0.000000e+00, %11 ]\l  %34 = zext i32 %12 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %6, i64 %34\l  %36 = atomicrmw fadd float addrspace(1)* %35, float %33\l... syncscope(\"agent-one-as\") monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
	Node0x49237c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %15 ], [ %54, %53 ]\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !5\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !5\l  %44 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !5\l  br i1 %27, label %46, label %53\l|{<s0>T|<s1>F}}"];
	Node0x49237c0:s0 -> Node0x4924b90;
	Node0x49237c0:s1 -> Node0x4924680;
	Node0x4924b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%46:\l46:                                               \l  %47 = udiv i32 %24, %21\l  %48 = mul i32 %47, %21\l  %49 = icmp ugt i32 %24, %48\l  %50 = zext i1 %49 to i32\l  %51 = add i32 %47, %50\l  %52 = mul i32 %51, %21\l  br label %56\l}"];
	Node0x4924b90 -> Node0x4925010;
	Node0x4924680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%53:\l53:                                               \l  %54 = add nuw nsw i32 %38, 1\l  %55 = icmp eq i32 %54, %7\l  br i1 %55, label %30, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4924680:s0 -> Node0x49238c0;
	Node0x4924680:s1 -> Node0x49237c0;
	Node0x4925010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%56:\l56:                                               \l  %57 = phi i32 [ %26, %46 ], [ %102, %101 ]\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %3, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %58\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5\l  %63 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5\l  %65 = fmul contract float %41, %60\l  %66 = fmul contract float %43, %62\l  %67 = fadd contract float %65, %66\l  %68 = fmul contract float %45, %64\l  %69 = fadd contract float %67, %68\l  %70 = tail call float @llvm.minnum.f32(float %69, float 1.000000e+00)\l  %71 = tail call float @llvm.fabs.f32(float %70)\l  %72 = tail call float @llvm.fmuladd.f32(float %71, float -5.000000e-01,\l... float 5.000000e-01)\l  %73 = fmul float %70, %70\l  %74 = fcmp ogt float %71, 5.000000e-01\l  %75 = select i1 %74, float %72, float %73\l  %76 = tail call float @llvm.fmuladd.f32(float %75, float 0x3FA38434E0000000,\l... float 0x3F8BF8BB40000000)\l  %77 = tail call float @llvm.fmuladd.f32(float %75, float %76, float\l... 0x3FA0698780000000)\l  %78 = tail call float @llvm.fmuladd.f32(float %75, float %77, float\l... 0x3FA6C83620000000)\l  %79 = tail call float @llvm.fmuladd.f32(float %75, float %78, float\l... 0x3FB3337900000000)\l  %80 = tail call float @llvm.fmuladd.f32(float %75, float %79, float\l... 0x3FC5555580000000)\l  %81 = fmul float %75, %80\l  %82 = tail call float @llvm.sqrt.f32(float %75)\l  %83 = tail call float @llvm.fmuladd.f32(float %82, float %81, float %82)\l  %84 = fmul float %83, 2.000000e+00\l  %85 = fsub float 0x400921FB60000000, %84\l  %86 = fcmp olt float %70, 0.000000e+00\l  %87 = select i1 %86, float %85, float %84\l  %88 = tail call float @llvm.fmuladd.f32(float %70, float %81, float %70)\l  %89 = fsub float 0x3FF921FB60000000, %88\l  %90 = select i1 %74, float %87, float %89\l  %91 = fpext float %90 to double\l  %92 = fmul contract double %91, 1.800000e+02\l  %93 = fdiv contract double %92, 0x400921FB54442D18\l  %94 = fptrunc double %93 to float\l  %95 = fcmp contract olt float %94, %28\l  br i1 %95, label %96, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4925010:s0 -> Node0x4927ae0;
	Node0x4925010:s1 -> Node0x4925360;
	Node0x4927ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%96:\l96:                                               \l  %97 = fmul contract float %29, %94\l  %98 = fptosi float %97 to i32\l  %99 = getelementptr inbounds [256 x float], [256 x float] addrspace(3)*\l... @_ZZ11binning_mixPfS_S_S_S_S_S_iiiiE4temp, i32 0, i32 %98\l  %100 = atomicrmw fadd float addrspace(3)* %99, float 1.000000e+00\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %101\l}"];
	Node0x4927ae0 -> Node0x4925360;
	Node0x4925360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = add i32 %52, %57\l  %103 = icmp slt i32 %102, %8\l  br i1 %103, label %56, label %53, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4925360:s0 -> Node0x4925010;
	Node0x4925360:s1 -> Node0x4924680;
}
