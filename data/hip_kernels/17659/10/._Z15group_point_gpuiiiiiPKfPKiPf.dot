digraph "CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function" {
	label="CFG for '_Z15group_point_gpuiiiiiPKfPKiPf' function";

	Node0x46e9660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%8:\l  %9 = icmp sgt i32 %0, 0\l  br i1 %9, label %10, label %29\l|{<s0>T|<s1>F}}"];
	Node0x46e9660:s0 -> Node0x46e9610;
	Node0x46e9660:s1 -> Node0x46e9e20;
	Node0x46e9610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#6c8ff170",label="{%10:\l10:                                               \l  %11 = icmp sgt i32 %3, 0\l  %12 = icmp sgt i32 %4, 0\l  %13 = icmp sgt i32 %2, 0\l  %14 = mul nsw i32 %2, %1\l  %15 = sext i32 %14 to i64\l  %16 = mul nsw i32 %4, %3\l  %17 = sext i32 %16 to i64\l  %18 = mul nsw i32 %16, %2\l  %19 = sext i32 %18 to i64\l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  %22 = and i32 %2, -8\l  %23 = icmp eq i32 %20, 0\l  br label %24\l}"];
	Node0x46e9610 -> Node0x46e8880;
	Node0x46e8880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%24:\l24:                                               \l  %25 = phi float addrspace(1)* [ %5, %10 ], [ %35, %34 ]\l  %26 = phi i32 [ 0, %10 ], [ %38, %34 ]\l  %27 = phi float addrspace(1)* [ %7, %10 ], [ %37, %34 ]\l  %28 = phi i32 addrspace(1)* [ %6, %10 ], [ %36, %34 ]\l  br i1 %11, label %30, label %34\l|{<s0>T|<s1>F}}"];
	Node0x46e8880:s0 -> Node0x46ead00;
	Node0x46e8880:s1 -> Node0x46ea860;
	Node0x46e9e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%29:\l29:                                               \l  ret void\l}"];
	Node0x46ead00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%30:\l30:                                               \l  %31 = phi i32 [ %41, %40 ], [ 0, %24 ]\l  br i1 %12, label %32, label %40\l|{<s0>T|<s1>F}}"];
	Node0x46ead00:s0 -> Node0x46eafc0;
	Node0x46ead00:s1 -> Node0x46eaec0;
	Node0x46eafc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %31, %4\l  br label %43\l}"];
	Node0x46eafc0 -> Node0x46ea330;
	Node0x46ea860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float addrspace(1)* %25, i64 %15\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %28, i64 %17\l  %37 = getelementptr inbounds float, float addrspace(1)* %27, i64 %19\l  %38 = add nuw nsw i32 %26, 1\l  %39 = icmp eq i32 %38, %0\l  br i1 %39, label %29, label %24, !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x46ea860:s0 -> Node0x46e9e20;
	Node0x46ea860:s1 -> Node0x46e8880;
	Node0x46eaec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %31, 1\l  %42 = icmp eq i32 %41, %3\l  br i1 %42, label %34, label %30, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x46eaec0:s0 -> Node0x46ea860;
	Node0x46eaec0:s1 -> Node0x46ead00;
	Node0x46ea330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%43:\l43:                                               \l  %44 = phi i32 [ 0, %32 ], [ %68, %67 ]\l  %45 = add nsw i32 %44, %33\l  br i1 %13, label %46, label %67\l|{<s0>T|<s1>F}}"];
	Node0x46ea330:s0 -> Node0x46ec5a0;
	Node0x46ea330:s1 -> Node0x46ec410;
	Node0x46ec5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%46:\l46:                                               \l  %47 = sext i32 %45 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %28, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7\l  %50 = mul nsw i32 %49, %2\l  %51 = mul i32 %45, %2\l  br i1 %21, label %52, label %70\l|{<s0>T|<s1>F}}"];
	Node0x46ec5a0:s0 -> Node0x46eca80;
	Node0x46ec5a0:s1 -> Node0x46ecb10;
	Node0x46eca80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %46 ], [ %136, %70 ]\l  br i1 %23, label %67, label %54\l|{<s0>T|<s1>F}}"];
	Node0x46eca80:s0 -> Node0x46ec410;
	Node0x46eca80:s1 -> Node0x46ecd00;
	Node0x46ecd00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = phi i32 [ %64, %54 ], [ %53, %52 ]\l  %56 = phi i32 [ %65, %54 ], [ 0, %52 ]\l  %57 = add nsw i32 %55, %50\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %25, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !11\l  %61 = add nsw i32 %55, %51\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %27, i64 %62\l  store float %60, float addrspace(1)* %63, align 4, !tbaa !11\l  %64 = add nuw nsw i32 %55, 1\l  %65 = add i32 %56, 1\l  %66 = icmp eq i32 %65, %20\l  br i1 %66, label %67, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x46ecd00:s0 -> Node0x46ec410;
	Node0x46ecd00:s1 -> Node0x46ecd00;
	Node0x46ec410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%67:\l67:                                               \l  %68 = add nuw nsw i32 %44, 1\l  %69 = icmp eq i32 %68, %4\l  br i1 %69, label %40, label %43, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x46ec410:s0 -> Node0x46eaec0;
	Node0x46ec410:s1 -> Node0x46ea330;
	Node0x46ecb10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%70:\l70:                                               \l  %71 = phi i32 [ %136, %70 ], [ 0, %46 ]\l  %72 = phi i32 [ %137, %70 ], [ 0, %46 ]\l  %73 = add nsw i32 %71, %50\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %25, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !11\l  %77 = add nsw i32 %71, %51\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %27, i64 %78\l  store float %76, float addrspace(1)* %79, align 4, !tbaa !11\l  %80 = or i32 %71, 1\l  %81 = add nsw i32 %80, %50\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %25, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !11\l  %85 = add nsw i32 %80, %51\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %27, i64 %86\l  store float %84, float addrspace(1)* %87, align 4, !tbaa !11\l  %88 = or i32 %71, 2\l  %89 = add nsw i32 %88, %50\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %25, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !11\l  %93 = add nsw i32 %88, %51\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %27, i64 %94\l  store float %92, float addrspace(1)* %95, align 4, !tbaa !11\l  %96 = or i32 %71, 3\l  %97 = add nsw i32 %96, %50\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %25, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11\l  %101 = add nsw i32 %96, %51\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %27, i64 %102\l  store float %100, float addrspace(1)* %103, align 4, !tbaa !11\l  %104 = or i32 %71, 4\l  %105 = add nsw i32 %104, %50\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %25, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !11\l  %109 = add nsw i32 %104, %51\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %27, i64 %110\l  store float %108, float addrspace(1)* %111, align 4, !tbaa !11\l  %112 = or i32 %71, 5\l  %113 = add nsw i32 %112, %50\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %25, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !11\l  %117 = add nsw i32 %112, %51\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %27, i64 %118\l  store float %116, float addrspace(1)* %119, align 4, !tbaa !11\l  %120 = or i32 %71, 6\l  %121 = add nsw i32 %120, %50\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %25, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !11\l  %125 = add nsw i32 %120, %51\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %27, i64 %126\l  store float %124, float addrspace(1)* %127, align 4, !tbaa !11\l  %128 = or i32 %71, 7\l  %129 = add nsw i32 %128, %50\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds float, float addrspace(1)* %25, i64 %130\l  %132 = load float, float addrspace(1)* %131, align 4, !tbaa !11\l  %133 = add nsw i32 %128, %51\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %27, i64 %134\l  store float %132, float addrspace(1)* %135, align 4, !tbaa !11\l  %136 = add nuw nsw i32 %71, 8\l  %137 = add i32 %72, 8\l  %138 = icmp eq i32 %137, %22\l  br i1 %138, label %52, label %70, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x46ecb10:s0 -> Node0x46eca80;
	Node0x46ecb10:s1 -> Node0x46ecb10;
}
