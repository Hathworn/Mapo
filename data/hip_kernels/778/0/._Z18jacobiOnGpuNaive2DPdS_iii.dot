digraph "CFG for '_Z18jacobiOnGpuNaive2DPdS_iii' function" {
	label="CFG for '_Z18jacobiOnGpuNaive2DPdS_iii' function";

	Node0x48746b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %7, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = zext i32 %14 to i64\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = shl nuw nsw i32 %22, 2\l  %24 = add i32 %21, %23\l  %25 = zext i32 %24 to i64\l  %26 = sext i32 %3 to i64\l  %27 = mul nsw i64 %15, %26\l  %28 = add nsw i64 %27, %25\l  %29 = add nsw i64 %28, -1\l  %30 = add nsw i64 %28, -2\l  %31 = add nsw i64 %28, -3\l  %32 = icmp sgt i32 %4, 0\l  br i1 %32, label %33, label %81\l|{<s0>T|<s1>F}}"];
	Node0x48746b0:s0 -> Node0x4876700;
	Node0x48746b0:s1 -> Node0x4876790;
	Node0x4876700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%33:\l33:                                               \l  %34 = add nuw nsw i64 %15, 1\l  %35 = add nsw i64 %15, -1\l  %36 = icmp eq i32 %14, 0\l  %37 = icmp eq i32 %24, 0\l  %38 = select i1 %36, i1 true, i1 %37\l  %39 = add nsw i32 %2, -1\l  %40 = sext i32 %39 to i64\l  %41 = icmp uge i64 %15, %40\l  %42 = add nsw i32 %3, -1\l  %43 = sext i32 %42 to i64\l  %44 = icmp uge i64 %25, %43\l  %45 = mul nsw i64 %35, %26\l  %46 = add nsw i64 %45, %25\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = mul nsw i64 %34, %26\l  %49 = add nsw i64 %48, %25\l  %50 = getelementptr inbounds double, double addrspace(1)* %0, i64 %49\l  %51 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  %52 = add nsw i64 %28, 1\l  %53 = getelementptr inbounds double, double addrspace(1)* %0, i64 %52\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %56 = add nsw i64 %28, -4\l  %57 = getelementptr inbounds double, double addrspace(1)* %0, i64 %56\l  %58 = sext i32 %2 to i64\l  %59 = add i64 %31, %58\l  %60 = getelementptr inbounds double, double addrspace(1)* %0, i64 %59\l  %61 = sub i64 %31, %58\l  %62 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %31\l  %64 = getelementptr inbounds double, double addrspace(1)* %0, i64 %31\l  %65 = add i64 %30, %58\l  %66 = getelementptr inbounds double, double addrspace(1)* %0, i64 %65\l  %67 = sub i64 %30, %58\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %71 = add i64 %29, %58\l  %72 = getelementptr inbounds double, double addrspace(1)* %0, i64 %71\l  %73 = sub nsw i64 %29, %58\l  %74 = getelementptr inbounds double, double addrspace(1)* %0, i64 %73\l  %75 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29\l  %76 = mul nsw i32 %3, %2\l  %77 = sext i32 %76 to i64\l  %78 = icmp ult i64 %28, %77\l  %79 = select i1 %38, i1 true, i1 %41\l  %80 = select i1 %79, i1 true, i1 %44\l  br label %82\l}"];
	Node0x4876700 -> Node0x48786e0;
	Node0x4876790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%81:\l81:                                               \l  ret void\l}"];
	Node0x48786e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi i32 [ 0, %33 ], [ %121, %120 ]\l  br i1 %80, label %117, label %84\l|{<s0>T|<s1>F}}"];
	Node0x48786e0:s0 -> Node0x487a860;
	Node0x48786e0:s1 -> Node0x487a8f0;
	Node0x487a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %86 = load double, double addrspace(1)* %50, align 8, !tbaa !7\l  %87 = fadd contract double %85, %86\l  %88 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %89 = fadd contract double %87, %88\l  %90 = load double, double addrspace(1)* %53, align 8, !tbaa !7\l  %91 = fadd contract double %89, %90\l  %92 = fmul contract double %91, 2.500000e-01\l  store double %92, double addrspace(1)* %54, align 8, !tbaa !7\l  %93 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %94 = load double, double addrspace(1)* %57, align 8, !tbaa !7\l  %95 = fadd contract double %93, %94\l  %96 = load double, double addrspace(1)* %60, align 8, !tbaa !7\l  %97 = fadd contract double %95, %96\l  %98 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %99 = fadd contract double %97, %98\l  %100 = fmul contract double %99, 2.500000e-01\l  store double %100, double addrspace(1)* %63, align 8, !tbaa !7\l  %101 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %102 = load double, double addrspace(1)* %64, align 8, !tbaa !7\l  %103 = fadd contract double %101, %102\l  %104 = load double, double addrspace(1)* %66, align 8, !tbaa !7\l  %105 = fadd contract double %103, %104\l  %106 = load double, double addrspace(1)* %68, align 8, !tbaa !7\l  %107 = fadd contract double %105, %106\l  %108 = fmul contract double %107, 2.500000e-01\l  store double %108, double addrspace(1)* %69, align 8, !tbaa !7\l  %109 = load double, double addrspace(1)* %70, align 8, !tbaa !7\l  %110 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %111 = fadd contract double %109, %110\l  %112 = load double, double addrspace(1)* %72, align 8, !tbaa !7\l  %113 = fadd contract double %111, %112\l  %114 = load double, double addrspace(1)* %74, align 8, !tbaa !7\l  %115 = fadd contract double %113, %114\l  %116 = fmul contract double %115, 2.500000e-01\l  store double %116, double addrspace(1)* %75, align 8, !tbaa !7\l  br label %117\l}"];
	Node0x487a8f0 -> Node0x487a860;
	Node0x487a860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %78, label %118, label %120\l|{<s0>T|<s1>F}}"];
	Node0x487a860:s0 -> Node0x487d110;
	Node0x487a860:s1 -> Node0x487a760;
	Node0x487d110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%118:\l118:                                              \l  %119 = load double, double addrspace(1)* %54, align 8, !tbaa !7\l  store double %119, double addrspace(1)* %70, align 8, !tbaa !7\l  br label %120\l}"];
	Node0x487d110 -> Node0x487a760;
	Node0x487a760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%120:\l120:                                              \l  %121 = add nuw nsw i32 %83, 1\l  %122 = icmp eq i32 %121, %4\l  br i1 %122, label %81, label %82, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x487a760:s0 -> Node0x4876790;
	Node0x487a760:s1 -> Node0x48786e0;
}
