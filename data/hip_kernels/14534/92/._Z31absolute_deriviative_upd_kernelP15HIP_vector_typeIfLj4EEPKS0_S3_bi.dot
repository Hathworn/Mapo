digraph "CFG for '_Z31absolute_deriviative_upd_kernelP15HIP_vector_typeIfLj4EEPKS0_S3_bi' function" {
	label="CFG for '_Z31absolute_deriviative_upd_kernelP15HIP_vector_typeIfLj4EEPKS0_S3_bi' function";

	Node0x5af3ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = udiv i32 %13, %10\l  %17 = mul i32 %16, %10\l  %18 = icmp ugt i32 %13, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %15\l  %22 = add i32 %21, %14\l  %23 = mul i32 %22, %10\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %25, %4\l  br i1 %26, label %27, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5af3ec0:s0 -> Node0x5af6670;
	Node0x5af3ec0:s1 -> Node0x5af6700;
	Node0x5af6670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = sext i32 %25 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %30 = load float, float addrspace(1)* %29, align 16, !amdgpu.noclobber !5\l  %31 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %32 = load float, float addrspace(1)* %31, align 4, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 2\l  %34 = load float, float addrspace(1)* %33, align 8, !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64 3\l  %36 = load float, float addrspace(1)* %35, align 4, !amdgpu.noclobber !5\l  %37 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %38 = load float, float addrspace(1)* %37, align 16, !amdgpu.noclobber !5\l  %39 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %40 = load float, float addrspace(1)* %39, align 4, !amdgpu.noclobber !5\l  %41 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 2\l  %42 = load float, float addrspace(1)* %41, align 8, !amdgpu.noclobber !5\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %28, i32 0, i32 0, i32 0, i64 3\l  %44 = load float, float addrspace(1)* %43, align 4, !amdgpu.noclobber !5\l  %45 = fcmp contract olt float %30, 0.000000e+00\l  %46 = fneg contract float %38\l  %47 = select i1 %45, float %46, float %38\l  %48 = fcmp contract olt float %32, 0.000000e+00\l  %49 = fneg contract float %40\l  %50 = select i1 %48, float %49, float %40\l  %51 = fcmp contract olt float %34, 0.000000e+00\l  %52 = fneg contract float %42\l  %53 = select i1 %51, float %52, float %42\l  %54 = fcmp contract olt float %36, 0.000000e+00\l  %55 = fneg contract float %44\l  %56 = select i1 %54, float %55, float %44\l  br i1 %3, label %57, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5af6670:s0 -> Node0x5af8e60;
	Node0x5af6670:s1 -> Node0x5af8eb0;
	Node0x5af8e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 0\l  %59 = load float, float addrspace(1)* %58, align 16, !amdgpu.noclobber !5\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 1\l  %61 = load float, float addrspace(1)* %60, align 4, !amdgpu.noclobber !5\l  %62 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 2\l  %63 = load float, float addrspace(1)* %62, align 8, !amdgpu.noclobber !5\l  %64 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 3\l  %65 = load float, float addrspace(1)* %64, align 4, !amdgpu.noclobber !5\l  %66 = fadd contract float %47, %59\l  %67 = fadd contract float %50, %61\l  %68 = fadd contract float %53, %63\l  %69 = fadd contract float %56, %65\l  br label %70\l}"];
	Node0x5af8e60 -> Node0x5af8eb0;
	Node0x5af8eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%70:\l70:                                               \l  %71 = phi float [ %66, %57 ], [ %47, %27 ]\l  %72 = phi float [ %67, %57 ], [ %50, %27 ]\l  %73 = phi float [ %68, %57 ], [ %53, %27 ]\l  %74 = phi float [ %69, %57 ], [ %56, %27 ]\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 0\l  store float %71, float addrspace(1)* %75, align 16\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 1\l  store float %72, float addrspace(1)* %76, align 4\l  %77 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 2\l  store float %73, float addrspace(1)* %77, align 8\l  %78 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %28, i32 0, i32 0, i32 0, i64 3\l  store float %74, float addrspace(1)* %78, align 4\l  br label %79\l}"];
	Node0x5af8eb0 -> Node0x5af6700;
	Node0x5af6700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  ret void\l}"];
}
