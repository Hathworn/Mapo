digraph "CFG for '_Z36rectified_linear_backprop_upd_kernelP15HIP_vector_typeIfLj4EEPKS0_PKS_IjLj4EEfbi' function" {
	label="CFG for '_Z36rectified_linear_backprop_upd_kernelP15HIP_vector_typeIfLj4EEPKS0_PKS_IjLj4EEfbi' function";

	Node0x61d0de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %77\l|{<s0>T|<s1>F}}"];
	Node0x61d0de0:s0 -> Node0x61d1650;
	Node0x61d0de0:s1 -> Node0x61d2d40;
	Node0x61d1650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i64 0\l  %20 = load float, float addrspace(1)* %19, align 16, !amdgpu.noclobber !5\l  %21 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i64 1\l  %22 = load float, float addrspace(1)* %21, align 4, !amdgpu.noclobber !5\l  %23 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i64 2\l  %24 = load float, float addrspace(1)* %23, align 8, !amdgpu.noclobber !5\l  %25 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %1, i64 %18, i32 0, i32 0, i32 0, i64 3\l  %26 = load float, float addrspace(1)* %25, align 4, !amdgpu.noclobber !5\l  %27 = ashr i32 %15, 5\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 0\l  %30 = load i32, i32 addrspace(1)* %29, align 16, !amdgpu.noclobber !5\l  %31 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 1\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !amdgpu.noclobber !5\l  %33 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 2\l  %34 = load i32, i32 addrspace(1)* %33, align 8, !amdgpu.noclobber !5\l  %35 = getelementptr inbounds %struct.HIP_vector_type.0,\l... %struct.HIP_vector_type.0 addrspace(1)* %2, i64 %28, i32 0, i32 0, i32 0, i64\l... 3\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !amdgpu.noclobber !5\l  %37 = and i32 %15, 31\l  %38 = shl nuw i32 1, %37\l  %39 = and i32 %30, %38\l  %40 = icmp eq i32 %39, 0\l  %41 = select i1 %40, float %3, float 1.000000e+00\l  %42 = fmul contract float %20, %41\l  %43 = and i32 %32, %38\l  %44 = icmp eq i32 %43, 0\l  %45 = select i1 %44, float %3, float 1.000000e+00\l  %46 = fmul contract float %22, %45\l  %47 = and i32 %34, %38\l  %48 = icmp eq i32 %47, 0\l  %49 = select i1 %48, float %3, float 1.000000e+00\l  %50 = fmul contract float %24, %49\l  %51 = and i32 %36, %38\l  %52 = icmp eq i32 %51, 0\l  %53 = select i1 %52, float %3, float 1.000000e+00\l  %54 = fmul contract float %26, %53\l  br i1 %4, label %55, label %68\l|{<s0>T|<s1>F}}"];
	Node0x61d1650:s0 -> Node0x61d5a20;
	Node0x61d1650:s1 -> Node0x61d5ab0;
	Node0x61d5a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 0\l  %57 = load float, float addrspace(1)* %56, align 16, !amdgpu.noclobber !5\l  %58 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 1\l  %59 = load float, float addrspace(1)* %58, align 4, !amdgpu.noclobber !5\l  %60 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 2\l  %61 = load float, float addrspace(1)* %60, align 8, !amdgpu.noclobber !5\l  %62 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 3\l  %63 = load float, float addrspace(1)* %62, align 4, !amdgpu.noclobber !5\l  %64 = fadd contract float %42, %57\l  %65 = fadd contract float %46, %59\l  %66 = fadd contract float %50, %61\l  %67 = fadd contract float %54, %63\l  br label %68\l}"];
	Node0x61d5a20 -> Node0x61d5ab0;
	Node0x61d5ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%68:\l68:                                               \l  %69 = phi float [ %64, %55 ], [ %42, %17 ]\l  %70 = phi float [ %65, %55 ], [ %46, %17 ]\l  %71 = phi float [ %66, %55 ], [ %50, %17 ]\l  %72 = phi float [ %67, %55 ], [ %54, %17 ]\l  %73 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 0\l  store float %69, float addrspace(1)* %73, align 16\l  %74 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 1\l  store float %70, float addrspace(1)* %74, align 4\l  %75 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 2\l  store float %71, float addrspace(1)* %75, align 8\l  %76 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %18, i32 0, i32 0, i32 0, i64 3\l  store float %72, float addrspace(1)* %76, align 4\l  br label %77\l}"];
	Node0x61d5ab0 -> Node0x61d2d40;
	Node0x61d2d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  ret void\l}"];
}
