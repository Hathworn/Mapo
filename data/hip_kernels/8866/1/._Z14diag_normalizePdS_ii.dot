digraph "CFG for '_Z14diag_normalizePdS_ii' function" {
	label="CFG for '_Z14diag_normalizePdS_ii' function";

	Node0x64dc5e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = bitcast i8 addrspace(4)* %7 to \<2 x i16\> addrspace(4)*\l  %12 = load \<2 x i16\>, \<2 x i16\> addrspace(4)* %11, align 4, !invariant.load\l... !5\l  %13 = zext \<2 x i16\> %12 to \<2 x i32\>\l  %14 = insertelement \<2 x i32\> poison, i32 %5, i64 0\l  %15 = insertelement \<2 x i32\> %14, i32 %9, i64 1\l  %16 = mul \<2 x i32\> %15, %13\l  %17 = insertelement \<2 x i32\> poison, i32 %8, i64 0\l  %18 = insertelement \<2 x i32\> %17, i32 %10, i64 1\l  %19 = add \<2 x i32\> %16, %18\l  %20 = shufflevector \<2 x i32\> %19, \<2 x i32\> poison, \<4 x i32\> \<i32 0, i32\l... 0, i32 1, i32 0\>\l  %21 = insertelement \<4 x i32\> poison, i32 %3, i64 1\l  %22 = insertelement \<4 x i32\> %21, i32 %2, i64 2\l  %23 = insertelement \<4 x i32\> %22, i32 %2, i64 3\l  %24 = shufflevector \<4 x i32\> %23, \<4 x i32\> %20, \<4 x i32\> \<i32 6, i32 1,\l... i32 2, i32 3\>\l  %25 = icmp eq \<4 x i32\> %20, %24\l  %26 = icmp slt \<4 x i32\> %20, %24\l  %27 = shufflevector \<4 x i1\> %25, \<4 x i1\> %26, \<4 x i32\> \<i32 0, i32 1, i32\l... 6, i32 7\>\l  %28 = freeze \<4 x i1\> %27\l  %29 = bitcast \<4 x i1\> %28 to i4\l  %30 = icmp eq i4 %29, -1\l  br i1 %30, label %31, label %42\l|{<s0>T|<s1>F}}"];
	Node0x64dc5e0:s0 -> Node0x64e0920;
	Node0x64dc5e0:s1 -> Node0x64e09b0;
	Node0x64e0920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %3, %2\l  %33 = add nsw i32 %32, %3\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !6,\l... !amdgpu.noclobber !5\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !6,\l... !amdgpu.noclobber !5\l  %39 = fdiv contract double %38, %36\l  store double %39, double addrspace(1)* %37, align 8, !tbaa !6\l  %40 = load double, double addrspace(1)* %35, align 8, !tbaa !6\l  %41 = fdiv contract double %40, %40\l  store double %41, double addrspace(1)* %35, align 8, !tbaa !6\l  br label %42\l}"];
	Node0x64e0920 -> Node0x64e09b0;
	Node0x64e09b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  ret void\l}"];
}
