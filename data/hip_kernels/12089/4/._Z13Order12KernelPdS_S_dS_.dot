digraph "CFG for '_Z13Order12KernelPdS_S_dS_' function" {
	label="CFG for '_Z13Order12KernelPdS_S_dS_' function";

	Node0x52639d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = zext i32 %6 to i64\l  %8 = getelementptr inbounds double, double addrspace(1)* %1, i64 %7\l  %9 = load double, double addrspace(1)* %8, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %10 = load double, double addrspace(4)* @bh10, align 8, !tbaa !5\l  %11 = getelementptr inbounds double, double addrspace(1)* %2, i64 %7\l  %12 = load double, double addrspace(1)* %11, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %13 = fmul contract double %10, %12\l  %14 = load double, double addrspace(4)* @bh11, align 8, !tbaa !5\l  %15 = getelementptr inbounds double, double addrspace(1)* %4, i64 %7\l  %16 = load double, double addrspace(1)* %15, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %17 = fmul contract double %14, %16\l  %18 = fadd contract double %13, %17\l  %19 = load double, double addrspace(4)* @bh12, align 8, !tbaa !5\l  %20 = add nuw nsw i32 %6, 2\l  %21 = zext i32 %20 to i64\l  %22 = getelementptr inbounds double, double addrspace(1)* %4, i64 %21\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %24 = fmul contract double %19, %23\l  %25 = fadd contract double %18, %24\l  %26 = load double, double addrspace(4)* @bh13, align 8, !tbaa !5\l  %27 = add nuw nsw i32 %6, 4\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %4, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %31 = fmul contract double %26, %30\l  %32 = fadd contract double %25, %31\l  %33 = load double, double addrspace(4)* @bh14, align 8, !tbaa !5\l  %34 = add nuw nsw i32 %6, 6\l  %35 = zext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %4, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = fmul contract double %33, %37\l  %39 = fadd contract double %32, %38\l  %40 = load double, double addrspace(4)* @bh15, align 8, !tbaa !5\l  %41 = add nuw nsw i32 %6, 8\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %45 = fmul contract double %40, %44\l  %46 = fadd contract double %39, %45\l  %47 = fmul contract double %46, %3\l  %48 = fadd contract double %9, %47\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %7\l  store double %48, double addrspace(1)* %49, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = load double, double addrspace(1)* %8, align 8, !tbaa !5\l  %51 = load double, double addrspace(4)* @bh20, align 8, !tbaa !5\l  %52 = load double, double addrspace(1)* %11, align 8, !tbaa !5\l  %53 = fmul contract double %51, %52\l  %54 = load double, double addrspace(4)* @bh21, align 8, !tbaa !5\l  %55 = load double, double addrspace(1)* %15, align 8, !tbaa !5\l  %56 = fmul contract double %54, %55\l  %57 = fadd contract double %53, %56\l  %58 = load double, double addrspace(4)* @bh22, align 8, !tbaa !5\l  %59 = load double, double addrspace(1)* %22, align 8, !tbaa !5\l  %60 = fmul contract double %58, %59\l  %61 = fadd contract double %57, %60\l  %62 = load double, double addrspace(4)* @bh23, align 8, !tbaa !5\l  %63 = load double, double addrspace(1)* %29, align 8, !tbaa !5\l  %64 = fmul contract double %62, %63\l  %65 = fadd contract double %61, %64\l  %66 = load double, double addrspace(4)* @bh24, align 8, !tbaa !5\l  %67 = load double, double addrspace(1)* %36, align 8, !tbaa !5\l  %68 = fmul contract double %66, %67\l  %69 = fadd contract double %65, %68\l  %70 = load double, double addrspace(4)* @bh25, align 8, !tbaa !5\l  %71 = load double, double addrspace(1)* %43, align 8, !tbaa !5\l  %72 = fmul contract double %70, %71\l  %73 = fadd contract double %69, %72\l  %74 = fmul contract double %73, %3\l  %75 = fadd contract double %50, %74\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %21\l  store double %75, double addrspace(1)* %76, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %77 = load double, double addrspace(1)* %8, align 8, !tbaa !5\l  %78 = load double, double addrspace(4)* @bh30, align 8, !tbaa !5\l  %79 = load double, double addrspace(1)* %11, align 8, !tbaa !5\l  %80 = fmul contract double %78, %79\l  %81 = load double, double addrspace(4)* @bh31, align 8, !tbaa !5\l  %82 = load double, double addrspace(1)* %15, align 8, !tbaa !5\l  %83 = fmul contract double %81, %82\l  %84 = fadd contract double %80, %83\l  %85 = load double, double addrspace(4)* @bh32, align 8, !tbaa !5\l  %86 = load double, double addrspace(1)* %22, align 8, !tbaa !5\l  %87 = fmul contract double %85, %86\l  %88 = fadd contract double %84, %87\l  %89 = load double, double addrspace(4)* @bh33, align 8, !tbaa !5\l  %90 = load double, double addrspace(1)* %29, align 8, !tbaa !5\l  %91 = fmul contract double %89, %90\l  %92 = fadd contract double %88, %91\l  %93 = load double, double addrspace(4)* @bh34, align 8, !tbaa !5\l  %94 = load double, double addrspace(1)* %36, align 8, !tbaa !5\l  %95 = fmul contract double %93, %94\l  %96 = fadd contract double %92, %95\l  %97 = load double, double addrspace(4)* @bh35, align 8, !tbaa !5\l  %98 = load double, double addrspace(1)* %43, align 8, !tbaa !5\l  %99 = fmul contract double %97, %98\l  %100 = fadd contract double %96, %99\l  %101 = fmul contract double %100, %3\l  %102 = fadd contract double %77, %101\l  %103 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  store double %102, double addrspace(1)* %103, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %104 = load double, double addrspace(1)* %8, align 8, !tbaa !5\l  %105 = load double, double addrspace(4)* @bh40, align 8, !tbaa !5\l  %106 = load double, double addrspace(1)* %11, align 8, !tbaa !5\l  %107 = fmul contract double %105, %106\l  %108 = load double, double addrspace(4)* @bh41, align 8, !tbaa !5\l  %109 = load double, double addrspace(1)* %15, align 8, !tbaa !5\l  %110 = fmul contract double %108, %109\l  %111 = fadd contract double %107, %110\l  %112 = load double, double addrspace(4)* @bh42, align 8, !tbaa !5\l  %113 = load double, double addrspace(1)* %22, align 8, !tbaa !5\l  %114 = fmul contract double %112, %113\l  %115 = fadd contract double %111, %114\l  %116 = load double, double addrspace(4)* @bh43, align 8, !tbaa !5\l  %117 = load double, double addrspace(1)* %29, align 8, !tbaa !5\l  %118 = fmul contract double %116, %117\l  %119 = fadd contract double %115, %118\l  %120 = load double, double addrspace(4)* @bh44, align 8, !tbaa !5\l  %121 = load double, double addrspace(1)* %36, align 8, !tbaa !5\l  %122 = fmul contract double %120, %121\l  %123 = fadd contract double %119, %122\l  %124 = load double, double addrspace(4)* @bh45, align 8, !tbaa !5\l  %125 = load double, double addrspace(1)* %43, align 8, !tbaa !5\l  %126 = fmul contract double %124, %125\l  %127 = fadd contract double %123, %126\l  %128 = fmul contract double %127, %3\l  %129 = fadd contract double %104, %128\l  %130 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  store double %129, double addrspace(1)* %130, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %131 = load double, double addrspace(1)* %8, align 8, !tbaa !5\l  %132 = load double, double addrspace(4)* @bh50, align 8, !tbaa !5\l  %133 = load double, double addrspace(1)* %11, align 8, !tbaa !5\l  %134 = fmul contract double %132, %133\l  %135 = load double, double addrspace(4)* @bh51, align 8, !tbaa !5\l  %136 = load double, double addrspace(1)* %15, align 8, !tbaa !5\l  %137 = fmul contract double %135, %136\l  %138 = fadd contract double %134, %137\l  %139 = load double, double addrspace(4)* @bh52, align 8, !tbaa !5\l  %140 = load double, double addrspace(1)* %22, align 8, !tbaa !5\l  %141 = fmul contract double %139, %140\l  %142 = fadd contract double %138, %141\l  %143 = load double, double addrspace(4)* @bh53, align 8, !tbaa !5\l  %144 = load double, double addrspace(1)* %29, align 8, !tbaa !5\l  %145 = fmul contract double %143, %144\l  %146 = fadd contract double %142, %145\l  %147 = load double, double addrspace(4)* @bh54, align 8, !tbaa !5\l  %148 = load double, double addrspace(1)* %36, align 8, !tbaa !5\l  %149 = fmul contract double %147, %148\l  %150 = fadd contract double %146, %149\l  %151 = load double, double addrspace(4)* @bh55, align 8, !tbaa !5\l  %152 = load double, double addrspace(1)* %43, align 8, !tbaa !5\l  %153 = fmul contract double %151, %152\l  %154 = fadd contract double %150, %153\l  %155 = fmul contract double %154, %3\l  %156 = fadd contract double %131, %155\l  %157 = getelementptr inbounds double, double addrspace(1)* %0, i64 %42\l  store double %156, double addrspace(1)* %157, align 8, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
