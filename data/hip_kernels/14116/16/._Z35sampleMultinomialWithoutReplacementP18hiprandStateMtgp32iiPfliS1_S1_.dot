digraph "CFG for '_Z35sampleMultinomialWithoutReplacementP18hiprandStateMtgp32iiPfliS1_S1_' function" {
	label="CFG for '_Z35sampleMultinomialWithoutReplacementP18hiprandStateMtgp32iiPfliS1_S1_' function";

	Node0x6269af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = zext i32 %15 to i64\l  %17 = icmp slt i64 %16, %4\l  br i1 %17, label %18, label %47\l|{<s0>T|<s1>F}}"];
	Node0x6269af0:s0 -> Node0x626b6a0;
	Node0x6269af0:s1 -> Node0x626b730;
	Node0x626b6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %20 = zext i32 %19 to i64\l  %21 = zext i32 %9 to i64\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %28 = bitcast i8 addrspace(4)* %27 to i32 addrspace(4)*\l  %29 = load i32, i32 addrspace(4)* %28, align 4, !tbaa !7\l  %30 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 1\l  %31 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 0\l  %32 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 7\l  %33 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 4\l  %34 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 5\l  %35 = icmp eq i32 %22, 0\l  %36 = sext i32 %5 to i64\l  %37 = icmp sgt i32 %5, 0\l  %38 = sext i32 %1 to i64\l  %39 = sext i32 %2 to i64\l  %40 = udiv i32 %29, %26\l  %41 = mul i32 %40, %26\l  %42 = icmp ugt i32 %29, %41\l  %43 = zext i1 %42 to i32\l  %44 = add i32 %40, %43\l  %45 = mul i32 %44, %14\l  %46 = zext i32 %45 to i64\l  br label %48\l}"];
	Node0x626b6a0 -> Node0x626e260;
	Node0x626b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x626e260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%48:\l48:                                               \l  %49 = phi i64 [ %16, %18 ], [ %141, %140 ]\l  %50 = add nuw nsw i64 %49, %20\l  %51 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !16\l  %52 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !22\l  %53 = add i32 %52, %22\l  %54 = and i32 %53, 1023\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 2,\l... i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !23\l  %58 = add i32 %53, 1\l  %59 = and i32 %58, 1023\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 2,\l... i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !23\l  %63 = add i32 %53, %51\l  %64 = and i32 %63, 1023\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 2,\l... i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !23\l  %68 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !24\l  %69 = and i32 %68, %57\l  %70 = xor i32 %69, %62\l  %71 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !25\l  %72 = shl i32 %70, %71\l  %73 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !26\l  %74 = lshr i32 %67, %73\l  %75 = xor i32 %72, %74\l  %76 = xor i32 %75, %70\l  %77 = and i32 %76, 15\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 2, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !23\l  %81 = xor i32 %76, %80\l  %82 = add i32 %53, 351\l  %83 = and i32 %82, 1023\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 2,\l... i64 %84\l  store i32 %81, i32 addrspace(1)* %85, align 4, !tbaa !23\l  %86 = add i32 %63, 1023\l  %87 = and i32 %86, 1023\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 0, i32 2,\l... i64 %88\l  %90 = load i32, i32 addrspace(1)* %89, align 4, !tbaa !23\l  %91 = lshr i32 %90, 16\l  %92 = xor i32 %91, %90\l  %93 = lshr i32 %92, 8\l  %94 = xor i32 %93, %92\l  %95 = and i32 %94, 15\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds %struct.hiprandStateMtgp32,\l... %struct.hiprandStateMtgp32 addrspace(1)* %0, i64 %21, i32 0, i32 3, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !23\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %35, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x626e260:s0 -> Node0x6271660;
	Node0x626e260:s1 -> Node0x62716f0;
	Node0x6271660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%99:\l99:                                               \l  %100 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !22\l  %101 = add i32 %100, %26\l  %102 = and i32 %101, 1023\l  store i32 %102, i32 addrspace(1)* %31, align 4, !tbaa !22\l  br label %103\l}"];
	Node0x6271660 -> Node0x62716f0;
	Node0x62716f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%103:\l103:                                              \l  %104 = xor i32 %98, %81\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %105 = uitofp i32 %104 to float\l  %106 = fmul contract float %105, 0x3DF0000000000000\l  %107 = fadd contract float %106, 0x3DF0000000000000\l  %108 = icmp slt i64 %50, %4\l  %109 = select i1 %35, i1 %108, i1 false\l  br i1 %109, label %110, label %140\l|{<s0>T|<s1>F}}"];
	Node0x62716f0:s0 -> Node0x6272fb0;
	Node0x62716f0:s1 -> Node0x626e3e0;
	Node0x6272fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%110:\l110:                                              \l  %111 = mul nsw i64 %50, %36\l  %112 = getelementptr inbounds float, float addrspace(1)* %7, i64 %111\l  br i1 %37, label %113, label %128\l|{<s0>T|<s1>F}}"];
	Node0x6272fb0:s0 -> Node0x6273220;
	Node0x6272fb0:s1 -> Node0x6273270;
	Node0x6273220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%113:\l113:                                              \l  %114 = phi i32 [ %126, %113 ], [ %5, %110 ]\l  %115 = phi i32 [ %125, %113 ], [ 0, %110 ]\l  %116 = phi i32 [ %124, %113 ], [ %5, %110 ]\l  %117 = lshr i32 %114, 1\l  %118 = add nsw i32 %117, %115\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %112, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !27\l  %122 = fcmp contract olt float %121, %107\l  %123 = add nsw i32 %118, 1\l  %124 = select i1 %122, i32 %116, i32 %118\l  %125 = select i1 %122, i32 %123, i32 %115\l  %126 = sub nsw i32 %124, %125\l  %127 = icmp sgt i32 %126, 0\l  br i1 %127, label %113, label %128, !llvm.loop !29\l|{<s0>T|<s1>F}}"];
	Node0x6273220:s0 -> Node0x6273220;
	Node0x6273220:s1 -> Node0x6273270;
	Node0x6273270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%128:\l128:                                              \l  %129 = phi i32 [ 0, %110 ], [ %125, %113 ]\l  %130 = icmp eq i32 %129, %5\l  %131 = select i1 %130, i32 0, i32 %129\l  %132 = sitofp i32 %131 to float\l  %133 = fadd contract float %132, 1.000000e+00\l  %134 = mul nsw i64 %50, %38\l  %135 = add nsw i64 %134, %39\l  %136 = getelementptr inbounds float, float addrspace(1)* %3, i64 %135\l  store float %133, float addrspace(1)* %136, align 4, !tbaa !27\l  %137 = sext i32 %131 to i64\l  %138 = add nsw i64 %111, %137\l  %139 = getelementptr inbounds float, float addrspace(1)* %6, i64 %138\l  store float 0.000000e+00, float addrspace(1)* %139, align 4, !tbaa !27\l  br label %140\l}"];
	Node0x6273270 -> Node0x626e3e0;
	Node0x626e3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%140:\l140:                                              \l  %141 = add nuw nsw i64 %49, %46\l  %142 = icmp slt i64 %141, %4\l  br i1 %142, label %48, label %47, !llvm.loop !31\l|{<s0>T|<s1>F}}"];
	Node0x626e3e0:s0 -> Node0x626e260;
	Node0x626e3e0:s1 -> Node0x626b730;
}
