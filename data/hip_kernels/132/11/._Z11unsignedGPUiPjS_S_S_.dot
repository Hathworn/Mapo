digraph "CFG for '_Z11unsignedGPUiPjS_S_S_' function" {
	label="CFG for '_Z11unsignedGPUiPjS_S_S_' function";

	Node0x4576c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = icmp sgt i32 %0, 0\l  br i1 %6, label %7, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4576c80:s0 -> Node0x4576c20;
	Node0x4576c80:s1 -> Node0x45773b0;
	Node0x4576c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l7:                                                \l  %8 = and i32 %0, 3\l  %9 = icmp ult i32 %0, 4\l  br i1 %9, label %12, label %10\l|{<s0>T|<s1>F}}"];
	Node0x4576c20:s0 -> Node0x4575ee0;
	Node0x4576c20:s1 -> Node0x4577700;
	Node0x4577700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%10:\l10:                                               \l  %11 = and i32 %0, -4\l  br label %34\l}"];
	Node0x4577700 -> Node0x4577900;
	Node0x4575ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%12:\l12:                                               \l  %13 = phi i32 [ 0, %7 ], [ %88, %34 ]\l  %14 = icmp eq i32 %8, 0\l  br i1 %14, label %33, label %15\l|{<s0>T|<s1>F}}"];
	Node0x4575ee0:s0 -> Node0x45773b0;
	Node0x4575ee0:s1 -> Node0x4577b30;
	Node0x4577b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l15:                                               \l  %16 = phi i32 [ %30, %15 ], [ %13, %12 ]\l  %17 = phi i32 [ %31, %15 ], [ 0, %12 ]\l  %18 = zext i32 %16 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !4\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %18\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !4\l  %23 = freeze i32 %20\l  %24 = freeze i32 %22\l  %25 = udiv i32 %23, %24\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %18\l  store i32 %25, i32 addrspace(1)* %26, align 4, !tbaa !4\l  %27 = mul i32 %25, %24\l  %28 = sub i32 %23, %27\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %18\l  store i32 %28, i32 addrspace(1)* %29, align 4, !tbaa !4\l  %30 = add nuw nsw i32 %16, 1\l  %31 = add i32 %17, 1\l  %32 = icmp eq i32 %31, %8\l  br i1 %32, label %33, label %15, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x4577b30:s0 -> Node0x45773b0;
	Node0x4577b30:s1 -> Node0x4577b30;
	Node0x45773b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%33:\l33:                                               \l  ret void\l}"];
	Node0x4577900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %10 ], [ %88, %34 ]\l  %36 = phi i32 [ 0, %10 ], [ %89, %34 ]\l  %37 = zext i32 %35 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !4\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !4\l  %42 = freeze i32 %39\l  %43 = freeze i32 %41\l  %44 = udiv i32 %42, %43\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %37\l  store i32 %44, i32 addrspace(1)* %45, align 4, !tbaa !4\l  %46 = mul i32 %44, %43\l  %47 = sub i32 %42, %46\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %37\l  store i32 %47, i32 addrspace(1)* %48, align 4, !tbaa !4\l  %49 = or i32 %35, 1\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !4\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %50\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !4\l  %55 = freeze i32 %52\l  %56 = freeze i32 %54\l  %57 = udiv i32 %55, %56\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %50\l  store i32 %57, i32 addrspace(1)* %58, align 4, !tbaa !4\l  %59 = mul i32 %57, %56\l  %60 = sub i32 %55, %59\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %50\l  store i32 %60, i32 addrspace(1)* %61, align 4, !tbaa !4\l  %62 = or i32 %35, 2\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !4\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %63\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !4\l  %68 = freeze i32 %65\l  %69 = freeze i32 %67\l  %70 = udiv i32 %68, %69\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %63\l  store i32 %70, i32 addrspace(1)* %71, align 4, !tbaa !4\l  %72 = mul i32 %70, %69\l  %73 = sub i32 %68, %72\l  %74 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %63\l  store i32 %73, i32 addrspace(1)* %74, align 4, !tbaa !4\l  %75 = or i32 %35, 3\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %76\l  %78 = load i32, i32 addrspace(1)* %77, align 4, !tbaa !4\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %76\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !4\l  %81 = freeze i32 %78\l  %82 = freeze i32 %80\l  %83 = udiv i32 %81, %82\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %76\l  store i32 %83, i32 addrspace(1)* %84, align 4, !tbaa !4\l  %85 = mul i32 %83, %82\l  %86 = sub i32 %81, %85\l  %87 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %76\l  store i32 %86, i32 addrspace(1)* %87, align 4, !tbaa !4\l  %88 = add nuw nsw i32 %35, 4\l  %89 = add i32 %36, 4\l  %90 = icmp eq i32 %89, %11\l  br i1 %90, label %12, label %34, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4577900:s0 -> Node0x4575ee0;
	Node0x4577900:s1 -> Node0x4577900;
}
