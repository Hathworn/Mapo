digraph "CFG for '_Z22conv_layer_forward_gpuPfS_S_iiiii' function" {
	label="CFG for '_Z22conv_layer_forward_gpuPfS_S_iiiii' function";

	Node0x4e09b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = mul i32 %9, %3\l  %14 = icmp slt i32 %11, %6\l  %15 = icmp slt i32 %12, %6\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4e09b00:s0 -> Node0x4e09b90;
	Node0x4e09b00:s1 -> Node0x4e0bea0;
	Node0x4e09b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%17:\l17:                                               \l  %18 = mul i32 %10, %6\l  %19 = add i32 %18, %11\l  %20 = mul i32 %19, %6\l  %21 = add i32 %20, %12\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %25 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %11, i32 %12\l  store float %24, float addrspace(3)* %25, align 4, !tbaa !5\l  br label %26\l}"];
	Node0x4e09b90 -> Node0x4e0bea0;
	Node0x4e0bea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp slt i32 %11, %5\l  %28 = icmp slt i32 %12, %5\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %155\l|{<s0>T|<s1>F}}"];
	Node0x4e0bea0:s0 -> Node0x4e0d370;
	Node0x4e0bea0:s1 -> Node0x4e0d3c0;
	Node0x4e0d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%30:\l30:                                               \l  %31 = icmp sgt i32 %6, 0\l  br i1 %31, label %32, label %145\l|{<s0>T|<s1>F}}"];
	Node0x4e0d370:s0 -> Node0x4e0d590;
	Node0x4e0d370:s1 -> Node0x4e0d5e0;
	Node0x4e0d590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = add i32 %13, %11\l  %34 = and i32 %6, 7\l  %35 = icmp ult i32 %6, 8\l  %36 = and i32 %6, -8\l  %37 = icmp eq i32 %34, 0\l  br label %38\l}"];
	Node0x4e0d590 -> Node0x4e0db70;
	Node0x4e0db70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %32 ], [ %143, %141 ]\l  %40 = phi float [ 0.000000e+00, %32 ], [ %142, %141 ]\l  %41 = add i32 %33, %39\l  %42 = mul i32 %41, %4\l  %43 = add i32 %42, %12\l  br i1 %35, label %122, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4e0db70:s0 -> Node0x4e0eac0;
	Node0x4e0db70:s1 -> Node0x4e0eb50;
	Node0x4e0eb50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%44:\l44:                                               \l  %45 = phi float [ %118, %44 ], [ %40, %38 ]\l  %46 = phi i32 [ %119, %44 ], [ 0, %38 ]\l  %47 = phi i32 [ %120, %44 ], [ 0, %38 ]\l  %48 = add i32 %43, %46\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %52 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %46\l  %53 = load float, float addrspace(3)* %52, align 4, !tbaa !5\l  %54 = fmul contract float %51, %53\l  %55 = fadd contract float %45, %54\l  %56 = or i32 %46, 1\l  %57 = add i32 %43, %56\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %61 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %56\l  %62 = load float, float addrspace(3)* %61, align 4, !tbaa !5\l  %63 = fmul contract float %60, %62\l  %64 = fadd contract float %55, %63\l  %65 = or i32 %46, 2\l  %66 = add i32 %43, %65\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %65\l  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !5\l  %72 = fmul contract float %69, %71\l  %73 = fadd contract float %64, %72\l  %74 = or i32 %46, 3\l  %75 = add i32 %43, %74\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %79 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %74\l  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !5\l  %81 = fmul contract float %78, %80\l  %82 = fadd contract float %73, %81\l  %83 = or i32 %46, 4\l  %84 = add i32 %43, %83\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %88 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %83\l  %89 = load float, float addrspace(3)* %88, align 4, !tbaa !5\l  %90 = fmul contract float %87, %89\l  %91 = fadd contract float %82, %90\l  %92 = or i32 %46, 5\l  %93 = add i32 %43, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %0, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %97 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %92\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !5\l  %99 = fmul contract float %96, %98\l  %100 = fadd contract float %91, %99\l  %101 = or i32 %46, 6\l  %102 = add i32 %43, %101\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %106 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %101\l  %107 = load float, float addrspace(3)* %106, align 4, !tbaa !5\l  %108 = fmul contract float %105, %107\l  %109 = fadd contract float %100, %108\l  %110 = or i32 %46, 7\l  %111 = add i32 %43, %110\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %0, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %115 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %110\l  %116 = load float, float addrspace(3)* %115, align 4, !tbaa !5\l  %117 = fmul contract float %114, %116\l  %118 = fadd contract float %109, %117\l  %119 = add nuw nsw i32 %46, 8\l  %120 = add i32 %47, 8\l  %121 = icmp eq i32 %120, %36\l  br i1 %121, label %122, label %44, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x4e0eb50:s0 -> Node0x4e0eac0;
	Node0x4e0eb50:s1 -> Node0x4e0eb50;
	Node0x4e0eac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%122:\l122:                                              \l  %123 = phi float [ undef, %38 ], [ %118, %44 ]\l  %124 = phi float [ %40, %38 ], [ %118, %44 ]\l  %125 = phi i32 [ 0, %38 ], [ %119, %44 ]\l  br i1 %37, label %141, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4e0eac0:s0 -> Node0x4e0dc60;
	Node0x4e0eac0:s1 -> Node0x4e12830;
	Node0x4e12830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi float [ %137, %126 ], [ %124, %122 ]\l  %128 = phi i32 [ %138, %126 ], [ %125, %122 ]\l  %129 = phi i32 [ %139, %126 ], [ 0, %122 ]\l  %130 = add i32 %43, %128\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %134 = getelementptr inbounds [5 x [5 x float]], [5 x [5 x float]]\l... addrspace(3)* @_ZZ22conv_layer_forward_gpuPfS_S_iiiiiE8cached_w, i32 0, i32\l... %39, i32 %128\l  %135 = load float, float addrspace(3)* %134, align 4, !tbaa !5\l  %136 = fmul contract float %133, %135\l  %137 = fadd contract float %127, %136\l  %138 = add nuw nsw i32 %128, 1\l  %139 = add i32 %129, 1\l  %140 = icmp eq i32 %139, %34\l  br i1 %140, label %141, label %126, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4e12830:s0 -> Node0x4e0dc60;
	Node0x4e12830:s1 -> Node0x4e12830;
	Node0x4e0dc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%141:\l141:                                              \l  %142 = phi float [ %123, %122 ], [ %137, %126 ]\l  %143 = add nuw nsw i32 %39, 1\l  %144 = icmp eq i32 %143, %6\l  br i1 %144, label %145, label %38, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4e0dc60:s0 -> Node0x4e0d5e0;
	Node0x4e0dc60:s1 -> Node0x4e0db70;
	Node0x4e0d5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%145:\l145:                                              \l  %146 = phi float [ 0.000000e+00, %30 ], [ %142, %141 ]\l  %147 = mul i32 %9, %7\l  %148 = add i32 %147, %10\l  %149 = mul i32 %148, %5\l  %150 = add i32 %149, %11\l  %151 = mul i32 %150, %5\l  %152 = add i32 %151, %12\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %2, i64 %153\l  store float %146, float addrspace(1)* %154, align 4, !tbaa !5\l  br label %155\l}"];
	Node0x4e0d5e0 -> Node0x4e0d3c0;
	Node0x4e0d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%155:\l155:                                              \l  ret void\l}"];
}
