digraph "CFG for '_Z32AssembleArrayOfAbsorptionFactorsiiiPKfS0_PKiS0_Pf' function" {
	label="CFG for '_Z32AssembleArrayOfAbsorptionFactorsiiiPKfS0_PKiS0_Pf' function";

	Node0x5d81da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %11, %15\l  %17 = add i32 %16, %9\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = mul nsw i32 %25, %1\l  %27 = add nsw i32 %26, %17\l  %28 = icmp slt i32 %17, %1\l  %29 = icmp slt i32 %25, %0\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %221\l|{<s0>T|<s1>F}}"];
	Node0x5d81da0:s0 -> Node0x5d85920;
	Node0x5d81da0:s1 -> Node0x5d859b0;
	Node0x5d85920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %17, %2\l  %33 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %34 = add nsw i32 %33, -1\l  %35 = mul nsw i32 %25, 7\l  %36 = add nsw i32 %35, 6\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %6, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %40 = fpext float %39 to double\l  %41 = fmul contract double %40, 1.000000e+22\l  %42 = fptrunc double %41 to float\l  %43 = sext i32 %34 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %46 = sext i32 %32 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %49 = fmul contract float %45, %48\l  %50 = icmp sgt i32 %2, 1\l  br i1 %50, label %51, label %201\l|{<s0>T|<s1>F}}"];
	Node0x5d85920:s0 -> Node0x5d87a50;
	Node0x5d85920:s1 -> Node0x5d87ae0;
	Node0x5d87a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%51:\l51:                                               \l  %52 = add i32 %2, -1\l  %53 = add i32 %2, -2\l  %54 = and i32 %52, 7\l  %55 = icmp ult i32 %53, 7\l  br i1 %55, label %176, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5d87a50:s0 -> Node0x5d87e90;
	Node0x5d87a50:s1 -> Node0x5d87ee0;
	Node0x5d87ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%56:\l56:                                               \l  %57 = and i32 %52, -8\l  br label %58\l}"];
	Node0x5d87ee0 -> Node0x5d880e0;
	Node0x5d880e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 1, %56 ], [ %173, %58 ]\l  %60 = phi float [ %49, %56 ], [ %172, %58 ]\l  %61 = phi i32 [ 0, %56 ], [ %174, %58 ]\l  %62 = add nsw i32 %59, %32\l  %63 = zext i32 %59 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %66 = add nsw i32 %65, -1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %4, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %70 = sext i32 %62 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %3, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %73 = fmul contract float %69, %72\l  %74 = fadd contract float %60, %73\l  %75 = add nuw nsw i32 %59, 1\l  %76 = add nsw i32 %75, %32\l  %77 = zext i32 %75 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %80 = add nsw i32 %79, -1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %4, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %84 = sext i32 %76 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %3, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %87 = fmul contract float %83, %86\l  %88 = fadd contract float %74, %87\l  %89 = add nuw nsw i32 %59, 2\l  %90 = add nsw i32 %89, %32\l  %91 = zext i32 %89 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %94 = add nsw i32 %93, -1\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %98 = sext i32 %90 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %3, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %101 = fmul contract float %97, %100\l  %102 = fadd contract float %88, %101\l  %103 = add nuw nsw i32 %59, 3\l  %104 = add nsw i32 %103, %32\l  %105 = zext i32 %103 to i64\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %105\l  %107 = load i32, i32 addrspace(1)* %106, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %108 = add nsw i32 %107, -1\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %4, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %112 = sext i32 %104 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %3, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %115 = fmul contract float %111, %114\l  %116 = fadd contract float %102, %115\l  %117 = add nuw nsw i32 %59, 4\l  %118 = add nsw i32 %117, %32\l  %119 = zext i32 %117 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %122 = add nsw i32 %121, -1\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %4, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %126 = sext i32 %118 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %3, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %129 = fmul contract float %125, %128\l  %130 = fadd contract float %116, %129\l  %131 = add nuw nsw i32 %59, 5\l  %132 = add nsw i32 %131, %32\l  %133 = zext i32 %131 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %133\l  %135 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %136 = add nsw i32 %135, -1\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds float, float addrspace(1)* %4, i64 %137\l  %139 = load float, float addrspace(1)* %138, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %140 = sext i32 %132 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %143 = fmul contract float %139, %142\l  %144 = fadd contract float %130, %143\l  %145 = add nuw nsw i32 %59, 6\l  %146 = add nsw i32 %145, %32\l  %147 = zext i32 %145 to i64\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %147\l  %149 = load i32, i32 addrspace(1)* %148, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %150 = add nsw i32 %149, -1\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %4, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %154 = sext i32 %146 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %3, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %157 = fmul contract float %153, %156\l  %158 = fadd contract float %144, %157\l  %159 = add nuw nsw i32 %59, 7\l  %160 = add nsw i32 %159, %32\l  %161 = zext i32 %159 to i64\l  %162 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %161\l  %163 = load i32, i32 addrspace(1)* %162, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %164 = add nsw i32 %163, -1\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %4, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %168 = sext i32 %160 to i64\l  %169 = getelementptr inbounds float, float addrspace(1)* %3, i64 %168\l  %170 = load float, float addrspace(1)* %169, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %171 = fmul contract float %167, %170\l  %172 = fadd contract float %158, %171\l  %173 = add nuw nsw i32 %59, 8\l  %174 = add i32 %61, 8\l  %175 = icmp eq i32 %174, %57\l  br i1 %175, label %176, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5d880e0:s0 -> Node0x5d87e90;
	Node0x5d880e0:s1 -> Node0x5d880e0;
	Node0x5d87e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%176:\l176:                                              \l  %177 = phi float [ undef, %51 ], [ %172, %58 ]\l  %178 = phi i32 [ 1, %51 ], [ %173, %58 ]\l  %179 = phi float [ %49, %51 ], [ %172, %58 ]\l  %180 = icmp eq i32 %54, 0\l  br i1 %180, label %201, label %181\l|{<s0>T|<s1>F}}"];
	Node0x5d87e90:s0 -> Node0x5d87ae0;
	Node0x5d87e90:s1 -> Node0x5d8db40;
	Node0x5d8db40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%181:\l181:                                              \l  %182 = phi i32 [ %198, %181 ], [ %178, %176 ]\l  %183 = phi float [ %197, %181 ], [ %179, %176 ]\l  %184 = phi i32 [ %199, %181 ], [ 0, %176 ]\l  %185 = add nsw i32 %182, %32\l  %186 = zext i32 %182 to i64\l  %187 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %186\l  %188 = load i32, i32 addrspace(1)* %187, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %189 = add nsw i32 %188, -1\l  %190 = sext i32 %189 to i64\l  %191 = getelementptr inbounds float, float addrspace(1)* %4, i64 %190\l  %192 = load float, float addrspace(1)* %191, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %193 = sext i32 %185 to i64\l  %194 = getelementptr inbounds float, float addrspace(1)* %3, i64 %193\l  %195 = load float, float addrspace(1)* %194, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %196 = fmul contract float %192, %195\l  %197 = fadd contract float %183, %196\l  %198 = add nuw nsw i32 %182, 1\l  %199 = add i32 %184, 1\l  %200 = icmp eq i32 %199, %54\l  br i1 %200, label %201, label %181, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5d8db40:s0 -> Node0x5d87ae0;
	Node0x5d8db40:s1 -> Node0x5d8db40;
	Node0x5d87ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%201:\l201:                                              \l  %202 = phi float [ %49, %31 ], [ %177, %176 ], [ %197, %181 ]\l  %203 = fneg contract float %42\l  %204 = fmul contract float %202, %203\l  %205 = fmul float %204, 0x3FF7154760000000\l  %206 = tail call float @llvm.rint.f32(float %205)\l  %207 = fcmp ogt float %204, 0x40562E4300000000\l  %208 = fcmp olt float %204, 0xC059D1DA00000000\l  %209 = fneg float %205\l  %210 = tail call float @llvm.fma.f32(float %204, float 0x3FF7154760000000,\l... float %209)\l  %211 = tail call float @llvm.fma.f32(float %204, float 0x3E54AE0BE0000000,\l... float %210)\l  %212 = fsub float %205, %206\l  %213 = fadd float %211, %212\l  %214 = tail call float @llvm.exp2.f32(float %213)\l  %215 = fptosi float %206 to i32\l  %216 = tail call float @llvm.amdgcn.ldexp.f32(float %214, i32 %215)\l  %217 = select i1 %208, float 0.000000e+00, float %216\l  %218 = select i1 %207, float 0x7FF0000000000000, float %217\l  %219 = sext i32 %27 to i64\l  %220 = getelementptr inbounds float, float addrspace(1)* %7, i64 %219\l  store float %218, float addrspace(1)* %220, align 4, !tbaa !11\l  br label %221\l}"];
	Node0x5d87ae0 -> Node0x5d859b0;
	Node0x5d859b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%221:\l221:                                              \l  ret void\l}"];
}
