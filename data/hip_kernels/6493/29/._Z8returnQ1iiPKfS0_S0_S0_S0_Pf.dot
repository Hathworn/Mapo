digraph "CFG for '_Z8returnQ1iiPKfS0_S0_S0_S0_Pf' function" {
	label="CFG for '_Z8returnQ1iiPKfS0_S0_S0_S0_Pf' function";

	Node0x5272220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %14\l  %17 = add i32 %16, %9\l  %18 = icmp slt i32 %17, %1\l  br i1 %18, label %19, label %252\l|{<s0>T|<s1>F}}"];
	Node0x5272220:s0 -> Node0x5274120;
	Node0x5272220:s1 -> Node0x52741b0;
	Node0x5274120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%19:\l19:                                               \l  %20 = sext i32 %17 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %2, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %23 = getelementptr inbounds float, float addrspace(1)* %4, i64 %20\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %25 = fadd contract float %22, %24\l  %26 = getelementptr inbounds float, float addrspace(1)* %5, i64 %20\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %28 = fsub contract float %25, %27\l  %29 = getelementptr inbounds float, float addrspace(1)* %3, i64 %20\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %31 = fsub contract float %28, %30\l  %32 = fpext float %31 to double\l  %33 = fmul contract double %32, -5.000000e-01\l  %34 = fcmp contract olt double %33, -1.000000e+01\l  br i1 %34, label %249, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5274120:s0 -> Node0x5276500;
	Node0x5274120:s1 -> Node0x5276590;
	Node0x5276590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%35:\l35:                                               \l  %36 = fcmp contract ogt double %33, 1.000000e+01\l  br i1 %36, label %249, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5276590:s0 -> Node0x5276500;
	Node0x5276590:s1 -> Node0x5276760;
	Node0x5276760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%37:\l37:                                               \l  %38 = fptrunc double %33 to float\l  %39 = fmul float %38, 0x3FF7154760000000\l  %40 = tail call float @llvm.rint.f32(float %39)\l  %41 = fcmp ogt float %38, 0x40562E4300000000\l  %42 = fcmp olt float %38, 0xC059D1DA00000000\l  %43 = fneg float %39\l  %44 = tail call float @llvm.fma.f32(float %38, float 0x3FF7154760000000,\l... float %43)\l  %45 = tail call float @llvm.fma.f32(float %38, float 0x3E54AE0BE0000000,\l... float %44)\l  %46 = fsub float %39, %40\l  %47 = fadd float %45, %46\l  %48 = tail call float @llvm.exp2.f32(float %47)\l  %49 = fptosi float %40 to i32\l  %50 = tail call float @llvm.amdgcn.ldexp.f32(float %48, i32 %49)\l  %51 = select i1 %42, float 0.000000e+00, float %50\l  %52 = select i1 %41, float 0x7FF0000000000000, float %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %6, i64 %20\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = add nsw i32 %0, -1\l  %56 = sitofp i32 %55 to float\l  %57 = tail call float @llvm.fabs.f32(float %54)\l  %58 = tail call float @llvm.amdgcn.frexp.mant.f32(float %57)\l  %59 = fcmp olt float %58, 0x3FE5555560000000\l  %60 = zext i1 %59 to i32\l  %61 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 %60)\l  %62 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %57)\l  %63 = sub nsw i32 %62, %60\l  %64 = fadd float %61, -1.000000e+00\l  %65 = fadd float %61, 1.000000e+00\l  %66 = fadd float %65, -1.000000e+00\l  %67 = fsub float %61, %66\l  %68 = tail call float @llvm.amdgcn.rcp.f32(float %65)\l  %69 = fmul float %64, %68\l  %70 = fmul float %65, %69\l  %71 = fneg float %70\l  %72 = tail call float @llvm.fma.f32(float %69, float %65, float %71)\l  %73 = tail call float @llvm.fma.f32(float %69, float %67, float %72)\l  %74 = fadd float %70, %73\l  %75 = fsub float %74, %70\l  %76 = fsub float %73, %75\l  %77 = fsub float %64, %74\l  %78 = fsub float %64, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %79, %76\l  %81 = fadd float %77, %80\l  %82 = fmul float %68, %81\l  %83 = fadd float %69, %82\l  %84 = fsub float %83, %69\l  %85 = fsub float %82, %84\l  %86 = fmul float %83, %83\l  %87 = fneg float %86\l  %88 = tail call float @llvm.fma.f32(float %83, float %83, float %87)\l  %89 = fmul float %85, 2.000000e+00\l  %90 = tail call float @llvm.fma.f32(float %83, float %89, float %88)\l  %91 = fadd float %86, %90\l  %92 = fsub float %91, %86\l  %93 = fsub float %90, %92\l  %94 = tail call float @llvm.fmuladd.f32(float %91, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %95 = tail call float @llvm.fmuladd.f32(float %91, float %94, float\l... 0x3FD999BDE0000000)\l  %96 = sitofp i32 %63 to float\l  %97 = fmul float %96, 0x3FE62E4300000000\l  %98 = fneg float %97\l  %99 = tail call float @llvm.fma.f32(float %96, float 0x3FE62E4300000000,\l... float %98)\l  %100 = tail call float @llvm.fma.f32(float %96, float 0xBE205C6100000000,\l... float %99)\l  %101 = fadd float %97, %100\l  %102 = fsub float %101, %97\l  %103 = fsub float %100, %102\l  %104 = tail call float @llvm.amdgcn.ldexp.f32(float %83, i32 1)\l  %105 = fmul float %83, %91\l  %106 = fneg float %105\l  %107 = tail call float @llvm.fma.f32(float %91, float %83, float %106)\l  %108 = tail call float @llvm.fma.f32(float %91, float %85, float %107)\l  %109 = tail call float @llvm.fma.f32(float %93, float %83, float %108)\l  %110 = fadd float %105, %109\l  %111 = fsub float %110, %105\l  %112 = fsub float %109, %111\l  %113 = fmul float %91, %95\l  %114 = fneg float %113\l  %115 = tail call float @llvm.fma.f32(float %91, float %95, float %114)\l  %116 = tail call float @llvm.fma.f32(float %93, float %95, float %115)\l  %117 = fadd float %113, %116\l  %118 = fsub float %117, %113\l  %119 = fsub float %116, %118\l  %120 = fadd float %117, 0x3FE5555540000000\l  %121 = fadd float %120, 0xBFE5555540000000\l  %122 = fsub float %117, %121\l  %123 = fadd float %119, 0x3E2E720200000000\l  %124 = fadd float %123, %122\l  %125 = fadd float %120, %124\l  %126 = fsub float %125, %120\l  %127 = fsub float %124, %126\l  %128 = fmul float %110, %125\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %110, float %125, float %129)\l  %131 = tail call float @llvm.fma.f32(float %110, float %127, float %130)\l  %132 = tail call float @llvm.fma.f32(float %112, float %125, float %131)\l  %133 = tail call float @llvm.amdgcn.ldexp.f32(float %85, i32 1)\l  %134 = fadd float %128, %132\l  %135 = fsub float %134, %128\l  %136 = fsub float %132, %135\l  %137 = fadd float %104, %134\l  %138 = fsub float %137, %104\l  %139 = fsub float %134, %138\l  %140 = fadd float %133, %136\l  %141 = fadd float %140, %139\l  %142 = fadd float %137, %141\l  %143 = fsub float %142, %137\l  %144 = fsub float %141, %143\l  %145 = fadd float %101, %142\l  %146 = fsub float %145, %101\l  %147 = fsub float %145, %146\l  %148 = fsub float %101, %147\l  %149 = fsub float %142, %146\l  %150 = fadd float %149, %148\l  %151 = fadd float %103, %144\l  %152 = fsub float %151, %103\l  %153 = fsub float %151, %152\l  %154 = fsub float %103, %153\l  %155 = fsub float %144, %152\l  %156 = fadd float %155, %154\l  %157 = fadd float %151, %150\l  %158 = fadd float %145, %157\l  %159 = fsub float %158, %145\l  %160 = fsub float %157, %159\l  %161 = fadd float %156, %160\l  %162 = fadd float %158, %161\l  %163 = fsub float %162, %158\l  %164 = fsub float %161, %163\l  %165 = fmul float %162, %56\l  %166 = fneg float %165\l  %167 = tail call float @llvm.fma.f32(float %56, float %162, float %166)\l  %168 = tail call float @llvm.fma.f32(float %56, float %164, float %167)\l  %169 = fadd float %165, %168\l  %170 = fsub float %169, %165\l  %171 = fsub float %168, %170\l  %172 = tail call float @llvm.fabs.f32(float %165) #3\l  %173 = fcmp oeq float %172, 0x7FF0000000000000\l  %174 = select i1 %173, float %165, float %169\l  %175 = tail call float @llvm.fabs.f32(float %174) #3\l  %176 = fcmp oeq float %175, 0x7FF0000000000000\l  %177 = select i1 %176, float 0.000000e+00, float %171\l  %178 = fcmp oeq float %174, 0x40562E4300000000\l  %179 = select i1 %178, float 0x3EE0000000000000, float 0.000000e+00\l  %180 = fsub float %174, %179\l  %181 = fadd float %179, %177\l  %182 = fmul float %180, 0x3FF7154760000000\l  %183 = tail call float @llvm.rint.f32(float %182)\l  %184 = fcmp ogt float %180, 0x40562E4300000000\l  %185 = fcmp olt float %180, 0xC059D1DA00000000\l  %186 = fneg float %182\l  %187 = tail call float @llvm.fma.f32(float %180, float 0x3FF7154760000000,\l... float %186)\l  %188 = tail call float @llvm.fma.f32(float %180, float 0x3E54AE0BE0000000,\l... float %187)\l  %189 = fsub float %182, %183\l  %190 = fadd float %188, %189\l  %191 = tail call float @llvm.exp2.f32(float %190)\l  %192 = fptosi float %183 to i32\l  %193 = tail call float @llvm.amdgcn.ldexp.f32(float %191, i32 %192)\l  %194 = select i1 %185, float 0.000000e+00, float %193\l  %195 = select i1 %184, float 0x7FF0000000000000, float %194\l  %196 = tail call float @llvm.fma.f32(float %195, float %181, float %195)\l  %197 = tail call float @llvm.fabs.f32(float %195) #3\l  %198 = fcmp oeq float %197, 0x7FF0000000000000\l  %199 = select i1 %198, float %195, float %196\l  %200 = tail call float @llvm.fabs.f32(float %56)\l  %201 = tail call float @llvm.trunc.f32(float %200)\l  %202 = fcmp oeq float %200, %201\l  %203 = zext i1 %202 to i32\l  %204 = fmul float %201, 5.000000e-01\l  %205 = tail call float @llvm.amdgcn.fract.f32(float %204)\l  %206 = tail call i1 @llvm.amdgcn.class.f32(float %204, i32 516)\l  %207 = select i1 %206, float 0.000000e+00, float %205\l  %208 = fcmp oeq float %207, 0.000000e+00\l  %209 = and i1 %202, %208\l  %210 = zext i1 %209 to i32\l  %211 = add nuw nsw i32 %210, %203\l  %212 = icmp eq i32 %211, 1\l  %213 = fcmp olt float %54, 0.000000e+00\l  %214 = and i1 %212, %213\l  %215 = select i1 %214, float -0.000000e+00, float 0.000000e+00\l  %216 = tail call float @llvm.copysign.f32(float %199, float %215)\l  %217 = fcmp uge float %54, 0.000000e+00\l  %218 = icmp ne i32 %211, 0\l  %219 = select i1 %217, i1 true, i1 %218\l  %220 = select i1 %219, float %216, float 0x7FF8000000000000\l  %221 = fcmp oeq float %200, 0x7FF0000000000000\l  br i1 %221, label %222, label %231\l|{<s0>T|<s1>F}}"];
	Node0x5276760:s0 -> Node0x5280360;
	Node0x5276760:s1 -> Node0x52803f0;
	Node0x5280360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%222:\l222:                                              \l  %223 = fcmp oeq float %57, 1.000000e+00\l  %224 = fadd float %57, -1.000000e+00\l  %225 = bitcast float %56 to i32\l  %226 = bitcast float %224 to i32\l  %227 = xor i32 %226, %225\l  %228 = icmp sgt i32 %227, -1\l  %229 = select i1 %228, float 0x7FF0000000000000, float 0.000000e+00\l  %230 = select i1 %223, float %57, float %229\l  br label %231\l}"];
	Node0x5280360 -> Node0x52803f0;
	Node0x52803f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%231:\l231:                                              \l  %232 = phi float [ %220, %37 ], [ %230, %222 ]\l  %233 = fcmp oeq float %57, 0x7FF0000000000000\l  %234 = fcmp oeq float %54, 0.000000e+00\l  %235 = or i1 %234, %233\l  %236 = icmp slt i32 %0, 1\l  %237 = xor i1 %236, %234\l  %238 = select i1 %237, float 0.000000e+00, float 0x7FF0000000000000\l  %239 = select i1 %212, float %54, float 0.000000e+00\l  %240 = tail call float @llvm.copysign.f32(float %238, float %239)\l  %241 = select i1 %235, float %240, float %232\l  %242 = fcmp uno float %54, 0.000000e+00\l  %243 = select i1 %242, float 0x7FF8000000000000, float %241\l  %244 = fcmp oeq float %54, 1.000000e+00\l  %245 = icmp eq i32 %55, 0\l  %246 = or i1 %245, %244\l  %247 = select i1 %246, float 1.000000e+00, float %243\l  %248 = fmul contract float %52, %247\l  br label %249\l}"];
	Node0x52803f0 -> Node0x5276500;
	Node0x5276500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%249:\l249:                                              \l  %250 = phi float [ %248, %231 ], [ 0.000000e+00, %19 ], [ 1.000000e+10, %35 ]\l  %251 = getelementptr inbounds float, float addrspace(1)* %7, i64 %20\l  store float %250, float addrspace(1)* %251, align 4, !tbaa !7\l  br label %252\l}"];
	Node0x5276500 -> Node0x52741b0;
	Node0x52741b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%252:\l252:                                              \l  ret void\l}"];
}
