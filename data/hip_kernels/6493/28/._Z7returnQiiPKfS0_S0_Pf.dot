digraph "CFG for '_Z7returnQiiPKfS0_S0_Pf' function" {
	label="CFG for '_Z7returnQiiPKfS0_S0_Pf' function";

	Node0x617ed80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = icmp slt i32 %15, %1\l  br i1 %16, label %17, label %236\l|{<s0>T|<s1>F}}"];
	Node0x617ed80:s0 -> Node0x617fd10;
	Node0x617ed80:s1 -> Node0x6180d30;
	Node0x617fd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = getelementptr inbounds float, float addrspace(1)* %3, i64 %18\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %23 = fsub contract float %20, %22\l  %24 = fmul contract float %23, -5.000000e-01\l  %25 = fmul float %24, 0x3FF7154760000000\l  %26 = tail call float @llvm.rint.f32(float %25)\l  %27 = fcmp ogt float %24, 0x40562E4300000000\l  %28 = fcmp olt float %24, 0xC059D1DA00000000\l  %29 = fneg float %25\l  %30 = tail call float @llvm.fma.f32(float %24, float 0x3FF7154760000000,\l... float %29)\l  %31 = tail call float @llvm.fma.f32(float %24, float 0x3E54AE0BE0000000,\l... float %30)\l  %32 = fsub float %25, %26\l  %33 = fadd float %31, %32\l  %34 = tail call float @llvm.exp2.f32(float %33)\l  %35 = fptosi float %26 to i32\l  %36 = tail call float @llvm.amdgcn.ldexp.f32(float %34, i32 %35)\l  %37 = select i1 %28, float 0.000000e+00, float %36\l  %38 = select i1 %27, float 0x7FF0000000000000, float %37\l  %39 = getelementptr inbounds float, float addrspace(1)* %4, i64 %18\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %41 = add nsw i32 %0, -1\l  %42 = sitofp i32 %41 to float\l  %43 = tail call float @llvm.fabs.f32(float %40)\l  %44 = tail call float @llvm.amdgcn.frexp.mant.f32(float %43)\l  %45 = fcmp olt float %44, 0x3FE5555560000000\l  %46 = zext i1 %45 to i32\l  %47 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %46)\l  %48 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %43)\l  %49 = sub nsw i32 %48, %46\l  %50 = fadd float %47, -1.000000e+00\l  %51 = fadd float %47, 1.000000e+00\l  %52 = fadd float %51, -1.000000e+00\l  %53 = fsub float %47, %52\l  %54 = tail call float @llvm.amdgcn.rcp.f32(float %51)\l  %55 = fmul float %50, %54\l  %56 = fmul float %51, %55\l  %57 = fneg float %56\l  %58 = tail call float @llvm.fma.f32(float %55, float %51, float %57)\l  %59 = tail call float @llvm.fma.f32(float %55, float %53, float %58)\l  %60 = fadd float %56, %59\l  %61 = fsub float %60, %56\l  %62 = fsub float %59, %61\l  %63 = fsub float %50, %60\l  %64 = fsub float %50, %63\l  %65 = fsub float %64, %60\l  %66 = fsub float %65, %62\l  %67 = fadd float %63, %66\l  %68 = fmul float %54, %67\l  %69 = fadd float %55, %68\l  %70 = fsub float %69, %55\l  %71 = fsub float %68, %70\l  %72 = fmul float %69, %69\l  %73 = fneg float %72\l  %74 = tail call float @llvm.fma.f32(float %69, float %69, float %73)\l  %75 = fmul float %71, 2.000000e+00\l  %76 = tail call float @llvm.fma.f32(float %69, float %75, float %74)\l  %77 = fadd float %72, %76\l  %78 = fsub float %77, %72\l  %79 = fsub float %76, %78\l  %80 = tail call float @llvm.fmuladd.f32(float %77, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %81 = tail call float @llvm.fmuladd.f32(float %77, float %80, float\l... 0x3FD999BDE0000000)\l  %82 = sitofp i32 %49 to float\l  %83 = fmul float %82, 0x3FE62E4300000000\l  %84 = fneg float %83\l  %85 = tail call float @llvm.fma.f32(float %82, float 0x3FE62E4300000000,\l... float %84)\l  %86 = tail call float @llvm.fma.f32(float %82, float 0xBE205C6100000000,\l... float %85)\l  %87 = fadd float %83, %86\l  %88 = fsub float %87, %83\l  %89 = fsub float %86, %88\l  %90 = tail call float @llvm.amdgcn.ldexp.f32(float %69, i32 1)\l  %91 = fmul float %69, %77\l  %92 = fneg float %91\l  %93 = tail call float @llvm.fma.f32(float %77, float %69, float %92)\l  %94 = tail call float @llvm.fma.f32(float %77, float %71, float %93)\l  %95 = tail call float @llvm.fma.f32(float %79, float %69, float %94)\l  %96 = fadd float %91, %95\l  %97 = fsub float %96, %91\l  %98 = fsub float %95, %97\l  %99 = fmul float %77, %81\l  %100 = fneg float %99\l  %101 = tail call float @llvm.fma.f32(float %77, float %81, float %100)\l  %102 = tail call float @llvm.fma.f32(float %79, float %81, float %101)\l  %103 = fadd float %99, %102\l  %104 = fsub float %103, %99\l  %105 = fsub float %102, %104\l  %106 = fadd float %103, 0x3FE5555540000000\l  %107 = fadd float %106, 0xBFE5555540000000\l  %108 = fsub float %103, %107\l  %109 = fadd float %105, 0x3E2E720200000000\l  %110 = fadd float %109, %108\l  %111 = fadd float %106, %110\l  %112 = fsub float %111, %106\l  %113 = fsub float %110, %112\l  %114 = fmul float %96, %111\l  %115 = fneg float %114\l  %116 = tail call float @llvm.fma.f32(float %96, float %111, float %115)\l  %117 = tail call float @llvm.fma.f32(float %96, float %113, float %116)\l  %118 = tail call float @llvm.fma.f32(float %98, float %111, float %117)\l  %119 = tail call float @llvm.amdgcn.ldexp.f32(float %71, i32 1)\l  %120 = fadd float %114, %118\l  %121 = fsub float %120, %114\l  %122 = fsub float %118, %121\l  %123 = fadd float %90, %120\l  %124 = fsub float %123, %90\l  %125 = fsub float %120, %124\l  %126 = fadd float %119, %122\l  %127 = fadd float %126, %125\l  %128 = fadd float %123, %127\l  %129 = fsub float %128, %123\l  %130 = fsub float %127, %129\l  %131 = fadd float %87, %128\l  %132 = fsub float %131, %87\l  %133 = fsub float %131, %132\l  %134 = fsub float %87, %133\l  %135 = fsub float %128, %132\l  %136 = fadd float %135, %134\l  %137 = fadd float %89, %130\l  %138 = fsub float %137, %89\l  %139 = fsub float %137, %138\l  %140 = fsub float %89, %139\l  %141 = fsub float %130, %138\l  %142 = fadd float %141, %140\l  %143 = fadd float %137, %136\l  %144 = fadd float %131, %143\l  %145 = fsub float %144, %131\l  %146 = fsub float %143, %145\l  %147 = fadd float %142, %146\l  %148 = fadd float %144, %147\l  %149 = fsub float %148, %144\l  %150 = fsub float %147, %149\l  %151 = fmul float %148, %42\l  %152 = fneg float %151\l  %153 = tail call float @llvm.fma.f32(float %42, float %148, float %152)\l  %154 = tail call float @llvm.fma.f32(float %42, float %150, float %153)\l  %155 = fadd float %151, %154\l  %156 = fsub float %155, %151\l  %157 = fsub float %154, %156\l  %158 = tail call float @llvm.fabs.f32(float %151) #3\l  %159 = fcmp oeq float %158, 0x7FF0000000000000\l  %160 = select i1 %159, float %151, float %155\l  %161 = tail call float @llvm.fabs.f32(float %160) #3\l  %162 = fcmp oeq float %161, 0x7FF0000000000000\l  %163 = select i1 %162, float 0.000000e+00, float %157\l  %164 = fcmp oeq float %160, 0x40562E4300000000\l  %165 = select i1 %164, float 0x3EE0000000000000, float 0.000000e+00\l  %166 = fsub float %160, %165\l  %167 = fadd float %165, %163\l  %168 = fmul float %166, 0x3FF7154760000000\l  %169 = tail call float @llvm.rint.f32(float %168)\l  %170 = fcmp ogt float %166, 0x40562E4300000000\l  %171 = fcmp olt float %166, 0xC059D1DA00000000\l  %172 = fneg float %168\l  %173 = tail call float @llvm.fma.f32(float %166, float 0x3FF7154760000000,\l... float %172)\l  %174 = tail call float @llvm.fma.f32(float %166, float 0x3E54AE0BE0000000,\l... float %173)\l  %175 = fsub float %168, %169\l  %176 = fadd float %174, %175\l  %177 = tail call float @llvm.exp2.f32(float %176)\l  %178 = fptosi float %169 to i32\l  %179 = tail call float @llvm.amdgcn.ldexp.f32(float %177, i32 %178)\l  %180 = select i1 %171, float 0.000000e+00, float %179\l  %181 = select i1 %170, float 0x7FF0000000000000, float %180\l  %182 = tail call float @llvm.fma.f32(float %181, float %167, float %181)\l  %183 = tail call float @llvm.fabs.f32(float %181) #3\l  %184 = fcmp oeq float %183, 0x7FF0000000000000\l  %185 = select i1 %184, float %181, float %182\l  %186 = tail call float @llvm.fabs.f32(float %42)\l  %187 = tail call float @llvm.trunc.f32(float %186)\l  %188 = fcmp oeq float %186, %187\l  %189 = zext i1 %188 to i32\l  %190 = fmul float %187, 5.000000e-01\l  %191 = tail call float @llvm.amdgcn.fract.f32(float %190)\l  %192 = tail call i1 @llvm.amdgcn.class.f32(float %190, i32 516)\l  %193 = select i1 %192, float 0.000000e+00, float %191\l  %194 = fcmp oeq float %193, 0.000000e+00\l  %195 = and i1 %188, %194\l  %196 = zext i1 %195 to i32\l  %197 = add nuw nsw i32 %196, %189\l  %198 = icmp eq i32 %197, 1\l  %199 = fcmp olt float %40, 0.000000e+00\l  %200 = and i1 %198, %199\l  %201 = select i1 %200, float -0.000000e+00, float 0.000000e+00\l  %202 = tail call float @llvm.copysign.f32(float %185, float %201)\l  %203 = fcmp uge float %40, 0.000000e+00\l  %204 = icmp ne i32 %197, 0\l  %205 = select i1 %203, i1 true, i1 %204\l  %206 = select i1 %205, float %202, float 0x7FF8000000000000\l  %207 = fcmp oeq float %186, 0x7FF0000000000000\l  br i1 %207, label %208, label %217\l|{<s0>T|<s1>F}}"];
	Node0x617fd10:s0 -> Node0x618c5f0;
	Node0x617fd10:s1 -> Node0x618c680;
	Node0x618c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%208:\l208:                                              \l  %209 = fcmp oeq float %43, 1.000000e+00\l  %210 = fadd float %43, -1.000000e+00\l  %211 = bitcast float %42 to i32\l  %212 = bitcast float %210 to i32\l  %213 = xor i32 %212, %211\l  %214 = icmp sgt i32 %213, -1\l  %215 = select i1 %214, float 0x7FF0000000000000, float 0.000000e+00\l  %216 = select i1 %209, float %43, float %215\l  br label %217\l}"];
	Node0x618c5f0 -> Node0x618c680;
	Node0x618c680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%217:\l217:                                              \l  %218 = phi float [ %206, %17 ], [ %216, %208 ]\l  %219 = fcmp oeq float %43, 0x7FF0000000000000\l  %220 = fcmp oeq float %40, 0.000000e+00\l  %221 = or i1 %220, %219\l  %222 = icmp slt i32 %0, 1\l  %223 = xor i1 %222, %220\l  %224 = select i1 %223, float 0.000000e+00, float 0x7FF0000000000000\l  %225 = select i1 %198, float %40, float 0.000000e+00\l  %226 = tail call float @llvm.copysign.f32(float %224, float %225)\l  %227 = select i1 %221, float %226, float %218\l  %228 = fcmp uno float %40, 0.000000e+00\l  %229 = select i1 %228, float 0x7FF8000000000000, float %227\l  %230 = fcmp oeq float %40, 1.000000e+00\l  %231 = icmp eq i32 %41, 0\l  %232 = or i1 %231, %230\l  %233 = select i1 %232, float 1.000000e+00, float %229\l  %234 = fmul contract float %38, %233\l  %235 = getelementptr inbounds float, float addrspace(1)* %5, i64 %18\l  store float %234, float addrspace(1)* %235, align 4, !tbaa !7\l  br label %236\l}"];
	Node0x618c680 -> Node0x6180d30;
	Node0x6180d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%236:\l236:                                              \l  ret void\l}"];
}
