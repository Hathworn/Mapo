digraph "CFG for '_Z16mapRandomNumbersiiiPKfPfPiS1_S2_' function" {
	label="CFG for '_Z16mapRandomNumbersiiiPKfPfPiS1_S2_' function";

	Node0x464a870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %14\l  %17 = add i32 %16, %9\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %217\l|{<s0>T|<s1>F}}"];
	Node0x464a870:s0 -> Node0x464c7b0;
	Node0x464a870:s1 -> Node0x464c840;
	Node0x464c7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%19:\l19:                                               \l  %20 = shl nsw i32 %2, 2\l  %21 = shl nsw i32 %1, 3\l  %22 = add i32 %20, %21\l  %23 = mul i32 %22, %0\l  %24 = add i32 %23, %17\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %3, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %28 = fadd contract float %27, 1.000000e+00\l  %29 = tail call float @llvm.fabs.f32(float %28)\l  %30 = tail call float @llvm.amdgcn.frexp.mant.f32(float %29)\l  %31 = fcmp olt float %30, 0x3FE5555560000000\l  %32 = zext i1 %31 to i32\l  %33 = tail call float @llvm.amdgcn.ldexp.f32(float %30, i32 %32)\l  %34 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %29)\l  %35 = sub nsw i32 %34, %32\l  %36 = fadd float %33, -1.000000e+00\l  %37 = fadd float %33, 1.000000e+00\l  %38 = fadd float %37, -1.000000e+00\l  %39 = fsub float %33, %38\l  %40 = tail call float @llvm.amdgcn.rcp.f32(float %37)\l  %41 = fmul float %36, %40\l  %42 = fmul float %37, %41\l  %43 = fneg float %42\l  %44 = tail call float @llvm.fma.f32(float %41, float %37, float %43)\l  %45 = tail call float @llvm.fma.f32(float %41, float %39, float %44)\l  %46 = fadd float %42, %45\l  %47 = fsub float %46, %42\l  %48 = fsub float %45, %47\l  %49 = fsub float %36, %46\l  %50 = fsub float %36, %49\l  %51 = fsub float %50, %46\l  %52 = fsub float %51, %48\l  %53 = fadd float %49, %52\l  %54 = fmul float %40, %53\l  %55 = fadd float %41, %54\l  %56 = fsub float %55, %41\l  %57 = fsub float %54, %56\l  %58 = fmul float %55, %55\l  %59 = fneg float %58\l  %60 = tail call float @llvm.fma.f32(float %55, float %55, float %59)\l  %61 = fmul float %57, 2.000000e+00\l  %62 = tail call float @llvm.fma.f32(float %55, float %61, float %60)\l  %63 = fadd float %58, %62\l  %64 = fsub float %63, %58\l  %65 = fsub float %62, %64\l  %66 = tail call float @llvm.fmuladd.f32(float %63, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %67 = tail call float @llvm.fmuladd.f32(float %63, float %66, float\l... 0x3FD999BDE0000000)\l  %68 = sitofp i32 %35 to float\l  %69 = fmul float %68, 0x3FE62E4300000000\l  %70 = fneg float %69\l  %71 = tail call float @llvm.fma.f32(float %68, float 0x3FE62E4300000000,\l... float %70)\l  %72 = tail call float @llvm.fma.f32(float %68, float 0xBE205C6100000000,\l... float %71)\l  %73 = fadd float %69, %72\l  %74 = fsub float %73, %69\l  %75 = fsub float %72, %74\l  %76 = tail call float @llvm.amdgcn.ldexp.f32(float %55, i32 1)\l  %77 = fmul float %55, %63\l  %78 = fneg float %77\l  %79 = tail call float @llvm.fma.f32(float %63, float %55, float %78)\l  %80 = tail call float @llvm.fma.f32(float %63, float %57, float %79)\l  %81 = tail call float @llvm.fma.f32(float %65, float %55, float %80)\l  %82 = fadd float %77, %81\l  %83 = fsub float %82, %77\l  %84 = fsub float %81, %83\l  %85 = fmul float %63, %67\l  %86 = fneg float %85\l  %87 = tail call float @llvm.fma.f32(float %63, float %67, float %86)\l  %88 = tail call float @llvm.fma.f32(float %65, float %67, float %87)\l  %89 = fadd float %85, %88\l  %90 = fsub float %89, %85\l  %91 = fsub float %88, %90\l  %92 = fadd float %89, 0x3FE5555540000000\l  %93 = fadd float %92, 0xBFE5555540000000\l  %94 = fsub float %89, %93\l  %95 = fadd float %91, 0x3E2E720200000000\l  %96 = fadd float %95, %94\l  %97 = fadd float %92, %96\l  %98 = fsub float %97, %92\l  %99 = fsub float %96, %98\l  %100 = fmul float %82, %97\l  %101 = fneg float %100\l  %102 = tail call float @llvm.fma.f32(float %82, float %97, float %101)\l  %103 = tail call float @llvm.fma.f32(float %82, float %99, float %102)\l  %104 = tail call float @llvm.fma.f32(float %84, float %97, float %103)\l  %105 = tail call float @llvm.amdgcn.ldexp.f32(float %57, i32 1)\l  %106 = fadd float %100, %104\l  %107 = fsub float %106, %100\l  %108 = fsub float %104, %107\l  %109 = fadd float %76, %106\l  %110 = fsub float %109, %76\l  %111 = fsub float %106, %110\l  %112 = fadd float %105, %108\l  %113 = fadd float %112, %111\l  %114 = fadd float %109, %113\l  %115 = fsub float %114, %109\l  %116 = fsub float %113, %115\l  %117 = fadd float %73, %114\l  %118 = fsub float %117, %73\l  %119 = fsub float %117, %118\l  %120 = fsub float %73, %119\l  %121 = fsub float %114, %118\l  %122 = fadd float %121, %120\l  %123 = fadd float %75, %116\l  %124 = fsub float %123, %75\l  %125 = fsub float %123, %124\l  %126 = fsub float %75, %125\l  %127 = fsub float %116, %124\l  %128 = fadd float %127, %126\l  %129 = fadd float %123, %122\l  %130 = fadd float %117, %129\l  %131 = fsub float %130, %117\l  %132 = fsub float %129, %131\l  %133 = fadd float %128, %132\l  %134 = fadd float %130, %133\l  %135 = fsub float %134, %130\l  %136 = fsub float %133, %135\l  %137 = fmul float %134, 2.000000e+00\l  %138 = fneg float %137\l  %139 = tail call float @llvm.fma.f32(float %134, float 2.000000e+00, float\l... %138)\l  %140 = tail call float @llvm.fma.f32(float %136, float 2.000000e+00, float\l... %139)\l  %141 = fadd float %137, %140\l  %142 = fsub float %141, %137\l  %143 = fsub float %140, %142\l  %144 = tail call float @llvm.fabs.f32(float %137) #3\l  %145 = fcmp oeq float %144, 0x7FF0000000000000\l  %146 = select i1 %145, float %137, float %141\l  %147 = tail call float @llvm.fabs.f32(float %146) #3\l  %148 = fcmp oeq float %147, 0x7FF0000000000000\l  %149 = select i1 %148, float 0.000000e+00, float %143\l  %150 = fcmp oeq float %146, 0x40562E4300000000\l  %151 = select i1 %150, float 0x3EE0000000000000, float 0.000000e+00\l  %152 = fsub float %146, %151\l  %153 = fadd float %151, %149\l  %154 = fmul float %152, 0x3FF7154760000000\l  %155 = tail call float @llvm.rint.f32(float %154)\l  %156 = fcmp ogt float %152, 0x40562E4300000000\l  %157 = fcmp olt float %152, 0xC059D1DA00000000\l  %158 = fneg float %154\l  %159 = tail call float @llvm.fma.f32(float %152, float 0x3FF7154760000000,\l... float %158)\l  %160 = tail call float @llvm.fma.f32(float %152, float 0x3E54AE0BE0000000,\l... float %159)\l  %161 = fsub float %154, %155\l  %162 = fadd float %160, %161\l  %163 = tail call float @llvm.exp2.f32(float %162)\l  %164 = fptosi float %155 to i32\l  %165 = tail call float @llvm.amdgcn.ldexp.f32(float %163, i32 %164)\l  %166 = select i1 %157, float 0.000000e+00, float %165\l  %167 = select i1 %156, float 0x7FF0000000000000, float %166\l  %168 = tail call float @llvm.fma.f32(float %167, float %153, float %167)\l  %169 = tail call float @llvm.fabs.f32(float %167) #3\l  %170 = fcmp oeq float %169, 0x7FF0000000000000\l  %171 = select i1 %170, float %167, float %168\l  %172 = tail call float @llvm.fabs.f32(float %171)\l  %173 = fcmp oeq float %29, 0x7FF0000000000000\l  %174 = fcmp oeq float %28, 0.000000e+00\l  %175 = fcmp uno float %28, 0.000000e+00\l  %176 = fcmp oeq float %28, 1.000000e+00\l  %177 = fmul contract float %172, 5.000000e-01\l  %178 = select i1 %173, float 0x7FF0000000000000, float %177\l  %179 = select i1 %174, float 0.000000e+00, float %178\l  %180 = select i1 %175, float 0x7FF8000000000000, float %179\l  %181 = select i1 %176, float 5.000000e-01, float %180\l  %182 = sext i32 %17 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %4, i64 %182\l  store float %181, float addrspace(1)* %183, align 4, !tbaa !7\l  %184 = add i32 %23, %0\l  %185 = add i32 %184, %17\l  %186 = sext i32 %185 to i64\l  %187 = getelementptr inbounds float, float addrspace(1)* %3, i64 %186\l  %188 = load float, float addrspace(1)* %187, align 4, !tbaa !7\l  %189 = fpext float %188 to double\l  %190 = add nsw i32 %0, -1\l  %191 = sitofp i32 %190 to double\l  %192 = fadd contract double %191, 0x3FEFFFFDE7210BE9\l  %193 = fmul contract double %192, %189\l  %194 = fptrunc double %193 to float\l  %195 = tail call float @llvm.trunc.f32(float %194)\l  %196 = fptosi float %195 to i32\l  %197 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %182\l  store i32 %196, i32 addrspace(1)* %197, align 4, !tbaa !11\l  %198 = shl nsw i32 %0, 1\l  %199 = add i32 %23, %198\l  %200 = add i32 %199, %17\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds float, float addrspace(1)* %3, i64 %201\l  %203 = load float, float addrspace(1)* %202, align 4, !tbaa !7\l  %204 = getelementptr inbounds float, float addrspace(1)* %6, i64 %182\l  store float %203, float addrspace(1)* %204, align 4, !tbaa !7\l  %205 = mul nsw i32 %0, 3\l  %206 = add i32 %23, %205\l  %207 = add i32 %206, %17\l  %208 = sext i32 %207 to i64\l  %209 = getelementptr inbounds float, float addrspace(1)* %3, i64 %208\l  %210 = load float, float addrspace(1)* %209, align 4, !tbaa !7\l  %211 = fpext float %210 to double\l  %212 = fmul contract double %211, 0x4013FFFFBCE4217D\l  %213 = fptrunc double %212 to float\l  %214 = tail call float @llvm.trunc.f32(float %213)\l  %215 = fptosi float %214 to i32\l  %216 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %182\l  store i32 %215, i32 addrspace(1)* %216, align 4, !tbaa !11\l  br label %217\l}"];
	Node0x464c7b0 -> Node0x464c840;
	Node0x464c840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%217:\l217:                                              \l  ret void\l}"];
}
