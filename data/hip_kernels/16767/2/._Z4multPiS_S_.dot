digraph "CFG for '_Z4multPiS_S_' function" {
	label="CFG for '_Z4multPiS_S_' function";

	Node0x622b200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = load i32, i32 addrspace(4)* @cuda_features, align 4, !tbaa !7\l  %14 = icmp sgt i32 %13, 0\l  br i1 %14, label %15, label %42\l|{<s0>T|<s1>F}}"];
	Node0x622b200:s0 -> Node0x622cc80;
	Node0x622b200:s1 -> Node0x622cd10;
	Node0x622cc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = mul nsw i32 %13, %12\l  %17 = and i32 %13, 7\l  %18 = icmp ult i32 %13, 8\l  br i1 %18, label %21, label %19\l|{<s0>T|<s1>F}}"];
	Node0x622cc80:s0 -> Node0x622d0b0;
	Node0x622cc80:s1 -> Node0x622d100;
	Node0x622d100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%19:\l19:                                               \l  %20 = and i32 %13, -8\l  br label %46\l}"];
	Node0x622d100 -> Node0x622d300;
	Node0x622d0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = phi i32 [ undef, %15 ], [ %128, %46 ]\l  %23 = phi i32 [ 0, %15 ], [ %129, %46 ]\l  %24 = phi i32 [ 0, %15 ], [ %128, %46 ]\l  %25 = icmp eq i32 %17, 0\l  br i1 %25, label %42, label %26\l|{<s0>T|<s1>F}}"];
	Node0x622d0b0:s0 -> Node0x622cd10;
	Node0x622d0b0:s1 -> Node0x622db20;
	Node0x622db20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ %39, %26 ], [ %23, %21 ]\l  %28 = phi i32 [ %38, %26 ], [ %24, %21 ]\l  %29 = phi i32 [ %40, %26 ], [ 0, %21 ]\l  %30 = zext i32 %27 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = add nsw i32 %16, %27\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %34\l  %36 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %37 = mul nsw i32 %36, %32\l  %38 = add nsw i32 %37, %28\l  %39 = add nuw nsw i32 %27, 1\l  %40 = add i32 %29, 1\l  %41 = icmp eq i32 %40, %17\l  br i1 %41, label %42, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x622db20:s0 -> Node0x622cd10;
	Node0x622db20:s1 -> Node0x622db20;
	Node0x622cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %3 ], [ %22, %21 ], [ %38, %26 ]\l  %44 = sext i32 %12 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  store i32 %43, i32 addrspace(1)* %45, align 4, !tbaa !7\l  ret void\l}"];
	Node0x622d300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %19 ], [ %129, %46 ]\l  %48 = phi i32 [ 0, %19 ], [ %128, %46 ]\l  %49 = phi i32 [ 0, %19 ], [ %130, %46 ]\l  %50 = zext i32 %47 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = add nsw i32 %16, %47\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %57 = mul nsw i32 %56, %52\l  %58 = add nsw i32 %57, %48\l  %59 = or i32 %47, 1\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = add nsw i32 %16, %59\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %67 = mul nsw i32 %66, %62\l  %68 = add nsw i32 %67, %58\l  %69 = or i32 %47, 2\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = add nsw i32 %16, %69\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %77 = mul nsw i32 %76, %72\l  %78 = add nsw i32 %77, %68\l  %79 = or i32 %47, 3\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %83 = add nsw i32 %16, %79\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %84\l  %86 = load i32, i32 addrspace(1)* %85, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %87 = mul nsw i32 %86, %82\l  %88 = add nsw i32 %87, %78\l  %89 = or i32 %47, 4\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %93 = add nsw i32 %16, %89\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %97 = mul nsw i32 %96, %92\l  %98 = add nsw i32 %97, %88\l  %99 = or i32 %47, 5\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = add nsw i32 %16, %99\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %107 = mul nsw i32 %106, %102\l  %108 = add nsw i32 %107, %98\l  %109 = or i32 %47, 6\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %110\l  %112 = load i32, i32 addrspace(1)* %111, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %113 = add nsw i32 %16, %109\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = mul nsw i32 %116, %112\l  %118 = add nsw i32 %117, %108\l  %119 = or i32 %47, 7\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %120\l  %122 = load i32, i32 addrspace(1)* %121, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %123 = add nsw i32 %16, %119\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %124\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = mul nsw i32 %126, %122\l  %128 = add nsw i32 %127, %118\l  %129 = add nuw nsw i32 %47, 8\l  %130 = add i32 %49, 8\l  %131 = icmp eq i32 %130, %20\l  br i1 %131, label %21, label %46, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x622d300:s0 -> Node0x622d0b0;
	Node0x622d300:s1 -> Node0x622d300;
}
