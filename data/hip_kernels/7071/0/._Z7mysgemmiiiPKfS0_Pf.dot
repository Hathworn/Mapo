digraph "CFG for '_Z7mysgemmiiiPKfS0_Pf' function" {
	label="CFG for '_Z7mysgemmiiiPKfS0_Pf' function";

	Node0x4cac8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %7\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %8\l  %24 = add nsw i32 %2, -1\l  %25 = sdiv i32 %24, 16\l  %26 = add i32 %2, 30\l  %27 = icmp ult i32 %26, 16\l  br i1 %27, label %67, label %28\l|{<s0>T|<s1>F}}"];
	Node0x4cac8e0:s0 -> Node0x4cb0400;
	Node0x4cac8e0:s1 -> Node0x4cb0490;
	Node0x4cb0490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = icmp ult i32 %16, %0\l  %30 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 %8\l  %31 = mul i32 %16, %2\l  %32 = icmp ult i32 %23, %1\l  %33 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 %7, i32 %8\l  %34 = select i1 %29, i1 %32, i1 false\l  %35 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 0\l  %36 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 0, i32 %8\l  %37 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 1\l  %38 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 1, i32 %8\l  %39 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 2\l  %40 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 2, i32 %8\l  %41 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 3\l  %42 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 3, i32 %8\l  %43 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 4\l  %44 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 4, i32 %8\l  %45 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 5\l  %46 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 5, i32 %8\l  %47 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 6\l  %48 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 6, i32 %8\l  %49 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 7\l  %50 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 7, i32 %8\l  %51 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 8\l  %52 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 8, i32 %8\l  %53 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 9\l  %54 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 9, i32 %8\l  %55 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 10\l  %56 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 10, i32 %8\l  %57 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 11\l  %58 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 11, i32 %8\l  %59 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 12\l  %60 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 12, i32 %8\l  %61 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 13\l  %62 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 13, i32 %8\l  %63 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 14\l  %64 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 14, i32 %8\l  %65 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2As, i32 0, i32 %7, i32 15\l  %66 = getelementptr inbounds [16 x [16 x float]], [16 x [16 x float]]\l... addrspace(3)* @_ZZ7mysgemmiiiPKfS0_PfE2Bs, i32 0, i32 15, i32 %8\l  br label %72\l}"];
	Node0x4cb0490 -> Node0x4cb2c50;
	Node0x4cb0400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%67:\l67:                                               \l  %68 = phi float [ 0.000000e+00, %6 ], [ %163, %162 ]\l  %69 = icmp ult i32 %16, %0\l  %70 = icmp ult i32 %23, %1\l  %71 = select i1 %69, i1 %70, i1 false\l  br i1 %71, label %166, label %171\l|{<s0>T|<s1>F}}"];
	Node0x4cb0400:s0 -> Node0x4cb3aa0;
	Node0x4cb0400:s1 -> Node0x4cb3b30;
	Node0x4cb2c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %28 ], [ %164, %162 ]\l  %74 = phi float [ 0.000000e+00, %28 ], [ %163, %162 ]\l  %75 = shl i32 %73, 4\l  br i1 %29, label %76, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4cb2c50:s0 -> Node0x4cb3e90;
	Node0x4cb2c50:s1 -> Node0x4cb3f20;
	Node0x4cb3e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%76:\l76:                                               \l  %77 = add i32 %75, %8\l  %78 = icmp ult i32 %77, %2\l  br i1 %78, label %79, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4cb3e90:s0 -> Node0x4cb4180;
	Node0x4cb3e90:s1 -> Node0x4cb3f20;
	Node0x4cb4180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%79:\l79:                                               \l  %80 = add i32 %77, %31\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %3, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %84\l}"];
	Node0x4cb4180 -> Node0x4cb3f20;
	Node0x4cb3f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = phi float [ %83, %79 ], [ 0.000000e+00, %72 ], [ 0.000000e+00, %76 ]\l  store float %85, float addrspace(3)* %30, align 4, !tbaa !7\l  %86 = add i32 %75, %7\l  %87 = icmp ult i32 %86, %2\l  %88 = select i1 %87, i1 %32, i1 false\l  br i1 %88, label %89, label %95\l|{<s0>T|<s1>F}}"];
	Node0x4cb3f20:s0 -> Node0x4cb4fb0;
	Node0x4cb3f20:s1 -> Node0x4cb5000;
	Node0x4cb4fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%89:\l89:                                               \l  %90 = mul i32 %86, %1\l  %91 = add i32 %90, %23\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %4, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  br label %95\l}"];
	Node0x4cb4fb0 -> Node0x4cb5000;
	Node0x4cb5000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  %96 = phi float [ %94, %89 ], [ 0.000000e+00, %84 ]\l  store float %96, float addrspace(3)* %33, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %34, label %97, label %162\l|{<s0>T|<s1>F}}"];
	Node0x4cb5000:s0 -> Node0x4cb5850;
	Node0x4cb5000:s1 -> Node0x4cb3790;
	Node0x4cb5850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%97:\l97:                                               \l  %98 = load float, float addrspace(3)* %35, align 16, !tbaa !7\l  %99 = load float, float addrspace(3)* %36, align 4, !tbaa !7\l  %100 = fmul contract float %98, %99\l  %101 = fadd contract float %74, %100\l  %102 = load float, float addrspace(3)* %37, align 4, !tbaa !7\l  %103 = load float, float addrspace(3)* %38, align 4, !tbaa !7\l  %104 = fmul contract float %102, %103\l  %105 = fadd contract float %101, %104\l  %106 = load float, float addrspace(3)* %39, align 8, !tbaa !7\l  %107 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %108 = fmul contract float %106, %107\l  %109 = fadd contract float %105, %108\l  %110 = load float, float addrspace(3)* %41, align 4, !tbaa !7\l  %111 = load float, float addrspace(3)* %42, align 4, !tbaa !7\l  %112 = fmul contract float %110, %111\l  %113 = fadd contract float %109, %112\l  %114 = load float, float addrspace(3)* %43, align 16, !tbaa !7\l  %115 = load float, float addrspace(3)* %44, align 4, !tbaa !7\l  %116 = fmul contract float %114, %115\l  %117 = fadd contract float %113, %116\l  %118 = load float, float addrspace(3)* %45, align 4, !tbaa !7\l  %119 = load float, float addrspace(3)* %46, align 4, !tbaa !7\l  %120 = fmul contract float %118, %119\l  %121 = fadd contract float %117, %120\l  %122 = load float, float addrspace(3)* %47, align 8, !tbaa !7\l  %123 = load float, float addrspace(3)* %48, align 4, !tbaa !7\l  %124 = fmul contract float %122, %123\l  %125 = fadd contract float %121, %124\l  %126 = load float, float addrspace(3)* %49, align 4, !tbaa !7\l  %127 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %128 = fmul contract float %126, %127\l  %129 = fadd contract float %125, %128\l  %130 = load float, float addrspace(3)* %51, align 16, !tbaa !7\l  %131 = load float, float addrspace(3)* %52, align 4, !tbaa !7\l  %132 = fmul contract float %130, %131\l  %133 = fadd contract float %129, %132\l  %134 = load float, float addrspace(3)* %53, align 4, !tbaa !7\l  %135 = load float, float addrspace(3)* %54, align 4, !tbaa !7\l  %136 = fmul contract float %134, %135\l  %137 = fadd contract float %133, %136\l  %138 = load float, float addrspace(3)* %55, align 8, !tbaa !7\l  %139 = load float, float addrspace(3)* %56, align 4, !tbaa !7\l  %140 = fmul contract float %138, %139\l  %141 = fadd contract float %137, %140\l  %142 = load float, float addrspace(3)* %57, align 4, !tbaa !7\l  %143 = load float, float addrspace(3)* %58, align 4, !tbaa !7\l  %144 = fmul contract float %142, %143\l  %145 = fadd contract float %141, %144\l  %146 = load float, float addrspace(3)* %59, align 16, !tbaa !7\l  %147 = load float, float addrspace(3)* %60, align 4, !tbaa !7\l  %148 = fmul contract float %146, %147\l  %149 = fadd contract float %145, %148\l  %150 = load float, float addrspace(3)* %61, align 4, !tbaa !7\l  %151 = load float, float addrspace(3)* %62, align 4, !tbaa !7\l  %152 = fmul contract float %150, %151\l  %153 = fadd contract float %149, %152\l  %154 = load float, float addrspace(3)* %63, align 8, !tbaa !7\l  %155 = load float, float addrspace(3)* %64, align 4, !tbaa !7\l  %156 = fmul contract float %154, %155\l  %157 = fadd contract float %153, %156\l  %158 = load float, float addrspace(3)* %65, align 4, !tbaa !7\l  %159 = load float, float addrspace(3)* %66, align 4, !tbaa !7\l  %160 = fmul contract float %158, %159\l  %161 = fadd contract float %157, %160\l  br label %162\l}"];
	Node0x4cb5850 -> Node0x4cb3790;
	Node0x4cb3790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  %163 = phi float [ %74, %95 ], [ %161, %97 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %164 = add nuw i32 %73, 1\l  %165 = icmp eq i32 %73, %25\l  br i1 %165, label %67, label %72, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4cb3790:s0 -> Node0x4cb0400;
	Node0x4cb3790:s1 -> Node0x4cb2c50;
	Node0x4cb3aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%166:\l166:                                              \l  %167 = mul i32 %16, %1\l  %168 = add i32 %167, %23\l  %169 = zext i32 %168 to i64\l  %170 = getelementptr inbounds float, float addrspace(1)* %5, i64 %169\l  store float %68, float addrspace(1)* %170, align 4, !tbaa !7\l  br label %171\l}"];
	Node0x4cb3aa0 -> Node0x4cb3b30;
	Node0x4cb3b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%171:\l171:                                              \l  ret void\l}"];
}
