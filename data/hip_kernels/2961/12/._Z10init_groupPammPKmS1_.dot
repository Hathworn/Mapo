digraph "CFG for '_Z10init_groupPammPKmS1_' function" {
	label="CFG for '_Z10init_groupPammPKmS1_' function";

	Node0x532b520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = udiv i32 %15, %12\l  %18 = mul i32 %17, %12\l  %19 = icmp ugt i32 %15, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %16\l  %23 = add i32 %22, %7\l  %24 = mul i32 %23, %12\l  %25 = add i32 %24, %6\l  %26 = zext i32 %25 to i64\l  %27 = icmp ult i64 %26, %1\l  %28 = icmp ne i64 %2, 0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %94\l|{<s0>T|<s1>F}}"];
	Node0x532b520:s0 -> Node0x532def0;
	Node0x532b520:s1 -> Node0x532df80;
	Node0x532def0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%30:\l30:                                               \l  %31 = and i64 %2, 1\l  %32 = icmp eq i64 %2, 1\l  br i1 %32, label %77, label %33\l|{<s0>T|<s1>F}}"];
	Node0x532def0:s0 -> Node0x532d710;
	Node0x532def0:s1 -> Node0x532d760;
	Node0x532d760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%33:\l33:                                               \l  %34 = and i64 %2, -2\l  br label %35\l}"];
	Node0x532d760 -> Node0x532e560;
	Node0x532e560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i64 [ 0, %33 ], [ %72, %70 ]\l  %37 = phi i8 addrspace(1)* [ %0, %33 ], [ %74, %70 ]\l  %38 = phi i64 [ 0, %33 ], [ %75, %70 ]\l  %39 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %36\l  %40 = load i64, i64 addrspace(1)* %39, align 8, !tbaa !16\l  switch i64 %40, label %52 [\l    i64 4, label %41\l    i64 8, label %46\l  ]\l|{<s0>def|<s1>4|<s2>8}}"];
	Node0x532e560:s0 -> Node0x532ec80;
	Node0x532e560:s1 -> Node0x532ed10;
	Node0x532e560:s2 -> Node0x532eda0;
	Node0x532ed10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %36\l  %43 = bitcast i64 addrspace(1)* %42 to i32 addrspace(1)*\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !20\l  %45 = bitcast i8 addrspace(1)* %37 to i32 addrspace(1)*\l  store i32 %44, i32 addrspace(1)* %45, align 4, !tbaa !20\l  br label %52\l}"];
	Node0x532ed10 -> Node0x532ec80;
	Node0x532eda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%46:\l46:                                               \l  %47 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %36\l  %48 = load i64, i64 addrspace(1)* %47, align 8, !tbaa !16\l  %49 = bitcast i8 addrspace(1)* %37 to i64 addrspace(1)*\l  %50 = getelementptr inbounds i64, i64 addrspace(1)* %49, i64 %26\l  store i64 %48, i64 addrspace(1)* %50, align 8, !tbaa !16\l  %51 = load i64, i64 addrspace(1)* %39, align 8, !tbaa !16\l  br label %52\l}"];
	Node0x532eda0 -> Node0x532ec80;
	Node0x532ec80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i64 [ 4, %41 ], [ %51, %46 ], [ %40, %35 ]\l  %54 = or i64 %36, 1\l  %55 = mul i64 %53, %1\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %37, i64 %55\l  %57 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %54\l  %58 = load i64, i64 addrspace(1)* %57, align 8, !tbaa !16\l  switch i64 %58, label %70 [\l    i64 4, label %65\l    i64 8, label %59\l  ]\l|{<s0>def|<s1>4|<s2>8}}"];
	Node0x532ec80:s0 -> Node0x532e650;
	Node0x532ec80:s1 -> Node0x53306c0;
	Node0x532ec80:s2 -> Node0x5330710;
	Node0x5330710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  %60 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %54\l  %61 = load i64, i64 addrspace(1)* %60, align 8, !tbaa !16\l  %62 = bitcast i8 addrspace(1)* %56 to i64 addrspace(1)*\l  %63 = getelementptr inbounds i64, i64 addrspace(1)* %62, i64 %26\l  store i64 %61, i64 addrspace(1)* %63, align 8, !tbaa !16\l  %64 = load i64, i64 addrspace(1)* %57, align 8, !tbaa !16\l  br label %70\l}"];
	Node0x5330710 -> Node0x532e650;
	Node0x53306c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %54\l  %67 = bitcast i64 addrspace(1)* %66 to i32 addrspace(1)*\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !20\l  %69 = bitcast i8 addrspace(1)* %56 to i32 addrspace(1)*\l  store i32 %68, i32 addrspace(1)* %69, align 4, !tbaa !20\l  br label %70\l}"];
	Node0x53306c0 -> Node0x532e650;
	Node0x532e650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i64 [ 4, %65 ], [ %64, %59 ], [ %58, %52 ]\l  %72 = add nuw i64 %36, 2\l  %73 = mul i64 %71, %1\l  %74 = getelementptr inbounds i8, i8 addrspace(1)* %56, i64 %73\l  %75 = add i64 %38, 2\l  %76 = icmp eq i64 %75, %34\l  br i1 %76, label %77, label %35, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x532e650:s0 -> Node0x532d710;
	Node0x532e650:s1 -> Node0x532e560;
	Node0x532d710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%77:\l77:                                               \l  %78 = phi i64 [ 0, %30 ], [ %72, %70 ]\l  %79 = phi i8 addrspace(1)* [ %0, %30 ], [ %74, %70 ]\l  %80 = icmp eq i64 %31, 0\l  br i1 %80, label %94, label %81\l|{<s0>T|<s1>F}}"];
	Node0x532d710:s0 -> Node0x532df80;
	Node0x532d710:s1 -> Node0x53317f0;
	Node0x53317f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%81:\l81:                                               \l  %82 = getelementptr inbounds i64, i64 addrspace(1)* %3, i64 %78\l  %83 = load i64, i64 addrspace(1)* %82, align 8, !tbaa !16\l  switch i64 %83, label %94 [\l    i64 4, label %89\l    i64 8, label %84\l  ]\l|{<s0>def|<s1>4|<s2>8}}"];
	Node0x53317f0:s0 -> Node0x532df80;
	Node0x53317f0:s1 -> Node0x5331a00;
	Node0x53317f0:s2 -> Node0x5331a50;
	Node0x5331a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %78\l  %86 = load i64, i64 addrspace(1)* %85, align 8, !tbaa !16\l  %87 = bitcast i8 addrspace(1)* %79 to i64 addrspace(1)*\l  %88 = getelementptr inbounds i64, i64 addrspace(1)* %87, i64 %26\l  store i64 %86, i64 addrspace(1)* %88, align 8, !tbaa !16\l  br label %94\l}"];
	Node0x5331a50 -> Node0x532df80;
	Node0x5331a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%89:\l89:                                               \l  %90 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %78\l  %91 = bitcast i64 addrspace(1)* %90 to i32 addrspace(1)*\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !20\l  %93 = bitcast i8 addrspace(1)* %79 to i32 addrspace(1)*\l  store i32 %92, i32 addrspace(1)* %93, align 4, !tbaa !20\l  br label %94\l}"];
	Node0x5331a00 -> Node0x532df80;
	Node0x532df80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%94:\l94:                                               \l  ret void\l}"];
}
