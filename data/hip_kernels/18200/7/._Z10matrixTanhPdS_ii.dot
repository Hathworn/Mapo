digraph "CFG for '_Z10matrixTanhPdS_ii' function" {
	label="CFG for '_Z10matrixTanhPdS_ii' function";

	Node0x635e030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %182\l|{<s0>T|<s1>F}}"];
	Node0x635e030:s0 -> Node0x6361ad0;
	Node0x635e030:s1 -> Node0x6361b60;
	Node0x6361ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %3\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = tail call double @llvm.fabs.f64(double %30)\l  %32 = fmul double %31, 0x3FF71547652B82FE\l  %33 = tail call double @llvm.rint.f64(double %32)\l  %34 = tail call double @llvm.fma.f64(double %33, double 0xBFE62E42FEFA3000,\l... double %31)\l  %35 = fadd double %34, 0.000000e+00\l  %36 = fsub double %34, %35\l  %37 = fadd double %36, 0.000000e+00\l  %38 = fmul double %33, 0x3D53DE6AF278E000\l  %39 = fsub double %35, %38\l  %40 = fsub double %35, %39\l  %41 = fsub double %40, %38\l  %42 = fadd double %37, %41\l  %43 = fadd double %39, %42\l  %44 = fsub double %43, %39\l  %45 = fsub double %42, %44\l  %46 = fmul double %33, 0x3AC9CC01F97B57A0\l  %47 = fsub double %43, %46\l  %48 = fsub double %43, %47\l  %49 = fsub double %48, %46\l  %50 = fadd double %45, %49\l  %51 = fadd double %47, %50\l  %52 = fsub double %51, %47\l  %53 = fsub double %50, %52\l  %54 = tail call double @llvm.fma.f64(double %51, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %55 = tail call double @llvm.fma.f64(double %51, double %54, double\l... 0x3EC71DEE623FDE64)\l  %56 = tail call double @llvm.fma.f64(double %51, double %55, double\l... 0x3EFA01997C89E6B0)\l  %57 = tail call double @llvm.fma.f64(double %51, double %56, double\l... 0x3F2A01A014761F6E)\l  %58 = tail call double @llvm.fma.f64(double %51, double %57, double\l... 0x3F56C16C1852B7B0)\l  %59 = tail call double @llvm.fma.f64(double %51, double %58, double\l... 0x3F81111111122322)\l  %60 = tail call double @llvm.fma.f64(double %51, double %59, double\l... 0x3FA55555555502A1)\l  %61 = tail call double @llvm.fma.f64(double %51, double %60, double\l... 0x3FC5555555555511)\l  %62 = tail call double @llvm.fma.f64(double %51, double %61, double\l... 0x3FE000000000000B)\l  %63 = fmul double %51, %51\l  %64 = fneg double %63\l  %65 = tail call double @llvm.fma.f64(double %51, double %51, double %64)\l  %66 = fmul double %53, 2.000000e+00\l  %67 = tail call double @llvm.fma.f64(double %51, double %66, double %65)\l  %68 = fadd double %63, %67\l  %69 = fsub double %68, %63\l  %70 = fsub double %67, %69\l  %71 = fmul double %68, %62\l  %72 = fneg double %71\l  %73 = tail call double @llvm.fma.f64(double %68, double %62, double %72)\l  %74 = tail call double @llvm.fma.f64(double %70, double %62, double %73)\l  %75 = fadd double %71, %74\l  %76 = fsub double %75, %71\l  %77 = fsub double %74, %76\l  %78 = fadd double %51, %75\l  %79 = fsub double %78, %51\l  %80 = fsub double %75, %79\l  %81 = fadd double %53, %77\l  %82 = fadd double %81, %80\l  %83 = fadd double %78, %82\l  %84 = fsub double %83, %78\l  %85 = fsub double %82, %84\l  %86 = fadd double %83, 1.000000e+00\l  %87 = fadd double %86, -1.000000e+00\l  %88 = fsub double %83, %87\l  %89 = fadd double %85, %88\l  %90 = fadd double %86, %89\l  %91 = fsub double %90, %86\l  %92 = fsub double %89, %91\l  %93 = fptosi double %33 to i32\l  %94 = tail call double @llvm.amdgcn.ldexp.f64(double %90, i32 %93)\l  %95 = tail call double @llvm.amdgcn.ldexp.f64(double %92, i32 %93)\l  %96 = tail call double @llvm.amdgcn.rcp.f64(double %94)\l  %97 = fneg double %94\l  %98 = tail call double @llvm.fma.f64(double %97, double %96, double\l... 1.000000e+00)\l  %99 = tail call double @llvm.fma.f64(double %98, double %96, double %96)\l  %100 = tail call double @llvm.fma.f64(double %97, double %99, double\l... 1.000000e+00)\l  %101 = tail call double @llvm.fma.f64(double %100, double %99, double %99)\l  %102 = fmul double %94, %101\l  %103 = fneg double %102\l  %104 = tail call double @llvm.fma.f64(double %101, double %94, double %103)\l  %105 = tail call double @llvm.fma.f64(double %101, double %95, double %104)\l  %106 = fadd double %102, %105\l  %107 = fsub double %106, %102\l  %108 = fsub double %105, %107\l  %109 = fsub double 1.000000e+00, %106\l  %110 = fsub double 1.000000e+00, %109\l  %111 = fsub double %110, %106\l  %112 = fsub double %111, %108\l  %113 = fadd double %109, %112\l  %114 = fsub double %113, %109\l  %115 = fsub double %112, %114\l  %116 = fmul double %101, %113\l  %117 = fmul double %94, %116\l  %118 = fneg double %117\l  %119 = tail call double @llvm.fma.f64(double %116, double %94, double %118)\l  %120 = tail call double @llvm.fma.f64(double %116, double %95, double %119)\l  %121 = fadd double %117, %120\l  %122 = fsub double %121, %117\l  %123 = fsub double %120, %122\l  %124 = fsub double %113, %121\l  %125 = fsub double %113, %124\l  %126 = fsub double %125, %121\l  %127 = fadd double %115, %126\l  %128 = fsub double %127, %123\l  %129 = fadd double %124, %128\l  %130 = fmul double %101, %129\l  %131 = fadd double %101, %116\l  %132 = fsub double %131, %101\l  %133 = fsub double %116, %132\l  %134 = fadd double %133, %130\l  %135 = fadd double %131, %134\l  %136 = fsub double %135, %131\l  %137 = fsub double %134, %136\l  %138 = fsub double %94, %135\l  %139 = fsub double %94, %138\l  %140 = fsub double %139, %135\l  %141 = fadd double %95, %140\l  %142 = fsub double %141, %137\l  %143 = fadd double %138, %142\l  %144 = fsub double %143, %138\l  %145 = fsub double %142, %144\l  %146 = fadd double %94, %135\l  %147 = fsub double %146, %94\l  %148 = fsub double %135, %147\l  %149 = fadd double %95, %137\l  %150 = fadd double %149, %148\l  %151 = fadd double %146, %150\l  %152 = fsub double %151, %146\l  %153 = fsub double %150, %152\l  %154 = tail call double @llvm.amdgcn.rcp.f64(double %151)\l  %155 = fneg double %151\l  %156 = tail call double @llvm.fma.f64(double %155, double %154, double\l... 1.000000e+00)\l  %157 = tail call double @llvm.fma.f64(double %156, double %154, double %154)\l  %158 = tail call double @llvm.fma.f64(double %155, double %157, double\l... 1.000000e+00)\l  %159 = tail call double @llvm.fma.f64(double %158, double %157, double %157)\l  %160 = fmul double %143, %159\l  %161 = fmul double %151, %160\l  %162 = fneg double %161\l  %163 = tail call double @llvm.fma.f64(double %160, double %151, double %162)\l  %164 = tail call double @llvm.fma.f64(double %160, double %153, double %163)\l  %165 = fadd double %161, %164\l  %166 = fsub double %165, %161\l  %167 = fsub double %164, %166\l  %168 = fsub double %143, %165\l  %169 = fsub double %143, %168\l  %170 = fsub double %169, %165\l  %171 = fsub double %170, %167\l  %172 = fadd double %145, %171\l  %173 = fadd double %168, %172\l  %174 = fmul double %159, %173\l  %175 = fadd double %160, %174\l  %176 = fcmp ogt double %31, 1.906250e+01\l  %177 = select i1 %176, double 1.000000e+00, double %175\l  %178 = fcmp olt double %31, 0x3E40000000000000\l  %179 = select i1 %178, double %31, double %177\l  %180 = tail call double @llvm.copysign.f64(double %179, double %30)\l  %181 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  store double %180, double addrspace(1)* %181, align 8, !tbaa !7\l  br label %182\l}"];
	Node0x6361ad0 -> Node0x6361b60;
	Node0x6361b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%182:\l182:                                              \l  ret void\l}"];
}
