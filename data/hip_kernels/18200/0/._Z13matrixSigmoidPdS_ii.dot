digraph "CFG for '_Z13matrixSigmoidPdS_ii' function" {
	label="CFG for '_Z13matrixSigmoidPdS_ii' function";

	Node0x4638c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4638c10:s0 -> Node0x463c6b0;
	Node0x4638c10:s1 -> Node0x463c740;
	Node0x463c6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %3\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fneg contract double %30\l  %32 = fmul double %30, 0xBFF71547652B82FE\l  %33 = tail call double @llvm.rint.f64(double %32)\l  %34 = fneg double %33\l  %35 = tail call double @llvm.fma.f64(double %34, double 0x3FE62E42FEFA39EF,\l... double %31)\l  %36 = tail call double @llvm.fma.f64(double %34, double 0x3C7ABC9E3B39803F,\l... double %35)\l  %37 = tail call double @llvm.fma.f64(double %36, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %38 = tail call double @llvm.fma.f64(double %36, double %37, double\l... 0x3EC71DEE623FDE64)\l  %39 = tail call double @llvm.fma.f64(double %36, double %38, double\l... 0x3EFA01997C89E6B0)\l  %40 = tail call double @llvm.fma.f64(double %36, double %39, double\l... 0x3F2A01A014761F6E)\l  %41 = tail call double @llvm.fma.f64(double %36, double %40, double\l... 0x3F56C16C1852B7B0)\l  %42 = tail call double @llvm.fma.f64(double %36, double %41, double\l... 0x3F81111111122322)\l  %43 = tail call double @llvm.fma.f64(double %36, double %42, double\l... 0x3FA55555555502A1)\l  %44 = tail call double @llvm.fma.f64(double %36, double %43, double\l... 0x3FC5555555555511)\l  %45 = tail call double @llvm.fma.f64(double %36, double %44, double\l... 0x3FE000000000000B)\l  %46 = tail call double @llvm.fma.f64(double %36, double %45, double\l... 1.000000e+00)\l  %47 = tail call double @llvm.fma.f64(double %36, double %46, double\l... 1.000000e+00)\l  %48 = fptosi double %33 to i32\l  %49 = tail call double @llvm.amdgcn.ldexp.f64(double %47, i32 %48)\l  %50 = fcmp olt double %30, -1.024000e+03\l  %51 = fcmp ogt double %30, 1.075000e+03\l  %52 = fadd contract double %49, 1.000000e+00\l  %53 = fdiv contract double 1.000000e+00, %52\l  %54 = select i1 %50, double 0.000000e+00, double %53\l  %55 = select i1 %51, double 1.000000e+00, double %54\l  %56 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  store double %55, double addrspace(1)* %56, align 8, !tbaa !7\l  br label %57\l}"];
	Node0x463c6b0 -> Node0x463c740;
	Node0x463c740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
