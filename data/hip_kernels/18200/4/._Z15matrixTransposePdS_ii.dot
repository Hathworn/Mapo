digraph "CFG for '_Z15matrixTransposePdS_ii' function" {
	label="CFG for '_Z15matrixTransposePdS_ii' function";

	Node0x46bf4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  %25 = icmp sgt i32 %3, 0\l  %26 = and i1 %24, %25\l  br i1 %26, label %27, label %121\l|{<s0>T|<s1>F}}"];
	Node0x46bf4e0:s0 -> Node0x46c30d0;
	Node0x46bf4e0:s1 -> Node0x46c3160;
	Node0x46c30d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %13, %3\l  %29 = add nsw i32 %28, %21\l  %30 = mul nsw i32 %21, %3\l  %31 = add nsw i32 %30, %13\l  %32 = and i32 %3, 7\l  %33 = icmp ult i32 %3, 8\l  br i1 %33, label %105, label %34\l|{<s0>T|<s1>F}}"];
	Node0x46c30d0:s0 -> Node0x46c1710;
	Node0x46c30d0:s1 -> Node0x46c37b0;
	Node0x46c37b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%34:\l34:                                               \l  %35 = and i32 %3, -8\l  br label %36\l}"];
	Node0x46c37b0 -> Node0x46c39b0;
	Node0x46c39b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%36:\l36:                                               \l  %37 = phi i32 [ 0, %34 ], [ %102, %36 ]\l  %38 = phi i32 [ 0, %34 ], [ %103, %36 ]\l  %39 = add nsw i32 %29, %37\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %0, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7\l  %43 = add nsw i32 %31, %37\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %1, i64 %44\l  store double %42, double addrspace(1)* %45, align 8, !tbaa !7\l  %46 = or i32 %37, 1\l  %47 = add nsw i32 %29, %46\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7\l  %51 = add nsw i32 %31, %46\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %1, i64 %52\l  store double %50, double addrspace(1)* %53, align 8, !tbaa !7\l  %54 = or i32 %37, 2\l  %55 = add nsw i32 %29, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %0, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7\l  %59 = add nsw i32 %31, %54\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %1, i64 %60\l  store double %58, double addrspace(1)* %61, align 8, !tbaa !7\l  %62 = or i32 %37, 3\l  %63 = add nsw i32 %29, %62\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %0, i64 %64\l  %66 = load double, double addrspace(1)* %65, align 8, !tbaa !7\l  %67 = add nsw i32 %31, %62\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  store double %66, double addrspace(1)* %69, align 8, !tbaa !7\l  %70 = or i32 %37, 4\l  %71 = add nsw i32 %29, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds double, double addrspace(1)* %0, i64 %72\l  %74 = load double, double addrspace(1)* %73, align 8, !tbaa !7\l  %75 = add nsw i32 %31, %70\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds double, double addrspace(1)* %1, i64 %76\l  store double %74, double addrspace(1)* %77, align 8, !tbaa !7\l  %78 = or i32 %37, 5\l  %79 = add nsw i32 %29, %78\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %0, i64 %80\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !7\l  %83 = add nsw i32 %31, %78\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %1, i64 %84\l  store double %82, double addrspace(1)* %85, align 8, !tbaa !7\l  %86 = or i32 %37, 6\l  %87 = add nsw i32 %29, %86\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %0, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !7\l  %91 = add nsw i32 %31, %86\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %1, i64 %92\l  store double %90, double addrspace(1)* %93, align 8, !tbaa !7\l  %94 = or i32 %37, 7\l  %95 = add nsw i32 %29, %94\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds double, double addrspace(1)* %0, i64 %96\l  %98 = load double, double addrspace(1)* %97, align 8, !tbaa !7\l  %99 = add nsw i32 %31, %94\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %1, i64 %100\l  store double %98, double addrspace(1)* %101, align 8, !tbaa !7\l  %102 = add nuw nsw i32 %37, 8\l  %103 = add i32 %38, 8\l  %104 = icmp eq i32 %103, %35\l  br i1 %104, label %105, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x46c39b0:s0 -> Node0x46c1710;
	Node0x46c39b0:s1 -> Node0x46c39b0;
	Node0x46c1710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%105:\l105:                                              \l  %106 = phi i32 [ 0, %27 ], [ %102, %36 ]\l  %107 = icmp eq i32 %32, 0\l  br i1 %107, label %121, label %108\l|{<s0>T|<s1>F}}"];
	Node0x46c1710:s0 -> Node0x46c3160;
	Node0x46c1710:s1 -> Node0x46c7160;
	Node0x46c7160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = phi i32 [ %118, %108 ], [ %106, %105 ]\l  %110 = phi i32 [ %119, %108 ], [ 0, %105 ]\l  %111 = add nsw i32 %29, %109\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %0, i64 %112\l  %114 = load double, double addrspace(1)* %113, align 8, !tbaa !7\l  %115 = add nsw i32 %31, %109\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %1, i64 %116\l  store double %114, double addrspace(1)* %117, align 8, !tbaa !7\l  %118 = add nuw nsw i32 %109, 1\l  %119 = add i32 %110, 1\l  %120 = icmp eq i32 %119, %32\l  br i1 %120, label %121, label %108, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x46c7160:s0 -> Node0x46c3160;
	Node0x46c7160:s1 -> Node0x46c7160;
	Node0x46c3160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%121:\l121:                                              \l  ret void\l}"];
}
