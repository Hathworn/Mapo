digraph "CFG for '_Z8erosion2PhS_iiii' function" {
	label="CFG for '_Z8erosion2PhS_iiii' function";

	Node0x475f9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add nsw i32 %21, %8\l  %23 = mul nsw i32 %22, %4\l  %24 = add i32 %15, %7\l  %25 = add i32 %24, %23\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %26\l  %28 = load i8, i8 addrspace(1)* %27, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %29 = add i32 %8, %3\l  %30 = shl nsw i32 %29, 7\l  %31 = add i32 %7, %2\l  %32 = add i32 %31, %30\l  %33 = getelementptr inbounds [16384 x i8], [16384 x i8] addrspace(3)*\l... @_ZZ8erosion2PhS_iiiiE9localData, i32 0, i32 %32\l  store i8 %28, i8 addrspace(3)* %33, align 1, !tbaa !7\l  %34 = icmp eq i32 %7, 0\l  br i1 %34, label %35, label %39\l|{<s0>T|<s1>F}}"];
	Node0x475f9c0:s0 -> Node0x47621b0;
	Node0x475f9c0:s1 -> Node0x47642f0;
	Node0x47621b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%35:\l35:                                               \l  %36 = sub nsw i32 %15, %2\l  %37 = tail call i32 @llvm.smax.i32(i32 %36, i32 0)\l  %38 = sub nsw i32 %37, %15\l  br label %49\l}"];
	Node0x47621b0 -> Node0x47646f0;
	Node0x47642f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%39:\l39:                                               \l  %40 = add nsw i32 %14, -1\l  %41 = icmp eq i32 %7, %40\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x47642f0:s0 -> Node0x4764940;
	Node0x47642f0:s1 -> Node0x47646f0;
	Node0x4764940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%42:\l42:                                               \l  %43 = xor i32 %15, -1\l  %44 = add i32 %43, %4\l  %45 = sitofp i32 %44 to double\l  %46 = uitofp i32 %31 to double\l  %47 = tail call double @llvm.minnum.f64(double %45, double %46)\l  %48 = fptosi double %47 to i32\l  br label %49\l}"];
	Node0x4764940 -> Node0x47646f0;
	Node0x47646f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%49:\l49:                                               \l  %50 = phi i32 [ %38, %35 ], [ %7, %42 ], [ %7, %39 ]\l  %51 = phi i32 [ 0, %35 ], [ %48, %42 ], [ %7, %39 ]\l  %52 = icmp eq i32 %8, 0\l  br i1 %52, label %53, label %57\l|{<s0>T|<s1>F}}"];
	Node0x47646f0:s0 -> Node0x4765150;
	Node0x47646f0:s1 -> Node0x47651a0;
	Node0x4765150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%53:\l53:                                               \l  %54 = sub nsw i32 %21, %3\l  %55 = tail call i32 @llvm.smax.i32(i32 %54, i32 0)\l  %56 = sub nsw i32 %55, %21\l  br label %67\l}"];
	Node0x4765150 -> Node0x4765570;
	Node0x47651a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%57:\l57:                                               \l  %58 = add nsw i32 %20, -1\l  %59 = icmp eq i32 %8, %58\l  br i1 %59, label %60, label %67\l|{<s0>T|<s1>F}}"];
	Node0x47651a0:s0 -> Node0x4765750;
	Node0x47651a0:s1 -> Node0x4765570;
	Node0x4765750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%60:\l60:                                               \l  %61 = xor i32 %21, -1\l  %62 = add i32 %61, %5\l  %63 = sitofp i32 %62 to double\l  %64 = uitofp i32 %29 to double\l  %65 = tail call double @llvm.minnum.f64(double %63, double %64)\l  %66 = fptosi double %65 to i32\l  br label %67\l}"];
	Node0x4765750 -> Node0x4765570;
	Node0x4765570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%67:\l67:                                               \l  %68 = phi i32 [ %56, %53 ], [ %8, %60 ], [ %8, %57 ]\l  %69 = phi i32 [ 0, %53 ], [ %66, %60 ], [ %8, %57 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = icmp sgt i32 %68, %69\l  br i1 %70, label %82, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4765570:s0 -> Node0x4766310;
	Node0x4765570:s1 -> Node0x4766360;
	Node0x4766360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%71:\l71:                                               \l  %72 = icmp sgt i32 %50, %51\l  br label %73\l}"];
	Node0x4766360 -> Node0x4766530;
	Node0x4766530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%73:\l73:                                               \l  %74 = phi i32 [ %68, %71 ], [ %88, %87 ]\l  br i1 %72, label %87, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4766530:s0 -> Node0x47665f0;
	Node0x4766530:s1 -> Node0x4766730;
	Node0x4766730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%75:\l75:                                               \l  %76 = add nsw i32 %74, %21\l  %77 = mul nsw i32 %76, %4\l  %78 = add nsw i32 %77, %15\l  %79 = add nsw i32 %74, %3\l  %80 = shl nsw i32 %79, 7\l  %81 = add nsw i32 %80, %2\l  br label %90\l}"];
	Node0x4766730 -> Node0x4766bd0;
	Node0x4766310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = sub nsw i32 %7, %2\l  %84 = sub nsw i32 %8, %3\l  %85 = add nsw i32 %15, %83\l  %86 = icmp slt i32 %85, 0\l  br i1 %86, label %106, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4766310:s0 -> Node0x47670b0;
	Node0x4766310:s1 -> Node0x4767100;
	Node0x47665f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%87:\l87:                                               \l  %88 = add nsw i32 %74, 1\l  %89 = icmp slt i32 %74, %69\l  br i1 %89, label %73, label %82, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x47665f0:s0 -> Node0x4766530;
	Node0x47665f0:s1 -> Node0x4766310;
	Node0x4766bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %50, %75 ], [ %98, %90 ]\l  %92 = add nsw i32 %78, %91\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %93\l  %95 = load i8, i8 addrspace(1)* %94, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %96 = add nsw i32 %81, %91\l  %97 = getelementptr inbounds [16384 x i8], [16384 x i8] addrspace(3)*\l... @_ZZ8erosion2PhS_iiiiE9localData, i32 0, i32 %96\l  store i8 %95, i8 addrspace(3)* %97, align 1, !tbaa !7\l  %98 = add nsw i32 %91, 1\l  %99 = icmp slt i32 %91, %51\l  br i1 %99, label %90, label %87, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4766bd0:s0 -> Node0x4766bd0;
	Node0x4766bd0:s1 -> Node0x47665f0;
	Node0x4767100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%100:\l100:                                              \l  %101 = add nsw i32 %15, %31\l  %102 = icmp slt i32 %101, %4\l  %103 = xor i32 %15, -1\l  %104 = add i32 %103, %4\l  %105 = select i1 %102, i32 %31, i32 %104\l  br label %106\l}"];
	Node0x4767100 -> Node0x47670b0;
	Node0x47670b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%106:\l106:                                              \l  %107 = phi i32 [ 0, %82 ], [ %83, %100 ]\l  %108 = phi i32 [ %31, %82 ], [ %105, %100 ]\l  %109 = add nsw i32 %21, %84\l  %110 = icmp slt i32 %109, 0\l  br i1 %110, label %117, label %111\l|{<s0>T|<s1>F}}"];
	Node0x47670b0:s0 -> Node0x4768270;
	Node0x47670b0:s1 -> Node0x47682c0;
	Node0x47682c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%111:\l111:                                              \l  %112 = add nsw i32 %21, %29\l  %113 = icmp slt i32 %112, %5\l  %114 = xor i32 %21, -1\l  %115 = add i32 %114, %5\l  %116 = select i1 %113, i32 %29, i32 %115\l  br label %117\l}"];
	Node0x47682c0 -> Node0x4768270;
	Node0x4768270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%117:\l117:                                              \l  %118 = phi i32 [ 0, %106 ], [ %84, %111 ]\l  %119 = phi i32 [ %29, %106 ], [ %116, %111 ]\l  %120 = icmp sgt i32 %118, %119\l  br i1 %120, label %130, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4768270:s0 -> Node0x4768910;
	Node0x4768270:s1 -> Node0x4768960;
	Node0x4768960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%121:\l121:                                              \l  %122 = icmp sgt i32 %107, %108\l  br label %123\l}"];
	Node0x4768960 -> Node0x4768af0;
	Node0x4768af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%123:\l123:                                              \l  %124 = phi i32 [ %118, %121 ], [ %135, %133 ]\l  %125 = phi i8 [ -1, %121 ], [ %134, %133 ]\l  br i1 %122, label %133, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4768af0:s0 -> Node0x4768bb0;
	Node0x4768af0:s1 -> Node0x4768e10;
	Node0x4768e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%126:\l126:                                              \l  %127 = add nsw i32 %124, %3\l  %128 = shl nsw i32 %127, 7\l  %129 = add nsw i32 %128, %2\l  br label %137\l}"];
	Node0x4768e10 -> Node0x4765ae0;
	Node0x4768910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%130:\l130:                                              \l  %131 = phi i8 [ -1, %117 ], [ %134, %133 ]\l  %132 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %26\l  store i8 %131, i8 addrspace(1)* %132, align 1, !tbaa !7\l  ret void\l}"];
	Node0x4768bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%133:\l133:                                              \l  %134 = phi i8 [ %125, %123 ], [ %143, %137 ]\l  %135 = add nsw i32 %124, 1\l  %136 = icmp slt i32 %124, %119\l  br i1 %136, label %123, label %130, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4768bb0:s0 -> Node0x4768af0;
	Node0x4768bb0:s1 -> Node0x4768910;
	Node0x4765ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi i32 [ %107, %126 ], [ %144, %137 ]\l  %139 = phi i8 [ %125, %126 ], [ %143, %137 ]\l  %140 = add nsw i32 %129, %138\l  %141 = getelementptr inbounds [16384 x i8], [16384 x i8] addrspace(3)*\l... @_ZZ8erosion2PhS_iiiiE9localData, i32 0, i32 %140\l  %142 = load i8, i8 addrspace(3)* %141, align 1, !tbaa !7\l  %143 = tail call i8 @llvm.umin.i8(i8 %139, i8 %142)\l  %144 = add nsw i32 %138, 1\l  %145 = icmp slt i32 %138, %108\l  br i1 %145, label %137, label %133, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4765ae0:s0 -> Node0x4765ae0;
	Node0x4765ae0:s1 -> Node0x4768bb0;
}
