digraph "CFG for '_Z15calculateEvalueiidddPKiS0_S0_Pd' function" {
	label="CFG for '_Z15calculateEvalueiidddPKiS0_S0_Pd' function";

	Node0x456c130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %14\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %1\l  br i1 %19, label %20, label %60\l|{<s0>T|<s1>F}}"];
	Node0x456c130:s0 -> Node0x456ebc0;
	Node0x456c130:s1 -> Node0x456ec50;
	Node0x456ebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = sext i32 %18 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %24 = sub nsw i32 %23, %0\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %21\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %30 = fmul contract double %2, %3\l  %31 = sitofp i32 %27 to double\l  %32 = fmul contract double %30, %31\l  %33 = fneg contract double %4\l  %34 = sitofp i32 %29 to double\l  %35 = fmul contract double %33, %34\l  %36 = fmul double %35, 0x3FF71547652B82FE\l  %37 = tail call double @llvm.rint.f64(double %36)\l  %38 = fneg double %37\l  %39 = tail call double @llvm.fma.f64(double %38, double 0x3FE62E42FEFA39EF,\l... double %35)\l  %40 = tail call double @llvm.fma.f64(double %38, double 0x3C7ABC9E3B39803F,\l... double %39)\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %42 = tail call double @llvm.fma.f64(double %40, double %41, double\l... 0x3EC71DEE623FDE64)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double\l... 0x3EFA01997C89E6B0)\l  %44 = tail call double @llvm.fma.f64(double %40, double %43, double\l... 0x3F2A01A014761F6E)\l  %45 = tail call double @llvm.fma.f64(double %40, double %44, double\l... 0x3F56C16C1852B7B0)\l  %46 = tail call double @llvm.fma.f64(double %40, double %45, double\l... 0x3F81111111122322)\l  %47 = tail call double @llvm.fma.f64(double %40, double %46, double\l... 0x3FA55555555502A1)\l  %48 = tail call double @llvm.fma.f64(double %40, double %47, double\l... 0x3FC5555555555511)\l  %49 = tail call double @llvm.fma.f64(double %40, double %48, double\l... 0x3FE000000000000B)\l  %50 = tail call double @llvm.fma.f64(double %40, double %49, double\l... 1.000000e+00)\l  %51 = tail call double @llvm.fma.f64(double %40, double %50, double\l... 1.000000e+00)\l  %52 = fptosi double %37 to i32\l  %53 = tail call double @llvm.amdgcn.ldexp.f64(double %51, i32 %52)\l  %54 = fcmp ogt double %35, 1.024000e+03\l  %55 = select i1 %54, double 0x7FF0000000000000, double %53\l  %56 = fcmp olt double %35, -1.075000e+03\l  %57 = select i1 %56, double 0.000000e+00, double %55\l  %58 = fmul contract double %32, %57\l  %59 = getelementptr inbounds double, double addrspace(1)* %8, i64 %21\l  store double %58, double addrspace(1)* %59, align 8, !tbaa !11\l  br label %60\l}"];
	Node0x456ebc0 -> Node0x456ec50;
	Node0x456ec50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  ret void\l}"];
}
