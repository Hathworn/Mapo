digraph "CFG for '_Z13writeSeedListiPKiS0_S0_S0_S0_S0_S0_S0_PiS1_S1_S1_' function" {
	label="CFG for '_Z13writeSeedListiPKiS0_S0_S0_S0_S0_S0_S0_PiS1_S1_S1_' function";

	Node0x502c6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%13:\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %15, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !4\l  %19 = getelementptr i8, i8 addrspace(4)* %15, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !13, !invariant.load\l... !14\l  %22 = zext i16 %21 to i32\l  %23 = udiv i32 %18, %22\l  %24 = mul i32 %23, %22\l  %25 = icmp ugt i32 %18, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %14\l  %29 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %30 = add i32 %28, %29\l  %31 = mul i32 %30, %22\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %33 = add i32 %31, %32\l  %34 = icmp slt i32 %33, %0\l  br i1 %34, label %35, label %146\l|{<s0>T|<s1>F}}"];
	Node0x502c6a0:s0 -> Node0x502dec0;
	Node0x502c6a0:s1 -> Node0x502fcc0;
	Node0x502dec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %7, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %36\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %36\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %43 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %36\l  %44 = load i32, i32 addrspace(1)* %43, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !16, !amdgpu.noclobber\l... !14\l  %47 = icmp sgt i32 %44, 0\l  br i1 %47, label %48, label %146\l|{<s0>T|<s1>F}}"];
	Node0x502dec0:s0 -> Node0x50312f0;
	Node0x502dec0:s1 -> Node0x502fcc0;
	Node0x50312f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%48:\l48:                                               \l  %49 = and i32 %44, 3\l  %50 = icmp ult i32 %44, 4\l  br i1 %50, label %122, label %51\l|{<s0>T|<s1>F}}"];
	Node0x50312f0:s0 -> Node0x5031580;
	Node0x50312f0:s1 -> Node0x50315d0;
	Node0x50315d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%51:\l51:                                               \l  %52 = and i32 %44, -4\l  br label %53\l}"];
	Node0x50315d0 -> Node0x50317d0;
	Node0x50317d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %51 ], [ %119, %53 ]\l  %55 = phi i32 [ 0, %51 ], [ %120, %53 ]\l  %56 = add nsw i32 %54, %42\l  %57 = add nsw i32 %54, %46\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !16\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %61\l  %63 = load i32, i32 addrspace(1)* %62, align 4, !tbaa !16\l  %64 = sext i32 %56 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %64\l  store i32 %63, i32 addrspace(1)* %65, align 4, !tbaa !16\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %61\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !16\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %64\l  store i32 %67, i32 addrspace(1)* %68, align 4, !tbaa !16\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %64\l  store i32 %38, i32 addrspace(1)* %69, align 4, !tbaa !16\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %64\l  store i32 %40, i32 addrspace(1)* %70, align 4, !tbaa !16\l  %71 = or i32 %54, 1\l  %72 = add nsw i32 %71, %42\l  %73 = add nsw i32 %71, %46\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %74\l  %76 = load i32, i32 addrspace(1)* %75, align 4, !tbaa !16\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !16\l  %80 = sext i32 %72 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %80\l  store i32 %79, i32 addrspace(1)* %81, align 4, !tbaa !16\l  %82 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %77\l  %83 = load i32, i32 addrspace(1)* %82, align 4, !tbaa !16\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %80\l  store i32 %83, i32 addrspace(1)* %84, align 4, !tbaa !16\l  %85 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %80\l  store i32 %38, i32 addrspace(1)* %85, align 4, !tbaa !16\l  %86 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %80\l  store i32 %40, i32 addrspace(1)* %86, align 4, !tbaa !16\l  %87 = or i32 %54, 2\l  %88 = add nsw i32 %87, %42\l  %89 = add nsw i32 %87, %46\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !16\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !16\l  %96 = sext i32 %88 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %96\l  store i32 %95, i32 addrspace(1)* %97, align 4, !tbaa !16\l  %98 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %93\l  %99 = load i32, i32 addrspace(1)* %98, align 4, !tbaa !16\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %96\l  store i32 %99, i32 addrspace(1)* %100, align 4, !tbaa !16\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %96\l  store i32 %38, i32 addrspace(1)* %101, align 4, !tbaa !16\l  %102 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %96\l  store i32 %40, i32 addrspace(1)* %102, align 4, !tbaa !16\l  %103 = or i32 %54, 3\l  %104 = add nsw i32 %103, %42\l  %105 = add nsw i32 %103, %46\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %106\l  %108 = load i32, i32 addrspace(1)* %107, align 4, !tbaa !16\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %109\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !16\l  %112 = sext i32 %104 to i64\l  %113 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %112\l  store i32 %111, i32 addrspace(1)* %113, align 4, !tbaa !16\l  %114 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %109\l  %115 = load i32, i32 addrspace(1)* %114, align 4, !tbaa !16\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %112\l  store i32 %115, i32 addrspace(1)* %116, align 4, !tbaa !16\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %112\l  store i32 %38, i32 addrspace(1)* %117, align 4, !tbaa !16\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %112\l  store i32 %40, i32 addrspace(1)* %118, align 4, !tbaa !16\l  %119 = add nuw nsw i32 %54, 4\l  %120 = add i32 %55, 4\l  %121 = icmp eq i32 %120, %52\l  br i1 %121, label %122, label %53, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50317d0:s0 -> Node0x5031580;
	Node0x50317d0:s1 -> Node0x50317d0;
	Node0x5031580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%122:\l122:                                              \l  %123 = phi i32 [ 0, %48 ], [ %119, %53 ]\l  %124 = icmp eq i32 %49, 0\l  br i1 %124, label %146, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5031580:s0 -> Node0x502fcc0;
	Node0x5031580:s1 -> Node0x5034cb0;
	Node0x5034cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%125:\l125:                                              \l  %126 = phi i32 [ %143, %125 ], [ %123, %122 ]\l  %127 = phi i32 [ %144, %125 ], [ 0, %122 ]\l  %128 = add nsw i32 %126, %42\l  %129 = add nsw i32 %126, %46\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %130\l  %132 = load i32, i32 addrspace(1)* %131, align 4, !tbaa !16\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %133\l  %135 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !16\l  %136 = sext i32 %128 to i64\l  %137 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %136\l  store i32 %135, i32 addrspace(1)* %137, align 4, !tbaa !16\l  %138 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %133\l  %139 = load i32, i32 addrspace(1)* %138, align 4, !tbaa !16\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %10, i64 %136\l  store i32 %139, i32 addrspace(1)* %140, align 4, !tbaa !16\l  %141 = getelementptr inbounds i32, i32 addrspace(1)* %11, i64 %136\l  store i32 %38, i32 addrspace(1)* %141, align 4, !tbaa !16\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %12, i64 %136\l  store i32 %40, i32 addrspace(1)* %142, align 4, !tbaa !16\l  %143 = add nuw nsw i32 %126, 1\l  %144 = add i32 %127, 1\l  %145 = icmp eq i32 %144, %49\l  br i1 %145, label %146, label %125, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5034cb0:s0 -> Node0x502fcc0;
	Node0x5034cb0:s1 -> Node0x5034cb0;
	Node0x502fcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%146:\l146:                                              \l  ret void\l}"];
}
