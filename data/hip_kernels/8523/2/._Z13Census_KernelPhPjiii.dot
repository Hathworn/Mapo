digraph "CFG for '_Z13Census_KernelPhPjiii' function" {
	label="CFG for '_Z13Census_KernelPhPjiii' function";

	Node0x4a31dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %22, %3\l  %24 = add i32 %23, %14\l  %25 = icmp sgt i32 %14, 1\l  br i1 %25, label %26, label %268\l|{<s0>T|<s1>F}}"];
	Node0x4a31dd0:s0 -> Node0x4a35820;
	Node0x4a31dd0:s1 -> Node0x4a358b0;
	Node0x4a35820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%26:\l26:                                               \l  %27 = add nsw i32 %3, -2\l  %28 = icmp slt i32 %14, %27\l  %29 = icmp sgt i32 %22, 1\l  %30 = select i1 %28, i1 %29, i1 false\l  %31 = add nsw i32 %4, -2\l  %32 = icmp slt i32 %22, %31\l  %33 = select i1 %30, i1 %32, i1 false\l  br i1 %33, label %34, label %268\l|{<s0>T|<s1>F}}"];
	Node0x4a35820:s0 -> Node0x4a33f30;
	Node0x4a35820:s1 -> Node0x4a358b0;
	Node0x4a33f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%34:\l34:                                               \l  %35 = sext i32 %24 to i64\l  %36 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %35\l  %37 = load i8, i8 addrspace(1)* %36, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %38 = uitofp i8 %37 to float\l  %39 = sitofp i32 %2 to float\l  %40 = add nsw i32 %22, -1\l  %41 = mul nsw i32 %40, %3\l  %42 = add i32 %41, %14\l  %43 = add i32 %42, -1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %44\l  %46 = load i8, i8 addrspace(1)* %45, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %47 = uitofp i8 %46 to float\l  %48 = fsub contract float %38, %47\l  %49 = tail call float @llvm.fabs.f32(float %48)\l  %50 = fcmp contract ugt float %49, %39\l  %51 = fcmp contract ogt float %48, %39\l  %52 = select i1 %51, i32 8, i32 0\l  %53 = select i1 %50, i32 %52, i32 4\l  %54 = sext i32 %42 to i64\l  %55 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %54\l  %56 = load i8, i8 addrspace(1)* %55, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %57 = uitofp i8 %56 to float\l  %58 = fsub contract float %38, %57\l  %59 = tail call float @llvm.fabs.f32(float %58)\l  %60 = fcmp contract ugt float %59, %39\l  %61 = or i32 %53, 1\l  %62 = fcmp contract ogt float %58, %39\l  %63 = or i32 %53, 2\l  %64 = select i1 %62, i32 %63, i32 %53\l  %65 = select i1 %60, i32 %64, i32 %61\l  %66 = add i32 %42, 1\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %67\l  %69 = load i8, i8 addrspace(1)* %68, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %70 = uitofp i8 %69 to float\l  %71 = fsub contract float %38, %70\l  %72 = shl nuw nsw i32 %65, 2\l  %73 = tail call float @llvm.fabs.f32(float %71)\l  %74 = fcmp contract ugt float %73, %39\l  %75 = add nuw nsw i32 %72, 1\l  %76 = fcmp contract ogt float %71, %39\l  %77 = add nuw nsw i32 %72, 2\l  %78 = select i1 %76, i32 %77, i32 %72\l  %79 = select i1 %74, i32 %78, i32 %75\l  %80 = add i32 %24, -1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %81\l  %83 = load i8, i8 addrspace(1)* %82, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %84 = uitofp i8 %83 to float\l  %85 = fsub contract float %38, %84\l  %86 = shl nuw nsw i32 %79, 2\l  %87 = tail call float @llvm.fabs.f32(float %85)\l  %88 = fcmp contract ugt float %87, %39\l  %89 = add nuw nsw i32 %86, 1\l  %90 = fcmp contract ogt float %85, %39\l  %91 = add nuw nsw i32 %86, 2\l  %92 = select i1 %90, i32 %91, i32 %86\l  %93 = select i1 %88, i32 %92, i32 %89\l  %94 = add i32 %24, 1\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %95\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %98 = uitofp i8 %97 to float\l  %99 = fsub contract float %38, %98\l  %100 = shl nuw nsw i32 %93, 2\l  %101 = tail call float @llvm.fabs.f32(float %99)\l  %102 = fcmp contract ugt float %101, %39\l  %103 = add nuw nsw i32 %100, 1\l  %104 = fcmp contract ogt float %99, %39\l  %105 = add nuw nsw i32 %100, 2\l  %106 = select i1 %104, i32 %105, i32 %100\l  %107 = select i1 %102, i32 %106, i32 %103\l  %108 = add nuw nsw i32 %22, 1\l  %109 = mul nsw i32 %108, %3\l  %110 = add i32 %109, %14\l  %111 = add i32 %110, -1\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %112\l  %114 = load i8, i8 addrspace(1)* %113, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %115 = uitofp i8 %114 to float\l  %116 = fsub contract float %38, %115\l  %117 = shl nuw nsw i32 %107, 2\l  %118 = tail call float @llvm.fabs.f32(float %116)\l  %119 = fcmp contract ugt float %118, %39\l  %120 = add nuw nsw i32 %117, 1\l  %121 = fcmp contract ogt float %116, %39\l  %122 = add nuw nsw i32 %117, 2\l  %123 = select i1 %121, i32 %122, i32 %117\l  %124 = select i1 %119, i32 %123, i32 %120\l  %125 = sext i32 %110 to i64\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %125\l  %127 = load i8, i8 addrspace(1)* %126, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %128 = uitofp i8 %127 to float\l  %129 = fsub contract float %38, %128\l  %130 = shl nuw nsw i32 %124, 2\l  %131 = tail call float @llvm.fabs.f32(float %129)\l  %132 = fcmp contract ugt float %131, %39\l  %133 = add nuw nsw i32 %130, 1\l  %134 = fcmp contract ogt float %129, %39\l  %135 = add nuw nsw i32 %130, 2\l  %136 = select i1 %134, i32 %135, i32 %130\l  %137 = select i1 %132, i32 %136, i32 %133\l  %138 = add i32 %110, 1\l  %139 = sext i32 %138 to i64\l  %140 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %139\l  %141 = load i8, i8 addrspace(1)* %140, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %142 = uitofp i8 %141 to float\l  %143 = fsub contract float %38, %142\l  %144 = shl nuw nsw i32 %137, 2\l  %145 = tail call float @llvm.fabs.f32(float %143)\l  %146 = fcmp contract ugt float %145, %39\l  %147 = add nuw nsw i32 %144, 1\l  %148 = fcmp contract ogt float %143, %39\l  %149 = add nuw nsw i32 %144, 2\l  %150 = select i1 %148, i32 %149, i32 %144\l  %151 = select i1 %146, i32 %150, i32 %147\l  %152 = add nsw i32 %22, -2\l  %153 = mul nsw i32 %152, %3\l  %154 = add i32 %153, %14\l  %155 = add i32 %154, -2\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %156\l  %158 = load i8, i8 addrspace(1)* %157, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %159 = uitofp i8 %158 to float\l  %160 = fsub contract float %38, %159\l  %161 = shl nuw nsw i32 %151, 2\l  %162 = tail call float @llvm.fabs.f32(float %160)\l  %163 = fcmp contract ugt float %162, %39\l  %164 = add nuw nsw i32 %161, 1\l  %165 = fcmp contract ogt float %160, %39\l  %166 = add nuw nsw i32 %161, 2\l  %167 = select i1 %165, i32 %166, i32 %161\l  %168 = select i1 %163, i32 %167, i32 %164\l  %169 = sext i32 %154 to i64\l  %170 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %169\l  %171 = load i8, i8 addrspace(1)* %170, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %172 = uitofp i8 %171 to float\l  %173 = fsub contract float %38, %172\l  %174 = shl nuw nsw i32 %168, 2\l  %175 = tail call float @llvm.fabs.f32(float %173)\l  %176 = fcmp contract ugt float %175, %39\l  %177 = add nuw nsw i32 %174, 1\l  %178 = fcmp contract ogt float %173, %39\l  %179 = add nuw nsw i32 %174, 2\l  %180 = select i1 %178, i32 %179, i32 %174\l  %181 = select i1 %176, i32 %180, i32 %177\l  %182 = add i32 %154, 2\l  %183 = sext i32 %182 to i64\l  %184 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %183\l  %185 = load i8, i8 addrspace(1)* %184, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %186 = uitofp i8 %185 to float\l  %187 = fsub contract float %38, %186\l  %188 = shl nuw nsw i32 %181, 2\l  %189 = tail call float @llvm.fabs.f32(float %187)\l  %190 = fcmp contract ugt float %189, %39\l  %191 = add nuw nsw i32 %188, 1\l  %192 = fcmp contract ogt float %187, %39\l  %193 = add nuw nsw i32 %188, 2\l  %194 = select i1 %192, i32 %193, i32 %188\l  %195 = select i1 %190, i32 %194, i32 %191\l  %196 = add i32 %24, -2\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %197\l  %199 = load i8, i8 addrspace(1)* %198, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %200 = uitofp i8 %199 to float\l  %201 = fsub contract float %38, %200\l  %202 = shl nuw nsw i32 %195, 2\l  %203 = tail call float @llvm.fabs.f32(float %201)\l  %204 = fcmp contract ugt float %203, %39\l  %205 = add nuw nsw i32 %202, 1\l  %206 = fcmp contract ogt float %201, %39\l  %207 = add nuw nsw i32 %202, 2\l  %208 = select i1 %206, i32 %207, i32 %202\l  %209 = select i1 %204, i32 %208, i32 %205\l  %210 = add i32 %24, 2\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %211\l  %213 = load i8, i8 addrspace(1)* %212, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %214 = uitofp i8 %213 to float\l  %215 = fsub contract float %38, %214\l  %216 = shl nuw nsw i32 %209, 2\l  %217 = tail call float @llvm.fabs.f32(float %215)\l  %218 = fcmp contract ugt float %217, %39\l  %219 = add nuw nsw i32 %216, 1\l  %220 = fcmp contract ogt float %215, %39\l  %221 = add nuw nsw i32 %216, 2\l  %222 = select i1 %220, i32 %221, i32 %216\l  %223 = select i1 %218, i32 %222, i32 %219\l  %224 = add nuw nsw i32 %22, 2\l  %225 = mul nsw i32 %224, %3\l  %226 = add i32 %225, %14\l  %227 = add i32 %226, -2\l  %228 = sext i32 %227 to i64\l  %229 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %228\l  %230 = load i8, i8 addrspace(1)* %229, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %231 = uitofp i8 %230 to float\l  %232 = fsub contract float %38, %231\l  %233 = shl nuw nsw i32 %223, 2\l  %234 = tail call float @llvm.fabs.f32(float %232)\l  %235 = fcmp contract ugt float %234, %39\l  %236 = add nuw nsw i32 %233, 1\l  %237 = fcmp contract ogt float %232, %39\l  %238 = add nuw nsw i32 %233, 2\l  %239 = select i1 %237, i32 %238, i32 %233\l  %240 = select i1 %235, i32 %239, i32 %236\l  %241 = sext i32 %226 to i64\l  %242 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %241\l  %243 = load i8, i8 addrspace(1)* %242, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %244 = uitofp i8 %243 to float\l  %245 = fsub contract float %38, %244\l  %246 = shl nuw nsw i32 %240, 2\l  %247 = tail call float @llvm.fabs.f32(float %245)\l  %248 = fcmp contract ugt float %247, %39\l  %249 = add nuw nsw i32 %246, 1\l  %250 = fcmp contract ogt float %245, %39\l  %251 = add nuw nsw i32 %246, 2\l  %252 = select i1 %250, i32 %251, i32 %246\l  %253 = select i1 %248, i32 %252, i32 %249\l  %254 = add i32 %226, 2\l  %255 = sext i32 %254 to i64\l  %256 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %255\l  %257 = load i8, i8 addrspace(1)* %256, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %258 = uitofp i8 %257 to float\l  %259 = fsub contract float %38, %258\l  %260 = shl nuw i32 %253, 2\l  %261 = tail call float @llvm.fabs.f32(float %259)\l  %262 = fcmp contract ugt float %261, %39\l  %263 = add nuw nsw i32 %260, 1\l  %264 = fcmp contract ogt float %259, %39\l  %265 = add nuw nsw i32 %260, 2\l  %266 = select i1 %264, i32 %265, i32 %260\l  %267 = select i1 %262, i32 %266, i32 %263\l  br label %278\l}"];
	Node0x4a33f30 -> Node0x4a3ab30;
	Node0x4a358b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%268:\l268:                                              \l  %269 = icmp sgt i32 %14, -1\l  br i1 %269, label %270, label %282\l|{<s0>T|<s1>F}}"];
	Node0x4a358b0:s0 -> Node0x4a40610;
	Node0x4a358b0:s1 -> Node0x4a40660;
	Node0x4a40610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%270:\l270:                                              \l  %271 = icmp slt i32 %14, %3\l  %272 = icmp sgt i32 %22, -1\l  %273 = select i1 %271, i1 %272, i1 false\l  %274 = icmp slt i32 %22, %4\l  %275 = select i1 %273, i1 %274, i1 false\l  br i1 %275, label %276, label %282\l|{<s0>T|<s1>F}}"];
	Node0x4a40610:s0 -> Node0x4a40a70;
	Node0x4a40610:s1 -> Node0x4a40660;
	Node0x4a40a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%276:\l276:                                              \l  %277 = sext i32 %24 to i64\l  br label %278\l}"];
	Node0x4a40a70 -> Node0x4a3ab30;
	Node0x4a3ab30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%278:\l278:                                              \l  %279 = phi i64 [ %277, %276 ], [ %35, %34 ]\l  %280 = phi i32 [ 0, %276 ], [ %267, %34 ]\l  %281 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %279\l  store i32 %280, i32 addrspace(1)* %281, align 4, !tbaa !10\l  br label %282\l}"];
	Node0x4a3ab30 -> Node0x4a40660;
	Node0x4a40660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%282:\l282:                                              \l  ret void\l}"];
}
