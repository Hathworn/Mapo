digraph "CFG for '_Z6reducePiS_' function" {
	label="CFG for '_Z6reducePiS_' function";

	Node0x573c110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = add i32 %10, %3\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %12\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %15 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ6reducePiS_E5cache, i32 0, i32 %3\l  store i32 %14, i32 addrspace(3)* %15, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %16 = icmp ult i16 %8, 2\l  br i1 %16, label %32, label %17\l|{<s0>T|<s1>F}}"];
	Node0x573c110:s0 -> Node0x573ddf0;
	Node0x573c110:s1 -> Node0x573f520;
	Node0x573f520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = lshr i32 %9, 1\l  br label %19\l}"];
	Node0x573f520 -> Node0x573f720;
	Node0x573f720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%19:\l19:                                               \l  %20 = phi i32 [ %29, %28 ], [ %18, %17 ]\l  %21 = icmp slt i32 %3, %20\l  br i1 %21, label %22, label %28\l|{<s0>T|<s1>F}}"];
	Node0x573f720:s0 -> Node0x573f9e0;
	Node0x573f720:s1 -> Node0x573f810;
	Node0x573f9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%22:\l22:                                               \l  %23 = add nsw i32 %20, %3\l  %24 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ6reducePiS_E5cache, i32 0, i32 %23\l  %25 = load i32, i32 addrspace(3)* %24, align 4, !tbaa !7\l  %26 = load i32, i32 addrspace(3)* %15, align 4, !tbaa !7\l  %27 = add nsw i32 %26, %25\l  store i32 %27, i32 addrspace(3)* %15, align 4, !tbaa !7\l  br label %28\l}"];
	Node0x573f9e0 -> Node0x573f810;
	Node0x573f810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %29 = sdiv i32 %20, 2\l  %30 = add nsw i32 %20, 1\l  %31 = icmp ult i32 %30, 3\l  br i1 %31, label %32, label %19, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x573f810:s0 -> Node0x573ddf0;
	Node0x573f810:s1 -> Node0x573f720;
	Node0x573ddf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%32:\l32:                                               \l  %33 = icmp eq i32 %3, 0\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x573ddf0:s0 -> Node0x573f4a0;
	Node0x573ddf0:s1 -> Node0x57405b0;
	Node0x573f4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%34:\l34:                                               \l  %35 = load i32, i32 addrspace(3)* getelementptr inbounds ([256 x i32], [256\l... x i32] addrspace(3)* @_ZZ6reducePiS_E5cache, i32 0, i32 0), align 16, !tbaa !7\l  store i32 %35, i32 addrspace(1)* %1, align 4, !tbaa !7\l  br label %36\l}"];
	Node0x573f4a0 -> Node0x57405b0;
	Node0x57405b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%36:\l36:                                               \l  ret void\l}"];
}
