digraph "CFG for '_Z33r_final_sum_and_alpha_calculationPfS_i' function" {
	label="CFG for '_Z33r_final_sum_and_alpha_calculationPfS_i' function";

	Node0x585a8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = icmp slt i32 %4, %2\l  br i1 %5, label %6, label %12\l|{<s0>T|<s1>F}}"];
	Node0x585a8f0:s0 -> Node0x585b7a0;
	Node0x585a8f0:s1 -> Node0x585b830;
	Node0x585b7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%6:\l6:                                                \l  %7 = zext i32 %4 to i64\l  %8 = getelementptr inbounds float, float addrspace(1)* %0, i64 %7\l  %9 = load float, float addrspace(1)* %8, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %10 = getelementptr inbounds float, float addrspace(1)* %1, i64 %7\l  %11 = load float, float addrspace(1)* %10, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  br label %12\l}"];
	Node0x585b7a0 -> Node0x585b830;
	Node0x585b830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%12:\l12:                                               \l  %13 = phi float [ %9, %6 ], [ 0.000000e+00, %3 ]\l  %14 = phi float [ %11, %6 ], [ 0.000000e+00, %3 ]\l  %15 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE16shared_r_squared, i32 0, i32 %4\l  store float %13, float addrspace(3)* %15, align 4\l  %16 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE12shared_p_sum, i32 0, i32 %4\l  store float %14, float addrspace(3)* %16, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !10, !invariant.load\l... !9\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = icmp ult i16 %20, 2\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x585b830:s0 -> Node0x585ebe0;
	Node0x585b830:s1 -> Node0x585ec70;
	Node0x585ec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%23:\l23:                                               \l  %24 = zext i16 %20 to i32\l  br label %27\l}"];
	Node0x585ec70 -> Node0x585ee20;
	Node0x585ebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%25:\l25:                                               \l  %26 = icmp eq i32 %4, 0\l  br i1 %26, label %43, label %49\l|{<s0>T|<s1>F}}"];
	Node0x585ebe0:s0 -> Node0x585ef70;
	Node0x585ebe0:s1 -> Node0x585efc0;
	Node0x585ee20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%27:\l27:                                               \l  %28 = phi i32 [ %24, %23 ], [ %29, %41 ]\l  %29 = lshr i32 %28, 1\l  %30 = icmp ult i32 %4, %29\l  br i1 %30, label %31, label %41\l|{<s0>T|<s1>F}}"];
	Node0x585ee20:s0 -> Node0x585f360;
	Node0x585ee20:s1 -> Node0x585f130;
	Node0x585f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%31:\l31:                                               \l  %32 = load float, float addrspace(3)* %15, align 4, !tbaa !5\l  %33 = add nuw nsw i32 %29, %4\l  %34 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE16shared_r_squared, i32 0, i32\l... %33\l  %35 = load float, float addrspace(3)* %34, align 4, !tbaa !5\l  %36 = fadd contract float %32, %35\l  store float %36, float addrspace(3)* %15, align 4, !tbaa !5\l  %37 = load float, float addrspace(3)* %16, align 4, !tbaa !5\l  %38 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE12shared_p_sum, i32 0, i32 %33\l  %39 = load float, float addrspace(3)* %38, align 4, !tbaa !5\l  %40 = fadd contract float %37, %39\l  store float %40, float addrspace(3)* %16, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %41\l}"];
	Node0x585f360 -> Node0x585f130;
	Node0x585f130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = icmp ult i32 %28, 4\l  br i1 %42, label %25, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x585f130:s0 -> Node0x585ebe0;
	Node0x585f130:s1 -> Node0x585ee20;
	Node0x585ef70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%43:\l43:                                               \l  %44 = load float, float addrspace(3)* getelementptr inbounds ([1024 x\l... float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE16shared_r_squared, i32 0, i32\l... 0), align 16, !tbaa !5\l  %45 = load float, float addrspace(3)* getelementptr inbounds ([1024 x\l... float], [1024 x float] addrspace(3)*\l... @_ZZ33r_final_sum_and_alpha_calculationPfS_iE12shared_p_sum, i32 0, i32 0),\l... align 16, !tbaa !5\l  %46 = fdiv contract float %44, %45\l  %47 = zext i32 %21 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !5\l  br label %49\l}"];
	Node0x585ef70 -> Node0x585efc0;
	Node0x585efc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%49:\l49:                                               \l  ret void\l}"];
}
