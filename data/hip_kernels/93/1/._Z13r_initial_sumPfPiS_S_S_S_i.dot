digraph "CFG for '_Z13r_initial_sumPfPiS_S_S_S_i' function" {
	label="CFG for '_Z13r_initial_sumPfPiS_S_S_S_i' function";

	Node0x62ad420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE16shared_r_squared, i32 0, i32 %15\l  store float 0.000000e+00, float addrspace(3)* %17, align 4, !tbaa !7\l  %18 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE12shared_p_sum, i32 0, i32 %15\l  store float 0.000000e+00, float addrspace(3)* %18, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = icmp slt i32 %16, %6\l  br i1 %19, label %20, label %61\l|{<s0>T|<s1>F}}"];
	Node0x62ad420:s0 -> Node0x62b0b00;
	Node0x62ad420:s1 -> Node0x62b0b90;
	Node0x62b0b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %16, 3\l  %22 = load float, float addrspace(3)* %18, align 4, !tbaa !7\l  %23 = sext i32 %21 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %0, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %23\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %3, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fmul contract float %25, %30\l  %32 = fadd contract float %22, %31\l  %33 = add nsw i32 %21, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %34\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %3, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract float %36, %41\l  %43 = fadd contract float %32, %42\l  %44 = add nsw i32 %21, 2\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %3, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fmul contract float %47, %52\l  %54 = fadd contract float %43, %53\l  store float %54, float addrspace(3)* %18, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = sext i32 %16 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fmul contract float %57, %57\l  store float %58, float addrspace(3)* %17, align 4, !tbaa !7\l  %59 = load float, float addrspace(3)* %18, align 4, !tbaa !7\l  %60 = fmul contract float %57, %59\l  store float %60, float addrspace(3)* %18, align 4, !tbaa !7\l  br label %61\l}"];
	Node0x62b0b00 -> Node0x62b0b90;
	Node0x62b0b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%61:\l61:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = icmp ult i16 %11, 2\l  br i1 %62, label %63, label %65\l|{<s0>T|<s1>F}}"];
	Node0x62b0b90:s0 -> Node0x62b38b0;
	Node0x62b0b90:s1 -> Node0x62b3900;
	Node0x62b38b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%63:\l63:                                               \l  %64 = icmp eq i32 %15, 0\l  br i1 %64, label %81, label %87\l|{<s0>T|<s1>F}}"];
	Node0x62b38b0:s0 -> Node0x62b1b40;
	Node0x62b38b0:s1 -> Node0x62b1b90;
	Node0x62b3900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  %66 = phi i32 [ %67, %79 ], [ %12, %61 ]\l  %67 = lshr i32 %66, 1\l  %68 = icmp ult i32 %15, %67\l  br i1 %68, label %69, label %79\l|{<s0>T|<s1>F}}"];
	Node0x62b3900:s0 -> Node0x62b40f0;
	Node0x62b3900:s1 -> Node0x62b1d00;
	Node0x62b40f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%69:\l69:                                               \l  %70 = load float, float addrspace(3)* %17, align 4, !tbaa !7\l  %71 = add nuw nsw i32 %67, %15\l  %72 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE16shared_r_squared, i32 0, i32 %71\l  %73 = load float, float addrspace(3)* %72, align 4, !tbaa !7\l  %74 = fadd contract float %70, %73\l  store float %74, float addrspace(3)* %17, align 4, !tbaa !7\l  %75 = load float, float addrspace(3)* %18, align 4, !tbaa !7\l  %76 = getelementptr inbounds [1024 x float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE12shared_p_sum, i32 0, i32 %71\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !7\l  %78 = fadd contract float %75, %77\l  store float %78, float addrspace(3)* %18, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %79\l}"];
	Node0x62b40f0 -> Node0x62b1d00;
	Node0x62b1d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  %80 = icmp ult i32 %66, 4\l  br i1 %80, label %63, label %65, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x62b1d00:s0 -> Node0x62b38b0;
	Node0x62b1d00:s1 -> Node0x62b3900;
	Node0x62b1b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%81:\l81:                                               \l  %82 = load float, float addrspace(3)* getelementptr inbounds ([1024 x\l... float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE16shared_r_squared, i32 0, i32 0), align 16,\l... !tbaa !7\l  %83 = zext i32 %13 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %4, i64 %83\l  store float %82, float addrspace(1)* %84, align 4, !tbaa !7\l  %85 = load float, float addrspace(3)* getelementptr inbounds ([1024 x\l... float], [1024 x float] addrspace(3)*\l... @_ZZ13r_initial_sumPfPiS_S_S_S_iE12shared_p_sum, i32 0, i32 0), align 16,\l... !tbaa !7\l  %86 = getelementptr inbounds float, float addrspace(1)* %5, i64 %83\l  store float %85, float addrspace(1)* %86, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %87\l}"];
	Node0x62b1b40 -> Node0x62b1b90;
	Node0x62b1b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%87:\l87:                                               \l  ret void\l}"];
}
