digraph "CFG for '_Z16jacobiFirstLocalPfPKfS1_PKiS1_i' function" {
	label="CFG for '_Z16jacobiFirstLocalPfPKfS1_PKiS1_i' function";

	Node0x537fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %54\l|{<s0>T|<s1>F}}"];
	Node0x537fa60:s0 -> Node0x537feb0;
	Node0x537fa60:s1 -> Node0x5381a80;
	Node0x537feb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = shl nsw i32 %15, 1\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = add nuw nsw i32 %21, 1\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %2, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %22\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %26\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %33 = getelementptr inbounds float, float addrspace(1)* %4, i64 %18\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %36 = sext i32 %30 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = sext i32 %32 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  br label %40\l}"];
	Node0x537feb0 -> Node0x5383eb0;
	Node0x5383eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %42 = fmul contract float %24, %41\l  %43 = fadd contract float %42, 0.000000e+00\l  %44 = load float, float addrspace(1)* %39, align 4, !tbaa !7\l  %45 = fmul contract float %28, %44\l  %46 = fadd contract float %43, %45\l  %47 = fsub contract float %34, %46\l  %48 = fdiv contract float %47, %20\l  %49 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %50 = fsub contract float %48, %49\l  store float %48, float addrspace(1)* %35, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = tail call float @llvm.fabs.f32(float %50)\l  %52 = fpext float %51 to double\l  %53 = fcmp contract ogt double %52, 1.000000e-05\l  br i1 %53, label %40, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5383eb0:s0 -> Node0x5383eb0;
	Node0x5383eb0:s1 -> Node0x5381a80;
	Node0x5381a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%54:\l54:                                               \l  ret void\l}"];
}
