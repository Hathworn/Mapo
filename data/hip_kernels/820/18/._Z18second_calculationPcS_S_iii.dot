digraph "CFG for '_Z18second_calculationPcS_S_iii' function" {
	label="CFG for '_Z18second_calculationPcS_S_iii' function";

	Node0x5658be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %5\l  br i1 %16, label %17, label %226\l|{<s0>T|<s1>F}}"];
	Node0x5658be0:s0 -> Node0x5658ff0;
	Node0x5658be0:s1 -> Node0x565abc0;
	Node0x5658ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%17:\l17:                                               \l  %18 = mul nsw i32 %5, %3\l  %19 = add i32 %15, %18\l  %20 = mul i32 %19, %5\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %21\l  %23 = load i8, i8 addrspace(1)* %22, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %24 = icmp slt i8 %23, 5\l  %25 = icmp sgt i32 %5, 0\l  br i1 %24, label %32, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5658ff0:s0 -> Node0x565b910;
	Node0x5658ff0:s1 -> Node0x565b9a0;
	Node0x565b9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  br i1 %25, label %27, label %226\l|{<s0>T|<s1>F}}"];
	Node0x565b9a0:s0 -> Node0x565bae0;
	Node0x565b9a0:s1 -> Node0x565abc0;
	Node0x565bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%27:\l27:                                               \l  %28 = and i32 %5, 7\l  %29 = icmp ult i32 %5, 8\l  br i1 %29, label %209, label %30\l|{<s0>T|<s1>F}}"];
	Node0x565bae0:s0 -> Node0x565bd60;
	Node0x565bae0:s1 -> Node0x565bdb0;
	Node0x565bdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %5, -8\l  br label %115\l}"];
	Node0x565bdb0 -> Node0x565bfb0;
	Node0x565b910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%32:\l32:                                               \l  br i1 %25, label %33, label %226\l|{<s0>T|<s1>F}}"];
	Node0x565b910:s0 -> Node0x565aab0;
	Node0x565b910:s1 -> Node0x565abc0;
	Node0x565aab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  %34 = and i32 %5, 7\l  %35 = icmp ult i32 %5, 8\l  br i1 %35, label %192, label %36\l|{<s0>T|<s1>F}}"];
	Node0x565aab0:s0 -> Node0x565c3a0;
	Node0x565aab0:s1 -> Node0x565c3f0;
	Node0x565c3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%36:\l36:                                               \l  %37 = and i32 %5, -8\l  br label %38\l}"];
	Node0x565c3f0 -> Node0x565c5c0;
	Node0x565c5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%38:\l38:                                               \l  %39 = phi i32 [ 0, %36 ], [ %112, %38 ]\l  %40 = phi i32 [ 0, %36 ], [ %113, %38 ]\l  %41 = add nsw i32 %39, %20\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %42\l  %44 = load i8, i8 addrspace(1)* %43, align 1, !tbaa !7\l  %45 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %42\l  %46 = load i8, i8 addrspace(1)* %45, align 1, !tbaa !7\l  %47 = add i8 %46, %44\l  %48 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %42\l  store i8 %47, i8 addrspace(1)* %48, align 1, !tbaa !7\l  %49 = or i32 %39, 1\l  %50 = add nsw i32 %49, %20\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %51\l  %53 = load i8, i8 addrspace(1)* %52, align 1, !tbaa !7\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %51\l  %55 = load i8, i8 addrspace(1)* %54, align 1, !tbaa !7\l  %56 = add i8 %55, %53\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %51\l  store i8 %56, i8 addrspace(1)* %57, align 1, !tbaa !7\l  %58 = or i32 %39, 2\l  %59 = add nsw i32 %58, %20\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %60\l  %62 = load i8, i8 addrspace(1)* %61, align 1, !tbaa !7\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %60\l  %64 = load i8, i8 addrspace(1)* %63, align 1, !tbaa !7\l  %65 = add i8 %64, %62\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %60\l  store i8 %65, i8 addrspace(1)* %66, align 1, !tbaa !7\l  %67 = or i32 %39, 3\l  %68 = add nsw i32 %67, %20\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !7\l  %72 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %69\l  %73 = load i8, i8 addrspace(1)* %72, align 1, !tbaa !7\l  %74 = add i8 %73, %71\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %69\l  store i8 %74, i8 addrspace(1)* %75, align 1, !tbaa !7\l  %76 = or i32 %39, 4\l  %77 = add nsw i32 %76, %20\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %78\l  %80 = load i8, i8 addrspace(1)* %79, align 1, !tbaa !7\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %78\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7\l  %83 = add i8 %82, %80\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %78\l  store i8 %83, i8 addrspace(1)* %84, align 1, !tbaa !7\l  %85 = or i32 %39, 5\l  %86 = add nsw i32 %85, %20\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %87\l  %89 = load i8, i8 addrspace(1)* %88, align 1, !tbaa !7\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %87\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !7\l  %92 = add i8 %91, %89\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %87\l  store i8 %92, i8 addrspace(1)* %93, align 1, !tbaa !7\l  %94 = or i32 %39, 6\l  %95 = add nsw i32 %94, %20\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %96\l  %98 = load i8, i8 addrspace(1)* %97, align 1, !tbaa !7\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %96\l  %100 = load i8, i8 addrspace(1)* %99, align 1, !tbaa !7\l  %101 = add i8 %100, %98\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %96\l  store i8 %101, i8 addrspace(1)* %102, align 1, !tbaa !7\l  %103 = or i32 %39, 7\l  %104 = add nsw i32 %103, %20\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %105\l  %107 = load i8, i8 addrspace(1)* %106, align 1, !tbaa !7\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %105\l  %109 = load i8, i8 addrspace(1)* %108, align 1, !tbaa !7\l  %110 = add i8 %109, %107\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %105\l  store i8 %110, i8 addrspace(1)* %111, align 1, !tbaa !7\l  %112 = add nuw nsw i32 %39, 8\l  %113 = add i32 %40, 8\l  %114 = icmp eq i32 %113, %37\l  br i1 %114, label %192, label %38, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x565c5c0:s0 -> Node0x565c3a0;
	Node0x565c5c0:s1 -> Node0x565c5c0;
	Node0x565bfb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%115:\l115:                                              \l  %116 = phi i32 [ 0, %30 ], [ %189, %115 ]\l  %117 = phi i32 [ 0, %30 ], [ %190, %115 ]\l  %118 = add nsw i32 %116, %20\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %119\l  %121 = load i8, i8 addrspace(1)* %120, align 1, !tbaa !7\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %119\l  %123 = load i8, i8 addrspace(1)* %122, align 1, !tbaa !7\l  %124 = sub i8 %121, %123\l  %125 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %119\l  store i8 %124, i8 addrspace(1)* %125, align 1, !tbaa !7\l  %126 = or i32 %116, 1\l  %127 = add nsw i32 %126, %20\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %128\l  %130 = load i8, i8 addrspace(1)* %129, align 1, !tbaa !7\l  %131 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %128\l  %132 = load i8, i8 addrspace(1)* %131, align 1, !tbaa !7\l  %133 = sub i8 %130, %132\l  %134 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %128\l  store i8 %133, i8 addrspace(1)* %134, align 1, !tbaa !7\l  %135 = or i32 %116, 2\l  %136 = add nsw i32 %135, %20\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %137\l  %139 = load i8, i8 addrspace(1)* %138, align 1, !tbaa !7\l  %140 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %137\l  %141 = load i8, i8 addrspace(1)* %140, align 1, !tbaa !7\l  %142 = sub i8 %139, %141\l  %143 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %137\l  store i8 %142, i8 addrspace(1)* %143, align 1, !tbaa !7\l  %144 = or i32 %116, 3\l  %145 = add nsw i32 %144, %20\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %146\l  %148 = load i8, i8 addrspace(1)* %147, align 1, !tbaa !7\l  %149 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %146\l  %150 = load i8, i8 addrspace(1)* %149, align 1, !tbaa !7\l  %151 = sub i8 %148, %150\l  %152 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %146\l  store i8 %151, i8 addrspace(1)* %152, align 1, !tbaa !7\l  %153 = or i32 %116, 4\l  %154 = add nsw i32 %153, %20\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %155\l  %157 = load i8, i8 addrspace(1)* %156, align 1, !tbaa !7\l  %158 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %155\l  %159 = load i8, i8 addrspace(1)* %158, align 1, !tbaa !7\l  %160 = sub i8 %157, %159\l  %161 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %155\l  store i8 %160, i8 addrspace(1)* %161, align 1, !tbaa !7\l  %162 = or i32 %116, 5\l  %163 = add nsw i32 %162, %20\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %164\l  %166 = load i8, i8 addrspace(1)* %165, align 1, !tbaa !7\l  %167 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %164\l  %168 = load i8, i8 addrspace(1)* %167, align 1, !tbaa !7\l  %169 = sub i8 %166, %168\l  %170 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %164\l  store i8 %169, i8 addrspace(1)* %170, align 1, !tbaa !7\l  %171 = or i32 %116, 6\l  %172 = add nsw i32 %171, %20\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %173\l  %175 = load i8, i8 addrspace(1)* %174, align 1, !tbaa !7\l  %176 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %173\l  %177 = load i8, i8 addrspace(1)* %176, align 1, !tbaa !7\l  %178 = sub i8 %175, %177\l  %179 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %173\l  store i8 %178, i8 addrspace(1)* %179, align 1, !tbaa !7\l  %180 = or i32 %116, 7\l  %181 = add nsw i32 %180, %20\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %182\l  %184 = load i8, i8 addrspace(1)* %183, align 1, !tbaa !7\l  %185 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %182\l  %186 = load i8, i8 addrspace(1)* %185, align 1, !tbaa !7\l  %187 = sub i8 %184, %186\l  %188 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %182\l  store i8 %187, i8 addrspace(1)* %188, align 1, !tbaa !7\l  %189 = add nuw nsw i32 %116, 8\l  %190 = add i32 %117, 8\l  %191 = icmp eq i32 %190, %31\l  br i1 %191, label %209, label %115, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x565bfb0:s0 -> Node0x565bd60;
	Node0x565bfb0:s1 -> Node0x565bfb0;
	Node0x565c3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%192:\l192:                                              \l  %193 = phi i32 [ 0, %33 ], [ %112, %38 ]\l  %194 = icmp eq i32 %34, 0\l  br i1 %194, label %226, label %195\l|{<s0>T|<s1>F}}"];
	Node0x565c3a0:s0 -> Node0x565abc0;
	Node0x565c3a0:s1 -> Node0x565cc50;
	Node0x565cc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%195:\l195:                                              \l  %196 = phi i32 [ %206, %195 ], [ %193, %192 ]\l  %197 = phi i32 [ %207, %195 ], [ 0, %192 ]\l  %198 = add nsw i32 %196, %20\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %199\l  %201 = load i8, i8 addrspace(1)* %200, align 1, !tbaa !7\l  %202 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %199\l  %203 = load i8, i8 addrspace(1)* %202, align 1, !tbaa !7\l  %204 = add i8 %203, %201\l  %205 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %199\l  store i8 %204, i8 addrspace(1)* %205, align 1, !tbaa !7\l  %206 = add nuw nsw i32 %196, 1\l  %207 = add i32 %197, 1\l  %208 = icmp eq i32 %207, %34\l  br i1 %208, label %226, label %195, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x565cc50:s0 -> Node0x565abc0;
	Node0x565cc50:s1 -> Node0x565cc50;
	Node0x565bd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%209:\l209:                                              \l  %210 = phi i32 [ 0, %27 ], [ %189, %115 ]\l  %211 = icmp eq i32 %28, 0\l  br i1 %211, label %226, label %212\l|{<s0>T|<s1>F}}"];
	Node0x565bd60:s0 -> Node0x565abc0;
	Node0x565bd60:s1 -> Node0x5665120;
	Node0x5665120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%212:\l212:                                              \l  %213 = phi i32 [ %223, %212 ], [ %210, %209 ]\l  %214 = phi i32 [ %224, %212 ], [ 0, %209 ]\l  %215 = add nsw i32 %213, %20\l  %216 = sext i32 %215 to i64\l  %217 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %216\l  %218 = load i8, i8 addrspace(1)* %217, align 1, !tbaa !7\l  %219 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %216\l  %220 = load i8, i8 addrspace(1)* %219, align 1, !tbaa !7\l  %221 = sub i8 %218, %220\l  %222 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %216\l  store i8 %221, i8 addrspace(1)* %222, align 1, !tbaa !7\l  %223 = add nuw nsw i32 %213, 1\l  %224 = add i32 %214, 1\l  %225 = icmp eq i32 %224, %28\l  br i1 %225, label %226, label %212, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5665120:s0 -> Node0x565abc0;
	Node0x5665120:s1 -> Node0x5665120;
	Node0x565abc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%226:\l226:                                              \l  ret void\l}"];
}
