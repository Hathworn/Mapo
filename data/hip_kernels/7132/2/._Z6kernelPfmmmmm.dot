digraph "CFG for '_Z6kernelPfmmmmm' function" {
	label="CFG for '_Z6kernelPfmmmmm' function";

	Node0x5d18960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !6\l  %16 = mul i32 %7, %12\l  %17 = zext i32 %16 to i64\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %19 = zext i32 %18 to i64\l  %20 = add i64 %19, %3\l  %21 = add i64 %20, %17\l  %22 = icmp ult i64 %21, %4\l  br i1 %22, label %23, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5d18960:s0 -> Node0x5d1ad30;
	Node0x5d18960:s1 -> Node0x5d1adc0;
	Node0x5d1ad30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = add i64 %5, -1\l  %25 = udiv i32 %15, %12\l  %26 = mul i32 %25, %12\l  %27 = icmp ugt i32 %15, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %12\l  %31 = zext i32 %30 to i64\l  br label %32\l}"];
	Node0x5d1ad30 -> Node0x5d1b340;
	Node0x5d1b340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64 [ %21, %23 ], [ %64, %63 ]\l  %34 = urem i64 %33, %5\l  %35 = icmp eq i64 %34, 0\l  %36 = icmp eq i64 %34, %24\l  %37 = or i1 %35, %36\l  br i1 %37, label %63, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5d1b340:s0 -> Node0x5d1a6e0;
	Node0x5d1b340:s1 -> Node0x5d1b8e0;
	Node0x5d1b8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = add i64 %33, %1\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = add i64 %39, -1\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = fadd contract float %41, %44\l  %46 = add i64 %39, 1\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !16\l  %49 = fadd contract float %45, %48\l  %50 = sub i64 %39, %5\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = fadd contract float %49, %52\l  %54 = add i64 %39, %5\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = fadd contract float %53, %56\l  %58 = fpext float %57 to double\l  %59 = fmul contract double %58, 2.000000e-01\l  %60 = fptrunc double %59 to float\l  %61 = add i64 %33, %2\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  store float %60, float addrspace(1)* %62, align 4, !tbaa !16\l  br label %63\l}"];
	Node0x5d1b8e0 -> Node0x5d1a6e0;
	Node0x5d1a6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  %64 = add i64 %33, %31\l  %65 = icmp ult i64 %64, %4\l  br i1 %65, label %32, label %66, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5d1a6e0:s0 -> Node0x5d1b340;
	Node0x5d1a6e0:s1 -> Node0x5d1adc0;
	Node0x5d1adc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%66:\l66:                                               \l  ret void\l}"];
}
