digraph "CFG for '_Z37refine_computeBestDepthSimMaps_kernelPfiS_iP15HIP_vector_typeIfLj3EEiS2_iiif' function" {
	label="CFG for '_Z37refine_computeBestDepthSimMaps_kernelPfiS_iP15HIP_vector_typeIfLj3EEiS2_iiif' function";

	Node0x5008020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %8\l  %30 = icmp slt i32 %28, %9\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %95\l|{<s0>T|<s1>F}}"];
	Node0x5008020:s0 -> Node0x500c650;
	Node0x5008020:s1 -> Node0x500c6e0;
	Node0x500c650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = mul nsw i32 %28, %7\l  %34 = add nsw i32 %33, %20\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %35, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %37 = load float, float addrspace(1)* %36, align 4\l  %38 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %35, i32 0, i32 0, i32 0, i32\l... 0, i64 1\l  %39 = load float, float addrspace(1)* %38, align 4\l  %40 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %6, i64 %35, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %41 = load float, float addrspace(1)* %40, align 4\l  %42 = mul nsw i32 %28, %5\l  %43 = add nsw i32 %42, %20\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %44, i32 0, i32 0, i32 0, i32\l... 0, i64 0\l  %46 = bitcast float addrspace(1)* %45 to \<2 x float\> addrspace(1)*\l  %47 = load \<2 x float\>, \<2 x float\> addrspace(1)* %46, align 4\l  %48 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %4, i64 %44, i32 0, i32 0, i32 0, i32\l... 0, i64 2\l  %49 = load float, float addrspace(1)* %48, align 4\l  %50 = extractelement \<2 x float\> %47, i64 0\l  %51 = extractelement \<2 x float\> %47, i64 1\l  %52 = fcmp contract olt float %50, %51\l  %53 = select contract i1 %52, float %37, float %39\l  %54 = select contract i1 %52, float %50, float %51\l  %55 = fcmp contract olt float %49, %54\l  %56 = select contract i1 %55, float %41, float %53\l  %57 = select contract i1 %55, float %49, float %54\l  %58 = fadd contract float %50, 1.000000e+00\l  %59 = fmul contract float %58, 5.000000e-01\l  %60 = fadd contract float %49, 1.000000e+00\l  %61 = fmul contract float %60, 5.000000e-01\l  %62 = fadd contract float %51, 1.000000e+00\l  %63 = fmul contract float %62, 5.000000e-01\l  %64 = fcmp contract ogt float %59, %63\l  %65 = fcmp contract ogt float %61, %63\l  %66 = select i1 %64, i1 %65, i1 false\l  br i1 %66, label %67, label %80\l|{<s0>T|<s1>F}}"];
	Node0x500c650:s0 -> Node0x500c960;
	Node0x500c650:s1 -> Node0x500f360;
	Node0x500c960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = fsub contract float %61, %59\l  %69 = fadd contract float %59, %61\l  %70 = fmul contract float %63, 2.000000e+00\l  %71 = fsub contract float %69, %70\l  %72 = fmul contract float %71, 2.000000e+00\l  %73 = fneg contract float %68\l  %74 = fdiv contract float %73, %72\l  %75 = fadd contract float %37, %41\l  %76 = fmul contract float %75, 5.000000e-01\l  %77 = fsub contract float %76, %37\l  %78 = fmul contract float %77, %74\l  %79 = fadd contract float %76, %78\l  br label %80\l}"];
	Node0x500c960 -> Node0x500f360;
	Node0x500f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%80:\l80:                                               \l  %81 = phi float [ %79, %67 ], [ -1.000000e+00, %32 ]\l  %82 = fcmp contract ogt float %81, 0.000000e+00\l  %83 = select i1 %82, float %81, float %56\l  %84 = fcmp contract olt float %57, %10\l  %85 = select contract i1 %84, float %57, float 1.000000e+00\l  %86 = mul nsw i32 %28, %1\l  %87 = add nsw i32 %86, %20\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  store float %85, float addrspace(1)* %89, align 4, !tbaa !7\l  %90 = select contract i1 %84, float %83, float -1.000000e+00\l  %91 = mul nsw i32 %28, %3\l  %92 = add nsw i32 %91, %20\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %2, i64 %93\l  store float %90, float addrspace(1)* %94, align 4, !tbaa !7\l  br label %95\l}"];
	Node0x500f360 -> Node0x500c6e0;
	Node0x500c6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%95:\l95:                                               \l  ret void\l}"];
}
