digraph "CFG for '_Z24matting_laplacian_kernelPfS_iiPiS0_S_i' function" {
	label="CFG for '_Z24matting_laplacian_kernelPfS_iiPiS0_S_i' function";

	Node0x6365660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%8:\l  %9 = mul nsw i32 %3, %2\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = icmp slt i32 %18, %9\l  br i1 %19, label %20, label %130\l|{<s0>T|<s1>F}}"];
	Node0x6365660:s0 -> Node0x6367670;
	Node0x6365660:s1 -> Node0x6367700;
	Node0x6367670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%20:\l20:                                               \l  %21 = freeze i32 %18\l  %22 = freeze i32 %3\l  %23 = sdiv i32 %21, %22\l  %24 = mul i32 %23, %22\l  %25 = sub i32 %21, %24\l  %26 = mul nsw i32 %25, %2\l  %27 = add nsw i32 %26, %23\l  %28 = add nsw i32 %7, -1\l  br label %29\l}"];
	Node0x6367670 -> Node0x6367c80;
	Node0x6367c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %28, %20 ], [ %47, %41 ]\l  %31 = phi i32 [ %28, %20 ], [ %48, %41 ]\l  %32 = phi i32 [ 0, %20 ], [ %49, %41 ]\l  %33 = sdiv i32 %30, 2\l  %34 = icmp sgt i32 %32, %31\l  br i1 %34, label %50, label %35\l|{<s0>T|<s1>F}}"];
	Node0x6367c80:s0 -> Node0x6367230;
	Node0x6367c80:s1 -> Node0x6368400;
	Node0x6368400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = add nsw i32 %38, -1\l  %40 = icmp eq i32 %39, %27\l  br i1 %40, label %50, label %41\l|{<s0>T|<s1>F}}"];
	Node0x6368400:s0 -> Node0x6367230;
	Node0x6368400:s1 -> Node0x6367d70;
	Node0x6367d70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%41:\l41:                                               \l  %42 = icmp sgt i32 %39, %27\l  %43 = add nsw i32 %33, -1\l  %44 = add nsw i32 %32, %43\l  %45 = add nsw i32 %33, 1\l  %46 = add nsw i32 %45, %31\l  %47 = select i1 %42, i32 %44, i32 %46\l  %48 = select i1 %42, i32 %43, i32 %31\l  %49 = select i1 %42, i32 %32, i32 %45\l  br label %29\l}"];
	Node0x6367d70 -> Node0x6367c80;
	Node0x6367230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%50:\l50:                                               \l  %51 = phi i32 [ %33, %35 ], [ -1, %29 ]\l  %52 = icmp eq i32 %51, -1\l  br i1 %52, label %130, label %53\l|{<s0>T|<s1>F}}"];
	Node0x6367230:s0 -> Node0x6367700;
	Node0x6367230:s1 -> Node0x63696e0;
	Node0x63696e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%53:\l53:                                               \l  %54 = icmp sgt i32 %51, -1\l  br i1 %54, label %55, label %65\l|{<s0>T|<s1>F}}"];
	Node0x63696e0:s0 -> Node0x6369870;
	Node0x63696e0:s1 -> Node0x63698c0;
	Node0x6369870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%55:\l55:                                               \l  %56 = phi i32 [ %63, %62 ], [ %51, %53 ]\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %60 = add nsw i32 %59, -1\l  %61 = icmp eq i32 %60, %27\l  br i1 %61, label %62, label %65\l|{<s0>T|<s1>F}}"];
	Node0x6369870:s0 -> Node0x63699c0;
	Node0x6369870:s1 -> Node0x63698c0;
	Node0x63699c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%62:\l62:                                               \l  %63 = add nsw i32 %56, -1\l  %64 = icmp eq i32 %56, 0\l  br i1 %64, label %65, label %55, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x63699c0:s0 -> Node0x63698c0;
	Node0x63699c0:s1 -> Node0x6369870;
	Node0x63698c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%65:\l65:                                               \l  %66 = phi i32 [ %51, %53 ], [ %56, %55 ], [ -1, %62 ]\l  %67 = icmp slt i32 %51, %7\l  br i1 %67, label %68, label %78\l|{<s0>T|<s1>F}}"];
	Node0x63698c0:s0 -> Node0x63682e0;
	Node0x63698c0:s1 -> Node0x6367eb0;
	Node0x63682e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%68:\l68:                                               \l  %69 = phi i32 [ %76, %75 ], [ %51, %65 ]\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = add nsw i32 %72, -1\l  %74 = icmp eq i32 %73, %27\l  br i1 %74, label %75, label %78\l|{<s0>T|<s1>F}}"];
	Node0x63682e0:s0 -> Node0x636ab50;
	Node0x63682e0:s1 -> Node0x6367eb0;
	Node0x636ab50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%75:\l75:                                               \l  %76 = add nsw i32 %69, 1\l  %77 = icmp slt i32 %76, %7\l  br i1 %77, label %68, label %78, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x636ab50:s0 -> Node0x63682e0;
	Node0x636ab50:s1 -> Node0x6367eb0;
	Node0x6367eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%78:\l78:                                               \l  %79 = phi i32 [ %51, %65 ], [ %69, %68 ], [ %7, %75 ]\l  %80 = add nsw i32 %66, 1\l  %81 = icmp slt i32 %80, %79\l  br i1 %81, label %82, label %130\l|{<s0>T|<s1>F}}"];
	Node0x6367eb0:s0 -> Node0x636b4a0;
	Node0x6367eb0:s1 -> Node0x6367700;
	Node0x636b4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%82:\l82:                                               \l  %83 = sext i32 %18 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  %85 = add nsw i32 %18, %9\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = shl nsw i32 %9, 1\l  %89 = add nsw i32 %18, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  br label %92\l}"];
	Node0x636b4a0 -> Node0x636ba80;
	Node0x636ba80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%92:\l92:                                               \l  %93 = phi i32 [ %80, %82 ], [ %128, %92 ]\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %94\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %97 = add nsw i32 %96, -1\l  %98 = getelementptr inbounds float, float addrspace(1)* %6, i64 %94\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !14\l  %100 = freeze i32 %97\l  %101 = freeze i32 %2\l  %102 = sdiv i32 %100, %101\l  %103 = mul i32 %102, %101\l  %104 = sub i32 %100, %103\l  %105 = mul nsw i32 %104, %3\l  %106 = add nsw i32 %105, %102\l  %107 = fmul contract float %99, 2.000000e+00\l  %108 = sext i32 %106 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %0, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !14\l  %111 = fmul contract float %107, %110\l  %112 = load float, float addrspace(1)* %84, align 4, !tbaa !14\l  %113 = fadd contract float %112, %111\l  store float %113, float addrspace(1)* %84, align 4, !tbaa !14\l  %114 = add nsw i32 %106, %9\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !14\l  %118 = fmul contract float %107, %117\l  %119 = load float, float addrspace(1)* %87, align 4, !tbaa !14\l  %120 = fadd contract float %119, %118\l  store float %120, float addrspace(1)* %87, align 4, !tbaa !14\l  %121 = add nsw i32 %106, %88\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !14\l  %125 = fmul contract float %107, %124\l  %126 = load float, float addrspace(1)* %91, align 4, !tbaa !14\l  %127 = fadd contract float %126, %125\l  store float %127, float addrspace(1)* %91, align 4, !tbaa !14\l  %128 = add nsw i32 %93, 1\l  %129 = icmp slt i32 %128, %79\l  br i1 %129, label %92, label %130, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x636ba80:s0 -> Node0x636ba80;
	Node0x636ba80:s1 -> Node0x6367700;
	Node0x6367700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%130:\l130:                                              \l  ret void\l}"];
}
