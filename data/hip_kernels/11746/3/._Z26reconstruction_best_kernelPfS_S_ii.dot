digraph "CFG for '_Z26reconstruction_best_kernelPfS_S_ii' function" {
	label="CFG for '_Z26reconstruction_best_kernelPfS_S_ii' function";

	Node0x5fb0010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = mul nsw i32 %4, %3\l  %16 = icmp slt i32 %14, %15\l  br i1 %16, label %17, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5fb0010:s0 -> Node0x5fb0b40;
	Node0x5fb0010:s1 -> Node0x5fb20b0;
	Node0x5fb0b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%17:\l17:                                               \l  %18 = shl nsw i32 %15, 1\l  %19 = add nsw i32 %14, %18\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = mul nsw i32 %14, 12\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = fmul contract float %22, %26\l  %28 = add nsw i32 %14, %15\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %0, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = or i32 %23, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fmul contract float %31, %35\l  %37 = fadd contract float %27, %36\l  %38 = sext i32 %14 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = or i32 %23, 2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fmul contract float %40, %44\l  %46 = fadd contract float %37, %45\l  %47 = or i32 %23, 3\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %1, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fadd contract float %50, %46\l  %52 = add nsw i32 %23, 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract float %22, %55\l  %57 = add nsw i32 %23, 5\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %31, %60\l  %62 = fadd contract float %56, %61\l  %63 = add nsw i32 %23, 6\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %67 = fmul contract float %40, %66\l  %68 = fadd contract float %62, %67\l  %69 = add nsw i32 %23, 7\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %1, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = fadd contract float %72, %68\l  %74 = add nsw i32 %23, 8\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %1, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fmul contract float %22, %77\l  %79 = add nsw i32 %23, 9\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %1, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %83 = fmul contract float %31, %82\l  %84 = fadd contract float %78, %83\l  %85 = add nsw i32 %23, 10\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %1, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fmul contract float %40, %88\l  %90 = fadd contract float %84, %89\l  %91 = add nsw i32 %23, 11\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = fadd contract float %94, %90\l  %96 = getelementptr inbounds float, float addrspace(1)* %2, i64 %38\l  store float %51, float addrspace(1)* %96, align 4, !tbaa !7\l  %97 = getelementptr inbounds float, float addrspace(1)* %2, i64 %29\l  store float %73, float addrspace(1)* %97, align 4, !tbaa !7\l  %98 = getelementptr inbounds float, float addrspace(1)* %2, i64 %20\l  store float %95, float addrspace(1)* %98, align 4, !tbaa !7\l  br label %99\l}"];
	Node0x5fb0b40 -> Node0x5fb20b0;
	Node0x5fb20b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  ret void\l}"];
}
