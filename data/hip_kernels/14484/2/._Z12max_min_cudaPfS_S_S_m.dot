digraph "CFG for '_Z12max_min_cudaPfS_S_S_m' function" {
	label="CFG for '_Z12max_min_cudaPfS_S_S_m' function";

	Node0x63173e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %11\l  %17 = add i32 %16, %6\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, -1\l  %23 = add i32 %22, %21\l  %24 = icmp eq i32 %15, %23\l  br i1 %24, label %25, label %29\l|{<s0>T|<s1>F}}"];
	Node0x63173e0:s0 -> Node0x6319910;
	Node0x63173e0:s1 -> Node0x63199a0;
	Node0x6319910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = zext i16 %10 to i64\l  %27 = urem i64 %4, %26\l  %28 = trunc i64 %27 to i32\l  br label %29\l}"];
	Node0x6319910 -> Node0x63199a0;
	Node0x63199a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = phi i32 [ %28, %25 ], [ %11, %5 ]\l  %31 = icmp ult i16 %10, 2\l  br i1 %31, label %39, label %32\l|{<s0>T|<s1>F}}"];
	Node0x63199a0:s0 -> Node0x6319e30;
	Node0x63199a0:s1 -> Node0x6319e80;
	Node0x6319e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%32:\l32:                                               \l  %33 = lshr i32 %11, 1\l  %34 = zext i32 %33 to i64\l  %35 = sext i32 %17 to i64\l  %36 = zext i32 %6 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  br label %41\l}"];
	Node0x6319e80 -> Node0x63194f0;
	Node0x6319e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%39:\l39:                                               \l  %40 = icmp eq i32 %6, 0\l  br i1 %40, label %86, label %95\l|{<s0>T|<s1>F}}"];
	Node0x6319e30:s0 -> Node0x631a550;
	Node0x6319e30:s1 -> Node0x631a5a0;
	Node0x63194f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i64 [ %34, %32 ], [ %84, %82 ]\l  %43 = phi i32 [ %30, %32 ], [ %83, %82 ]\l  %44 = add nsw i64 %42, %35\l  %45 = icmp ult i64 %44, %4\l  %46 = icmp ugt i64 %42, %36\l  %47 = select i1 %45, i1 %46, i1 false\l  br i1 %47, label %48, label %82\l|{<s0>T|<s1>F}}"];
	Node0x63194f0:s0 -> Node0x631ac00;
	Node0x63194f0:s1 -> Node0x631a710;
	Node0x631ac00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%48:\l48:                                               \l  %49 = load float, float addrspace(1)* %37, align 4, !tbaa !16\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = fcmp contract ogt float %49, %51\l  %53 = select contract i1 %52, float %49, float %51\l  store float %53, float addrspace(1)* %37, align 4, !tbaa !16\l  %54 = and i32 %43, -2147483647\l  %55 = icmp eq i32 %54, 1\l  br i1 %55, label %56, label %66\l|{<s0>T|<s1>F}}"];
	Node0x631ac00:s0 -> Node0x631b920;
	Node0x631ac00:s1 -> Node0x631b9b0;
	Node0x631b920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%56:\l56:                                               \l  %57 = add nsw i64 %44, %42\l  %58 = add nsw i32 %43, -1\l  %59 = zext i32 %58 to i64\l  %60 = icmp eq i64 %57, %59\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x631b920:s0 -> Node0x631bd10;
	Node0x631b920:s1 -> Node0x631b9b0;
	Node0x631bd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %64 = fcmp contract ogt float %53, %63\l  %65 = select contract i1 %64, float %53, float %63\l  store float %65, float addrspace(1)* %37, align 4, !tbaa !16\l  br label %66\l}"];
	Node0x631bd10 -> Node0x631b9b0;
	Node0x631b9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%66:\l66:                                               \l  %67 = load float, float addrspace(1)* %38, align 4, !tbaa !16\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !16\l  %70 = fcmp contract olt float %67, %69\l  %71 = select contract i1 %70, float %67, float %69\l  store float %71, float addrspace(1)* %38, align 4, !tbaa !16\l  br i1 %55, label %72, label %82\l|{<s0>T|<s1>F}}"];
	Node0x631b9b0:s0 -> Node0x631a130;
	Node0x631b9b0:s1 -> Node0x631a710;
	Node0x631a130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%72:\l72:                                               \l  %73 = add nsw i64 %44, %42\l  %74 = add nsw i32 %43, -1\l  %75 = zext i32 %74 to i64\l  %76 = icmp eq i64 %73, %75\l  br i1 %76, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0x631a130:s0 -> Node0x631ca10;
	Node0x631a130:s1 -> Node0x631a710;
	Node0x631ca10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%77:\l77:                                               \l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %73\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fcmp contract olt float %71, %79\l  %81 = select contract i1 %80, float %71, float %79\l  store float %81, float addrspace(1)* %38, align 4, !tbaa !16\l  br label %82\l}"];
	Node0x631ca10 -> Node0x631a710;
	Node0x631a710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %83 = sdiv i32 %43, 2\l  %84 = lshr i64 %42, 1\l  %85 = icmp ult i64 %42, 2\l  br i1 %85, label %39, label %41, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x631a710:s0 -> Node0x6319e30;
	Node0x631a710:s1 -> Node0x63194f0;
	Node0x631a550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%86:\l86:                                               \l  %87 = sext i32 %17 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !16\l  %90 = zext i32 %15 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %90\l  store float %89, float addrspace(1)* %91, align 4, !tbaa !16\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = getelementptr inbounds float, float addrspace(1)* %3, i64 %90\l  store float %93, float addrspace(1)* %94, align 4, !tbaa !16\l  br label %95\l}"];
	Node0x631a550 -> Node0x631a5a0;
	Node0x631a5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%95:\l95:                                               \l  ret void\l}"];
}
