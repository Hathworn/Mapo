digraph "CFG for '_Z14update_clusterPiPfS0_S0_S0_iiiS0_S0_S0_S0_' function" {
	label="CFG for '_Z14update_clusterPiPfS0_S0_S0_iiiS0_S0_S0_S0_' function";

	Node0x4753150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = sdiv i32 %5, %6\l  %23 = mul i32 %22, %20\l  %24 = zext i32 %21 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %11, i64 %24\l  store float 0.000000e+00, float addrspace(1)* %25, align 4, !tbaa !7\l  %26 = getelementptr inbounds float, float addrspace(1)* %8, i64 %24\l  store float 0.000000e+00, float addrspace(1)* %26, align 4, !tbaa !7\l  %27 = getelementptr inbounds float, float addrspace(1)* %9, i64 %24\l  store float 0.000000e+00, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = getelementptr inbounds float, float addrspace(1)* %10, i64 %24\l  store float 0.000000e+00, float addrspace(1)* %28, align 4, !tbaa !7\l  %29 = icmp ult i32 %20, %5\l  br i1 %29, label %30, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4753150:s0 -> Node0x4757470;
	Node0x4753150:s1 -> Node0x4757500;
	Node0x4757470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%30:\l30:                                               \l  %31 = add nsw i32 %23, %22\l  %32 = add nsw i32 %6, -1\l  %33 = icmp eq i32 %20, %32\l  %34 = mul nsw i32 %22, %32\l  %35 = select i1 %33, i32 %34, i32 %23\l  %36 = select i1 %33, i32 %5, i32 %31\l  %37 = icmp slt i32 %35, %36\l  br i1 %37, label %47, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4757470:s0 -> Node0x4754980;
	Node0x4757470:s1 -> Node0x4757bf0;
	Node0x4757bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%38:\l38:                                               \l  %39 = phi float [ 0.000000e+00, %30 ], [ %69, %68 ]\l  %40 = phi float [ 0.000000e+00, %30 ], [ %70, %68 ]\l  %41 = phi float [ 0.000000e+00, %30 ], [ %71, %68 ]\l  %42 = phi float [ 0.000000e+00, %30 ], [ %72, %68 ]\l  store float %39, float addrspace(1)* %25, align 4, !tbaa !7\l  store float %40, float addrspace(1)* %26, align 4, !tbaa !7\l  store float %41, float addrspace(1)* %27, align 4, !tbaa !7\l  store float %42, float addrspace(1)* %28, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = icmp ugt i16 %17, 1\l  br i1 %43, label %44, label %75\l|{<s0>T|<s1>F}}"];
	Node0x4757bf0:s0 -> Node0x47587b0;
	Node0x4757bf0:s1 -> Node0x4758840;
	Node0x47587b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%44:\l44:                                               \l  %45 = add nsw i32 %13, 1\l  %46 = mul nsw i32 %45, %6\l  br label %77\l}"];
	Node0x47587b0 -> Node0x4758ad0;
	Node0x4754980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ %73, %68 ], [ %35, %30 ]\l  %49 = phi float [ %72, %68 ], [ 0.000000e+00, %30 ]\l  %50 = phi float [ %71, %68 ], [ 0.000000e+00, %30 ]\l  %51 = phi float [ %70, %68 ], [ 0.000000e+00, %30 ]\l  %52 = phi float [ %69, %68 ], [ 0.000000e+00, %30 ]\l  %53 = sext i32 %48 to i64\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %53\l  %55 = load i32, i32 addrspace(1)* %54, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %56 = icmp eq i32 %55, %13\l  br i1 %56, label %57, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4754980:s0 -> Node0x4759940;
	Node0x4754980:s1 -> Node0x4757d30;
	Node0x4759940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds float, float addrspace(1)* %2, i64 %53\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = fadd contract float %51, %59\l  %61 = getelementptr inbounds float, float addrspace(1)* %3, i64 %53\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7\l  %63 = fadd contract float %50, %62\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %53\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = fadd contract float %49, %65\l  %67 = fadd contract float %52, 1.000000e+00\l  br label %68\l}"];
	Node0x4759940 -> Node0x4757d30;
	Node0x4757d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = phi float [ %67, %57 ], [ %52, %47 ]\l  %70 = phi float [ %60, %57 ], [ %51, %47 ]\l  %71 = phi float [ %63, %57 ], [ %50, %47 ]\l  %72 = phi float [ %66, %57 ], [ %49, %47 ]\l  %73 = add nsw i32 %48, 1\l  %74 = icmp slt i32 %73, %36\l  br i1 %74, label %47, label %38, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4757d30:s0 -> Node0x4754980;
	Node0x4757d30:s1 -> Node0x4757bf0;
	Node0x4758840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%75:\l75:                                               \l  %76 = icmp eq i32 %20, 0\l  br i1 %76, label %106, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4758840:s0 -> Node0x475a810;
	Node0x4758840:s1 -> Node0x4757500;
	Node0x4758ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ 1, %44 ], [ %79, %104 ]\l  %79 = shl i32 %78, 1\l  %80 = add i32 %79, -1\l  %81 = and i32 %80, %21\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %83, label %104\l|{<s0>T|<s1>F}}"];
	Node0x4758ad0:s0 -> Node0x475ac50;
	Node0x4758ad0:s1 -> Node0x475a910;
	Node0x475ac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%83:\l83:                                               \l  %84 = add i32 %78, %21\l  %85 = icmp ugt i32 %84, %46\l  br i1 %85, label %104, label %86\l|{<s0>T|<s1>F}}"];
	Node0x475ac50:s0 -> Node0x475a910;
	Node0x475ac50:s1 -> Node0x475ae70;
	Node0x475ae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%86:\l86:                                               \l  %87 = zext i32 %84 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %11, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %91 = fadd contract float %89, %90\l  store float %91, float addrspace(1)* %25, align 4, !tbaa !7\l  %92 = getelementptr inbounds float, float addrspace(1)* %8, i64 %87\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !7\l  %94 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %95 = fadd contract float %93, %94\l  store float %95, float addrspace(1)* %26, align 4, !tbaa !7\l  %96 = getelementptr inbounds float, float addrspace(1)* %9, i64 %87\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7\l  %98 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %99 = fadd contract float %97, %98\l  store float %99, float addrspace(1)* %27, align 4, !tbaa !7\l  %100 = getelementptr inbounds float, float addrspace(1)* %10, i64 %87\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %103 = fadd contract float %101, %102\l  store float %103, float addrspace(1)* %28, align 4, !tbaa !7\l  br label %104\l}"];
	Node0x475ae70 -> Node0x475a910;
	Node0x475a910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%104:\l104:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %105 = icmp ult i32 %79, %18\l  br i1 %105, label %77, label %75, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x475a910:s0 -> Node0x4758ad0;
	Node0x475a910:s1 -> Node0x4758840;
	Node0x475a810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%106:\l106:                                              \l  %107 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %108 = fcmp contract une float %107, 0.000000e+00\l  br i1 %108, label %109, label %127\l|{<s0>T|<s1>F}}"];
	Node0x475a810:s0 -> Node0x475bf50;
	Node0x475a810:s1 -> Node0x4757500;
	Node0x475bf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%109:\l109:                                              \l  %110 = load float, float addrspace(1)* %26, align 4, !tbaa !7\l  %111 = fdiv contract float %110, %107\l  %112 = mul nsw i32 %13, 3\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %1, i64 %113\l  store float %111, float addrspace(1)* %114, align 4, !tbaa !7\l  %115 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %116 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %117 = fdiv contract float %115, %116\l  %118 = add nsw i32 %112, 1\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %1, i64 %119\l  store float %117, float addrspace(1)* %120, align 4, !tbaa !7\l  %121 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %122 = load float, float addrspace(1)* %25, align 4, !tbaa !7\l  %123 = fdiv contract float %121, %122\l  %124 = add nsw i32 %112, 2\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds float, float addrspace(1)* %1, i64 %125\l  store float %123, float addrspace(1)* %126, align 4, !tbaa !7\l  br label %127\l}"];
	Node0x475bf50 -> Node0x4757500;
	Node0x4757500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%127:\l127:                                              \l  ret void\l}"];
}
