digraph "CFG for '_Z15variance_kernelPfS_iiiS_' function" {
	label="CFG for '_Z15variance_kernelPfS_iiiS_' function";

	Node0x620fb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l  %7 = mul nsw i32 %4, %2\l  %8 = add nsw i32 %7, -1\l  %9 = sitofp i32 %8 to double\l  %10 = fdiv contract double 1.000000e+00, %9\l  %11 = fptrunc double %10 to float\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !4\l  %18 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !13, !invariant.load\l... !14\l  %21 = zext i16 %20 to i32\l  %22 = udiv i32 %17, %21\l  %23 = mul i32 %22, %21\l  %24 = icmp ugt i32 %17, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %13\l  %28 = add i32 %27, %12\l  %29 = mul i32 %28, %21\l  %30 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %31 = add i32 %29, %30\l  %32 = icmp slt i32 %31, %3\l  br i1 %32, label %33, label %218\l|{<s0>T|<s1>F}}"];
	Node0x620fb10:s0 -> Node0x62115f0;
	Node0x620fb10:s1 -> Node0x6211680;
	Node0x62115f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %5, i64 %34\l  store float 0.000000e+00, float addrspace(1)* %35, align 4, !tbaa !16\l  %36 = icmp sgt i32 %2, 0\l  br i1 %36, label %37, label %215\l|{<s0>T|<s1>F}}"];
	Node0x62115f0:s0 -> Node0x62136c0;
	Node0x62115f0:s1 -> Node0x6213750;
	Node0x62136c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%37:\l37:                                               \l  %38 = icmp sgt i32 %4, 0\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  br label %40\l}"];
	Node0x62136c0 -> Node0x62139c0;
	Node0x62139c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %37 ], [ %212, %211 ]\l  %42 = phi i32 [ 0, %37 ], [ %213, %211 ]\l  br i1 %38, label %43, label %211\l|{<s0>T|<s1>F}}"];
	Node0x62139c0:s0 -> Node0x6213ce0;
	Node0x62139c0:s1 -> Node0x6213a80;
	Node0x6213ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%43:\l43:                                               \l  %44 = mul nsw i32 %42, %3\l  %45 = add i32 %44, %31\l  %46 = mul i32 %45, %4\l  br label %47\l}"];
	Node0x6213ce0 -> Node0x6213fd0;
	Node0x6213fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %43 ], [ %209, %47 ]\l  %49 = add nsw i32 %48, %46\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = load float, float addrspace(1)* %39, align 4, !tbaa !16\l  %54 = fsub contract float %52, %53\l  %55 = tail call float @llvm.fabs.f32(float %54)\l  %56 = tail call float @llvm.amdgcn.frexp.mant.f32(float %55)\l  %57 = fcmp olt float %56, 0x3FE5555560000000\l  %58 = zext i1 %57 to i32\l  %59 = tail call float @llvm.amdgcn.ldexp.f32(float %56, i32 %58)\l  %60 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %55)\l  %61 = sub nsw i32 %60, %58\l  %62 = fadd float %59, -1.000000e+00\l  %63 = fadd float %59, 1.000000e+00\l  %64 = fadd float %63, -1.000000e+00\l  %65 = fsub float %59, %64\l  %66 = tail call float @llvm.amdgcn.rcp.f32(float %63)\l  %67 = fmul float %62, %66\l  %68 = fmul float %63, %67\l  %69 = fneg float %68\l  %70 = tail call float @llvm.fma.f32(float %67, float %63, float %69)\l  %71 = tail call float @llvm.fma.f32(float %67, float %65, float %70)\l  %72 = fadd float %68, %71\l  %73 = fsub float %72, %68\l  %74 = fsub float %71, %73\l  %75 = fsub float %62, %72\l  %76 = fsub float %62, %75\l  %77 = fsub float %76, %72\l  %78 = fsub float %77, %74\l  %79 = fadd float %75, %78\l  %80 = fmul float %66, %79\l  %81 = fadd float %67, %80\l  %82 = fsub float %81, %67\l  %83 = fsub float %80, %82\l  %84 = fmul float %81, %81\l  %85 = fneg float %84\l  %86 = tail call float @llvm.fma.f32(float %81, float %81, float %85)\l  %87 = fmul float %83, 2.000000e+00\l  %88 = tail call float @llvm.fma.f32(float %81, float %87, float %86)\l  %89 = fadd float %84, %88\l  %90 = fsub float %89, %84\l  %91 = fsub float %88, %90\l  %92 = tail call float @llvm.fmuladd.f32(float %89, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %93 = tail call float @llvm.fmuladd.f32(float %89, float %92, float\l... 0x3FD999BDE0000000)\l  %94 = sitofp i32 %61 to float\l  %95 = fmul float %94, 0x3FE62E4300000000\l  %96 = fneg float %95\l  %97 = tail call float @llvm.fma.f32(float %94, float 0x3FE62E4300000000,\l... float %96)\l  %98 = tail call float @llvm.fma.f32(float %94, float 0xBE205C6100000000,\l... float %97)\l  %99 = fadd float %95, %98\l  %100 = fsub float %99, %95\l  %101 = fsub float %98, %100\l  %102 = tail call float @llvm.amdgcn.ldexp.f32(float %81, i32 1)\l  %103 = fmul float %81, %89\l  %104 = fneg float %103\l  %105 = tail call float @llvm.fma.f32(float %89, float %81, float %104)\l  %106 = tail call float @llvm.fma.f32(float %89, float %83, float %105)\l  %107 = tail call float @llvm.fma.f32(float %91, float %81, float %106)\l  %108 = fadd float %103, %107\l  %109 = fsub float %108, %103\l  %110 = fsub float %107, %109\l  %111 = fmul float %89, %93\l  %112 = fneg float %111\l  %113 = tail call float @llvm.fma.f32(float %89, float %93, float %112)\l  %114 = tail call float @llvm.fma.f32(float %91, float %93, float %113)\l  %115 = fadd float %111, %114\l  %116 = fsub float %115, %111\l  %117 = fsub float %114, %116\l  %118 = fadd float %115, 0x3FE5555540000000\l  %119 = fadd float %118, 0xBFE5555540000000\l  %120 = fsub float %115, %119\l  %121 = fadd float %117, 0x3E2E720200000000\l  %122 = fadd float %121, %120\l  %123 = fadd float %118, %122\l  %124 = fsub float %123, %118\l  %125 = fsub float %122, %124\l  %126 = fmul float %108, %123\l  %127 = fneg float %126\l  %128 = tail call float @llvm.fma.f32(float %108, float %123, float %127)\l  %129 = tail call float @llvm.fma.f32(float %108, float %125, float %128)\l  %130 = tail call float @llvm.fma.f32(float %110, float %123, float %129)\l  %131 = tail call float @llvm.amdgcn.ldexp.f32(float %83, i32 1)\l  %132 = fadd float %126, %130\l  %133 = fsub float %132, %126\l  %134 = fsub float %130, %133\l  %135 = fadd float %102, %132\l  %136 = fsub float %135, %102\l  %137 = fsub float %132, %136\l  %138 = fadd float %131, %134\l  %139 = fadd float %138, %137\l  %140 = fadd float %135, %139\l  %141 = fsub float %140, %135\l  %142 = fsub float %139, %141\l  %143 = fadd float %99, %140\l  %144 = fsub float %143, %99\l  %145 = fsub float %143, %144\l  %146 = fsub float %99, %145\l  %147 = fsub float %140, %144\l  %148 = fadd float %147, %146\l  %149 = fadd float %101, %142\l  %150 = fsub float %149, %101\l  %151 = fsub float %149, %150\l  %152 = fsub float %101, %151\l  %153 = fsub float %142, %150\l  %154 = fadd float %153, %152\l  %155 = fadd float %149, %148\l  %156 = fadd float %143, %155\l  %157 = fsub float %156, %143\l  %158 = fsub float %155, %157\l  %159 = fadd float %154, %158\l  %160 = fadd float %156, %159\l  %161 = fsub float %160, %156\l  %162 = fsub float %159, %161\l  %163 = fmul float %160, 2.000000e+00\l  %164 = fneg float %163\l  %165 = tail call float @llvm.fma.f32(float %160, float 2.000000e+00, float\l... %164)\l  %166 = fmul float %160, 0.000000e+00\l  %167 = tail call float @llvm.fma.f32(float %162, float 2.000000e+00, float\l... %166)\l  %168 = fadd float %165, %167\l  %169 = fadd float %163, %168\l  %170 = fsub float %169, %163\l  %171 = fsub float %168, %170\l  %172 = tail call float @llvm.fabs.f32(float %163) #3\l  %173 = fcmp oeq float %172, 0x7FF0000000000000\l  %174 = select i1 %173, float %163, float %169\l  %175 = tail call float @llvm.fabs.f32(float %174) #3\l  %176 = fcmp oeq float %175, 0x7FF0000000000000\l  %177 = select i1 %176, float 0.000000e+00, float %171\l  %178 = fcmp oeq float %174, 0x40562E4300000000\l  %179 = select i1 %178, float 0x3EE0000000000000, float 0.000000e+00\l  %180 = fsub float %174, %179\l  %181 = fadd float %179, %177\l  %182 = fmul float %180, 0x3FF7154760000000\l  %183 = tail call float @llvm.rint.f32(float %182)\l  %184 = fcmp ogt float %180, 0x40562E4300000000\l  %185 = fcmp olt float %180, 0xC059D1DA00000000\l  %186 = fneg float %182\l  %187 = tail call float @llvm.fma.f32(float %180, float 0x3FF7154760000000,\l... float %186)\l  %188 = tail call float @llvm.fma.f32(float %180, float 0x3E54AE0BE0000000,\l... float %187)\l  %189 = fsub float %182, %183\l  %190 = fadd float %188, %189\l  %191 = tail call float @llvm.exp2.f32(float %190)\l  %192 = fptosi float %183 to i32\l  %193 = tail call float @llvm.amdgcn.ldexp.f32(float %191, i32 %192)\l  %194 = select i1 %185, float 0.000000e+00, float %193\l  %195 = select i1 %184, float 0x7FF0000000000000, float %194\l  %196 = tail call float @llvm.fma.f32(float %195, float %181, float %195)\l  %197 = tail call float @llvm.fabs.f32(float %195) #3\l  %198 = fcmp oeq float %197, 0x7FF0000000000000\l  %199 = select i1 %198, float %195, float %196\l  %200 = tail call float @llvm.fabs.f32(float %199)\l  %201 = fcmp oeq float %55, 0x7FF0000000000000\l  %202 = fcmp oeq float %54, 0.000000e+00\l  %203 = select i1 %201, float 0x7FF0000000000000, float %200\l  %204 = select i1 %202, float 0.000000e+00, float %203\l  %205 = fcmp uno float %54, 0.000000e+00\l  %206 = select i1 %205, float 0x7FF8000000000000, float %204\l  %207 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  %208 = fadd contract float %207, %206\l  store float %208, float addrspace(1)* %35, align 4, !tbaa !16\l  %209 = add nuw nsw i32 %48, 1\l  %210 = icmp eq i32 %209, %4\l  br i1 %210, label %211, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x6213fd0:s0 -> Node0x6213a80;
	Node0x6213fd0:s1 -> Node0x6213fd0;
	Node0x6213a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%211:\l211:                                              \l  %212 = phi float [ %41, %40 ], [ %208, %47 ]\l  %213 = add nuw nsw i32 %42, 1\l  %214 = icmp eq i32 %213, %2\l  br i1 %214, label %215, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6213a80:s0 -> Node0x6213750;
	Node0x6213a80:s1 -> Node0x62139c0;
	Node0x6213750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%215:\l215:                                              \l  %216 = phi float [ 0.000000e+00, %33 ], [ %212, %211 ]\l  %217 = fmul contract float %216, %11\l  store float %217, float addrspace(1)* %35, align 4, !tbaa !16\l  br label %218\l}"];
	Node0x6213750 -> Node0x6211680;
	Node0x6211680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%218:\l218:                                              \l  ret void\l}"];
}
