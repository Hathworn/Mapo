digraph "CFG for 'vec_addPhotonsAndBackgroundMany_scmos' function" {
	label="CFG for 'vec_addPhotonsAndBackgroundMany_scmos' function";

	Node0x6224a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = udiv i32 %16, %13\l  %26 = mul i32 %25, %13\l  %27 = icmp ugt i32 %16, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %24\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp slt i32 %33, %0\l  br i1 %34, label %35, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6224a30:s0 -> Node0x6226af0;
	Node0x6224a30:s1 -> Node0x6228c00;
	Node0x6226af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = sdiv i32 %33, %1\l  %37 = sext i32 %33 to i64\l  %38 = getelementptr inbounds double, double addrspace(1)* %3, i64 %37\l  %39 = load double, double addrspace(1)* %38, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %40 = shl nsw i32 %36, 1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %4, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %44 = fmul contract double %39, %43\l  %45 = add nuw nsw i32 %40, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %4, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %49 = fadd contract double %44, %48\l  %50 = getelementptr inbounds double, double addrspace(1)* %5, i64 %37\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %52 = fadd contract double %49, %51\l  %53 = getelementptr inbounds double, double addrspace(1)* %2, i64 %37\l  store double %52, double addrspace(1)* %53, align 8, !tbaa !16\l  br label %54\l}"];
	Node0x6226af0 -> Node0x6228c00;
	Node0x6228c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  ret void\l}"];
}
