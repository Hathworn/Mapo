digraph "CFG for 'vec_addPhotonsAndBackgroundManyReshuffle' function" {
	label="CFG for 'vec_addPhotonsAndBackgroundManyReshuffle' function";

	Node0x5c23ac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = udiv i32 %16, %13\l  %26 = mul i32 %25, %13\l  %27 = icmp ugt i32 %16, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %24\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp slt i32 %33, %0\l  br i1 %34, label %35, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5c23ac0:s0 -> Node0x5c25b80;
	Node0x5c23ac0:s1 -> Node0x5c27c90;
	Node0x5c25b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%35:\l35:                                               \l  %36 = freeze i32 %33\l  %37 = freeze i32 %1\l  %38 = sdiv i32 %36, %37\l  %39 = freeze i32 %2\l  %40 = sdiv i32 %38, %39\l  %41 = mul i32 %38, %37\l  %42 = sub i32 %36, %41\l  %43 = mul i32 %40, %39\l  %44 = sub i32 %38, %43\l  %45 = mul nsw i32 %2, %1\l  %46 = sdiv i32 %0, %45\l  %47 = mul i32 %46, %44\l  %48 = add i32 %47, %40\l  %49 = mul i32 %48, %1\l  %50 = add i32 %49, %42\l  %51 = sext i32 %33 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %4, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %54 = shl nsw i32 %38, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %5, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %58 = fmul contract double %53, %57\l  %59 = add nuw nsw i32 %54, 1\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %5, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %63 = fadd contract double %58, %62\l  %64 = sext i32 %50 to i64\l  %65 = getelementptr inbounds double, double addrspace(1)* %3, i64 %64\l  store double %63, double addrspace(1)* %65, align 8, !tbaa !16\l  br label %66\l}"];
	Node0x5c25b80 -> Node0x5c27c90;
	Node0x5c27c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  ret void\l}"];
}
