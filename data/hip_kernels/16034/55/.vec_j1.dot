digraph "CFG for 'vec_j1' function" {
	label="CFG for 'vec_j1' function";

	Node0x49f3520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %319\l|{<s0>T|<s1>F}}"];
	Node0x49f3520:s0 -> Node0x49f7560;
	Node0x49f3520:s1 -> Node0x49f75f0;
	Node0x49f7560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fcmp ugt double %36, 0x4029080000000000\l  br i1 %37, label %111, label %38\l|{<s0>T|<s1>F}}"];
	Node0x49f7560:s0 -> Node0x49f7dc0;
	Node0x49f7560:s1 -> Node0x49f7e50;
	Node0x49f7e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%38:\l38:                                               \l  %39 = fcmp ugt double %36, 0x4018B00000000000\l  br i1 %39, label %51, label %40\l|{<s0>T|<s1>F}}"];
	Node0x49f7e50:s0 -> Node0x49f8020;
	Node0x49f7e50:s1 -> Node0x49f80b0;
	Node0x49f80b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%40:\l40:                                               \l  %41 = fcmp ugt double %36, 1.093750e+00\l  br i1 %41, label %42, label %62\l|{<s0>T|<s1>F}}"];
	Node0x49f80b0:s0 -> Node0x49f8280;
	Node0x49f80b0:s1 -> Node0x49f8310;
	Node0x49f8280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%42:\l42:                                               \l  %43 = fcmp ugt double %36, 2.843750e+00\l  %44 = fcmp ugt double %36, 0x4012500000000000\l  %45 = select i1 %44, double 0x3CA5C646A75D7539, double 0xBCA60155A9D1B256\l  %46 = select i1 %44, double 0x40155365BC032467, double 0x400EA75575AF6F09\l  %47 = select i1 %44, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 45),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 30)\l  %48 = select i1 %43, double %45, double 0x3C5616D820CFDAEB\l  %49 = select i1 %43, double %46, double 0x3FFD757D1FEC8A3A\l  %50 = select i1 %43, double addrspace(4)* %47, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 15)\l  br label %62\l}"];
	Node0x49f8280 -> Node0x49f8310;
	Node0x49f8020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%51:\l51:                                               \l  %52 = fcmp ugt double %36, 7.781250e+00\l  br i1 %52, label %53, label %62\l|{<s0>T|<s1>F}}"];
	Node0x49f8020:s0 -> Node0x49f9150;
	Node0x49f8020:s1 -> Node0x49f8310;
	Node0x49f9150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%53:\l53:                                               \l  %54 = fcmp ugt double %36, 0x4022B80000000000\l  %55 = fcmp ugt double %36, 0x4025E80000000000\l  %56 = select i1 %55, double 0x3CC9A84D3A5FEDC2, double 0x3CC02610A51562B6\l  %57 = select i1 %55, double 0x40276979797EE5AC, double 0x402458D0D0BDFC29\l  %58 = select i1 %55, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 105),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 90)\l  %59 = select i1 %54, double %56, double 0xBCA63E17EC20A31D\l  %60 = select i1 %54, double %57, double 0x402112980F0B88A1\l  %61 = select i1 %54, double addrspace(4)* %58, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 75)\l  br label %62\l}"];
	Node0x49f9150 -> Node0x49f8310;
	Node0x49f8310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%62:\l62:                                               \l  %63 = phi double [ 0.000000e+00, %40 ], [ 0xBC9B226D9D243827, %51 ], [ %48,\l... %42 ], [ %59, %53 ]\l  %64 = phi double [ 0.000000e+00, %40 ], [ 0x401C0FF5F3B47250, %51 ], [ %49,\l... %42 ], [ %60, %53 ]\l  %65 = phi double addrspace(4)* [ getelementptr inbounds ([120 x double],\l... [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 0), %40 ], [\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 60), %51 ], [ %50, %42 ], [ %61, %53 ]\l  %66 = fsub double %36, %64\l  %67 = fsub double %66, %63\l  %68 = getelementptr inbounds double, double addrspace(4)* %65, i64 14\l  %69 = load double, double addrspace(4)* %68, align 8, !tbaa !20\l  %70 = getelementptr inbounds double, double addrspace(4)* %65, i64 13\l  %71 = load double, double addrspace(4)* %70, align 8, !tbaa !20\l  %72 = tail call double @llvm.fma.f64(double %67, double %69, double %71)\l  %73 = getelementptr inbounds double, double addrspace(4)* %65, i64 12\l  %74 = load double, double addrspace(4)* %73, align 8, !tbaa !20\l  %75 = tail call double @llvm.fma.f64(double %67, double %72, double %74)\l  %76 = getelementptr inbounds double, double addrspace(4)* %65, i64 11\l  %77 = load double, double addrspace(4)* %76, align 8, !tbaa !20\l  %78 = tail call double @llvm.fma.f64(double %67, double %75, double %77)\l  %79 = getelementptr inbounds double, double addrspace(4)* %65, i64 10\l  %80 = load double, double addrspace(4)* %79, align 8, !tbaa !20\l  %81 = tail call double @llvm.fma.f64(double %67, double %78, double %80)\l  %82 = getelementptr inbounds double, double addrspace(4)* %65, i64 9\l  %83 = load double, double addrspace(4)* %82, align 8, !tbaa !20\l  %84 = tail call double @llvm.fma.f64(double %67, double %81, double %83)\l  %85 = getelementptr inbounds double, double addrspace(4)* %65, i64 8\l  %86 = load double, double addrspace(4)* %85, align 8, !tbaa !20\l  %87 = tail call double @llvm.fma.f64(double %67, double %84, double %86)\l  %88 = getelementptr inbounds double, double addrspace(4)* %65, i64 7\l  %89 = load double, double addrspace(4)* %88, align 8, !tbaa !20\l  %90 = tail call double @llvm.fma.f64(double %67, double %87, double %89)\l  %91 = getelementptr inbounds double, double addrspace(4)* %65, i64 6\l  %92 = load double, double addrspace(4)* %91, align 8, !tbaa !20\l  %93 = tail call double @llvm.fma.f64(double %67, double %90, double %92)\l  %94 = getelementptr inbounds double, double addrspace(4)* %65, i64 5\l  %95 = load double, double addrspace(4)* %94, align 8, !tbaa !20\l  %96 = tail call double @llvm.fma.f64(double %67, double %93, double %95)\l  %97 = getelementptr inbounds double, double addrspace(4)* %65, i64 4\l  %98 = load double, double addrspace(4)* %97, align 8, !tbaa !20\l  %99 = tail call double @llvm.fma.f64(double %67, double %96, double %98)\l  %100 = getelementptr inbounds double, double addrspace(4)* %65, i64 3\l  %101 = load double, double addrspace(4)* %100, align 8, !tbaa !20\l  %102 = tail call double @llvm.fma.f64(double %67, double %99, double %101)\l  %103 = getelementptr inbounds double, double addrspace(4)* %65, i64 2\l  %104 = load double, double addrspace(4)* %103, align 8, !tbaa !20\l  %105 = tail call double @llvm.fma.f64(double %67, double %102, double %104)\l  %106 = getelementptr inbounds double, double addrspace(4)* %65, i64 1\l  %107 = load double, double addrspace(4)* %106, align 8, !tbaa !20\l  %108 = tail call double @llvm.fma.f64(double %67, double %105, double %107)\l  %109 = load double, double addrspace(4)* %65, align 8, !tbaa !20\l  %110 = tail call double @llvm.fma.f64(double %67, double %108, double %109)\l  br label %313\l}"];
	Node0x49f8310 -> Node0x49fce60;
	Node0x49f7dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%111:\l111:                                              \l  %112 = fdiv double 1.000000e+00, %36\l  %113 = fmul double %112, %112\l  %114 = tail call double @llvm.fma.f64(double %113, double\l... 0x41BC22F653D3A76E, double 0xC1780A4D95ED3E8E)\l  %115 = tail call double @llvm.fma.f64(double %113, double %114, double\l... 0x41272F1D1F8CDD76)\l  %116 = tail call double @llvm.fma.f64(double %113, double %115, double\l... 0xC0D3EA4E96460AD7)\l  %117 = tail call double @llvm.fma.f64(double %113, double %116, double\l... 0x408488DD98D9AB3A)\l  %118 = tail call double @llvm.fma.f64(double %113, double %117, double\l... 0xC03E9ED612FA3B38)\l  %119 = tail call double @llvm.fma.f64(double %113, double %118, double\l... 0x4002F484FCAB9DDA)\l  %120 = tail call double @llvm.fma.f64(double %113, double %119, double\l... 0xBFD7BCCCCAD443C0)\l  %121 = tail call double @llvm.fma.f64(double %113, double %120, double\l... 0x3FC4FFFFFFFFCBFA)\l  %122 = tail call double @llvm.fma.f64(double %113, double %121, double\l... -3.750000e-01)\l  %123 = fmul double %112, %122\l  %124 = tail call double @llvm.amdgcn.rsq.f64(double %112)\l  %125 = fmul double %112, %124\l  %126 = fmul double %124, 5.000000e-01\l  %127 = fneg double %126\l  %128 = tail call double @llvm.fma.f64(double %127, double %125, double\l... 5.000000e-01)\l  %129 = tail call double @llvm.fma.f64(double %126, double %128, double %126)\l  %130 = tail call double @llvm.fma.f64(double %125, double %128, double %125)\l  %131 = fneg double %130\l  %132 = tail call double @llvm.fma.f64(double %131, double %130, double %112)\l  %133 = tail call double @llvm.fma.f64(double %132, double %129, double %130)\l  %134 = fcmp oeq double %112, 0.000000e+00\l  %135 = select i1 %134, double %112, double %133\l  %136 = fmul double %135, 0x3FE9884533D43651\l  %137 = tail call double @llvm.fma.f64(double %113, double\l... 0xC137940A06621145, double 0x40F591FB68428BAF)\l  %138 = tail call double @llvm.fma.f64(double %113, double %137, double\l... 0xC0A996552A8BAFB0)\l  %139 = tail call double @llvm.fma.f64(double %113, double %138, double\l... 0x4060795578CD8C93)\l  %140 = tail call double @llvm.fma.f64(double %113, double %139, double\l... 0xC01EF38364596B5A)\l  %141 = tail call double @llvm.fma.f64(double %113, double %140, double\l... 0x3FE9C4FA465744C7)\l  %142 = tail call double @llvm.fma.f64(double %113, double %141, double\l... 0xBFC8BFFFFC3937C1)\l  %143 = tail call double @llvm.fma.f64(double %113, double %142, double\l... 0x3FC7FFFFFFFFC240)\l  %144 = tail call double @llvm.fma.f64(double %113, double %143, double\l... 1.000000e+00)\l  %145 = fmul double %136, %144\l  %146 = fcmp olt double %36, 0x41D0000000000000\l  br i1 %146, label %147, label %166\l|{<s0>T|<s1>F}}"];
	Node0x49f7dc0:s0 -> Node0x49ffb60;
	Node0x49f7dc0:s1 -> Node0x49ffbf0;
	Node0x49ffb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%147:\l147:                                              \l  %148 = fmul double %36, 0x3FE45F306DC9C883\l  %149 = tail call double @llvm.rint.f64(double %148)\l  %150 = tail call double @llvm.fma.f64(double %149, double\l... 0xBFF921FB54442D18, double %36)\l  %151 = tail call double @llvm.fma.f64(double %149, double\l... 0xBC91A62633145C00, double %150)\l  %152 = fmul double %149, 0x3C91A62633145C00\l  %153 = fneg double %152\l  %154 = tail call double @llvm.fma.f64(double %149, double\l... 0x3C91A62633145C00, double %153)\l  %155 = fsub double %150, %152\l  %156 = fsub double %150, %155\l  %157 = fsub double %156, %152\l  %158 = fsub double %155, %151\l  %159 = fadd double %158, %157\l  %160 = fsub double %159, %154\l  %161 = tail call double @llvm.fma.f64(double %149, double\l... 0xB97B839A252049C0, double %160)\l  %162 = fadd double %151, %161\l  %163 = fsub double %162, %151\l  %164 = fsub double %161, %163\l  %165 = fptosi double %149 to i32\l  br label %242\l}"];
	Node0x49ffb60 -> Node0x4a00c30;
	Node0x49ffbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%166:\l166:                                              \l  %167 = tail call double @llvm.amdgcn.trig.preop.f64(double %36, i32 0)\l  %168 = tail call double @llvm.amdgcn.trig.preop.f64(double %36, i32 1)\l  %169 = tail call double @llvm.amdgcn.trig.preop.f64(double %36, i32 2)\l  %170 = fcmp oge double %36, 0x7B00000000000000\l  %171 = tail call double @llvm.amdgcn.ldexp.f64(double %36, i32 -128)\l  %172 = select i1 %170, double %171, double %36\l  %173 = fmul double %169, %172\l  %174 = fneg double %173\l  %175 = tail call double @llvm.fma.f64(double %169, double %172, double %174)\l  %176 = fmul double %168, %172\l  %177 = fneg double %176\l  %178 = tail call double @llvm.fma.f64(double %168, double %172, double %177)\l  %179 = fmul double %167, %172\l  %180 = fneg double %179\l  %181 = tail call double @llvm.fma.f64(double %167, double %172, double %180)\l  %182 = fadd double %176, %181\l  %183 = fsub double %182, %176\l  %184 = fsub double %182, %183\l  %185 = fsub double %181, %183\l  %186 = fsub double %176, %184\l  %187 = fadd double %185, %186\l  %188 = fadd double %173, %178\l  %189 = fsub double %188, %173\l  %190 = fsub double %188, %189\l  %191 = fsub double %178, %189\l  %192 = fsub double %173, %190\l  %193 = fadd double %191, %192\l  %194 = fadd double %188, %187\l  %195 = fsub double %194, %188\l  %196 = fsub double %194, %195\l  %197 = fsub double %187, %195\l  %198 = fsub double %188, %196\l  %199 = fadd double %197, %198\l  %200 = fadd double %193, %199\l  %201 = fadd double %175, %200\l  %202 = fadd double %179, %182\l  %203 = fsub double %202, %179\l  %204 = fsub double %182, %203\l  %205 = fadd double %204, %194\l  %206 = fsub double %205, %204\l  %207 = fsub double %194, %206\l  %208 = fadd double %207, %201\l  %209 = tail call double @llvm.amdgcn.ldexp.f64(double %202, i32 -2)\l  %210 = tail call double @llvm.amdgcn.fract.f64(double %209)\l  %211 = tail call i1 @llvm.amdgcn.class.f64(double %209, i32 516)\l  %212 = select i1 %211, double 0.000000e+00, double %210\l  %213 = tail call double @llvm.amdgcn.ldexp.f64(double %212, i32 2)\l  %214 = fadd double %213, %205\l  %215 = fcmp olt double %214, 0.000000e+00\l  %216 = select i1 %215, double 4.000000e+00, double 0.000000e+00\l  %217 = fadd double %213, %216\l  %218 = fadd double %205, %217\l  %219 = fptosi double %218 to i32\l  %220 = sitofp i32 %219 to double\l  %221 = fsub double %217, %220\l  %222 = fadd double %205, %221\l  %223 = fsub double %222, %221\l  %224 = fsub double %205, %223\l  %225 = fadd double %208, %224\l  %226 = fcmp oge double %222, 5.000000e-01\l  %227 = zext i1 %226 to i32\l  %228 = add nsw i32 %227, %219\l  %229 = select i1 %226, double 1.000000e+00, double 0.000000e+00\l  %230 = fsub double %222, %229\l  %231 = fadd double %230, %225\l  %232 = fsub double %231, %230\l  %233 = fsub double %225, %232\l  %234 = fmul double %231, 0x3FF921FB54442D18\l  %235 = fneg double %234\l  %236 = tail call double @llvm.fma.f64(double %231, double\l... 0x3FF921FB54442D18, double %235)\l  %237 = tail call double @llvm.fma.f64(double %231, double\l... 0x3C91A62633145C07, double %236)\l  %238 = tail call double @llvm.fma.f64(double %233, double\l... 0x3FF921FB54442D18, double %237)\l  %239 = fadd double %234, %238\l  %240 = fsub double %239, %234\l  %241 = fsub double %238, %240\l  br label %242\l}"];
	Node0x49ffbf0 -> Node0x4a00c30;
	Node0x4a00c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%242:\l242:                                              \l  %243 = phi double [ %164, %147 ], [ %241, %166 ]\l  %244 = phi double [ %162, %147 ], [ %239, %166 ]\l  %245 = phi i32 [ %165, %147 ], [ %228, %166 ]\l  %246 = and i32 %245, 3\l  %247 = fcmp olt double %244, %123\l  %248 = sext i1 %247 to i32\l  %249 = add nsw i32 %246, -1\l  %250 = add nsw i32 %249, %248\l  %251 = select i1 %247, i32 -2147483648, i32 0\l  %252 = xor i32 %251, -1075240453\l  %253 = insertelement \<2 x i32\> \<i32 1413754136, i32 poison\>, i32 %252, i64 1\l  %254 = bitcast \<2 x i32\> %253 to double\l  %255 = xor i32 %251, -1132354010\l  %256 = insertelement \<2 x i32\> \<i32 856972295, i32 poison\>, i32 %255, i64 1\l  %257 = bitcast \<2 x i32\> %256 to double\l  %258 = fsub double %254, %123\l  %259 = fsub double %254, %258\l  %260 = fsub double %259, %123\l  %261 = fadd double %260, %257\l  %262 = fadd double %258, %261\l  %263 = fsub double %262, %258\l  %264 = fsub double %261, %263\l  %265 = fadd double %244, %262\l  %266 = fsub double %265, %262\l  %267 = fsub double %244, %266\l  %268 = fadd double %243, %264\l  %269 = fadd double %267, %268\l  %270 = fadd double %265, %269\l  %271 = fsub double %270, %265\l  %272 = fsub double %269, %271\l  %273 = fmul double %270, %270\l  %274 = fmul double %273, 5.000000e-01\l  %275 = fsub double 1.000000e+00, %274\l  %276 = fsub double 1.000000e+00, %275\l  %277 = fsub double %276, %274\l  %278 = fmul double %273, %273\l  %279 = tail call double @llvm.fma.f64(double %273, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %280 = tail call double @llvm.fma.f64(double %273, double %279, double\l... 0xBE927E4FA17F65F6)\l  %281 = tail call double @llvm.fma.f64(double %273, double %280, double\l... 0x3EFA01A019F4EC90)\l  %282 = tail call double @llvm.fma.f64(double %273, double %281, double\l... 0xBF56C16C16C16967)\l  %283 = tail call double @llvm.fma.f64(double %273, double %282, double\l... 0x3FA5555555555555)\l  %284 = fneg double %272\l  %285 = tail call double @llvm.fma.f64(double %270, double %284, double %277)\l  %286 = tail call double @llvm.fma.f64(double %278, double %283, double %285)\l  %287 = fadd double %275, %286\l  %288 = tail call double @llvm.fma.f64(double %273, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %289 = tail call double @llvm.fma.f64(double %273, double %288, double\l... 0x3EC71DE3796CDE01)\l  %290 = tail call double @llvm.fma.f64(double %273, double %289, double\l... 0xBF2A01A019E83E5C)\l  %291 = tail call double @llvm.fma.f64(double %273, double %290, double\l... 0x3F81111111110BB3)\l  %292 = fneg double %273\l  %293 = fmul double %270, %292\l  %294 = fmul double %272, 5.000000e-01\l  %295 = tail call double @llvm.fma.f64(double %293, double %291, double %294)\l  %296 = tail call double @llvm.fma.f64(double %273, double %295, double %284)\l  %297 = tail call double @llvm.fma.f64(double %293, double\l... 0xBFC5555555555555, double %296)\l  %298 = fsub double %270, %297\l  %299 = fneg double %298\l  %300 = and i32 %250, 1\l  %301 = icmp eq i32 %300, 0\l  %302 = select i1 %301, double %287, double %299\l  %303 = bitcast double %302 to \<2 x i32\>\l  %304 = shl i32 %250, 30\l  %305 = and i32 %304, -2147483648\l  %306 = extractelement \<2 x i32\> %303, i64 1\l  %307 = xor i32 %306, %305\l  %308 = insertelement \<2 x i32\> %303, i32 %307, i64 1\l  %309 = bitcast \<2 x i32\> %308 to double\l  %310 = fmul double %145, %309\l  %311 = tail call i1 @llvm.amdgcn.class.f64(double %36, i32 512)\l  %312 = select i1 %311, double 0.000000e+00, double %310\l  br label %313\l}"];
	Node0x4a00c30 -> Node0x49fce60;
	Node0x49fce60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%313:\l313:                                              \l  %314 = phi double [ %110, %62 ], [ %312, %242 ]\l  %315 = fcmp olt double %35, 0.000000e+00\l  %316 = fneg double %314\l  %317 = select i1 %315, double %316, double %314\l  %318 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %317, double addrspace(1)* %318, align 8, !tbaa !16\l  br label %319\l}"];
	Node0x49fce60 -> Node0x49f75f0;
	Node0x49f75f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%319:\l319:                                              \l  ret void\l}"];
}
