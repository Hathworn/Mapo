digraph "CFG for 'vec_y1' function" {
	label="CFG for 'vec_y1' function";

	Node0x59ad000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %723\l|{<s0>T|<s1>F}}"];
	Node0x59ad000:s0 -> Node0x59b1900;
	Node0x59ad000:s1 -> Node0x59b1990;
	Node0x59b1900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fcmp ugt double %35, 1.256250e+01\l  br i1 %36, label %519, label %37\l|{<s0>T|<s1>F}}"];
	Node0x59b1900:s0 -> Node0x59a7450;
	Node0x59b1900:s1 -> Node0x59a74e0;
	Node0x59a74e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = fcmp olt double %35, 2.312500e+00\l  br i1 %38, label %39, label %64\l|{<s0>T|<s1>F}}"];
	Node0x59a74e0:s0 -> Node0x59a76b0;
	Node0x59a74e0:s1 -> Node0x59a7740;
	Node0x59a76b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%39:\l39:                                               \l  %40 = fcmp olt double %35, 1.218750e+00\l  br i1 %40, label %41, label %53\l|{<s0>T|<s1>F}}"];
	Node0x59a76b0:s0 -> Node0x59a7910;
	Node0x59a76b0:s1 -> Node0x59a79a0;
	Node0x59a7910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%41:\l41:                                               \l  %42 = fcmp olt double %35, 5.000000e-01\l  br i1 %42, label %90, label %43\l|{<s0>T|<s1>F}}"];
	Node0x59a7910:s0 -> Node0x59a7b70;
	Node0x59a7910:s1 -> Node0x59a7bc0;
	Node0x59a7bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%43:\l43:                                               \l  %44 = fcmp olt double %35, 6.250000e-01\l  %45 = fcmp olt double %35, 7.500000e-01\l  %46 = fcmp olt double %35, 9.375000e-01\l  %47 = select i1 %46, double 7.500000e-01, double 9.375000e-01\l  %48 = select i1 %46, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 45),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 60)\l  %49 = select i1 %45, double 6.250000e-01, double %47\l  %50 = select i1 %45, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 30),\l... double addrspace(4)* %48\l  %51 = select i1 %44, double 5.000000e-01, double %49\l  %52 = select i1 %44, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 15),\l... double addrspace(4)* %50\l  br label %90\l}"];
	Node0x59a7bc0 -> Node0x59a7b70;
	Node0x59a79a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%53:\l53:                                               \l  %54 = fcmp olt double %35, 1.531250e+00\l  br i1 %54, label %90, label %55\l|{<s0>T|<s1>F}}"];
	Node0x59a79a0:s0 -> Node0x59a7b70;
	Node0x59a79a0:s1 -> Node0x59a89a0;
	Node0x59a89a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%55:\l55:                                               \l  %56 = fcmp olt double %35, 1.843750e+00\l  %57 = fcmp olt double %35, 0x4000A00000000000\l  %58 = select i1 %57, double 1.843750e+00, double 0x400193BED4DFF243\l  %59 = select i1 %57, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 105),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 120)\l  %60 = or i1 %56, %57\l  %61 = select i1 %60, double 0.000000e+00, double 0xBC8BD1E50D219BFD\l  %62 = select i1 %56, double 1.531250e+00, double %58\l  %63 = select i1 %56, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 90),\l... double addrspace(4)* %59\l  br label %90\l}"];
	Node0x59a89a0 -> Node0x59a7b70;
	Node0x59a7740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%64:\l64:                                               \l  %65 = fcmp olt double %35, 6.187500e+00\l  br i1 %65, label %66, label %79\l|{<s0>T|<s1>F}}"];
	Node0x59a7740:s0 -> Node0x59b1b60;
	Node0x59a7740:s1 -> Node0x59b1bb0;
	Node0x59b1b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%66:\l66:                                               \l  %67 = fcmp olt double %35, 0x4005E00000000000\l  br i1 %67, label %90, label %68\l|{<s0>T|<s1>F}}"];
	Node0x59b1b60:s0 -> Node0x59a7b70;
	Node0x59b1b60:s1 -> Node0x59a98c0;
	Node0x59a98c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%68:\l68:                                               \l  %69 = fcmp olt double %35, 3.156250e+00\l  br i1 %69, label %90, label %70\l|{<s0>T|<s1>F}}"];
	Node0x59a98c0:s0 -> Node0x59a7b70;
	Node0x59a98c0:s1 -> Node0x59a9a90;
	Node0x59a9a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%70:\l70:                                               \l  %71 = fcmp olt double %35, 0x4010D00000000000\l  %72 = fcmp olt double %35, 4.687500e+00\l  %73 = select i1 %72, double 0.000000e+00, double 0x3CBDFE7BAC228E8C\l  %74 = select i1 %72, double 0x4010D00000000000, double 0x4015B7FE4E87B02E\l  %75 = select i1 %72, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 180),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 195)\l  %76 = select i1 %71, double 0x3C53BAC0714E4129, double %73\l  %77 = select i1 %71, double 0x400D76D4AFFBA175, double %74\l  %78 = select i1 %71, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 165),\l... double addrspace(4)* %75\l  br label %90\l}"];
	Node0x59a9a90 -> Node0x59a7b70;
	Node0x59b1bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%79:\l79:                                               \l  %80 = fcmp olt double %35, 0x401F140000000000\l  br i1 %80, label %90, label %81\l|{<s0>T|<s1>F}}"];
	Node0x59b1bb0:s0 -> Node0x59a7b70;
	Node0x59b1bb0:s1 -> Node0x59aa5d0;
	Node0x59aa5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  %82 = fcmp olt double %35, 0x4022B80000000000\l  %83 = fcmp olt double %35, 1.093750e+01\l  %84 = select i1 %83, double 0x3CC8F4BA5D68E440, double 0x3C80FC786CE06080\l  %85 = select i1 %83, double 0x40243F2EE51E8C7E, double 0x40277F9138D43206\l  %86 = select i1 %83, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 240),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 255)\l  %87 = select i1 %82, double 0x3CB479CC068D9046, double %84\l  %88 = select i1 %82, double 0x40213127AE6169B4, double %85\l  %89 = select i1 %82, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 225),\l... double addrspace(4)* %86\l  br label %90\l}"];
	Node0x59aa5d0 -> Node0x59a7b70;
	Node0x59a7b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%90:\l90:                                               \l  %91 = phi double [ 0.000000e+00, %41 ], [ 0.000000e+00, %53 ], [\l... 0.000000e+00, %66 ], [ 0.000000e+00, %68 ], [ 0x3CA7960B6B1C46AC, %79 ], [\l... %61, %55 ], [ %76, %70 ], [ %87, %81 ], [ 0.000000e+00, %43 ]\l  %92 = phi double [ 0.000000e+00, %41 ], [ 1.218750e+00, %53 ], [\l... 2.312500e+00, %66 ], [ 0x4005E00000000000, %68 ], [ 0x401BC41890588553, %79\l... ], [ %62, %55 ], [ %77, %70 ], [ %88, %81 ], [ %51, %43 ]\l  %93 = phi double addrspace(4)* [ getelementptr inbounds ([270 x double],\l... [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 0), %41 ], [\l... getelementptr inbounds ([270 x double], [270 x double] addrspace(4)*\l... @__ocmltbl_M64_Y1, i64 0, i64 75), %53 ], [ getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 135), %66\l... ], [ getelementptr inbounds ([270 x double], [270 x double] addrspace(4)*\l... @__ocmltbl_M64_Y1, i64 0, i64 150), %68 ], [ getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y1, i64 0, i64 210), %79\l... ], [ %63, %55 ], [ %78, %70 ], [ %89, %81 ], [ %52, %43 ]\l  %94 = fmul double %35, %35\l  %95 = fsub double %35, %92\l  %96 = fsub double %95, %91\l  %97 = fcmp olt double %35, 5.000000e-01\l  %98 = select i1 %97, double %94, double %96\l  %99 = getelementptr inbounds double, double addrspace(4)* %93, i64 14\l  %100 = load double, double addrspace(4)* %99, align 8, !tbaa !20\l  %101 = getelementptr inbounds double, double addrspace(4)* %93, i64 13\l  %102 = load double, double addrspace(4)* %101, align 8, !tbaa !20\l  %103 = tail call double @llvm.fma.f64(double %98, double %100, double %102)\l  %104 = getelementptr inbounds double, double addrspace(4)* %93, i64 12\l  %105 = load double, double addrspace(4)* %104, align 8, !tbaa !20\l  %106 = tail call double @llvm.fma.f64(double %98, double %103, double %105)\l  %107 = getelementptr inbounds double, double addrspace(4)* %93, i64 11\l  %108 = load double, double addrspace(4)* %107, align 8, !tbaa !20\l  %109 = tail call double @llvm.fma.f64(double %98, double %106, double %108)\l  %110 = getelementptr inbounds double, double addrspace(4)* %93, i64 10\l  %111 = load double, double addrspace(4)* %110, align 8, !tbaa !20\l  %112 = tail call double @llvm.fma.f64(double %98, double %109, double %111)\l  %113 = getelementptr inbounds double, double addrspace(4)* %93, i64 9\l  %114 = load double, double addrspace(4)* %113, align 8, !tbaa !20\l  %115 = tail call double @llvm.fma.f64(double %98, double %112, double %114)\l  %116 = getelementptr inbounds double, double addrspace(4)* %93, i64 8\l  %117 = load double, double addrspace(4)* %116, align 8, !tbaa !20\l  %118 = tail call double @llvm.fma.f64(double %98, double %115, double %117)\l  %119 = getelementptr inbounds double, double addrspace(4)* %93, i64 7\l  %120 = load double, double addrspace(4)* %119, align 8, !tbaa !20\l  %121 = tail call double @llvm.fma.f64(double %98, double %118, double %120)\l  %122 = getelementptr inbounds double, double addrspace(4)* %93, i64 6\l  %123 = load double, double addrspace(4)* %122, align 8, !tbaa !20\l  %124 = tail call double @llvm.fma.f64(double %98, double %121, double %123)\l  %125 = getelementptr inbounds double, double addrspace(4)* %93, i64 5\l  %126 = load double, double addrspace(4)* %125, align 8, !tbaa !20\l  %127 = tail call double @llvm.fma.f64(double %98, double %124, double %126)\l  %128 = getelementptr inbounds double, double addrspace(4)* %93, i64 4\l  %129 = load double, double addrspace(4)* %128, align 8, !tbaa !20\l  %130 = tail call double @llvm.fma.f64(double %98, double %127, double %129)\l  %131 = getelementptr inbounds double, double addrspace(4)* %93, i64 3\l  %132 = load double, double addrspace(4)* %131, align 8, !tbaa !20\l  %133 = tail call double @llvm.fma.f64(double %98, double %130, double %132)\l  %134 = getelementptr inbounds double, double addrspace(4)* %93, i64 2\l  %135 = load double, double addrspace(4)* %134, align 8, !tbaa !20\l  %136 = tail call double @llvm.fma.f64(double %98, double %133, double %135)\l  %137 = getelementptr inbounds double, double addrspace(4)* %93, i64 1\l  %138 = load double, double addrspace(4)* %137, align 8, !tbaa !20\l  %139 = tail call double @llvm.fma.f64(double %98, double %136, double %138)\l  %140 = load double, double addrspace(4)* %93, align 8, !tbaa !20\l  %141 = tail call double @llvm.fma.f64(double %98, double %139, double %140)\l  br i1 %97, label %142, label %720\l|{<s0>T|<s1>F}}"];
	Node0x59a7b70:s0 -> Node0x59be5e0;
	Node0x59a7b70:s1 -> Node0x59be670;
	Node0x59be5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%142:\l142:                                              \l  %143 = fcmp olt double %35, 0x3DE0000000000000\l  %144 = tail call double @llvm.fabs.f64(double %35)\l  br i1 %143, label %145, label %147\l|{<s0>T|<s1>F}}"];
	Node0x59be5e0:s0 -> Node0x59bea40;
	Node0x59be5e0:s1 -> Node0x59bead0;
	Node0x59bea40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%145:\l145:                                              \l  %146 = fdiv double 0xBFE45F306DC9C883, %144\l  br label %515\l}"];
	Node0x59bea40 -> Node0x59beca0;
	Node0x59bead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%147:\l147:                                              \l  %148 = fcmp ugt double %144, 0x4029080000000000\l  br i1 %148, label %222, label %149\l|{<s0>T|<s1>F}}"];
	Node0x59bead0:s0 -> Node0x59bee30;
	Node0x59bead0:s1 -> Node0x59beec0;
	Node0x59beec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%149:\l149:                                              \l  %150 = fcmp ugt double %144, 0x4018B00000000000\l  br i1 %150, label %162, label %151\l|{<s0>T|<s1>F}}"];
	Node0x59beec0:s0 -> Node0x59bf090;
	Node0x59beec0:s1 -> Node0x59bf120;
	Node0x59bf120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%151:\l151:                                              \l  %152 = fcmp ugt double %144, 1.093750e+00\l  br i1 %152, label %153, label %173\l|{<s0>T|<s1>F}}"];
	Node0x59bf120:s0 -> Node0x59bf2f0;
	Node0x59bf120:s1 -> Node0x59bf380;
	Node0x59bf2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%153:\l153:                                              \l  %154 = fcmp ugt double %144, 2.843750e+00\l  %155 = fcmp ugt double %144, 0x4012500000000000\l  %156 = select i1 %155, double 0x3CA5C646A75D7539, double 0xBCA60155A9D1B256\l  %157 = select i1 %155, double 0x40155365BC032467, double 0x400EA75575AF6F09\l  %158 = select i1 %155, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 45),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 30)\l  %159 = select i1 %154, double %156, double 0x3C5616D820CFDAEB\l  %160 = select i1 %154, double %157, double 0x3FFD757D1FEC8A3A\l  %161 = select i1 %154, double addrspace(4)* %158, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 15)\l  br label %173\l}"];
	Node0x59bf2f0 -> Node0x59bf380;
	Node0x59bf090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%162:\l162:                                              \l  %163 = fcmp ugt double %144, 7.781250e+00\l  br i1 %163, label %164, label %173\l|{<s0>T|<s1>F}}"];
	Node0x59bf090:s0 -> Node0x59bfef0;
	Node0x59bf090:s1 -> Node0x59bf380;
	Node0x59bfef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%164:\l164:                                              \l  %165 = fcmp ugt double %144, 0x4022B80000000000\l  %166 = fcmp ugt double %144, 0x4025E80000000000\l  %167 = select i1 %166, double 0x3CC9A84D3A5FEDC2, double 0x3CC02610A51562B6\l  %168 = select i1 %166, double 0x40276979797EE5AC, double 0x402458D0D0BDFC29\l  %169 = select i1 %166, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 105),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 90)\l  %170 = select i1 %165, double %167, double 0xBCA63E17EC20A31D\l  %171 = select i1 %165, double %168, double 0x402112980F0B88A1\l  %172 = select i1 %165, double addrspace(4)* %169, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 75)\l  br label %173\l}"];
	Node0x59bfef0 -> Node0x59bf380;
	Node0x59bf380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%173:\l173:                                              \l  %174 = phi double [ 0.000000e+00, %151 ], [ 0xBC9B226D9D243827, %162 ], [\l... %159, %153 ], [ %170, %164 ]\l  %175 = phi double [ 0.000000e+00, %151 ], [ 0x401C0FF5F3B47250, %162 ], [\l... %160, %153 ], [ %171, %164 ]\l  %176 = phi double addrspace(4)* [ getelementptr inbounds ([120 x double],\l... [120 x double] addrspace(4)* @__ocmltbl_M64_J1, i64 0, i64 0), %151 ], [\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J1, i64 0, i64 60), %162 ], [ %161, %153 ], [ %172, %164 ]\l  %177 = fsub double %144, %175\l  %178 = fsub double %177, %174\l  %179 = getelementptr inbounds double, double addrspace(4)* %176, i64 14\l  %180 = load double, double addrspace(4)* %179, align 8, !tbaa !20\l  %181 = getelementptr inbounds double, double addrspace(4)* %176, i64 13\l  %182 = load double, double addrspace(4)* %181, align 8, !tbaa !20\l  %183 = tail call double @llvm.fma.f64(double %178, double %180, double %182)\l  %184 = getelementptr inbounds double, double addrspace(4)* %176, i64 12\l  %185 = load double, double addrspace(4)* %184, align 8, !tbaa !20\l  %186 = tail call double @llvm.fma.f64(double %178, double %183, double %185)\l  %187 = getelementptr inbounds double, double addrspace(4)* %176, i64 11\l  %188 = load double, double addrspace(4)* %187, align 8, !tbaa !20\l  %189 = tail call double @llvm.fma.f64(double %178, double %186, double %188)\l  %190 = getelementptr inbounds double, double addrspace(4)* %176, i64 10\l  %191 = load double, double addrspace(4)* %190, align 8, !tbaa !20\l  %192 = tail call double @llvm.fma.f64(double %178, double %189, double %191)\l  %193 = getelementptr inbounds double, double addrspace(4)* %176, i64 9\l  %194 = load double, double addrspace(4)* %193, align 8, !tbaa !20\l  %195 = tail call double @llvm.fma.f64(double %178, double %192, double %194)\l  %196 = getelementptr inbounds double, double addrspace(4)* %176, i64 8\l  %197 = load double, double addrspace(4)* %196, align 8, !tbaa !20\l  %198 = tail call double @llvm.fma.f64(double %178, double %195, double %197)\l  %199 = getelementptr inbounds double, double addrspace(4)* %176, i64 7\l  %200 = load double, double addrspace(4)* %199, align 8, !tbaa !20\l  %201 = tail call double @llvm.fma.f64(double %178, double %198, double %200)\l  %202 = getelementptr inbounds double, double addrspace(4)* %176, i64 6\l  %203 = load double, double addrspace(4)* %202, align 8, !tbaa !20\l  %204 = tail call double @llvm.fma.f64(double %178, double %201, double %203)\l  %205 = getelementptr inbounds double, double addrspace(4)* %176, i64 5\l  %206 = load double, double addrspace(4)* %205, align 8, !tbaa !20\l  %207 = tail call double @llvm.fma.f64(double %178, double %204, double %206)\l  %208 = getelementptr inbounds double, double addrspace(4)* %176, i64 4\l  %209 = load double, double addrspace(4)* %208, align 8, !tbaa !20\l  %210 = tail call double @llvm.fma.f64(double %178, double %207, double %209)\l  %211 = getelementptr inbounds double, double addrspace(4)* %176, i64 3\l  %212 = load double, double addrspace(4)* %211, align 8, !tbaa !20\l  %213 = tail call double @llvm.fma.f64(double %178, double %210, double %212)\l  %214 = getelementptr inbounds double, double addrspace(4)* %176, i64 2\l  %215 = load double, double addrspace(4)* %214, align 8, !tbaa !20\l  %216 = tail call double @llvm.fma.f64(double %178, double %213, double %215)\l  %217 = getelementptr inbounds double, double addrspace(4)* %176, i64 1\l  %218 = load double, double addrspace(4)* %217, align 8, !tbaa !20\l  %219 = tail call double @llvm.fma.f64(double %178, double %216, double %218)\l  %220 = load double, double addrspace(4)* %176, align 8, !tbaa !20\l  %221 = tail call double @llvm.fma.f64(double %178, double %219, double %220)\l  br label %424\l}"];
	Node0x59bf380 -> Node0x59c2e80;
	Node0x59bee30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%222:\l222:                                              \l  %223 = fdiv double 1.000000e+00, %144\l  %224 = fmul double %223, %223\l  %225 = tail call double @llvm.fma.f64(double %224, double\l... 0x41BC22F653D3A76E, double 0xC1780A4D95ED3E8E)\l  %226 = tail call double @llvm.fma.f64(double %224, double %225, double\l... 0x41272F1D1F8CDD76)\l  %227 = tail call double @llvm.fma.f64(double %224, double %226, double\l... 0xC0D3EA4E96460AD7)\l  %228 = tail call double @llvm.fma.f64(double %224, double %227, double\l... 0x408488DD98D9AB3A)\l  %229 = tail call double @llvm.fma.f64(double %224, double %228, double\l... 0xC03E9ED612FA3B38)\l  %230 = tail call double @llvm.fma.f64(double %224, double %229, double\l... 0x4002F484FCAB9DDA)\l  %231 = tail call double @llvm.fma.f64(double %224, double %230, double\l... 0xBFD7BCCCCAD443C0)\l  %232 = tail call double @llvm.fma.f64(double %224, double %231, double\l... 0x3FC4FFFFFFFFCBFA)\l  %233 = tail call double @llvm.fma.f64(double %224, double %232, double\l... -3.750000e-01)\l  %234 = fmul double %223, %233\l  %235 = tail call double @llvm.amdgcn.rsq.f64(double %223)\l  %236 = fmul double %223, %235\l  %237 = fmul double %235, 5.000000e-01\l  %238 = fneg double %237\l  %239 = tail call double @llvm.fma.f64(double %238, double %236, double\l... 5.000000e-01)\l  %240 = tail call double @llvm.fma.f64(double %237, double %239, double %237)\l  %241 = tail call double @llvm.fma.f64(double %236, double %239, double %236)\l  %242 = fneg double %241\l  %243 = tail call double @llvm.fma.f64(double %242, double %241, double %223)\l  %244 = tail call double @llvm.fma.f64(double %243, double %240, double %241)\l  %245 = fcmp oeq double %223, 0.000000e+00\l  %246 = select i1 %245, double %223, double %244\l  %247 = fmul double %246, 0x3FE9884533D43651\l  %248 = tail call double @llvm.fma.f64(double %224, double\l... 0xC137940A06621145, double 0x40F591FB68428BAF)\l  %249 = tail call double @llvm.fma.f64(double %224, double %248, double\l... 0xC0A996552A8BAFB0)\l  %250 = tail call double @llvm.fma.f64(double %224, double %249, double\l... 0x4060795578CD8C93)\l  %251 = tail call double @llvm.fma.f64(double %224, double %250, double\l... 0xC01EF38364596B5A)\l  %252 = tail call double @llvm.fma.f64(double %224, double %251, double\l... 0x3FE9C4FA465744C7)\l  %253 = tail call double @llvm.fma.f64(double %224, double %252, double\l... 0xBFC8BFFFFC3937C1)\l  %254 = tail call double @llvm.fma.f64(double %224, double %253, double\l... 0x3FC7FFFFFFFFC240)\l  %255 = tail call double @llvm.fma.f64(double %224, double %254, double\l... 1.000000e+00)\l  %256 = fmul double %247, %255\l  %257 = fcmp olt double %144, 0x41D0000000000000\l  br i1 %257, label %258, label %277\l|{<s0>T|<s1>F}}"];
	Node0x59bee30:s0 -> Node0x59bd820;
	Node0x59bee30:s1 -> Node0x59bd8b0;
	Node0x59bd820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%258:\l258:                                              \l  %259 = fmul double %144, 0x3FE45F306DC9C883\l  %260 = tail call double @llvm.rint.f64(double %259)\l  %261 = tail call double @llvm.fma.f64(double %260, double\l... 0xBFF921FB54442D18, double %144)\l  %262 = tail call double @llvm.fma.f64(double %260, double\l... 0xBC91A62633145C00, double %261)\l  %263 = fmul double %260, 0x3C91A62633145C00\l  %264 = fneg double %263\l  %265 = tail call double @llvm.fma.f64(double %260, double\l... 0x3C91A62633145C00, double %264)\l  %266 = fsub double %261, %263\l  %267 = fsub double %261, %266\l  %268 = fsub double %267, %263\l  %269 = fsub double %266, %262\l  %270 = fadd double %269, %268\l  %271 = fsub double %270, %265\l  %272 = tail call double @llvm.fma.f64(double %260, double\l... 0xB97B839A252049C0, double %271)\l  %273 = fadd double %262, %272\l  %274 = fsub double %273, %262\l  %275 = fsub double %272, %274\l  %276 = fptosi double %260 to i32\l  br label %353\l}"];
	Node0x59bd820 -> Node0x59c7020;
	Node0x59bd8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%277:\l277:                                              \l  %278 = tail call double @llvm.amdgcn.trig.preop.f64(double %144, i32 0)\l  %279 = tail call double @llvm.amdgcn.trig.preop.f64(double %144, i32 1)\l  %280 = tail call double @llvm.amdgcn.trig.preop.f64(double %144, i32 2)\l  %281 = fcmp oge double %144, 0x7B00000000000000\l  %282 = tail call double @llvm.amdgcn.ldexp.f64(double %144, i32 -128)\l  %283 = select i1 %281, double %282, double %144\l  %284 = fmul double %280, %283\l  %285 = fneg double %284\l  %286 = tail call double @llvm.fma.f64(double %280, double %283, double %285)\l  %287 = fmul double %279, %283\l  %288 = fneg double %287\l  %289 = tail call double @llvm.fma.f64(double %279, double %283, double %288)\l  %290 = fmul double %278, %283\l  %291 = fneg double %290\l  %292 = tail call double @llvm.fma.f64(double %278, double %283, double %291)\l  %293 = fadd double %287, %292\l  %294 = fsub double %293, %287\l  %295 = fsub double %293, %294\l  %296 = fsub double %292, %294\l  %297 = fsub double %287, %295\l  %298 = fadd double %296, %297\l  %299 = fadd double %284, %289\l  %300 = fsub double %299, %284\l  %301 = fsub double %299, %300\l  %302 = fsub double %289, %300\l  %303 = fsub double %284, %301\l  %304 = fadd double %302, %303\l  %305 = fadd double %299, %298\l  %306 = fsub double %305, %299\l  %307 = fsub double %305, %306\l  %308 = fsub double %298, %306\l  %309 = fsub double %299, %307\l  %310 = fadd double %308, %309\l  %311 = fadd double %304, %310\l  %312 = fadd double %286, %311\l  %313 = fadd double %290, %293\l  %314 = fsub double %313, %290\l  %315 = fsub double %293, %314\l  %316 = fadd double %315, %305\l  %317 = fsub double %316, %315\l  %318 = fsub double %305, %317\l  %319 = fadd double %318, %312\l  %320 = tail call double @llvm.amdgcn.ldexp.f64(double %313, i32 -2)\l  %321 = tail call double @llvm.amdgcn.fract.f64(double %320)\l  %322 = tail call i1 @llvm.amdgcn.class.f64(double %320, i32 516)\l  %323 = select i1 %322, double 0.000000e+00, double %321\l  %324 = tail call double @llvm.amdgcn.ldexp.f64(double %323, i32 2)\l  %325 = fadd double %324, %316\l  %326 = fcmp olt double %325, 0.000000e+00\l  %327 = select i1 %326, double 4.000000e+00, double 0.000000e+00\l  %328 = fadd double %324, %327\l  %329 = fadd double %316, %328\l  %330 = fptosi double %329 to i32\l  %331 = sitofp i32 %330 to double\l  %332 = fsub double %328, %331\l  %333 = fadd double %316, %332\l  %334 = fsub double %333, %332\l  %335 = fsub double %316, %334\l  %336 = fadd double %319, %335\l  %337 = fcmp oge double %333, 5.000000e-01\l  %338 = zext i1 %337 to i32\l  %339 = add nsw i32 %338, %330\l  %340 = select i1 %337, double 1.000000e+00, double 0.000000e+00\l  %341 = fsub double %333, %340\l  %342 = fadd double %341, %336\l  %343 = fsub double %342, %341\l  %344 = fsub double %336, %343\l  %345 = fmul double %342, 0x3FF921FB54442D18\l  %346 = fneg double %345\l  %347 = tail call double @llvm.fma.f64(double %342, double\l... 0x3FF921FB54442D18, double %346)\l  %348 = tail call double @llvm.fma.f64(double %342, double\l... 0x3C91A62633145C07, double %347)\l  %349 = tail call double @llvm.fma.f64(double %344, double\l... 0x3FF921FB54442D18, double %348)\l  %350 = fadd double %345, %349\l  %351 = fsub double %350, %345\l  %352 = fsub double %349, %351\l  br label %353\l}"];
	Node0x59bd8b0 -> Node0x59c7020;
	Node0x59c7020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%353:\l353:                                              \l  %354 = phi double [ %275, %258 ], [ %352, %277 ]\l  %355 = phi double [ %273, %258 ], [ %350, %277 ]\l  %356 = phi i32 [ %276, %258 ], [ %339, %277 ]\l  %357 = and i32 %356, 3\l  %358 = fcmp olt double %355, %234\l  %359 = sext i1 %358 to i32\l  %360 = add nsw i32 %357, -1\l  %361 = add nsw i32 %360, %359\l  %362 = select i1 %358, i32 -2147483648, i32 0\l  %363 = xor i32 %362, -1075240453\l  %364 = insertelement \<2 x i32\> \<i32 1413754136, i32 poison\>, i32 %363, i64 1\l  %365 = bitcast \<2 x i32\> %364 to double\l  %366 = xor i32 %362, -1132354010\l  %367 = insertelement \<2 x i32\> \<i32 856972295, i32 poison\>, i32 %366, i64 1\l  %368 = bitcast \<2 x i32\> %367 to double\l  %369 = fsub double %365, %234\l  %370 = fsub double %365, %369\l  %371 = fsub double %370, %234\l  %372 = fadd double %371, %368\l  %373 = fadd double %369, %372\l  %374 = fsub double %373, %369\l  %375 = fsub double %372, %374\l  %376 = fadd double %355, %373\l  %377 = fsub double %376, %373\l  %378 = fsub double %355, %377\l  %379 = fadd double %354, %375\l  %380 = fadd double %378, %379\l  %381 = fadd double %376, %380\l  %382 = fsub double %381, %376\l  %383 = fsub double %380, %382\l  %384 = fmul double %381, %381\l  %385 = fmul double %384, 5.000000e-01\l  %386 = fsub double 1.000000e+00, %385\l  %387 = fsub double 1.000000e+00, %386\l  %388 = fsub double %387, %385\l  %389 = fmul double %384, %384\l  %390 = tail call double @llvm.fma.f64(double %384, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %391 = tail call double @llvm.fma.f64(double %384, double %390, double\l... 0xBE927E4FA17F65F6)\l  %392 = tail call double @llvm.fma.f64(double %384, double %391, double\l... 0x3EFA01A019F4EC90)\l  %393 = tail call double @llvm.fma.f64(double %384, double %392, double\l... 0xBF56C16C16C16967)\l  %394 = tail call double @llvm.fma.f64(double %384, double %393, double\l... 0x3FA5555555555555)\l  %395 = fneg double %383\l  %396 = tail call double @llvm.fma.f64(double %381, double %395, double %388)\l  %397 = tail call double @llvm.fma.f64(double %389, double %394, double %396)\l  %398 = fadd double %386, %397\l  %399 = tail call double @llvm.fma.f64(double %384, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %400 = tail call double @llvm.fma.f64(double %384, double %399, double\l... 0x3EC71DE3796CDE01)\l  %401 = tail call double @llvm.fma.f64(double %384, double %400, double\l... 0xBF2A01A019E83E5C)\l  %402 = tail call double @llvm.fma.f64(double %384, double %401, double\l... 0x3F81111111110BB3)\l  %403 = fneg double %384\l  %404 = fmul double %381, %403\l  %405 = fmul double %383, 5.000000e-01\l  %406 = tail call double @llvm.fma.f64(double %404, double %402, double %405)\l  %407 = tail call double @llvm.fma.f64(double %384, double %406, double %395)\l  %408 = tail call double @llvm.fma.f64(double %404, double\l... 0xBFC5555555555555, double %407)\l  %409 = fsub double %381, %408\l  %410 = fneg double %409\l  %411 = and i32 %361, 1\l  %412 = icmp eq i32 %411, 0\l  %413 = select i1 %412, double %398, double %410\l  %414 = bitcast double %413 to \<2 x i32\>\l  %415 = shl i32 %361, 30\l  %416 = and i32 %415, -2147483648\l  %417 = extractelement \<2 x i32\> %414, i64 1\l  %418 = xor i32 %417, %416\l  %419 = insertelement \<2 x i32\> %414, i32 %418, i64 1\l  %420 = bitcast \<2 x i32\> %419 to double\l  %421 = fmul double %256, %420\l  %422 = tail call i1 @llvm.amdgcn.class.f64(double %144, i32 512)\l  %423 = select i1 %422, double 0.000000e+00, double %421\l  br label %424\l}"];
	Node0x59c7020 -> Node0x59c2e80;
	Node0x59c2e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%424:\l424:                                              \l  %425 = phi double [ %221, %173 ], [ %423, %353 ]\l  %426 = fcmp olt double %35, 0.000000e+00\l  %427 = fneg double %425\l  %428 = select i1 %426, double %427, double %425\l  %429 = tail call double @llvm.amdgcn.frexp.mant.f64(double %35)\l  %430 = fcmp olt double %429, 0x3FE5555555555555\l  %431 = zext i1 %430 to i32\l  %432 = tail call double @llvm.amdgcn.ldexp.f64(double %429, i32 %431)\l  %433 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %35)\l  %434 = sub nsw i32 %433, %431\l  %435 = fadd double %432, -1.000000e+00\l  %436 = fadd double %432, 1.000000e+00\l  %437 = fadd double %436, -1.000000e+00\l  %438 = fsub double %432, %437\l  %439 = tail call double @llvm.amdgcn.rcp.f64(double %436)\l  %440 = fneg double %436\l  %441 = tail call double @llvm.fma.f64(double %440, double %439, double\l... 1.000000e+00)\l  %442 = tail call double @llvm.fma.f64(double %441, double %439, double %439)\l  %443 = tail call double @llvm.fma.f64(double %440, double %442, double\l... 1.000000e+00)\l  %444 = tail call double @llvm.fma.f64(double %443, double %442, double %442)\l  %445 = fmul double %435, %444\l  %446 = fmul double %436, %445\l  %447 = fneg double %446\l  %448 = tail call double @llvm.fma.f64(double %445, double %436, double %447)\l  %449 = tail call double @llvm.fma.f64(double %445, double %438, double %448)\l  %450 = fadd double %446, %449\l  %451 = fsub double %450, %446\l  %452 = fsub double %449, %451\l  %453 = fsub double %435, %450\l  %454 = fsub double %435, %453\l  %455 = fsub double %454, %450\l  %456 = fsub double %455, %452\l  %457 = fadd double %453, %456\l  %458 = fmul double %444, %457\l  %459 = fadd double %445, %458\l  %460 = fsub double %459, %445\l  %461 = fsub double %458, %460\l  %462 = fmul double %459, %459\l  %463 = tail call double @llvm.fma.f64(double %462, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %464 = tail call double @llvm.fma.f64(double %462, double %463, double\l... 0x3FC7474DD7F4DF2E)\l  %465 = tail call double @llvm.fma.f64(double %462, double %464, double\l... 0x3FCC71C016291751)\l  %466 = tail call double @llvm.fma.f64(double %462, double %465, double\l... 0x3FD249249B27ACF1)\l  %467 = tail call double @llvm.fma.f64(double %462, double %466, double\l... 0x3FD99999998EF7B6)\l  %468 = tail call double @llvm.fma.f64(double %462, double %467, double\l... 0x3FE5555555555780)\l  %469 = tail call double @llvm.amdgcn.ldexp.f64(double %459, i32 1)\l  %470 = tail call double @llvm.amdgcn.ldexp.f64(double %461, i32 1)\l  %471 = fmul double %459, %462\l  %472 = fmul double %471, %468\l  %473 = fadd double %469, %472\l  %474 = fsub double %473, %469\l  %475 = fsub double %472, %474\l  %476 = fadd double %470, %475\l  %477 = fadd double %473, %476\l  %478 = fsub double %477, %473\l  %479 = fsub double %476, %478\l  %480 = sitofp i32 %434 to double\l  %481 = fmul double %480, 0x3FE62E42FEFA39EF\l  %482 = fneg double %481\l  %483 = tail call double @llvm.fma.f64(double %480, double\l... 0x3FE62E42FEFA39EF, double %482)\l  %484 = tail call double @llvm.fma.f64(double %480, double\l... 0x3C7ABC9E3B39803F, double %483)\l  %485 = fadd double %481, %484\l  %486 = fsub double %485, %481\l  %487 = fsub double %484, %486\l  %488 = fadd double %485, %477\l  %489 = fsub double %488, %485\l  %490 = fsub double %488, %489\l  %491 = fsub double %485, %490\l  %492 = fsub double %477, %489\l  %493 = fadd double %492, %491\l  %494 = fadd double %487, %479\l  %495 = fsub double %494, %487\l  %496 = fsub double %494, %495\l  %497 = fsub double %487, %496\l  %498 = fsub double %479, %495\l  %499 = fadd double %498, %497\l  %500 = fadd double %494, %493\l  %501 = fadd double %488, %500\l  %502 = fsub double %501, %488\l  %503 = fsub double %500, %502\l  %504 = fadd double %499, %503\l  %505 = fadd double %501, %504\l  %506 = fcmp oeq double %144, 0x7FF0000000000000\l  %507 = select i1 %506, double %35, double %505\l  %508 = select i1 %426, double 0x7FF8000000000000, double %507\l  %509 = fcmp oeq double %35, 0.000000e+00\l  %510 = select i1 %509, double 0xFFF0000000000000, double %508\l  %511 = fdiv double -1.000000e+00, %35\l  %512 = tail call double @llvm.fmuladd.f64(double %428, double %510, double\l... %511)\l  %513 = fmul double %512, 0x3FE45F306DC9C883\l  %514 = tail call double @llvm.fma.f64(double %141, double %35, double %513)\l  br label %515\l}"];
	Node0x59c2e80 -> Node0x59beca0;
	Node0x59beca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%515:\l515:                                              \l  %516 = phi double [ %146, %145 ], [ %514, %424 ]\l  %517 = fcmp olt double %35, 0.000000e+00\l  %518 = select i1 %517, double 0x7FF8000000000000, double %516\l  br label %720\l}"];
	Node0x59beca0 -> Node0x59be670;
	Node0x59a7450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%519:\l519:                                              \l  %520 = fdiv double 1.000000e+00, %35\l  %521 = fmul double %520, %520\l  %522 = tail call double @llvm.fma.f64(double %521, double\l... 0x41BC22F653D3A76E, double 0xC1780A4D95ED3E8E)\l  %523 = tail call double @llvm.fma.f64(double %521, double %522, double\l... 0x41272F1D1F8CDD76)\l  %524 = tail call double @llvm.fma.f64(double %521, double %523, double\l... 0xC0D3EA4E96460AD7)\l  %525 = tail call double @llvm.fma.f64(double %521, double %524, double\l... 0x408488DD98D9AB3A)\l  %526 = tail call double @llvm.fma.f64(double %521, double %525, double\l... 0xC03E9ED612FA3B38)\l  %527 = tail call double @llvm.fma.f64(double %521, double %526, double\l... 0x4002F484FCAB9DDA)\l  %528 = tail call double @llvm.fma.f64(double %521, double %527, double\l... 0xBFD7BCCCCAD443C0)\l  %529 = tail call double @llvm.fma.f64(double %521, double %528, double\l... 0x3FC4FFFFFFFFCBFA)\l  %530 = tail call double @llvm.fma.f64(double %521, double %529, double\l... -3.750000e-01)\l  %531 = fmul double %520, %530\l  %532 = tail call double @llvm.amdgcn.rsq.f64(double %520)\l  %533 = fmul double %520, %532\l  %534 = fmul double %532, 5.000000e-01\l  %535 = fneg double %534\l  %536 = tail call double @llvm.fma.f64(double %535, double %533, double\l... 5.000000e-01)\l  %537 = tail call double @llvm.fma.f64(double %534, double %536, double %534)\l  %538 = tail call double @llvm.fma.f64(double %533, double %536, double %533)\l  %539 = fneg double %538\l  %540 = tail call double @llvm.fma.f64(double %539, double %538, double %520)\l  %541 = tail call double @llvm.fma.f64(double %540, double %537, double %538)\l  %542 = fcmp oeq double %520, 0.000000e+00\l  %543 = select i1 %542, double %520, double %541\l  %544 = fmul double %543, 0x3FE9884533D43651\l  %545 = tail call double @llvm.fma.f64(double %521, double\l... 0xC137940A06621145, double 0x40F591FB68428BAF)\l  %546 = tail call double @llvm.fma.f64(double %521, double %545, double\l... 0xC0A996552A8BAFB0)\l  %547 = tail call double @llvm.fma.f64(double %521, double %546, double\l... 0x4060795578CD8C93)\l  %548 = tail call double @llvm.fma.f64(double %521, double %547, double\l... 0xC01EF38364596B5A)\l  %549 = tail call double @llvm.fma.f64(double %521, double %548, double\l... 0x3FE9C4FA465744C7)\l  %550 = tail call double @llvm.fma.f64(double %521, double %549, double\l... 0xBFC8BFFFFC3937C1)\l  %551 = tail call double @llvm.fma.f64(double %521, double %550, double\l... 0x3FC7FFFFFFFFC240)\l  %552 = tail call double @llvm.fma.f64(double %521, double %551, double\l... 1.000000e+00)\l  %553 = fmul double %544, %552\l  %554 = fcmp olt double %35, 0x41D0000000000000\l  br i1 %554, label %555, label %574\l|{<s0>T|<s1>F}}"];
	Node0x59a7450:s0 -> Node0x59d6890;
	Node0x59a7450:s1 -> Node0x59d68e0;
	Node0x59d6890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%555:\l555:                                              \l  %556 = fmul double %35, 0x3FE45F306DC9C883\l  %557 = tail call double @llvm.rint.f64(double %556)\l  %558 = tail call double @llvm.fma.f64(double %557, double\l... 0xBFF921FB54442D18, double %35)\l  %559 = tail call double @llvm.fma.f64(double %557, double\l... 0xBC91A62633145C00, double %558)\l  %560 = fmul double %557, 0x3C91A62633145C00\l  %561 = fneg double %560\l  %562 = tail call double @llvm.fma.f64(double %557, double\l... 0x3C91A62633145C00, double %561)\l  %563 = fsub double %558, %560\l  %564 = fsub double %558, %563\l  %565 = fsub double %564, %560\l  %566 = fsub double %563, %559\l  %567 = fadd double %566, %565\l  %568 = fsub double %567, %562\l  %569 = tail call double @llvm.fma.f64(double %557, double\l... 0xB97B839A252049C0, double %568)\l  %570 = fadd double %559, %569\l  %571 = fsub double %570, %559\l  %572 = fsub double %569, %571\l  %573 = fptosi double %557 to i32\l  br label %650\l}"];
	Node0x59d6890 -> Node0x59d76e0;
	Node0x59d68e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%574:\l574:                                              \l  %575 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 0)\l  %576 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 1)\l  %577 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 2)\l  %578 = fcmp oge double %35, 0x7B00000000000000\l  %579 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 -128)\l  %580 = select i1 %578, double %579, double %35\l  %581 = fmul double %577, %580\l  %582 = fneg double %581\l  %583 = tail call double @llvm.fma.f64(double %577, double %580, double %582)\l  %584 = fmul double %576, %580\l  %585 = fneg double %584\l  %586 = tail call double @llvm.fma.f64(double %576, double %580, double %585)\l  %587 = fmul double %575, %580\l  %588 = fneg double %587\l  %589 = tail call double @llvm.fma.f64(double %575, double %580, double %588)\l  %590 = fadd double %584, %589\l  %591 = fsub double %590, %584\l  %592 = fsub double %590, %591\l  %593 = fsub double %589, %591\l  %594 = fsub double %584, %592\l  %595 = fadd double %593, %594\l  %596 = fadd double %581, %586\l  %597 = fsub double %596, %581\l  %598 = fsub double %596, %597\l  %599 = fsub double %586, %597\l  %600 = fsub double %581, %598\l  %601 = fadd double %599, %600\l  %602 = fadd double %596, %595\l  %603 = fsub double %602, %596\l  %604 = fsub double %602, %603\l  %605 = fsub double %595, %603\l  %606 = fsub double %596, %604\l  %607 = fadd double %605, %606\l  %608 = fadd double %601, %607\l  %609 = fadd double %583, %608\l  %610 = fadd double %587, %590\l  %611 = fsub double %610, %587\l  %612 = fsub double %590, %611\l  %613 = fadd double %612, %602\l  %614 = fsub double %613, %612\l  %615 = fsub double %602, %614\l  %616 = fadd double %615, %609\l  %617 = tail call double @llvm.amdgcn.ldexp.f64(double %610, i32 -2)\l  %618 = tail call double @llvm.amdgcn.fract.f64(double %617)\l  %619 = tail call i1 @llvm.amdgcn.class.f64(double %617, i32 516)\l  %620 = select i1 %619, double 0.000000e+00, double %618\l  %621 = tail call double @llvm.amdgcn.ldexp.f64(double %620, i32 2)\l  %622 = fadd double %621, %613\l  %623 = fcmp olt double %622, 0.000000e+00\l  %624 = select i1 %623, double 4.000000e+00, double 0.000000e+00\l  %625 = fadd double %621, %624\l  %626 = fadd double %613, %625\l  %627 = fptosi double %626 to i32\l  %628 = sitofp i32 %627 to double\l  %629 = fsub double %625, %628\l  %630 = fadd double %613, %629\l  %631 = fsub double %630, %629\l  %632 = fsub double %613, %631\l  %633 = fadd double %616, %632\l  %634 = fcmp oge double %630, 5.000000e-01\l  %635 = zext i1 %634 to i32\l  %636 = add nsw i32 %635, %627\l  %637 = select i1 %634, double 1.000000e+00, double 0.000000e+00\l  %638 = fsub double %630, %637\l  %639 = fadd double %638, %633\l  %640 = fsub double %639, %638\l  %641 = fsub double %633, %640\l  %642 = fmul double %639, 0x3FF921FB54442D18\l  %643 = fneg double %642\l  %644 = tail call double @llvm.fma.f64(double %639, double\l... 0x3FF921FB54442D18, double %643)\l  %645 = tail call double @llvm.fma.f64(double %639, double\l... 0x3C91A62633145C07, double %644)\l  %646 = tail call double @llvm.fma.f64(double %641, double\l... 0x3FF921FB54442D18, double %645)\l  %647 = fadd double %642, %646\l  %648 = fsub double %647, %642\l  %649 = fsub double %646, %648\l  br label %650\l}"];
	Node0x59d68e0 -> Node0x59d76e0;
	Node0x59d76e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%650:\l650:                                              \l  %651 = phi double [ %572, %555 ], [ %649, %574 ]\l  %652 = phi double [ %570, %555 ], [ %647, %574 ]\l  %653 = phi i32 [ %573, %555 ], [ %636, %574 ]\l  %654 = and i32 %653, 3\l  %655 = fcmp olt double %652, %531\l  %656 = sext i1 %655 to i32\l  %657 = add nsw i32 %654, -1\l  %658 = add nsw i32 %657, %656\l  %659 = select i1 %655, i32 -2147483648, i32 0\l  %660 = xor i32 %659, -1075240453\l  %661 = insertelement \<2 x i32\> \<i32 1413754136, i32 poison\>, i32 %660, i64 1\l  %662 = bitcast \<2 x i32\> %661 to double\l  %663 = xor i32 %659, -1132354010\l  %664 = insertelement \<2 x i32\> \<i32 856972295, i32 poison\>, i32 %663, i64 1\l  %665 = bitcast \<2 x i32\> %664 to double\l  %666 = fsub double %662, %531\l  %667 = fsub double %662, %666\l  %668 = fsub double %667, %531\l  %669 = fadd double %668, %665\l  %670 = fadd double %666, %669\l  %671 = fsub double %670, %666\l  %672 = fsub double %669, %671\l  %673 = fadd double %652, %670\l  %674 = fsub double %673, %670\l  %675 = fsub double %652, %674\l  %676 = fadd double %651, %672\l  %677 = fadd double %675, %676\l  %678 = fadd double %673, %677\l  %679 = fsub double %678, %673\l  %680 = fsub double %677, %679\l  %681 = fmul double %678, %678\l  %682 = fmul double %681, 5.000000e-01\l  %683 = fsub double 1.000000e+00, %682\l  %684 = fsub double 1.000000e+00, %683\l  %685 = fsub double %684, %682\l  %686 = fmul double %681, %681\l  %687 = tail call double @llvm.fma.f64(double %681, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %688 = tail call double @llvm.fma.f64(double %681, double %687, double\l... 0xBE927E4FA17F65F6)\l  %689 = tail call double @llvm.fma.f64(double %681, double %688, double\l... 0x3EFA01A019F4EC90)\l  %690 = tail call double @llvm.fma.f64(double %681, double %689, double\l... 0xBF56C16C16C16967)\l  %691 = tail call double @llvm.fma.f64(double %681, double %690, double\l... 0x3FA5555555555555)\l  %692 = fneg double %680\l  %693 = tail call double @llvm.fma.f64(double %678, double %692, double %685)\l  %694 = tail call double @llvm.fma.f64(double %686, double %691, double %693)\l  %695 = fadd double %683, %694\l  %696 = tail call double @llvm.fma.f64(double %681, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %697 = tail call double @llvm.fma.f64(double %681, double %696, double\l... 0x3EC71DE3796CDE01)\l  %698 = tail call double @llvm.fma.f64(double %681, double %697, double\l... 0xBF2A01A019E83E5C)\l  %699 = tail call double @llvm.fma.f64(double %681, double %698, double\l... 0x3F81111111110BB3)\l  %700 = fneg double %681\l  %701 = fmul double %678, %700\l  %702 = fmul double %680, 5.000000e-01\l  %703 = tail call double @llvm.fma.f64(double %701, double %699, double %702)\l  %704 = tail call double @llvm.fma.f64(double %681, double %703, double %692)\l  %705 = tail call double @llvm.fma.f64(double %701, double\l... 0xBFC5555555555555, double %704)\l  %706 = fsub double %678, %705\l  %707 = and i32 %658, 1\l  %708 = icmp eq i32 %707, 0\l  %709 = select i1 %708, double %706, double %695\l  %710 = bitcast double %709 to \<2 x i32\>\l  %711 = shl i32 %658, 30\l  %712 = and i32 %711, -2147483648\l  %713 = extractelement \<2 x i32\> %710, i64 1\l  %714 = xor i32 %713, %712\l  %715 = insertelement \<2 x i32\> %710, i32 %714, i64 1\l  %716 = bitcast \<2 x i32\> %715 to double\l  %717 = fmul double %553, %716\l  %718 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 512)\l  %719 = select i1 %718, double 0.000000e+00, double %717\l  br label %720\l}"];
	Node0x59d76e0 -> Node0x59be670;
	Node0x59be670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%720:\l720:                                              \l  %721 = phi double [ %719, %650 ], [ %518, %515 ], [ %141, %90 ]\l  %722 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %721, double addrspace(1)* %722, align 8, !tbaa !16\l  br label %723\l}"];
	Node0x59be670 -> Node0x59b1990;
	Node0x59b1990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%723:\l723:                                              \l  ret void\l}"];
}
