digraph "CFG for 'vec_thetest' function" {
	label="CFG for 'vec_thetest' function";

	Node0x642d130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %11 = bitcast i8 addrspace(4)* %10 to i32 addrspace(4)*\l  %12 = load i32, i32 addrspace(4)* %11, align 4, !tbaa !7\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = add i32 %19, %13\l  %21 = udiv i32 %12, %9\l  %22 = mul i32 %21, %9\l  %23 = icmp ugt i32 %12, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = add i32 %26, %4\l  %28 = mul i32 %27, %9\l  %29 = add i32 %28, %3\l  %30 = icmp slt i32 %29, %0\l  br i1 %30, label %31, label %501\l|{<s0>T|<s1>F}}"];
	Node0x642d130:s0 -> Node0x64311b0;
	Node0x642d130:s1 -> Node0x6431240;
	Node0x64311b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%31:\l31:                                               \l  %32 = sext i32 %29 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %35 = fpext float %34 to double\l  %36 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %37 = getelementptr inbounds i8, i8 addrspace(4)* %36, i64 24\l  %38 = bitcast i8 addrspace(4)* %37 to i64 addrspace(4)*\l  %39 = load i64, i64 addrspace(4)* %38, align 8, !tbaa !20\l  %40 = inttoptr i64 %39 to i8 addrspace(1)*\l  %41 = addrspacecast i8 addrspace(1)* %40 to i8*\l  %42 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %43 = extractelement \<2 x i64\> %42, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([16 x i8], [16 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %44, label %48\l|{<s0>T|<s1>F}}"];
	Node0x64311b0:s0 -> Node0x64325e0;
	Node0x64311b0:s1 -> Node0x6432fd0;
	Node0x64325e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%44:\l44:                                               \l  %45 = and i64 %43, -225\l  %46 = or i64 %45, 32\l  %47 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %46, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %489\l}"];
	Node0x64325e0 -> Node0x64332b0;
	Node0x6432fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%48:\l48:                                               \l  %49 = and i64 %43, 2\l  %50 = and i64 %43, -3\l  %51 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %50, i64 0\l  br label %52\l}"];
	Node0x6432fd0 -> Node0x6433e50;
	Node0x6433e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%52:\l52:                                               \l  %53 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([16 x i8], [16 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([16 x i8], [16 x i8] addrspace(4)*\l... @.str, i64 0, i64 15) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([16 x i8]* addrspacecast ([16 x i8] addrspace(4)* @.str to [16 x i8]*) to\l... i64)), i64 1))), %48 ], [ %486, %478 ]\l  %54 = phi i8 addrspace(4)* [ getelementptr inbounds ([16 x i8], [16 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %48 ], [ %487, %478 ]\l  %55 = phi \<2 x i64\> [ %51, %48 ], [ %485, %478 ]\l  %56 = icmp ugt i64 %53, 56\l  %57 = extractelement \<2 x i64\> %55, i64 0\l  %58 = or i64 %57, %49\l  %59 = insertelement \<2 x i64\> poison, i64 %58, i64 0\l  %60 = select i1 %56, \<2 x i64\> %55, \<2 x i64\> %59\l  %61 = tail call i64 @llvm.umin.i64(i64 %53, i64 56)\l  %62 = trunc i64 %61 to i32\l  %63 = extractelement \<2 x i64\> %60, i64 0\l  %64 = icmp ugt i32 %62, 7\l  br i1 %64, label %67, label %65\l|{<s0>T|<s1>F}}"];
	Node0x6433e50:s0 -> Node0x64313f0;
	Node0x6433e50:s1 -> Node0x6431440;
	Node0x6431440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%65:\l65:                                               \l  %66 = icmp eq i32 %62, 0\l  br i1 %66, label %120, label %107\l|{<s0>T|<s1>F}}"];
	Node0x6431440:s0 -> Node0x64315b0;
	Node0x6431440:s1 -> Node0x6435260;
	Node0x64313f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%67:\l67:                                               \l  %68 = load i8, i8 addrspace(4)* %54, align 1, !tbaa !21\l  %69 = zext i8 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 1\l  %71 = load i8, i8 addrspace(4)* %70, align 1, !tbaa !21\l  %72 = zext i8 %71 to i64\l  %73 = shl nuw nsw i64 %72, 8\l  %74 = or i64 %73, %69\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 2\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !21\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw nsw i64 %77, 16\l  %79 = or i64 %74, %78\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 3\l  %81 = load i8, i8 addrspace(4)* %80, align 1, !tbaa !21\l  %82 = zext i8 %81 to i64\l  %83 = shl nuw nsw i64 %82, 24\l  %84 = or i64 %79, %83\l  %85 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 4\l  %86 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !21\l  %87 = zext i8 %86 to i64\l  %88 = shl nuw nsw i64 %87, 32\l  %89 = or i64 %84, %88\l  %90 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 5\l  %91 = load i8, i8 addrspace(4)* %90, align 1, !tbaa !21\l  %92 = zext i8 %91 to i64\l  %93 = shl nuw nsw i64 %92, 40\l  %94 = or i64 %89, %93\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 6\l  %96 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !21\l  %97 = zext i8 %96 to i64\l  %98 = shl nuw nsw i64 %97, 48\l  %99 = or i64 %94, %98\l  %100 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 7\l  %101 = load i8, i8 addrspace(4)* %100, align 1, !tbaa !21\l  %102 = zext i8 %101 to i64\l  %103 = shl nuw i64 %102, 56\l  %104 = or i64 %99, %103\l  %105 = add nsw i32 %62, -8\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 8\l  br label %120\l}"];
	Node0x64313f0 -> Node0x64315b0;
	Node0x6435260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi i32 [ %118, %107 ], [ 0, %65 ]\l  %109 = phi i64 [ %117, %107 ], [ 0, %65 ]\l  %110 = zext i32 %108 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 %110\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !21\l  %113 = zext i8 %112 to i64\l  %114 = shl i32 %108, 3\l  %115 = zext i32 %114 to i64\l  %116 = shl nuw i64 %113, %115\l  %117 = or i64 %116, %109\l  %118 = add nuw nsw i32 %108, 1\l  %119 = icmp eq i32 %118, %62\l  br i1 %119, label %120, label %107, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x6435260:s0 -> Node0x64315b0;
	Node0x6435260:s1 -> Node0x6435260;
	Node0x64315b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%120:\l120:                                              \l  %121 = phi i8 addrspace(4)* [ %106, %67 ], [ %54, %65 ], [ %54, %107 ]\l  %122 = phi i32 [ %105, %67 ], [ 0, %65 ], [ 0, %107 ]\l  %123 = phi i64 [ %104, %67 ], [ 0, %65 ], [ %117, %107 ]\l  %124 = icmp ugt i32 %122, 7\l  br i1 %124, label %127, label %125\l|{<s0>T|<s1>F}}"];
	Node0x64315b0:s0 -> Node0x6437d10;
	Node0x64315b0:s1 -> Node0x6437d60;
	Node0x6437d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%125:\l125:                                              \l  %126 = icmp eq i32 %122, 0\l  br i1 %126, label %180, label %167\l|{<s0>T|<s1>F}}"];
	Node0x6437d60:s0 -> Node0x6437f30;
	Node0x6437d60:s1 -> Node0x6437f80;
	Node0x6437d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%127:\l127:                                              \l  %128 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !21\l  %129 = zext i8 %128 to i64\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 1\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !21\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 8\l  %134 = or i64 %133, %129\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 2\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !21\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 16\l  %139 = or i64 %134, %138\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 3\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !21\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw nsw i64 %142, 24\l  %144 = or i64 %139, %143\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 4\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !21\l  %147 = zext i8 %146 to i64\l  %148 = shl nuw nsw i64 %147, 32\l  %149 = or i64 %144, %148\l  %150 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 5\l  %151 = load i8, i8 addrspace(4)* %150, align 1, !tbaa !21\l  %152 = zext i8 %151 to i64\l  %153 = shl nuw nsw i64 %152, 40\l  %154 = or i64 %149, %153\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 6\l  %156 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !21\l  %157 = zext i8 %156 to i64\l  %158 = shl nuw nsw i64 %157, 48\l  %159 = or i64 %154, %158\l  %160 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 7\l  %161 = load i8, i8 addrspace(4)* %160, align 1, !tbaa !21\l  %162 = zext i8 %161 to i64\l  %163 = shl nuw i64 %162, 56\l  %164 = or i64 %159, %163\l  %165 = add nsw i32 %122, -8\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 8\l  br label %180\l}"];
	Node0x6437d10 -> Node0x6437f30;
	Node0x6437f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  %168 = phi i32 [ %178, %167 ], [ 0, %125 ]\l  %169 = phi i64 [ %177, %167 ], [ 0, %125 ]\l  %170 = zext i32 %168 to i64\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %121, i64 %170\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !21\l  %173 = zext i8 %172 to i64\l  %174 = shl i32 %168, 3\l  %175 = zext i32 %174 to i64\l  %176 = shl nuw i64 %173, %175\l  %177 = or i64 %176, %169\l  %178 = add nuw nsw i32 %168, 1\l  %179 = icmp eq i32 %178, %122\l  br i1 %179, label %180, label %167\l|{<s0>T|<s1>F}}"];
	Node0x6437f80:s0 -> Node0x6437f30;
	Node0x6437f80:s1 -> Node0x6437f80;
	Node0x6437f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%180:\l180:                                              \l  %181 = phi i8 addrspace(4)* [ %166, %127 ], [ %121, %125 ], [ %121, %167 ]\l  %182 = phi i32 [ %165, %127 ], [ 0, %125 ], [ 0, %167 ]\l  %183 = phi i64 [ %164, %127 ], [ 0, %125 ], [ %177, %167 ]\l  %184 = icmp ugt i32 %182, 7\l  br i1 %184, label %187, label %185\l|{<s0>T|<s1>F}}"];
	Node0x6437f30:s0 -> Node0x643a460;
	Node0x6437f30:s1 -> Node0x643a4b0;
	Node0x643a4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%185:\l185:                                              \l  %186 = icmp eq i32 %182, 0\l  br i1 %186, label %240, label %227\l|{<s0>T|<s1>F}}"];
	Node0x643a4b0:s0 -> Node0x643a640;
	Node0x643a4b0:s1 -> Node0x643a690;
	Node0x643a460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%187:\l187:                                              \l  %188 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !21\l  %189 = zext i8 %188 to i64\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 1\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !21\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 8\l  %194 = or i64 %193, %189\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 2\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !21\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 16\l  %199 = or i64 %194, %198\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 3\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !21\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw nsw i64 %202, 24\l  %204 = or i64 %199, %203\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 4\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !21\l  %207 = zext i8 %206 to i64\l  %208 = shl nuw nsw i64 %207, 32\l  %209 = or i64 %204, %208\l  %210 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 5\l  %211 = load i8, i8 addrspace(4)* %210, align 1, !tbaa !21\l  %212 = zext i8 %211 to i64\l  %213 = shl nuw nsw i64 %212, 40\l  %214 = or i64 %209, %213\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 6\l  %216 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !21\l  %217 = zext i8 %216 to i64\l  %218 = shl nuw nsw i64 %217, 48\l  %219 = or i64 %214, %218\l  %220 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 7\l  %221 = load i8, i8 addrspace(4)* %220, align 1, !tbaa !21\l  %222 = zext i8 %221 to i64\l  %223 = shl nuw i64 %222, 56\l  %224 = or i64 %219, %223\l  %225 = add nsw i32 %182, -8\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 8\l  br label %240\l}"];
	Node0x643a460 -> Node0x643a640;
	Node0x643a690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%227:\l227:                                              \l  %228 = phi i32 [ %238, %227 ], [ 0, %185 ]\l  %229 = phi i64 [ %237, %227 ], [ 0, %185 ]\l  %230 = zext i32 %228 to i64\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %181, i64 %230\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !21\l  %233 = zext i8 %232 to i64\l  %234 = shl i32 %228, 3\l  %235 = zext i32 %234 to i64\l  %236 = shl nuw i64 %233, %235\l  %237 = or i64 %236, %229\l  %238 = add nuw nsw i32 %228, 1\l  %239 = icmp eq i32 %238, %182\l  br i1 %239, label %240, label %227\l|{<s0>T|<s1>F}}"];
	Node0x643a690:s0 -> Node0x643a640;
	Node0x643a690:s1 -> Node0x643a690;
	Node0x643a640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%240:\l240:                                              \l  %241 = phi i8 addrspace(4)* [ %226, %187 ], [ %181, %185 ], [ %181, %227 ]\l  %242 = phi i32 [ %225, %187 ], [ 0, %185 ], [ 0, %227 ]\l  %243 = phi i64 [ %224, %187 ], [ 0, %185 ], [ %237, %227 ]\l  %244 = icmp ugt i32 %242, 7\l  br i1 %244, label %247, label %245\l|{<s0>T|<s1>F}}"];
	Node0x643a640:s0 -> Node0x643c6e0;
	Node0x643a640:s1 -> Node0x643c730;
	Node0x643c730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%245:\l245:                                              \l  %246 = icmp eq i32 %242, 0\l  br i1 %246, label %300, label %287\l|{<s0>T|<s1>F}}"];
	Node0x643c730:s0 -> Node0x643c8c0;
	Node0x643c730:s1 -> Node0x643c910;
	Node0x643c6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%247:\l247:                                              \l  %248 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !21\l  %249 = zext i8 %248 to i64\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 1\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !21\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 8\l  %254 = or i64 %253, %249\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 2\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !21\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 16\l  %259 = or i64 %254, %258\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 3\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !21\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw nsw i64 %262, 24\l  %264 = or i64 %259, %263\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 4\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !21\l  %267 = zext i8 %266 to i64\l  %268 = shl nuw nsw i64 %267, 32\l  %269 = or i64 %264, %268\l  %270 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 5\l  %271 = load i8, i8 addrspace(4)* %270, align 1, !tbaa !21\l  %272 = zext i8 %271 to i64\l  %273 = shl nuw nsw i64 %272, 40\l  %274 = or i64 %269, %273\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 6\l  %276 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !21\l  %277 = zext i8 %276 to i64\l  %278 = shl nuw nsw i64 %277, 48\l  %279 = or i64 %274, %278\l  %280 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 7\l  %281 = load i8, i8 addrspace(4)* %280, align 1, !tbaa !21\l  %282 = zext i8 %281 to i64\l  %283 = shl nuw i64 %282, 56\l  %284 = or i64 %279, %283\l  %285 = add nsw i32 %242, -8\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 8\l  br label %300\l}"];
	Node0x643c6e0 -> Node0x643c8c0;
	Node0x643c910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%287:\l287:                                              \l  %288 = phi i32 [ %298, %287 ], [ 0, %245 ]\l  %289 = phi i64 [ %297, %287 ], [ 0, %245 ]\l  %290 = zext i32 %288 to i64\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %241, i64 %290\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !21\l  %293 = zext i8 %292 to i64\l  %294 = shl i32 %288, 3\l  %295 = zext i32 %294 to i64\l  %296 = shl nuw i64 %293, %295\l  %297 = or i64 %296, %289\l  %298 = add nuw nsw i32 %288, 1\l  %299 = icmp eq i32 %298, %242\l  br i1 %299, label %300, label %287\l|{<s0>T|<s1>F}}"];
	Node0x643c910:s0 -> Node0x643c8c0;
	Node0x643c910:s1 -> Node0x643c910;
	Node0x643c8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%300:\l300:                                              \l  %301 = phi i8 addrspace(4)* [ %286, %247 ], [ %241, %245 ], [ %241, %287 ]\l  %302 = phi i32 [ %285, %247 ], [ 0, %245 ], [ 0, %287 ]\l  %303 = phi i64 [ %284, %247 ], [ 0, %245 ], [ %297, %287 ]\l  %304 = icmp ugt i32 %302, 7\l  br i1 %304, label %307, label %305\l|{<s0>T|<s1>F}}"];
	Node0x643c8c0:s0 -> Node0x643f160;
	Node0x643c8c0:s1 -> Node0x643f1b0;
	Node0x643f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%305:\l305:                                              \l  %306 = icmp eq i32 %302, 0\l  br i1 %306, label %360, label %347\l|{<s0>T|<s1>F}}"];
	Node0x643f1b0:s0 -> Node0x643f340;
	Node0x643f1b0:s1 -> Node0x643f390;
	Node0x643f160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%307:\l307:                                              \l  %308 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !21\l  %309 = zext i8 %308 to i64\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 1\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !21\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 8\l  %314 = or i64 %313, %309\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 2\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !21\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 16\l  %319 = or i64 %314, %318\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 3\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !21\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw nsw i64 %322, 24\l  %324 = or i64 %319, %323\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 4\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !21\l  %327 = zext i8 %326 to i64\l  %328 = shl nuw nsw i64 %327, 32\l  %329 = or i64 %324, %328\l  %330 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 5\l  %331 = load i8, i8 addrspace(4)* %330, align 1, !tbaa !21\l  %332 = zext i8 %331 to i64\l  %333 = shl nuw nsw i64 %332, 40\l  %334 = or i64 %329, %333\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 6\l  %336 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !21\l  %337 = zext i8 %336 to i64\l  %338 = shl nuw nsw i64 %337, 48\l  %339 = or i64 %334, %338\l  %340 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 7\l  %341 = load i8, i8 addrspace(4)* %340, align 1, !tbaa !21\l  %342 = zext i8 %341 to i64\l  %343 = shl nuw i64 %342, 56\l  %344 = or i64 %339, %343\l  %345 = add nsw i32 %302, -8\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 8\l  br label %360\l}"];
	Node0x643f160 -> Node0x643f340;
	Node0x643f390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%347:\l347:                                              \l  %348 = phi i32 [ %358, %347 ], [ 0, %305 ]\l  %349 = phi i64 [ %357, %347 ], [ 0, %305 ]\l  %350 = zext i32 %348 to i64\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %301, i64 %350\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !21\l  %353 = zext i8 %352 to i64\l  %354 = shl i32 %348, 3\l  %355 = zext i32 %354 to i64\l  %356 = shl nuw i64 %353, %355\l  %357 = or i64 %356, %349\l  %358 = add nuw nsw i32 %348, 1\l  %359 = icmp eq i32 %358, %302\l  br i1 %359, label %360, label %347\l|{<s0>T|<s1>F}}"];
	Node0x643f390:s0 -> Node0x643f340;
	Node0x643f390:s1 -> Node0x643f390;
	Node0x643f340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%360:\l360:                                              \l  %361 = phi i8 addrspace(4)* [ %346, %307 ], [ %301, %305 ], [ %301, %347 ]\l  %362 = phi i32 [ %345, %307 ], [ 0, %305 ], [ 0, %347 ]\l  %363 = phi i64 [ %344, %307 ], [ 0, %305 ], [ %357, %347 ]\l  %364 = icmp ugt i32 %362, 7\l  br i1 %364, label %367, label %365\l|{<s0>T|<s1>F}}"];
	Node0x643f340:s0 -> Node0x6441e00;
	Node0x643f340:s1 -> Node0x6441e50;
	Node0x6441e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%365:\l365:                                              \l  %366 = icmp eq i32 %362, 0\l  br i1 %366, label %420, label %407\l|{<s0>T|<s1>F}}"];
	Node0x6441e50:s0 -> Node0x6441fe0;
	Node0x6441e50:s1 -> Node0x6442030;
	Node0x6441e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%367:\l367:                                              \l  %368 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !21\l  %369 = zext i8 %368 to i64\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 1\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !21\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 8\l  %374 = or i64 %373, %369\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 2\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !21\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 16\l  %379 = or i64 %374, %378\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 3\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !21\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw nsw i64 %382, 24\l  %384 = or i64 %379, %383\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 4\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !21\l  %387 = zext i8 %386 to i64\l  %388 = shl nuw nsw i64 %387, 32\l  %389 = or i64 %384, %388\l  %390 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 5\l  %391 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !21\l  %392 = zext i8 %391 to i64\l  %393 = shl nuw nsw i64 %392, 40\l  %394 = or i64 %389, %393\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 6\l  %396 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !21\l  %397 = zext i8 %396 to i64\l  %398 = shl nuw nsw i64 %397, 48\l  %399 = or i64 %394, %398\l  %400 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 7\l  %401 = load i8, i8 addrspace(4)* %400, align 1, !tbaa !21\l  %402 = zext i8 %401 to i64\l  %403 = shl nuw i64 %402, 56\l  %404 = or i64 %399, %403\l  %405 = add nsw i32 %362, -8\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 8\l  br label %420\l}"];
	Node0x6441e00 -> Node0x6441fe0;
	Node0x6442030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%407:\l407:                                              \l  %408 = phi i32 [ %418, %407 ], [ 0, %365 ]\l  %409 = phi i64 [ %417, %407 ], [ 0, %365 ]\l  %410 = zext i32 %408 to i64\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %361, i64 %410\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !21\l  %413 = zext i8 %412 to i64\l  %414 = shl i32 %408, 3\l  %415 = zext i32 %414 to i64\l  %416 = shl nuw i64 %413, %415\l  %417 = or i64 %416, %409\l  %418 = add nuw nsw i32 %408, 1\l  %419 = icmp eq i32 %418, %362\l  br i1 %419, label %420, label %407\l|{<s0>T|<s1>F}}"];
	Node0x6442030:s0 -> Node0x6441fe0;
	Node0x6442030:s1 -> Node0x6442030;
	Node0x6441fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%420:\l420:                                              \l  %421 = phi i8 addrspace(4)* [ %406, %367 ], [ %361, %365 ], [ %361, %407 ]\l  %422 = phi i32 [ %405, %367 ], [ 0, %365 ], [ 0, %407 ]\l  %423 = phi i64 [ %404, %367 ], [ 0, %365 ], [ %417, %407 ]\l  %424 = icmp ugt i32 %422, 7\l  br i1 %424, label %427, label %425\l|{<s0>T|<s1>F}}"];
	Node0x6441fe0:s0 -> Node0x6444660;
	Node0x6441fe0:s1 -> Node0x64446b0;
	Node0x64446b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%425:\l425:                                              \l  %426 = icmp eq i32 %422, 0\l  br i1 %426, label %478, label %465\l|{<s0>T|<s1>F}}"];
	Node0x64446b0:s0 -> Node0x64342f0;
	Node0x64446b0:s1 -> Node0x6444840;
	Node0x6444660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%427:\l427:                                              \l  %428 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !21\l  %429 = zext i8 %428 to i64\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 1\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !21\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 8\l  %434 = or i64 %433, %429\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 2\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !21\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 16\l  %439 = or i64 %434, %438\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 3\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !21\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw nsw i64 %442, 24\l  %444 = or i64 %439, %443\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 4\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !21\l  %447 = zext i8 %446 to i64\l  %448 = shl nuw nsw i64 %447, 32\l  %449 = or i64 %444, %448\l  %450 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 5\l  %451 = load i8, i8 addrspace(4)* %450, align 1, !tbaa !21\l  %452 = zext i8 %451 to i64\l  %453 = shl nuw nsw i64 %452, 40\l  %454 = or i64 %449, %453\l  %455 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 6\l  %456 = load i8, i8 addrspace(4)* %455, align 1, !tbaa !21\l  %457 = zext i8 %456 to i64\l  %458 = shl nuw nsw i64 %457, 48\l  %459 = or i64 %454, %458\l  %460 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 7\l  %461 = load i8, i8 addrspace(4)* %460, align 1, !tbaa !21\l  %462 = zext i8 %461 to i64\l  %463 = shl nuw i64 %462, 56\l  %464 = or i64 %459, %463\l  br label %478\l}"];
	Node0x6444660 -> Node0x64342f0;
	Node0x6444840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%465:\l465:                                              \l  %466 = phi i32 [ %476, %465 ], [ 0, %425 ]\l  %467 = phi i64 [ %475, %465 ], [ 0, %425 ]\l  %468 = zext i32 %466 to i64\l  %469 = getelementptr inbounds i8, i8 addrspace(4)* %421, i64 %468\l  %470 = load i8, i8 addrspace(4)* %469, align 1, !tbaa !21\l  %471 = zext i8 %470 to i64\l  %472 = shl i32 %466, 3\l  %473 = zext i32 %472 to i64\l  %474 = shl nuw i64 %471, %473\l  %475 = or i64 %474, %467\l  %476 = add nuw nsw i32 %466, 1\l  %477 = icmp eq i32 %476, %422\l  br i1 %477, label %478, label %465\l|{<s0>T|<s1>F}}"];
	Node0x6444840:s0 -> Node0x64342f0;
	Node0x6444840:s1 -> Node0x6444840;
	Node0x64342f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%478:\l478:                                              \l  %479 = phi i64 [ %464, %427 ], [ 0, %425 ], [ %475, %465 ]\l  %480 = shl nuw nsw i64 %61, 2\l  %481 = add nuw nsw i64 %480, 28\l  %482 = and i64 %481, 480\l  %483 = and i64 %63, -225\l  %484 = or i64 %483, %482\l  %485 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %484, i64 noundef %123, i64 noundef %183, i64 noundef %243, i64\l... noundef %303, i64 noundef %363, i64 noundef %423, i64 noundef %479) #10\l  %486 = sub i64 %53, %61\l  %487 = getelementptr inbounds i8, i8 addrspace(4)* %54, i64 %61\l  %488 = icmp eq i64 %486, 0\l  br i1 %488, label %489, label %52\l|{<s0>T|<s1>F}}"];
	Node0x64342f0:s0 -> Node0x64332b0;
	Node0x64342f0:s1 -> Node0x6433e50;
	Node0x64332b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%489:\l489:                                              \l  %490 = phi \<2 x i64\> [ %47, %44 ], [ %485, %478 ]\l  %491 = extractelement \<2 x i64\> %490, i64 0\l  %492 = zext i32 %29 to i64\l  %493 = and i64 %491, -225\l  %494 = or i64 %493, 32\l  %495 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %494, i64 noundef %492, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %496 = extractelement \<2 x i64\> %495, i64 0\l  %497 = bitcast double %35 to i64\l  %498 = and i64 %496, -227\l  %499 = or i64 %498, 34\l  %500 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %41,\l... i64 noundef %499, i64 noundef %497, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %501\l}"];
	Node0x64332b0 -> Node0x6431240;
	Node0x6431240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%501:\l501:                                              \l  ret void\l}"];
}
