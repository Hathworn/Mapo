digraph "CFG for 'vec_y0' function" {
	label="CFG for 'vec_y0' function";

	Node0x5dfa000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %712\l|{<s0>T|<s1>F}}"];
	Node0x5dfa000:s0 -> Node0x5dfe900;
	Node0x5dfa000:s1 -> Node0x5dfe990;
	Node0x5dfe900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fcmp ugt double %35, 0x4029180000000000\l  br i1 %36, label %509, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5dfe900:s0 -> Node0x5df4450;
	Node0x5dfe900:s1 -> Node0x5df44e0;
	Node0x5df44e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%37:\l37:                                               \l  %38 = fcmp olt double %35, 2.000000e+00\l  br i1 %38, label %39, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5df44e0:s0 -> Node0x5df46b0;
	Node0x5df44e0:s1 -> Node0x5df4740;
	Node0x5df46b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%39:\l39:                                               \l  %40 = fcmp olt double %35, 8.125000e-01\l  br i1 %40, label %41, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5df46b0:s0 -> Node0x5df4910;
	Node0x5df46b0:s1 -> Node0x5df49a0;
	Node0x5df4910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%41:\l41:                                               \l  %42 = fcmp olt double %35, 3.125000e-01\l  br i1 %42, label %90, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5df4910:s0 -> Node0x5df4b70;
	Node0x5df4910:s1 -> Node0x5df4c00;
	Node0x5df4c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = fcmp olt double %35, 4.375000e-01\l  %45 = fcmp olt double %35, 5.625000e-01\l  %46 = fcmp olt double %35, 6.875000e-01\l  %47 = select i1 %46, double 5.625000e-01, double 6.875000e-01\l  %48 = select i1 %46, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 45),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 60)\l  %49 = select i1 %45, double 4.375000e-01, double %47\l  %50 = select i1 %45, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 30),\l... double addrspace(4)* %48\l  %51 = select i1 %44, double 3.125000e-01, double %49\l  %52 = select i1 %44, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 15),\l... double addrspace(4)* %50\l  br label %90\l}"];
	Node0x5df4c00 -> Node0x5df4b70;
	Node0x5df49a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%53:\l53:                                               \l  %54 = fcmp olt double %35, 1.000000e+00\l  %55 = fcmp olt double %35, 1.250000e+00\l  %56 = fcmp olt double %35, 1.625000e+00\l  %57 = select i1 %56, double 1.250000e+00, double 1.625000e+00\l  %58 = select i1 %56, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 105),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 120)\l  %59 = select i1 %55, double 1.000000e+00, double %57\l  %60 = select i1 %55, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 90),\l... double addrspace(4)* %58\l  %61 = select i1 %54, double 0x3C7EA9D270347F83, double 0.000000e+00\l  %62 = select i1 %54, double 0x3FEC982EB8D417EA, double %59\l  %63 = select i1 %54, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 75),\l... double addrspace(4)* %60\l  br label %90\l}"];
	Node0x5df49a0 -> Node0x5df4b70;
	Node0x5df4740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%64:\l64:                                               \l  %65 = fcmp olt double %35, 0x4019100000000000\l  br i1 %65, label %66, label %79\l|{<s0>T|<s1>F}}"];
	Node0x5df4740:s0 -> Node0x5dfeb60;
	Node0x5df4740:s1 -> Node0x5dfebb0;
	Node0x5dfeb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%66:\l66:                                               \l  %67 = fcmp olt double %35, 2.531250e+00\l  br i1 %67, label %90, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5dfeb60:s0 -> Node0x5df4b70;
	Node0x5dfeb60:s1 -> Node0x5df6950;
	Node0x5df6950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%68:\l68:                                               \l  %69 = fcmp olt double %35, 3.000000e+00\l  br i1 %69, label %90, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5df6950:s0 -> Node0x5df4b70;
	Node0x5df6950:s1 -> Node0x5df6b20;
	Node0x5df6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%70:\l70:                                               \l  %71 = fcmp olt double %35, 0x400BE00000000000\l  %72 = fcmp olt double %35, 0x4012D00000000000\l  %73 = select i1 %72, double 0xBC9F06AE7804384E, double 0x3CBDFE7BAC228E8C\l  %74 = select i1 %72, double 0x400FA9534D98569C, double 0x4015B7FE4E87B02E\l  %75 = select i1 %72, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 180),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 195)\l  %76 = select i1 %71, double 0.000000e+00, double %73\l  %77 = select i1 %71, double 3.000000e+00, double %74\l  %78 = select i1 %71, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 165),\l... double addrspace(4)* %75\l  br label %90\l}"];
	Node0x5df6b20 -> Node0x5df4b70;
	Node0x5dfebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%79:\l79:                                               \l  %80 = fcmp olt double %35, 7.843750e+00\l  br i1 %80, label %90, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5dfebb0:s0 -> Node0x5df4b70;
	Node0x5dfebb0:s1 -> Node0x5df7660;
	Node0x5df7660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%81:\l81:                                               \l  %82 = fcmp olt double %35, 0x4022D80000000000\l  %83 = fcmp olt double %35, 0x4025F80000000000\l  %84 = select i1 %83, double 0xBCCCB49FF791C495, double 0x3C80FC786CE06080\l  %85 = select i1 %83, double 0x402471D735A47D58, double 0x40277F9138D43206\l  %86 = select i1 %83, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 240),\l... double addrspace(4)* getelementptr inbounds ([270 x double], [270 x double]\l... addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 255)\l  %87 = select i1 %82, double 0x3CB479CC068D9046, double %84\l  %88 = select i1 %82, double 0x40213127AE6169B4, double %85\l  %89 = select i1 %82, double addrspace(4)* getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 225),\l... double addrspace(4)* %86\l  br label %90\l}"];
	Node0x5df7660 -> Node0x5df4b70;
	Node0x5df4b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%90:\l90:                                               \l  %91 = phi double [ 0.000000e+00, %41 ], [ 0xBC8BD1E50D219BFD, %66 ], [\l... 0.000000e+00, %68 ], [ 0xBC99774A495F56CF, %79 ], [ %76, %70 ], [ %87, %81 ],\l... [ 0.000000e+00, %43 ], [ %61, %53 ]\l  %92 = phi double [ 0.000000e+00, %41 ], [ 0x400193BED4DFF243, %66 ], [\l... 2.531250e+00, %68 ], [ 0x401C581DC4E72103, %79 ], [ %77, %70 ], [ %88, %81 ],\l... [ %51, %43 ], [ %62, %53 ]\l  %93 = phi double addrspace(4)* [ getelementptr inbounds ([270 x double],\l... [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 0), %41 ], [\l... getelementptr inbounds ([270 x double], [270 x double] addrspace(4)*\l... @__ocmltbl_M64_Y0, i64 0, i64 135), %66 ], [ getelementptr inbounds ([270 x\l... double], [270 x double] addrspace(4)* @__ocmltbl_M64_Y0, i64 0, i64 150), %68\l... ], [ getelementptr inbounds ([270 x double], [270 x double] addrspace(4)*\l... @__ocmltbl_M64_Y0, i64 0, i64 210), %79 ], [ %78, %70 ], [ %89, %81 ], [ %52,\l... %43 ], [ %63, %53 ]\l  %94 = fcmp olt double %35, 3.125000e-01\l  br i1 %94, label %95, label %460\l|{<s0>T|<s1>F}}"];
	Node0x5df4b70:s0 -> Node0x5df8a50;
	Node0x5df4b70:s1 -> Node0x5df8aa0;
	Node0x5df8a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%95:\l95:                                               \l  %96 = tail call double @llvm.fabs.f64(double %35)\l  %97 = fcmp ugt double %96, 0x4029280000000000\l  br i1 %97, label %171, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5df8a50:s0 -> Node0x5df8dc0;
	Node0x5df8a50:s1 -> Node0x5df8e50;
	Node0x5df8e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%98:\l98:                                               \l  %99 = fcmp ugt double %96, 0x4019100000000000\l  br i1 %99, label %111, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5df8e50:s0 -> Node0x5df9020;
	Node0x5df8e50:s1 -> Node0x5df9070;
	Node0x5df9070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%100:\l100:                                              \l  %101 = fcmp ugt double %96, 1.656250e+00\l  br i1 %101, label %102, label %122\l|{<s0>T|<s1>F}}"];
	Node0x5df9070:s0 -> Node0x5df9240;
	Node0x5df9070:s1 -> Node0x5df92d0;
	Node0x5df9240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%102:\l102:                                              \l  %103 = fcmp ugt double %96, 3.125000e+00\l  %104 = fcmp ugt double %96, 4.687500e+00\l  %105 = select i1 %104, double 0x3C975054CD60A517, double 0xBCA60155A9D1B256\l  %106 = select i1 %104, double 0x4016148F5B2C2E45, double 0x400EA75575AF6F09\l  %107 = select i1 %104, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J0, i64 0, i64 45),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J0, i64 0, i64 30)\l  %108 = select i1 %103, double %105, double 0xBCA0F539D7DA258E\l  %109 = select i1 %103, double %106, double 0x40033D152E971B40\l  %110 = select i1 %103, double addrspace(4)* %107, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J0, i64 0, i64 15)\l  br label %122\l}"];
	Node0x5df9240 -> Node0x5df92d0;
	Node0x5df9020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%111:\l111:                                              \l  %112 = fcmp ugt double %96, 7.843750e+00\l  br i1 %112, label %113, label %122\l|{<s0>T|<s1>F}}"];
	Node0x5df9020:s0 -> Node0x5e099c0;
	Node0x5df9020:s1 -> Node0x5df92d0;
	Node0x5e099c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%113:\l113:                                              \l  %114 = fcmp ugt double %96, 0x4022D80000000000\l  %115 = fcmp ugt double %96, 0x4025F80000000000\l  %116 = select i1 %115, double 0x3CB444FD5821D5B1, double 0x3CC02610A51562B6\l  %117 = select i1 %115, double 0x40279544008272B6, double 0x402458D0D0BDFC29\l  %118 = select i1 %115, double addrspace(4)* getelementptr inbounds ([120 x\l... double], [120 x double] addrspace(4)* @__ocmltbl_M64_J0, i64 0, i64 105),\l... double addrspace(4)* getelementptr inbounds ([120 x double], [120 x double]\l... addrspace(4)* @__ocmltbl_M64_J0, i64 0, i64 90)\l  %119 = select i1 %114, double %116, double 0xBCB51970714C7C25\l  %120 = select i1 %114, double %117, double 0x40214EB56CCCDECA\l  %121 = select i1 %114, double addrspace(4)* %118, double addrspace(4)*\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J0, i64 0, i64 75)\l  br label %122\l}"];
	Node0x5e099c0 -> Node0x5df92d0;
	Node0x5df92d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%122:\l122:                                              \l  %123 = phi double [ 0.000000e+00, %100 ], [ 0xBC9B226D9D243827, %111 ], [\l... %108, %102 ], [ %119, %113 ]\l  %124 = phi double [ 0.000000e+00, %100 ], [ 0x401C0FF5F3B47250, %111 ], [\l... %109, %102 ], [ %120, %113 ]\l  %125 = phi double addrspace(4)* [ getelementptr inbounds ([120 x double],\l... [120 x double] addrspace(4)* @__ocmltbl_M64_J0, i64 0, i64 0), %100 ], [\l... getelementptr inbounds ([120 x double], [120 x double] addrspace(4)*\l... @__ocmltbl_M64_J0, i64 0, i64 60), %111 ], [ %110, %102 ], [ %121, %113 ]\l  %126 = fsub double %96, %124\l  %127 = fsub double %126, %123\l  %128 = getelementptr inbounds double, double addrspace(4)* %125, i64 14\l  %129 = load double, double addrspace(4)* %128, align 8, !tbaa !20\l  %130 = getelementptr inbounds double, double addrspace(4)* %125, i64 13\l  %131 = load double, double addrspace(4)* %130, align 8, !tbaa !20\l  %132 = tail call double @llvm.fma.f64(double %127, double %129, double %131)\l  %133 = getelementptr inbounds double, double addrspace(4)* %125, i64 12\l  %134 = load double, double addrspace(4)* %133, align 8, !tbaa !20\l  %135 = tail call double @llvm.fma.f64(double %127, double %132, double %134)\l  %136 = getelementptr inbounds double, double addrspace(4)* %125, i64 11\l  %137 = load double, double addrspace(4)* %136, align 8, !tbaa !20\l  %138 = tail call double @llvm.fma.f64(double %127, double %135, double %137)\l  %139 = getelementptr inbounds double, double addrspace(4)* %125, i64 10\l  %140 = load double, double addrspace(4)* %139, align 8, !tbaa !20\l  %141 = tail call double @llvm.fma.f64(double %127, double %138, double %140)\l  %142 = getelementptr inbounds double, double addrspace(4)* %125, i64 9\l  %143 = load double, double addrspace(4)* %142, align 8, !tbaa !20\l  %144 = tail call double @llvm.fma.f64(double %127, double %141, double %143)\l  %145 = getelementptr inbounds double, double addrspace(4)* %125, i64 8\l  %146 = load double, double addrspace(4)* %145, align 8, !tbaa !20\l  %147 = tail call double @llvm.fma.f64(double %127, double %144, double %146)\l  %148 = getelementptr inbounds double, double addrspace(4)* %125, i64 7\l  %149 = load double, double addrspace(4)* %148, align 8, !tbaa !20\l  %150 = tail call double @llvm.fma.f64(double %127, double %147, double %149)\l  %151 = getelementptr inbounds double, double addrspace(4)* %125, i64 6\l  %152 = load double, double addrspace(4)* %151, align 8, !tbaa !20\l  %153 = tail call double @llvm.fma.f64(double %127, double %150, double %152)\l  %154 = getelementptr inbounds double, double addrspace(4)* %125, i64 5\l  %155 = load double, double addrspace(4)* %154, align 8, !tbaa !20\l  %156 = tail call double @llvm.fma.f64(double %127, double %153, double %155)\l  %157 = getelementptr inbounds double, double addrspace(4)* %125, i64 4\l  %158 = load double, double addrspace(4)* %157, align 8, !tbaa !20\l  %159 = tail call double @llvm.fma.f64(double %127, double %156, double %158)\l  %160 = getelementptr inbounds double, double addrspace(4)* %125, i64 3\l  %161 = load double, double addrspace(4)* %160, align 8, !tbaa !20\l  %162 = tail call double @llvm.fma.f64(double %127, double %159, double %161)\l  %163 = getelementptr inbounds double, double addrspace(4)* %125, i64 2\l  %164 = load double, double addrspace(4)* %163, align 8, !tbaa !20\l  %165 = tail call double @llvm.fma.f64(double %127, double %162, double %164)\l  %166 = getelementptr inbounds double, double addrspace(4)* %125, i64 1\l  %167 = load double, double addrspace(4)* %166, align 8, !tbaa !20\l  %168 = tail call double @llvm.fma.f64(double %127, double %165, double %167)\l  %169 = load double, double addrspace(4)* %125, align 8, !tbaa !20\l  %170 = tail call double @llvm.fma.f64(double %127, double %168, double %169)\l  br label %372\l}"];
	Node0x5df92d0 -> Node0x5e0d730;
	Node0x5df8dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%171:\l171:                                              \l  %172 = fdiv double 1.000000e+00, %96\l  %173 = fmul double %172, %172\l  %174 = tail call double @llvm.fma.f64(double %173, double\l... 0xC1B91F780A4A989B, double 0x41752A41923B70A7)\l  %175 = tail call double @llvm.fma.f64(double %173, double %174, double\l... 0xC1240A5E31612A8D)\l  %176 = tail call double @llvm.fma.f64(double %173, double %175, double\l... 0x40D0C9A0CBE3B3B8)\l  %177 = tail call double @llvm.fma.f64(double %173, double %176, double\l... 0xC080AF76167FE583)\l  %178 = tail call double @llvm.fma.f64(double %173, double %177, double\l... 0x403778EA61B94139)\l  %179 = tail call double @llvm.fma.f64(double %173, double %178, double\l... 0xBFFA3581D1A82662)\l  %180 = tail call double @llvm.fma.f64(double %173, double %179, double\l... 0x3FCAD33330A1DAF2)\l  %181 = tail call double @llvm.fma.f64(double %173, double %180, double\l... 0xBFB0AAAAAAAA7909)\l  %182 = tail call double @llvm.fma.f64(double %173, double %181, double\l... 1.250000e-01)\l  %183 = fmul double %172, %182\l  %184 = tail call double @llvm.amdgcn.rsq.f64(double %172)\l  %185 = fmul double %172, %184\l  %186 = fmul double %184, 5.000000e-01\l  %187 = fneg double %186\l  %188 = tail call double @llvm.fma.f64(double %187, double %185, double\l... 5.000000e-01)\l  %189 = tail call double @llvm.fma.f64(double %186, double %188, double %186)\l  %190 = tail call double @llvm.fma.f64(double %185, double %188, double %185)\l  %191 = fneg double %190\l  %192 = tail call double @llvm.fma.f64(double %191, double %190, double %172)\l  %193 = tail call double @llvm.fma.f64(double %192, double %189, double %190)\l  %194 = fcmp oeq double %172, 0.000000e+00\l  %195 = select i1 %194, double %172, double %193\l  %196 = fmul double %195, 0x3FE9884533D43651\l  %197 = tail call double @llvm.fma.f64(double %173, double\l... 0x41344395CD7AC32C, double 0xC0F25BF3ABBEE803)\l  %198 = tail call double @llvm.fma.f64(double %173, double %197, double\l... 0x40A55A4A78625B0F)\l  %199 = tail call double @llvm.fma.f64(double %173, double %198, double\l... 0xC05A826C7EA56321)\l  %200 = tail call double @llvm.fma.f64(double %173, double %199, double\l... 0x401763253BBF53B6)\l  %201 = tail call double @llvm.fma.f64(double %173, double %200, double\l... 0xBFE15EFAFF948953)\l  %202 = tail call double @llvm.fma.f64(double %173, double %201, double\l... 0x3FBA7FFFF967A1D4)\l  %203 = tail call double @llvm.fma.f64(double %173, double %202, double\l... 0xBFAFFFFFFFFF2868)\l  %204 = tail call double @llvm.fma.f64(double %173, double %203, double\l... 1.000000e+00)\l  %205 = fmul double %196, %204\l  %206 = fcmp olt double %96, 0x41D0000000000000\l  br i1 %206, label %207, label %226\l|{<s0>T|<s1>F}}"];
	Node0x5df8dc0:s0 -> Node0x5e10020;
	Node0x5df8dc0:s1 -> Node0x5e100b0;
	Node0x5e10020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%207:\l207:                                              \l  %208 = fmul double %96, 0x3FE45F306DC9C883\l  %209 = tail call double @llvm.rint.f64(double %208)\l  %210 = tail call double @llvm.fma.f64(double %209, double\l... 0xBFF921FB54442D18, double %96)\l  %211 = tail call double @llvm.fma.f64(double %209, double\l... 0xBC91A62633145C00, double %210)\l  %212 = fmul double %209, 0x3C91A62633145C00\l  %213 = fneg double %212\l  %214 = tail call double @llvm.fma.f64(double %209, double\l... 0x3C91A62633145C00, double %213)\l  %215 = fsub double %210, %212\l  %216 = fsub double %210, %215\l  %217 = fsub double %216, %212\l  %218 = fsub double %215, %211\l  %219 = fadd double %218, %217\l  %220 = fsub double %219, %214\l  %221 = tail call double @llvm.fma.f64(double %209, double\l... 0xB97B839A252049C0, double %220)\l  %222 = fadd double %211, %221\l  %223 = fsub double %222, %211\l  %224 = fsub double %221, %223\l  %225 = fptosi double %209 to i32\l  br label %302\l}"];
	Node0x5e10020 -> Node0x5e110f0;
	Node0x5e100b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%226:\l226:                                              \l  %227 = tail call double @llvm.amdgcn.trig.preop.f64(double %96, i32 0)\l  %228 = tail call double @llvm.amdgcn.trig.preop.f64(double %96, i32 1)\l  %229 = tail call double @llvm.amdgcn.trig.preop.f64(double %96, i32 2)\l  %230 = fcmp oge double %96, 0x7B00000000000000\l  %231 = tail call double @llvm.amdgcn.ldexp.f64(double %96, i32 -128)\l  %232 = select i1 %230, double %231, double %96\l  %233 = fmul double %229, %232\l  %234 = fneg double %233\l  %235 = tail call double @llvm.fma.f64(double %229, double %232, double %234)\l  %236 = fmul double %228, %232\l  %237 = fneg double %236\l  %238 = tail call double @llvm.fma.f64(double %228, double %232, double %237)\l  %239 = fmul double %227, %232\l  %240 = fneg double %239\l  %241 = tail call double @llvm.fma.f64(double %227, double %232, double %240)\l  %242 = fadd double %236, %241\l  %243 = fsub double %242, %236\l  %244 = fsub double %242, %243\l  %245 = fsub double %241, %243\l  %246 = fsub double %236, %244\l  %247 = fadd double %245, %246\l  %248 = fadd double %233, %238\l  %249 = fsub double %248, %233\l  %250 = fsub double %248, %249\l  %251 = fsub double %238, %249\l  %252 = fsub double %233, %250\l  %253 = fadd double %251, %252\l  %254 = fadd double %248, %247\l  %255 = fsub double %254, %248\l  %256 = fsub double %254, %255\l  %257 = fsub double %247, %255\l  %258 = fsub double %248, %256\l  %259 = fadd double %257, %258\l  %260 = fadd double %253, %259\l  %261 = fadd double %235, %260\l  %262 = fadd double %239, %242\l  %263 = fsub double %262, %239\l  %264 = fsub double %242, %263\l  %265 = fadd double %264, %254\l  %266 = fsub double %265, %264\l  %267 = fsub double %254, %266\l  %268 = fadd double %267, %261\l  %269 = tail call double @llvm.amdgcn.ldexp.f64(double %262, i32 -2)\l  %270 = tail call double @llvm.amdgcn.fract.f64(double %269)\l  %271 = tail call i1 @llvm.amdgcn.class.f64(double %269, i32 516)\l  %272 = select i1 %271, double 0.000000e+00, double %270\l  %273 = tail call double @llvm.amdgcn.ldexp.f64(double %272, i32 2)\l  %274 = fadd double %273, %265\l  %275 = fcmp olt double %274, 0.000000e+00\l  %276 = select i1 %275, double 4.000000e+00, double 0.000000e+00\l  %277 = fadd double %273, %276\l  %278 = fadd double %265, %277\l  %279 = fptosi double %278 to i32\l  %280 = sitofp i32 %279 to double\l  %281 = fsub double %277, %280\l  %282 = fadd double %265, %281\l  %283 = fsub double %282, %281\l  %284 = fsub double %265, %283\l  %285 = fadd double %268, %284\l  %286 = fcmp oge double %282, 5.000000e-01\l  %287 = zext i1 %286 to i32\l  %288 = add nsw i32 %287, %279\l  %289 = select i1 %286, double 1.000000e+00, double 0.000000e+00\l  %290 = fsub double %282, %289\l  %291 = fadd double %290, %285\l  %292 = fsub double %291, %290\l  %293 = fsub double %285, %292\l  %294 = fmul double %291, 0x3FF921FB54442D18\l  %295 = fneg double %294\l  %296 = tail call double @llvm.fma.f64(double %291, double\l... 0x3FF921FB54442D18, double %295)\l  %297 = tail call double @llvm.fma.f64(double %291, double\l... 0x3C91A62633145C07, double %296)\l  %298 = tail call double @llvm.fma.f64(double %293, double\l... 0x3FF921FB54442D18, double %297)\l  %299 = fadd double %294, %298\l  %300 = fsub double %299, %294\l  %301 = fsub double %298, %300\l  br label %302\l}"];
	Node0x5e100b0 -> Node0x5e110f0;
	Node0x5e110f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%302:\l302:                                              \l  %303 = phi double [ %224, %207 ], [ %301, %226 ]\l  %304 = phi double [ %222, %207 ], [ %299, %226 ]\l  %305 = phi i32 [ %225, %207 ], [ %288, %226 ]\l  %306 = and i32 %305, 3\l  %307 = fcmp olt double %304, %183\l  %308 = sext i1 %307 to i32\l  %309 = add nsw i32 %306, %308\l  %310 = select i1 %307, i32 -2147483648, i32 0\l  %311 = xor i32 %310, -1075240453\l  %312 = insertelement \<2 x i32\> \<i32 1413754136, i32 poison\>, i32 %311, i64 1\l  %313 = bitcast \<2 x i32\> %312 to double\l  %314 = xor i32 %310, -1132354010\l  %315 = insertelement \<2 x i32\> \<i32 856972295, i32 poison\>, i32 %314, i64 1\l  %316 = bitcast \<2 x i32\> %315 to double\l  %317 = fsub double %313, %183\l  %318 = fsub double %313, %317\l  %319 = fsub double %318, %183\l  %320 = fadd double %319, %316\l  %321 = fadd double %317, %320\l  %322 = fsub double %321, %317\l  %323 = fsub double %320, %322\l  %324 = fadd double %304, %321\l  %325 = fsub double %324, %321\l  %326 = fsub double %304, %325\l  %327 = fadd double %303, %323\l  %328 = fadd double %326, %327\l  %329 = fadd double %324, %328\l  %330 = fsub double %329, %324\l  %331 = fsub double %328, %330\l  %332 = fmul double %329, %329\l  %333 = fmul double %332, 5.000000e-01\l  %334 = fsub double 1.000000e+00, %333\l  %335 = fsub double 1.000000e+00, %334\l  %336 = fsub double %335, %333\l  %337 = fmul double %332, %332\l  %338 = tail call double @llvm.fma.f64(double %332, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %339 = tail call double @llvm.fma.f64(double %332, double %338, double\l... 0xBE927E4FA17F65F6)\l  %340 = tail call double @llvm.fma.f64(double %332, double %339, double\l... 0x3EFA01A019F4EC90)\l  %341 = tail call double @llvm.fma.f64(double %332, double %340, double\l... 0xBF56C16C16C16967)\l  %342 = tail call double @llvm.fma.f64(double %332, double %341, double\l... 0x3FA5555555555555)\l  %343 = fneg double %331\l  %344 = tail call double @llvm.fma.f64(double %329, double %343, double %336)\l  %345 = tail call double @llvm.fma.f64(double %337, double %342, double %344)\l  %346 = fadd double %334, %345\l  %347 = tail call double @llvm.fma.f64(double %332, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %348 = tail call double @llvm.fma.f64(double %332, double %347, double\l... 0x3EC71DE3796CDE01)\l  %349 = tail call double @llvm.fma.f64(double %332, double %348, double\l... 0xBF2A01A019E83E5C)\l  %350 = tail call double @llvm.fma.f64(double %332, double %349, double\l... 0x3F81111111110BB3)\l  %351 = fneg double %332\l  %352 = fmul double %329, %351\l  %353 = fmul double %331, 5.000000e-01\l  %354 = tail call double @llvm.fma.f64(double %352, double %350, double %353)\l  %355 = tail call double @llvm.fma.f64(double %332, double %354, double %343)\l  %356 = tail call double @llvm.fma.f64(double %352, double\l... 0xBFC5555555555555, double %355)\l  %357 = fsub double %329, %356\l  %358 = fneg double %357\l  %359 = and i32 %309, 1\l  %360 = icmp eq i32 %359, 0\l  %361 = select i1 %360, double %346, double %358\l  %362 = bitcast double %361 to \<2 x i32\>\l  %363 = shl i32 %309, 30\l  %364 = and i32 %363, -2147483648\l  %365 = extractelement \<2 x i32\> %362, i64 1\l  %366 = xor i32 %365, %364\l  %367 = insertelement \<2 x i32\> %362, i32 %366, i64 1\l  %368 = bitcast \<2 x i32\> %367 to double\l  %369 = fmul double %205, %368\l  %370 = tail call i1 @llvm.amdgcn.class.f64(double %96, i32 512)\l  %371 = select i1 %370, double 0.000000e+00, double %369\l  br label %372\l}"];
	Node0x5e110f0 -> Node0x5e0d730;
	Node0x5e0d730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%372:\l372:                                              \l  %373 = phi double [ %170, %122 ], [ %371, %302 ]\l  %374 = fmul double %373, 0x3FE45F306DC9C883\l  %375 = tail call double @llvm.amdgcn.frexp.mant.f64(double %35)\l  %376 = fcmp olt double %375, 0x3FE5555555555555\l  %377 = zext i1 %376 to i32\l  %378 = tail call double @llvm.amdgcn.ldexp.f64(double %375, i32 %377)\l  %379 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %35)\l  %380 = sub nsw i32 %379, %377\l  %381 = fadd double %378, -1.000000e+00\l  %382 = fadd double %378, 1.000000e+00\l  %383 = fadd double %382, -1.000000e+00\l  %384 = fsub double %378, %383\l  %385 = tail call double @llvm.amdgcn.rcp.f64(double %382)\l  %386 = fneg double %382\l  %387 = tail call double @llvm.fma.f64(double %386, double %385, double\l... 1.000000e+00)\l  %388 = tail call double @llvm.fma.f64(double %387, double %385, double %385)\l  %389 = tail call double @llvm.fma.f64(double %386, double %388, double\l... 1.000000e+00)\l  %390 = tail call double @llvm.fma.f64(double %389, double %388, double %388)\l  %391 = fmul double %381, %390\l  %392 = fmul double %382, %391\l  %393 = fneg double %392\l  %394 = tail call double @llvm.fma.f64(double %391, double %382, double %393)\l  %395 = tail call double @llvm.fma.f64(double %391, double %384, double %394)\l  %396 = fadd double %392, %395\l  %397 = fsub double %396, %392\l  %398 = fsub double %395, %397\l  %399 = fsub double %381, %396\l  %400 = fsub double %381, %399\l  %401 = fsub double %400, %396\l  %402 = fsub double %401, %398\l  %403 = fadd double %399, %402\l  %404 = fmul double %390, %403\l  %405 = fadd double %391, %404\l  %406 = fsub double %405, %391\l  %407 = fsub double %404, %406\l  %408 = fmul double %405, %405\l  %409 = tail call double @llvm.fma.f64(double %408, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %410 = tail call double @llvm.fma.f64(double %408, double %409, double\l... 0x3FC7474DD7F4DF2E)\l  %411 = tail call double @llvm.fma.f64(double %408, double %410, double\l... 0x3FCC71C016291751)\l  %412 = tail call double @llvm.fma.f64(double %408, double %411, double\l... 0x3FD249249B27ACF1)\l  %413 = tail call double @llvm.fma.f64(double %408, double %412, double\l... 0x3FD99999998EF7B6)\l  %414 = tail call double @llvm.fma.f64(double %408, double %413, double\l... 0x3FE5555555555780)\l  %415 = tail call double @llvm.amdgcn.ldexp.f64(double %405, i32 1)\l  %416 = tail call double @llvm.amdgcn.ldexp.f64(double %407, i32 1)\l  %417 = fmul double %405, %408\l  %418 = fmul double %417, %414\l  %419 = fadd double %415, %418\l  %420 = fsub double %419, %415\l  %421 = fsub double %418, %420\l  %422 = fadd double %416, %421\l  %423 = fadd double %419, %422\l  %424 = fsub double %423, %419\l  %425 = fsub double %422, %424\l  %426 = sitofp i32 %380 to double\l  %427 = fmul double %426, 0x3FE62E42FEFA39EF\l  %428 = fneg double %427\l  %429 = tail call double @llvm.fma.f64(double %426, double\l... 0x3FE62E42FEFA39EF, double %428)\l  %430 = tail call double @llvm.fma.f64(double %426, double\l... 0x3C7ABC9E3B39803F, double %429)\l  %431 = fadd double %427, %430\l  %432 = fsub double %431, %427\l  %433 = fsub double %430, %432\l  %434 = fadd double %431, %423\l  %435 = fsub double %434, %431\l  %436 = fsub double %434, %435\l  %437 = fsub double %431, %436\l  %438 = fsub double %423, %435\l  %439 = fadd double %438, %437\l  %440 = fadd double %433, %425\l  %441 = fsub double %440, %433\l  %442 = fsub double %440, %441\l  %443 = fsub double %433, %442\l  %444 = fsub double %425, %441\l  %445 = fadd double %444, %443\l  %446 = fadd double %440, %439\l  %447 = fadd double %434, %446\l  %448 = fsub double %447, %434\l  %449 = fsub double %446, %448\l  %450 = fadd double %445, %449\l  %451 = fadd double %447, %450\l  %452 = fcmp oeq double %96, 0x7FF0000000000000\l  %453 = select i1 %452, double %35, double %451\l  %454 = fcmp olt double %35, 0.000000e+00\l  %455 = select i1 %454, double 0x7FF8000000000000, double %453\l  %456 = fcmp oeq double %35, 0.000000e+00\l  %457 = select i1 %456, double 0xFFF0000000000000, double %455\l  %458 = fmul double %457, %374\l  %459 = fmul double %35, %35\l  br label %460\l}"];
	Node0x5e0d730 -> Node0x5df8aa0;
	Node0x5df8aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%460:\l460:                                              \l  %461 = phi double [ %458, %372 ], [ 0.000000e+00, %90 ]\l  %462 = phi double [ %459, %372 ], [ %35, %90 ]\l  %463 = fsub double %462, %92\l  %464 = fsub double %463, %91\l  %465 = getelementptr inbounds double, double addrspace(4)* %93, i64 14\l  %466 = load double, double addrspace(4)* %465, align 8, !tbaa !20\l  %467 = getelementptr inbounds double, double addrspace(4)* %93, i64 13\l  %468 = load double, double addrspace(4)* %467, align 8, !tbaa !20\l  %469 = tail call double @llvm.fma.f64(double %464, double %466, double %468)\l  %470 = getelementptr inbounds double, double addrspace(4)* %93, i64 12\l  %471 = load double, double addrspace(4)* %470, align 8, !tbaa !20\l  %472 = tail call double @llvm.fma.f64(double %464, double %469, double %471)\l  %473 = getelementptr inbounds double, double addrspace(4)* %93, i64 11\l  %474 = load double, double addrspace(4)* %473, align 8, !tbaa !20\l  %475 = tail call double @llvm.fma.f64(double %464, double %472, double %474)\l  %476 = getelementptr inbounds double, double addrspace(4)* %93, i64 10\l  %477 = load double, double addrspace(4)* %476, align 8, !tbaa !20\l  %478 = tail call double @llvm.fma.f64(double %464, double %475, double %477)\l  %479 = getelementptr inbounds double, double addrspace(4)* %93, i64 9\l  %480 = load double, double addrspace(4)* %479, align 8, !tbaa !20\l  %481 = tail call double @llvm.fma.f64(double %464, double %478, double %480)\l  %482 = getelementptr inbounds double, double addrspace(4)* %93, i64 8\l  %483 = load double, double addrspace(4)* %482, align 8, !tbaa !20\l  %484 = tail call double @llvm.fma.f64(double %464, double %481, double %483)\l  %485 = getelementptr inbounds double, double addrspace(4)* %93, i64 7\l  %486 = load double, double addrspace(4)* %485, align 8, !tbaa !20\l  %487 = tail call double @llvm.fma.f64(double %464, double %484, double %486)\l  %488 = getelementptr inbounds double, double addrspace(4)* %93, i64 6\l  %489 = load double, double addrspace(4)* %488, align 8, !tbaa !20\l  %490 = tail call double @llvm.fma.f64(double %464, double %487, double %489)\l  %491 = getelementptr inbounds double, double addrspace(4)* %93, i64 5\l  %492 = load double, double addrspace(4)* %491, align 8, !tbaa !20\l  %493 = tail call double @llvm.fma.f64(double %464, double %490, double %492)\l  %494 = getelementptr inbounds double, double addrspace(4)* %93, i64 4\l  %495 = load double, double addrspace(4)* %494, align 8, !tbaa !20\l  %496 = tail call double @llvm.fma.f64(double %464, double %493, double %495)\l  %497 = getelementptr inbounds double, double addrspace(4)* %93, i64 3\l  %498 = load double, double addrspace(4)* %497, align 8, !tbaa !20\l  %499 = tail call double @llvm.fma.f64(double %464, double %496, double %498)\l  %500 = getelementptr inbounds double, double addrspace(4)* %93, i64 2\l  %501 = load double, double addrspace(4)* %500, align 8, !tbaa !20\l  %502 = tail call double @llvm.fma.f64(double %464, double %499, double %501)\l  %503 = getelementptr inbounds double, double addrspace(4)* %93, i64 1\l  %504 = load double, double addrspace(4)* %503, align 8, !tbaa !20\l  %505 = tail call double @llvm.fma.f64(double %464, double %502, double %504)\l  %506 = load double, double addrspace(4)* %93, align 8, !tbaa !20\l  %507 = tail call double @llvm.fma.f64(double %464, double %505, double %506)\l  %508 = fadd double %461, %507\l  br label %709\l}"];
	Node0x5df8aa0 -> Node0x5e1fba0;
	Node0x5df4450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%509:\l509:                                              \l  %510 = fdiv double 1.000000e+00, %35\l  %511 = fmul double %510, %510\l  %512 = tail call double @llvm.fma.f64(double %511, double\l... 0xC1B91F780A4A989B, double 0x41752A41923B70A7)\l  %513 = tail call double @llvm.fma.f64(double %511, double %512, double\l... 0xC1240A5E31612A8D)\l  %514 = tail call double @llvm.fma.f64(double %511, double %513, double\l... 0x40D0C9A0CBE3B3B8)\l  %515 = tail call double @llvm.fma.f64(double %511, double %514, double\l... 0xC080AF76167FE583)\l  %516 = tail call double @llvm.fma.f64(double %511, double %515, double\l... 0x403778EA61B94139)\l  %517 = tail call double @llvm.fma.f64(double %511, double %516, double\l... 0xBFFA3581D1A82662)\l  %518 = tail call double @llvm.fma.f64(double %511, double %517, double\l... 0x3FCAD33330A1DAF2)\l  %519 = tail call double @llvm.fma.f64(double %511, double %518, double\l... 0xBFB0AAAAAAAA7909)\l  %520 = tail call double @llvm.fma.f64(double %511, double %519, double\l... 1.250000e-01)\l  %521 = fmul double %510, %520\l  %522 = tail call double @llvm.amdgcn.rsq.f64(double %510)\l  %523 = fmul double %510, %522\l  %524 = fmul double %522, 5.000000e-01\l  %525 = fneg double %524\l  %526 = tail call double @llvm.fma.f64(double %525, double %523, double\l... 5.000000e-01)\l  %527 = tail call double @llvm.fma.f64(double %524, double %526, double %524)\l  %528 = tail call double @llvm.fma.f64(double %523, double %526, double %523)\l  %529 = fneg double %528\l  %530 = tail call double @llvm.fma.f64(double %529, double %528, double %510)\l  %531 = tail call double @llvm.fma.f64(double %530, double %527, double %528)\l  %532 = fcmp oeq double %510, 0.000000e+00\l  %533 = select i1 %532, double %510, double %531\l  %534 = fmul double %533, 0x3FE9884533D43651\l  %535 = tail call double @llvm.fma.f64(double %511, double\l... 0x41344395CD7AC32C, double 0xC0F25BF3ABBEE803)\l  %536 = tail call double @llvm.fma.f64(double %511, double %535, double\l... 0x40A55A4A78625B0F)\l  %537 = tail call double @llvm.fma.f64(double %511, double %536, double\l... 0xC05A826C7EA56321)\l  %538 = tail call double @llvm.fma.f64(double %511, double %537, double\l... 0x401763253BBF53B6)\l  %539 = tail call double @llvm.fma.f64(double %511, double %538, double\l... 0xBFE15EFAFF948953)\l  %540 = tail call double @llvm.fma.f64(double %511, double %539, double\l... 0x3FBA7FFFF967A1D4)\l  %541 = tail call double @llvm.fma.f64(double %511, double %540, double\l... 0xBFAFFFFFFFFF2868)\l  %542 = tail call double @llvm.fma.f64(double %511, double %541, double\l... 1.000000e+00)\l  %543 = fmul double %534, %542\l  %544 = fcmp olt double %35, 0x41D0000000000000\l  br i1 %544, label %545, label %564\l|{<s0>T|<s1>F}}"];
	Node0x5df4450:s0 -> Node0x5e22e50;
	Node0x5df4450:s1 -> Node0x5e22ea0;
	Node0x5e22e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%545:\l545:                                              \l  %546 = fmul double %35, 0x3FE45F306DC9C883\l  %547 = tail call double @llvm.rint.f64(double %546)\l  %548 = tail call double @llvm.fma.f64(double %547, double\l... 0xBFF921FB54442D18, double %35)\l  %549 = tail call double @llvm.fma.f64(double %547, double\l... 0xBC91A62633145C00, double %548)\l  %550 = fmul double %547, 0x3C91A62633145C00\l  %551 = fneg double %550\l  %552 = tail call double @llvm.fma.f64(double %547, double\l... 0x3C91A62633145C00, double %551)\l  %553 = fsub double %548, %550\l  %554 = fsub double %548, %553\l  %555 = fsub double %554, %550\l  %556 = fsub double %553, %549\l  %557 = fadd double %556, %555\l  %558 = fsub double %557, %552\l  %559 = tail call double @llvm.fma.f64(double %547, double\l... 0xB97B839A252049C0, double %558)\l  %560 = fadd double %549, %559\l  %561 = fsub double %560, %549\l  %562 = fsub double %559, %561\l  %563 = fptosi double %547 to i32\l  br label %640\l}"];
	Node0x5e22e50 -> Node0x5e23c60;
	Node0x5e22ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%564:\l564:                                              \l  %565 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 0)\l  %566 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 1)\l  %567 = tail call double @llvm.amdgcn.trig.preop.f64(double %35, i32 2)\l  %568 = fcmp oge double %35, 0x7B00000000000000\l  %569 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 -128)\l  %570 = select i1 %568, double %569, double %35\l  %571 = fmul double %567, %570\l  %572 = fneg double %571\l  %573 = tail call double @llvm.fma.f64(double %567, double %570, double %572)\l  %574 = fmul double %566, %570\l  %575 = fneg double %574\l  %576 = tail call double @llvm.fma.f64(double %566, double %570, double %575)\l  %577 = fmul double %565, %570\l  %578 = fneg double %577\l  %579 = tail call double @llvm.fma.f64(double %565, double %570, double %578)\l  %580 = fadd double %574, %579\l  %581 = fsub double %580, %574\l  %582 = fsub double %580, %581\l  %583 = fsub double %579, %581\l  %584 = fsub double %574, %582\l  %585 = fadd double %583, %584\l  %586 = fadd double %571, %576\l  %587 = fsub double %586, %571\l  %588 = fsub double %586, %587\l  %589 = fsub double %576, %587\l  %590 = fsub double %571, %588\l  %591 = fadd double %589, %590\l  %592 = fadd double %586, %585\l  %593 = fsub double %592, %586\l  %594 = fsub double %592, %593\l  %595 = fsub double %585, %593\l  %596 = fsub double %586, %594\l  %597 = fadd double %595, %596\l  %598 = fadd double %591, %597\l  %599 = fadd double %573, %598\l  %600 = fadd double %577, %580\l  %601 = fsub double %600, %577\l  %602 = fsub double %580, %601\l  %603 = fadd double %602, %592\l  %604 = fsub double %603, %602\l  %605 = fsub double %592, %604\l  %606 = fadd double %605, %599\l  %607 = tail call double @llvm.amdgcn.ldexp.f64(double %600, i32 -2)\l  %608 = tail call double @llvm.amdgcn.fract.f64(double %607)\l  %609 = tail call i1 @llvm.amdgcn.class.f64(double %607, i32 516)\l  %610 = select i1 %609, double 0.000000e+00, double %608\l  %611 = tail call double @llvm.amdgcn.ldexp.f64(double %610, i32 2)\l  %612 = fadd double %611, %603\l  %613 = fcmp olt double %612, 0.000000e+00\l  %614 = select i1 %613, double 4.000000e+00, double 0.000000e+00\l  %615 = fadd double %611, %614\l  %616 = fadd double %603, %615\l  %617 = fptosi double %616 to i32\l  %618 = sitofp i32 %617 to double\l  %619 = fsub double %615, %618\l  %620 = fadd double %603, %619\l  %621 = fsub double %620, %619\l  %622 = fsub double %603, %621\l  %623 = fadd double %606, %622\l  %624 = fcmp oge double %620, 5.000000e-01\l  %625 = zext i1 %624 to i32\l  %626 = add nsw i32 %625, %617\l  %627 = select i1 %624, double 1.000000e+00, double 0.000000e+00\l  %628 = fsub double %620, %627\l  %629 = fadd double %628, %623\l  %630 = fsub double %629, %628\l  %631 = fsub double %623, %630\l  %632 = fmul double %629, 0x3FF921FB54442D18\l  %633 = fneg double %632\l  %634 = tail call double @llvm.fma.f64(double %629, double\l... 0x3FF921FB54442D18, double %633)\l  %635 = tail call double @llvm.fma.f64(double %629, double\l... 0x3C91A62633145C07, double %634)\l  %636 = tail call double @llvm.fma.f64(double %631, double\l... 0x3FF921FB54442D18, double %635)\l  %637 = fadd double %632, %636\l  %638 = fsub double %637, %632\l  %639 = fsub double %636, %638\l  br label %640\l}"];
	Node0x5e22ea0 -> Node0x5e23c60;
	Node0x5e23c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%640:\l640:                                              \l  %641 = phi double [ %562, %545 ], [ %639, %564 ]\l  %642 = phi double [ %560, %545 ], [ %637, %564 ]\l  %643 = phi i32 [ %563, %545 ], [ %626, %564 ]\l  %644 = and i32 %643, 3\l  %645 = fcmp olt double %642, %521\l  %646 = sext i1 %645 to i32\l  %647 = add nsw i32 %644, %646\l  %648 = select i1 %645, i32 -2147483648, i32 0\l  %649 = xor i32 %648, -1075240453\l  %650 = insertelement \<2 x i32\> \<i32 1413754136, i32 poison\>, i32 %649, i64 1\l  %651 = bitcast \<2 x i32\> %650 to double\l  %652 = xor i32 %648, -1132354010\l  %653 = insertelement \<2 x i32\> \<i32 856972295, i32 poison\>, i32 %652, i64 1\l  %654 = bitcast \<2 x i32\> %653 to double\l  %655 = fsub double %651, %521\l  %656 = fsub double %651, %655\l  %657 = fsub double %656, %521\l  %658 = fadd double %657, %654\l  %659 = fadd double %655, %658\l  %660 = fsub double %659, %655\l  %661 = fsub double %658, %660\l  %662 = fadd double %642, %659\l  %663 = fsub double %662, %659\l  %664 = fsub double %642, %663\l  %665 = fadd double %641, %661\l  %666 = fadd double %664, %665\l  %667 = fadd double %662, %666\l  %668 = fsub double %667, %662\l  %669 = fsub double %666, %668\l  %670 = fmul double %667, %667\l  %671 = fmul double %670, 5.000000e-01\l  %672 = fsub double 1.000000e+00, %671\l  %673 = fsub double 1.000000e+00, %672\l  %674 = fsub double %673, %671\l  %675 = fmul double %670, %670\l  %676 = tail call double @llvm.fma.f64(double %670, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %677 = tail call double @llvm.fma.f64(double %670, double %676, double\l... 0xBE927E4FA17F65F6)\l  %678 = tail call double @llvm.fma.f64(double %670, double %677, double\l... 0x3EFA01A019F4EC90)\l  %679 = tail call double @llvm.fma.f64(double %670, double %678, double\l... 0xBF56C16C16C16967)\l  %680 = tail call double @llvm.fma.f64(double %670, double %679, double\l... 0x3FA5555555555555)\l  %681 = fneg double %669\l  %682 = tail call double @llvm.fma.f64(double %667, double %681, double %674)\l  %683 = tail call double @llvm.fma.f64(double %675, double %680, double %682)\l  %684 = fadd double %672, %683\l  %685 = tail call double @llvm.fma.f64(double %670, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %686 = tail call double @llvm.fma.f64(double %670, double %685, double\l... 0x3EC71DE3796CDE01)\l  %687 = tail call double @llvm.fma.f64(double %670, double %686, double\l... 0xBF2A01A019E83E5C)\l  %688 = tail call double @llvm.fma.f64(double %670, double %687, double\l... 0x3F81111111110BB3)\l  %689 = fneg double %670\l  %690 = fmul double %667, %689\l  %691 = fmul double %669, 5.000000e-01\l  %692 = tail call double @llvm.fma.f64(double %690, double %688, double %691)\l  %693 = tail call double @llvm.fma.f64(double %670, double %692, double %681)\l  %694 = tail call double @llvm.fma.f64(double %690, double\l... 0xBFC5555555555555, double %693)\l  %695 = fsub double %667, %694\l  %696 = and i32 %647, 1\l  %697 = icmp eq i32 %696, 0\l  %698 = select i1 %697, double %695, double %684\l  %699 = bitcast double %698 to \<2 x i32\>\l  %700 = shl i32 %647, 30\l  %701 = and i32 %700, -2147483648\l  %702 = extractelement \<2 x i32\> %699, i64 1\l  %703 = xor i32 %702, %701\l  %704 = insertelement \<2 x i32\> %699, i32 %703, i64 1\l  %705 = bitcast \<2 x i32\> %704 to double\l  %706 = fmul double %543, %705\l  %707 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 512)\l  %708 = select i1 %707, double 0.000000e+00, double %706\l  br label %709\l}"];
	Node0x5e23c60 -> Node0x5e1fba0;
	Node0x5e1fba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%709:\l709:                                              \l  %710 = phi double [ %508, %460 ], [ %708, %640 ]\l  %711 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %710, double addrspace(1)* %711, align 8, !tbaa !16\l  br label %712\l}"];
	Node0x5e1fba0 -> Node0x5dfe990;
	Node0x5dfe990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%712:\l712:                                              \l  ret void\l}"];
}
