digraph "CFG for 'vec_sinh' function" {
	label="CFG for 'vec_sinh' function";

	Node0x5eeef70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %167\l|{<s0>T|<s1>F}}"];
	Node0x5eeef70:s0 -> Node0x5ef2fb0;
	Node0x5eeef70:s1 -> Node0x5ef3040;
	Node0x5ef2fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fadd double %36, 0xBFE62E42FEFA39EF\l  %38 = fsub double %37, %36\l  %39 = fsub double %38, %37\l  %40 = fadd double %36, %39\l  %41 = fadd double %38, 0x3FE62E42FEFA39EF\l  %42 = fsub double %40, %41\l  %43 = fadd double %42, 0xBC7ABC9E3B39803F\l  %44 = fadd double %37, %43\l  %45 = fsub double %44, %37\l  %46 = fsub double %43, %45\l  %47 = fmul double %44, 0x3FF71547652B82FE\l  %48 = tail call double @llvm.rint.f64(double %47)\l  %49 = tail call double @llvm.fma.f64(double %48, double 0xBFE62E42FEFA3000,\l... double %44)\l  %50 = fadd double %46, %49\l  %51 = fsub double %50, %49\l  %52 = fsub double %46, %51\l  %53 = fmul double %48, 0x3D53DE6AF278E000\l  %54 = fsub double %50, %53\l  %55 = fsub double %50, %54\l  %56 = fsub double %55, %53\l  %57 = fadd double %52, %56\l  %58 = fadd double %54, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %57, %59\l  %61 = fmul double %48, 0x3AC9CC01F97B57A0\l  %62 = fsub double %58, %61\l  %63 = fsub double %58, %62\l  %64 = fsub double %63, %61\l  %65 = fadd double %60, %64\l  %66 = fadd double %62, %65\l  %67 = fsub double %66, %62\l  %68 = fsub double %65, %67\l  %69 = tail call double @llvm.fma.f64(double %66, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %70 = tail call double @llvm.fma.f64(double %66, double %69, double\l... 0x3EC71DEE623FDE64)\l  %71 = tail call double @llvm.fma.f64(double %66, double %70, double\l... 0x3EFA01997C89E6B0)\l  %72 = tail call double @llvm.fma.f64(double %66, double %71, double\l... 0x3F2A01A014761F6E)\l  %73 = tail call double @llvm.fma.f64(double %66, double %72, double\l... 0x3F56C16C1852B7B0)\l  %74 = tail call double @llvm.fma.f64(double %66, double %73, double\l... 0x3F81111111122322)\l  %75 = tail call double @llvm.fma.f64(double %66, double %74, double\l... 0x3FA55555555502A1)\l  %76 = tail call double @llvm.fma.f64(double %66, double %75, double\l... 0x3FC5555555555511)\l  %77 = tail call double @llvm.fma.f64(double %66, double %76, double\l... 0x3FE000000000000B)\l  %78 = fmul double %66, %66\l  %79 = fneg double %78\l  %80 = tail call double @llvm.fma.f64(double %66, double %66, double %79)\l  %81 = fmul double %68, 2.000000e+00\l  %82 = tail call double @llvm.fma.f64(double %66, double %81, double %80)\l  %83 = fadd double %78, %82\l  %84 = fsub double %83, %78\l  %85 = fsub double %82, %84\l  %86 = fmul double %83, %77\l  %87 = fneg double %86\l  %88 = tail call double @llvm.fma.f64(double %83, double %77, double %87)\l  %89 = tail call double @llvm.fma.f64(double %85, double %77, double %88)\l  %90 = fadd double %86, %89\l  %91 = fsub double %90, %86\l  %92 = fsub double %89, %91\l  %93 = fadd double %66, %90\l  %94 = fsub double %93, %66\l  %95 = fsub double %90, %94\l  %96 = fadd double %68, %92\l  %97 = fadd double %96, %95\l  %98 = fadd double %93, %97\l  %99 = fsub double %98, %93\l  %100 = fsub double %97, %99\l  %101 = fadd double %98, 1.000000e+00\l  %102 = fadd double %101, -1.000000e+00\l  %103 = fsub double %98, %102\l  %104 = fadd double %100, %103\l  %105 = fadd double %101, %104\l  %106 = fsub double %105, %101\l  %107 = fsub double %104, %106\l  %108 = fptosi double %48 to i32\l  %109 = tail call double @llvm.amdgcn.ldexp.f64(double %105, i32 %108)\l  %110 = tail call double @llvm.amdgcn.ldexp.f64(double %107, i32 %108)\l  %111 = tail call double @llvm.amdgcn.rcp.f64(double %109)\l  %112 = fneg double %109\l  %113 = tail call double @llvm.fma.f64(double %112, double %111, double\l... 1.000000e+00)\l  %114 = tail call double @llvm.fma.f64(double %113, double %111, double %111)\l  %115 = tail call double @llvm.fma.f64(double %112, double %114, double\l... 1.000000e+00)\l  %116 = tail call double @llvm.fma.f64(double %115, double %114, double %114)\l  %117 = fmul double %109, %116\l  %118 = fneg double %117\l  %119 = tail call double @llvm.fma.f64(double %116, double %109, double %118)\l  %120 = tail call double @llvm.fma.f64(double %116, double %110, double %119)\l  %121 = fadd double %117, %120\l  %122 = fsub double %121, %117\l  %123 = fsub double %120, %122\l  %124 = fsub double 1.000000e+00, %121\l  %125 = fsub double 1.000000e+00, %124\l  %126 = fsub double %125, %121\l  %127 = fsub double %126, %123\l  %128 = fadd double %124, %127\l  %129 = fsub double %128, %124\l  %130 = fsub double %127, %129\l  %131 = fmul double %116, %128\l  %132 = fmul double %109, %131\l  %133 = fneg double %132\l  %134 = tail call double @llvm.fma.f64(double %131, double %109, double %133)\l  %135 = tail call double @llvm.fma.f64(double %131, double %110, double %134)\l  %136 = fadd double %132, %135\l  %137 = fsub double %136, %132\l  %138 = fsub double %135, %137\l  %139 = fsub double %128, %136\l  %140 = fsub double %128, %139\l  %141 = fsub double %140, %136\l  %142 = fadd double %130, %141\l  %143 = fsub double %142, %138\l  %144 = fadd double %139, %143\l  %145 = fmul double %116, %144\l  %146 = fadd double %116, %131\l  %147 = fsub double %146, %116\l  %148 = fsub double %131, %147\l  %149 = fadd double %148, %145\l  %150 = fadd double %146, %149\l  %151 = fsub double %150, %146\l  %152 = fsub double %149, %151\l  %153 = tail call double @llvm.amdgcn.ldexp.f64(double %150, i32 -2)\l  %154 = tail call double @llvm.amdgcn.ldexp.f64(double %152, i32 -2)\l  %155 = fsub double %109, %153\l  %156 = fsub double %109, %155\l  %157 = fsub double %156, %153\l  %158 = fadd double %110, %157\l  %159 = fsub double %158, %154\l  %160 = fadd double %155, %159\l  %161 = fcmp oge double %36, 0x408633CE8FB9F87E\l  %162 = select i1 %161, double 0x7FF0000000000000, double %160\l  %163 = fcmp olt double %36, 0x3E40000000000000\l  %164 = select i1 %163, double %36, double %162\l  %165 = tail call double @llvm.copysign.f64(double %164, double %35)\l  %166 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %165, double addrspace(1)* %166, align 8, !tbaa !16\l  br label %167\l}"];
	Node0x5ef2fb0 -> Node0x5ef3040;
	Node0x5ef3040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%167:\l167:                                              \l  ret void\l}"];
}
