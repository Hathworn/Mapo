digraph "CFG for 'vec_atan' function" {
	label="CFG for 'vec_atan' function";

	Node0x5b140c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5b140c0:s0 -> Node0x5b18100;
	Node0x5b140c0:s1 -> Node0x5b18190;
	Node0x5b18100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fcmp ogt double %36, 1.000000e+00\l  %38 = fdiv double 1.000000e+00, %36\l  %39 = select i1 %37, double %38, double %36\l  %40 = fmul double %39, %39\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3EEBA404B5E68A13,\l... double 0xBF23E260BD3237F4)\l  %42 = tail call double @llvm.fma.f64(double %40, double %41, double\l... 0x3F4B2BB069EFB384)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double\l... 0xBF67952DAF56DE9B)\l  %44 = tail call double @llvm.fma.f64(double %40, double %43, double\l... 0x3F7D6D43A595C56F)\l  %45 = tail call double @llvm.fma.f64(double %40, double %44, double\l... 0xBF8C6EA4A57D9582)\l  %46 = tail call double @llvm.fma.f64(double %40, double %45, double\l... 0x3F967E295F08B19F)\l  %47 = tail call double @llvm.fma.f64(double %40, double %46, double\l... 0xBF9E9AE6FC27006A)\l  %48 = tail call double @llvm.fma.f64(double %40, double %47, double\l... 0x3FA2C15B5711927A)\l  %49 = tail call double @llvm.fma.f64(double %40, double %48, double\l... 0xBFA59976E82D3FF0)\l  %50 = tail call double @llvm.fma.f64(double %40, double %49, double\l... 0x3FA82D5D6EF28734)\l  %51 = tail call double @llvm.fma.f64(double %40, double %50, double\l... 0xBFAAE5CE6A214619)\l  %52 = tail call double @llvm.fma.f64(double %40, double %51, double\l... 0x3FAE1BB48427B883)\l  %53 = tail call double @llvm.fma.f64(double %40, double %52, double\l... 0xBFB110E48B207F05)\l  %54 = tail call double @llvm.fma.f64(double %40, double %53, double\l... 0x3FB3B13657B87036)\l  %55 = tail call double @llvm.fma.f64(double %40, double %54, double\l... 0xBFB745D119378E4F)\l  %56 = tail call double @llvm.fma.f64(double %40, double %55, double\l... 0x3FBC71C717E1913C)\l  %57 = tail call double @llvm.fma.f64(double %40, double %56, double\l... 0xBFC2492492376B7D)\l  %58 = tail call double @llvm.fma.f64(double %40, double %57, double\l... 0x3FC99999999952CC)\l  %59 = tail call double @llvm.fma.f64(double %40, double %58, double\l... 0xBFD5555555555523)\l  %60 = fmul double %40, %59\l  %61 = tail call double @llvm.fma.f64(double %39, double %60, double %39)\l  %62 = fneg double %61\l  %63 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %62)\l  %64 = select i1 %37, double %63, double %61\l  %65 = tail call double @llvm.copysign.f64(double %64, double %35)\l  %66 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %65, double addrspace(1)* %66, align 8, !tbaa !16\l  br label %67\l}"];
	Node0x5b18100 -> Node0x5b18190;
	Node0x5b18190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
