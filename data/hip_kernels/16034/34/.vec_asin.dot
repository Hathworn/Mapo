digraph "CFG for 'vec_asin' function" {
	label="CFG for 'vec_asin' function";

	Node0x6414990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %117\l|{<s0>T|<s1>F}}"];
	Node0x6414990:s0 -> Node0x64189d0;
	Node0x6414990:s1 -> Node0x6418a60;
	Node0x64189d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fcmp oge double %36, 5.000000e-01\l  %38 = tail call double @llvm.fma.f64(double %36, double -5.000000e-01,\l... double 5.000000e-01)\l  %39 = fmul double %35, %35\l  %40 = select i1 %37, double %38, double %39\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3FA059859FEA6A70,\l... double 0xBF90A5A378A05EAF)\l  %42 = tail call double @llvm.fma.f64(double %40, double %41, double\l... 0x3F94052137024D6A)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double\l... 0x3F7AB3A098A70509)\l  %44 = tail call double @llvm.fma.f64(double %40, double %43, double\l... 0x3F88ED60A300C8D2)\l  %45 = tail call double @llvm.fma.f64(double %40, double %44, double\l... 0x3F8C6FA84B77012B)\l  %46 = tail call double @llvm.fma.f64(double %40, double %45, double\l... 0x3F91C6C111DCCB70)\l  %47 = tail call double @llvm.fma.f64(double %40, double %46, double\l... 0x3F96E89F0A0ADACF)\l  %48 = tail call double @llvm.fma.f64(double %40, double %47, double\l... 0x3F9F1C72C668963F)\l  %49 = tail call double @llvm.fma.f64(double %40, double %48, double\l... 0x3FA6DB6DB41CE4BD)\l  %50 = tail call double @llvm.fma.f64(double %40, double %49, double\l... 0x3FB333333336FD5B)\l  %51 = tail call double @llvm.fma.f64(double %40, double %50, double\l... 0x3FC5555555555380)\l  %52 = fmul double %40, %51\l  %53 = tail call double @llvm.fma.f64(double %36, double %52, double %36)\l  br i1 %37, label %54, label %113\l|{<s0>T|<s1>F}}"];
	Node0x64189d0:s0 -> Node0x641b250;
	Node0x64189d0:s1 -> Node0x641b2e0;
	Node0x641b250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%54:\l54:                                               \l  %55 = tail call double @llvm.amdgcn.rsq.f64(double %40)\l  %56 = fmul double %40, %55\l  %57 = fmul double %55, 5.000000e-01\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %58, double %56, double\l... 5.000000e-01)\l  %60 = tail call double @llvm.fma.f64(double %57, double %59, double %57)\l  %61 = tail call double @llvm.fma.f64(double %56, double %59, double %56)\l  %62 = fneg double %61\l  %63 = tail call double @llvm.fma.f64(double %62, double %61, double %40)\l  %64 = tail call double @llvm.fma.f64(double %63, double %60, double %61)\l  %65 = fcmp oeq double %40, 0.000000e+00\l  %66 = select i1 %65, double %40, double %64\l  %67 = fmul double %66, %66\l  %68 = fneg double %67\l  %69 = tail call double @llvm.fma.f64(double %66, double %66, double %68)\l  %70 = fsub double %40, %67\l  %71 = fsub double %40, %70\l  %72 = fsub double %71, %67\l  %73 = fsub double %72, %69\l  %74 = fadd double %70, %73\l  %75 = fmul double %66, 2.000000e+00\l  %76 = tail call double @llvm.amdgcn.rcp.f64(double %75)\l  %77 = fneg double %75\l  %78 = tail call double @llvm.fma.f64(double %77, double %76, double\l... 1.000000e+00)\l  %79 = tail call double @llvm.fma.f64(double %78, double %76, double %76)\l  %80 = tail call double @llvm.fma.f64(double %77, double %79, double\l... 1.000000e+00)\l  %81 = tail call double @llvm.fma.f64(double %80, double %79, double %79)\l  %82 = fmul double %74, %81\l  %83 = tail call double @llvm.fma.f64(double %77, double %82, double %74)\l  %84 = tail call double @llvm.fma.f64(double %83, double %81, double %82)\l  %85 = select i1 %65, double 0.000000e+00, double %84\l  %86 = fadd double %66, %85\l  %87 = fsub double %86, %66\l  %88 = fsub double %85, %87\l  %89 = fmul double %52, %86\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %86, double %52, double %90)\l  %92 = tail call double @llvm.fma.f64(double %88, double %52, double %91)\l  %93 = fadd double %89, %92\l  %94 = fsub double %93, %89\l  %95 = fsub double %92, %94\l  %96 = fadd double %86, %93\l  %97 = fsub double %96, %86\l  %98 = fsub double %93, %97\l  %99 = fadd double %88, %95\l  %100 = fadd double %99, %98\l  %101 = fadd double %96, %100\l  %102 = fsub double %101, %96\l  %103 = fsub double %100, %102\l  %104 = fsub double 0x3FE921FB54442D18, %101\l  %105 = fsub double 0x3FE921FB54442D18, %104\l  %106 = fsub double %105, %101\l  %107 = fadd double %106, 0x3C81A62633145C07\l  %108 = fsub double %107, %103\l  %109 = fadd double %104, %108\l  %110 = fadd double %109, %109\l  %111 = fcmp oeq double %36, 1.000000e+00\l  %112 = select i1 %111, double 0x3FF921FB54442D18, double %110\l  br label %113\l}"];
	Node0x641b250 -> Node0x641b2e0;
	Node0x641b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%113:\l113:                                              \l  %114 = phi double [ %112, %54 ], [ %53, %32 ]\l  %115 = tail call double @llvm.copysign.f64(double %114, double %35)\l  %116 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %115, double addrspace(1)* %116, align 8, !tbaa !16\l  br label %117\l}"];
	Node0x641b2e0 -> Node0x6418a60;
	Node0x6418a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  ret void\l}"];
}
