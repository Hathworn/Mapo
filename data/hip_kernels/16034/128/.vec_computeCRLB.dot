digraph "CFG for 'vec_computeCRLB' function" {
	label="CFG for 'vec_computeCRLB' function";

	Node0x50d9e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = mul nsw i32 %1, %1\l  %7 = sdiv i32 %0, %6\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = udiv i32 %17, %14\l  %27 = mul i32 %26, %14\l  %28 = icmp ugt i32 %17, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %25\l  %32 = add i32 %31, %9\l  %33 = mul i32 %32, %14\l  %34 = add i32 %33, %8\l  %35 = icmp slt i32 %34, %0\l  br i1 %35, label %36, label %88\l|{<s0>T|<s1>F}}"];
	Node0x50d9e20:s0 -> Node0x50dbe20;
	Node0x50d9e20:s1 -> Node0x50de120;
	Node0x50dbe20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%36:\l36:                                               \l  %37 = freeze i32 %34\l  %38 = freeze i32 %7\l  %39 = sdiv i32 %37, %38\l  %40 = mul i32 %39, %38\l  %41 = sub i32 %37, %40\l  %42 = freeze i32 %1\l  %43 = sdiv i32 %39, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %39, %44\l  %46 = shl nsw i32 %43, 1\l  %47 = fmul contract double %4, 2.000000e+00\l  %48 = shl nsw i32 %45, 1\l  %49 = sext i32 %41 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %3, i64 %49\l  %51 = load double, double addrspace(1)* %50, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %52 = fcmp contract ogt double %51, 0.000000e+00\l  br i1 %52, label %53, label %84\l|{<s0>T|<s1>F}}"];
	Node0x50dbe20:s0 -> Node0x50df6e0;
	Node0x50dbe20:s1 -> Node0x50df770;
	Node0x50df6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%53:\l53:                                               \l  %54 = add nsw i32 %48, 2\l  %55 = mul nsw i32 %54, %7\l  %56 = add nsw i32 %55, %41\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %3, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %60 = add nuw nsw i32 %48, 1\l  %61 = mul nsw i32 %60, %7\l  %62 = add nsw i32 %61, %41\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %3, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %66 = fsub contract double %59, %65\l  %67 = fdiv contract double %66, %47\l  %68 = add nsw i32 %46, 2\l  %69 = mul nsw i32 %68, %7\l  %70 = add nsw i32 %69, %41\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds double, double addrspace(1)* %3, i64 %71\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %74 = add nuw nsw i32 %46, 1\l  %75 = mul nsw i32 %74, %7\l  %76 = add nsw i32 %75, %41\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %3, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %80 = fsub contract double %73, %79\l  %81 = fdiv contract double %80, %47\l  %82 = fmul contract double %67, %81\l  %83 = fdiv contract double %82, %51\l  br label %84\l}"];
	Node0x50df6e0 -> Node0x50df770;
	Node0x50df770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%84:\l84:                                               \l  %85 = phi double [ %83, %53 ], [ 1.000000e+08, %36 ]\l  %86 = sext i32 %34 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %2, i64 %86\l  store double %85, double addrspace(1)* %87, align 8, !tbaa !16\l  br label %88\l}"];
	Node0x50df770 -> Node0x50de120;
	Node0x50de120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
