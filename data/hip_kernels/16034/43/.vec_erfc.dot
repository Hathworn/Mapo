digraph "CFG for 'vec_erfc' function" {
	label="CFG for 'vec_erfc' function";

	Node0x4a7ef10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %120\l|{<s0>T|<s1>F}}"];
	Node0x4a7ef10:s0 -> Node0x4a82f50;
	Node0x4a7ef10:s1 -> Node0x4a82fe0;
	Node0x4a82f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fneg double %35\l  %38 = fmul double %35, %37\l  %39 = fneg double %38\l  %40 = tail call double @llvm.fma.f64(double %37, double %35, double %39)\l  %41 = fmul double %38, 0x3FF71547652B82FE\l  %42 = tail call double @llvm.rint.f64(double %41)\l  %43 = fneg double %42\l  %44 = tail call double @llvm.fma.f64(double %43, double 0x3FE62E42FEFA39EF,\l... double %38)\l  %45 = tail call double @llvm.fma.f64(double %43, double 0x3C7ABC9E3B39803F,\l... double %44)\l  %46 = tail call double @llvm.fma.f64(double %45, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %47 = tail call double @llvm.fma.f64(double %45, double %46, double\l... 0x3EC71DEE623FDE64)\l  %48 = tail call double @llvm.fma.f64(double %45, double %47, double\l... 0x3EFA01997C89E6B0)\l  %49 = tail call double @llvm.fma.f64(double %45, double %48, double\l... 0x3F2A01A014761F6E)\l  %50 = tail call double @llvm.fma.f64(double %45, double %49, double\l... 0x3F56C16C1852B7B0)\l  %51 = tail call double @llvm.fma.f64(double %45, double %50, double\l... 0x3F81111111122322)\l  %52 = tail call double @llvm.fma.f64(double %45, double %51, double\l... 0x3FA55555555502A1)\l  %53 = tail call double @llvm.fma.f64(double %45, double %52, double\l... 0x3FC5555555555511)\l  %54 = tail call double @llvm.fma.f64(double %45, double %53, double\l... 0x3FE000000000000B)\l  %55 = tail call double @llvm.fma.f64(double %45, double %54, double\l... 1.000000e+00)\l  %56 = tail call double @llvm.fma.f64(double %45, double %55, double\l... 1.000000e+00)\l  %57 = fptosi double %42 to i32\l  %58 = tail call double @llvm.amdgcn.ldexp.f64(double %56, i32 %57)\l  %59 = fcmp ogt double %38, 1.024000e+03\l  %60 = select i1 %59, double 0x7FF0000000000000, double %58\l  %61 = fcmp olt double %38, -1.075000e+03\l  %62 = select i1 %61, double 0.000000e+00, double %60\l  %63 = tail call double @llvm.fma.f64(double %62, double %40, double %62)\l  %64 = fadd double %36, -4.000000e+00\l  %65 = fadd double %36, 4.000000e+00\l  %66 = tail call double @llvm.amdgcn.rcp.f64(double %65)\l  %67 = fneg double %65\l  %68 = tail call double @llvm.fma.f64(double %67, double %66, double\l... 1.000000e+00)\l  %69 = tail call double @llvm.fma.f64(double %68, double %66, double %66)\l  %70 = tail call double @llvm.fma.f64(double %67, double %69, double\l... 1.000000e+00)\l  %71 = tail call double @llvm.fma.f64(double %70, double %69, double %69)\l  %72 = fmul double %64, %71\l  %73 = fneg double %72\l  %74 = fadd double %72, 1.000000e+00\l  %75 = tail call double @llvm.fma.f64(double %74, double -4.000000e+00,\l... double %36)\l  %76 = tail call double @llvm.fma.f64(double %73, double %36, double %75)\l  %77 = tail call double @llvm.fma.f64(double %71, double %76, double %72)\l  %78 = tail call double @llvm.fma.f64(double %77, double 0xBE41F39D54DF3C0E,\l... double 0xBE41166337CFA789)\l  %79 = tail call double @llvm.fma.f64(double %77, double %78, double\l... 0x3E7B45F1D9802B82)\l  %80 = tail call double @llvm.fma.f64(double %77, double %79, double\l... 0x3E6D90488A03DCDB)\l  %81 = tail call double @llvm.fma.f64(double %77, double %80, double\l... 0xBEAB87B02EBA62D8)\l  %82 = tail call double @llvm.fma.f64(double %77, double %81, double\l... 0x3E95104BA56E15F1)\l  %83 = tail call double @llvm.fma.f64(double %77, double %82, double\l... 0x3ED7F29F71C907DE)\l  %84 = tail call double @llvm.fma.f64(double %77, double %83, double\l... 0xBEE78F5C2CD770FB)\l  %85 = tail call double @llvm.fma.f64(double %77, double %84, double\l... 0xBEF995FB76D0A51A)\l  %86 = tail call double @llvm.fma.f64(double %77, double %85, double\l... 0x3F23BE2EC022D0ED)\l  %87 = tail call double @llvm.fma.f64(double %77, double %86, double\l... 0xBF2A1DEB2FDBF62E)\l  %88 = tail call double @llvm.fma.f64(double %77, double %87, double\l... 0xBF48D4AC3689FC43)\l  %89 = tail call double @llvm.fma.f64(double %77, double %88, double\l... 0x3F749C67192D909B)\l  %90 = tail call double @llvm.fma.f64(double %77, double %89, double\l... 0xBF909623852FF070)\l  %91 = tail call double @llvm.fma.f64(double %77, double %90, double\l... 0x3FA3079EDFADEA8F)\l  %92 = tail call double @llvm.fma.f64(double %77, double %91, double\l... 0xBFB0FB06DFF65910)\l  %93 = tail call double @llvm.fma.f64(double %77, double %92, double\l... 0x3FB7FEE004DE8F32)\l  %94 = tail call double @llvm.fma.f64(double %77, double %93, double\l... 0xBFB9DDB23C3DBEB3)\l  %95 = tail call double @llvm.fma.f64(double %77, double %94, double\l... 0x3FB16ECEFCFA6930)\l  %96 = tail call double @llvm.fma.f64(double %77, double %95, double\l... 0x3F8F7F5DF66FB8A3)\l  %97 = tail call double @llvm.fma.f64(double %77, double %96, double\l... 0xBFC1DF1AD154A2A8)\l  %98 = tail call double @llvm.fma.f64(double %77, double %97, double\l... 0x3FCDD2C8B74FEBF8)\l  %99 = fadd double %36, %36\l  %100 = fadd double %99, 1.000000e+00\l  %101 = tail call double @llvm.amdgcn.rcp.f64(double %100)\l  %102 = fneg double %100\l  %103 = tail call double @llvm.fma.f64(double %102, double %101, double\l... 1.000000e+00)\l  %104 = tail call double @llvm.fma.f64(double %103, double %101, double %101)\l  %105 = tail call double @llvm.fma.f64(double %102, double %104, double\l... 1.000000e+00)\l  %106 = tail call double @llvm.fma.f64(double %105, double %104, double %104)\l  %107 = tail call double @llvm.fma.f64(double %98, double %106, double %106)\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %108, double %99, double\l... 1.000000e+00)\l  %110 = fsub double %98, %107\l  %111 = fadd double %109, %110\l  %112 = tail call double @llvm.fma.f64(double %106, double %111, double %107)\l  %113 = fmul double %63, %112\l  %114 = fcmp ogt double %36, 0x403B39DC41E48BFC\l  %115 = select i1 %114, double 0.000000e+00, double %113\l  %116 = fsub double 2.000000e+00, %115\l  %117 = fcmp olt double %35, 0.000000e+00\l  %118 = select i1 %117, double %116, double %115\l  %119 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %118, double addrspace(1)* %119, align 8, !tbaa !16\l  br label %120\l}"];
	Node0x4a82f50 -> Node0x4a82fe0;
	Node0x4a82fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%120:\l120:                                              \l  ret void\l}"];
}
