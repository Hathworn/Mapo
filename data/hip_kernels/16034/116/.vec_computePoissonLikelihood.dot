digraph "CFG for 'vec_computePoissonLikelihood' function" {
	label="CFG for 'vec_computePoissonLikelihood' function";

	Node0x4bacaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = udiv i32 %14, %11\l  %24 = mul i32 %23, %11\l  %25 = icmp ugt i32 %14, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = add i32 %28, %6\l  %30 = mul i32 %29, %11\l  %31 = add i32 %30, %5\l  %32 = icmp slt i32 %31, %0\l  br i1 %32, label %33, label %130\l|{<s0>T|<s1>F}}"];
	Node0x4bacaf0:s0 -> Node0x4baf500;
	Node0x4bacaf0:s1 -> Node0x4baf590;
	Node0x4baf500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %3, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = fcmp contract ogt double %36, 0.000000e+00\l  br i1 %37, label %38, label %127\l|{<s0>T|<s1>F}}"];
	Node0x4baf500:s0 -> Node0x4bb1be0;
	Node0x4baf500:s1 -> Node0x4bb1c70;
	Node0x4bb1be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = tail call double @llvm.amdgcn.frexp.mant.f64(double %36)\l  %42 = fcmp olt double %41, 0x3FE5555555555555\l  %43 = zext i1 %42 to i32\l  %44 = tail call double @llvm.amdgcn.ldexp.f64(double %41, i32 %43)\l  %45 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %36)\l  %46 = sub nsw i32 %45, %43\l  %47 = fadd double %44, -1.000000e+00\l  %48 = fadd double %44, 1.000000e+00\l  %49 = fadd double %48, -1.000000e+00\l  %50 = fsub double %44, %49\l  %51 = tail call double @llvm.amdgcn.rcp.f64(double %48)\l  %52 = fneg double %48\l  %53 = tail call double @llvm.fma.f64(double %52, double %51, double\l... 1.000000e+00)\l  %54 = tail call double @llvm.fma.f64(double %53, double %51, double %51)\l  %55 = tail call double @llvm.fma.f64(double %52, double %54, double\l... 1.000000e+00)\l  %56 = tail call double @llvm.fma.f64(double %55, double %54, double %54)\l  %57 = fmul double %47, %56\l  %58 = fmul double %48, %57\l  %59 = fneg double %58\l  %60 = tail call double @llvm.fma.f64(double %57, double %48, double %59)\l  %61 = tail call double @llvm.fma.f64(double %57, double %50, double %60)\l  %62 = fadd double %58, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %61, %63\l  %65 = fsub double %47, %62\l  %66 = fsub double %47, %65\l  %67 = fsub double %66, %62\l  %68 = fsub double %67, %64\l  %69 = fadd double %65, %68\l  %70 = fmul double %56, %69\l  %71 = fadd double %57, %70\l  %72 = fsub double %71, %57\l  %73 = fsub double %70, %72\l  %74 = fmul double %71, %71\l  %75 = tail call double @llvm.fma.f64(double %74, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %76 = tail call double @llvm.fma.f64(double %74, double %75, double\l... 0x3FC7474DD7F4DF2E)\l  %77 = tail call double @llvm.fma.f64(double %74, double %76, double\l... 0x3FCC71C016291751)\l  %78 = tail call double @llvm.fma.f64(double %74, double %77, double\l... 0x3FD249249B27ACF1)\l  %79 = tail call double @llvm.fma.f64(double %74, double %78, double\l... 0x3FD99999998EF7B6)\l  %80 = tail call double @llvm.fma.f64(double %74, double %79, double\l... 0x3FE5555555555780)\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %71, i32 1)\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %73, i32 1)\l  %83 = fmul double %71, %74\l  %84 = fmul double %83, %80\l  %85 = fadd double %81, %84\l  %86 = fsub double %85, %81\l  %87 = fsub double %84, %86\l  %88 = fadd double %82, %87\l  %89 = fadd double %85, %88\l  %90 = fsub double %89, %85\l  %91 = fsub double %88, %90\l  %92 = sitofp i32 %46 to double\l  %93 = fmul double %92, 0x3FE62E42FEFA39EF\l  %94 = fneg double %93\l  %95 = tail call double @llvm.fma.f64(double %92, double 0x3FE62E42FEFA39EF,\l... double %94)\l  %96 = tail call double @llvm.fma.f64(double %92, double 0x3C7ABC9E3B39803F,\l... double %95)\l  %97 = fadd double %93, %96\l  %98 = fsub double %97, %93\l  %99 = fsub double %96, %98\l  %100 = fadd double %97, %89\l  %101 = fsub double %100, %97\l  %102 = fsub double %100, %101\l  %103 = fsub double %97, %102\l  %104 = fsub double %89, %101\l  %105 = fadd double %104, %103\l  %106 = fadd double %99, %91\l  %107 = fsub double %106, %99\l  %108 = fsub double %106, %107\l  %109 = fsub double %99, %108\l  %110 = fsub double %91, %107\l  %111 = fadd double %110, %109\l  %112 = fadd double %106, %105\l  %113 = fadd double %100, %112\l  %114 = fsub double %113, %100\l  %115 = fsub double %112, %114\l  %116 = fadd double %111, %115\l  %117 = fadd double %113, %116\l  %118 = tail call double @llvm.fabs.f64(double %36) #3\l  %119 = fcmp oeq double %118, 0x7FF0000000000000\l  %120 = select i1 %119, double %36, double %117\l  %121 = fcmp olt double %36, 0.000000e+00\l  %122 = select i1 %121, double 0x7FF8000000000000, double %120\l  %123 = fcmp oeq double %36, 0.000000e+00\l  %124 = select i1 %123, double 0xFFF0000000000000, double %122\l  %125 = fmul contract double %124, %40\l  %126 = fsub contract double %36, %125\l  br label %127\l}"];
	Node0x4bb1be0 -> Node0x4bb1c70;
	Node0x4bb1c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%127:\l127:                                              \l  %128 = phi double [ %126, %38 ], [ 1.000000e+07, %33 ]\l  %129 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  store double %128, double addrspace(1)* %129, align 8, !tbaa !16\l  br label %130\l}"];
	Node0x4bb1c70 -> Node0x4baf590;
	Node0x4baf590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  ret void\l}"];
}
