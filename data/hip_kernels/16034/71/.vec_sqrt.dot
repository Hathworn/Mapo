digraph "CFG for 'vec_sqrt' function" {
	label="CFG for 'vec_sqrt' function";

	Node0x5590bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5590bb0:s0 -> Node0x5594bf0;
	Node0x5590bb0:s1 -> Node0x5594c80;
	Node0x5594bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fcmp olt double %35, 0x1000000000000000\l  %37 = select i1 %36, double 0x4FF0000000000000, double 1.000000e+00\l  %38 = fmul double %35, %37\l  %39 = tail call double @llvm.amdgcn.rsq.f64(double %38)\l  %40 = fmul double %38, %39\l  %41 = fmul double %39, 5.000000e-01\l  %42 = fneg double %41\l  %43 = tail call double @llvm.fma.f64(double %42, double %40, double\l... 5.000000e-01)\l  %44 = tail call double @llvm.fma.f64(double %41, double %43, double %41)\l  %45 = tail call double @llvm.fma.f64(double %40, double %43, double %40)\l  %46 = fneg double %45\l  %47 = tail call double @llvm.fma.f64(double %46, double %45, double %38)\l  %48 = tail call double @llvm.fma.f64(double %47, double %44, double %45)\l  %49 = fneg double %48\l  %50 = tail call double @llvm.fma.f64(double %49, double %48, double %38)\l  %51 = tail call double @llvm.fma.f64(double %50, double %44, double %48)\l  %52 = select i1 %36, double 0x37F0000000000000, double 1.000000e+00\l  %53 = fmul double %52, %51\l  %54 = fcmp oeq double %38, 0.000000e+00\l  %55 = fcmp oeq double %38, 0x7FF0000000000000\l  %56 = or i1 %54, %55\l  %57 = select i1 %56, double %38, double %53\l  %58 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %57, double addrspace(1)* %58, align 8, !tbaa !16\l  br label %59\l}"];
	Node0x5594bf0 -> Node0x5594c80;
	Node0x5594c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
