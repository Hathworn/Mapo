digraph "CFG for 'vec_expm1' function" {
	label="CFG for 'vec_expm1' function";

	Node0x518cf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %66\l|{<s0>T|<s1>F}}"];
	Node0x518cf50:s0 -> Node0x5190f90;
	Node0x518cf50:s1 -> Node0x5191020;
	Node0x5190f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fmul double %35, 0x3FF71547652B82FE\l  %37 = tail call double @llvm.rint.f64(double %36)\l  %38 = fneg double %37\l  %39 = tail call double @llvm.fma.f64(double %38, double 0x3FE62E42FEFA39EF,\l... double %35)\l  %40 = tail call double @llvm.fma.f64(double %38, double 0x3C7ABC9E3B39803F,\l... double %39)\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3E21F32EA9D67F34,\l... double 0x3E5AF4EB2A1B768B)\l  %42 = tail call double @llvm.fma.f64(double %40, double %41, double\l... 0x3E927E500E0AC05B)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double\l... 0x3EC71DE01B889C29)\l  %44 = tail call double @llvm.fma.f64(double %40, double %43, double\l... 0x3EFA01A0197BCFD8)\l  %45 = tail call double @llvm.fma.f64(double %40, double %44, double\l... 0x3F2A01A01AC1A723)\l  %46 = tail call double @llvm.fma.f64(double %40, double %45, double\l... 0x3F56C16C16C18931)\l  %47 = tail call double @llvm.fma.f64(double %40, double %46, double\l... 0x3F81111111110056)\l  %48 = tail call double @llvm.fma.f64(double %40, double %47, double\l... 0x3FA5555555555552)\l  %49 = tail call double @llvm.fma.f64(double %40, double %48, double\l... 0x3FC5555555555557)\l  %50 = tail call double @llvm.fma.f64(double %40, double %49, double\l... 5.000000e-01)\l  %51 = fmul double %40, %50\l  %52 = tail call double @llvm.fma.f64(double %40, double %51, double %40)\l  %53 = fcmp oeq double %37, 1.024000e+03\l  %54 = fptosi double %37 to i32\l  %55 = select i1 %53, i32 1023, i32 %54\l  %56 = tail call double @llvm.amdgcn.ldexp.f64(double 1.000000e+00, i32 %55)\l  %57 = fadd double %56, -1.000000e+00\l  %58 = tail call double @llvm.fma.f64(double %56, double %52, double %57)\l  %59 = fmul double %58, 2.000000e+00\l  %60 = select i1 %53, double %59, double %58\l  %61 = fcmp ogt double %35, 0x40862E42FEFA39EF\l  %62 = select i1 %61, double 0x7FF0000000000000, double %60\l  %63 = fcmp olt double %35, -3.700000e+01\l  %64 = select i1 %63, double -1.000000e+00, double %62\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %64, double addrspace(1)* %65, align 8, !tbaa !16\l  br label %66\l}"];
	Node0x5190f90 -> Node0x5191020;
	Node0x5191020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  ret void\l}"];
}
