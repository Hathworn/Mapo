digraph "CFG for 'vec_computeLocalMaxima' function" {
	label="CFG for 'vec_computeLocalMaxima' function";

	Node0x4acacd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = udiv i32 %16, %13\l  %26 = mul i32 %25, %13\l  %27 = icmp ugt i32 %16, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %24\l  %31 = add i32 %30, %8\l  %32 = mul i32 %31, %13\l  %33 = add i32 %32, %7\l  %34 = icmp slt i32 %33, %0\l  br i1 %34, label %35, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4acacd0:s0 -> Node0x4accd50;
	Node0x4acacd0:s1 -> Node0x4acee60;
	Node0x4accd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%35:\l35:                                               \l  %36 = sext i32 %33 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  store i32 0, i32 addrspace(1)* %37, align 4, !tbaa !16\l  %38 = mul nsw i32 %2, %2\l  %39 = srem i32 %33, %38\l  %40 = freeze i32 %39\l  %41 = freeze i32 %2\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = tail call i32 @llvm.smax.i32(i32 %4, i32 %5)\l  %46 = icmp sge i32 %42, %45\l  %47 = icmp sge i32 %44, %45\l  %48 = and i1 %46, %47\l  %49 = add nsw i32 %42, %45\l  %50 = icmp slt i32 %49, %2\l  %51 = select i1 %48, i1 %50, i1 false\l  %52 = add nsw i32 %44, %45\l  %53 = icmp slt i32 %52, %2\l  %54 = select i1 %51, i1 %53, i1 false\l  br i1 %54, label %55, label %66\l|{<s0>T|<s1>F}}"];
	Node0x4accd50:s0 -> Node0x4acfd50;
	Node0x4accd50:s1 -> Node0x4acee60;
	Node0x4acfd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%55:\l55:                                               \l  %56 = icmp slt i32 %4, 0\l  br i1 %56, label %65, label %57\l|{<s0>T|<s1>F}}"];
	Node0x4acfd50:s0 -> Node0x4acff20;
	Node0x4acfd50:s1 -> Node0x4acff70;
	Node0x4acff70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%57:\l57:                                               \l  %58 = getelementptr inbounds float, float addrspace(1)* %3, i64 %36\l  %59 = icmp eq i32 %4, 2147483647\l  %60 = load float, float addrspace(1)* %58, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %61 = load float, float addrspace(1)* %3, align 4, !tbaa !20,\l... !amdgpu.noclobber !6\l  %62 = fcmp contract olt float %60, %61\l  br label %63\l}"];
	Node0x4acff70 -> Node0x4ad0bb0;
	Node0x4ad0bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  br i1 %62, label %66, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4ad0bb0:s0 -> Node0x4acee60;
	Node0x4ad0bb0:s1 -> Node0x4ad0cb0;
	Node0x4ad0cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%64:\l64:                                               \l  br i1 %59, label %63, label %65, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4ad0cb0:s0 -> Node0x4ad0bb0;
	Node0x4ad0cb0:s1 -> Node0x4acff20;
	Node0x4acff20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%65:\l65:                                               \l  store i32 1, i32 addrspace(1)* %37, align 4, !tbaa !16\l  br label %66\l}"];
	Node0x4acff20 -> Node0x4acee60;
	Node0x4acee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%66:\l66:                                               \l  ret void\l}"];
}
