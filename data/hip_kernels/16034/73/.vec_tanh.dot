digraph "CFG for 'vec_tanh' function" {
	label="CFG for 'vec_tanh' function";

	Node0x58232c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %187\l|{<s0>T|<s1>F}}"];
	Node0x58232c0:s0 -> Node0x5827300;
	Node0x58232c0:s1 -> Node0x5827390;
	Node0x5827300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fmul double %36, 0x3FF71547652B82FE\l  %38 = tail call double @llvm.rint.f64(double %37)\l  %39 = tail call double @llvm.fma.f64(double %38, double 0xBFE62E42FEFA3000,\l... double %36)\l  %40 = fadd double %39, 0.000000e+00\l  %41 = fsub double %39, %40\l  %42 = fadd double %41, 0.000000e+00\l  %43 = fmul double %38, 0x3D53DE6AF278E000\l  %44 = fsub double %40, %43\l  %45 = fsub double %40, %44\l  %46 = fsub double %45, %43\l  %47 = fadd double %42, %46\l  %48 = fadd double %44, %47\l  %49 = fsub double %48, %44\l  %50 = fsub double %47, %49\l  %51 = fmul double %38, 0x3AC9CC01F97B57A0\l  %52 = fsub double %48, %51\l  %53 = fsub double %48, %52\l  %54 = fsub double %53, %51\l  %55 = fadd double %50, %54\l  %56 = fadd double %52, %55\l  %57 = fsub double %56, %52\l  %58 = fsub double %55, %57\l  %59 = tail call double @llvm.fma.f64(double %56, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %60 = tail call double @llvm.fma.f64(double %56, double %59, double\l... 0x3EC71DEE623FDE64)\l  %61 = tail call double @llvm.fma.f64(double %56, double %60, double\l... 0x3EFA01997C89E6B0)\l  %62 = tail call double @llvm.fma.f64(double %56, double %61, double\l... 0x3F2A01A014761F6E)\l  %63 = tail call double @llvm.fma.f64(double %56, double %62, double\l... 0x3F56C16C1852B7B0)\l  %64 = tail call double @llvm.fma.f64(double %56, double %63, double\l... 0x3F81111111122322)\l  %65 = tail call double @llvm.fma.f64(double %56, double %64, double\l... 0x3FA55555555502A1)\l  %66 = tail call double @llvm.fma.f64(double %56, double %65, double\l... 0x3FC5555555555511)\l  %67 = tail call double @llvm.fma.f64(double %56, double %66, double\l... 0x3FE000000000000B)\l  %68 = fmul double %56, %56\l  %69 = fneg double %68\l  %70 = tail call double @llvm.fma.f64(double %56, double %56, double %69)\l  %71 = fmul double %58, 2.000000e+00\l  %72 = tail call double @llvm.fma.f64(double %56, double %71, double %70)\l  %73 = fadd double %68, %72\l  %74 = fsub double %73, %68\l  %75 = fsub double %72, %74\l  %76 = fmul double %73, %67\l  %77 = fneg double %76\l  %78 = tail call double @llvm.fma.f64(double %73, double %67, double %77)\l  %79 = tail call double @llvm.fma.f64(double %75, double %67, double %78)\l  %80 = fadd double %76, %79\l  %81 = fsub double %80, %76\l  %82 = fsub double %79, %81\l  %83 = fadd double %56, %80\l  %84 = fsub double %83, %56\l  %85 = fsub double %80, %84\l  %86 = fadd double %58, %82\l  %87 = fadd double %86, %85\l  %88 = fadd double %83, %87\l  %89 = fsub double %88, %83\l  %90 = fsub double %87, %89\l  %91 = fadd double %88, 1.000000e+00\l  %92 = fadd double %91, -1.000000e+00\l  %93 = fsub double %88, %92\l  %94 = fadd double %90, %93\l  %95 = fadd double %91, %94\l  %96 = fsub double %95, %91\l  %97 = fsub double %94, %96\l  %98 = fptosi double %38 to i32\l  %99 = tail call double @llvm.amdgcn.ldexp.f64(double %95, i32 %98)\l  %100 = tail call double @llvm.amdgcn.ldexp.f64(double %97, i32 %98)\l  %101 = tail call double @llvm.amdgcn.rcp.f64(double %99)\l  %102 = fneg double %99\l  %103 = tail call double @llvm.fma.f64(double %102, double %101, double\l... 1.000000e+00)\l  %104 = tail call double @llvm.fma.f64(double %103, double %101, double %101)\l  %105 = tail call double @llvm.fma.f64(double %102, double %104, double\l... 1.000000e+00)\l  %106 = tail call double @llvm.fma.f64(double %105, double %104, double %104)\l  %107 = fmul double %99, %106\l  %108 = fneg double %107\l  %109 = tail call double @llvm.fma.f64(double %106, double %99, double %108)\l  %110 = tail call double @llvm.fma.f64(double %106, double %100, double %109)\l  %111 = fadd double %107, %110\l  %112 = fsub double %111, %107\l  %113 = fsub double %110, %112\l  %114 = fsub double 1.000000e+00, %111\l  %115 = fsub double 1.000000e+00, %114\l  %116 = fsub double %115, %111\l  %117 = fsub double %116, %113\l  %118 = fadd double %114, %117\l  %119 = fsub double %118, %114\l  %120 = fsub double %117, %119\l  %121 = fmul double %106, %118\l  %122 = fmul double %99, %121\l  %123 = fneg double %122\l  %124 = tail call double @llvm.fma.f64(double %121, double %99, double %123)\l  %125 = tail call double @llvm.fma.f64(double %121, double %100, double %124)\l  %126 = fadd double %122, %125\l  %127 = fsub double %126, %122\l  %128 = fsub double %125, %127\l  %129 = fsub double %118, %126\l  %130 = fsub double %118, %129\l  %131 = fsub double %130, %126\l  %132 = fadd double %120, %131\l  %133 = fsub double %132, %128\l  %134 = fadd double %129, %133\l  %135 = fmul double %106, %134\l  %136 = fadd double %106, %121\l  %137 = fsub double %136, %106\l  %138 = fsub double %121, %137\l  %139 = fadd double %138, %135\l  %140 = fadd double %136, %139\l  %141 = fsub double %140, %136\l  %142 = fsub double %139, %141\l  %143 = fsub double %99, %140\l  %144 = fsub double %99, %143\l  %145 = fsub double %144, %140\l  %146 = fadd double %100, %145\l  %147 = fsub double %146, %142\l  %148 = fadd double %143, %147\l  %149 = fsub double %148, %143\l  %150 = fsub double %147, %149\l  %151 = fadd double %99, %140\l  %152 = fsub double %151, %99\l  %153 = fsub double %140, %152\l  %154 = fadd double %100, %142\l  %155 = fadd double %154, %153\l  %156 = fadd double %151, %155\l  %157 = fsub double %156, %151\l  %158 = fsub double %155, %157\l  %159 = tail call double @llvm.amdgcn.rcp.f64(double %156)\l  %160 = fneg double %156\l  %161 = tail call double @llvm.fma.f64(double %160, double %159, double\l... 1.000000e+00)\l  %162 = tail call double @llvm.fma.f64(double %161, double %159, double %159)\l  %163 = tail call double @llvm.fma.f64(double %160, double %162, double\l... 1.000000e+00)\l  %164 = tail call double @llvm.fma.f64(double %163, double %162, double %162)\l  %165 = fmul double %148, %164\l  %166 = fmul double %156, %165\l  %167 = fneg double %166\l  %168 = tail call double @llvm.fma.f64(double %165, double %156, double %167)\l  %169 = tail call double @llvm.fma.f64(double %165, double %158, double %168)\l  %170 = fadd double %166, %169\l  %171 = fsub double %170, %166\l  %172 = fsub double %169, %171\l  %173 = fsub double %148, %170\l  %174 = fsub double %148, %173\l  %175 = fsub double %174, %170\l  %176 = fsub double %175, %172\l  %177 = fadd double %150, %176\l  %178 = fadd double %173, %177\l  %179 = fmul double %164, %178\l  %180 = fadd double %165, %179\l  %181 = fcmp ogt double %36, 1.906250e+01\l  %182 = select i1 %181, double 1.000000e+00, double %180\l  %183 = fcmp olt double %36, 0x3E40000000000000\l  %184 = select i1 %183, double %36, double %182\l  %185 = tail call double @llvm.copysign.f64(double %184, double %35)\l  %186 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %185, double addrspace(1)* %186, align 8, !tbaa !16\l  br label %187\l}"];
	Node0x5827300 -> Node0x5827390;
	Node0x5827390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%187:\l187:                                              \l  ret void\l}"];
}
