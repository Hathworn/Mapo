digraph "CFG for 'vec_atanh' function" {
	label="CFG for 'vec_atanh' function";

	Node0x4f272a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %186\l|{<s0>T|<s1>F}}"];
	Node0x4f272a0:s0 -> Node0x4f2b2e0;
	Node0x4f272a0:s1 -> Node0x4f2b370;
	Node0x4f2b2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fadd double %36, 1.000000e+00\l  %38 = fadd double %37, -1.000000e+00\l  %39 = fsub double %36, %38\l  %40 = fsub double 1.000000e+00, %36\l  %41 = fsub double 1.000000e+00, %40\l  %42 = fsub double %41, %36\l  %43 = tail call double @llvm.amdgcn.rcp.f64(double %40)\l  %44 = fneg double %40\l  %45 = tail call double @llvm.fma.f64(double %44, double %43, double\l... 1.000000e+00)\l  %46 = tail call double @llvm.fma.f64(double %45, double %43, double %43)\l  %47 = tail call double @llvm.fma.f64(double %44, double %46, double\l... 1.000000e+00)\l  %48 = tail call double @llvm.fma.f64(double %47, double %46, double %46)\l  %49 = fmul double %37, %48\l  %50 = fmul double %40, %49\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %49, double %40, double %51)\l  %53 = tail call double @llvm.fma.f64(double %49, double %42, double %52)\l  %54 = fadd double %50, %53\l  %55 = fsub double %54, %50\l  %56 = fsub double %53, %55\l  %57 = fsub double %37, %54\l  %58 = fsub double %37, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %59, %56\l  %61 = fadd double %39, %60\l  %62 = fadd double %57, %61\l  %63 = fmul double %48, %62\l  %64 = fadd double %49, %63\l  %65 = fsub double %64, %49\l  %66 = fsub double %63, %65\l  %67 = tail call double @llvm.amdgcn.frexp.mant.f64(double %64)\l  %68 = fcmp olt double %67, 0x3FE5555555555555\l  %69 = sext i1 %68 to i32\l  %70 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %64)\l  %71 = add i32 %70, %69\l  %72 = sub nsw i32 0, %71\l  %73 = tail call double @llvm.amdgcn.ldexp.f64(double %64, i32 %72)\l  %74 = tail call double @llvm.amdgcn.ldexp.f64(double %66, i32 %72)\l  %75 = fadd double %73, -1.000000e+00\l  %76 = fadd double %75, 1.000000e+00\l  %77 = fsub double %73, %76\l  %78 = fadd double %74, %77\l  %79 = fadd double %75, %78\l  %80 = fsub double %79, %75\l  %81 = fsub double %78, %80\l  %82 = fadd double %73, 1.000000e+00\l  %83 = fadd double %82, -1.000000e+00\l  %84 = fsub double %73, %83\l  %85 = fadd double %74, %84\l  %86 = fadd double %82, %85\l  %87 = fsub double %86, %82\l  %88 = fsub double %85, %87\l  %89 = tail call double @llvm.amdgcn.rcp.f64(double %86)\l  %90 = fneg double %86\l  %91 = tail call double @llvm.fma.f64(double %90, double %89, double\l... 1.000000e+00)\l  %92 = tail call double @llvm.fma.f64(double %91, double %89, double %89)\l  %93 = tail call double @llvm.fma.f64(double %90, double %92, double\l... 1.000000e+00)\l  %94 = tail call double @llvm.fma.f64(double %93, double %92, double %92)\l  %95 = fmul double %79, %94\l  %96 = fmul double %86, %95\l  %97 = fneg double %96\l  %98 = tail call double @llvm.fma.f64(double %95, double %86, double %97)\l  %99 = tail call double @llvm.fma.f64(double %95, double %88, double %98)\l  %100 = fadd double %96, %99\l  %101 = fsub double %100, %96\l  %102 = fsub double %99, %101\l  %103 = fsub double %79, %100\l  %104 = fsub double %79, %103\l  %105 = fsub double %104, %100\l  %106 = fadd double %81, %105\l  %107 = fsub double %106, %102\l  %108 = fadd double %103, %107\l  %109 = fsub double %108, %103\l  %110 = fsub double %107, %109\l  %111 = fmul double %94, %108\l  %112 = fmul double %86, %111\l  %113 = fneg double %112\l  %114 = tail call double @llvm.fma.f64(double %111, double %86, double %113)\l  %115 = tail call double @llvm.fma.f64(double %111, double %88, double %114)\l  %116 = fadd double %112, %115\l  %117 = fsub double %116, %112\l  %118 = fsub double %115, %117\l  %119 = fsub double %108, %116\l  %120 = fsub double %108, %119\l  %121 = fsub double %120, %116\l  %122 = fadd double %110, %121\l  %123 = fsub double %122, %118\l  %124 = fadd double %119, %123\l  %125 = fmul double %94, %124\l  %126 = fadd double %95, %111\l  %127 = fsub double %126, %95\l  %128 = fsub double %111, %127\l  %129 = fadd double %128, %125\l  %130 = fadd double %126, %129\l  %131 = fsub double %130, %126\l  %132 = fsub double %129, %131\l  %133 = fmul double %130, %130\l  %134 = tail call double @llvm.fma.f64(double %133, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %135 = tail call double @llvm.fma.f64(double %133, double %134, double\l... 0x3FC7474DD7F4DF2E)\l  %136 = tail call double @llvm.fma.f64(double %133, double %135, double\l... 0x3FCC71C016291751)\l  %137 = tail call double @llvm.fma.f64(double %133, double %136, double\l... 0x3FD249249B27ACF1)\l  %138 = tail call double @llvm.fma.f64(double %133, double %137, double\l... 0x3FD99999998EF7B6)\l  %139 = tail call double @llvm.fma.f64(double %133, double %138, double\l... 0x3FE5555555555780)\l  %140 = sitofp i32 %71 to double\l  %141 = fmul double %140, 0x3FE62E42FEFA39EF\l  %142 = fneg double %141\l  %143 = tail call double @llvm.fma.f64(double %140, double\l... 0x3FE62E42FEFA39EF, double %142)\l  %144 = tail call double @llvm.fma.f64(double %140, double\l... 0x3C7ABC9E3B39803F, double %143)\l  %145 = fadd double %141, %144\l  %146 = fsub double %145, %141\l  %147 = fsub double %144, %146\l  %148 = tail call double @llvm.amdgcn.ldexp.f64(double %130, i32 1)\l  %149 = tail call double @llvm.amdgcn.ldexp.f64(double %132, i32 1)\l  %150 = fmul double %130, %133\l  %151 = fmul double %150, %139\l  %152 = fadd double %148, %151\l  %153 = fsub double %152, %148\l  %154 = fsub double %151, %153\l  %155 = fadd double %149, %154\l  %156 = fadd double %152, %155\l  %157 = fsub double %156, %152\l  %158 = fsub double %155, %157\l  %159 = fadd double %145, %156\l  %160 = fsub double %159, %145\l  %161 = fsub double %159, %160\l  %162 = fsub double %145, %161\l  %163 = fsub double %156, %160\l  %164 = fadd double %163, %162\l  %165 = fadd double %147, %158\l  %166 = fsub double %165, %147\l  %167 = fsub double %165, %166\l  %168 = fsub double %147, %167\l  %169 = fsub double %158, %166\l  %170 = fadd double %169, %168\l  %171 = fadd double %165, %164\l  %172 = fadd double %159, %171\l  %173 = fsub double %172, %159\l  %174 = fsub double %171, %173\l  %175 = fadd double %170, %174\l  %176 = fadd double %172, %175\l  %177 = fmul double %176, 5.000000e-01\l  %178 = fcmp olt double %36, 0x3E40000000000000\l  %179 = select i1 %178, double %36, double %177\l  %180 = fcmp ogt double %36, 1.000000e+00\l  %181 = select i1 %180, double 0x7FF8000000000000, double %179\l  %182 = fcmp oeq double %36, 1.000000e+00\l  %183 = select i1 %182, double 0x7FF0000000000000, double %181\l  %184 = tail call double @llvm.copysign.f64(double %183, double %35)\l  %185 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %184, double addrspace(1)* %185, align 8, !tbaa !16\l  br label %186\l}"];
	Node0x4f2b2e0 -> Node0x4f2b370;
	Node0x4f2b370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%186:\l186:                                              \l  ret void\l}"];
}
