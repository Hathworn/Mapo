digraph "CFG for 'vec_computeModelMany2_scmos' function" {
	label="CFG for 'vec_computeModelMany2_scmos' function";

	Node0x56c3a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = udiv i32 %17, %14\l  %27 = mul i32 %26, %14\l  %28 = icmp ugt i32 %17, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %25\l  %32 = add i32 %31, %9\l  %33 = mul i32 %32, %14\l  %34 = add i32 %33, %8\l  %35 = icmp slt i32 %34, %0\l  br i1 %35, label %36, label %57\l|{<s0>T|<s1>F}}"];
	Node0x56c3a90:s0 -> Node0x56c5930;
	Node0x56c3a90:s1 -> Node0x56c7c30;
	Node0x56c5930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = freeze i32 %34\l  %38 = freeze i32 %1\l  %39 = sdiv i32 %37, %38\l  %40 = mul i32 %39, %38\l  %41 = sub i32 %37, %40\l  %42 = sext i32 %34 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %3, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %45 = sext i32 %39 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %4, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %48 = fmul contract double %44, %47\l  %49 = getelementptr inbounds double, double addrspace(1)* %5, i64 %45\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %51 = fadd contract double %48, %50\l  %52 = sext i32 %41 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %6, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %55 = fadd contract double %51, %54\l  %56 = getelementptr inbounds double, double addrspace(1)* %2, i64 %42\l  store double %55, double addrspace(1)* %56, align 8, !tbaa !16\l  br label %57\l}"];
	Node0x56c5930 -> Node0x56c7c30;
	Node0x56c7c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  ret void\l}"];
}
