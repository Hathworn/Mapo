digraph "CFG for 'vec_acosh' function" {
	label="CFG for 'vec_acosh' function";

	Node0x4fe87c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %215\l|{<s0>T|<s1>F}}"];
	Node0x4fe87c0:s0 -> Node0x4fec800;
	Node0x4fe87c0:s1 -> Node0x4fec890;
	Node0x4fec800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = fcmp oge double %35, 0x5FF0000000000000\l  %37 = select i1 %36, double 0x1FF0000000000000, double 1.000000e+00\l  %38 = fmul double %35, %37\l  %39 = fmul double %38, %38\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %38, double %38, double %40)\l  %42 = select i1 %36, double 0x4000000000000, double 1.000000e+00\l  %43 = fsub double %39, %42\l  %44 = fsub double %43, %39\l  %45 = fsub double %43, %44\l  %46 = fsub double %39, %45\l  %47 = fadd double %42, %44\l  %48 = fsub double %46, %47\l  %49 = fadd double %41, %48\l  %50 = fadd double %43, %49\l  %51 = fsub double %50, %43\l  %52 = fsub double %49, %51\l  %53 = tail call double @llvm.amdgcn.rsq.f64(double %50)\l  %54 = fmul double %50, %53\l  %55 = fmul double %53, 5.000000e-01\l  %56 = fneg double %55\l  %57 = tail call double @llvm.fma.f64(double %56, double %54, double\l... 5.000000e-01)\l  %58 = tail call double @llvm.fma.f64(double %55, double %57, double %55)\l  %59 = tail call double @llvm.fma.f64(double %54, double %57, double %54)\l  %60 = fneg double %59\l  %61 = tail call double @llvm.fma.f64(double %60, double %59, double %50)\l  %62 = tail call double @llvm.fma.f64(double %61, double %58, double %59)\l  %63 = fcmp oeq double %50, 0.000000e+00\l  %64 = select i1 %63, double %50, double %62\l  %65 = fmul double %64, %64\l  %66 = fneg double %65\l  %67 = tail call double @llvm.fma.f64(double %64, double %64, double %66)\l  %68 = fsub double %50, %65\l  %69 = fsub double %50, %68\l  %70 = fsub double %69, %65\l  %71 = fadd double %52, %70\l  %72 = fsub double %71, %67\l  %73 = fadd double %68, %72\l  %74 = fmul double %64, 2.000000e+00\l  %75 = tail call double @llvm.amdgcn.rcp.f64(double %74)\l  %76 = fneg double %74\l  %77 = tail call double @llvm.fma.f64(double %76, double %75, double\l... 1.000000e+00)\l  %78 = tail call double @llvm.fma.f64(double %77, double %75, double %75)\l  %79 = tail call double @llvm.fma.f64(double %76, double %78, double\l... 1.000000e+00)\l  %80 = tail call double @llvm.fma.f64(double %79, double %78, double %78)\l  %81 = fmul double %80, %73\l  %82 = tail call double @llvm.fma.f64(double %76, double %81, double %73)\l  %83 = tail call double @llvm.fma.f64(double %82, double %80, double %81)\l  %84 = select i1 %63, double 0.000000e+00, double %83\l  %85 = fadd double %64, %84\l  %86 = fsub double %85, %64\l  %87 = fsub double %84, %86\l  %88 = fadd double %38, %85\l  %89 = fsub double %88, %38\l  %90 = fsub double %88, %89\l  %91 = fsub double %38, %90\l  %92 = fsub double %85, %89\l  %93 = fadd double %92, %91\l  %94 = fadd double %87, %93\l  %95 = fadd double %88, %94\l  %96 = fsub double %95, %88\l  %97 = fsub double %94, %96\l  %98 = select i1 %36, i32 512, i32 0\l  %99 = tail call double @llvm.amdgcn.frexp.mant.f64(double %95)\l  %100 = fcmp olt double %99, 0x3FE5555555555555\l  %101 = sext i1 %100 to i32\l  %102 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %95)\l  %103 = add i32 %102, %101\l  %104 = sub nsw i32 0, %103\l  %105 = tail call double @llvm.amdgcn.ldexp.f64(double %95, i32 %104)\l  %106 = tail call double @llvm.amdgcn.ldexp.f64(double %97, i32 %104)\l  %107 = fadd double %105, -1.000000e+00\l  %108 = fadd double %107, 1.000000e+00\l  %109 = fsub double %105, %108\l  %110 = fadd double %106, %109\l  %111 = fadd double %107, %110\l  %112 = fsub double %111, %107\l  %113 = fsub double %110, %112\l  %114 = fadd double %105, 1.000000e+00\l  %115 = fadd double %114, -1.000000e+00\l  %116 = fsub double %105, %115\l  %117 = fadd double %106, %116\l  %118 = fadd double %114, %117\l  %119 = fsub double %118, %114\l  %120 = fsub double %117, %119\l  %121 = tail call double @llvm.amdgcn.rcp.f64(double %118)\l  %122 = fneg double %118\l  %123 = tail call double @llvm.fma.f64(double %122, double %121, double\l... 1.000000e+00)\l  %124 = tail call double @llvm.fma.f64(double %123, double %121, double %121)\l  %125 = tail call double @llvm.fma.f64(double %122, double %124, double\l... 1.000000e+00)\l  %126 = tail call double @llvm.fma.f64(double %125, double %124, double %124)\l  %127 = fmul double %111, %126\l  %128 = fmul double %118, %127\l  %129 = fneg double %128\l  %130 = tail call double @llvm.fma.f64(double %127, double %118, double %129)\l  %131 = tail call double @llvm.fma.f64(double %127, double %120, double %130)\l  %132 = fadd double %128, %131\l  %133 = fsub double %132, %128\l  %134 = fsub double %131, %133\l  %135 = fsub double %111, %132\l  %136 = fsub double %111, %135\l  %137 = fsub double %136, %132\l  %138 = fadd double %113, %137\l  %139 = fsub double %138, %134\l  %140 = fadd double %135, %139\l  %141 = fsub double %140, %135\l  %142 = fsub double %139, %141\l  %143 = fmul double %126, %140\l  %144 = fmul double %118, %143\l  %145 = fneg double %144\l  %146 = tail call double @llvm.fma.f64(double %143, double %118, double %145)\l  %147 = tail call double @llvm.fma.f64(double %143, double %120, double %146)\l  %148 = fadd double %144, %147\l  %149 = fsub double %148, %144\l  %150 = fsub double %147, %149\l  %151 = fsub double %140, %148\l  %152 = fsub double %140, %151\l  %153 = fsub double %152, %148\l  %154 = fadd double %142, %153\l  %155 = fsub double %154, %150\l  %156 = fadd double %151, %155\l  %157 = fmul double %126, %156\l  %158 = fadd double %127, %143\l  %159 = fsub double %158, %127\l  %160 = fsub double %143, %159\l  %161 = fadd double %160, %157\l  %162 = fadd double %158, %161\l  %163 = fsub double %162, %158\l  %164 = fsub double %161, %163\l  %165 = fmul double %162, %162\l  %166 = tail call double @llvm.fma.f64(double %165, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %167 = tail call double @llvm.fma.f64(double %165, double %166, double\l... 0x3FC7474DD7F4DF2E)\l  %168 = tail call double @llvm.fma.f64(double %165, double %167, double\l... 0x3FCC71C016291751)\l  %169 = tail call double @llvm.fma.f64(double %165, double %168, double\l... 0x3FD249249B27ACF1)\l  %170 = tail call double @llvm.fma.f64(double %165, double %169, double\l... 0x3FD99999998EF7B6)\l  %171 = tail call double @llvm.fma.f64(double %165, double %170, double\l... 0x3FE5555555555780)\l  %172 = add nsw i32 %103, %98\l  %173 = sitofp i32 %172 to double\l  %174 = fmul double %173, 0x3FE62E42FEFA39EF\l  %175 = fneg double %174\l  %176 = tail call double @llvm.fma.f64(double %173, double\l... 0x3FE62E42FEFA39EF, double %175)\l  %177 = tail call double @llvm.fma.f64(double %173, double\l... 0x3C7ABC9E3B39803F, double %176)\l  %178 = fadd double %174, %177\l  %179 = fsub double %178, %174\l  %180 = fsub double %177, %179\l  %181 = tail call double @llvm.amdgcn.ldexp.f64(double %162, i32 1)\l  %182 = tail call double @llvm.amdgcn.ldexp.f64(double %164, i32 1)\l  %183 = fmul double %162, %165\l  %184 = fmul double %183, %171\l  %185 = fadd double %181, %184\l  %186 = fsub double %185, %181\l  %187 = fsub double %184, %186\l  %188 = fadd double %182, %187\l  %189 = fadd double %185, %188\l  %190 = fsub double %189, %185\l  %191 = fsub double %188, %190\l  %192 = fadd double %178, %189\l  %193 = fsub double %192, %178\l  %194 = fsub double %192, %193\l  %195 = fsub double %178, %194\l  %196 = fsub double %189, %193\l  %197 = fadd double %196, %195\l  %198 = fadd double %180, %191\l  %199 = fsub double %198, %180\l  %200 = fsub double %198, %199\l  %201 = fsub double %180, %200\l  %202 = fsub double %191, %199\l  %203 = fadd double %202, %201\l  %204 = fadd double %198, %197\l  %205 = fadd double %192, %204\l  %206 = fsub double %205, %192\l  %207 = fsub double %204, %206\l  %208 = fadd double %203, %207\l  %209 = fadd double %205, %208\l  %210 = tail call i1 @llvm.amdgcn.class.f64(double %35, i32 512)\l  %211 = select i1 %210, double %35, double %209\l  %212 = fcmp olt double %35, 1.000000e+00\l  %213 = select i1 %212, double 0x7FF8000000000000, double %211\l  %214 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %213, double addrspace(1)* %214, align 8, !tbaa !16\l  br label %215\l}"];
	Node0x4fec800 -> Node0x4fec890;
	Node0x4fec890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%215:\l215:                                              \l  ret void\l}"];
}
