digraph "CFG for 'vec_acos' function" {
	label="CFG for 'vec_acos' function";

	Node0x5179840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = udiv i32 %13, %10\l  %23 = mul i32 %22, %10\l  %24 = icmp ugt i32 %13, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %21\l  %28 = add i32 %27, %5\l  %29 = mul i32 %28, %10\l  %30 = add i32 %29, %4\l  %31 = icmp slt i32 %30, %0\l  br i1 %31, label %32, label %106\l|{<s0>T|<s1>F}}"];
	Node0x5179840:s0 -> Node0x517d880;
	Node0x5179840:s1 -> Node0x517d910;
	Node0x517d880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %2, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %36 = tail call double @llvm.fabs.f64(double %35)\l  %37 = fcmp oge double %36, 5.000000e-01\l  %38 = tail call double @llvm.fma.f64(double %36, double -5.000000e-01,\l... double 5.000000e-01)\l  %39 = fmul double %35, %35\l  %40 = select i1 %37, double %38, double %39\l  %41 = tail call double @llvm.fma.f64(double %40, double 0x3FA059859FEA6A70,\l... double 0xBF90A5A378A05EAF)\l  %42 = tail call double @llvm.fma.f64(double %40, double %41, double\l... 0x3F94052137024D6A)\l  %43 = tail call double @llvm.fma.f64(double %40, double %42, double\l... 0x3F7AB3A098A70509)\l  %44 = tail call double @llvm.fma.f64(double %40, double %43, double\l... 0x3F88ED60A300C8D2)\l  %45 = tail call double @llvm.fma.f64(double %40, double %44, double\l... 0x3F8C6FA84B77012B)\l  %46 = tail call double @llvm.fma.f64(double %40, double %45, double\l... 0x3F91C6C111DCCB70)\l  %47 = tail call double @llvm.fma.f64(double %40, double %46, double\l... 0x3F96E89F0A0ADACF)\l  %48 = tail call double @llvm.fma.f64(double %40, double %47, double\l... 0x3F9F1C72C668963F)\l  %49 = tail call double @llvm.fma.f64(double %40, double %48, double\l... 0x3FA6DB6DB41CE4BD)\l  %50 = tail call double @llvm.fma.f64(double %40, double %49, double\l... 0x3FB333333336FD5B)\l  %51 = tail call double @llvm.fma.f64(double %40, double %50, double\l... 0x3FC5555555555380)\l  %52 = fmul double %40, %51\l  %53 = tail call double @llvm.fma.f64(double %35, double %52, double %35)\l  %54 = fneg double %53\l  %55 = tail call double @llvm.fma.f64(double 0x3FEDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %54)\l  br i1 %37, label %56, label %103\l|{<s0>T|<s1>F}}"];
	Node0x517d880:s0 -> Node0x5180320;
	Node0x517d880:s1 -> Node0x51803b0;
	Node0x5180320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%56:\l56:                                               \l  %57 = tail call double @llvm.amdgcn.rsq.f64(double %40)\l  %58 = fmul double %40, %57\l  %59 = fmul double %57, 5.000000e-01\l  %60 = fneg double %59\l  %61 = tail call double @llvm.fma.f64(double %60, double %58, double\l... 5.000000e-01)\l  %62 = tail call double @llvm.fma.f64(double %59, double %61, double %59)\l  %63 = tail call double @llvm.fma.f64(double %58, double %61, double %58)\l  %64 = fneg double %63\l  %65 = tail call double @llvm.fma.f64(double %64, double %63, double %40)\l  %66 = tail call double @llvm.fma.f64(double %65, double %62, double %63)\l  %67 = fcmp oeq double %40, 0.000000e+00\l  %68 = select i1 %67, double %40, double %66\l  %69 = fmul double %68, %68\l  %70 = fneg double %69\l  %71 = tail call double @llvm.fma.f64(double %68, double %68, double %70)\l  %72 = fsub double %40, %69\l  %73 = fsub double %40, %72\l  %74 = fsub double %73, %69\l  %75 = fsub double %74, %71\l  %76 = fadd double %72, %75\l  %77 = fmul double %68, 2.000000e+00\l  %78 = tail call double @llvm.amdgcn.rcp.f64(double %77)\l  %79 = fneg double %77\l  %80 = tail call double @llvm.fma.f64(double %79, double %78, double\l... 1.000000e+00)\l  %81 = tail call double @llvm.fma.f64(double %80, double %78, double %78)\l  %82 = tail call double @llvm.fma.f64(double %79, double %81, double\l... 1.000000e+00)\l  %83 = tail call double @llvm.fma.f64(double %82, double %81, double %81)\l  %84 = fmul double %76, %83\l  %85 = tail call double @llvm.fma.f64(double %79, double %84, double %76)\l  %86 = tail call double @llvm.fma.f64(double %85, double %83, double %84)\l  %87 = select i1 %67, double 0.000000e+00, double %86\l  %88 = fadd double %68, %87\l  %89 = fsub double %88, %68\l  %90 = fsub double %87, %89\l  %91 = tail call double @llvm.fma.f64(double %88, double %52, double %88)\l  %92 = fmul double %91, -2.000000e+00\l  %93 = tail call double @llvm.fma.f64(double 0x3FFDD9AD336A0500, double\l... 0x3FFAF154EEB562D6, double %92)\l  %94 = tail call double @llvm.fma.f64(double %88, double %52, double %90)\l  %95 = fadd double %88, %94\l  %96 = fmul double %95, 2.000000e+00\l  %97 = fcmp olt double %35, 0.000000e+00\l  %98 = select i1 %97, double %93, double %96\l  %99 = fcmp oeq double %35, -1.000000e+00\l  %100 = select i1 %99, double 0x400921FB54442D18, double %98\l  %101 = fcmp oeq double %35, 1.000000e+00\l  %102 = select i1 %101, double 0.000000e+00, double %100\l  br label %103\l}"];
	Node0x5180320 -> Node0x51803b0;
	Node0x51803b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%103:\l103:                                              \l  %104 = phi double [ %102, %56 ], [ %55, %32 ]\l  %105 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  store double %104, double addrspace(1)* %105, align 8, !tbaa !16\l  br label %106\l}"];
	Node0x51803b0 -> Node0x517d910;
	Node0x517d910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  ret void\l}"];
}
