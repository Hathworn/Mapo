digraph "CFG for 'vec_nextafter' function" {
	label="CFG for 'vec_nextafter' function";

	Node0x5189c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = udiv i32 %14, %11\l  %24 = mul i32 %23, %11\l  %25 = icmp ugt i32 %14, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = add i32 %28, %6\l  %30 = mul i32 %29, %11\l  %31 = add i32 %30, %5\l  %32 = icmp slt i32 %31, %0\l  br i1 %32, label %33, label %71\l|{<s0>T|<s1>F}}"];
	Node0x5189c20:s0 -> Node0x518c640;
	Node0x5189c20:s1 -> Node0x518c6d0;
	Node0x518c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = getelementptr inbounds double, double addrspace(1)* %3, i64 %34\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %39 = bitcast double %36 to i64\l  %40 = sub i64 -9223372036854775808, %39\l  %41 = icmp slt i64 %39, 0\l  %42 = select i1 %41, i64 %40, i64 %39\l  %43 = bitcast double %38 to i64\l  %44 = sub i64 -9223372036854775808, %43\l  %45 = icmp slt i64 %43, 0\l  %46 = select i1 %45, i64 %44, i64 %43\l  %47 = icmp sge i64 %42, %46\l  %48 = select i1 %47, i64 -1, i64 1\l  %49 = add nsw i64 %48, %42\l  %50 = sub i64 -9223372036854775808, %49\l  %51 = icmp slt i64 %49, 0\l  %52 = select i1 %51, i64 %50, i64 %49\l  %53 = icmp ne i64 %42, -1\l  %54 = or i1 %53, %47\l  %55 = select i1 %54, i64 %52, i64 -9223372036854775808\l  %56 = fcmp uno double %36, 0.000000e+00\l  %57 = select i1 %56, i64 %39, i64 %55\l  %58 = fcmp uno double %38, 0.000000e+00\l  %59 = icmp eq i64 %39, %43\l  %60 = tail call double @llvm.fabs.f64(double %36)\l  %61 = bitcast double %60 to i64\l  %62 = tail call double @llvm.fabs.f64(double %38)\l  %63 = bitcast double %62 to i64\l  %64 = or i64 %63, %61\l  %65 = icmp eq i64 %64, 0\l  %66 = select i1 %59, i1 true, i1 %65\l  %67 = or i1 %58, %66\l  %68 = select i1 %67, i64 %43, i64 %57\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  %70 = bitcast double addrspace(1)* %69 to i64 addrspace(1)*\l  store i64 %68, i64 addrspace(1)* %70, align 8, !tbaa !16\l  br label %71\l}"];
	Node0x518c640 -> Node0x518c6d0;
	Node0x518c6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  ret void\l}"];
}
