digraph "CFG for 'vec_computePSF_signal' function" {
	label="CFG for 'vec_computePSF_signal' function";

	Node0x45df810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = udiv i32 %15, %12\l  %25 = mul i32 %24, %12\l  %26 = icmp ugt i32 %15, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %23\l  %30 = add i32 %29, %7\l  %31 = mul i32 %30, %12\l  %32 = add i32 %31, %6\l  %33 = icmp slt i32 %32, %0\l  br i1 %33, label %34, label %46\l|{<s0>T|<s1>F}}"];
	Node0x45df810:s0 -> Node0x45e20a0;
	Node0x45df810:s1 -> Node0x45e39c0;
	Node0x45e20a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = sext i32 %32 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %2, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %38 = fdiv contract double %37, %4\l  %39 = getelementptr inbounds double, double addrspace(1)* %3, i64 %35\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %41 = fdiv contract double %40, %4\l  %42 = fmul contract double %38, %38\l  %43 = fmul contract double %41, %41\l  %44 = fadd contract double %42, %43\l  %45 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  store double %44, double addrspace(1)* %45, align 8, !tbaa !16\l  br label %46\l}"];
	Node0x45e20a0 -> Node0x45e39c0;
	Node0x45e39c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  ret void\l}"];
}
