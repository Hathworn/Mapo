digraph "CFG for '_Z9VectorAddPiS_id' function" {
	label="CFG for '_Z9VectorAddPiS_id' function";

	Node0x4dd0b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = icmp slt i32 %5, %2\l  br i1 %6, label %7, label %223\l|{<s0>T|<s1>F}}"];
	Node0x4dd0b80:s0 -> Node0x4dd19c0;
	Node0x4dd0b80:s1 -> Node0x4dd1a50;
	Node0x4dd19c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%7:\l7:                                                \l  %8 = zext i32 %5 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %8\l  %10 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !5, !amdgpu.noclobber !9\l  %11 = sitofp i32 %10 to double\l  %12 = fdiv contract double %11, 2.550000e+02\l  %13 = fdiv contract double 1.000000e+00, %3\l  %14 = tail call double @llvm.fabs.f64(double %12)\l  %15 = tail call double @llvm.amdgcn.frexp.mant.f64(double %14)\l  %16 = fcmp olt double %15, 0x3FE5555555555555\l  %17 = zext i1 %16 to i32\l  %18 = tail call double @llvm.amdgcn.ldexp.f64(double %15, i32 %17)\l  %19 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %14)\l  %20 = sub nsw i32 %19, %17\l  %21 = fadd double %18, -1.000000e+00\l  %22 = fadd double %18, 1.000000e+00\l  %23 = fadd double %22, -1.000000e+00\l  %24 = fsub double %18, %23\l  %25 = tail call double @llvm.amdgcn.rcp.f64(double %22)\l  %26 = fneg double %22\l  %27 = tail call double @llvm.fma.f64(double %26, double %25, double\l... 1.000000e+00)\l  %28 = tail call double @llvm.fma.f64(double %27, double %25, double %25)\l  %29 = tail call double @llvm.fma.f64(double %26, double %28, double\l... 1.000000e+00)\l  %30 = tail call double @llvm.fma.f64(double %29, double %28, double %28)\l  %31 = fmul double %21, %30\l  %32 = fmul double %22, %31\l  %33 = fneg double %32\l  %34 = tail call double @llvm.fma.f64(double %31, double %22, double %33)\l  %35 = tail call double @llvm.fma.f64(double %31, double %24, double %34)\l  %36 = fadd double %32, %35\l  %37 = fsub double %36, %32\l  %38 = fsub double %35, %37\l  %39 = fsub double %21, %36\l  %40 = fsub double %21, %39\l  %41 = fsub double %40, %36\l  %42 = fsub double %41, %38\l  %43 = fadd double %39, %42\l  %44 = fmul double %30, %43\l  %45 = fadd double %31, %44\l  %46 = fsub double %45, %31\l  %47 = fsub double %44, %46\l  %48 = fmul double %45, %45\l  %49 = fneg double %48\l  %50 = tail call double @llvm.fma.f64(double %45, double %45, double %49)\l  %51 = fmul double %47, 2.000000e+00\l  %52 = tail call double @llvm.fma.f64(double %45, double %51, double %50)\l  %53 = fadd double %48, %52\l  %54 = fsub double %53, %48\l  %55 = fsub double %52, %54\l  %56 = tail call double @llvm.fma.f64(double %53, double 0x3FBDEE674222DE17,\l... double 0x3FBA6564968915A9)\l  %57 = tail call double @llvm.fma.f64(double %53, double %56, double\l... 0x3FBE25E43ABE935A)\l  %58 = tail call double @llvm.fma.f64(double %53, double %57, double\l... 0x3FC110EF47E6C9C2)\l  %59 = tail call double @llvm.fma.f64(double %53, double %58, double\l... 0x3FC3B13BCFA74449)\l  %60 = tail call double @llvm.fma.f64(double %53, double %59, double\l... 0x3FC745D171BF3C30)\l  %61 = tail call double @llvm.fma.f64(double %53, double %60, double\l... 0x3FCC71C71C7792CE)\l  %62 = tail call double @llvm.fma.f64(double %53, double %61, double\l... 0x3FD24924924920DA)\l  %63 = tail call double @llvm.fma.f64(double %53, double %62, double\l... 0x3FD999999999999C)\l  %64 = sitofp i32 %20 to double\l  %65 = fmul double %64, 0x3FE62E42FEFA39EF\l  %66 = fneg double %65\l  %67 = tail call double @llvm.fma.f64(double %64, double 0x3FE62E42FEFA39EF,\l... double %66)\l  %68 = tail call double @llvm.fma.f64(double %64, double 0x3C7ABC9E3B39803F,\l... double %67)\l  %69 = fadd double %65, %68\l  %70 = fsub double %69, %65\l  %71 = fsub double %68, %70\l  %72 = tail call double @llvm.amdgcn.ldexp.f64(double %45, i32 1)\l  %73 = tail call double @llvm.amdgcn.ldexp.f64(double %47, i32 1)\l  %74 = fmul double %45, %53\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %53, double %45, double %75)\l  %77 = tail call double @llvm.fma.f64(double %53, double %47, double %76)\l  %78 = tail call double @llvm.fma.f64(double %55, double %45, double %77)\l  %79 = fadd double %74, %78\l  %80 = fsub double %79, %74\l  %81 = fsub double %78, %80\l  %82 = fmul double %53, %63\l  %83 = fneg double %82\l  %84 = tail call double @llvm.fma.f64(double %53, double %63, double %83)\l  %85 = tail call double @llvm.fma.f64(double %55, double %63, double %84)\l  %86 = fadd double %82, %85\l  %87 = fsub double %86, %82\l  %88 = fsub double %85, %87\l  %89 = fadd double %86, 0x3FE5555555555555\l  %90 = fadd double %89, 0xBFE5555555555555\l  %91 = fsub double %86, %90\l  %92 = fadd double %88, 0x3C8543B0D5DF274D\l  %93 = fadd double %92, %91\l  %94 = fadd double %89, %93\l  %95 = fsub double %94, %89\l  %96 = fsub double %93, %95\l  %97 = fmul double %79, %94\l  %98 = fneg double %97\l  %99 = tail call double @llvm.fma.f64(double %79, double %94, double %98)\l  %100 = tail call double @llvm.fma.f64(double %79, double %96, double %99)\l  %101 = tail call double @llvm.fma.f64(double %81, double %94, double %100)\l  %102 = fadd double %97, %101\l  %103 = fsub double %102, %97\l  %104 = fsub double %101, %103\l  %105 = fadd double %72, %102\l  %106 = fsub double %105, %72\l  %107 = fsub double %102, %106\l  %108 = fadd double %73, %104\l  %109 = fadd double %108, %107\l  %110 = fadd double %105, %109\l  %111 = fsub double %110, %105\l  %112 = fsub double %109, %111\l  %113 = fadd double %69, %110\l  %114 = fsub double %113, %69\l  %115 = fsub double %113, %114\l  %116 = fsub double %69, %115\l  %117 = fsub double %110, %114\l  %118 = fadd double %117, %116\l  %119 = fadd double %71, %112\l  %120 = fsub double %119, %71\l  %121 = fsub double %119, %120\l  %122 = fsub double %71, %121\l  %123 = fsub double %112, %120\l  %124 = fadd double %123, %122\l  %125 = fadd double %119, %118\l  %126 = fadd double %113, %125\l  %127 = fsub double %126, %113\l  %128 = fsub double %125, %127\l  %129 = fadd double %124, %128\l  %130 = fadd double %126, %129\l  %131 = fsub double %130, %126\l  %132 = fsub double %129, %131\l  %133 = fmul double %13, %130\l  %134 = fneg double %133\l  %135 = tail call double @llvm.fma.f64(double %13, double %130, double %134)\l  %136 = tail call double @llvm.fma.f64(double %13, double %132, double %135)\l  %137 = fadd double %133, %136\l  %138 = fsub double %137, %133\l  %139 = fsub double %136, %138\l  %140 = tail call double @llvm.fabs.f64(double %133) #3\l  %141 = fcmp oeq double %140, 0x7FF0000000000000\l  %142 = select i1 %141, double %133, double %137\l  %143 = tail call double @llvm.fabs.f64(double %142) #3\l  %144 = fcmp oeq double %143, 0x7FF0000000000000\l  %145 = select i1 %144, double 0.000000e+00, double %139\l  %146 = fmul double %142, 0x3FF71547652B82FE\l  %147 = tail call double @llvm.rint.f64(double %146)\l  %148 = fneg double %147\l  %149 = tail call double @llvm.fma.f64(double %148, double\l... 0x3FE62E42FEFA39EF, double %142)\l  %150 = tail call double @llvm.fma.f64(double %148, double\l... 0x3C7ABC9E3B39803F, double %149)\l  %151 = tail call double @llvm.fma.f64(double %150, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %152 = tail call double @llvm.fma.f64(double %150, double %151, double\l... 0x3EC71DEE623FDE64)\l  %153 = tail call double @llvm.fma.f64(double %150, double %152, double\l... 0x3EFA01997C89E6B0)\l  %154 = tail call double @llvm.fma.f64(double %150, double %153, double\l... 0x3F2A01A014761F6E)\l  %155 = tail call double @llvm.fma.f64(double %150, double %154, double\l... 0x3F56C16C1852B7B0)\l  %156 = tail call double @llvm.fma.f64(double %150, double %155, double\l... 0x3F81111111122322)\l  %157 = tail call double @llvm.fma.f64(double %150, double %156, double\l... 0x3FA55555555502A1)\l  %158 = tail call double @llvm.fma.f64(double %150, double %157, double\l... 0x3FC5555555555511)\l  %159 = tail call double @llvm.fma.f64(double %150, double %158, double\l... 0x3FE000000000000B)\l  %160 = tail call double @llvm.fma.f64(double %150, double %159, double\l... 1.000000e+00)\l  %161 = tail call double @llvm.fma.f64(double %150, double %160, double\l... 1.000000e+00)\l  %162 = fptosi double %147 to i32\l  %163 = tail call double @llvm.amdgcn.ldexp.f64(double %161, i32 %162)\l  %164 = fcmp ogt double %142, 1.024000e+03\l  %165 = select i1 %164, double 0x7FF0000000000000, double %163\l  %166 = fcmp olt double %142, -1.075000e+03\l  %167 = select i1 %166, double 0.000000e+00, double %165\l  %168 = tail call double @llvm.fma.f64(double %167, double %145, double %167)\l  %169 = tail call double @llvm.fabs.f64(double %167) #3\l  %170 = fcmp oeq double %169, 0x7FF0000000000000\l  %171 = select i1 %170, double %167, double %168\l  %172 = tail call double @llvm.fabs.f64(double %13)\l  %173 = tail call double @llvm.trunc.f64(double %172)\l  %174 = fcmp oeq double %172, %173\l  %175 = zext i1 %174 to i32\l  %176 = fmul double %173, 5.000000e-01\l  %177 = tail call double @llvm.amdgcn.fract.f64(double %176)\l  %178 = tail call i1 @llvm.amdgcn.class.f64(double %176, i32 516)\l  %179 = select i1 %178, double 0.000000e+00, double %177\l  %180 = fcmp oeq double %179, 0.000000e+00\l  %181 = and i1 %174, %180\l  %182 = zext i1 %181 to i32\l  %183 = add nuw nsw i32 %182, %175\l  %184 = icmp eq i32 %183, 1\l  %185 = fcmp olt double %12, 0.000000e+00\l  %186 = and i1 %184, %185\l  %187 = select i1 %186, double -0.000000e+00, double 0.000000e+00\l  %188 = tail call double @llvm.copysign.f64(double %171, double %187)\l  %189 = fcmp uge double %12, 0.000000e+00\l  %190 = icmp ne i32 %183, 0\l  %191 = select i1 %189, i1 true, i1 %190\l  %192 = select i1 %191, double %188, double 0x7FF8000000000000\l  %193 = fcmp oeq double %172, 0x7FF0000000000000\l  %194 = fcmp oeq double %14, 1.000000e+00\l  %195 = fadd double %14, -1.000000e+00\l  %196 = bitcast double %13 to \<2 x i32\>\l  %197 = extractelement \<2 x i32\> %196, i64 1\l  %198 = bitcast double %195 to \<2 x i32\>\l  %199 = extractelement \<2 x i32\> %198, i64 1\l  %200 = xor i32 %199, %197\l  %201 = icmp sgt i32 %200, -1\l  %202 = select i1 %201, double 0x7FF0000000000000, double 0.000000e+00\l  %203 = select i1 %194, double %14, double %202\l  %204 = select i1 %193, double %203, double %192\l  %205 = fcmp oeq double %14, 0x7FF0000000000000\l  %206 = fcmp oeq double %12, 0.000000e+00\l  %207 = or i1 %206, %205\l  %208 = fcmp olt double %13, 0.000000e+00\l  %209 = xor i1 %208, %206\l  %210 = select i1 %209, double 0.000000e+00, double 0x7FF0000000000000\l  %211 = select i1 %184, double %12, double 0.000000e+00\l  %212 = tail call double @llvm.copysign.f64(double %210, double %211)\l  %213 = select i1 %207, double %212, double %204\l  %214 = fcmp uno double %12, %13\l  %215 = fcmp oeq double %12, 1.000000e+00\l  %216 = fcmp oeq double %13, 0.000000e+00\l  %217 = or i1 %216, %215\l  %218 = fmul contract double %213, 2.550000e+02\l  %219 = select i1 %214, double 0x7FF8000000000000, double %218\l  %220 = fptosi double %219 to i32\l  %221 = select i1 %217, i32 255, i32 %220\l  %222 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %8\l  store i32 %221, i32 addrspace(1)* %222, align 4, !tbaa !5\l  br label %223\l}"];
	Node0x4dd19c0 -> Node0x4dd1a50;
	Node0x4dd1a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%223:\l223:                                              \l  ret void\l}"];
}
