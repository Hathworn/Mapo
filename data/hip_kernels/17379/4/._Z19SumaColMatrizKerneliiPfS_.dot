digraph "CFG for '_Z19SumaColMatrizKerneliiPfS_' function" {
	label="CFG for '_Z19SumaColMatrizKerneliiPfS_' function";

	Node0x4df4210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = udiv i32 %1, %18\l  %20 = mul i32 %19, %5\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %24 = udiv i32 %0, %13\l  %25 = mul nsw i32 %22, %0\l  %26 = mul i32 %24, %21\l  %27 = add i32 %25, %26\l  %28 = icmp sgt i32 %24, 0\l  br i1 %28, label %29, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4df4210:s0 -> Node0x4df6c30;
	Node0x4df4210:s1 -> Node0x4df6cc0;
	Node0x4df6c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%29:\l29:                                               \l  %30 = and i32 %24, 7\l  %31 = icmp ult i32 %24, 8\l  br i1 %31, label %34, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4df6c30:s0 -> Node0x4df6f80;
	Node0x4df6c30:s1 -> Node0x4df6fd0;
	Node0x4df6fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%32:\l32:                                               \l  %33 = and i32 %24, -8\l  br label %65\l}"];
	Node0x4df6fd0 -> Node0x4df61d0;
	Node0x4df6f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%34:\l34:                                               \l  %35 = phi float [ undef, %29 ], [ %115, %65 ]\l  %36 = phi i32 [ 0, %29 ], [ %116, %65 ]\l  %37 = phi float [ 0.000000e+00, %29 ], [ %115, %65 ]\l  %38 = icmp eq i32 %30, 0\l  br i1 %38, label %51, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4df6f80:s0 -> Node0x4df6cc0;
	Node0x4df6f80:s1 -> Node0x4df8120;
	Node0x4df8120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%39:\l39:                                               \l  %40 = phi i32 [ %48, %39 ], [ %36, %34 ]\l  %41 = phi float [ %47, %39 ], [ %37, %34 ]\l  %42 = phi i32 [ %49, %39 ], [ 0, %34 ]\l  %43 = add nsw i32 %27, %40\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %47 = fadd contract float %41, %46\l  %48 = add nuw nsw i32 %40, 1\l  %49 = add i32 %42, 1\l  %50 = icmp eq i32 %49, %30\l  br i1 %50, label %51, label %39, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4df8120:s0 -> Node0x4df6cc0;
	Node0x4df8120:s1 -> Node0x4df8120;
	Node0x4df6cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%51:\l51:                                               \l  %52 = phi float [ 0.000000e+00, %4 ], [ %35, %34 ], [ %47, %39 ]\l  %53 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %21\l  store float %52, float addrspace(3)* %53, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %54 = icmp eq i32 %21, 0\l  br i1 %54, label %55, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4df6cc0:s0 -> Node0x4df9e40;
	Node0x4df6cc0:s1 -> Node0x4df9e90;
	Node0x4df9e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%55:\l55:                                               \l  %56 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32\l... 0), align 16, !tbaa !16\l  %57 = icmp ugt i16 %12, 1\l  br i1 %57, label %58, label %136\l|{<s0>T|<s1>F}}"];
	Node0x4df9e40:s0 -> Node0x4dfa020;
	Node0x4df9e40:s1 -> Node0x4dfa410;
	Node0x4dfa020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%58:\l58:                                               \l  %59 = add nsw i32 %13, -1\l  %60 = add nsw i32 %13, -2\l  %61 = and i32 %59, 7\l  %62 = icmp ult i32 %60, 7\l  br i1 %62, label %119, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4dfa020:s0 -> Node0x4dfa7f0;
	Node0x4dfa020:s1 -> Node0x4dfa840;
	Node0x4dfa840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%63:\l63:                                               \l  %64 = and i32 %59, -8\l  br label %142\l}"];
	Node0x4dfa840 -> Node0x4df7110;
	Node0x4df61d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%65:\l65:                                               \l  %66 = phi i32 [ 0, %32 ], [ %116, %65 ]\l  %67 = phi float [ 0.000000e+00, %32 ], [ %115, %65 ]\l  %68 = phi i32 [ 0, %32 ], [ %117, %65 ]\l  %69 = add nsw i32 %27, %66\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %2, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %73 = fadd contract float %67, %72\l  %74 = or i32 %66, 1\l  %75 = add nsw i32 %27, %74\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %2, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %79 = fadd contract float %73, %78\l  %80 = or i32 %66, 2\l  %81 = add nsw i32 %27, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %85 = fadd contract float %79, %84\l  %86 = or i32 %66, 3\l  %87 = add nsw i32 %27, %86\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %2, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %91 = fadd contract float %85, %90\l  %92 = or i32 %66, 4\l  %93 = add nsw i32 %27, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %97 = fadd contract float %91, %96\l  %98 = or i32 %66, 5\l  %99 = add nsw i32 %27, %98\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %2, i64 %100\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %103 = fadd contract float %97, %102\l  %104 = or i32 %66, 6\l  %105 = add nsw i32 %27, %104\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %2, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %109 = fadd contract float %103, %108\l  %110 = or i32 %66, 7\l  %111 = add nsw i32 %27, %110\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %2, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  %115 = fadd contract float %109, %114\l  %116 = add nuw nsw i32 %66, 8\l  %117 = add i32 %68, 8\l  %118 = icmp eq i32 %117, %33\l  br i1 %118, label %34, label %65, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4df61d0:s0 -> Node0x4df6f80;
	Node0x4df61d0:s1 -> Node0x4df61d0;
	Node0x4dfa7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%119:\l119:                                              \l  %120 = phi float [ undef, %58 ], [ %176, %142 ]\l  %121 = phi i32 [ 1, %58 ], [ %177, %142 ]\l  %122 = phi float [ %56, %58 ], [ %176, %142 ]\l  %123 = icmp eq i32 %61, 0\l  br i1 %123, label %134, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4dfa7f0:s0 -> Node0x4dfd100;
	Node0x4dfa7f0:s1 -> Node0x4dfd190;
	Node0x4dfd190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%124:\l124:                                              \l  %125 = phi i32 [ %131, %124 ], [ %121, %119 ]\l  %126 = phi float [ %130, %124 ], [ %122, %119 ]\l  %127 = phi i32 [ %132, %124 ], [ 0, %119 ]\l  %128 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %125\l  %129 = load float, float addrspace(3)* %128, align 4, !tbaa !16\l  %130 = fadd contract float %126, %129\l  %131 = add nuw nsw i32 %125, 1\l  %132 = add i32 %127, 1\l  %133 = icmp eq i32 %132, %61\l  br i1 %133, label %134, label %124, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4dfd190:s0 -> Node0x4dfd100;
	Node0x4dfd190:s1 -> Node0x4dfd190;
	Node0x4dfd100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%134:\l134:                                              \l  %135 = phi float [ %120, %119 ], [ %130, %124 ]\l  store float %135, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32\l... 0), align 16, !tbaa !16\l  br label %136\l}"];
	Node0x4dfd100 -> Node0x4dfa410;
	Node0x4dfa410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%136:\l136:                                              \l  %137 = phi float [ %135, %134 ], [ %56, %55 ]\l  %138 = mul i32 %18, %22\l  %139 = add i32 %138, %23\l  %140 = zext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %140\l  store float %137, float addrspace(1)* %141, align 4, !tbaa !16\l  br label %180\l}"];
	Node0x4dfa410 -> Node0x4df9e90;
	Node0x4df7110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%142:\l142:                                              \l  %143 = phi i32 [ 1, %63 ], [ %177, %142 ]\l  %144 = phi float [ %56, %63 ], [ %176, %142 ]\l  %145 = phi i32 [ 0, %63 ], [ %178, %142 ]\l  %146 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %143\l  %147 = load float, float addrspace(3)* %146, align 4, !tbaa !16\l  %148 = fadd contract float %144, %147\l  %149 = add nuw nsw i32 %143, 1\l  %150 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %149\l  %151 = load float, float addrspace(3)* %150, align 4, !tbaa !16\l  %152 = fadd contract float %148, %151\l  %153 = add nuw nsw i32 %143, 2\l  %154 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %153\l  %155 = load float, float addrspace(3)* %154, align 4, !tbaa !16\l  %156 = fadd contract float %152, %155\l  %157 = add nuw nsw i32 %143, 3\l  %158 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %157\l  %159 = load float, float addrspace(3)* %158, align 4, !tbaa !16\l  %160 = fadd contract float %156, %159\l  %161 = add nuw nsw i32 %143, 4\l  %162 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %161\l  %163 = load float, float addrspace(3)* %162, align 4, !tbaa !16\l  %164 = fadd contract float %160, %163\l  %165 = add nuw nsw i32 %143, 5\l  %166 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %165\l  %167 = load float, float addrspace(3)* %166, align 4, !tbaa !16\l  %168 = fadd contract float %164, %167\l  %169 = add nuw nsw i32 %143, 6\l  %170 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %169\l  %171 = load float, float addrspace(3)* %170, align 4, !tbaa !16\l  %172 = fadd contract float %168, %171\l  %173 = add nuw nsw i32 %143, 7\l  %174 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ19SumaColMatrizKerneliiPfS_E3Nds, i32 0, i32 %173\l  %175 = load float, float addrspace(3)* %174, align 4, !tbaa !16\l  %176 = fadd contract float %172, %175\l  %177 = add nuw nsw i32 %143, 8\l  %178 = add i32 %145, 8\l  %179 = icmp eq i32 %178, %64\l  br i1 %179, label %119, label %142, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4df7110:s0 -> Node0x4dfa7f0;
	Node0x4df7110:s1 -> Node0x4df7110;
	Node0x4df9e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%180:\l180:                                              \l  ret void\l}"];
}
