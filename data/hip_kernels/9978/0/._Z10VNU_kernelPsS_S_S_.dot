digraph "CFG for '_Z10VNU_kernelPsS_S_S_' function" {
	label="CFG for '_Z10VNU_kernelPsS_S_S_' function";

	Node0x60825b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = trunc i32 %5 to i16\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = trunc i32 %7 to i16\l  %13 = mul i16 %11, %12\l  %14 = add i16 %13, %6\l  %15 = shl i16 %14, 1\l  %16 = sext i16 %15 to i64\l  %17 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %16\l  %18 = load i16, i16 addrspace(1)* %17, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %19 = sext i16 %15 to i32\l  %20 = sext i16 %18 to i32\l  %21 = add nsw i32 %19, %20\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i16, i16 addrspace(1)* %3, i64 %22\l  %24 = add nsw i32 %21, 1\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds i16, i16 addrspace(1)* %3, i64 %25\l  %27 = ashr exact i32 %19, 1\l  %28 = add nsw i32 %27, %20\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %29\l  %31 = load i16, i16 addrspace(1)* %30, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %32 = sext i16 %18 to i64\l  %33 = add nsw i64 %16, %32\l  %34 = getelementptr inbounds i16, i16 addrspace(1)* %3, i64 %33\l  %35 = load i16, i16 addrspace(1)* %23, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = load i16, i16 addrspace(1)* %26, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %37 = add i16 %36, %35\l  %38 = add i16 %37, %31\l  %39 = lshr i16 %38, 15\l  %40 = insertelement \<2 x i16\> poison, i16 %38, i64 0\l  %41 = shufflevector \<2 x i16\> %40, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %42 = insertelement \<2 x i16\> poison, i16 %35, i64 0\l  %43 = insertelement \<2 x i16\> %42, i16 %36, i64 1\l  %44 = sub \<2 x i16\> %41, %43\l  %45 = bitcast i16 addrspace(1)* %34 to \<2 x i16\> addrspace(1)*\l  store \<2 x i16\> %44, \<2 x i16\> addrspace(1)* %45, align 2, !tbaa !7\l  %46 = getelementptr inbounds i16, i16 addrspace(1)* %2, i64 %33\l  %47 = insertelement \<2 x i16\> poison, i16 %39, i64 0\l  %48 = shufflevector \<2 x i16\> %47, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %49 = bitcast i16 addrspace(1)* %46 to \<2 x i16\> addrspace(1)*\l  store \<2 x i16\> %48, \<2 x i16\> addrspace(1)* %49, align 2, !tbaa !7\l  ret void\l}"];
}
