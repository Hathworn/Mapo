digraph "CFG for '_Z10CNU_kernelPsS_' function" {
	label="CFG for '_Z10CNU_kernelPsS_' function";

	Node0x6007730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %4 = trunc i32 %3 to i16\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = trunc i32 %5 to i16\l  %11 = mul i16 %9, %10\l  %12 = add i16 %11, %4\l  %13 = mul i16 %12, 3\l  %14 = sext i16 %13 to i64\l  %15 = getelementptr inbounds i16, i16 addrspace(1)* %0, i64 %14\l  %16 = load i16, i16 addrspace(1)* %15, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %17 = sext i16 %13 to i32\l  %18 = sext i16 %16 to i32\l  %19 = add nsw i32 %17, %18\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %20\l  %22 = load i16, i16 addrspace(1)* %21, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %23 = add nsw i32 %19, 1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %24\l  %26 = load i16, i16 addrspace(1)* %25, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = add nsw i32 %19, 2\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %28\l  %30 = load i16, i16 addrspace(1)* %29, align 2, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = icmp sgt i16 %22, -1\l  %32 = select i1 %31, i16 1, i16 -1\l  %33 = icmp slt i16 %26, 0\l  %34 = sub nsw i16 0, %32\l  %35 = select i1 %33, i16 %34, i16 %32\l  %36 = icmp slt i16 %30, 0\l  %37 = sub nsw i16 0, %35\l  %38 = select i1 %36, i16 %37, i16 %35\l  %39 = tail call i16 @llvm.abs.i16(i16 %22, i1 false)\l  %40 = tail call i16 @llvm.abs.i16(i16 %26, i1 false)\l  %41 = icmp ugt i16 %39, %40\l  %42 = select i1 %41, i16 %26, i16 %22\l  %43 = select i1 %41, i16 %22, i16 %26\l  %44 = tail call i16 @llvm.abs.i16(i16 %30, i1 false)\l  %45 = tail call i16 @llvm.abs.i16(i16 %42, i1 false)\l  %46 = icmp ugt i16 %44, %45\l  %47 = tail call i16 @llvm.abs.i16(i16 %43, i1 false)\l  %48 = icmp ugt i16 %44, %47\l  %49 = select i1 %48, i16 %43, i16 %30\l  %50 = select i1 %46, i16 %42, i16 %30\l  %51 = select i1 %46, i16 %49, i16 %42\l  %52 = mul i16 %51, %38\l  %53 = sext i16 %16 to i64\l  %54 = add nsw i64 %14, %53\l  %55 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %54\l  store i16 %52, i16 addrspace(1)* %55, align 2, !tbaa !7\l  %56 = mul i16 %50, %38\l  %57 = add nsw i64 %54, 1\l  %58 = getelementptr inbounds i16, i16 addrspace(1)* %1, i64 %57\l  %59 = insertelement \<2 x i16\> poison, i16 %56, i64 0\l  %60 = shufflevector \<2 x i16\> %59, \<2 x i16\> poison, \<2 x i32\>\l... zeroinitializer\l  %61 = bitcast i16 addrspace(1)* %58 to \<2 x i16\> addrspace(1)*\l  store \<2 x i16\> %60, \<2 x i16\> addrspace(1)* %61, align 2, !tbaa !7\l  ret void\l}"];
}
