digraph "CFG for '_Z9grayscaleP15HIP_vector_typeIfLj4EEii' function" {
	label="CFG for '_Z9grayscaleP15HIP_vector_typeIfLj4EEii' function";

	Node0x50ca0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = getelementptr i8, i8 addrspace(4)* %5, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %4, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %14, %15\l  %18 = mul i32 %17, %9\l  %19 = add i32 %18, %16\l  %20 = mul nsw i32 %2, %1\l  %21 = icmp slt i32 %19, %20\l  br i1 %21, label %22, label %44\l|{<s0>T|<s1>F}}"];
	Node0x50ca0d0:s0 -> Node0x50d06a0;
	Node0x50ca0d0:s1 -> Node0x50d0730;
	Node0x50d06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%22:\l22:                                               \l  %23 = sext i32 %19 to i64\l  %24 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %23\l  %25 = getelementptr %struct.HIP_vector_type, %struct.HIP_vector_type\l... addrspace(1)* %24, i64 0, i32 0, i32 0, i32 0, i64 0\l  %26 = load float, float addrspace(1)* %25, align 16, !tbaa !7\l  %27 = fpext float %26 to double\l  %28 = fmul contract double %27, 3.000000e-01\l  %29 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %23, i32 0, i32 0, i32 0, i64 1\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fpext float %30 to double\l  %32 = fmul contract double %31, 6.000000e-01\l  %33 = fadd contract double %28, %32\l  %34 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %23, i32 0, i32 0, i32 0, i64 2\l  %35 = load float, float addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fpext float %35 to double\l  %37 = fmul contract double %36, 1.000000e-01\l  %38 = fadd contract double %33, %37\l  %39 = fptrunc double %38 to float\l  %40 = insertelement \<4 x float\> \<float poison, float poison, float poison,\l... float 0.000000e+00\>, float %39, i64 0\l  %41 = insertelement \<4 x float\> %40, float %39, i64 1\l  %42 = insertelement \<4 x float\> %41, float %39, i64 2\l  %43 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %24, i64 0, i32 0, i32 0, i32 0\l  store \<4 x float\> %42, \<4 x float\> addrspace(1)* %43, align 16\l  br label %44\l}"];
	Node0x50d06a0 -> Node0x50d0730;
	Node0x50d0730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
