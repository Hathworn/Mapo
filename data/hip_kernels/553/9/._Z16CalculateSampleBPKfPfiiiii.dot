digraph "CFG for '_Z16CalculateSampleBPKfPfiiiii' function" {
	label="CFG for '_Z16CalculateSampleBPKfPfiiiii' function";

	Node0x5fa1fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 2, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %16, %4\l  %26 = add nsw i32 %25, %24\l  %27 = icmp slt i32 %16, %5\l  %28 = icmp slt i32 %24, %4\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %168\l|{<s0>T|<s1>F}}"];
	Node0x5fa1fa0:s0 -> Node0x5fa5b10;
	Node0x5fa1fa0:s1 -> Node0x5fa5ba0;
	Node0x5fa5b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %16, %6\l  %32 = mul nsw i32 %24, %6\l  %33 = icmp sgt i32 %6, 0\l  br i1 %33, label %34, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5fa5b10:s0 -> Node0x5fa3e80;
	Node0x5fa5b10:s1 -> Node0x5fa6010;
	Node0x5fa3e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%34:\l34:                                               \l  %35 = and i32 %6, 1\l  %36 = icmp eq i32 %6, 1\l  %37 = and i32 %6, -2\l  %38 = icmp eq i32 %35, 0\l  br label %39\l}"];
	Node0x5fa3e80 -> Node0x5fa63f0;
	Node0x5fa63f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%39:\l39:                                               \l  %40 = phi i32 [ %102, %98 ], [ 0, %34 ]\l  %41 = phi i32 [ %103, %98 ], [ 0, %34 ]\l  %42 = phi float [ %101, %98 ], [ 0.000000e+00, %34 ]\l  %43 = phi float [ %100, %98 ], [ 0.000000e+00, %34 ]\l  %44 = phi float [ %99, %98 ], [ 0.000000e+00, %34 ]\l  %45 = add nsw i32 %41, %31\l  %46 = icmp slt i32 %45, %3\l  %47 = mul nsw i32 %45, %2\l  br i1 %36, label %66, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5fa63f0:s0 -> Node0x5fa76a0;
	Node0x5fa63f0:s1 -> Node0x5fa7730;
	Node0x5fa6010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%48:\l48:                                               \l  %49 = phi float [ 0.000000e+00, %30 ], [ %99, %98 ]\l  %50 = phi float [ 0.000000e+00, %30 ], [ %100, %98 ]\l  %51 = phi float [ 0.000000e+00, %30 ], [ %101, %98 ]\l  %52 = phi i32 [ 0, %30 ], [ %102, %98 ]\l  %53 = sitofp i32 %52 to float\l  %54 = fdiv contract float %49, %53\l  %55 = mul nsw i32 %26, 3\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  store float %54, float addrspace(1)* %57, align 4, !tbaa !7\l  %58 = fdiv contract float %50, %53\l  %59 = add nsw i32 %55, 1\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %1, i64 %60\l  store float %58, float addrspace(1)* %61, align 4, !tbaa !7\l  %62 = fdiv contract float %51, %53\l  %63 = add nsw i32 %55, 2\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  store float %62, float addrspace(1)* %65, align 4, !tbaa !7\l  br label %168\l}"];
	Node0x5fa6010 -> Node0x5fa5ba0;
	Node0x5fa76a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%66:\l66:                                               \l  %67 = phi float [ undef, %39 ], [ %161, %160 ]\l  %68 = phi float [ undef, %39 ], [ %162, %160 ]\l  %69 = phi float [ undef, %39 ], [ %163, %160 ]\l  %70 = phi i32 [ undef, %39 ], [ %164, %160 ]\l  %71 = phi i32 [ %40, %39 ], [ %164, %160 ]\l  %72 = phi i32 [ 0, %39 ], [ %165, %160 ]\l  %73 = phi float [ %42, %39 ], [ %163, %160 ]\l  %74 = phi float [ %43, %39 ], [ %162, %160 ]\l  %75 = phi float [ %44, %39 ], [ %161, %160 ]\l  br i1 %38, label %98, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5fa76a0:s0 -> Node0x5fa64e0;
	Node0x5fa76a0:s1 -> Node0x5fa9a80;
	Node0x5fa9a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%76:\l76:                                               \l  br i1 %46, label %77, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5fa9a80:s0 -> Node0x5fa9bc0;
	Node0x5fa9a80:s1 -> Node0x5fa64e0;
	Node0x5fa9bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%77:\l77:                                               \l  %78 = add nsw i32 %72, %32\l  %79 = icmp slt i32 %78, %2\l  br i1 %79, label %80, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5fa9bc0:s0 -> Node0x5fa9de0;
	Node0x5fa9bc0:s1 -> Node0x5fa64e0;
	Node0x5fa9de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%80:\l80:                                               \l  %81 = add nsw i32 %78, %47\l  %82 = mul nsw i32 %81, 3\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %86 = fadd contract float %75, %85\l  %87 = add nsw i32 %82, 1\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %0, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %91 = fadd contract float %74, %90\l  %92 = add nsw i32 %82, 2\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %96 = fadd contract float %73, %95\l  %97 = add nsw i32 %71, 1\l  br label %98\l}"];
	Node0x5fa9de0 -> Node0x5fa64e0;
	Node0x5fa64e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%98:\l98:                                               \l  %99 = phi float [ %67, %66 ], [ %86, %80 ], [ %75, %77 ], [ %75, %76 ]\l  %100 = phi float [ %68, %66 ], [ %91, %80 ], [ %74, %77 ], [ %74, %76 ]\l  %101 = phi float [ %69, %66 ], [ %96, %80 ], [ %73, %77 ], [ %73, %76 ]\l  %102 = phi i32 [ %70, %66 ], [ %97, %80 ], [ %71, %77 ], [ %71, %76 ]\l  %103 = add nuw nsw i32 %41, 1\l  %104 = icmp eq i32 %103, %6\l  br i1 %104, label %48, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5fa64e0:s0 -> Node0x5fa6010;
	Node0x5fa64e0:s1 -> Node0x5fa63f0;
	Node0x5fa7730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  %106 = phi i32 [ %164, %160 ], [ %40, %39 ]\l  %107 = phi i32 [ %165, %160 ], [ 0, %39 ]\l  %108 = phi float [ %163, %160 ], [ %42, %39 ]\l  %109 = phi float [ %162, %160 ], [ %43, %39 ]\l  %110 = phi float [ %161, %160 ], [ %44, %39 ]\l  %111 = phi i32 [ %166, %160 ], [ 0, %39 ]\l  br i1 %46, label %112, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5fa7730:s0 -> Node0x5fab3b0;
	Node0x5fa7730:s1 -> Node0x5fab400;
	Node0x5fab3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%112:\l112:                                              \l  %113 = add nsw i32 %107, %32\l  %114 = icmp slt i32 %113, %2\l  br i1 %114, label %115, label %133\l|{<s0>T|<s1>F}}"];
	Node0x5fab3b0:s0 -> Node0x5fab620;
	Node0x5fab3b0:s1 -> Node0x5fab400;
	Node0x5fab620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%115:\l115:                                              \l  %116 = add nsw i32 %113, %47\l  %117 = mul nsw i32 %116, 3\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds float, float addrspace(1)* %0, i64 %118\l  %120 = load float, float addrspace(1)* %119, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %121 = fadd contract float %110, %120\l  %122 = add nsw i32 %117, 1\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %0, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fadd contract float %109, %125\l  %127 = add nsw i32 %117, 2\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %131 = fadd contract float %108, %130\l  %132 = add nsw i32 %106, 1\l  br label %133\l}"];
	Node0x5fab620 -> Node0x5fab400;
	Node0x5fab400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%133:\l133:                                              \l  %134 = phi float [ %121, %115 ], [ %110, %112 ], [ %110, %105 ]\l  %135 = phi float [ %126, %115 ], [ %109, %112 ], [ %109, %105 ]\l  %136 = phi float [ %131, %115 ], [ %108, %112 ], [ %108, %105 ]\l  %137 = phi i32 [ %132, %115 ], [ %106, %112 ], [ %106, %105 ]\l  br i1 %46, label %138, label %160\l|{<s0>T|<s1>F}}"];
	Node0x5fab400:s0 -> Node0x5fac820;
	Node0x5fab400:s1 -> Node0x5fa9240;
	Node0x5fac820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%138:\l138:                                              \l  %139 = or i32 %107, 1\l  %140 = add nsw i32 %139, %32\l  %141 = icmp slt i32 %140, %2\l  br i1 %141, label %142, label %160\l|{<s0>T|<s1>F}}"];
	Node0x5fac820:s0 -> Node0x5facad0;
	Node0x5fac820:s1 -> Node0x5fa9240;
	Node0x5facad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%142:\l142:                                              \l  %143 = add nsw i32 %140, %47\l  %144 = mul nsw i32 %143, 3\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds float, float addrspace(1)* %0, i64 %145\l  %147 = load float, float addrspace(1)* %146, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = fadd contract float %134, %147\l  %149 = add nsw i32 %144, 1\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds float, float addrspace(1)* %0, i64 %150\l  %152 = load float, float addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %153 = fadd contract float %135, %152\l  %154 = add nsw i32 %144, 2\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %0, i64 %155\l  %157 = load float, float addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %158 = fadd contract float %136, %157\l  %159 = add nsw i32 %137, 1\l  br label %160\l}"];
	Node0x5facad0 -> Node0x5fa9240;
	Node0x5fa9240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%160:\l160:                                              \l  %161 = phi float [ %148, %142 ], [ %134, %138 ], [ %134, %133 ]\l  %162 = phi float [ %153, %142 ], [ %135, %138 ], [ %135, %133 ]\l  %163 = phi float [ %158, %142 ], [ %136, %138 ], [ %136, %133 ]\l  %164 = phi i32 [ %159, %142 ], [ %137, %138 ], [ %137, %133 ]\l  %165 = add nuw nsw i32 %107, 2\l  %166 = add i32 %111, 2\l  %167 = icmp eq i32 %166, %37\l  br i1 %167, label %66, label %105, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5fa9240:s0 -> Node0x5fa76a0;
	Node0x5fa9240:s1 -> Node0x5fa7730;
	Node0x5fa5ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%168:\l168:                                              \l  ret void\l}"];
}
