digraph "CFG for '_Z28PossionImageCloningIterationPKfS0_PfS1_ii' function" {
	label="CFG for '_Z28PossionImageCloningIterationPKfS0_PfS1_ii' function";

	Node0x5ee4620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %15, %4\l  %25 = add nsw i32 %24, %23\l  %26 = icmp slt i32 %15, %5\l  %27 = icmp slt i32 %23, %4\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %185\l|{<s0>T|<s1>F}}"];
	Node0x5ee4620:s0 -> Node0x5ee8200;
	Node0x5ee4620:s1 -> Node0x5ee8290;
	Node0x5ee8200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%29:\l29:                                               \l  %30 = sext i32 %25 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %33 = fcmp contract ogt float %32, 1.270000e+02\l  br i1 %33, label %34, label %185\l|{<s0>T|<s1>F}}"];
	Node0x5ee8200:s0 -> Node0x5ee9320;
	Node0x5ee8200:s1 -> Node0x5ee8290;
	Node0x5ee9320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%34:\l34:                                               \l  %35 = add nsw i32 %15, -1\l  %36 = mul nsw i32 %35, %4\l  %37 = add nsw i32 %36, %23\l  %38 = icmp sgt i32 %23, -1\l  br i1 %38, label %39, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5ee9320:s0 -> Node0x5ee9660;
	Node0x5ee9320:s1 -> Node0x5ee96b0;
	Node0x5ee9660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%39:\l39:                                               \l  %40 = icmp sgt i32 %15, 0\l  %41 = icmp sle i32 %15, %5\l  %42 = select i1 %40, i1 %41, i1 false\l  br i1 %42, label %43, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5ee9660:s0 -> Node0x5ee99f0;
	Node0x5ee9660:s1 -> Node0x5ee96b0;
	Node0x5ee99f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%43:\l43:                                               \l  %44 = sext i32 %37 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = fcmp contract ogt float %46, 1.270000e+02\l  br i1 %47, label %48, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5ee99f0:s0 -> Node0x5eea310;
	Node0x5ee99f0:s1 -> Node0x5ee96b0;
	Node0x5eea310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%48:\l48:                                               \l  %49 = mul nsw i32 %37, 3\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = fadd contract float %52, 0.000000e+00\l  %54 = add nsw i32 %49, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %2, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = fadd contract float %57, 0.000000e+00\l  %59 = add nsw i32 %49, 2\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %2, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %63 = fadd contract float %62, 0.000000e+00\l  br label %64\l}"];
	Node0x5eea310 -> Node0x5ee96b0;
	Node0x5ee96b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%64:\l64:                                               \l  %65 = phi float [ %63, %48 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %39 ],\l... [ 0.000000e+00, %34 ]\l  %66 = phi float [ %58, %48 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %39 ],\l... [ 0.000000e+00, %34 ]\l  %67 = phi float [ %53, %48 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %39 ],\l... [ 0.000000e+00, %34 ]\l  %68 = add nsw i32 %23, 1\l  %69 = add nsw i32 %24, %68\l  %70 = icmp sgt i32 %23, -2\l  br i1 %70, label %71, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5ee96b0:s0 -> Node0x5eeb4e0;
	Node0x5ee96b0:s1 -> Node0x5eeb530;
	Node0x5eeb4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%71:\l71:                                               \l  %72 = icmp slt i32 %68, %4\l  %73 = icmp sgt i32 %15, -1\l  %74 = select i1 %72, i1 %73, i1 false\l  br i1 %74, label %75, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5eeb4e0:s0 -> Node0x5eeb840;
	Node0x5eeb4e0:s1 -> Node0x5eeb530;
	Node0x5eeb840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%75:\l75:                                               \l  %76 = sext i32 %69 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %79 = fcmp contract ogt float %78, 1.270000e+02\l  br i1 %79, label %80, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5eeb840:s0 -> Node0x5eebb80;
	Node0x5eeb840:s1 -> Node0x5eeb530;
	Node0x5eebb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%80:\l80:                                               \l  %81 = mul nsw i32 %69, 3\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = fadd contract float %67, %84\l  %86 = add nsw i32 %81, 1\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %90 = fadd contract float %66, %89\l  %91 = add nsw i32 %81, 2\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = fadd contract float %65, %94\l  br label %96\l}"];
	Node0x5eebb80 -> Node0x5eeb530;
	Node0x5eeb530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%96:\l96:                                               \l  %97 = phi float [ %95, %80 ], [ %65, %75 ], [ %65, %71 ], [ %65, %64 ]\l  %98 = phi float [ %90, %80 ], [ %66, %75 ], [ %66, %71 ], [ %66, %64 ]\l  %99 = phi float [ %85, %80 ], [ %67, %75 ], [ %67, %71 ], [ %67, %64 ]\l  %100 = add nsw i32 %15, 1\l  %101 = mul nsw i32 %100, %4\l  %102 = add nsw i32 %101, %23\l  br i1 %38, label %103, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5eeb530:s0 -> Node0x5eeca40;
	Node0x5eeb530:s1 -> Node0x5eeca90;
	Node0x5eeca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%103:\l103:                                              \l  %104 = icmp sgt i32 %15, -2\l  %105 = icmp slt i32 %100, %5\l  %106 = select i1 %104, i1 %105, i1 false\l  br i1 %106, label %107, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5eeca40:s0 -> Node0x5eecda0;
	Node0x5eeca40:s1 -> Node0x5eeca90;
	Node0x5eecda0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%107:\l107:                                              \l  %108 = sext i32 %102 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  %110 = load float, float addrspace(1)* %109, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %111 = fcmp contract ogt float %110, 1.270000e+02\l  br i1 %111, label %112, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5eecda0:s0 -> Node0x5eed0b0;
	Node0x5eecda0:s1 -> Node0x5eeca90;
	Node0x5eed0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%112:\l112:                                              \l  %113 = mul nsw i32 %102, 3\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = fadd contract float %99, %116\l  %118 = add nsw i32 %113, 1\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %2, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = fadd contract float %98, %121\l  %123 = add nsw i32 %113, 2\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %2, i64 %124\l  %126 = load float, float addrspace(1)* %125, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %127 = fadd contract float %97, %126\l  br label %128\l}"];
	Node0x5eed0b0 -> Node0x5eeca90;
	Node0x5eeca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%128:\l128:                                              \l  %129 = phi float [ %127, %112 ], [ %97, %107 ], [ %97, %103 ], [ %97, %96 ]\l  %130 = phi float [ %122, %112 ], [ %98, %107 ], [ %98, %103 ], [ %98, %96 ]\l  %131 = phi float [ %117, %112 ], [ %99, %107 ], [ %99, %103 ], [ %99, %96 ]\l  %132 = add nsw i32 %23, -1\l  %133 = add nsw i32 %24, %132\l  %134 = icmp sgt i32 %23, 0\l  br i1 %134, label %135, label %160\l|{<s0>T|<s1>F}}"];
	Node0x5eeca90:s0 -> Node0x5eeb1b0;
	Node0x5eeca90:s1 -> Node0x5eee3f0;
	Node0x5eeb1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%135:\l135:                                              \l  %136 = icmp sle i32 %23, %4\l  %137 = icmp sgt i32 %15, -1\l  %138 = select i1 %136, i1 %137, i1 false\l  br i1 %138, label %139, label %160\l|{<s0>T|<s1>F}}"];
	Node0x5eeb1b0:s0 -> Node0x5eee700;
	Node0x5eeb1b0:s1 -> Node0x5eee3f0;
	Node0x5eee700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%139:\l139:                                              \l  %140 = sext i32 %133 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %1, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %143 = fcmp contract ogt float %142, 1.270000e+02\l  br i1 %143, label %144, label %160\l|{<s0>T|<s1>F}}"];
	Node0x5eee700:s0 -> Node0x5eeea10;
	Node0x5eee700:s1 -> Node0x5eee3f0;
	Node0x5eeea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%144:\l144:                                              \l  %145 = mul nsw i32 %133, 3\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %2, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %149 = fadd contract float %131, %148\l  %150 = add nsw i32 %145, 1\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds float, float addrspace(1)* %2, i64 %151\l  %153 = load float, float addrspace(1)* %152, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = fadd contract float %130, %153\l  %155 = add nsw i32 %145, 2\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %2, i64 %156\l  %158 = load float, float addrspace(1)* %157, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %159 = fadd contract float %129, %158\l  br label %160\l}"];
	Node0x5eeea10 -> Node0x5eee3f0;
	Node0x5eee3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%160:\l160:                                              \l  %161 = phi float [ %159, %144 ], [ %129, %139 ], [ %129, %135 ], [ %129,\l... %128 ]\l  %162 = phi float [ %154, %144 ], [ %130, %139 ], [ %130, %135 ], [ %130,\l... %128 ]\l  %163 = phi float [ %149, %144 ], [ %131, %139 ], [ %131, %135 ], [ %131,\l... %128 ]\l  %164 = mul nsw i32 %25, 3\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %0, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = fmul contract float %163, 2.500000e-01\l  %169 = fadd contract float %168, %167\l  %170 = getelementptr inbounds float, float addrspace(1)* %3, i64 %165\l  store float %169, float addrspace(1)* %170, align 4, !tbaa !7\l  %171 = add nsw i32 %164, 1\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds float, float addrspace(1)* %0, i64 %172\l  %174 = load float, float addrspace(1)* %173, align 4, !tbaa !7\l  %175 = fmul contract float %162, 2.500000e-01\l  %176 = fadd contract float %175, %174\l  %177 = getelementptr inbounds float, float addrspace(1)* %3, i64 %172\l  store float %176, float addrspace(1)* %177, align 4, !tbaa !7\l  %178 = add nsw i32 %164, 2\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %0, i64 %179\l  %181 = load float, float addrspace(1)* %180, align 4, !tbaa !7\l  %182 = fmul contract float %161, 2.500000e-01\l  %183 = fadd contract float %182, %181\l  %184 = getelementptr inbounds float, float addrspace(1)* %3, i64 %179\l  store float %183, float addrspace(1)* %184, align 4, !tbaa !7\l  br label %185\l}"];
	Node0x5eee3f0 -> Node0x5ee8290;
	Node0x5ee8290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%185:\l185:                                              \l  ret void\l}"];
}
