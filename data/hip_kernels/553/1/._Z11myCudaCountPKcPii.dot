digraph "CFG for '_Z11myCudaCountPKcPii' function" {
	label="CFG for '_Z11myCudaCountPKcPii' function";

	Node0x4cd1f60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = icmp eq i32 %5, 1\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %4, %11\l  %13 = add i32 %12, 128\l  %14 = select i1 %6, i32 %13, i32 %12\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add nsw i32 %14, %15\l  %17 = shl nsw i32 %16, 2\l  %18 = icmp slt i32 %17, %2\l  br i1 %18, label %19, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4cd1f60:s0 -> Node0x4cd43c0;
	Node0x4cd1f60:s1 -> Node0x4cd4450;
	Node0x4cd43c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%19:\l19:                                               \l  %20 = sext i32 %17 to i64\l  %21 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %20\l  %22 = load i8, i8 addrspace(1)* %21, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %23 = icmp sgt i8 %22, 32\l  %24 = add nuw nsw i32 %17, 1\l  %25 = icmp slt i32 %24, %2\l  br i1 %25, label %26, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4cd43c0:s0 -> Node0x4cd5080;
	Node0x4cd43c0:s1 -> Node0x4cd5110;
	Node0x4cd5080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%26:\l26:                                               \l  %27 = select i1 %23, i32 2, i32 1\l  %28 = sext i32 %24 to i64\l  %29 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %28\l  %30 = load i8, i8 addrspace(1)* %29, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %31 = icmp slt i8 %30, 33\l  %32 = select i1 %31, i32 0, i32 %27\l  br label %33\l}"];
	Node0x4cd5080 -> Node0x4cd5110;
	Node0x4cd5110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%33:\l33:                                               \l  %34 = phi i32 [ %32, %26 ], [ 0, %19 ]\l  %35 = add nuw nsw i32 %17, 2\l  %36 = icmp slt i32 %35, %2\l  br i1 %36, label %37, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4cd5110:s0 -> Node0x4cd42e0;
	Node0x4cd5110:s1 -> Node0x4cd5fc0;
	Node0x4cd42e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%37:\l37:                                               \l  %38 = add nuw nsw i32 %34, 1\l  %39 = sext i32 %35 to i64\l  %40 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %39\l  %41 = load i8, i8 addrspace(1)* %40, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %42 = icmp slt i8 %41, 33\l  %43 = select i1 %42, i32 0, i32 %38\l  br label %44\l}"];
	Node0x4cd42e0 -> Node0x4cd5fc0;
	Node0x4cd5fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%44:\l44:                                               \l  %45 = phi i32 [ %43, %37 ], [ 0, %33 ]\l  %46 = add nuw nsw i32 %17, 3\l  %47 = icmp slt i32 %46, %2\l  br i1 %47, label %48, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4cd5fc0:s0 -> Node0x4cd66c0;
	Node0x4cd5fc0:s1 -> Node0x4cd6710;
	Node0x4cd66c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%48:\l48:                                               \l  %49 = add nuw nsw i32 %45, 1\l  %50 = sext i32 %46 to i64\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %50\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = icmp slt i8 %52, 33\l  %54 = select i1 %53, i32 0, i32 %49\l  br label %55\l}"];
	Node0x4cd66c0 -> Node0x4cd6710;
	Node0x4cd6710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%55:\l55:                                               \l  %56 = phi i32 [ %54, %48 ], [ 0, %44 ]\l  %57 = sub nsw i32 3, %56\l  %58 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ11myCudaCountPKcPiiE4iBIT, i32 0, i32 %15\l  store i32 %57, i32 addrspace(3)* %58, align 4, !tbaa !10\l  %59 = lshr i32 %56, 2\l  %60 = and i32 %59, 63\l  %61 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 0\l  store i32 %60, i32 addrspace(3)* %61, align 16, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = load i32, i32 addrspace(3)* %61, align 16, !tbaa !10\l  %63 = add nsw i32 %15, -1\l  %64 = icmp eq i32 %15, 0\l  br i1 %64, label %73, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4cd6710:s0 -> Node0x4cd5c30;
	Node0x4cd6710:s1 -> Node0x4cd5cc0;
	Node0x4cd5cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%65:\l65:                                               \l  %66 = icmp eq i32 %62, 0\l  br i1 %66, label %73, label %67\l|{<s0>T|<s1>F}}"];
	Node0x4cd5cc0:s0 -> Node0x4cd5c30;
	Node0x4cd5cc0:s1 -> Node0x4cd81b0;
	Node0x4cd81b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%67:\l67:                                               \l  %68 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %63, i32 0\l  %69 = load i32, i32 addrspace(3)* %68, align 16, !tbaa !10\l  %70 = icmp eq i32 %69, 0\l  %71 = add nsw i32 %69, %62\l  %72 = select i1 %70, i32 0, i32 %71\l  br label %73\l}"];
	Node0x4cd81b0 -> Node0x4cd5c30;
	Node0x4cd5c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%73:\l73:                                               \l  %74 = phi i32 [ 0, %65 ], [ %62, %55 ], [ %72, %67 ]\l  %75 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 1\l  store i32 %74, i32 addrspace(3)* %75, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %76 = add nsw i32 %15, -2\l  %77 = icmp ugt i32 %15, 1\l  br i1 %77, label %78, label %86\l|{<s0>T|<s1>F}}"];
	Node0x4cd5c30:s0 -> Node0x4cd8b10;
	Node0x4cd5c30:s1 -> Node0x4cd8b60;
	Node0x4cd8b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%78:\l78:                                               \l  %79 = icmp eq i32 %74, 0\l  br i1 %79, label %86, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4cd8b10:s0 -> Node0x4cd8b60;
	Node0x4cd8b10:s1 -> Node0x4cd8cf0;
	Node0x4cd8cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%80:\l80:                                               \l  %81 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %76, i32 1\l  %82 = load i32, i32 addrspace(3)* %81, align 4, !tbaa !10\l  %83 = icmp eq i32 %82, 0\l  %84 = add nsw i32 %82, %74\l  %85 = select i1 %83, i32 0, i32 %84\l  br label %86\l}"];
	Node0x4cd8cf0 -> Node0x4cd8b60;
	Node0x4cd8b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%86:\l86:                                               \l  %87 = phi i32 [ %74, %73 ], [ 0, %78 ], [ %85, %80 ]\l  %88 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 2\l  store i32 %87, i32 addrspace(3)* %88, align 8, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %89 = add nsw i32 %15, -4\l  %90 = icmp ugt i32 %15, 3\l  br i1 %90, label %91, label %99\l|{<s0>T|<s1>F}}"];
	Node0x4cd8b60:s0 -> Node0x4cd9680;
	Node0x4cd8b60:s1 -> Node0x4cd96d0;
	Node0x4cd9680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%91:\l91:                                               \l  %92 = icmp eq i32 %87, 0\l  br i1 %92, label %99, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4cd9680:s0 -> Node0x4cd96d0;
	Node0x4cd9680:s1 -> Node0x4cd9860;
	Node0x4cd9860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%93:\l93:                                               \l  %94 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %89, i32 2\l  %95 = load i32, i32 addrspace(3)* %94, align 8, !tbaa !10\l  %96 = icmp eq i32 %95, 0\l  %97 = add nsw i32 %95, %87\l  %98 = select i1 %96, i32 0, i32 %97\l  br label %99\l}"];
	Node0x4cd9860 -> Node0x4cd96d0;
	Node0x4cd96d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%99:\l99:                                               \l  %100 = phi i32 [ %87, %86 ], [ 0, %91 ], [ %98, %93 ]\l  %101 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 3\l  store i32 %100, i32 addrspace(3)* %101, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = add nsw i32 %15, -8\l  %103 = icmp ugt i32 %15, 7\l  br i1 %103, label %104, label %112\l|{<s0>T|<s1>F}}"];
	Node0x4cd96d0:s0 -> Node0x4cda220;
	Node0x4cd96d0:s1 -> Node0x4cda270;
	Node0x4cda220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%104:\l104:                                              \l  %105 = icmp eq i32 %100, 0\l  br i1 %105, label %112, label %106\l|{<s0>T|<s1>F}}"];
	Node0x4cda220:s0 -> Node0x4cda270;
	Node0x4cda220:s1 -> Node0x4cda400;
	Node0x4cda400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%106:\l106:                                              \l  %107 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %102, i32 3\l  %108 = load i32, i32 addrspace(3)* %107, align 4, !tbaa !10\l  %109 = icmp eq i32 %108, 0\l  %110 = add nsw i32 %108, %100\l  %111 = select i1 %109, i32 0, i32 %110\l  br label %112\l}"];
	Node0x4cda400 -> Node0x4cda270;
	Node0x4cda270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%112:\l112:                                              \l  %113 = phi i32 [ %100, %99 ], [ 0, %104 ], [ %111, %106 ]\l  %114 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 4\l  store i32 %113, i32 addrspace(3)* %114, align 16, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %115 = add nsw i32 %15, -16\l  %116 = icmp ugt i32 %15, 15\l  br i1 %116, label %117, label %125\l|{<s0>T|<s1>F}}"];
	Node0x4cda270:s0 -> Node0x4cdadf0;
	Node0x4cda270:s1 -> Node0x4cdae40;
	Node0x4cdadf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%117:\l117:                                              \l  %118 = icmp eq i32 %113, 0\l  br i1 %118, label %125, label %119\l|{<s0>T|<s1>F}}"];
	Node0x4cdadf0:s0 -> Node0x4cdae40;
	Node0x4cdadf0:s1 -> Node0x4cdafd0;
	Node0x4cdafd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%119:\l119:                                              \l  %120 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %115, i32 4\l  %121 = load i32, i32 addrspace(3)* %120, align 16, !tbaa !10\l  %122 = icmp eq i32 %121, 0\l  %123 = add nsw i32 %121, %113\l  %124 = select i1 %122, i32 0, i32 %123\l  br label %125\l}"];
	Node0x4cdafd0 -> Node0x4cdae40;
	Node0x4cdae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%125:\l125:                                              \l  %126 = phi i32 [ %113, %112 ], [ 0, %117 ], [ %124, %119 ]\l  %127 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 5\l  store i32 %126, i32 addrspace(3)* %127, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %128 = add nsw i32 %15, -32\l  %129 = icmp ugt i32 %15, 31\l  br i1 %129, label %130, label %138\l|{<s0>T|<s1>F}}"];
	Node0x4cdae40:s0 -> Node0x4cd7da0;
	Node0x4cdae40:s1 -> Node0x4cd7df0;
	Node0x4cd7da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%130:\l130:                                              \l  %131 = icmp eq i32 %126, 0\l  br i1 %131, label %138, label %132\l|{<s0>T|<s1>F}}"];
	Node0x4cd7da0:s0 -> Node0x4cd7df0;
	Node0x4cd7da0:s1 -> Node0x4cd7fc0;
	Node0x4cd7fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %128, i32 5\l  %134 = load i32, i32 addrspace(3)* %133, align 4, !tbaa !10\l  %135 = icmp eq i32 %134, 0\l  %136 = add nsw i32 %134, %126\l  %137 = select i1 %135, i32 0, i32 %136\l  br label %138\l}"];
	Node0x4cd7fc0 -> Node0x4cd7df0;
	Node0x4cd7df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%138:\l138:                                              \l  %139 = phi i32 [ %126, %125 ], [ 0, %130 ], [ %137, %132 ]\l  %140 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 6\l  store i32 %139, i32 addrspace(3)* %140, align 8, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %141 = add nsw i32 %15, -64\l  %142 = icmp ugt i32 %15, 63\l  br i1 %142, label %143, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4cd7df0:s0 -> Node0x4cdc970;
	Node0x4cd7df0:s1 -> Node0x4cdc9c0;
	Node0x4cdc970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%143:\l143:                                              \l  %144 = icmp eq i32 %139, 0\l  br i1 %144, label %151, label %145\l|{<s0>T|<s1>F}}"];
	Node0x4cdc970:s0 -> Node0x4cdc9c0;
	Node0x4cdc970:s1 -> Node0x4cdcb50;
	Node0x4cdcb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%145:\l145:                                              \l  %146 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %141, i32 6\l  %147 = load i32, i32 addrspace(3)* %146, align 8, !tbaa !10\l  %148 = icmp eq i32 %147, 0\l  %149 = add nsw i32 %147, %139\l  %150 = select i1 %148, i32 0, i32 %149\l  br label %151\l}"];
	Node0x4cdcb50 -> Node0x4cdc9c0;
	Node0x4cdc9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%151:\l151:                                              \l  %152 = phi i32 [ %139, %138 ], [ 0, %143 ], [ %150, %145 ]\l  %153 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %15, i32 7\l  store i32 %152, i32 addrspace(3)* %153, align 4, !tbaa !10\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %154 = icmp eq i32 %15, 0\l  br i1 %154, label %161, label %155\l|{<s0>T|<s1>F}}"];
	Node0x4cdc9c0:s0 -> Node0x4cdd450;
	Node0x4cdc9c0:s1 -> Node0x4cdd4a0;
	Node0x4cdd4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%155:\l155:                                              \l  %156 = add nsw i32 %15, -1\l  %157 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %156, i32 7\l  %158 = load i32, i32 addrspace(3)* %157, align 4, !tbaa !10\l  %159 = sub nsw i32 %156, %158\l  %160 = icmp sgt i32 %159, -1\l  br i1 %160, label %164, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cdd4a0:s0 -> Node0x4cdd8a0;
	Node0x4cdd4a0:s1 -> Node0x4cdd450;
	Node0x4cdd450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%161:\l161:                                              \l  %162 = phi i32 [ -1, %151 ], [ %159, %155 ], [ %167, %164 ], [ %172, %169 ],\l... [ %177, %174 ], [ %182, %179 ], [ %187, %184 ], [ %192, %189 ], [ %197, %194 ]\l  %163 = phi i1 [ false, %151 ], [ %160, %155 ], [ %168, %164 ], [ %173, %169\l... ], [ %178, %174 ], [ %183, %179 ], [ %188, %184 ], [ %193, %189 ], [ %198,\l... %194 ]\l  br i1 %163, label %199, label %205\l|{<s0>T|<s1>F}}"];
	Node0x4cdd450:s0 -> Node0x4cde7a0;
	Node0x4cdd450:s1 -> Node0x4cde830;
	Node0x4cdd8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%164:\l164:                                              \l  %165 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %159, i32 6\l  %166 = load i32, i32 addrspace(3)* %165, align 8, !tbaa !10\l  %167 = sub nsw i32 %159, %166\l  %168 = icmp sgt i32 %167, -1\l  br i1 %168, label %169, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cdd8a0:s0 -> Node0x4cddb50;
	Node0x4cdd8a0:s1 -> Node0x4cdd450;
	Node0x4cddb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%169:\l169:                                              \l  %170 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %167, i32 5\l  %171 = load i32, i32 addrspace(3)* %170, align 4, !tbaa !10\l  %172 = sub nsw i32 %167, %171\l  %173 = icmp sgt i32 %172, -1\l  br i1 %173, label %174, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cddb50:s0 -> Node0x4cddc50;
	Node0x4cddb50:s1 -> Node0x4cdd450;
	Node0x4cddc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%174:\l174:                                              \l  %175 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %172, i32 4\l  %176 = load i32, i32 addrspace(3)* %175, align 16, !tbaa !10\l  %177 = sub nsw i32 %172, %176\l  %178 = icmp sgt i32 %177, -1\l  br i1 %178, label %179, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cddc50:s0 -> Node0x4cddd50;
	Node0x4cddc50:s1 -> Node0x4cdd450;
	Node0x4cddd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%179:\l179:                                              \l  %180 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %177, i32 3\l  %181 = load i32, i32 addrspace(3)* %180, align 4, !tbaa !10\l  %182 = sub nsw i32 %177, %181\l  %183 = icmp sgt i32 %182, -1\l  br i1 %183, label %184, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cddd50:s0 -> Node0x4cdde50;
	Node0x4cddd50:s1 -> Node0x4cdd450;
	Node0x4cdde50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%184:\l184:                                              \l  %185 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %182, i32 2\l  %186 = load i32, i32 addrspace(3)* %185, align 8, !tbaa !10\l  %187 = sub nsw i32 %182, %186\l  %188 = icmp sgt i32 %187, -1\l  br i1 %188, label %189, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cdde50:s0 -> Node0x4cddf50;
	Node0x4cdde50:s1 -> Node0x4cdd450;
	Node0x4cddf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%189:\l189:                                              \l  %190 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %187, i32 1\l  %191 = load i32, i32 addrspace(3)* %190, align 4, !tbaa !10\l  %192 = sub nsw i32 %187, %191\l  %193 = icmp sgt i32 %192, -1\l  br i1 %193, label %194, label %161, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4cddf50:s0 -> Node0x4cde050;
	Node0x4cddf50:s1 -> Node0x4cdd450;
	Node0x4cde050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%194:\l194:                                              \l  %195 = getelementptr inbounds [256 x [8 x i32]], [256 x [8 x i32]]\l... addrspace(3)* @_ZZ11myCudaCountPKcPiiE3BIT, i32 0, i32 %192, i32 0\l  %196 = load i32, i32 addrspace(3)* %195, align 16, !tbaa !10\l  %197 = sub nsw i32 %192, %196\l  %198 = icmp sgt i32 %197, -1\l  br label %161\l}"];
	Node0x4cde050 -> Node0x4cdd450;
	Node0x4cde7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%199:\l199:                                              \l  %200 = add nsw i32 %162, %14\l  %201 = shl nsw i32 %200, 2\l  %202 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ11myCudaCountPKcPiiE4iBIT, i32 0, i32 %162\l  %203 = load i32, i32 addrspace(3)* %202, align 4, !tbaa !10\l  %204 = add nsw i32 %203, %201\l  br label %205\l}"];
	Node0x4cde7a0 -> Node0x4cde830;
	Node0x4cde830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%205:\l205:                                              \l  %206 = phi i32 [ %204, %199 ], [ %162, %161 ]\l  %207 = icmp ugt i32 %15, 127\l  %208 = icmp slt i32 %16, 128\l  %209 = select i1 %207, i1 true, i1 %208\l  br i1 %209, label %210, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4cde830:s0 -> Node0x4ce0b10;
	Node0x4cde830:s1 -> Node0x4cd4450;
	Node0x4ce0b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%210:\l210:                                              \l  %211 = select i1 %23, i32 %206, i32 %17\l  %212 = sub nsw i32 %17, %211\l  %213 = sext i32 %17 to i64\l  %214 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %213\l  store i32 %212, i32 addrspace(1)* %214, align 4, !tbaa !10\l  br i1 %25, label %215, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4ce0b10:s0 -> Node0x4ce0ef0;
	Node0x4ce0b10:s1 -> Node0x4cd4450;
	Node0x4ce0ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%215:\l215:                                              \l  %216 = icmp eq i32 %34, 0\l  %217 = select i1 %216, i32 %24, i32 %211\l  %218 = sub nsw i32 %24, %217\l  %219 = sext i32 %24 to i64\l  %220 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %219\l  store i32 %218, i32 addrspace(1)* %220, align 4, !tbaa !10\l  br i1 %36, label %221, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4ce0ef0:s0 -> Node0x4ce1360;
	Node0x4ce0ef0:s1 -> Node0x4cd4450;
	Node0x4ce1360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%221:\l221:                                              \l  %222 = icmp eq i32 %45, 0\l  %223 = select i1 %222, i32 %35, i32 %217\l  %224 = sub nsw i32 %35, %223\l  %225 = sext i32 %35 to i64\l  %226 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %225\l  store i32 %224, i32 addrspace(1)* %226, align 4, !tbaa !10\l  br i1 %47, label %227, label %233\l|{<s0>T|<s1>F}}"];
	Node0x4ce1360:s0 -> Node0x4ce17d0;
	Node0x4ce1360:s1 -> Node0x4cd4450;
	Node0x4ce17d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%227:\l227:                                              \l  %228 = icmp eq i32 %56, 0\l  %229 = sub i32 %46, %223\l  %230 = select i1 %228, i32 0, i32 %229\l  %231 = sext i32 %46 to i64\l  %232 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %231\l  store i32 %230, i32 addrspace(1)* %232, align 4, !tbaa !10\l  br label %233\l}"];
	Node0x4ce17d0 -> Node0x4cd4450;
	Node0x4cd4450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%233:\l233:                                              \l  ret void\l}"];
}
