digraph "CFG for '_Z22binaryentropyXsigmoidYiPKdS0_Pd' function" {
	label="CFG for '_Z22binaryentropyXsigmoidYiPKdS0_Pd' function";

	Node0x60db430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %304\l|{<s0>T|<s1>F}}"];
	Node0x60db430:s0 -> Node0x60db4c0;
	Node0x60db430:s1 -> Node0x60dd400;
	Node0x60db4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds double, double addrspace(1)* %1, i64 %16\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %19 = tail call double @llvm.amdgcn.frexp.mant.f64(double %18)\l  %20 = fcmp olt double %19, 0x3FE5555555555555\l  %21 = zext i1 %20 to i32\l  %22 = tail call double @llvm.amdgcn.ldexp.f64(double %19, i32 %21)\l  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %18)\l  %24 = sub nsw i32 %23, %21\l  %25 = fadd double %22, -1.000000e+00\l  %26 = fadd double %22, 1.000000e+00\l  %27 = fadd double %26, -1.000000e+00\l  %28 = fsub double %22, %27\l  %29 = tail call double @llvm.amdgcn.rcp.f64(double %26)\l  %30 = fneg double %26\l  %31 = tail call double @llvm.fma.f64(double %30, double %29, double\l... 1.000000e+00)\l  %32 = tail call double @llvm.fma.f64(double %31, double %29, double %29)\l  %33 = tail call double @llvm.fma.f64(double %30, double %32, double\l... 1.000000e+00)\l  %34 = tail call double @llvm.fma.f64(double %33, double %32, double %32)\l  %35 = fmul double %25, %34\l  %36 = fmul double %26, %35\l  %37 = fneg double %36\l  %38 = tail call double @llvm.fma.f64(double %35, double %26, double %37)\l  %39 = tail call double @llvm.fma.f64(double %35, double %28, double %38)\l  %40 = fadd double %36, %39\l  %41 = fsub double %40, %36\l  %42 = fsub double %39, %41\l  %43 = fsub double %25, %40\l  %44 = fsub double %25, %43\l  %45 = fsub double %44, %40\l  %46 = fsub double %45, %42\l  %47 = fadd double %43, %46\l  %48 = fmul double %34, %47\l  %49 = fadd double %35, %48\l  %50 = fsub double %49, %35\l  %51 = fsub double %48, %50\l  %52 = fmul double %49, %49\l  %53 = tail call double @llvm.fma.f64(double %52, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %54 = tail call double @llvm.fma.f64(double %52, double %53, double\l... 0x3FC7474DD7F4DF2E)\l  %55 = tail call double @llvm.fma.f64(double %52, double %54, double\l... 0x3FCC71C016291751)\l  %56 = tail call double @llvm.fma.f64(double %52, double %55, double\l... 0x3FD249249B27ACF1)\l  %57 = tail call double @llvm.fma.f64(double %52, double %56, double\l... 0x3FD99999998EF7B6)\l  %58 = tail call double @llvm.fma.f64(double %52, double %57, double\l... 0x3FE5555555555780)\l  %59 = tail call double @llvm.amdgcn.ldexp.f64(double %49, i32 1)\l  %60 = tail call double @llvm.amdgcn.ldexp.f64(double %51, i32 1)\l  %61 = fmul double %49, %52\l  %62 = fmul double %61, %58\l  %63 = fadd double %59, %62\l  %64 = fsub double %63, %59\l  %65 = fsub double %62, %64\l  %66 = fadd double %60, %65\l  %67 = fadd double %63, %66\l  %68 = fsub double %67, %63\l  %69 = fsub double %66, %68\l  %70 = sitofp i32 %24 to double\l  %71 = fmul double %70, 0x3FE62E42FEFA39EF\l  %72 = fneg double %71\l  %73 = tail call double @llvm.fma.f64(double %70, double 0x3FE62E42FEFA39EF,\l... double %72)\l  %74 = tail call double @llvm.fma.f64(double %70, double 0x3C7ABC9E3B39803F,\l... double %73)\l  %75 = fadd double %71, %74\l  %76 = fsub double %75, %71\l  %77 = fsub double %74, %76\l  %78 = fadd double %75, %67\l  %79 = fsub double %78, %75\l  %80 = fsub double %78, %79\l  %81 = fsub double %75, %80\l  %82 = fsub double %67, %79\l  %83 = fadd double %82, %81\l  %84 = fadd double %77, %69\l  %85 = fsub double %84, %77\l  %86 = fsub double %84, %85\l  %87 = fsub double %77, %86\l  %88 = fsub double %69, %85\l  %89 = fadd double %88, %87\l  %90 = fadd double %84, %83\l  %91 = fadd double %78, %90\l  %92 = fsub double %91, %78\l  %93 = fsub double %90, %92\l  %94 = fadd double %89, %93\l  %95 = fadd double %91, %94\l  %96 = tail call double @llvm.fabs.f64(double %18) #3\l  %97 = fcmp oeq double %96, 0x7FF0000000000000\l  %98 = select i1 %97, double %18, double %95\l  %99 = fcmp olt double %18, 0.000000e+00\l  %100 = select i1 %99, double 0x7FF8000000000000, double %98\l  %101 = fcmp oeq double %18, 0.000000e+00\l  %102 = select i1 %101, double 0xFFF0000000000000, double %100\l  %103 = fmul contract double %18, %102\l  %104 = fsub contract double 1.000000e+00, %18\l  %105 = tail call double @llvm.amdgcn.frexp.mant.f64(double %104)\l  %106 = fcmp olt double %105, 0x3FE5555555555555\l  %107 = zext i1 %106 to i32\l  %108 = tail call double @llvm.amdgcn.ldexp.f64(double %105, i32 %107)\l  %109 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %104)\l  %110 = sub nsw i32 %109, %107\l  %111 = fadd double %108, -1.000000e+00\l  %112 = fadd double %108, 1.000000e+00\l  %113 = fadd double %112, -1.000000e+00\l  %114 = fsub double %108, %113\l  %115 = tail call double @llvm.amdgcn.rcp.f64(double %112)\l  %116 = fneg double %112\l  %117 = tail call double @llvm.fma.f64(double %116, double %115, double\l... 1.000000e+00)\l  %118 = tail call double @llvm.fma.f64(double %117, double %115, double %115)\l  %119 = tail call double @llvm.fma.f64(double %116, double %118, double\l... 1.000000e+00)\l  %120 = tail call double @llvm.fma.f64(double %119, double %118, double %118)\l  %121 = fmul double %111, %120\l  %122 = fmul double %112, %121\l  %123 = fneg double %122\l  %124 = tail call double @llvm.fma.f64(double %121, double %112, double %123)\l  %125 = tail call double @llvm.fma.f64(double %121, double %114, double %124)\l  %126 = fadd double %122, %125\l  %127 = fsub double %126, %122\l  %128 = fsub double %125, %127\l  %129 = fsub double %111, %126\l  %130 = fsub double %111, %129\l  %131 = fsub double %130, %126\l  %132 = fsub double %131, %128\l  %133 = fadd double %129, %132\l  %134 = fmul double %120, %133\l  %135 = fadd double %121, %134\l  %136 = fsub double %135, %121\l  %137 = fsub double %134, %136\l  %138 = fmul double %135, %135\l  %139 = tail call double @llvm.fma.f64(double %138, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %140 = tail call double @llvm.fma.f64(double %138, double %139, double\l... 0x3FC7474DD7F4DF2E)\l  %141 = tail call double @llvm.fma.f64(double %138, double %140, double\l... 0x3FCC71C016291751)\l  %142 = tail call double @llvm.fma.f64(double %138, double %141, double\l... 0x3FD249249B27ACF1)\l  %143 = tail call double @llvm.fma.f64(double %138, double %142, double\l... 0x3FD99999998EF7B6)\l  %144 = tail call double @llvm.fma.f64(double %138, double %143, double\l... 0x3FE5555555555780)\l  %145 = tail call double @llvm.amdgcn.ldexp.f64(double %135, i32 1)\l  %146 = tail call double @llvm.amdgcn.ldexp.f64(double %137, i32 1)\l  %147 = fmul double %135, %138\l  %148 = fmul double %147, %144\l  %149 = fadd double %145, %148\l  %150 = fsub double %149, %145\l  %151 = fsub double %148, %150\l  %152 = fadd double %146, %151\l  %153 = fadd double %149, %152\l  %154 = fsub double %153, %149\l  %155 = fsub double %152, %154\l  %156 = sitofp i32 %110 to double\l  %157 = fmul double %156, 0x3FE62E42FEFA39EF\l  %158 = fneg double %157\l  %159 = tail call double @llvm.fma.f64(double %156, double\l... 0x3FE62E42FEFA39EF, double %158)\l  %160 = tail call double @llvm.fma.f64(double %156, double\l... 0x3C7ABC9E3B39803F, double %159)\l  %161 = fadd double %157, %160\l  %162 = fsub double %161, %157\l  %163 = fsub double %160, %162\l  %164 = fadd double %161, %153\l  %165 = fsub double %164, %161\l  %166 = fsub double %164, %165\l  %167 = fsub double %161, %166\l  %168 = fsub double %153, %165\l  %169 = fadd double %168, %167\l  %170 = fadd double %163, %155\l  %171 = fsub double %170, %163\l  %172 = fsub double %170, %171\l  %173 = fsub double %163, %172\l  %174 = fsub double %155, %171\l  %175 = fadd double %174, %173\l  %176 = fadd double %170, %169\l  %177 = fadd double %164, %176\l  %178 = fsub double %177, %164\l  %179 = fsub double %176, %178\l  %180 = fadd double %175, %179\l  %181 = fadd double %177, %180\l  %182 = tail call double @llvm.fabs.f64(double %104) #3\l  %183 = fcmp oeq double %182, 0x7FF0000000000000\l  %184 = select i1 %183, double %104, double %181\l  %185 = fcmp olt double %104, 0.000000e+00\l  %186 = select i1 %185, double 0x7FF8000000000000, double %184\l  %187 = fcmp oeq double %104, 0.000000e+00\l  %188 = select i1 %187, double 0xFFF0000000000000, double %186\l  %189 = fmul contract double %104, %188\l  %190 = fadd contract double %103, %189\l  %191 = getelementptr inbounds double, double addrspace(1)* %2, i64 %16\l  %192 = load double, double addrspace(1)* %191, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %193 = fmul contract double %18, %192\l  %194 = fsub contract double %190, %193\l  %195 = fmul double %192, 0x3FF71547652B82FE\l  %196 = tail call double @llvm.rint.f64(double %195)\l  %197 = fneg double %196\l  %198 = tail call double @llvm.fma.f64(double %197, double\l... 0x3FE62E42FEFA39EF, double %192)\l  %199 = tail call double @llvm.fma.f64(double %197, double\l... 0x3C7ABC9E3B39803F, double %198)\l  %200 = tail call double @llvm.fma.f64(double %199, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %201 = tail call double @llvm.fma.f64(double %199, double %200, double\l... 0x3EC71DEE623FDE64)\l  %202 = tail call double @llvm.fma.f64(double %199, double %201, double\l... 0x3EFA01997C89E6B0)\l  %203 = tail call double @llvm.fma.f64(double %199, double %202, double\l... 0x3F2A01A014761F6E)\l  %204 = tail call double @llvm.fma.f64(double %199, double %203, double\l... 0x3F56C16C1852B7B0)\l  %205 = tail call double @llvm.fma.f64(double %199, double %204, double\l... 0x3F81111111122322)\l  %206 = tail call double @llvm.fma.f64(double %199, double %205, double\l... 0x3FA55555555502A1)\l  %207 = tail call double @llvm.fma.f64(double %199, double %206, double\l... 0x3FC5555555555511)\l  %208 = tail call double @llvm.fma.f64(double %199, double %207, double\l... 0x3FE000000000000B)\l  %209 = tail call double @llvm.fma.f64(double %199, double %208, double\l... 1.000000e+00)\l  %210 = tail call double @llvm.fma.f64(double %199, double %209, double\l... 1.000000e+00)\l  %211 = fptosi double %196 to i32\l  %212 = tail call double @llvm.amdgcn.ldexp.f64(double %210, i32 %211)\l  %213 = fcmp ogt double %192, 1.024000e+03\l  %214 = fcmp olt double %192, -1.075000e+03\l  %215 = fadd contract double %212, 1.000000e+00\l  %216 = select i1 %213, double 0x7FF0000000000000, double %215\l  %217 = select i1 %214, double 1.000000e+00, double %216\l  %218 = tail call double @llvm.amdgcn.frexp.mant.f64(double %217)\l  %219 = fcmp olt double %218, 0x3FE5555555555555\l  %220 = zext i1 %219 to i32\l  %221 = tail call double @llvm.amdgcn.ldexp.f64(double %218, i32 %220)\l  %222 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %217)\l  %223 = sub nsw i32 %222, %220\l  %224 = fadd double %221, -1.000000e+00\l  %225 = fadd double %221, 1.000000e+00\l  %226 = fadd double %225, -1.000000e+00\l  %227 = fsub double %221, %226\l  %228 = tail call double @llvm.amdgcn.rcp.f64(double %225)\l  %229 = fneg double %225\l  %230 = tail call double @llvm.fma.f64(double %229, double %228, double\l... 1.000000e+00)\l  %231 = tail call double @llvm.fma.f64(double %230, double %228, double %228)\l  %232 = tail call double @llvm.fma.f64(double %229, double %231, double\l... 1.000000e+00)\l  %233 = tail call double @llvm.fma.f64(double %232, double %231, double %231)\l  %234 = fmul double %224, %233\l  %235 = fmul double %225, %234\l  %236 = fneg double %235\l  %237 = tail call double @llvm.fma.f64(double %234, double %225, double %236)\l  %238 = tail call double @llvm.fma.f64(double %234, double %227, double %237)\l  %239 = fadd double %235, %238\l  %240 = fsub double %239, %235\l  %241 = fsub double %238, %240\l  %242 = fsub double %224, %239\l  %243 = fsub double %224, %242\l  %244 = fsub double %243, %239\l  %245 = fsub double %244, %241\l  %246 = fadd double %242, %245\l  %247 = fmul double %233, %246\l  %248 = fadd double %234, %247\l  %249 = fsub double %248, %234\l  %250 = fsub double %247, %249\l  %251 = fmul double %248, %248\l  %252 = tail call double @llvm.fma.f64(double %251, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %253 = tail call double @llvm.fma.f64(double %251, double %252, double\l... 0x3FC7474DD7F4DF2E)\l  %254 = tail call double @llvm.fma.f64(double %251, double %253, double\l... 0x3FCC71C016291751)\l  %255 = tail call double @llvm.fma.f64(double %251, double %254, double\l... 0x3FD249249B27ACF1)\l  %256 = tail call double @llvm.fma.f64(double %251, double %255, double\l... 0x3FD99999998EF7B6)\l  %257 = tail call double @llvm.fma.f64(double %251, double %256, double\l... 0x3FE5555555555780)\l  %258 = tail call double @llvm.amdgcn.ldexp.f64(double %248, i32 1)\l  %259 = tail call double @llvm.amdgcn.ldexp.f64(double %250, i32 1)\l  %260 = fmul double %248, %251\l  %261 = fmul double %260, %257\l  %262 = fadd double %258, %261\l  %263 = fsub double %262, %258\l  %264 = fsub double %261, %263\l  %265 = fadd double %259, %264\l  %266 = fadd double %262, %265\l  %267 = fsub double %266, %262\l  %268 = fsub double %265, %267\l  %269 = sitofp i32 %223 to double\l  %270 = fmul double %269, 0x3FE62E42FEFA39EF\l  %271 = fneg double %270\l  %272 = tail call double @llvm.fma.f64(double %269, double\l... 0x3FE62E42FEFA39EF, double %271)\l  %273 = tail call double @llvm.fma.f64(double %269, double\l... 0x3C7ABC9E3B39803F, double %272)\l  %274 = fadd double %270, %273\l  %275 = fsub double %274, %270\l  %276 = fsub double %273, %275\l  %277 = fadd double %274, %266\l  %278 = fsub double %277, %274\l  %279 = fsub double %277, %278\l  %280 = fsub double %274, %279\l  %281 = fsub double %266, %278\l  %282 = fadd double %281, %280\l  %283 = fadd double %276, %268\l  %284 = fsub double %283, %276\l  %285 = fsub double %283, %284\l  %286 = fsub double %276, %285\l  %287 = fsub double %268, %284\l  %288 = fadd double %287, %286\l  %289 = fadd double %283, %282\l  %290 = fadd double %277, %289\l  %291 = fsub double %290, %277\l  %292 = fsub double %289, %291\l  %293 = fadd double %288, %292\l  %294 = fadd double %290, %293\l  %295 = tail call double @llvm.fabs.f64(double %217) #3\l  %296 = fcmp oeq double %295, 0x7FF0000000000000\l  %297 = select i1 %296, double %217, double %294\l  %298 = fcmp olt double %217, 0.000000e+00\l  %299 = select i1 %298, double 0x7FF8000000000000, double %297\l  %300 = fcmp oeq double %217, 0.000000e+00\l  %301 = select i1 %300, double 0xFFF0000000000000, double %299\l  %302 = fadd contract double %194, %301\l  %303 = getelementptr inbounds double, double addrspace(1)* %3, i64 %16\l  store double %302, double addrspace(1)* %303, align 8, !tbaa !7\l  br label %304\l}"];
	Node0x60db4c0 -> Node0x60dd400;
	Node0x60dd400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%304:\l304:                                              \l  ret void\l}"];
}
