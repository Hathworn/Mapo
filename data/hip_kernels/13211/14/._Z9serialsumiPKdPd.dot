digraph "CFG for '_Z9serialsumiPKdPd' function" {
	label="CFG for '_Z9serialsumiPKdPd' function";

	Node0x536ca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = load double, double addrspace(1)* %1, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  store double %4, double addrspace(1)* %2, align 8, !tbaa !4\l  %5 = icmp sgt i32 %0, 1\l  br i1 %5, label %6, label %28\l|{<s0>T|<s1>F}}"];
	Node0x536ca00:s0 -> Node0x536e510;
	Node0x536ca00:s1 -> Node0x536e5a0;
	Node0x536e510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%6:\l6:                                                \l  %7 = add i32 %0, -1\l  %8 = add i32 %0, -2\l  %9 = and i32 %7, 7\l  %10 = icmp ult i32 %8, 7\l  br i1 %10, label %13, label %11\l|{<s0>T|<s1>F}}"];
	Node0x536e510:s0 -> Node0x536d780;
	Node0x536e510:s1 -> Node0x536ea40;
	Node0x536ea40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%11:\l11:                                               \l  %12 = and i32 %7, -8\l  br label %29\l}"];
	Node0x536ea40 -> Node0x536ec40;
	Node0x536d780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%13:\l13:                                               \l  %14 = phi double [ %4, %6 ], [ %71, %29 ]\l  %15 = phi i32 [ 1, %6 ], [ %72, %29 ]\l  %16 = icmp eq i32 %9, 0\l  br i1 %16, label %28, label %17\l|{<s0>T|<s1>F}}"];
	Node0x536d780:s0 -> Node0x536e5a0;
	Node0x536d780:s1 -> Node0x536e860;
	Node0x536e860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi double [ %24, %17 ], [ %14, %13 ]\l  %19 = phi i32 [ %25, %17 ], [ %15, %13 ]\l  %20 = phi i32 [ %26, %17 ], [ 0, %13 ]\l  %21 = zext i32 %19 to i64\l  %22 = getelementptr inbounds double, double addrspace(1)* %1, i64 %21\l  %23 = load double, double addrspace(1)* %22, align 8, !tbaa !4\l  %24 = fadd contract double %23, %18\l  store double %24, double addrspace(1)* %2, align 8, !tbaa !4\l  %25 = add nuw nsw i32 %19, 1\l  %26 = add i32 %20, 1\l  %27 = icmp eq i32 %26, %9\l  br i1 %27, label %28, label %17, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x536e860:s0 -> Node0x536e5a0;
	Node0x536e860:s1 -> Node0x536e860;
	Node0x536e5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%28:\l28:                                               \l  ret void\l}"];
	Node0x536ec40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = phi double [ %4, %11 ], [ %71, %29 ]\l  %31 = phi i32 [ 1, %11 ], [ %72, %29 ]\l  %32 = phi i32 [ 0, %11 ], [ %73, %29 ]\l  %33 = zext i32 %31 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !4\l  %36 = fadd contract double %35, %30\l  store double %36, double addrspace(1)* %2, align 8, !tbaa !4\l  %37 = add nuw nsw i32 %31, 1\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %1, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !4\l  %41 = fadd contract double %40, %36\l  store double %41, double addrspace(1)* %2, align 8, !tbaa !4\l  %42 = add nuw nsw i32 %31, 2\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %1, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !4\l  %46 = fadd contract double %45, %41\l  store double %46, double addrspace(1)* %2, align 8, !tbaa !4\l  %47 = add nuw nsw i32 %31, 3\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !4\l  %51 = fadd contract double %50, %46\l  store double %51, double addrspace(1)* %2, align 8, !tbaa !4\l  %52 = add nuw nsw i32 %31, 4\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %1, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !4\l  %56 = fadd contract double %55, %51\l  store double %56, double addrspace(1)* %2, align 8, !tbaa !4\l  %57 = add nuw nsw i32 %31, 5\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %58\l  %60 = load double, double addrspace(1)* %59, align 8, !tbaa !4\l  %61 = fadd contract double %60, %56\l  store double %61, double addrspace(1)* %2, align 8, !tbaa !4\l  %62 = add nuw nsw i32 %31, 6\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds double, double addrspace(1)* %1, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !4\l  %66 = fadd contract double %65, %61\l  store double %66, double addrspace(1)* %2, align 8, !tbaa !4\l  %67 = add nuw nsw i32 %31, 7\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %70 = load double, double addrspace(1)* %69, align 8, !tbaa !4\l  %71 = fadd contract double %70, %66\l  store double %71, double addrspace(1)* %2, align 8, !tbaa !4\l  %72 = add nuw nsw i32 %31, 8\l  %73 = add i32 %32, 8\l  %74 = icmp eq i32 %73, %12\l  br i1 %74, label %13, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x536ec40:s0 -> Node0x536d780;
	Node0x536ec40:s1 -> Node0x536ec40;
}
