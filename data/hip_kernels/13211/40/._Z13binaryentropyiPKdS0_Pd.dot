digraph "CFG for '_Z13binaryentropyiPKdS0_Pd' function" {
	label="CFG for '_Z13binaryentropyiPKdS0_Pd' function";

	Node0x57ac380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %197\l|{<s0>T|<s1>F}}"];
	Node0x57ac380:s0 -> Node0x57ac3d0;
	Node0x57ac380:s1 -> Node0x57ae310;
	Node0x57ac3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds double, double addrspace(1)* %1, i64 %16\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %19 = getelementptr inbounds double, double addrspace(1)* %2, i64 %16\l  %20 = load double, double addrspace(1)* %19, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %21 = fdiv contract double %18, %20\l  %22 = tail call double @llvm.amdgcn.frexp.mant.f64(double %21)\l  %23 = fcmp olt double %22, 0x3FE5555555555555\l  %24 = zext i1 %23 to i32\l  %25 = tail call double @llvm.amdgcn.ldexp.f64(double %22, i32 %24)\l  %26 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %21)\l  %27 = sub nsw i32 %26, %24\l  %28 = fadd double %25, -1.000000e+00\l  %29 = fadd double %25, 1.000000e+00\l  %30 = fadd double %29, -1.000000e+00\l  %31 = fsub double %25, %30\l  %32 = tail call double @llvm.amdgcn.rcp.f64(double %29)\l  %33 = fneg double %29\l  %34 = tail call double @llvm.fma.f64(double %33, double %32, double\l... 1.000000e+00)\l  %35 = tail call double @llvm.fma.f64(double %34, double %32, double %32)\l  %36 = tail call double @llvm.fma.f64(double %33, double %35, double\l... 1.000000e+00)\l  %37 = tail call double @llvm.fma.f64(double %36, double %35, double %35)\l  %38 = fmul double %28, %37\l  %39 = fmul double %29, %38\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %38, double %29, double %40)\l  %42 = tail call double @llvm.fma.f64(double %38, double %31, double %41)\l  %43 = fadd double %39, %42\l  %44 = fsub double %43, %39\l  %45 = fsub double %42, %44\l  %46 = fsub double %28, %43\l  %47 = fsub double %28, %46\l  %48 = fsub double %47, %43\l  %49 = fsub double %48, %45\l  %50 = fadd double %46, %49\l  %51 = fmul double %37, %50\l  %52 = fadd double %38, %51\l  %53 = fsub double %52, %38\l  %54 = fsub double %51, %53\l  %55 = fmul double %52, %52\l  %56 = tail call double @llvm.fma.f64(double %55, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %57 = tail call double @llvm.fma.f64(double %55, double %56, double\l... 0x3FC7474DD7F4DF2E)\l  %58 = tail call double @llvm.fma.f64(double %55, double %57, double\l... 0x3FCC71C016291751)\l  %59 = tail call double @llvm.fma.f64(double %55, double %58, double\l... 0x3FD249249B27ACF1)\l  %60 = tail call double @llvm.fma.f64(double %55, double %59, double\l... 0x3FD99999998EF7B6)\l  %61 = tail call double @llvm.fma.f64(double %55, double %60, double\l... 0x3FE5555555555780)\l  %62 = tail call double @llvm.amdgcn.ldexp.f64(double %52, i32 1)\l  %63 = tail call double @llvm.amdgcn.ldexp.f64(double %54, i32 1)\l  %64 = fmul double %52, %55\l  %65 = fmul double %64, %61\l  %66 = fadd double %62, %65\l  %67 = fsub double %66, %62\l  %68 = fsub double %65, %67\l  %69 = fadd double %63, %68\l  %70 = fadd double %66, %69\l  %71 = fsub double %70, %66\l  %72 = fsub double %69, %71\l  %73 = sitofp i32 %27 to double\l  %74 = fmul double %73, 0x3FE62E42FEFA39EF\l  %75 = fneg double %74\l  %76 = tail call double @llvm.fma.f64(double %73, double 0x3FE62E42FEFA39EF,\l... double %75)\l  %77 = tail call double @llvm.fma.f64(double %73, double 0x3C7ABC9E3B39803F,\l... double %76)\l  %78 = fadd double %74, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %77, %79\l  %81 = fadd double %78, %70\l  %82 = fsub double %81, %78\l  %83 = fsub double %81, %82\l  %84 = fsub double %78, %83\l  %85 = fsub double %70, %82\l  %86 = fadd double %85, %84\l  %87 = fadd double %80, %72\l  %88 = fsub double %87, %80\l  %89 = fsub double %87, %88\l  %90 = fsub double %80, %89\l  %91 = fsub double %72, %88\l  %92 = fadd double %91, %90\l  %93 = fadd double %87, %86\l  %94 = fadd double %81, %93\l  %95 = fsub double %94, %81\l  %96 = fsub double %93, %95\l  %97 = fadd double %92, %96\l  %98 = fadd double %94, %97\l  %99 = tail call double @llvm.fabs.f64(double %21) #3\l  %100 = fcmp oeq double %99, 0x7FF0000000000000\l  %101 = select i1 %100, double %21, double %98\l  %102 = fcmp olt double %21, 0.000000e+00\l  %103 = select i1 %102, double 0x7FF8000000000000, double %101\l  %104 = fcmp oeq double %21, 0.000000e+00\l  %105 = select i1 %104, double 0xFFF0000000000000, double %103\l  %106 = fmul contract double %18, %105\l  %107 = fsub contract double 1.000000e+00, %18\l  %108 = fsub contract double 1.000000e+00, %20\l  %109 = fdiv contract double %107, %108\l  %110 = tail call double @llvm.amdgcn.frexp.mant.f64(double %109)\l  %111 = fcmp olt double %110, 0x3FE5555555555555\l  %112 = zext i1 %111 to i32\l  %113 = tail call double @llvm.amdgcn.ldexp.f64(double %110, i32 %112)\l  %114 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %109)\l  %115 = sub nsw i32 %114, %112\l  %116 = fadd double %113, -1.000000e+00\l  %117 = fadd double %113, 1.000000e+00\l  %118 = fadd double %117, -1.000000e+00\l  %119 = fsub double %113, %118\l  %120 = tail call double @llvm.amdgcn.rcp.f64(double %117)\l  %121 = fneg double %117\l  %122 = tail call double @llvm.fma.f64(double %121, double %120, double\l... 1.000000e+00)\l  %123 = tail call double @llvm.fma.f64(double %122, double %120, double %120)\l  %124 = tail call double @llvm.fma.f64(double %121, double %123, double\l... 1.000000e+00)\l  %125 = tail call double @llvm.fma.f64(double %124, double %123, double %123)\l  %126 = fmul double %116, %125\l  %127 = fmul double %117, %126\l  %128 = fneg double %127\l  %129 = tail call double @llvm.fma.f64(double %126, double %117, double %128)\l  %130 = tail call double @llvm.fma.f64(double %126, double %119, double %129)\l  %131 = fadd double %127, %130\l  %132 = fsub double %131, %127\l  %133 = fsub double %130, %132\l  %134 = fsub double %116, %131\l  %135 = fsub double %116, %134\l  %136 = fsub double %135, %131\l  %137 = fsub double %136, %133\l  %138 = fadd double %134, %137\l  %139 = fmul double %125, %138\l  %140 = fadd double %126, %139\l  %141 = fsub double %140, %126\l  %142 = fsub double %139, %141\l  %143 = fmul double %140, %140\l  %144 = tail call double @llvm.fma.f64(double %143, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %145 = tail call double @llvm.fma.f64(double %143, double %144, double\l... 0x3FC7474DD7F4DF2E)\l  %146 = tail call double @llvm.fma.f64(double %143, double %145, double\l... 0x3FCC71C016291751)\l  %147 = tail call double @llvm.fma.f64(double %143, double %146, double\l... 0x3FD249249B27ACF1)\l  %148 = tail call double @llvm.fma.f64(double %143, double %147, double\l... 0x3FD99999998EF7B6)\l  %149 = tail call double @llvm.fma.f64(double %143, double %148, double\l... 0x3FE5555555555780)\l  %150 = tail call double @llvm.amdgcn.ldexp.f64(double %140, i32 1)\l  %151 = tail call double @llvm.amdgcn.ldexp.f64(double %142, i32 1)\l  %152 = fmul double %140, %143\l  %153 = fmul double %152, %149\l  %154 = fadd double %150, %153\l  %155 = fsub double %154, %150\l  %156 = fsub double %153, %155\l  %157 = fadd double %151, %156\l  %158 = fadd double %154, %157\l  %159 = fsub double %158, %154\l  %160 = fsub double %157, %159\l  %161 = sitofp i32 %115 to double\l  %162 = fmul double %161, 0x3FE62E42FEFA39EF\l  %163 = fneg double %162\l  %164 = tail call double @llvm.fma.f64(double %161, double\l... 0x3FE62E42FEFA39EF, double %163)\l  %165 = tail call double @llvm.fma.f64(double %161, double\l... 0x3C7ABC9E3B39803F, double %164)\l  %166 = fadd double %162, %165\l  %167 = fsub double %166, %162\l  %168 = fsub double %165, %167\l  %169 = fadd double %166, %158\l  %170 = fsub double %169, %166\l  %171 = fsub double %169, %170\l  %172 = fsub double %166, %171\l  %173 = fsub double %158, %170\l  %174 = fadd double %173, %172\l  %175 = fadd double %168, %160\l  %176 = fsub double %175, %168\l  %177 = fsub double %175, %176\l  %178 = fsub double %168, %177\l  %179 = fsub double %160, %176\l  %180 = fadd double %179, %178\l  %181 = fadd double %175, %174\l  %182 = fadd double %169, %181\l  %183 = fsub double %182, %169\l  %184 = fsub double %181, %183\l  %185 = fadd double %180, %184\l  %186 = fadd double %182, %185\l  %187 = tail call double @llvm.fabs.f64(double %109) #3\l  %188 = fcmp oeq double %187, 0x7FF0000000000000\l  %189 = select i1 %188, double %109, double %186\l  %190 = fcmp olt double %109, 0.000000e+00\l  %191 = select i1 %190, double 0x7FF8000000000000, double %189\l  %192 = fcmp oeq double %109, 0.000000e+00\l  %193 = select i1 %192, double 0xFFF0000000000000, double %191\l  %194 = fmul contract double %107, %193\l  %195 = fadd contract double %106, %194\l  %196 = getelementptr inbounds double, double addrspace(1)* %3, i64 %16\l  store double %195, double addrspace(1)* %196, align 8, !tbaa !7\l  br label %197\l}"];
	Node0x57ac3d0 -> Node0x57ae310;
	Node0x57ae310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%197:\l197:                                              \l  ret void\l}"];
}
