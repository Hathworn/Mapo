digraph "CFG for '_Z5stanhidPKdPd' function" {
	label="CFG for '_Z5stanhidPKdPd' function";

	Node0x479dcc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %171\l|{<s0>T|<s1>F}}"];
	Node0x479dcc0:s0 -> Node0x479dd50;
	Node0x479dcc0:s1 -> Node0x479fc60;
	Node0x479dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds double, double addrspace(1)* %2, i64 %16\l  %18 = load double, double addrspace(1)* %17, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %19 = tail call double @llvm.fabs.f64(double %18)\l  %20 = fmul double %19, 0x3FF71547652B82FE\l  %21 = tail call double @llvm.rint.f64(double %20)\l  %22 = tail call double @llvm.fma.f64(double %21, double 0xBFE62E42FEFA3000,\l... double %19)\l  %23 = fadd double %22, 0.000000e+00\l  %24 = fsub double %22, %23\l  %25 = fadd double %24, 0.000000e+00\l  %26 = fmul double %21, 0x3D53DE6AF278E000\l  %27 = fsub double %23, %26\l  %28 = fsub double %23, %27\l  %29 = fsub double %28, %26\l  %30 = fadd double %25, %29\l  %31 = fadd double %27, %30\l  %32 = fsub double %31, %27\l  %33 = fsub double %30, %32\l  %34 = fmul double %21, 0x3AC9CC01F97B57A0\l  %35 = fsub double %31, %34\l  %36 = fsub double %31, %35\l  %37 = fsub double %36, %34\l  %38 = fadd double %33, %37\l  %39 = fadd double %35, %38\l  %40 = fsub double %39, %35\l  %41 = fsub double %38, %40\l  %42 = tail call double @llvm.fma.f64(double %39, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %43 = tail call double @llvm.fma.f64(double %39, double %42, double\l... 0x3EC71DEE623FDE64)\l  %44 = tail call double @llvm.fma.f64(double %39, double %43, double\l... 0x3EFA01997C89E6B0)\l  %45 = tail call double @llvm.fma.f64(double %39, double %44, double\l... 0x3F2A01A014761F6E)\l  %46 = tail call double @llvm.fma.f64(double %39, double %45, double\l... 0x3F56C16C1852B7B0)\l  %47 = tail call double @llvm.fma.f64(double %39, double %46, double\l... 0x3F81111111122322)\l  %48 = tail call double @llvm.fma.f64(double %39, double %47, double\l... 0x3FA55555555502A1)\l  %49 = tail call double @llvm.fma.f64(double %39, double %48, double\l... 0x3FC5555555555511)\l  %50 = tail call double @llvm.fma.f64(double %39, double %49, double\l... 0x3FE000000000000B)\l  %51 = fmul double %39, %39\l  %52 = fneg double %51\l  %53 = tail call double @llvm.fma.f64(double %39, double %39, double %52)\l  %54 = fmul double %41, 2.000000e+00\l  %55 = tail call double @llvm.fma.f64(double %39, double %54, double %53)\l  %56 = fadd double %51, %55\l  %57 = fsub double %56, %51\l  %58 = fsub double %55, %57\l  %59 = fmul double %56, %50\l  %60 = fneg double %59\l  %61 = tail call double @llvm.fma.f64(double %56, double %50, double %60)\l  %62 = tail call double @llvm.fma.f64(double %58, double %50, double %61)\l  %63 = fadd double %59, %62\l  %64 = fsub double %63, %59\l  %65 = fsub double %62, %64\l  %66 = fadd double %39, %63\l  %67 = fsub double %66, %39\l  %68 = fsub double %63, %67\l  %69 = fadd double %41, %65\l  %70 = fadd double %69, %68\l  %71 = fadd double %66, %70\l  %72 = fsub double %71, %66\l  %73 = fsub double %70, %72\l  %74 = fadd double %71, 1.000000e+00\l  %75 = fadd double %74, -1.000000e+00\l  %76 = fsub double %71, %75\l  %77 = fadd double %73, %76\l  %78 = fadd double %74, %77\l  %79 = fsub double %78, %74\l  %80 = fsub double %77, %79\l  %81 = fptosi double %21 to i32\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %78, i32 %81)\l  %83 = tail call double @llvm.amdgcn.ldexp.f64(double %80, i32 %81)\l  %84 = tail call double @llvm.amdgcn.rcp.f64(double %82)\l  %85 = fneg double %82\l  %86 = tail call double @llvm.fma.f64(double %85, double %84, double\l... 1.000000e+00)\l  %87 = tail call double @llvm.fma.f64(double %86, double %84, double %84)\l  %88 = tail call double @llvm.fma.f64(double %85, double %87, double\l... 1.000000e+00)\l  %89 = tail call double @llvm.fma.f64(double %88, double %87, double %87)\l  %90 = fmul double %82, %89\l  %91 = fneg double %90\l  %92 = tail call double @llvm.fma.f64(double %89, double %82, double %91)\l  %93 = tail call double @llvm.fma.f64(double %89, double %83, double %92)\l  %94 = fadd double %90, %93\l  %95 = fsub double %94, %90\l  %96 = fsub double %93, %95\l  %97 = fsub double 1.000000e+00, %94\l  %98 = fsub double 1.000000e+00, %97\l  %99 = fsub double %98, %94\l  %100 = fsub double %99, %96\l  %101 = fadd double %97, %100\l  %102 = fsub double %101, %97\l  %103 = fsub double %100, %102\l  %104 = fmul double %89, %101\l  %105 = fmul double %82, %104\l  %106 = fneg double %105\l  %107 = tail call double @llvm.fma.f64(double %104, double %82, double %106)\l  %108 = tail call double @llvm.fma.f64(double %104, double %83, double %107)\l  %109 = fadd double %105, %108\l  %110 = fsub double %109, %105\l  %111 = fsub double %108, %110\l  %112 = fsub double %101, %109\l  %113 = fsub double %101, %112\l  %114 = fsub double %113, %109\l  %115 = fadd double %103, %114\l  %116 = fsub double %115, %111\l  %117 = fadd double %112, %116\l  %118 = fmul double %89, %117\l  %119 = fadd double %89, %104\l  %120 = fsub double %119, %89\l  %121 = fsub double %104, %120\l  %122 = fadd double %121, %118\l  %123 = fadd double %119, %122\l  %124 = fsub double %123, %119\l  %125 = fsub double %122, %124\l  %126 = fsub double %82, %123\l  %127 = fsub double %82, %126\l  %128 = fsub double %127, %123\l  %129 = fadd double %83, %128\l  %130 = fsub double %129, %125\l  %131 = fadd double %126, %130\l  %132 = fsub double %131, %126\l  %133 = fsub double %130, %132\l  %134 = fadd double %82, %123\l  %135 = fsub double %134, %82\l  %136 = fsub double %123, %135\l  %137 = fadd double %83, %125\l  %138 = fadd double %137, %136\l  %139 = fadd double %134, %138\l  %140 = fsub double %139, %134\l  %141 = fsub double %138, %140\l  %142 = tail call double @llvm.amdgcn.rcp.f64(double %139)\l  %143 = fneg double %139\l  %144 = tail call double @llvm.fma.f64(double %143, double %142, double\l... 1.000000e+00)\l  %145 = tail call double @llvm.fma.f64(double %144, double %142, double %142)\l  %146 = tail call double @llvm.fma.f64(double %143, double %145, double\l... 1.000000e+00)\l  %147 = tail call double @llvm.fma.f64(double %146, double %145, double %145)\l  %148 = fmul double %131, %147\l  %149 = fmul double %139, %148\l  %150 = fneg double %149\l  %151 = tail call double @llvm.fma.f64(double %148, double %139, double %150)\l  %152 = tail call double @llvm.fma.f64(double %148, double %141, double %151)\l  %153 = fadd double %149, %152\l  %154 = fsub double %153, %149\l  %155 = fsub double %152, %154\l  %156 = fsub double %131, %153\l  %157 = fsub double %131, %156\l  %158 = fsub double %157, %153\l  %159 = fsub double %158, %155\l  %160 = fadd double %133, %159\l  %161 = fadd double %156, %160\l  %162 = fmul double %147, %161\l  %163 = fadd double %148, %162\l  %164 = fcmp ogt double %19, 1.906250e+01\l  %165 = select i1 %164, double 1.000000e+00, double %163\l  %166 = fcmp olt double %19, 0x3E40000000000000\l  %167 = select i1 %166, double %19, double %165\l  %168 = tail call double @llvm.copysign.f64(double %167, double %18)\l  %169 = fmul contract double %168, %1\l  %170 = getelementptr inbounds double, double addrspace(1)* %3, i64 %16\l  store double %169, double addrspace(1)* %170, align 8, !tbaa !7\l  br label %171\l}"];
	Node0x479dd50 -> Node0x479fc60;
	Node0x479fc60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%171:\l171:                                              \l  ret void\l}"];
}
