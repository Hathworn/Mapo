digraph "CFG for '_Z7sigmoidiPKdPd' function" {
	label="CFG for '_Z7sigmoidiPKdPd' function";

	Node0x61718c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %0\l  br i1 %13, label %14, label %44\l|{<s0>T|<s1>F}}"];
	Node0x61718c0:s0 -> Node0x6172650;
	Node0x61718c0:s1 -> Node0x6173850;
	Node0x6172650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = fneg contract double %17\l  %19 = fmul double %17, 0xBFF71547652B82FE\l  %20 = tail call double @llvm.rint.f64(double %19)\l  %21 = fneg double %20\l  %22 = tail call double @llvm.fma.f64(double %21, double 0x3FE62E42FEFA39EF,\l... double %18)\l  %23 = tail call double @llvm.fma.f64(double %21, double 0x3C7ABC9E3B39803F,\l... double %22)\l  %24 = tail call double @llvm.fma.f64(double %23, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %25 = tail call double @llvm.fma.f64(double %23, double %24, double\l... 0x3EC71DEE623FDE64)\l  %26 = tail call double @llvm.fma.f64(double %23, double %25, double\l... 0x3EFA01997C89E6B0)\l  %27 = tail call double @llvm.fma.f64(double %23, double %26, double\l... 0x3F2A01A014761F6E)\l  %28 = tail call double @llvm.fma.f64(double %23, double %27, double\l... 0x3F56C16C1852B7B0)\l  %29 = tail call double @llvm.fma.f64(double %23, double %28, double\l... 0x3F81111111122322)\l  %30 = tail call double @llvm.fma.f64(double %23, double %29, double\l... 0x3FA55555555502A1)\l  %31 = tail call double @llvm.fma.f64(double %23, double %30, double\l... 0x3FC5555555555511)\l  %32 = tail call double @llvm.fma.f64(double %23, double %31, double\l... 0x3FE000000000000B)\l  %33 = tail call double @llvm.fma.f64(double %23, double %32, double\l... 1.000000e+00)\l  %34 = tail call double @llvm.fma.f64(double %23, double %33, double\l... 1.000000e+00)\l  %35 = fptosi double %20 to i32\l  %36 = tail call double @llvm.amdgcn.ldexp.f64(double %34, i32 %35)\l  %37 = fcmp olt double %17, -1.024000e+03\l  %38 = fcmp ogt double %17, 1.075000e+03\l  %39 = getelementptr inbounds double, double addrspace(1)* %2, i64 %15\l  %40 = fadd contract double %36, 1.000000e+00\l  %41 = fdiv contract double 1.000000e+00, %40\l  %42 = select i1 %37, double 0.000000e+00, double %41\l  %43 = select i1 %38, double 1.000000e+00, double %42\l  store double %43, double addrspace(1)* %39, align 8, !tbaa !7\l  br label %44\l}"];
	Node0x6172650 -> Node0x6173850;
	Node0x6173850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  ret void\l}"];
}
