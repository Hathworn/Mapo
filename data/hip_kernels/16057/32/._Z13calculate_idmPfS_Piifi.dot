digraph "CFG for '_Z13calculate_idmPfS_Piifi' function" {
	label="CFG for '_Z13calculate_idmPfS_Piifi' function";

	Node0x57d4280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = mul nsw i32 %23, %3\l  %25 = add nsw i32 %15, %24\l  %26 = icmp ult i32 %25, %5\l  br i1 %26, label %27, label %38\l|{<s0>T|<s1>F}}"];
	Node0x57d4280:s0 -> Node0x57d7cb0;
	Node0x57d4280:s1 -> Node0x57d7d40;
	Node0x57d7cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%27:\l27:                                               \l  %28 = zext i32 %25 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %31 = add nsw i32 %30, 1\l  %32 = sitofp i32 %31 to float\l  %33 = fdiv contract float 1.000000e+00, %32\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %28\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %36 = fmul contract float %35, %33\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %28\l  store float %36, float addrspace(1)* %37, align 4, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %38\l}"];
	Node0x57d7cb0 -> Node0x57d7d40;
	Node0x57d7d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = icmp ugt i16 %12, 1\l  br i1 %39, label %40, label %43\l|{<s0>T|<s1>F}}"];
	Node0x57d7d40:s0 -> Node0x57d9cc0;
	Node0x57d7d40:s1 -> Node0x57d9d10;
	Node0x57d9cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%40:\l40:                                               \l  %41 = zext i32 %25 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %41\l  br label %45\l}"];
	Node0x57d9cc0 -> Node0x57d9f60;
	Node0x57d9d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%43:\l43:                                               \l  %44 = icmp eq i32 %25, 0\l  br i1 %44, label %60, label %523\l|{<s0>T|<s1>F}}"];
	Node0x57d9d10:s0 -> Node0x57da0e0;
	Node0x57d9d10:s1 -> Node0x57da130;
	Node0x57d9f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%45:\l45:                                               \l  %46 = phi i32 [ 1, %40 ], [ %47, %58 ]\l  %47 = shl nsw i32 %46, 1\l  %48 = add i32 %47, 1023\l  %49 = and i32 %48, %7\l  %50 = icmp eq i32 %49, 0\l  br i1 %50, label %51, label %58\l|{<s0>T|<s1>F}}"];
	Node0x57d9f60:s0 -> Node0x57da620;
	Node0x57d9f60:s1 -> Node0x57da2a0;
	Node0x57da620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%51:\l51:                                               \l  %52 = add i32 %46, %25\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %1, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !11\l  %56 = load float, float addrspace(1)* %42, align 4, !tbaa !11\l  %57 = fadd contract float %55, %56\l  store float %57, float addrspace(1)* %42, align 4, !tbaa !11\l  br label %58\l}"];
	Node0x57da620 -> Node0x57da2a0;
	Node0x57da2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%58:\l58:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = icmp ult i32 %47, %13\l  br i1 %59, label %45, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x57da2a0:s0 -> Node0x57d9f60;
	Node0x57da2a0:s1 -> Node0x57d9d10;
	Node0x57da0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%60:\l60:                                               \l  %61 = load float, float addrspace(1)* %1, align 4, !tbaa !11\l  %62 = fpext float %61 to double\l  %63 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %63, i64 24\l  %65 = bitcast i8 addrspace(4)* %64 to i64 addrspace(4)*\l  %66 = load i64, i64 addrspace(4)* %65, align 8, !tbaa !15\l  %67 = inttoptr i64 %66 to i8 addrspace(1)*\l  %68 = addrspacecast i8 addrspace(1)* %67 to i8*\l  %69 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %68,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %70 = extractelement \<2 x i64\> %69, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([8 x i8], [8 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %71, label %75\l|{<s0>T|<s1>F}}"];
	Node0x57da0e0:s0 -> Node0x57dbfc0;
	Node0x57da0e0:s1 -> Node0x57dc9b0;
	Node0x57dbfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%71:\l71:                                               \l  %72 = and i64 %70, -225\l  %73 = or i64 %72, 32\l  %74 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %68,\l... i64 noundef %73, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %516\l}"];
	Node0x57dbfc0 -> Node0x57dcc90;
	Node0x57dc9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%75:\l75:                                               \l  %76 = and i64 %70, 2\l  %77 = and i64 %70, -3\l  %78 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %77, i64 0\l  br label %79\l}"];
	Node0x57dc9b0 -> Node0x57dd830;
	Node0x57dd830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%79:\l79:                                               \l  %80 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([8 x i8], [8 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([8 x i8], [8 x i8] addrspace(4)* @.str,\l... i64 0, i64 7) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([8 x\l... i8]* addrspacecast ([8 x i8] addrspace(4)* @.str to [8 x i8]*) to i64)), i64\l... 1))), %75 ], [ %513, %505 ]\l  %81 = phi i8 addrspace(4)* [ getelementptr inbounds ([8 x i8], [8 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %75 ], [ %514, %505 ]\l  %82 = phi \<2 x i64\> [ %78, %75 ], [ %512, %505 ]\l  %83 = icmp ugt i64 %80, 56\l  %84 = extractelement \<2 x i64\> %82, i64 0\l  %85 = or i64 %84, %76\l  %86 = insertelement \<2 x i64\> poison, i64 %85, i64 0\l  %87 = select i1 %83, \<2 x i64\> %82, \<2 x i64\> %86\l  %88 = tail call i64 @llvm.umin.i64(i64 %80, i64 56)\l  %89 = trunc i64 %88 to i32\l  %90 = extractelement \<2 x i64\> %87, i64 0\l  %91 = icmp ugt i32 %89, 7\l  br i1 %91, label %94, label %92\l|{<s0>T|<s1>F}}"];
	Node0x57dd830:s0 -> Node0x57de7a0;
	Node0x57dd830:s1 -> Node0x57de830;
	Node0x57de830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%92:\l92:                                               \l  %93 = icmp eq i32 %89, 0\l  br i1 %93, label %147, label %134\l|{<s0>T|<s1>F}}"];
	Node0x57de830:s0 -> Node0x57dea00;
	Node0x57de830:s1 -> Node0x57dea50;
	Node0x57de7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%94:\l94:                                               \l  %95 = load i8, i8 addrspace(4)* %81, align 1, !tbaa !19\l  %96 = zext i8 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 1\l  %98 = load i8, i8 addrspace(4)* %97, align 1, !tbaa !19\l  %99 = zext i8 %98 to i64\l  %100 = shl nuw nsw i64 %99, 8\l  %101 = or i64 %100, %96\l  %102 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 2\l  %103 = load i8, i8 addrspace(4)* %102, align 1, !tbaa !19\l  %104 = zext i8 %103 to i64\l  %105 = shl nuw nsw i64 %104, 16\l  %106 = or i64 %101, %105\l  %107 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 3\l  %108 = load i8, i8 addrspace(4)* %107, align 1, !tbaa !19\l  %109 = zext i8 %108 to i64\l  %110 = shl nuw nsw i64 %109, 24\l  %111 = or i64 %106, %110\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 4\l  %113 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !19\l  %114 = zext i8 %113 to i64\l  %115 = shl nuw nsw i64 %114, 32\l  %116 = or i64 %111, %115\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 5\l  %118 = load i8, i8 addrspace(4)* %117, align 1, !tbaa !19\l  %119 = zext i8 %118 to i64\l  %120 = shl nuw nsw i64 %119, 40\l  %121 = or i64 %116, %120\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 6\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !19\l  %124 = zext i8 %123 to i64\l  %125 = shl nuw nsw i64 %124, 48\l  %126 = or i64 %121, %125\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 7\l  %128 = load i8, i8 addrspace(4)* %127, align 1, !tbaa !19\l  %129 = zext i8 %128 to i64\l  %130 = shl nuw i64 %129, 56\l  %131 = or i64 %126, %130\l  %132 = add nsw i32 %89, -8\l  %133 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 8\l  br label %147\l}"];
	Node0x57de7a0 -> Node0x57dea00;
	Node0x57dea50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi i32 [ %145, %134 ], [ 0, %92 ]\l  %136 = phi i64 [ %144, %134 ], [ 0, %92 ]\l  %137 = zext i32 %135 to i64\l  %138 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 %137\l  %139 = load i8, i8 addrspace(4)* %138, align 1, !tbaa !19\l  %140 = zext i8 %139 to i64\l  %141 = shl i32 %135, 3\l  %142 = zext i32 %141 to i64\l  %143 = shl nuw i64 %140, %142\l  %144 = or i64 %143, %136\l  %145 = add nuw nsw i32 %135, 1\l  %146 = icmp eq i32 %145, %89\l  br i1 %146, label %147, label %134, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57dea50:s0 -> Node0x57dea00;
	Node0x57dea50:s1 -> Node0x57dea50;
	Node0x57dea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%147:\l147:                                              \l  %148 = phi i8 addrspace(4)* [ %133, %94 ], [ %81, %92 ], [ %81, %134 ]\l  %149 = phi i32 [ %132, %94 ], [ 0, %92 ], [ 0, %134 ]\l  %150 = phi i64 [ %131, %94 ], [ 0, %92 ], [ %144, %134 ]\l  %151 = icmp ugt i32 %149, 7\l  br i1 %151, label %154, label %152\l|{<s0>T|<s1>F}}"];
	Node0x57dea00:s0 -> Node0x57e1890;
	Node0x57dea00:s1 -> Node0x57e18e0;
	Node0x57e18e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%152:\l152:                                              \l  %153 = icmp eq i32 %149, 0\l  br i1 %153, label %207, label %194\l|{<s0>T|<s1>F}}"];
	Node0x57e18e0:s0 -> Node0x57e1ab0;
	Node0x57e18e0:s1 -> Node0x57e1b00;
	Node0x57e1890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%154:\l154:                                              \l  %155 = load i8, i8 addrspace(4)* %148, align 1, !tbaa !19\l  %156 = zext i8 %155 to i64\l  %157 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 1\l  %158 = load i8, i8 addrspace(4)* %157, align 1, !tbaa !19\l  %159 = zext i8 %158 to i64\l  %160 = shl nuw nsw i64 %159, 8\l  %161 = or i64 %160, %156\l  %162 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 2\l  %163 = load i8, i8 addrspace(4)* %162, align 1, !tbaa !19\l  %164 = zext i8 %163 to i64\l  %165 = shl nuw nsw i64 %164, 16\l  %166 = or i64 %161, %165\l  %167 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 3\l  %168 = load i8, i8 addrspace(4)* %167, align 1, !tbaa !19\l  %169 = zext i8 %168 to i64\l  %170 = shl nuw nsw i64 %169, 24\l  %171 = or i64 %166, %170\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 4\l  %173 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !19\l  %174 = zext i8 %173 to i64\l  %175 = shl nuw nsw i64 %174, 32\l  %176 = or i64 %171, %175\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 5\l  %178 = load i8, i8 addrspace(4)* %177, align 1, !tbaa !19\l  %179 = zext i8 %178 to i64\l  %180 = shl nuw nsw i64 %179, 40\l  %181 = or i64 %176, %180\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 6\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !19\l  %184 = zext i8 %183 to i64\l  %185 = shl nuw nsw i64 %184, 48\l  %186 = or i64 %181, %185\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 7\l  %188 = load i8, i8 addrspace(4)* %187, align 1, !tbaa !19\l  %189 = zext i8 %188 to i64\l  %190 = shl nuw i64 %189, 56\l  %191 = or i64 %186, %190\l  %192 = add nsw i32 %149, -8\l  %193 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 8\l  br label %207\l}"];
	Node0x57e1890 -> Node0x57e1ab0;
	Node0x57e1b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%194:\l194:                                              \l  %195 = phi i32 [ %205, %194 ], [ 0, %152 ]\l  %196 = phi i64 [ %204, %194 ], [ 0, %152 ]\l  %197 = zext i32 %195 to i64\l  %198 = getelementptr inbounds i8, i8 addrspace(4)* %148, i64 %197\l  %199 = load i8, i8 addrspace(4)* %198, align 1, !tbaa !19\l  %200 = zext i8 %199 to i64\l  %201 = shl i32 %195, 3\l  %202 = zext i32 %201 to i64\l  %203 = shl nuw i64 %200, %202\l  %204 = or i64 %203, %196\l  %205 = add nuw nsw i32 %195, 1\l  %206 = icmp eq i32 %205, %149\l  br i1 %206, label %207, label %194\l|{<s0>T|<s1>F}}"];
	Node0x57e1b00:s0 -> Node0x57e1ab0;
	Node0x57e1b00:s1 -> Node0x57e1b00;
	Node0x57e1ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%207:\l207:                                              \l  %208 = phi i8 addrspace(4)* [ %193, %154 ], [ %148, %152 ], [ %148, %194 ]\l  %209 = phi i32 [ %192, %154 ], [ 0, %152 ], [ 0, %194 ]\l  %210 = phi i64 [ %191, %154 ], [ 0, %152 ], [ %204, %194 ]\l  %211 = icmp ugt i32 %209, 7\l  br i1 %211, label %214, label %212\l|{<s0>T|<s1>F}}"];
	Node0x57e1ab0:s0 -> Node0x57e3b90;
	Node0x57e1ab0:s1 -> Node0x57e3be0;
	Node0x57e3be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%212:\l212:                                              \l  %213 = icmp eq i32 %209, 0\l  br i1 %213, label %267, label %254\l|{<s0>T|<s1>F}}"];
	Node0x57e3be0:s0 -> Node0x57e3d70;
	Node0x57e3be0:s1 -> Node0x57e3dc0;
	Node0x57e3b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%214:\l214:                                              \l  %215 = load i8, i8 addrspace(4)* %208, align 1, !tbaa !19\l  %216 = zext i8 %215 to i64\l  %217 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 1\l  %218 = load i8, i8 addrspace(4)* %217, align 1, !tbaa !19\l  %219 = zext i8 %218 to i64\l  %220 = shl nuw nsw i64 %219, 8\l  %221 = or i64 %220, %216\l  %222 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 2\l  %223 = load i8, i8 addrspace(4)* %222, align 1, !tbaa !19\l  %224 = zext i8 %223 to i64\l  %225 = shl nuw nsw i64 %224, 16\l  %226 = or i64 %221, %225\l  %227 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 3\l  %228 = load i8, i8 addrspace(4)* %227, align 1, !tbaa !19\l  %229 = zext i8 %228 to i64\l  %230 = shl nuw nsw i64 %229, 24\l  %231 = or i64 %226, %230\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 4\l  %233 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !19\l  %234 = zext i8 %233 to i64\l  %235 = shl nuw nsw i64 %234, 32\l  %236 = or i64 %231, %235\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 5\l  %238 = load i8, i8 addrspace(4)* %237, align 1, !tbaa !19\l  %239 = zext i8 %238 to i64\l  %240 = shl nuw nsw i64 %239, 40\l  %241 = or i64 %236, %240\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 6\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !19\l  %244 = zext i8 %243 to i64\l  %245 = shl nuw nsw i64 %244, 48\l  %246 = or i64 %241, %245\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 7\l  %248 = load i8, i8 addrspace(4)* %247, align 1, !tbaa !19\l  %249 = zext i8 %248 to i64\l  %250 = shl nuw i64 %249, 56\l  %251 = or i64 %246, %250\l  %252 = add nsw i32 %209, -8\l  %253 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 8\l  br label %267\l}"];
	Node0x57e3b90 -> Node0x57e3d70;
	Node0x57e3dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%254:\l254:                                              \l  %255 = phi i32 [ %265, %254 ], [ 0, %212 ]\l  %256 = phi i64 [ %264, %254 ], [ 0, %212 ]\l  %257 = zext i32 %255 to i64\l  %258 = getelementptr inbounds i8, i8 addrspace(4)* %208, i64 %257\l  %259 = load i8, i8 addrspace(4)* %258, align 1, !tbaa !19\l  %260 = zext i8 %259 to i64\l  %261 = shl i32 %255, 3\l  %262 = zext i32 %261 to i64\l  %263 = shl nuw i64 %260, %262\l  %264 = or i64 %263, %256\l  %265 = add nuw nsw i32 %255, 1\l  %266 = icmp eq i32 %265, %209\l  br i1 %266, label %267, label %254\l|{<s0>T|<s1>F}}"];
	Node0x57e3dc0:s0 -> Node0x57e3d70;
	Node0x57e3dc0:s1 -> Node0x57e3dc0;
	Node0x57e3d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%267:\l267:                                              \l  %268 = phi i8 addrspace(4)* [ %253, %214 ], [ %208, %212 ], [ %208, %254 ]\l  %269 = phi i32 [ %252, %214 ], [ 0, %212 ], [ 0, %254 ]\l  %270 = phi i64 [ %251, %214 ], [ 0, %212 ], [ %264, %254 ]\l  %271 = icmp ugt i32 %269, 7\l  br i1 %271, label %274, label %272\l|{<s0>T|<s1>F}}"];
	Node0x57e3d70:s0 -> Node0x57e6620;
	Node0x57e3d70:s1 -> Node0x57e6670;
	Node0x57e6670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%272:\l272:                                              \l  %273 = icmp eq i32 %269, 0\l  br i1 %273, label %327, label %314\l|{<s0>T|<s1>F}}"];
	Node0x57e6670:s0 -> Node0x57e6800;
	Node0x57e6670:s1 -> Node0x57e6850;
	Node0x57e6620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%274:\l274:                                              \l  %275 = load i8, i8 addrspace(4)* %268, align 1, !tbaa !19\l  %276 = zext i8 %275 to i64\l  %277 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 1\l  %278 = load i8, i8 addrspace(4)* %277, align 1, !tbaa !19\l  %279 = zext i8 %278 to i64\l  %280 = shl nuw nsw i64 %279, 8\l  %281 = or i64 %280, %276\l  %282 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 2\l  %283 = load i8, i8 addrspace(4)* %282, align 1, !tbaa !19\l  %284 = zext i8 %283 to i64\l  %285 = shl nuw nsw i64 %284, 16\l  %286 = or i64 %281, %285\l  %287 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 3\l  %288 = load i8, i8 addrspace(4)* %287, align 1, !tbaa !19\l  %289 = zext i8 %288 to i64\l  %290 = shl nuw nsw i64 %289, 24\l  %291 = or i64 %286, %290\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 4\l  %293 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !19\l  %294 = zext i8 %293 to i64\l  %295 = shl nuw nsw i64 %294, 32\l  %296 = or i64 %291, %295\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 5\l  %298 = load i8, i8 addrspace(4)* %297, align 1, !tbaa !19\l  %299 = zext i8 %298 to i64\l  %300 = shl nuw nsw i64 %299, 40\l  %301 = or i64 %296, %300\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 6\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !19\l  %304 = zext i8 %303 to i64\l  %305 = shl nuw nsw i64 %304, 48\l  %306 = or i64 %301, %305\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 7\l  %308 = load i8, i8 addrspace(4)* %307, align 1, !tbaa !19\l  %309 = zext i8 %308 to i64\l  %310 = shl nuw i64 %309, 56\l  %311 = or i64 %306, %310\l  %312 = add nsw i32 %269, -8\l  %313 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 8\l  br label %327\l}"];
	Node0x57e6620 -> Node0x57e6800;
	Node0x57e6850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%314:\l314:                                              \l  %315 = phi i32 [ %325, %314 ], [ 0, %272 ]\l  %316 = phi i64 [ %324, %314 ], [ 0, %272 ]\l  %317 = zext i32 %315 to i64\l  %318 = getelementptr inbounds i8, i8 addrspace(4)* %268, i64 %317\l  %319 = load i8, i8 addrspace(4)* %318, align 1, !tbaa !19\l  %320 = zext i8 %319 to i64\l  %321 = shl i32 %315, 3\l  %322 = zext i32 %321 to i64\l  %323 = shl nuw i64 %320, %322\l  %324 = or i64 %323, %316\l  %325 = add nuw nsw i32 %315, 1\l  %326 = icmp eq i32 %325, %269\l  br i1 %326, label %327, label %314\l|{<s0>T|<s1>F}}"];
	Node0x57e6850:s0 -> Node0x57e6800;
	Node0x57e6850:s1 -> Node0x57e6850;
	Node0x57e6800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%327:\l327:                                              \l  %328 = phi i8 addrspace(4)* [ %313, %274 ], [ %268, %272 ], [ %268, %314 ]\l  %329 = phi i32 [ %312, %274 ], [ 0, %272 ], [ 0, %314 ]\l  %330 = phi i64 [ %311, %274 ], [ 0, %272 ], [ %324, %314 ]\l  %331 = icmp ugt i32 %329, 7\l  br i1 %331, label %334, label %332\l|{<s0>T|<s1>F}}"];
	Node0x57e6800:s0 -> Node0x57e9280;
	Node0x57e6800:s1 -> Node0x57e92d0;
	Node0x57e92d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%332:\l332:                                              \l  %333 = icmp eq i32 %329, 0\l  br i1 %333, label %387, label %374\l|{<s0>T|<s1>F}}"];
	Node0x57e92d0:s0 -> Node0x57e9460;
	Node0x57e92d0:s1 -> Node0x57e94b0;
	Node0x57e9280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%334:\l334:                                              \l  %335 = load i8, i8 addrspace(4)* %328, align 1, !tbaa !19\l  %336 = zext i8 %335 to i64\l  %337 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 1\l  %338 = load i8, i8 addrspace(4)* %337, align 1, !tbaa !19\l  %339 = zext i8 %338 to i64\l  %340 = shl nuw nsw i64 %339, 8\l  %341 = or i64 %340, %336\l  %342 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 2\l  %343 = load i8, i8 addrspace(4)* %342, align 1, !tbaa !19\l  %344 = zext i8 %343 to i64\l  %345 = shl nuw nsw i64 %344, 16\l  %346 = or i64 %341, %345\l  %347 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 3\l  %348 = load i8, i8 addrspace(4)* %347, align 1, !tbaa !19\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw nsw i64 %349, 24\l  %351 = or i64 %346, %350\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 4\l  %353 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !19\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw nsw i64 %354, 32\l  %356 = or i64 %351, %355\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 5\l  %358 = load i8, i8 addrspace(4)* %357, align 1, !tbaa !19\l  %359 = zext i8 %358 to i64\l  %360 = shl nuw nsw i64 %359, 40\l  %361 = or i64 %356, %360\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 6\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !19\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 48\l  %366 = or i64 %361, %365\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 7\l  %368 = load i8, i8 addrspace(4)* %367, align 1, !tbaa !19\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw i64 %369, 56\l  %371 = or i64 %366, %370\l  %372 = add nsw i32 %329, -8\l  %373 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 8\l  br label %387\l}"];
	Node0x57e9280 -> Node0x57e9460;
	Node0x57e94b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%374:\l374:                                              \l  %375 = phi i32 [ %385, %374 ], [ 0, %332 ]\l  %376 = phi i64 [ %384, %374 ], [ 0, %332 ]\l  %377 = zext i32 %375 to i64\l  %378 = getelementptr inbounds i8, i8 addrspace(4)* %328, i64 %377\l  %379 = load i8, i8 addrspace(4)* %378, align 1, !tbaa !19\l  %380 = zext i8 %379 to i64\l  %381 = shl i32 %375, 3\l  %382 = zext i32 %381 to i64\l  %383 = shl nuw i64 %380, %382\l  %384 = or i64 %383, %376\l  %385 = add nuw nsw i32 %375, 1\l  %386 = icmp eq i32 %385, %329\l  br i1 %386, label %387, label %374\l|{<s0>T|<s1>F}}"];
	Node0x57e94b0:s0 -> Node0x57e9460;
	Node0x57e94b0:s1 -> Node0x57e94b0;
	Node0x57e9460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%387:\l387:                                              \l  %388 = phi i8 addrspace(4)* [ %373, %334 ], [ %328, %332 ], [ %328, %374 ]\l  %389 = phi i32 [ %372, %334 ], [ 0, %332 ], [ 0, %374 ]\l  %390 = phi i64 [ %371, %334 ], [ 0, %332 ], [ %384, %374 ]\l  %391 = icmp ugt i32 %389, 7\l  br i1 %391, label %394, label %392\l|{<s0>T|<s1>F}}"];
	Node0x57e9460:s0 -> Node0x57eb4d0;
	Node0x57e9460:s1 -> Node0x57eb520;
	Node0x57eb520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%392:\l392:                                              \l  %393 = icmp eq i32 %389, 0\l  br i1 %393, label %447, label %434\l|{<s0>T|<s1>F}}"];
	Node0x57eb520:s0 -> Node0x57eb6b0;
	Node0x57eb520:s1 -> Node0x57eb700;
	Node0x57eb4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%394:\l394:                                              \l  %395 = load i8, i8 addrspace(4)* %388, align 1, !tbaa !19\l  %396 = zext i8 %395 to i64\l  %397 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 1\l  %398 = load i8, i8 addrspace(4)* %397, align 1, !tbaa !19\l  %399 = zext i8 %398 to i64\l  %400 = shl nuw nsw i64 %399, 8\l  %401 = or i64 %400, %396\l  %402 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 2\l  %403 = load i8, i8 addrspace(4)* %402, align 1, !tbaa !19\l  %404 = zext i8 %403 to i64\l  %405 = shl nuw nsw i64 %404, 16\l  %406 = or i64 %401, %405\l  %407 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 3\l  %408 = load i8, i8 addrspace(4)* %407, align 1, !tbaa !19\l  %409 = zext i8 %408 to i64\l  %410 = shl nuw nsw i64 %409, 24\l  %411 = or i64 %406, %410\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 4\l  %413 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !19\l  %414 = zext i8 %413 to i64\l  %415 = shl nuw nsw i64 %414, 32\l  %416 = or i64 %411, %415\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 5\l  %418 = load i8, i8 addrspace(4)* %417, align 1, !tbaa !19\l  %419 = zext i8 %418 to i64\l  %420 = shl nuw nsw i64 %419, 40\l  %421 = or i64 %416, %420\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 6\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !19\l  %424 = zext i8 %423 to i64\l  %425 = shl nuw nsw i64 %424, 48\l  %426 = or i64 %421, %425\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 7\l  %428 = load i8, i8 addrspace(4)* %427, align 1, !tbaa !19\l  %429 = zext i8 %428 to i64\l  %430 = shl nuw i64 %429, 56\l  %431 = or i64 %426, %430\l  %432 = add nsw i32 %389, -8\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 8\l  br label %447\l}"];
	Node0x57eb4d0 -> Node0x57eb6b0;
	Node0x57eb700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%434:\l434:                                              \l  %435 = phi i32 [ %445, %434 ], [ 0, %392 ]\l  %436 = phi i64 [ %444, %434 ], [ 0, %392 ]\l  %437 = zext i32 %435 to i64\l  %438 = getelementptr inbounds i8, i8 addrspace(4)* %388, i64 %437\l  %439 = load i8, i8 addrspace(4)* %438, align 1, !tbaa !19\l  %440 = zext i8 %439 to i64\l  %441 = shl i32 %435, 3\l  %442 = zext i32 %441 to i64\l  %443 = shl nuw i64 %440, %442\l  %444 = or i64 %443, %436\l  %445 = add nuw nsw i32 %435, 1\l  %446 = icmp eq i32 %445, %389\l  br i1 %446, label %447, label %434\l|{<s0>T|<s1>F}}"];
	Node0x57eb700:s0 -> Node0x57eb6b0;
	Node0x57eb700:s1 -> Node0x57eb700;
	Node0x57eb6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%447:\l447:                                              \l  %448 = phi i8 addrspace(4)* [ %433, %394 ], [ %388, %392 ], [ %388, %434 ]\l  %449 = phi i32 [ %432, %394 ], [ 0, %392 ], [ 0, %434 ]\l  %450 = phi i64 [ %431, %394 ], [ 0, %392 ], [ %444, %434 ]\l  %451 = icmp ugt i32 %449, 7\l  br i1 %451, label %454, label %452\l|{<s0>T|<s1>F}}"];
	Node0x57eb6b0:s0 -> Node0x57edd30;
	Node0x57eb6b0:s1 -> Node0x57edd80;
	Node0x57edd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%452:\l452:                                              \l  %453 = icmp eq i32 %449, 0\l  br i1 %453, label %505, label %492\l|{<s0>T|<s1>F}}"];
	Node0x57edd80:s0 -> Node0x57ddcd0;
	Node0x57edd80:s1 -> Node0x57edf10;
	Node0x57edd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%454:\l454:                                              \l  %455 = load i8, i8 addrspace(4)* %448, align 1, !tbaa !19\l  %456 = zext i8 %455 to i64\l  %457 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 1\l  %458 = load i8, i8 addrspace(4)* %457, align 1, !tbaa !19\l  %459 = zext i8 %458 to i64\l  %460 = shl nuw nsw i64 %459, 8\l  %461 = or i64 %460, %456\l  %462 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 2\l  %463 = load i8, i8 addrspace(4)* %462, align 1, !tbaa !19\l  %464 = zext i8 %463 to i64\l  %465 = shl nuw nsw i64 %464, 16\l  %466 = or i64 %461, %465\l  %467 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 3\l  %468 = load i8, i8 addrspace(4)* %467, align 1, !tbaa !19\l  %469 = zext i8 %468 to i64\l  %470 = shl nuw nsw i64 %469, 24\l  %471 = or i64 %466, %470\l  %472 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 4\l  %473 = load i8, i8 addrspace(4)* %472, align 1, !tbaa !19\l  %474 = zext i8 %473 to i64\l  %475 = shl nuw nsw i64 %474, 32\l  %476 = or i64 %471, %475\l  %477 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 5\l  %478 = load i8, i8 addrspace(4)* %477, align 1, !tbaa !19\l  %479 = zext i8 %478 to i64\l  %480 = shl nuw nsw i64 %479, 40\l  %481 = or i64 %476, %480\l  %482 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 6\l  %483 = load i8, i8 addrspace(4)* %482, align 1, !tbaa !19\l  %484 = zext i8 %483 to i64\l  %485 = shl nuw nsw i64 %484, 48\l  %486 = or i64 %481, %485\l  %487 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 7\l  %488 = load i8, i8 addrspace(4)* %487, align 1, !tbaa !19\l  %489 = zext i8 %488 to i64\l  %490 = shl nuw i64 %489, 56\l  %491 = or i64 %486, %490\l  br label %505\l}"];
	Node0x57edd30 -> Node0x57ddcd0;
	Node0x57edf10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%492:\l492:                                              \l  %493 = phi i32 [ %503, %492 ], [ 0, %452 ]\l  %494 = phi i64 [ %502, %492 ], [ 0, %452 ]\l  %495 = zext i32 %493 to i64\l  %496 = getelementptr inbounds i8, i8 addrspace(4)* %448, i64 %495\l  %497 = load i8, i8 addrspace(4)* %496, align 1, !tbaa !19\l  %498 = zext i8 %497 to i64\l  %499 = shl i32 %493, 3\l  %500 = zext i32 %499 to i64\l  %501 = shl nuw i64 %498, %500\l  %502 = or i64 %501, %494\l  %503 = add nuw nsw i32 %493, 1\l  %504 = icmp eq i32 %503, %449\l  br i1 %504, label %505, label %492\l|{<s0>T|<s1>F}}"];
	Node0x57edf10:s0 -> Node0x57ddcd0;
	Node0x57edf10:s1 -> Node0x57edf10;
	Node0x57ddcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%505:\l505:                                              \l  %506 = phi i64 [ %491, %454 ], [ 0, %452 ], [ %502, %492 ]\l  %507 = shl nuw nsw i64 %88, 2\l  %508 = add nuw nsw i64 %507, 28\l  %509 = and i64 %508, 480\l  %510 = and i64 %90, -225\l  %511 = or i64 %510, %509\l  %512 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %68,\l... i64 noundef %511, i64 noundef %150, i64 noundef %210, i64 noundef %270, i64\l... noundef %330, i64 noundef %390, i64 noundef %450, i64 noundef %506) #11\l  %513 = sub i64 %80, %88\l  %514 = getelementptr inbounds i8, i8 addrspace(4)* %81, i64 %88\l  %515 = icmp eq i64 %513, 0\l  br i1 %515, label %516, label %79\l|{<s0>T|<s1>F}}"];
	Node0x57ddcd0:s0 -> Node0x57dcc90;
	Node0x57ddcd0:s1 -> Node0x57dd830;
	Node0x57dcc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%516:\l516:                                              \l  %517 = phi \<2 x i64\> [ %74, %71 ], [ %512, %505 ]\l  %518 = extractelement \<2 x i64\> %517, i64 0\l  %519 = bitcast double %62 to i64\l  %520 = and i64 %518, -227\l  %521 = or i64 %520, 34\l  %522 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %68,\l... i64 noundef %521, i64 noundef %519, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %523\l}"];
	Node0x57dcc90 -> Node0x57da130;
	Node0x57da130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%523:\l523:                                              \l  ret void\l}"];
}
