digraph "CFG for '_Z3MulPfS_iS_' function" {
	label="CFG for '_Z3MulPfS_iS_' function";

	Node0x5afda20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp sgt i32 %2, 0\l  br i1 %14, label %15, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5afda20:s0 -> Node0x5aff940;
	Node0x5afda20:s1 -> Node0x5aff9d0;
	Node0x5aff940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul nsw i32 %23, %2\l  %25 = add nsw i32 %24, %13\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %28 = and i32 %2, 7\l  %29 = icmp ult i32 %2, 8\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5aff940:s0 -> Node0x5b018d0;
	Node0x5aff940:s1 -> Node0x5b01960;
	Node0x5b01960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%30:\l30:                                               \l  %31 = and i32 %2, -8\l  br label %53\l}"];
	Node0x5b01960 -> Node0x5b01b60;
	Node0x5b018d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = phi i32 [ 0, %15 ], [ %151, %53 ]\l  %34 = icmp eq i32 %28, 0\l  br i1 %34, label %52, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5b018d0:s0 -> Node0x5aff9d0;
	Node0x5b018d0:s1 -> Node0x5b01ec0;
	Node0x5b01ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %49, %35 ], [ %33, %32 ]\l  %37 = phi i32 [ %50, %35 ], [ 0, %32 ]\l  %38 = add nsw i32 %36, %24\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = mul nsw i32 %36, %2\l  %43 = add nsw i32 %42, %13\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fmul contract float %41, %46\l  %48 = atomicrmw fadd float addrspace(1)* %27, float %47\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %49 = add nuw nsw i32 %36, 1\l  %50 = add i32 %37, 1\l  %51 = icmp eq i32 %50, %28\l  br i1 %51, label %52, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b01ec0:s0 -> Node0x5aff9d0;
	Node0x5b01ec0:s1 -> Node0x5b01ec0;
	Node0x5aff9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%52:\l52:                                               \l  ret void\l}"];
	Node0x5b01b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %30 ], [ %151, %53 ]\l  %55 = phi i32 [ 0, %30 ], [ %152, %53 ]\l  %56 = add nsw i32 %54, %24\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = mul nsw i32 %54, %2\l  %61 = add nsw i32 %60, %13\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = fmul contract float %59, %64\l  %66 = atomicrmw fadd float addrspace(1)* %27, float %65\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %67 = or i32 %54, 1\l  %68 = add nsw i32 %67, %24\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = mul nsw i32 %67, %2\l  %73 = add nsw i32 %72, %13\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %71, %76\l  %78 = atomicrmw fadd float addrspace(1)* %27, float %77\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %79 = or i32 %54, 2\l  %80 = add nsw i32 %79, %24\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = mul nsw i32 %79, %2\l  %85 = add nsw i32 %84, %13\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fmul contract float %83, %88\l  %90 = atomicrmw fadd float addrspace(1)* %27, float %89\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %91 = or i32 %54, 3\l  %92 = add nsw i32 %91, %24\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7\l  %96 = mul nsw i32 %91, %2\l  %97 = add nsw i32 %96, %13\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %0, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fmul contract float %95, %100\l  %102 = atomicrmw fadd float addrspace(1)* %27, float %101\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %103 = or i32 %54, 4\l  %104 = add nsw i32 %103, %24\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %0, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = mul nsw i32 %103, %2\l  %109 = add nsw i32 %108, %13\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %0, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = fmul contract float %107, %112\l  %114 = atomicrmw fadd float addrspace(1)* %27, float %113\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %115 = or i32 %54, 5\l  %116 = add nsw i32 %115, %24\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = mul nsw i32 %115, %2\l  %121 = add nsw i32 %120, %13\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %0, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7\l  %125 = fmul contract float %119, %124\l  %126 = atomicrmw fadd float addrspace(1)* %27, float %125\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %127 = or i32 %54, 6\l  %128 = add nsw i32 %127, %24\l  %129 = sext i32 %128 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = mul nsw i32 %127, %2\l  %133 = add nsw i32 %132, %13\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %0, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !7\l  %137 = fmul contract float %131, %136\l  %138 = atomicrmw fadd float addrspace(1)* %27, float %137\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %139 = or i32 %54, 7\l  %140 = add nsw i32 %139, %24\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !7\l  %144 = mul nsw i32 %139, %2\l  %145 = add nsw i32 %144, %13\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %0, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !7\l  %149 = fmul contract float %143, %148\l  %150 = atomicrmw fadd float addrspace(1)* %27, float %149\l... syncscope(\"agent-one-as\") monotonic, align 4\l  %151 = add nuw nsw i32 %54, 8\l  %152 = add i32 %55, 8\l  %153 = icmp eq i32 %152, %31\l  br i1 %153, label %32, label %53, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b01b60:s0 -> Node0x5b018d0;
	Node0x5b01b60:s1 -> Node0x5b01b60;
}
