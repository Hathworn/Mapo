digraph "CFG for '_Z6Div180PiS_iii' function" {
	label="CFG for '_Z6Div180PiS_iii' function";

	Node0x4e30470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %22 = add i32 %20, %21\l  %23 = mul nsw i32 %22, %2\l  %24 = add nsw i32 %14, %23\l  %25 = icmp sgt i32 %2, 0\l  br i1 %25, label %26, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4e30470:s0 -> Node0x4e33ec0;
	Node0x4e30470:s1 -> Node0x4e33f50;
	Node0x4e33ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%26:\l26:                                               \l  %27 = add nsw i32 %24, 1\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %28\l  %30 = sext i32 %24 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = add i32 %24, %2\l  %33 = add i32 %32, 1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %34\l  %36 = sext i32 %32 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = add i32 %2, -1\l  %39 = lshr i32 %38, 1\l  %40 = add nuw i32 %39, 1\l  %41 = and i32 %40, 1\l  %42 = icmp ult i32 %2, 3\l  br i1 %42, label %45, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4e33ec0:s0 -> Node0x4e34af0;
	Node0x4e33ec0:s1 -> Node0x4e34b40;
	Node0x4e34b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = and i32 %40, -2\l  br label %72\l}"];
	Node0x4e34b40 -> Node0x4e34d40;
	Node0x4e34af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%45:\l45:                                               \l  %46 = phi i32 [ 0, %26 ], [ %122, %121 ]\l  %47 = icmp eq i32 %41, 0\l  %48 = mul nsw i32 %46, %2\l  %49 = icmp slt i32 %24, %48\l  %50 = select i1 %47, i1 true, i1 %49\l  br i1 %50, label %71, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4e34af0:s0 -> Node0x4e33f50;
	Node0x4e34af0:s1 -> Node0x4e35200;
	Node0x4e35200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%51:\l51:                                               \l  %52 = or i32 %46, 1\l  %53 = mul nsw i32 %52, %2\l  %54 = add nsw i32 %53, -1\l  %55 = icmp slt i32 %24, %54\l  br i1 %55, label %56, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4e35200:s0 -> Node0x4e35580;
	Node0x4e35200:s1 -> Node0x4e33f50;
	Node0x4e35580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%56:\l56:                                               \l  %57 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7\l  %58 = mul nsw i32 %57, %2\l  %59 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %60 = add nsw i32 %58, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %61\l  %63 = atomicrmw add i32 addrspace(1)* %62, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %64 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %65 = mul nsw i32 %64, %2\l  %66 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %67 = add nsw i32 %65, %66\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = atomicrmw add i32 addrspace(1)* %69, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %71\l}"];
	Node0x4e35580 -> Node0x4e33f50;
	Node0x4e33f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%71:\l71:                                               \l  ret void\l}"];
	Node0x4e34d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %43 ], [ %122, %121 ]\l  %74 = phi i32 [ 0, %43 ], [ %123, %121 ]\l  %75 = mul nsw i32 %73, %2\l  %76 = icmp slt i32 %24, %75\l  br i1 %76, label %97, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4e34d40:s0 -> Node0x4e36a80;
	Node0x4e34d40:s1 -> Node0x4e36ad0;
	Node0x4e36ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%77:\l77:                                               \l  %78 = or i32 %73, 1\l  %79 = mul nsw i32 %78, %2\l  %80 = add nsw i32 %79, -1\l  %81 = icmp slt i32 %24, %80\l  br i1 %81, label %82, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4e36ad0:s0 -> Node0x4e36e50;
	Node0x4e36ad0:s1 -> Node0x4e36a80;
	Node0x4e36e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%82:\l82:                                               \l  %83 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7\l  %84 = mul nsw i32 %83, %2\l  %85 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %86 = add nsw i32 %84, %85\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %87\l  %89 = atomicrmw add i32 addrspace(1)* %88, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %90 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %91 = mul nsw i32 %90, %2\l  %92 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %93 = add nsw i32 %91, %92\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %94\l  %96 = atomicrmw add i32 addrspace(1)* %95, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %97\l}"];
	Node0x4e36e50 -> Node0x4e36a80;
	Node0x4e36a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = or i32 %73, 2\l  %99 = mul nsw i32 %98, %2\l  %100 = icmp slt i32 %24, %99\l  br i1 %100, label %121, label %101\l|{<s0>T|<s1>F}}"];
	Node0x4e36a80:s0 -> Node0x4e34e30;
	Node0x4e36a80:s1 -> Node0x4e378e0;
	Node0x4e378e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%101:\l101:                                              \l  %102 = or i32 %73, 3\l  %103 = mul nsw i32 %102, %2\l  %104 = add nsw i32 %103, -1\l  %105 = icmp slt i32 %24, %104\l  br i1 %105, label %106, label %121\l|{<s0>T|<s1>F}}"];
	Node0x4e378e0:s0 -> Node0x4e37c20;
	Node0x4e378e0:s1 -> Node0x4e34e30;
	Node0x4e37c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%106:\l106:                                              \l  %107 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !7\l  %108 = mul nsw i32 %107, %2\l  %109 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %110 = add nsw i32 %108, %109\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %111\l  %113 = atomicrmw add i32 addrspace(1)* %112, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %114 = load i32, i32 addrspace(1)* %35, align 4, !tbaa !7\l  %115 = mul nsw i32 %114, %2\l  %116 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7\l  %117 = add nsw i32 %115, %116\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %118\l  %120 = atomicrmw add i32 addrspace(1)* %119, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  br label %121\l}"];
	Node0x4e37c20 -> Node0x4e34e30;
	Node0x4e34e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%121:\l121:                                              \l  %122 = add nuw nsw i32 %73, 4\l  %123 = add nuw nsw i32 %74, 2\l  %124 = icmp eq i32 %123, %44\l  br i1 %124, label %45, label %72, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4e34e30:s0 -> Node0x4e34af0;
	Node0x4e34e30:s1 -> Node0x4e34d40;
}
