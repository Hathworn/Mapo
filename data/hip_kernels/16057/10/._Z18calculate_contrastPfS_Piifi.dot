digraph "CFG for '_Z18calculate_contrastPfS_Piifi' function" {
	label="CFG for '_Z18calculate_contrastPfS_Piifi' function";

	Node0x473a290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = add i32 %14, %7\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = add i32 %22, %16\l  %24 = mul nsw i32 %23, %3\l  %25 = add nsw i32 %15, %24\l  %26 = mul nsw i32 %3, %3\l  %27 = icmp ult i32 %25, %26\l  br i1 %27, label %28, label %524\l|{<s0>T|<s1>F}}"];
	Node0x473a290:s0 -> Node0x473dd50;
	Node0x473a290:s1 -> Node0x473dde0;
	Node0x473dd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%28:\l28:                                               \l  %29 = icmp ult i32 %25, %5\l  br i1 %29, label %30, label %39\l|{<s0>T|<s1>F}}"];
	Node0x473dd50:s0 -> Node0x473dfb0;
	Node0x473dd50:s1 -> Node0x473e000;
	Node0x473dfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%30:\l30:                                               \l  %31 = zext i32 %25 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %31\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %36 = sitofp i32 %35 to float\l  %37 = fmul contract float %33, %36\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  store float %37, float addrspace(1)* %38, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %39\l}"];
	Node0x473dfb0 -> Node0x473e000;
	Node0x473e000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%39:\l39:                                               \l  %40 = icmp sgt i32 %3, 1\l  br i1 %40, label %41, label %44\l|{<s0>T|<s1>F}}"];
	Node0x473e000:s0 -> Node0x473f400;
	Node0x473e000:s1 -> Node0x473f450;
	Node0x473f400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%41:\l41:                                               \l  %42 = zext i32 %25 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  br label %46\l}"];
	Node0x473f400 -> Node0x473f6a0;
	Node0x473f450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%44:\l44:                                               \l  %45 = icmp eq i32 %25, 0\l  br i1 %45, label %61, label %524\l|{<s0>T|<s1>F}}"];
	Node0x473f450:s0 -> Node0x473f820;
	Node0x473f450:s1 -> Node0x473dde0;
	Node0x473f6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%46:\l46:                                               \l  %47 = phi i32 [ 1, %41 ], [ %48, %59 ]\l  %48 = shl nsw i32 %47, 1\l  %49 = add i32 %48, 1023\l  %50 = and i32 %49, %7\l  %51 = icmp eq i32 %50, 0\l  br i1 %51, label %52, label %59\l|{<s0>T|<s1>F}}"];
	Node0x473f6a0:s0 -> Node0x473fcd0;
	Node0x473f6a0:s1 -> Node0x473f950;
	Node0x473fcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%52:\l52:                                               \l  %53 = add i32 %47, %25\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7\l  %57 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %58 = fadd contract float %56, %57\l  store float %58, float addrspace(1)* %43, align 4, !tbaa !7\l  br label %59\l}"];
	Node0x473fcd0 -> Node0x473f950;
	Node0x473f950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%59:\l59:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %60 = icmp slt i32 %48, %3\l  br i1 %60, label %46, label %44, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x473f950:s0 -> Node0x473f6a0;
	Node0x473f950:s1 -> Node0x473f450;
	Node0x473f820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%61:\l61:                                               \l  %62 = load float, float addrspace(1)* %1, align 4, !tbaa !7\l  %63 = fpext float %62 to double\l  %64 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %65 = getelementptr inbounds i8, i8 addrspace(4)* %64, i64 24\l  %66 = bitcast i8 addrspace(4)* %65 to i64 addrspace(4)*\l  %67 = load i64, i64 addrspace(4)* %66, align 8, !tbaa !15\l  %68 = inttoptr i64 %67 to i8 addrspace(1)*\l  %69 = addrspacecast i8 addrspace(1)* %68 to i8*\l  %70 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %69,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %71 = extractelement \<2 x i64\> %70, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([13 x i8], [13 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %72, label %76\l|{<s0>T|<s1>F}}"];
	Node0x473f820:s0 -> Node0x4741680;
	Node0x473f820:s1 -> Node0x4742070;
	Node0x4741680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%72:\l72:                                               \l  %73 = and i64 %71, -225\l  %74 = or i64 %73, 32\l  %75 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %69,\l... i64 noundef %74, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %517\l}"];
	Node0x4741680 -> Node0x4742330;
	Node0x4742070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%76:\l76:                                               \l  %77 = and i64 %71, 2\l  %78 = and i64 %71, -3\l  %79 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %78, i64 0\l  br label %80\l}"];
	Node0x4742070 -> Node0x4742ed0;
	Node0x4742ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%80:\l80:                                               \l  %81 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([13 x i8], [13 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([13 x i8], [13 x i8] addrspace(4)*\l... @.str, i64 0, i64 12) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([13 x i8]* addrspacecast ([13 x i8] addrspace(4)* @.str to [13 x i8]*) to\l... i64)), i64 1))), %76 ], [ %514, %506 ]\l  %82 = phi i8 addrspace(4)* [ getelementptr inbounds ([13 x i8], [13 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %76 ], [ %515, %506 ]\l  %83 = phi \<2 x i64\> [ %79, %76 ], [ %513, %506 ]\l  %84 = icmp ugt i64 %81, 56\l  %85 = extractelement \<2 x i64\> %83, i64 0\l  %86 = or i64 %85, %77\l  %87 = insertelement \<2 x i64\> poison, i64 %86, i64 0\l  %88 = select i1 %84, \<2 x i64\> %83, \<2 x i64\> %87\l  %89 = tail call i64 @llvm.umin.i64(i64 %81, i64 56)\l  %90 = trunc i64 %89 to i32\l  %91 = extractelement \<2 x i64\> %88, i64 0\l  %92 = icmp ugt i32 %90, 7\l  br i1 %92, label %95, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4742ed0:s0 -> Node0x4743e10;
	Node0x4742ed0:s1 -> Node0x4743ea0;
	Node0x4743ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%93:\l93:                                               \l  %94 = icmp eq i32 %90, 0\l  br i1 %94, label %148, label %135\l|{<s0>T|<s1>F}}"];
	Node0x4743ea0:s0 -> Node0x4744070;
	Node0x4743ea0:s1 -> Node0x47440c0;
	Node0x4743e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%95:\l95:                                               \l  %96 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !19\l  %97 = zext i8 %96 to i64\l  %98 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 1\l  %99 = load i8, i8 addrspace(4)* %98, align 1, !tbaa !19\l  %100 = zext i8 %99 to i64\l  %101 = shl nuw nsw i64 %100, 8\l  %102 = or i64 %101, %97\l  %103 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 2\l  %104 = load i8, i8 addrspace(4)* %103, align 1, !tbaa !19\l  %105 = zext i8 %104 to i64\l  %106 = shl nuw nsw i64 %105, 16\l  %107 = or i64 %102, %106\l  %108 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 3\l  %109 = load i8, i8 addrspace(4)* %108, align 1, !tbaa !19\l  %110 = zext i8 %109 to i64\l  %111 = shl nuw nsw i64 %110, 24\l  %112 = or i64 %107, %111\l  %113 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 4\l  %114 = load i8, i8 addrspace(4)* %113, align 1, !tbaa !19\l  %115 = zext i8 %114 to i64\l  %116 = shl nuw nsw i64 %115, 32\l  %117 = or i64 %112, %116\l  %118 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 5\l  %119 = load i8, i8 addrspace(4)* %118, align 1, !tbaa !19\l  %120 = zext i8 %119 to i64\l  %121 = shl nuw nsw i64 %120, 40\l  %122 = or i64 %117, %121\l  %123 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 6\l  %124 = load i8, i8 addrspace(4)* %123, align 1, !tbaa !19\l  %125 = zext i8 %124 to i64\l  %126 = shl nuw nsw i64 %125, 48\l  %127 = or i64 %122, %126\l  %128 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 7\l  %129 = load i8, i8 addrspace(4)* %128, align 1, !tbaa !19\l  %130 = zext i8 %129 to i64\l  %131 = shl nuw i64 %130, 56\l  %132 = or i64 %127, %131\l  %133 = add nsw i32 %90, -8\l  %134 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 8\l  br label %148\l}"];
	Node0x4743e10 -> Node0x4744070;
	Node0x47440c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%135:\l135:                                              \l  %136 = phi i32 [ %146, %135 ], [ 0, %93 ]\l  %137 = phi i64 [ %145, %135 ], [ 0, %93 ]\l  %138 = zext i32 %136 to i64\l  %139 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 %138\l  %140 = load i8, i8 addrspace(4)* %139, align 1, !tbaa !19\l  %141 = zext i8 %140 to i64\l  %142 = shl i32 %136, 3\l  %143 = zext i32 %142 to i64\l  %144 = shl nuw i64 %141, %143\l  %145 = or i64 %144, %137\l  %146 = add nuw nsw i32 %136, 1\l  %147 = icmp eq i32 %146, %90\l  br i1 %147, label %148, label %135, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x47440c0:s0 -> Node0x4744070;
	Node0x47440c0:s1 -> Node0x47440c0;
	Node0x4744070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%148:\l148:                                              \l  %149 = phi i8 addrspace(4)* [ %134, %95 ], [ %82, %93 ], [ %82, %135 ]\l  %150 = phi i32 [ %133, %95 ], [ 0, %93 ], [ 0, %135 ]\l  %151 = phi i64 [ %132, %95 ], [ 0, %93 ], [ %145, %135 ]\l  %152 = icmp ugt i32 %150, 7\l  br i1 %152, label %155, label %153\l|{<s0>T|<s1>F}}"];
	Node0x4744070:s0 -> Node0x4746f40;
	Node0x4744070:s1 -> Node0x4746f90;
	Node0x4746f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%153:\l153:                                              \l  %154 = icmp eq i32 %150, 0\l  br i1 %154, label %208, label %195\l|{<s0>T|<s1>F}}"];
	Node0x4746f90:s0 -> Node0x4747120;
	Node0x4746f90:s1 -> Node0x4747170;
	Node0x4746f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%155:\l155:                                              \l  %156 = load i8, i8 addrspace(4)* %149, align 1, !tbaa !19\l  %157 = zext i8 %156 to i64\l  %158 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 1\l  %159 = load i8, i8 addrspace(4)* %158, align 1, !tbaa !19\l  %160 = zext i8 %159 to i64\l  %161 = shl nuw nsw i64 %160, 8\l  %162 = or i64 %161, %157\l  %163 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 2\l  %164 = load i8, i8 addrspace(4)* %163, align 1, !tbaa !19\l  %165 = zext i8 %164 to i64\l  %166 = shl nuw nsw i64 %165, 16\l  %167 = or i64 %162, %166\l  %168 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 3\l  %169 = load i8, i8 addrspace(4)* %168, align 1, !tbaa !19\l  %170 = zext i8 %169 to i64\l  %171 = shl nuw nsw i64 %170, 24\l  %172 = or i64 %167, %171\l  %173 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 4\l  %174 = load i8, i8 addrspace(4)* %173, align 1, !tbaa !19\l  %175 = zext i8 %174 to i64\l  %176 = shl nuw nsw i64 %175, 32\l  %177 = or i64 %172, %176\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 5\l  %179 = load i8, i8 addrspace(4)* %178, align 1, !tbaa !19\l  %180 = zext i8 %179 to i64\l  %181 = shl nuw nsw i64 %180, 40\l  %182 = or i64 %177, %181\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 6\l  %184 = load i8, i8 addrspace(4)* %183, align 1, !tbaa !19\l  %185 = zext i8 %184 to i64\l  %186 = shl nuw nsw i64 %185, 48\l  %187 = or i64 %182, %186\l  %188 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 7\l  %189 = load i8, i8 addrspace(4)* %188, align 1, !tbaa !19\l  %190 = zext i8 %189 to i64\l  %191 = shl nuw i64 %190, 56\l  %192 = or i64 %187, %191\l  %193 = add nsw i32 %150, -8\l  %194 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 8\l  br label %208\l}"];
	Node0x4746f40 -> Node0x4747120;
	Node0x4747170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%195:\l195:                                              \l  %196 = phi i32 [ %206, %195 ], [ 0, %153 ]\l  %197 = phi i64 [ %205, %195 ], [ 0, %153 ]\l  %198 = zext i32 %196 to i64\l  %199 = getelementptr inbounds i8, i8 addrspace(4)* %149, i64 %198\l  %200 = load i8, i8 addrspace(4)* %199, align 1, !tbaa !19\l  %201 = zext i8 %200 to i64\l  %202 = shl i32 %196, 3\l  %203 = zext i32 %202 to i64\l  %204 = shl nuw i64 %201, %203\l  %205 = or i64 %204, %197\l  %206 = add nuw nsw i32 %196, 1\l  %207 = icmp eq i32 %206, %150\l  br i1 %207, label %208, label %195\l|{<s0>T|<s1>F}}"];
	Node0x4747170:s0 -> Node0x4747120;
	Node0x4747170:s1 -> Node0x4747170;
	Node0x4747120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%208:\l208:                                              \l  %209 = phi i8 addrspace(4)* [ %194, %155 ], [ %149, %153 ], [ %149, %195 ]\l  %210 = phi i32 [ %193, %155 ], [ 0, %153 ], [ 0, %195 ]\l  %211 = phi i64 [ %192, %155 ], [ 0, %153 ], [ %205, %195 ]\l  %212 = icmp ugt i32 %210, 7\l  br i1 %212, label %215, label %213\l|{<s0>T|<s1>F}}"];
	Node0x4747120:s0 -> Node0x4749230;
	Node0x4747120:s1 -> Node0x4749280;
	Node0x4749280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%213:\l213:                                              \l  %214 = icmp eq i32 %210, 0\l  br i1 %214, label %268, label %255\l|{<s0>T|<s1>F}}"];
	Node0x4749280:s0 -> Node0x4749410;
	Node0x4749280:s1 -> Node0x4749460;
	Node0x4749230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%215:\l215:                                              \l  %216 = load i8, i8 addrspace(4)* %209, align 1, !tbaa !19\l  %217 = zext i8 %216 to i64\l  %218 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 1\l  %219 = load i8, i8 addrspace(4)* %218, align 1, !tbaa !19\l  %220 = zext i8 %219 to i64\l  %221 = shl nuw nsw i64 %220, 8\l  %222 = or i64 %221, %217\l  %223 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 2\l  %224 = load i8, i8 addrspace(4)* %223, align 1, !tbaa !19\l  %225 = zext i8 %224 to i64\l  %226 = shl nuw nsw i64 %225, 16\l  %227 = or i64 %222, %226\l  %228 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 3\l  %229 = load i8, i8 addrspace(4)* %228, align 1, !tbaa !19\l  %230 = zext i8 %229 to i64\l  %231 = shl nuw nsw i64 %230, 24\l  %232 = or i64 %227, %231\l  %233 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 4\l  %234 = load i8, i8 addrspace(4)* %233, align 1, !tbaa !19\l  %235 = zext i8 %234 to i64\l  %236 = shl nuw nsw i64 %235, 32\l  %237 = or i64 %232, %236\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 5\l  %239 = load i8, i8 addrspace(4)* %238, align 1, !tbaa !19\l  %240 = zext i8 %239 to i64\l  %241 = shl nuw nsw i64 %240, 40\l  %242 = or i64 %237, %241\l  %243 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 6\l  %244 = load i8, i8 addrspace(4)* %243, align 1, !tbaa !19\l  %245 = zext i8 %244 to i64\l  %246 = shl nuw nsw i64 %245, 48\l  %247 = or i64 %242, %246\l  %248 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 7\l  %249 = load i8, i8 addrspace(4)* %248, align 1, !tbaa !19\l  %250 = zext i8 %249 to i64\l  %251 = shl nuw i64 %250, 56\l  %252 = or i64 %247, %251\l  %253 = add nsw i32 %210, -8\l  %254 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 8\l  br label %268\l}"];
	Node0x4749230 -> Node0x4749410;
	Node0x4749460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%255:\l255:                                              \l  %256 = phi i32 [ %266, %255 ], [ 0, %213 ]\l  %257 = phi i64 [ %265, %255 ], [ 0, %213 ]\l  %258 = zext i32 %256 to i64\l  %259 = getelementptr inbounds i8, i8 addrspace(4)* %209, i64 %258\l  %260 = load i8, i8 addrspace(4)* %259, align 1, !tbaa !19\l  %261 = zext i8 %260 to i64\l  %262 = shl i32 %256, 3\l  %263 = zext i32 %262 to i64\l  %264 = shl nuw i64 %261, %263\l  %265 = or i64 %264, %257\l  %266 = add nuw nsw i32 %256, 1\l  %267 = icmp eq i32 %266, %210\l  br i1 %267, label %268, label %255\l|{<s0>T|<s1>F}}"];
	Node0x4749460:s0 -> Node0x4749410;
	Node0x4749460:s1 -> Node0x4749460;
	Node0x4749410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%268:\l268:                                              \l  %269 = phi i8 addrspace(4)* [ %254, %215 ], [ %209, %213 ], [ %209, %255 ]\l  %270 = phi i32 [ %253, %215 ], [ 0, %213 ], [ 0, %255 ]\l  %271 = phi i64 [ %252, %215 ], [ 0, %213 ], [ %265, %255 ]\l  %272 = icmp ugt i32 %270, 7\l  br i1 %272, label %275, label %273\l|{<s0>T|<s1>F}}"];
	Node0x4749410:s0 -> Node0x474bc90;
	Node0x4749410:s1 -> Node0x474bce0;
	Node0x474bce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%273:\l273:                                              \l  %274 = icmp eq i32 %270, 0\l  br i1 %274, label %328, label %315\l|{<s0>T|<s1>F}}"];
	Node0x474bce0:s0 -> Node0x474be70;
	Node0x474bce0:s1 -> Node0x474bec0;
	Node0x474bc90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%275:\l275:                                              \l  %276 = load i8, i8 addrspace(4)* %269, align 1, !tbaa !19\l  %277 = zext i8 %276 to i64\l  %278 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 1\l  %279 = load i8, i8 addrspace(4)* %278, align 1, !tbaa !19\l  %280 = zext i8 %279 to i64\l  %281 = shl nuw nsw i64 %280, 8\l  %282 = or i64 %281, %277\l  %283 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 2\l  %284 = load i8, i8 addrspace(4)* %283, align 1, !tbaa !19\l  %285 = zext i8 %284 to i64\l  %286 = shl nuw nsw i64 %285, 16\l  %287 = or i64 %282, %286\l  %288 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 3\l  %289 = load i8, i8 addrspace(4)* %288, align 1, !tbaa !19\l  %290 = zext i8 %289 to i64\l  %291 = shl nuw nsw i64 %290, 24\l  %292 = or i64 %287, %291\l  %293 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 4\l  %294 = load i8, i8 addrspace(4)* %293, align 1, !tbaa !19\l  %295 = zext i8 %294 to i64\l  %296 = shl nuw nsw i64 %295, 32\l  %297 = or i64 %292, %296\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 5\l  %299 = load i8, i8 addrspace(4)* %298, align 1, !tbaa !19\l  %300 = zext i8 %299 to i64\l  %301 = shl nuw nsw i64 %300, 40\l  %302 = or i64 %297, %301\l  %303 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 6\l  %304 = load i8, i8 addrspace(4)* %303, align 1, !tbaa !19\l  %305 = zext i8 %304 to i64\l  %306 = shl nuw nsw i64 %305, 48\l  %307 = or i64 %302, %306\l  %308 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 7\l  %309 = load i8, i8 addrspace(4)* %308, align 1, !tbaa !19\l  %310 = zext i8 %309 to i64\l  %311 = shl nuw i64 %310, 56\l  %312 = or i64 %307, %311\l  %313 = add nsw i32 %270, -8\l  %314 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 8\l  br label %328\l}"];
	Node0x474bc90 -> Node0x474be70;
	Node0x474bec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%315:\l315:                                              \l  %316 = phi i32 [ %326, %315 ], [ 0, %273 ]\l  %317 = phi i64 [ %325, %315 ], [ 0, %273 ]\l  %318 = zext i32 %316 to i64\l  %319 = getelementptr inbounds i8, i8 addrspace(4)* %269, i64 %318\l  %320 = load i8, i8 addrspace(4)* %319, align 1, !tbaa !19\l  %321 = zext i8 %320 to i64\l  %322 = shl i32 %316, 3\l  %323 = zext i32 %322 to i64\l  %324 = shl nuw i64 %321, %323\l  %325 = or i64 %324, %317\l  %326 = add nuw nsw i32 %316, 1\l  %327 = icmp eq i32 %326, %270\l  br i1 %327, label %328, label %315\l|{<s0>T|<s1>F}}"];
	Node0x474bec0:s0 -> Node0x474be70;
	Node0x474bec0:s1 -> Node0x474bec0;
	Node0x474be70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%328:\l328:                                              \l  %329 = phi i8 addrspace(4)* [ %314, %275 ], [ %269, %273 ], [ %269, %315 ]\l  %330 = phi i32 [ %313, %275 ], [ 0, %273 ], [ 0, %315 ]\l  %331 = phi i64 [ %312, %275 ], [ 0, %273 ], [ %325, %315 ]\l  %332 = icmp ugt i32 %330, 7\l  br i1 %332, label %335, label %333\l|{<s0>T|<s1>F}}"];
	Node0x474be70:s0 -> Node0x474e8f0;
	Node0x474be70:s1 -> Node0x474e940;
	Node0x474e940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%333:\l333:                                              \l  %334 = icmp eq i32 %330, 0\l  br i1 %334, label %388, label %375\l|{<s0>T|<s1>F}}"];
	Node0x474e940:s0 -> Node0x474ead0;
	Node0x474e940:s1 -> Node0x474eb20;
	Node0x474e8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%335:\l335:                                              \l  %336 = load i8, i8 addrspace(4)* %329, align 1, !tbaa !19\l  %337 = zext i8 %336 to i64\l  %338 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 1\l  %339 = load i8, i8 addrspace(4)* %338, align 1, !tbaa !19\l  %340 = zext i8 %339 to i64\l  %341 = shl nuw nsw i64 %340, 8\l  %342 = or i64 %341, %337\l  %343 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 2\l  %344 = load i8, i8 addrspace(4)* %343, align 1, !tbaa !19\l  %345 = zext i8 %344 to i64\l  %346 = shl nuw nsw i64 %345, 16\l  %347 = or i64 %342, %346\l  %348 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 3\l  %349 = load i8, i8 addrspace(4)* %348, align 1, !tbaa !19\l  %350 = zext i8 %349 to i64\l  %351 = shl nuw nsw i64 %350, 24\l  %352 = or i64 %347, %351\l  %353 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 4\l  %354 = load i8, i8 addrspace(4)* %353, align 1, !tbaa !19\l  %355 = zext i8 %354 to i64\l  %356 = shl nuw nsw i64 %355, 32\l  %357 = or i64 %352, %356\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 5\l  %359 = load i8, i8 addrspace(4)* %358, align 1, !tbaa !19\l  %360 = zext i8 %359 to i64\l  %361 = shl nuw nsw i64 %360, 40\l  %362 = or i64 %357, %361\l  %363 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 6\l  %364 = load i8, i8 addrspace(4)* %363, align 1, !tbaa !19\l  %365 = zext i8 %364 to i64\l  %366 = shl nuw nsw i64 %365, 48\l  %367 = or i64 %362, %366\l  %368 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 7\l  %369 = load i8, i8 addrspace(4)* %368, align 1, !tbaa !19\l  %370 = zext i8 %369 to i64\l  %371 = shl nuw i64 %370, 56\l  %372 = or i64 %367, %371\l  %373 = add nsw i32 %330, -8\l  %374 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 8\l  br label %388\l}"];
	Node0x474e8f0 -> Node0x474ead0;
	Node0x474eb20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%375:\l375:                                              \l  %376 = phi i32 [ %386, %375 ], [ 0, %333 ]\l  %377 = phi i64 [ %385, %375 ], [ 0, %333 ]\l  %378 = zext i32 %376 to i64\l  %379 = getelementptr inbounds i8, i8 addrspace(4)* %329, i64 %378\l  %380 = load i8, i8 addrspace(4)* %379, align 1, !tbaa !19\l  %381 = zext i8 %380 to i64\l  %382 = shl i32 %376, 3\l  %383 = zext i32 %382 to i64\l  %384 = shl nuw i64 %381, %383\l  %385 = or i64 %384, %377\l  %386 = add nuw nsw i32 %376, 1\l  %387 = icmp eq i32 %386, %330\l  br i1 %387, label %388, label %375\l|{<s0>T|<s1>F}}"];
	Node0x474eb20:s0 -> Node0x474ead0;
	Node0x474eb20:s1 -> Node0x474eb20;
	Node0x474ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%388:\l388:                                              \l  %389 = phi i8 addrspace(4)* [ %374, %335 ], [ %329, %333 ], [ %329, %375 ]\l  %390 = phi i32 [ %373, %335 ], [ 0, %333 ], [ 0, %375 ]\l  %391 = phi i64 [ %372, %335 ], [ 0, %333 ], [ %385, %375 ]\l  %392 = icmp ugt i32 %390, 7\l  br i1 %392, label %395, label %393\l|{<s0>T|<s1>F}}"];
	Node0x474ead0:s0 -> Node0x4750b50;
	Node0x474ead0:s1 -> Node0x4750ba0;
	Node0x4750ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%393:\l393:                                              \l  %394 = icmp eq i32 %390, 0\l  br i1 %394, label %448, label %435\l|{<s0>T|<s1>F}}"];
	Node0x4750ba0:s0 -> Node0x4750d30;
	Node0x4750ba0:s1 -> Node0x4750d80;
	Node0x4750b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%395:\l395:                                              \l  %396 = load i8, i8 addrspace(4)* %389, align 1, !tbaa !19\l  %397 = zext i8 %396 to i64\l  %398 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 1\l  %399 = load i8, i8 addrspace(4)* %398, align 1, !tbaa !19\l  %400 = zext i8 %399 to i64\l  %401 = shl nuw nsw i64 %400, 8\l  %402 = or i64 %401, %397\l  %403 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 2\l  %404 = load i8, i8 addrspace(4)* %403, align 1, !tbaa !19\l  %405 = zext i8 %404 to i64\l  %406 = shl nuw nsw i64 %405, 16\l  %407 = or i64 %402, %406\l  %408 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 3\l  %409 = load i8, i8 addrspace(4)* %408, align 1, !tbaa !19\l  %410 = zext i8 %409 to i64\l  %411 = shl nuw nsw i64 %410, 24\l  %412 = or i64 %407, %411\l  %413 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 4\l  %414 = load i8, i8 addrspace(4)* %413, align 1, !tbaa !19\l  %415 = zext i8 %414 to i64\l  %416 = shl nuw nsw i64 %415, 32\l  %417 = or i64 %412, %416\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 5\l  %419 = load i8, i8 addrspace(4)* %418, align 1, !tbaa !19\l  %420 = zext i8 %419 to i64\l  %421 = shl nuw nsw i64 %420, 40\l  %422 = or i64 %417, %421\l  %423 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 6\l  %424 = load i8, i8 addrspace(4)* %423, align 1, !tbaa !19\l  %425 = zext i8 %424 to i64\l  %426 = shl nuw nsw i64 %425, 48\l  %427 = or i64 %422, %426\l  %428 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 7\l  %429 = load i8, i8 addrspace(4)* %428, align 1, !tbaa !19\l  %430 = zext i8 %429 to i64\l  %431 = shl nuw i64 %430, 56\l  %432 = or i64 %427, %431\l  %433 = add nsw i32 %390, -8\l  %434 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 8\l  br label %448\l}"];
	Node0x4750b50 -> Node0x4750d30;
	Node0x4750d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%435:\l435:                                              \l  %436 = phi i32 [ %446, %435 ], [ 0, %393 ]\l  %437 = phi i64 [ %445, %435 ], [ 0, %393 ]\l  %438 = zext i32 %436 to i64\l  %439 = getelementptr inbounds i8, i8 addrspace(4)* %389, i64 %438\l  %440 = load i8, i8 addrspace(4)* %439, align 1, !tbaa !19\l  %441 = zext i8 %440 to i64\l  %442 = shl i32 %436, 3\l  %443 = zext i32 %442 to i64\l  %444 = shl nuw i64 %441, %443\l  %445 = or i64 %444, %437\l  %446 = add nuw nsw i32 %436, 1\l  %447 = icmp eq i32 %446, %390\l  br i1 %447, label %448, label %435\l|{<s0>T|<s1>F}}"];
	Node0x4750d80:s0 -> Node0x4750d30;
	Node0x4750d80:s1 -> Node0x4750d80;
	Node0x4750d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%448:\l448:                                              \l  %449 = phi i8 addrspace(4)* [ %434, %395 ], [ %389, %393 ], [ %389, %435 ]\l  %450 = phi i32 [ %433, %395 ], [ 0, %393 ], [ 0, %435 ]\l  %451 = phi i64 [ %432, %395 ], [ 0, %393 ], [ %445, %435 ]\l  %452 = icmp ugt i32 %450, 7\l  br i1 %452, label %455, label %453\l|{<s0>T|<s1>F}}"];
	Node0x4750d30:s0 -> Node0x47533b0;
	Node0x4750d30:s1 -> Node0x4753400;
	Node0x4753400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%453:\l453:                                              \l  %454 = icmp eq i32 %450, 0\l  br i1 %454, label %506, label %493\l|{<s0>T|<s1>F}}"];
	Node0x4753400:s0 -> Node0x4743340;
	Node0x4753400:s1 -> Node0x4753590;
	Node0x47533b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%455:\l455:                                              \l  %456 = load i8, i8 addrspace(4)* %449, align 1, !tbaa !19\l  %457 = zext i8 %456 to i64\l  %458 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 1\l  %459 = load i8, i8 addrspace(4)* %458, align 1, !tbaa !19\l  %460 = zext i8 %459 to i64\l  %461 = shl nuw nsw i64 %460, 8\l  %462 = or i64 %461, %457\l  %463 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 2\l  %464 = load i8, i8 addrspace(4)* %463, align 1, !tbaa !19\l  %465 = zext i8 %464 to i64\l  %466 = shl nuw nsw i64 %465, 16\l  %467 = or i64 %462, %466\l  %468 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 3\l  %469 = load i8, i8 addrspace(4)* %468, align 1, !tbaa !19\l  %470 = zext i8 %469 to i64\l  %471 = shl nuw nsw i64 %470, 24\l  %472 = or i64 %467, %471\l  %473 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 4\l  %474 = load i8, i8 addrspace(4)* %473, align 1, !tbaa !19\l  %475 = zext i8 %474 to i64\l  %476 = shl nuw nsw i64 %475, 32\l  %477 = or i64 %472, %476\l  %478 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 5\l  %479 = load i8, i8 addrspace(4)* %478, align 1, !tbaa !19\l  %480 = zext i8 %479 to i64\l  %481 = shl nuw nsw i64 %480, 40\l  %482 = or i64 %477, %481\l  %483 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 6\l  %484 = load i8, i8 addrspace(4)* %483, align 1, !tbaa !19\l  %485 = zext i8 %484 to i64\l  %486 = shl nuw nsw i64 %485, 48\l  %487 = or i64 %482, %486\l  %488 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 7\l  %489 = load i8, i8 addrspace(4)* %488, align 1, !tbaa !19\l  %490 = zext i8 %489 to i64\l  %491 = shl nuw i64 %490, 56\l  %492 = or i64 %487, %491\l  br label %506\l}"];
	Node0x47533b0 -> Node0x4743340;
	Node0x4753590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%493:\l493:                                              \l  %494 = phi i32 [ %504, %493 ], [ 0, %453 ]\l  %495 = phi i64 [ %503, %493 ], [ 0, %453 ]\l  %496 = zext i32 %494 to i64\l  %497 = getelementptr inbounds i8, i8 addrspace(4)* %449, i64 %496\l  %498 = load i8, i8 addrspace(4)* %497, align 1, !tbaa !19\l  %499 = zext i8 %498 to i64\l  %500 = shl i32 %494, 3\l  %501 = zext i32 %500 to i64\l  %502 = shl nuw i64 %499, %501\l  %503 = or i64 %502, %495\l  %504 = add nuw nsw i32 %494, 1\l  %505 = icmp eq i32 %504, %450\l  br i1 %505, label %506, label %493\l|{<s0>T|<s1>F}}"];
	Node0x4753590:s0 -> Node0x4743340;
	Node0x4753590:s1 -> Node0x4753590;
	Node0x4743340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%506:\l506:                                              \l  %507 = phi i64 [ %492, %455 ], [ 0, %453 ], [ %503, %493 ]\l  %508 = shl nuw nsw i64 %89, 2\l  %509 = add nuw nsw i64 %508, 28\l  %510 = and i64 %509, 480\l  %511 = and i64 %91, -225\l  %512 = or i64 %511, %510\l  %513 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %69,\l... i64 noundef %512, i64 noundef %151, i64 noundef %211, i64 noundef %271, i64\l... noundef %331, i64 noundef %391, i64 noundef %451, i64 noundef %507) #11\l  %514 = sub i64 %81, %89\l  %515 = getelementptr inbounds i8, i8 addrspace(4)* %82, i64 %89\l  %516 = icmp eq i64 %514, 0\l  br i1 %516, label %517, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4743340:s0 -> Node0x4742330;
	Node0x4743340:s1 -> Node0x4742ed0;
	Node0x4742330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%517:\l517:                                              \l  %518 = phi \<2 x i64\> [ %75, %72 ], [ %513, %506 ]\l  %519 = extractelement \<2 x i64\> %518, i64 0\l  %520 = bitcast double %63 to i64\l  %521 = and i64 %519, -227\l  %522 = or i64 %521, 34\l  %523 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %69,\l... i64 noundef %522, i64 noundef %520, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %524\l}"];
	Node0x4742330 -> Node0x473dde0;
	Node0x473dde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%524:\l524:                                              \l  ret void\l}"];
}
