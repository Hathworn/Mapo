digraph "CFG for '_Z13calculate_ASMPfS_ifi' function" {
	label="CFG for '_Z13calculate_ASMPfS_ifi' function";

	Node0x5fbd230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !5, !invariant.load !6\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = add i32 %21, %15\l  %23 = mul nsw i32 %22, %2\l  %24 = add nsw i32 %14, %23\l  %25 = icmp ult i32 %24, %4\l  br i1 %25, label %26, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5fbd230:s0 -> Node0x5fc0c70;
	Node0x5fbd230:s1 -> Node0x5fc0d00;
	Node0x5fc0c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%26:\l26:                                               \l  %27 = zext i32 %24 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %30 = fmul contract float %29, %29\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  store float %30, float addrspace(1)* %31, align 4, !tbaa !7\l  br label %32\l}"];
	Node0x5fc0c70 -> Node0x5fc0d00;
	Node0x5fc0d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %4, 1\l  br i1 %33, label %34, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5fc0d00:s0 -> Node0x5fbfad0;
	Node0x5fc0d00:s1 -> Node0x5fc1b90;
	Node0x5fbfad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%34:\l34:                                               \l  %35 = zext i32 %24 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %1, i64 %35\l  br label %39\l}"];
	Node0x5fbfad0 -> Node0x5fc1de0;
	Node0x5fc1b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %24, 0\l  br i1 %38, label %54, label %521\l|{<s0>T|<s1>F}}"];
	Node0x5fc1b90:s0 -> Node0x5fc1f30;
	Node0x5fc1b90:s1 -> Node0x5fc1f80;
	Node0x5fc1de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%39:\l39:                                               \l  %40 = phi i32 [ 1, %34 ], [ %41, %52 ]\l  %41 = shl nsw i32 %40, 1\l  %42 = add i32 %41, 1023\l  %43 = and i32 %42, %6\l  %44 = icmp eq i32 %43, 0\l  br i1 %44, label %45, label %52\l|{<s0>T|<s1>F}}"];
	Node0x5fc1de0:s0 -> Node0x5fc2470;
	Node0x5fc1de0:s1 -> Node0x5fc20f0;
	Node0x5fc2470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%45:\l45:                                               \l  %46 = add i32 %40, %24\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = load float, float addrspace(1)* %36, align 4, !tbaa !7\l  %51 = fadd contract float %49, %50\l  store float %51, float addrspace(1)* %36, align 4, !tbaa !7\l  br label %52\l}"];
	Node0x5fc2470 -> Node0x5fc20f0;
	Node0x5fc20f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%52:\l52:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %53 = icmp slt i32 %41, %4\l  br i1 %53, label %39, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5fc20f0:s0 -> Node0x5fc1de0;
	Node0x5fc20f0:s1 -> Node0x5fc1b90;
	Node0x5fc1f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%54:\l54:                                               \l  %55 = load float, float addrspace(1)* %1, align 4, !tbaa !7\l  %56 = fpext float %55 to double\l  %57 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %58 = getelementptr inbounds i8, i8 addrspace(4)* %57, i64 24\l  %59 = bitcast i8 addrspace(4)* %58 to i64 addrspace(4)*\l  %60 = load i64, i64 addrspace(4)* %59, align 8, !tbaa !13\l  %61 = inttoptr i64 %60 to i8 addrspace(1)*\l  %62 = addrspacecast i8 addrspace(1)* %61 to i8*\l  %63 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %62,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %64 = extractelement \<2 x i64\> %63, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([11 x i8], [11 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %65, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5fc1f30:s0 -> Node0x5fc1ac0;
	Node0x5fc1f30:s1 -> Node0x5fc3d50;
	Node0x5fc1ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%65:\l65:                                               \l  %66 = and i64 %64, -225\l  %67 = or i64 %66, 32\l  %68 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %62,\l... i64 noundef %67, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %510\l}"];
	Node0x5fc1ac0 -> Node0x5fc4c00;
	Node0x5fc3d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%69:\l69:                                               \l  %70 = and i64 %64, 2\l  %71 = and i64 %64, -3\l  %72 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %71, i64 0\l  br label %73\l}"];
	Node0x5fc3d50 -> Node0x5fc57a0;
	Node0x5fc57a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%73:\l73:                                               \l  %74 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([11 x i8], [11 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([11 x i8], [11 x i8] addrspace(4)*\l... @.str, i64 0, i64 10) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([11 x i8]* addrspacecast ([11 x i8] addrspace(4)* @.str to [11 x i8]*) to\l... i64)), i64 1))), %69 ], [ %507, %499 ]\l  %75 = phi i8 addrspace(4)* [ getelementptr inbounds ([11 x i8], [11 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %69 ], [ %508, %499 ]\l  %76 = phi \<2 x i64\> [ %72, %69 ], [ %506, %499 ]\l  %77 = icmp ugt i64 %74, 56\l  %78 = extractelement \<2 x i64\> %76, i64 0\l  %79 = or i64 %78, %70\l  %80 = insertelement \<2 x i64\> poison, i64 %79, i64 0\l  %81 = select i1 %77, \<2 x i64\> %76, \<2 x i64\> %80\l  %82 = tail call i64 @llvm.umin.i64(i64 %74, i64 56)\l  %83 = trunc i64 %82 to i32\l  %84 = extractelement \<2 x i64\> %81, i64 0\l  %85 = icmp ugt i32 %83, 7\l  br i1 %85, label %88, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5fc57a0:s0 -> Node0x5fc6710;
	Node0x5fc57a0:s1 -> Node0x5fc67a0;
	Node0x5fc67a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%86:\l86:                                               \l  %87 = icmp eq i32 %83, 0\l  br i1 %87, label %141, label %128\l|{<s0>T|<s1>F}}"];
	Node0x5fc67a0:s0 -> Node0x5fc6970;
	Node0x5fc67a0:s1 -> Node0x5fc69c0;
	Node0x5fc6710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%88:\l88:                                               \l  %89 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !17\l  %90 = zext i8 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 1\l  %92 = load i8, i8 addrspace(4)* %91, align 1, !tbaa !17\l  %93 = zext i8 %92 to i64\l  %94 = shl nuw nsw i64 %93, 8\l  %95 = or i64 %94, %90\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 2\l  %97 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !17\l  %98 = zext i8 %97 to i64\l  %99 = shl nuw nsw i64 %98, 16\l  %100 = or i64 %95, %99\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 3\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !17\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 24\l  %105 = or i64 %100, %104\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 4\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !17\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 32\l  %110 = or i64 %105, %109\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 5\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !17\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw nsw i64 %113, 40\l  %115 = or i64 %110, %114\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 6\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !17\l  %118 = zext i8 %117 to i64\l  %119 = shl nuw nsw i64 %118, 48\l  %120 = or i64 %115, %119\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 7\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !17\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw i64 %123, 56\l  %125 = or i64 %120, %124\l  %126 = add nsw i32 %83, -8\l  %127 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 8\l  br label %141\l}"];
	Node0x5fc6710 -> Node0x5fc6970;
	Node0x5fc69c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%128:\l128:                                              \l  %129 = phi i32 [ %139, %128 ], [ 0, %86 ]\l  %130 = phi i64 [ %138, %128 ], [ 0, %86 ]\l  %131 = zext i32 %129 to i64\l  %132 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 %131\l  %133 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !17\l  %134 = zext i8 %133 to i64\l  %135 = shl i32 %129, 3\l  %136 = zext i32 %135 to i64\l  %137 = shl nuw i64 %134, %136\l  %138 = or i64 %137, %130\l  %139 = add nuw nsw i32 %129, 1\l  %140 = icmp eq i32 %139, %83\l  br i1 %140, label %141, label %128, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5fc69c0:s0 -> Node0x5fc6970;
	Node0x5fc69c0:s1 -> Node0x5fc69c0;
	Node0x5fc6970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%141:\l141:                                              \l  %142 = phi i8 addrspace(4)* [ %127, %88 ], [ %75, %86 ], [ %75, %128 ]\l  %143 = phi i32 [ %126, %88 ], [ 0, %86 ], [ 0, %128 ]\l  %144 = phi i64 [ %125, %88 ], [ 0, %86 ], [ %138, %128 ]\l  %145 = icmp ugt i32 %143, 7\l  br i1 %145, label %148, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5fc6970:s0 -> Node0x5fc9820;
	Node0x5fc6970:s1 -> Node0x5fc9870;
	Node0x5fc9870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%146:\l146:                                              \l  %147 = icmp eq i32 %143, 0\l  br i1 %147, label %201, label %188\l|{<s0>T|<s1>F}}"];
	Node0x5fc9870:s0 -> Node0x5fc9a40;
	Node0x5fc9870:s1 -> Node0x5fc9a90;
	Node0x5fc9820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%148:\l148:                                              \l  %149 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !17\l  %150 = zext i8 %149 to i64\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 1\l  %152 = load i8, i8 addrspace(4)* %151, align 1, !tbaa !17\l  %153 = zext i8 %152 to i64\l  %154 = shl nuw nsw i64 %153, 8\l  %155 = or i64 %154, %150\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 2\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !17\l  %158 = zext i8 %157 to i64\l  %159 = shl nuw nsw i64 %158, 16\l  %160 = or i64 %155, %159\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 3\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !17\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 24\l  %165 = or i64 %160, %164\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 4\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !17\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 32\l  %170 = or i64 %165, %169\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 5\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !17\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw nsw i64 %173, 40\l  %175 = or i64 %170, %174\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 6\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !17\l  %178 = zext i8 %177 to i64\l  %179 = shl nuw nsw i64 %178, 48\l  %180 = or i64 %175, %179\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 7\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !17\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw i64 %183, 56\l  %185 = or i64 %180, %184\l  %186 = add nsw i32 %143, -8\l  %187 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 8\l  br label %201\l}"];
	Node0x5fc9820 -> Node0x5fc9a40;
	Node0x5fc9a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%188:\l188:                                              \l  %189 = phi i32 [ %199, %188 ], [ 0, %146 ]\l  %190 = phi i64 [ %198, %188 ], [ 0, %146 ]\l  %191 = zext i32 %189 to i64\l  %192 = getelementptr inbounds i8, i8 addrspace(4)* %142, i64 %191\l  %193 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !17\l  %194 = zext i8 %193 to i64\l  %195 = shl i32 %189, 3\l  %196 = zext i32 %195 to i64\l  %197 = shl nuw i64 %194, %196\l  %198 = or i64 %197, %190\l  %199 = add nuw nsw i32 %189, 1\l  %200 = icmp eq i32 %199, %143\l  br i1 %200, label %201, label %188\l|{<s0>T|<s1>F}}"];
	Node0x5fc9a90:s0 -> Node0x5fc9a40;
	Node0x5fc9a90:s1 -> Node0x5fc9a90;
	Node0x5fc9a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%201:\l201:                                              \l  %202 = phi i8 addrspace(4)* [ %187, %148 ], [ %142, %146 ], [ %142, %188 ]\l  %203 = phi i32 [ %186, %148 ], [ 0, %146 ], [ 0, %188 ]\l  %204 = phi i64 [ %185, %148 ], [ 0, %146 ], [ %198, %188 ]\l  %205 = icmp ugt i32 %203, 7\l  br i1 %205, label %208, label %206\l|{<s0>T|<s1>F}}"];
	Node0x5fc9a40:s0 -> Node0x5fcbb50;
	Node0x5fc9a40:s1 -> Node0x5fcbba0;
	Node0x5fcbba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%206:\l206:                                              \l  %207 = icmp eq i32 %203, 0\l  br i1 %207, label %261, label %248\l|{<s0>T|<s1>F}}"];
	Node0x5fcbba0:s0 -> Node0x5fcbd30;
	Node0x5fcbba0:s1 -> Node0x5fcbd80;
	Node0x5fcbb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%208:\l208:                                              \l  %209 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !17\l  %210 = zext i8 %209 to i64\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 1\l  %212 = load i8, i8 addrspace(4)* %211, align 1, !tbaa !17\l  %213 = zext i8 %212 to i64\l  %214 = shl nuw nsw i64 %213, 8\l  %215 = or i64 %214, %210\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 2\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !17\l  %218 = zext i8 %217 to i64\l  %219 = shl nuw nsw i64 %218, 16\l  %220 = or i64 %215, %219\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 3\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !17\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 24\l  %225 = or i64 %220, %224\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 4\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !17\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 32\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 5\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !17\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 40\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 6\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !17\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 48\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 7\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !17\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw i64 %243, 56\l  %245 = or i64 %240, %244\l  %246 = add nsw i32 %203, -8\l  %247 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 8\l  br label %261\l}"];
	Node0x5fcbb50 -> Node0x5fcbd30;
	Node0x5fcbd80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%248:\l248:                                              \l  %249 = phi i32 [ %259, %248 ], [ 0, %206 ]\l  %250 = phi i64 [ %258, %248 ], [ 0, %206 ]\l  %251 = zext i32 %249 to i64\l  %252 = getelementptr inbounds i8, i8 addrspace(4)* %202, i64 %251\l  %253 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !17\l  %254 = zext i8 %253 to i64\l  %255 = shl i32 %249, 3\l  %256 = zext i32 %255 to i64\l  %257 = shl nuw i64 %254, %256\l  %258 = or i64 %257, %250\l  %259 = add nuw nsw i32 %249, 1\l  %260 = icmp eq i32 %259, %203\l  br i1 %260, label %261, label %248\l|{<s0>T|<s1>F}}"];
	Node0x5fcbd80:s0 -> Node0x5fcbd30;
	Node0x5fcbd80:s1 -> Node0x5fcbd80;
	Node0x5fcbd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%261:\l261:                                              \l  %262 = phi i8 addrspace(4)* [ %247, %208 ], [ %202, %206 ], [ %202, %248 ]\l  %263 = phi i32 [ %246, %208 ], [ 0, %206 ], [ 0, %248 ]\l  %264 = phi i64 [ %245, %208 ], [ 0, %206 ], [ %258, %248 ]\l  %265 = icmp ugt i32 %263, 7\l  br i1 %265, label %268, label %266\l|{<s0>T|<s1>F}}"];
	Node0x5fcbd30:s0 -> Node0x5fc8e90;
	Node0x5fcbd30:s1 -> Node0x5fc8ee0;
	Node0x5fc8ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%266:\l266:                                              \l  %267 = icmp eq i32 %263, 0\l  br i1 %267, label %321, label %308\l|{<s0>T|<s1>F}}"];
	Node0x5fc8ee0:s0 -> Node0x5fce7c0;
	Node0x5fc8ee0:s1 -> Node0x5fce810;
	Node0x5fc8e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%268:\l268:                                              \l  %269 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !17\l  %270 = zext i8 %269 to i64\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 1\l  %272 = load i8, i8 addrspace(4)* %271, align 1, !tbaa !17\l  %273 = zext i8 %272 to i64\l  %274 = shl nuw nsw i64 %273, 8\l  %275 = or i64 %274, %270\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 2\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !17\l  %278 = zext i8 %277 to i64\l  %279 = shl nuw nsw i64 %278, 16\l  %280 = or i64 %275, %279\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 3\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !17\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 24\l  %285 = or i64 %280, %284\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 4\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !17\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 32\l  %290 = or i64 %285, %289\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 5\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !17\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw nsw i64 %293, 40\l  %295 = or i64 %290, %294\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 6\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !17\l  %298 = zext i8 %297 to i64\l  %299 = shl nuw nsw i64 %298, 48\l  %300 = or i64 %295, %299\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 7\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !17\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw i64 %303, 56\l  %305 = or i64 %300, %304\l  %306 = add nsw i32 %263, -8\l  %307 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 8\l  br label %321\l}"];
	Node0x5fc8e90 -> Node0x5fce7c0;
	Node0x5fce810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%308:\l308:                                              \l  %309 = phi i32 [ %319, %308 ], [ 0, %266 ]\l  %310 = phi i64 [ %318, %308 ], [ 0, %266 ]\l  %311 = zext i32 %309 to i64\l  %312 = getelementptr inbounds i8, i8 addrspace(4)* %262, i64 %311\l  %313 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !17\l  %314 = zext i8 %313 to i64\l  %315 = shl i32 %309, 3\l  %316 = zext i32 %315 to i64\l  %317 = shl nuw i64 %314, %316\l  %318 = or i64 %317, %310\l  %319 = add nuw nsw i32 %309, 1\l  %320 = icmp eq i32 %319, %263\l  br i1 %320, label %321, label %308\l|{<s0>T|<s1>F}}"];
	Node0x5fce810:s0 -> Node0x5fce7c0;
	Node0x5fce810:s1 -> Node0x5fce810;
	Node0x5fce7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%321:\l321:                                              \l  %322 = phi i8 addrspace(4)* [ %307, %268 ], [ %262, %266 ], [ %262, %308 ]\l  %323 = phi i32 [ %306, %268 ], [ 0, %266 ], [ 0, %308 ]\l  %324 = phi i64 [ %305, %268 ], [ 0, %266 ], [ %318, %308 ]\l  %325 = icmp ugt i32 %323, 7\l  br i1 %325, label %328, label %326\l|{<s0>T|<s1>F}}"];
	Node0x5fce7c0:s0 -> Node0x5fc71b0;
	Node0x5fce7c0:s1 -> Node0x5fc7200;
	Node0x5fc7200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%326:\l326:                                              \l  %327 = icmp eq i32 %323, 0\l  br i1 %327, label %381, label %368\l|{<s0>T|<s1>F}}"];
	Node0x5fc7200:s0 -> Node0x5fc7390;
	Node0x5fc7200:s1 -> Node0x5fc73e0;
	Node0x5fc71b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%328:\l328:                                              \l  %329 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !17\l  %330 = zext i8 %329 to i64\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 1\l  %332 = load i8, i8 addrspace(4)* %331, align 1, !tbaa !17\l  %333 = zext i8 %332 to i64\l  %334 = shl nuw nsw i64 %333, 8\l  %335 = or i64 %334, %330\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 2\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !17\l  %338 = zext i8 %337 to i64\l  %339 = shl nuw nsw i64 %338, 16\l  %340 = or i64 %335, %339\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 3\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !17\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 24\l  %345 = or i64 %340, %344\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 4\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !17\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 32\l  %350 = or i64 %345, %349\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 5\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !17\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw nsw i64 %353, 40\l  %355 = or i64 %350, %354\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 6\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !17\l  %358 = zext i8 %357 to i64\l  %359 = shl nuw nsw i64 %358, 48\l  %360 = or i64 %355, %359\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 7\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !17\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw i64 %363, 56\l  %365 = or i64 %360, %364\l  %366 = add nsw i32 %323, -8\l  %367 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 8\l  br label %381\l}"];
	Node0x5fc71b0 -> Node0x5fc7390;
	Node0x5fc73e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%368:\l368:                                              \l  %369 = phi i32 [ %379, %368 ], [ 0, %326 ]\l  %370 = phi i64 [ %378, %368 ], [ 0, %326 ]\l  %371 = zext i32 %369 to i64\l  %372 = getelementptr inbounds i8, i8 addrspace(4)* %322, i64 %371\l  %373 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !17\l  %374 = zext i8 %373 to i64\l  %375 = shl i32 %369, 3\l  %376 = zext i32 %375 to i64\l  %377 = shl nuw i64 %374, %376\l  %378 = or i64 %377, %370\l  %379 = add nuw nsw i32 %369, 1\l  %380 = icmp eq i32 %379, %323\l  br i1 %380, label %381, label %368\l|{<s0>T|<s1>F}}"];
	Node0x5fc73e0:s0 -> Node0x5fc7390;
	Node0x5fc73e0:s1 -> Node0x5fc73e0;
	Node0x5fc7390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%381:\l381:                                              \l  %382 = phi i8 addrspace(4)* [ %367, %328 ], [ %322, %326 ], [ %322, %368 ]\l  %383 = phi i32 [ %366, %328 ], [ 0, %326 ], [ 0, %368 ]\l  %384 = phi i64 [ %365, %328 ], [ 0, %326 ], [ %378, %368 ]\l  %385 = icmp ugt i32 %383, 7\l  br i1 %385, label %388, label %386\l|{<s0>T|<s1>F}}"];
	Node0x5fc7390:s0 -> Node0x5fd34b0;
	Node0x5fc7390:s1 -> Node0x5fd3500;
	Node0x5fd3500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%386:\l386:                                              \l  %387 = icmp eq i32 %383, 0\l  br i1 %387, label %441, label %428\l|{<s0>T|<s1>F}}"];
	Node0x5fd3500:s0 -> Node0x5fd3690;
	Node0x5fd3500:s1 -> Node0x5fd36e0;
	Node0x5fd34b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%388:\l388:                                              \l  %389 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !17\l  %390 = zext i8 %389 to i64\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 1\l  %392 = load i8, i8 addrspace(4)* %391, align 1, !tbaa !17\l  %393 = zext i8 %392 to i64\l  %394 = shl nuw nsw i64 %393, 8\l  %395 = or i64 %394, %390\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 2\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !17\l  %398 = zext i8 %397 to i64\l  %399 = shl nuw nsw i64 %398, 16\l  %400 = or i64 %395, %399\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 3\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !17\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 24\l  %405 = or i64 %400, %404\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 4\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !17\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 32\l  %410 = or i64 %405, %409\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 5\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !17\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw nsw i64 %413, 40\l  %415 = or i64 %410, %414\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 6\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !17\l  %418 = zext i8 %417 to i64\l  %419 = shl nuw nsw i64 %418, 48\l  %420 = or i64 %415, %419\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 7\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !17\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw i64 %423, 56\l  %425 = or i64 %420, %424\l  %426 = add nsw i32 %383, -8\l  %427 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 8\l  br label %441\l}"];
	Node0x5fd34b0 -> Node0x5fd3690;
	Node0x5fd36e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%428:\l428:                                              \l  %429 = phi i32 [ %439, %428 ], [ 0, %386 ]\l  %430 = phi i64 [ %438, %428 ], [ 0, %386 ]\l  %431 = zext i32 %429 to i64\l  %432 = getelementptr inbounds i8, i8 addrspace(4)* %382, i64 %431\l  %433 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !17\l  %434 = zext i8 %433 to i64\l  %435 = shl i32 %429, 3\l  %436 = zext i32 %435 to i64\l  %437 = shl nuw i64 %434, %436\l  %438 = or i64 %437, %430\l  %439 = add nuw nsw i32 %429, 1\l  %440 = icmp eq i32 %439, %383\l  br i1 %440, label %441, label %428\l|{<s0>T|<s1>F}}"];
	Node0x5fd36e0:s0 -> Node0x5fd3690;
	Node0x5fd36e0:s1 -> Node0x5fd36e0;
	Node0x5fd3690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%441:\l441:                                              \l  %442 = phi i8 addrspace(4)* [ %427, %388 ], [ %382, %386 ], [ %382, %428 ]\l  %443 = phi i32 [ %426, %388 ], [ 0, %386 ], [ 0, %428 ]\l  %444 = phi i64 [ %425, %388 ], [ 0, %386 ], [ %438, %428 ]\l  %445 = icmp ugt i32 %443, 7\l  br i1 %445, label %448, label %446\l|{<s0>T|<s1>F}}"];
	Node0x5fd3690:s0 -> Node0x5fd5d10;
	Node0x5fd3690:s1 -> Node0x5fd5d60;
	Node0x5fd5d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%446:\l446:                                              \l  %447 = icmp eq i32 %443, 0\l  br i1 %447, label %499, label %486\l|{<s0>T|<s1>F}}"];
	Node0x5fd5d60:s0 -> Node0x5fc5c40;
	Node0x5fd5d60:s1 -> Node0x5fd5ef0;
	Node0x5fd5d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%448:\l448:                                              \l  %449 = load i8, i8 addrspace(4)* %442, align 1, !tbaa !17\l  %450 = zext i8 %449 to i64\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 1\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !17\l  %453 = zext i8 %452 to i64\l  %454 = shl nuw nsw i64 %453, 8\l  %455 = or i64 %454, %450\l  %456 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 2\l  %457 = load i8, i8 addrspace(4)* %456, align 1, !tbaa !17\l  %458 = zext i8 %457 to i64\l  %459 = shl nuw nsw i64 %458, 16\l  %460 = or i64 %455, %459\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 3\l  %462 = load i8, i8 addrspace(4)* %461, align 1, !tbaa !17\l  %463 = zext i8 %462 to i64\l  %464 = shl nuw nsw i64 %463, 24\l  %465 = or i64 %460, %464\l  %466 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 4\l  %467 = load i8, i8 addrspace(4)* %466, align 1, !tbaa !17\l  %468 = zext i8 %467 to i64\l  %469 = shl nuw nsw i64 %468, 32\l  %470 = or i64 %465, %469\l  %471 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 5\l  %472 = load i8, i8 addrspace(4)* %471, align 1, !tbaa !17\l  %473 = zext i8 %472 to i64\l  %474 = shl nuw nsw i64 %473, 40\l  %475 = or i64 %470, %474\l  %476 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 6\l  %477 = load i8, i8 addrspace(4)* %476, align 1, !tbaa !17\l  %478 = zext i8 %477 to i64\l  %479 = shl nuw nsw i64 %478, 48\l  %480 = or i64 %475, %479\l  %481 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 7\l  %482 = load i8, i8 addrspace(4)* %481, align 1, !tbaa !17\l  %483 = zext i8 %482 to i64\l  %484 = shl nuw i64 %483, 56\l  %485 = or i64 %480, %484\l  br label %499\l}"];
	Node0x5fd5d10 -> Node0x5fc5c40;
	Node0x5fd5ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%486:\l486:                                              \l  %487 = phi i32 [ %497, %486 ], [ 0, %446 ]\l  %488 = phi i64 [ %496, %486 ], [ 0, %446 ]\l  %489 = zext i32 %487 to i64\l  %490 = getelementptr inbounds i8, i8 addrspace(4)* %442, i64 %489\l  %491 = load i8, i8 addrspace(4)* %490, align 1, !tbaa !17\l  %492 = zext i8 %491 to i64\l  %493 = shl i32 %487, 3\l  %494 = zext i32 %493 to i64\l  %495 = shl nuw i64 %492, %494\l  %496 = or i64 %495, %488\l  %497 = add nuw nsw i32 %487, 1\l  %498 = icmp eq i32 %497, %443\l  br i1 %498, label %499, label %486\l|{<s0>T|<s1>F}}"];
	Node0x5fd5ef0:s0 -> Node0x5fc5c40;
	Node0x5fd5ef0:s1 -> Node0x5fd5ef0;
	Node0x5fc5c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%499:\l499:                                              \l  %500 = phi i64 [ %485, %448 ], [ 0, %446 ], [ %496, %486 ]\l  %501 = shl nuw nsw i64 %82, 2\l  %502 = add nuw nsw i64 %501, 28\l  %503 = and i64 %502, 480\l  %504 = and i64 %84, -225\l  %505 = or i64 %504, %503\l  %506 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %62,\l... i64 noundef %505, i64 noundef %144, i64 noundef %204, i64 noundef %264, i64\l... noundef %324, i64 noundef %384, i64 noundef %444, i64 noundef %500) #11\l  %507 = sub i64 %74, %82\l  %508 = getelementptr inbounds i8, i8 addrspace(4)* %75, i64 %82\l  %509 = icmp eq i64 %507, 0\l  br i1 %509, label %510, label %73\l|{<s0>T|<s1>F}}"];
	Node0x5fc5c40:s0 -> Node0x5fc4c00;
	Node0x5fc5c40:s1 -> Node0x5fc57a0;
	Node0x5fc4c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%510:\l510:                                              \l  %511 = phi \<2 x i64\> [ %68, %65 ], [ %506, %499 ]\l  %512 = extractelement \<2 x i64\> %511, i64 0\l  %513 = bitcast double %56 to i64\l  %514 = and i64 %512, -225\l  %515 = or i64 %514, 32\l  %516 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %62,\l... i64 noundef %515, i64 noundef %513, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %517 = extractelement \<2 x i64\> %516, i64 0\l  %518 = and i64 %517, -227\l  %519 = or i64 %518, 34\l  %520 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %62,\l... i64 noundef %519, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %521\l}"];
	Node0x5fc4c00 -> Node0x5fc1f80;
	Node0x5fc1f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%521:\l521:                                              \l  ret void\l}"];
}
