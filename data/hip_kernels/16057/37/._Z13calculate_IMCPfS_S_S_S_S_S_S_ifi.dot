digraph "CFG for '_Z13calculate_IMCPfS_S_S_S_S_S_S_ifi' function" {
	label="CFG for '_Z13calculate_IMCPfS_S_S_S_S_S_S_ifi' function";

	Node0x4a90300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = add i32 %19, %12\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !5, !invariant.load !6\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = add i32 %27, %21\l  %29 = mul nsw i32 %28, %8\l  %30 = add nsw i32 %20, %29\l  %31 = icmp sgt i32 %8, 0\l  br i1 %31, label %32, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4a90300:s0 -> Node0x4a93dd0;
	Node0x4a90300:s1 -> Node0x4a93e60;
	Node0x4a93dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%32:\l32:                                               \l  %33 = zext i32 %30 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %36 = and i32 %8, 1\l  %37 = icmp eq i32 %8, 1\l  br i1 %37, label %97, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4a93dd0:s0 -> Node0x4a943a0;
	Node0x4a93dd0:s1 -> Node0x4a943f0;
	Node0x4a943f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%38:\l38:                                               \l  %39 = and i32 %8, -2\l  br label %40\l}"];
	Node0x4a943f0 -> Node0x4a945f0;
	Node0x4a945f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%40:\l40:                                               \l  %41 = phi i32 [ 0, %38 ], [ %71, %94 ]\l  %42 = phi i32 [ 0, %38 ], [ %95, %94 ]\l  %43 = mul nsw i32 %41, %8\l  %44 = icmp uge i32 %30, %43\l  %45 = or i32 %41, 1\l  %46 = mul nsw i32 %45, %8\l  %47 = icmp ult i32 %30, %46\l  %48 = select i1 %44, i1 %47, i1 false\l  br i1 %48, label %49, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4a945f0:s0 -> Node0x4a94cf0;
	Node0x4a945f0:s1 -> Node0x4a94d80;
	Node0x4a94cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%49:\l49:                                               \l  %50 = load float, float addrspace(1)* %34, align 4, !tbaa !7\l  %51 = fcmp contract ogt float %50, 0.000000e+00\l  br i1 %51, label %52, label %68\l|{<s0>T|<s1>F}}"];
	Node0x4a94cf0:s0 -> Node0x4a95b40;
	Node0x4a94cf0:s1 -> Node0x4a94d80;
	Node0x4a95b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%52:\l52:                                               \l  %53 = tail call i1 @llvm.amdgcn.class.f32(float %50, i32 144)\l  %54 = select i1 %53, float 0x41F0000000000000, float 1.000000e+00\l  %55 = fmul float %50, %54\l  %56 = tail call float @llvm.log2.f32(float %55)\l  %57 = fmul float %56, 0x3FD3441340000000\l  %58 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 519)\l  %59 = fneg float %57\l  %60 = tail call float @llvm.fma.f32(float %56, float 0x3FD3441340000000,\l... float %59)\l  %61 = tail call float @llvm.fma.f32(float %56, float 0x3E509F79E0000000,\l... float %60)\l  %62 = fadd float %57, %61\l  %63 = select i1 %58, float %56, float %62\l  %64 = select i1 %53, float 0x4023441360000000, float 0.000000e+00\l  %65 = fsub float %63, %64\l  %66 = fneg contract float %50\l  %67 = fmul contract float %65, %66\l  store float %67, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x4a95b40 -> Node0x4a94d80;
	Node0x4a94d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%68:\l68:                                               \l  %69 = mul nsw i32 %45, %8\l  %70 = icmp uge i32 %30, %69\l  %71 = add nuw nsw i32 %41, 2\l  %72 = mul nsw i32 %71, %8\l  %73 = icmp ult i32 %30, %72\l  %74 = select i1 %70, i1 %73, i1 false\l  br i1 %74, label %75, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4a94d80:s0 -> Node0x4a97960;
	Node0x4a94d80:s1 -> Node0x4a946e0;
	Node0x4a97960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%75:\l75:                                               \l  %76 = load float, float addrspace(1)* %34, align 4, !tbaa !7\l  %77 = fcmp contract ogt float %76, 0.000000e+00\l  br i1 %77, label %78, label %94\l|{<s0>T|<s1>F}}"];
	Node0x4a97960:s0 -> Node0x4a97b60;
	Node0x4a97960:s1 -> Node0x4a946e0;
	Node0x4a97b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%78:\l78:                                               \l  %79 = tail call i1 @llvm.amdgcn.class.f32(float %76, i32 144)\l  %80 = select i1 %79, float 0x41F0000000000000, float 1.000000e+00\l  %81 = fmul float %76, %80\l  %82 = tail call float @llvm.log2.f32(float %81)\l  %83 = fmul float %82, 0x3FD3441340000000\l  %84 = tail call i1 @llvm.amdgcn.class.f32(float %82, i32 519)\l  %85 = fneg float %83\l  %86 = tail call float @llvm.fma.f32(float %82, float 0x3FD3441340000000,\l... float %85)\l  %87 = tail call float @llvm.fma.f32(float %82, float 0x3E509F79E0000000,\l... float %86)\l  %88 = fadd float %83, %87\l  %89 = select i1 %84, float %82, float %88\l  %90 = select i1 %79, float 0x4023441360000000, float 0.000000e+00\l  %91 = fsub float %89, %90\l  %92 = fneg contract float %76\l  %93 = fmul contract float %91, %92\l  store float %93, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %94\l}"];
	Node0x4a97b60 -> Node0x4a946e0;
	Node0x4a946e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%94:\l94:                                               \l  %95 = add i32 %42, 2\l  %96 = icmp eq i32 %95, %39\l  br i1 %96, label %97, label %40, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4a946e0:s0 -> Node0x4a943a0;
	Node0x4a946e0:s1 -> Node0x4a945f0;
	Node0x4a943a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%97:\l97:                                               \l  %98 = phi i32 [ 0, %32 ], [ %71, %94 ]\l  %99 = icmp eq i32 %36, 0\l  br i1 %99, label %126, label %100\l|{<s0>T|<s1>F}}"];
	Node0x4a943a0:s0 -> Node0x4a93e60;
	Node0x4a943a0:s1 -> Node0x4a98c20;
	Node0x4a98c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%100:\l100:                                              \l  %101 = mul nsw i32 %98, %8\l  %102 = icmp uge i32 %30, %101\l  %103 = add nuw nsw i32 %98, 1\l  %104 = mul nsw i32 %103, %8\l  %105 = icmp ult i32 %30, %104\l  %106 = select i1 %102, i1 %105, i1 false\l  br i1 %106, label %107, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4a98c20:s0 -> Node0x4a990a0;
	Node0x4a98c20:s1 -> Node0x4a93e60;
	Node0x4a990a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%107:\l107:                                              \l  %108 = load float, float addrspace(1)* %34, align 4, !tbaa !7\l  %109 = fcmp contract ogt float %108, 0.000000e+00\l  br i1 %109, label %110, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4a990a0:s0 -> Node0x4a992a0;
	Node0x4a990a0:s1 -> Node0x4a93e60;
	Node0x4a992a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%110:\l110:                                              \l  %111 = tail call i1 @llvm.amdgcn.class.f32(float %108, i32 144)\l  %112 = select i1 %111, float 0x41F0000000000000, float 1.000000e+00\l  %113 = fmul float %108, %112\l  %114 = tail call float @llvm.log2.f32(float %113)\l  %115 = fmul float %114, 0x3FD3441340000000\l  %116 = tail call i1 @llvm.amdgcn.class.f32(float %114, i32 519)\l  %117 = fneg float %115\l  %118 = tail call float @llvm.fma.f32(float %114, float 0x3FD3441340000000,\l... float %117)\l  %119 = tail call float @llvm.fma.f32(float %114, float 0x3E509F79E0000000,\l... float %118)\l  %120 = fadd float %115, %119\l  %121 = select i1 %116, float %114, float %120\l  %122 = select i1 %111, float 0x4023441360000000, float 0.000000e+00\l  %123 = fsub float %121, %122\l  %124 = fneg contract float %108\l  %125 = fmul contract float %123, %124\l  store float %125, float addrspace(1)* %35, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x4a992a0 -> Node0x4a93e60;
	Node0x4a93e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%126:\l126:                                              \l  %127 = icmp ult i32 %30, %10\l  br i1 %127, label %128, label %154\l|{<s0>T|<s1>F}}"];
	Node0x4a93e60:s0 -> Node0x4a9a060;
	Node0x4a93e60:s1 -> Node0x4a9a0b0;
	Node0x4a9a060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%128:\l128:                                              \l  %129 = zext i32 %30 to i64\l  %130 = getelementptr inbounds float, float addrspace(1)* %0, i64 %129\l  %131 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  %132 = fcmp contract une float %131, 0.000000e+00\l  br i1 %132, label %133, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4a9a060:s0 -> Node0x4a96d40;
	Node0x4a9a060:s1 -> Node0x4a96d90;
	Node0x4a96d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%133:\l133:                                              \l  %134 = tail call i1 @llvm.amdgcn.class.f32(float %131, i32 144)\l  %135 = select i1 %134, float 0x41F0000000000000, float 1.000000e+00\l  %136 = fmul float %131, %135\l  %137 = tail call float @llvm.log2.f32(float %136)\l  %138 = fmul float %137, 0x3FD3441340000000\l  %139 = tail call i1 @llvm.amdgcn.class.f32(float %137, i32 519)\l  %140 = fneg float %138\l  %141 = tail call float @llvm.fma.f32(float %137, float 0x3FD3441340000000,\l... float %140)\l  %142 = tail call float @llvm.fma.f32(float %137, float 0x3E509F79E0000000,\l... float %141)\l  %143 = fadd float %138, %142\l  %144 = select i1 %139, float %137, float %143\l  %145 = select i1 %134, float 0x4023441360000000, float 0.000000e+00\l  %146 = fsub float %144, %145\l  %147 = fneg contract float %131\l  %148 = fmul contract float %146, %147\l  %149 = getelementptr inbounds float, float addrspace(1)* %4, i64 %129\l  store float %148, float addrspace(1)* %149, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %150 = load float, float addrspace(1)* %130, align 4, !tbaa !7\l  br label %151\l}"];
	Node0x4a96d40 -> Node0x4a96d90;
	Node0x4a96d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%151:\l151:                                              \l  %152 = phi float [ %131, %128 ], [ %150, %133 ]\l  %153 = getelementptr inbounds float, float addrspace(1)* %5, i64 %129\l  store float %152, float addrspace(1)* %153, align 4, !tbaa !7\l  br label %154\l}"];
	Node0x4a96d90 -> Node0x4a9a0b0;
	Node0x4a9a0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%154:\l154:                                              \l  br i1 %31, label %155, label %294\l|{<s0>T|<s1>F}}"];
	Node0x4a9a0b0:s0 -> Node0x4a9bb30;
	Node0x4a9a0b0:s1 -> Node0x4a9bb80;
	Node0x4a9bb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%155:\l155:                                              \l  %156 = icmp ult i32 %30, %8\l  %157 = mul i32 %30, %8\l  %158 = and i32 %8, 3\l  %159 = icmp ult i32 %8, 4\l  br i1 %159, label %162, label %160\l|{<s0>T|<s1>F}}"];
	Node0x4a9bb30:s0 -> Node0x4a9bef0;
	Node0x4a9bb30:s1 -> Node0x4a9bf40;
	Node0x4a9bf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%160:\l160:                                              \l  %161 = and i32 %8, -4\l  br label %195\l}"];
	Node0x4a9bf40 -> Node0x4a9c140;
	Node0x4a9bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%162:\l162:                                              \l  %163 = phi i32 [ 0, %155 ], [ %257, %256 ]\l  %164 = phi i32 [ 0, %155 ], [ %258, %256 ]\l  %165 = icmp eq i32 %158, 0\l  br i1 %165, label %187, label %166\l|{<s0>T|<s1>F}}"];
	Node0x4a9bef0:s0 -> Node0x4a9c520;
	Node0x4a9bef0:s1 -> Node0x4a9c5b0;
	Node0x4a9c5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%166:\l166:                                              \l  %167 = phi i32 [ %183, %182 ], [ %163, %162 ]\l  %168 = phi i32 [ %184, %182 ], [ %164, %162 ]\l  %169 = phi i32 [ %185, %182 ], [ 0, %162 ]\l  %170 = icmp eq i32 %167, %168\l  %171 = select i1 %170, i1 %156, i1 false\l  br i1 %171, label %172, label %182\l|{<s0>T|<s1>F}}"];
	Node0x4a9c5b0:s0 -> Node0x4a9cbe0;
	Node0x4a9c5b0:s1 -> Node0x4a9c720;
	Node0x4a9cbe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%172:\l172:                                              \l  %173 = add i32 %167, %157\l  %174 = zext i32 %173 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %0, i64 %174\l  %176 = load float, float addrspace(1)* %175, align 4, !tbaa !7\l  %177 = mul nsw i32 %167, %8\l  %178 = add i32 %177, %30\l  %179 = zext i32 %178 to i64\l  %180 = getelementptr inbounds float, float addrspace(1)* %6, i64 %179\l  store float %176, float addrspace(1)* %180, align 4, !tbaa !7\l  %181 = add nsw i32 %167, 1\l  br label %182\l}"];
	Node0x4a9cbe0 -> Node0x4a9c720;
	Node0x4a9c720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%182:\l182:                                              \l  %183 = phi i32 [ %181, %172 ], [ %167, %166 ]\l  %184 = add nuw nsw i32 %168, 1\l  %185 = add i32 %169, 1\l  %186 = icmp eq i32 %185, %158\l  br i1 %186, label %187, label %166, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4a9c720:s0 -> Node0x4a9c520;
	Node0x4a9c720:s1 -> Node0x4a9c5b0;
	Node0x4a9c520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%187:\l187:                                              \l  br i1 %31, label %188, label %294\l|{<s0>T|<s1>F}}"];
	Node0x4a9c520:s0 -> Node0x4a9d6b0;
	Node0x4a9c520:s1 -> Node0x4a9bb80;
	Node0x4a9d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%188:\l188:                                              \l  %189 = icmp ult i32 %30, %8\l  %190 = mul i32 %30, %8\l  %191 = and i32 %8, 1\l  %192 = icmp eq i32 %8, 1\l  br i1 %192, label %261, label %193\l|{<s0>T|<s1>F}}"];
	Node0x4a9d6b0:s0 -> Node0x4a9d9f0;
	Node0x4a9d6b0:s1 -> Node0x4a9da40;
	Node0x4a9da40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%193:\l193:                                              \l  %194 = and i32 %8, -2\l  br label %303\l}"];
	Node0x4a9da40 -> Node0x4a9dbd0;
	Node0x4a9c140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%195:\l195:                                              \l  %196 = phi i32 [ 0, %160 ], [ %257, %256 ]\l  %197 = phi i32 [ 0, %160 ], [ %258, %256 ]\l  %198 = phi i32 [ 0, %160 ], [ %259, %256 ]\l  %199 = icmp eq i32 %196, %197\l  %200 = select i1 %199, i1 %156, i1 false\l  br i1 %200, label %201, label %211\l|{<s0>T|<s1>F}}"];
	Node0x4a9c140:s0 -> Node0x4a9dfe0;
	Node0x4a9c140:s1 -> Node0x4a9e030;
	Node0x4a9dfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%201:\l201:                                              \l  %202 = add i32 %196, %157\l  %203 = zext i32 %202 to i64\l  %204 = getelementptr inbounds float, float addrspace(1)* %0, i64 %203\l  %205 = load float, float addrspace(1)* %204, align 4, !tbaa !7\l  %206 = mul nsw i32 %196, %8\l  %207 = add i32 %206, %30\l  %208 = zext i32 %207 to i64\l  %209 = getelementptr inbounds float, float addrspace(1)* %6, i64 %208\l  store float %205, float addrspace(1)* %209, align 4, !tbaa !7\l  %210 = add nsw i32 %196, 1\l  br label %211\l}"];
	Node0x4a9dfe0 -> Node0x4a9e030;
	Node0x4a9e030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%211:\l211:                                              \l  %212 = phi i32 [ %210, %201 ], [ %196, %195 ]\l  %213 = or i32 %197, 1\l  %214 = icmp eq i32 %212, %213\l  %215 = select i1 %214, i1 %156, i1 false\l  br i1 %215, label %216, label %226\l|{<s0>T|<s1>F}}"];
	Node0x4a9e030:s0 -> Node0x4a9e9c0;
	Node0x4a9e030:s1 -> Node0x4a9ea10;
	Node0x4a9e9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%216:\l216:                                              \l  %217 = add i32 %212, %157\l  %218 = zext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %0, i64 %218\l  %220 = load float, float addrspace(1)* %219, align 4, !tbaa !7\l  %221 = mul nsw i32 %212, %8\l  %222 = add i32 %221, %30\l  %223 = zext i32 %222 to i64\l  %224 = getelementptr inbounds float, float addrspace(1)* %6, i64 %223\l  store float %220, float addrspace(1)* %224, align 4, !tbaa !7\l  %225 = add nsw i32 %212, 1\l  br label %226\l}"];
	Node0x4a9e9c0 -> Node0x4a9ea10;
	Node0x4a9ea10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%226:\l226:                                              \l  %227 = phi i32 [ %225, %216 ], [ %212, %211 ]\l  %228 = or i32 %197, 2\l  %229 = icmp eq i32 %227, %228\l  %230 = select i1 %229, i1 %156, i1 false\l  br i1 %230, label %231, label %241\l|{<s0>T|<s1>F}}"];
	Node0x4a9ea10:s0 -> Node0x4a9f360;
	Node0x4a9ea10:s1 -> Node0x4a9f3b0;
	Node0x4a9f360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%231:\l231:                                              \l  %232 = add i32 %227, %157\l  %233 = zext i32 %232 to i64\l  %234 = getelementptr inbounds float, float addrspace(1)* %0, i64 %233\l  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !7\l  %236 = mul nsw i32 %227, %8\l  %237 = add i32 %236, %30\l  %238 = zext i32 %237 to i64\l  %239 = getelementptr inbounds float, float addrspace(1)* %6, i64 %238\l  store float %235, float addrspace(1)* %239, align 4, !tbaa !7\l  %240 = add nsw i32 %227, 1\l  br label %241\l}"];
	Node0x4a9f360 -> Node0x4a9f3b0;
	Node0x4a9f3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%241:\l241:                                              \l  %242 = phi i32 [ %240, %231 ], [ %227, %226 ]\l  %243 = or i32 %197, 3\l  %244 = icmp eq i32 %242, %243\l  %245 = select i1 %244, i1 %156, i1 false\l  br i1 %245, label %246, label %256\l|{<s0>T|<s1>F}}"];
	Node0x4a9f3b0:s0 -> Node0x4a9fd00;
	Node0x4a9f3b0:s1 -> Node0x4a9c230;
	Node0x4a9fd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%246:\l246:                                              \l  %247 = add i32 %242, %157\l  %248 = zext i32 %247 to i64\l  %249 = getelementptr inbounds float, float addrspace(1)* %0, i64 %248\l  %250 = load float, float addrspace(1)* %249, align 4, !tbaa !7\l  %251 = mul nsw i32 %242, %8\l  %252 = add i32 %251, %30\l  %253 = zext i32 %252 to i64\l  %254 = getelementptr inbounds float, float addrspace(1)* %6, i64 %253\l  store float %250, float addrspace(1)* %254, align 4, !tbaa !7\l  %255 = add nsw i32 %242, 1\l  br label %256\l}"];
	Node0x4a9fd00 -> Node0x4a9c230;
	Node0x4a9c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%256:\l256:                                              \l  %257 = phi i32 [ %255, %246 ], [ %242, %241 ]\l  %258 = add nuw nsw i32 %197, 4\l  %259 = add i32 %198, 4\l  %260 = icmp eq i32 %259, %161\l  br i1 %260, label %162, label %195, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x4a9c230:s0 -> Node0x4a9bef0;
	Node0x4a9c230:s1 -> Node0x4a9c140;
	Node0x4a9d9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%261:\l261:                                              \l  %262 = phi i32 [ 0, %188 ], [ %369, %368 ]\l  %263 = phi i32 [ 0, %188 ], [ %370, %368 ]\l  %264 = icmp ne i32 %191, 0\l  %265 = icmp eq i32 %262, %263\l  %266 = select i1 %265, i1 %189, i1 false\l  %267 = select i1 %264, i1 %266, i1 false\l  br i1 %267, label %268, label %294\l|{<s0>T|<s1>F}}"];
	Node0x4a9d9f0:s0 -> Node0x4a9a970;
	Node0x4a9d9f0:s1 -> Node0x4a9bb80;
	Node0x4a9a970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%268:\l268:                                              \l  %269 = add i32 %262, %190\l  %270 = zext i32 %269 to i64\l  %271 = getelementptr inbounds float, float addrspace(1)* %0, i64 %270\l  %272 = load float, float addrspace(1)* %271, align 4, !tbaa !7\l  %273 = fcmp contract ogt float %272, 0.000000e+00\l  br i1 %273, label %274, label %294\l|{<s0>T|<s1>F}}"];
	Node0x4a9a970:s0 -> Node0x4aa1730;
	Node0x4a9a970:s1 -> Node0x4a9bb80;
	Node0x4aa1730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%274:\l274:                                              \l  %275 = tail call i1 @llvm.amdgcn.class.f32(float %272, i32 144)\l  %276 = select i1 %275, float 0x41F0000000000000, float 1.000000e+00\l  %277 = fmul float %272, %276\l  %278 = tail call float @llvm.log2.f32(float %277)\l  %279 = fmul float %278, 0x3FD3441340000000\l  %280 = tail call i1 @llvm.amdgcn.class.f32(float %278, i32 519)\l  %281 = fneg float %279\l  %282 = tail call float @llvm.fma.f32(float %278, float 0x3FD3441340000000,\l... float %281)\l  %283 = tail call float @llvm.fma.f32(float %278, float 0x3E509F79E0000000,\l... float %282)\l  %284 = fadd float %279, %283\l  %285 = select i1 %280, float %278, float %284\l  %286 = select i1 %275, float 0x4023441360000000, float 0.000000e+00\l  %287 = fsub float %285, %286\l  %288 = fneg contract float %272\l  %289 = fmul contract float %287, %288\l  %290 = mul nsw i32 %262, %8\l  %291 = add i32 %290, %30\l  %292 = zext i32 %291 to i64\l  %293 = getelementptr inbounds float, float addrspace(1)* %3, i64 %292\l  store float %289, float addrspace(1)* %293, align 4, !tbaa !7\l  br label %294\l}"];
	Node0x4aa1730 -> Node0x4a9bb80;
	Node0x4a9bb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%294:\l294:                                              \l  %295 = icmp sgt i32 %10, 1\l  br i1 %295, label %296, label %373\l|{<s0>T|<s1>F}}"];
	Node0x4a9bb80:s0 -> Node0x4aa2760;
	Node0x4a9bb80:s1 -> Node0x4aa27b0;
	Node0x4aa2760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%296:\l296:                                              \l  %297 = zext i32 %30 to i64\l  %298 = getelementptr inbounds float, float addrspace(1)* %2, i64 %297\l  %299 = getelementptr inbounds float, float addrspace(1)* %3, i64 %297\l  %300 = getelementptr inbounds float, float addrspace(1)* %5, i64 %297\l  %301 = getelementptr inbounds float, float addrspace(1)* %6, i64 %297\l  %302 = getelementptr inbounds float, float addrspace(1)* %4, i64 %297\l  br label %375\l}"];
	Node0x4aa2760 -> Node0x4aa2c40;
	Node0x4a9dbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%303:\l303:                                              \l  %304 = phi i32 [ 0, %193 ], [ %369, %368 ]\l  %305 = phi i32 [ 0, %193 ], [ %370, %368 ]\l  %306 = phi i32 [ 0, %193 ], [ %371, %368 ]\l  %307 = icmp eq i32 %304, %305\l  %308 = select i1 %307, i1 %189, i1 false\l  br i1 %308, label %309, label %336\l|{<s0>T|<s1>F}}"];
	Node0x4a9dbd0:s0 -> Node0x4aa3050;
	Node0x4a9dbd0:s1 -> Node0x4aa30e0;
	Node0x4aa3050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%309:\l309:                                              \l  %310 = add i32 %304, %190\l  %311 = zext i32 %310 to i64\l  %312 = getelementptr inbounds float, float addrspace(1)* %0, i64 %311\l  %313 = load float, float addrspace(1)* %312, align 4, !tbaa !7\l  %314 = fcmp contract ogt float %313, 0.000000e+00\l  br i1 %314, label %315, label %336\l|{<s0>T|<s1>F}}"];
	Node0x4aa3050:s0 -> Node0x4aa34c0;
	Node0x4aa3050:s1 -> Node0x4aa30e0;
	Node0x4aa34c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%315:\l315:                                              \l  %316 = tail call i1 @llvm.amdgcn.class.f32(float %313, i32 144)\l  %317 = select i1 %316, float 0x41F0000000000000, float 1.000000e+00\l  %318 = fmul float %313, %317\l  %319 = tail call float @llvm.log2.f32(float %318)\l  %320 = fmul float %319, 0x3FD3441340000000\l  %321 = tail call i1 @llvm.amdgcn.class.f32(float %319, i32 519)\l  %322 = fneg float %320\l  %323 = tail call float @llvm.fma.f32(float %319, float 0x3FD3441340000000,\l... float %322)\l  %324 = tail call float @llvm.fma.f32(float %319, float 0x3E509F79E0000000,\l... float %323)\l  %325 = fadd float %320, %324\l  %326 = select i1 %321, float %319, float %325\l  %327 = select i1 %316, float 0x4023441360000000, float 0.000000e+00\l  %328 = fsub float %326, %327\l  %329 = fneg contract float %313\l  %330 = fmul contract float %328, %329\l  %331 = mul nsw i32 %304, %8\l  %332 = add i32 %331, %30\l  %333 = zext i32 %332 to i64\l  %334 = getelementptr inbounds float, float addrspace(1)* %3, i64 %333\l  store float %330, float addrspace(1)* %334, align 4, !tbaa !7\l  %335 = add nsw i32 %304, 1\l  br label %336\l}"];
	Node0x4aa34c0 -> Node0x4aa30e0;
	Node0x4aa30e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%336:\l336:                                              \l  %337 = phi i32 [ %335, %315 ], [ %304, %309 ], [ %304, %303 ]\l  %338 = or i32 %305, 1\l  %339 = icmp eq i32 %337, %338\l  %340 = select i1 %339, i1 %189, i1 false\l  br i1 %340, label %341, label %368\l|{<s0>T|<s1>F}}"];
	Node0x4aa30e0:s0 -> Node0x4aa4750;
	Node0x4aa30e0:s1 -> Node0x4a9a540;
	Node0x4aa4750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%341:\l341:                                              \l  %342 = add i32 %337, %190\l  %343 = zext i32 %342 to i64\l  %344 = getelementptr inbounds float, float addrspace(1)* %0, i64 %343\l  %345 = load float, float addrspace(1)* %344, align 4, !tbaa !7\l  %346 = fcmp contract ogt float %345, 0.000000e+00\l  br i1 %346, label %347, label %368\l|{<s0>T|<s1>F}}"];
	Node0x4aa4750:s0 -> Node0x4aa4af0;
	Node0x4aa4750:s1 -> Node0x4a9a540;
	Node0x4aa4af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%347:\l347:                                              \l  %348 = tail call i1 @llvm.amdgcn.class.f32(float %345, i32 144)\l  %349 = select i1 %348, float 0x41F0000000000000, float 1.000000e+00\l  %350 = fmul float %345, %349\l  %351 = tail call float @llvm.log2.f32(float %350)\l  %352 = fmul float %351, 0x3FD3441340000000\l  %353 = tail call i1 @llvm.amdgcn.class.f32(float %351, i32 519)\l  %354 = fneg float %352\l  %355 = tail call float @llvm.fma.f32(float %351, float 0x3FD3441340000000,\l... float %354)\l  %356 = tail call float @llvm.fma.f32(float %351, float 0x3E509F79E0000000,\l... float %355)\l  %357 = fadd float %352, %356\l  %358 = select i1 %353, float %351, float %357\l  %359 = select i1 %348, float 0x4023441360000000, float 0.000000e+00\l  %360 = fsub float %358, %359\l  %361 = fneg contract float %345\l  %362 = fmul contract float %360, %361\l  %363 = mul nsw i32 %337, %8\l  %364 = add i32 %363, %30\l  %365 = zext i32 %364 to i64\l  %366 = getelementptr inbounds float, float addrspace(1)* %3, i64 %365\l  store float %362, float addrspace(1)* %366, align 4, !tbaa !7\l  %367 = add nsw i32 %337, 1\l  br label %368\l}"];
	Node0x4aa4af0 -> Node0x4a9a540;
	Node0x4a9a540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%368:\l368:                                              \l  %369 = phi i32 [ %367, %347 ], [ %337, %341 ], [ %337, %336 ]\l  %370 = add nuw nsw i32 %305, 2\l  %371 = add i32 %306, 2\l  %372 = icmp eq i32 %371, %194\l  br i1 %372, label %261, label %303, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x4a9a540:s0 -> Node0x4a9d9f0;
	Node0x4a9a540:s1 -> Node0x4a9dbd0;
	Node0x4aa27b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%373:\l373:                                              \l  %374 = icmp ugt i32 %30, 9000\l  br i1 %374, label %406, label %429\l|{<s0>T|<s1>F}}"];
	Node0x4aa27b0:s0 -> Node0x4aa5f20;
	Node0x4aa27b0:s1 -> Node0x4aa5f70;
	Node0x4aa2c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%375:\l375:                                              \l  %376 = phi i32 [ 1, %296 ], [ %377, %404 ]\l  %377 = shl nsw i32 %376, 1\l  %378 = add i32 %377, 1023\l  %379 = and i32 %378, %12\l  %380 = icmp eq i32 %379, 0\l  br i1 %380, label %381, label %404\l|{<s0>T|<s1>F}}"];
	Node0x4aa2c40:s0 -> Node0x4aa63b0;
	Node0x4aa2c40:s1 -> Node0x4aa6070;
	Node0x4aa63b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%381:\l381:                                              \l  %382 = add i32 %376, %30\l  %383 = zext i32 %382 to i64\l  %384 = getelementptr inbounds float, float addrspace(1)* %2, i64 %383\l  %385 = load float, float addrspace(1)* %384, align 4, !tbaa !7\l  %386 = load float, float addrspace(1)* %298, align 4, !tbaa !7\l  %387 = fadd contract float %385, %386\l  store float %387, float addrspace(1)* %298, align 4, !tbaa !7\l  %388 = getelementptr inbounds float, float addrspace(1)* %3, i64 %383\l  %389 = load float, float addrspace(1)* %388, align 4, !tbaa !7\l  %390 = load float, float addrspace(1)* %299, align 4, !tbaa !7\l  %391 = fadd contract float %389, %390\l  store float %391, float addrspace(1)* %299, align 4, !tbaa !7\l  %392 = getelementptr inbounds float, float addrspace(1)* %5, i64 %383\l  %393 = load float, float addrspace(1)* %392, align 4, !tbaa !7\l  %394 = load float, float addrspace(1)* %300, align 4, !tbaa !7\l  %395 = fadd contract float %393, %394\l  store float %395, float addrspace(1)* %300, align 4, !tbaa !7\l  %396 = getelementptr inbounds float, float addrspace(1)* %6, i64 %383\l  %397 = load float, float addrspace(1)* %396, align 4, !tbaa !7\l  %398 = load float, float addrspace(1)* %301, align 4, !tbaa !7\l  %399 = fadd contract float %397, %398\l  store float %399, float addrspace(1)* %301, align 4, !tbaa !7\l  %400 = getelementptr inbounds float, float addrspace(1)* %4, i64 %383\l  %401 = load float, float addrspace(1)* %400, align 4, !tbaa !7\l  %402 = load float, float addrspace(1)* %302, align 4, !tbaa !7\l  %403 = fadd contract float %401, %402\l  store float %403, float addrspace(1)* %302, align 4, !tbaa !7\l  br label %404\l}"];
	Node0x4aa63b0 -> Node0x4aa6070;
	Node0x4aa6070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%404:\l404:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %405 = icmp slt i32 %377, %10\l  br i1 %405, label %375, label %373, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x4aa6070:s0 -> Node0x4aa2c40;
	Node0x4aa6070:s1 -> Node0x4aa27b0;
	Node0x4aa5f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%406:\l406:                                              \l  %407 = zext i32 %30 to i64\l  %408 = getelementptr inbounds float, float addrspace(1)* %0, i64 %407\l  %409 = load float, float addrspace(1)* %408, align 4, !tbaa !7\l  %410 = load float, float addrspace(1)* %5, align 4, !tbaa !7\l  %411 = load float, float addrspace(1)* %6, align 4, !tbaa !7\l  %412 = fmul contract float %410, %411\l  %413 = tail call i1 @llvm.amdgcn.class.f32(float %412, i32 144)\l  %414 = select i1 %413, float 0x41F0000000000000, float 1.000000e+00\l  %415 = fmul float %412, %414\l  %416 = tail call float @llvm.log2.f32(float %415)\l  %417 = fmul float %416, 0x3FD3441340000000\l  %418 = tail call i1 @llvm.amdgcn.class.f32(float %416, i32 519)\l  %419 = fneg float %417\l  %420 = tail call float @llvm.fma.f32(float %416, float 0x3FD3441340000000,\l... float %419)\l  %421 = tail call float @llvm.fma.f32(float %416, float 0x3E509F79E0000000,\l... float %420)\l  %422 = fadd float %417, %421\l  %423 = select i1 %418, float %416, float %422\l  %424 = select i1 %413, float 0x4023441360000000, float 0.000000e+00\l  %425 = fsub float %423, %424\l  %426 = fmul contract float %409, %425\l  %427 = tail call float @llvm.fabs.f32(float %426)\l  %428 = getelementptr inbounds float, float addrspace(1)* %7, i64 %407\l  store float %427, float addrspace(1)* %428, align 4, !tbaa !7\l  br label %429\l}"];
	Node0x4aa5f20 -> Node0x4aa5f70;
	Node0x4aa5f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%429:\l429:                                              \l  br i1 %295, label %430, label %433\l|{<s0>T|<s1>F}}"];
	Node0x4aa5f70:s0 -> Node0x4aa8630;
	Node0x4aa5f70:s1 -> Node0x4aa8680;
	Node0x4aa8630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%430:\l430:                                              \l  %431 = zext i32 %30 to i64\l  %432 = getelementptr inbounds float, float addrspace(1)* %7, i64 %431\l  br label %435\l}"];
	Node0x4aa8630 -> Node0x4aa8890;
	Node0x4aa8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%433:\l433:                                              \l  %434 = icmp eq i32 %30, 0\l  br i1 %434, label %450, label %926\l|{<s0>T|<s1>F}}"];
	Node0x4aa8680:s0 -> Node0x4aa89e0;
	Node0x4aa8680:s1 -> Node0x4aa8a30;
	Node0x4aa8890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%435:\l435:                                              \l  %436 = phi i32 [ 1, %430 ], [ %437, %448 ]\l  %437 = shl nsw i32 %436, 1\l  %438 = add i32 %437, 1023\l  %439 = and i32 %438, %12\l  %440 = icmp eq i32 %439, 0\l  br i1 %440, label %441, label %448\l|{<s0>T|<s1>F}}"];
	Node0x4aa8890:s0 -> Node0x4aa9a80;
	Node0x4aa8890:s1 -> Node0x4aa8b70;
	Node0x4aa9a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%441:\l441:                                              \l  %442 = add i32 %436, %30\l  %443 = zext i32 %442 to i64\l  %444 = getelementptr inbounds float, float addrspace(1)* %7, i64 %443\l  %445 = load float, float addrspace(1)* %444, align 4, !tbaa !7\l  %446 = load float, float addrspace(1)* %432, align 4, !tbaa !7\l  %447 = fadd contract float %445, %446\l  store float %447, float addrspace(1)* %432, align 4, !tbaa !7\l  br label %448\l}"];
	Node0x4aa9a80 -> Node0x4aa8b70;
	Node0x4aa8b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%448:\l448:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %449 = icmp slt i32 %437, %10\l  br i1 %449, label %435, label %433, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x4aa8b70:s0 -> Node0x4aa8890;
	Node0x4aa8b70:s1 -> Node0x4aa8680;
	Node0x4aa89e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%450:\l450:                                              \l  %451 = load float, float addrspace(1)* %2, align 4, !tbaa !7\l  %452 = load float, float addrspace(1)* %3, align 4, !tbaa !7\l  %453 = fcmp contract ogt float %451, %452\l  %454 = load float, float addrspace(1)* %4, align 4, !tbaa !7\l  %455 = load float, float addrspace(1)* %7, align 4, !tbaa !7\l  br i1 %453, label %456, label %459\l|{<s0>T|<s1>F}}"];
	Node0x4aa89e0:s0 -> Node0x4aa96f0;
	Node0x4aa89e0:s1 -> Node0x4aaabf0;
	Node0x4aa96f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%456:\l456:                                              \l  %457 = fsub contract float %454, %455\l  %458 = fdiv contract float %457, %451\l  br label %462\l}"];
	Node0x4aa96f0 -> Node0x4aaae50;
	Node0x4aaabf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%459:\l459:                                              \l  %460 = fdiv contract float %455, %452\l  %461 = fsub contract float %454, %460\l  br label %462\l}"];
	Node0x4aaabf0 -> Node0x4aaae50;
	Node0x4aaae50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%462:\l462:                                              \l  %463 = phi float [ %461, %459 ], [ %458, %456 ]\l  store float %463, float addrspace(1)* %1, align 4, !tbaa !7\l  %464 = tail call float @llvm.fabs.f32(float %463)\l  %465 = fpext float %464 to double\l  %466 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %467 = getelementptr inbounds i8, i8 addrspace(4)* %466, i64 24\l  %468 = bitcast i8 addrspace(4)* %467 to i64 addrspace(4)*\l  %469 = load i64, i64 addrspace(4)* %468, align 8, !tbaa !19\l  %470 = inttoptr i64 %469 to i8 addrspace(1)*\l  %471 = addrspacecast i8 addrspace(1)* %470 to i8*\l  %472 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %471, i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %473 = extractelement \<2 x i64\> %472, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([8 x i8], [8 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %474, label %478\l|{<s0>T|<s1>F}}"];
	Node0x4aaae50:s0 -> Node0x4aac030;
	Node0x4aaae50:s1 -> Node0x4aaca20;
	Node0x4aac030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%474:\l474:                                              \l  %475 = and i64 %473, -225\l  %476 = or i64 %475, 32\l  %477 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %471, i64 noundef %476, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %919\l}"];
	Node0x4aac030 -> Node0x4aacce0;
	Node0x4aaca20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%478:\l478:                                              \l  %479 = and i64 %473, 2\l  %480 = and i64 %473, -3\l  %481 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %480, i64 0\l  br label %482\l}"];
	Node0x4aaca20 -> Node0x4aad880;
	Node0x4aad880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%482:\l482:                                              \l  %483 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([8 x i8], [8 x i8] addrspace(4)* @.str, i64 0, i64 0)\l... to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([8 x i8], [8 x i8] addrspace(4)* @.str,\l... i64 0, i64 7) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint ([8 x\l... i8]* addrspacecast ([8 x i8] addrspace(4)* @.str to [8 x i8]*) to i64)), i64\l... 1))), %478 ], [ %916, %908 ]\l  %484 = phi i8 addrspace(4)* [ getelementptr inbounds ([8 x i8], [8 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %478 ], [ %917, %908 ]\l  %485 = phi \<2 x i64\> [ %481, %478 ], [ %915, %908 ]\l  %486 = icmp ugt i64 %483, 56\l  %487 = extractelement \<2 x i64\> %485, i64 0\l  %488 = or i64 %487, %479\l  %489 = insertelement \<2 x i64\> poison, i64 %488, i64 0\l  %490 = select i1 %486, \<2 x i64\> %485, \<2 x i64\> %489\l  %491 = tail call i64 @llvm.umin.i64(i64 %483, i64 56)\l  %492 = trunc i64 %491 to i32\l  %493 = extractelement \<2 x i64\> %490, i64 0\l  %494 = icmp ugt i32 %492, 7\l  br i1 %494, label %497, label %495\l|{<s0>T|<s1>F}}"];
	Node0x4aad880:s0 -> Node0x4aae7f0;
	Node0x4aad880:s1 -> Node0x4aae880;
	Node0x4aae880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%495:\l495:                                              \l  %496 = icmp eq i32 %492, 0\l  br i1 %496, label %550, label %537\l|{<s0>T|<s1>F}}"];
	Node0x4aae880:s0 -> Node0x4aaea50;
	Node0x4aae880:s1 -> Node0x4aaeaa0;
	Node0x4aae7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%497:\l497:                                              \l  %498 = load i8, i8 addrspace(4)* %484, align 1, !tbaa !23\l  %499 = zext i8 %498 to i64\l  %500 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 1\l  %501 = load i8, i8 addrspace(4)* %500, align 1, !tbaa !23\l  %502 = zext i8 %501 to i64\l  %503 = shl nuw nsw i64 %502, 8\l  %504 = or i64 %503, %499\l  %505 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 2\l  %506 = load i8, i8 addrspace(4)* %505, align 1, !tbaa !23\l  %507 = zext i8 %506 to i64\l  %508 = shl nuw nsw i64 %507, 16\l  %509 = or i64 %504, %508\l  %510 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 3\l  %511 = load i8, i8 addrspace(4)* %510, align 1, !tbaa !23\l  %512 = zext i8 %511 to i64\l  %513 = shl nuw nsw i64 %512, 24\l  %514 = or i64 %509, %513\l  %515 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 4\l  %516 = load i8, i8 addrspace(4)* %515, align 1, !tbaa !23\l  %517 = zext i8 %516 to i64\l  %518 = shl nuw nsw i64 %517, 32\l  %519 = or i64 %514, %518\l  %520 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 5\l  %521 = load i8, i8 addrspace(4)* %520, align 1, !tbaa !23\l  %522 = zext i8 %521 to i64\l  %523 = shl nuw nsw i64 %522, 40\l  %524 = or i64 %519, %523\l  %525 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 6\l  %526 = load i8, i8 addrspace(4)* %525, align 1, !tbaa !23\l  %527 = zext i8 %526 to i64\l  %528 = shl nuw nsw i64 %527, 48\l  %529 = or i64 %524, %528\l  %530 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 7\l  %531 = load i8, i8 addrspace(4)* %530, align 1, !tbaa !23\l  %532 = zext i8 %531 to i64\l  %533 = shl nuw i64 %532, 56\l  %534 = or i64 %529, %533\l  %535 = add nsw i32 %492, -8\l  %536 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 8\l  br label %550\l}"];
	Node0x4aae7f0 -> Node0x4aaea50;
	Node0x4aaeaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%537:\l537:                                              \l  %538 = phi i32 [ %548, %537 ], [ 0, %495 ]\l  %539 = phi i64 [ %547, %537 ], [ 0, %495 ]\l  %540 = zext i32 %538 to i64\l  %541 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 %540\l  %542 = load i8, i8 addrspace(4)* %541, align 1, !tbaa !23\l  %543 = zext i8 %542 to i64\l  %544 = shl i32 %538, 3\l  %545 = zext i32 %544 to i64\l  %546 = shl nuw i64 %543, %545\l  %547 = or i64 %546, %539\l  %548 = add nuw nsw i32 %538, 1\l  %549 = icmp eq i32 %548, %492\l  br i1 %549, label %550, label %537, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4aaeaa0:s0 -> Node0x4aaea50;
	Node0x4aaeaa0:s1 -> Node0x4aaeaa0;
	Node0x4aaea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%550:\l550:                                              \l  %551 = phi i8 addrspace(4)* [ %536, %497 ], [ %484, %495 ], [ %484, %537 ]\l  %552 = phi i32 [ %535, %497 ], [ 0, %495 ], [ 0, %537 ]\l  %553 = phi i64 [ %534, %497 ], [ 0, %495 ], [ %547, %537 ]\l  %554 = icmp ugt i32 %552, 7\l  br i1 %554, label %557, label %555\l|{<s0>T|<s1>F}}"];
	Node0x4aaea50:s0 -> Node0x4ab24f0;
	Node0x4aaea50:s1 -> Node0x4ab2540;
	Node0x4ab2540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%555:\l555:                                              \l  %556 = icmp eq i32 %552, 0\l  br i1 %556, label %610, label %597\l|{<s0>T|<s1>F}}"];
	Node0x4ab2540:s0 -> Node0x4ab2710;
	Node0x4ab2540:s1 -> Node0x4ab2760;
	Node0x4ab24f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%557:\l557:                                              \l  %558 = load i8, i8 addrspace(4)* %551, align 1, !tbaa !23\l  %559 = zext i8 %558 to i64\l  %560 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 1\l  %561 = load i8, i8 addrspace(4)* %560, align 1, !tbaa !23\l  %562 = zext i8 %561 to i64\l  %563 = shl nuw nsw i64 %562, 8\l  %564 = or i64 %563, %559\l  %565 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 2\l  %566 = load i8, i8 addrspace(4)* %565, align 1, !tbaa !23\l  %567 = zext i8 %566 to i64\l  %568 = shl nuw nsw i64 %567, 16\l  %569 = or i64 %564, %568\l  %570 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 3\l  %571 = load i8, i8 addrspace(4)* %570, align 1, !tbaa !23\l  %572 = zext i8 %571 to i64\l  %573 = shl nuw nsw i64 %572, 24\l  %574 = or i64 %569, %573\l  %575 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 4\l  %576 = load i8, i8 addrspace(4)* %575, align 1, !tbaa !23\l  %577 = zext i8 %576 to i64\l  %578 = shl nuw nsw i64 %577, 32\l  %579 = or i64 %574, %578\l  %580 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 5\l  %581 = load i8, i8 addrspace(4)* %580, align 1, !tbaa !23\l  %582 = zext i8 %581 to i64\l  %583 = shl nuw nsw i64 %582, 40\l  %584 = or i64 %579, %583\l  %585 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 6\l  %586 = load i8, i8 addrspace(4)* %585, align 1, !tbaa !23\l  %587 = zext i8 %586 to i64\l  %588 = shl nuw nsw i64 %587, 48\l  %589 = or i64 %584, %588\l  %590 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 7\l  %591 = load i8, i8 addrspace(4)* %590, align 1, !tbaa !23\l  %592 = zext i8 %591 to i64\l  %593 = shl nuw i64 %592, 56\l  %594 = or i64 %589, %593\l  %595 = add nsw i32 %552, -8\l  %596 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 8\l  br label %610\l}"];
	Node0x4ab24f0 -> Node0x4ab2710;
	Node0x4ab2760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%597:\l597:                                              \l  %598 = phi i32 [ %608, %597 ], [ 0, %555 ]\l  %599 = phi i64 [ %607, %597 ], [ 0, %555 ]\l  %600 = zext i32 %598 to i64\l  %601 = getelementptr inbounds i8, i8 addrspace(4)* %551, i64 %600\l  %602 = load i8, i8 addrspace(4)* %601, align 1, !tbaa !23\l  %603 = zext i8 %602 to i64\l  %604 = shl i32 %598, 3\l  %605 = zext i32 %604 to i64\l  %606 = shl nuw i64 %603, %605\l  %607 = or i64 %606, %599\l  %608 = add nuw nsw i32 %598, 1\l  %609 = icmp eq i32 %608, %552\l  br i1 %609, label %610, label %597\l|{<s0>T|<s1>F}}"];
	Node0x4ab2760:s0 -> Node0x4ab2710;
	Node0x4ab2760:s1 -> Node0x4ab2760;
	Node0x4ab2710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%610:\l610:                                              \l  %611 = phi i8 addrspace(4)* [ %596, %557 ], [ %551, %555 ], [ %551, %597 ]\l  %612 = phi i32 [ %595, %557 ], [ 0, %555 ], [ 0, %597 ]\l  %613 = phi i64 [ %594, %557 ], [ 0, %555 ], [ %607, %597 ]\l  %614 = icmp ugt i32 %612, 7\l  br i1 %614, label %617, label %615\l|{<s0>T|<s1>F}}"];
	Node0x4ab2710:s0 -> Node0x4ab4bd0;
	Node0x4ab2710:s1 -> Node0x4ab4c20;
	Node0x4ab4c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%615:\l615:                                              \l  %616 = icmp eq i32 %612, 0\l  br i1 %616, label %670, label %657\l|{<s0>T|<s1>F}}"];
	Node0x4ab4c20:s0 -> Node0x4ab4db0;
	Node0x4ab4c20:s1 -> Node0x4ab4e00;
	Node0x4ab4bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%617:\l617:                                              \l  %618 = load i8, i8 addrspace(4)* %611, align 1, !tbaa !23\l  %619 = zext i8 %618 to i64\l  %620 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 1\l  %621 = load i8, i8 addrspace(4)* %620, align 1, !tbaa !23\l  %622 = zext i8 %621 to i64\l  %623 = shl nuw nsw i64 %622, 8\l  %624 = or i64 %623, %619\l  %625 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 2\l  %626 = load i8, i8 addrspace(4)* %625, align 1, !tbaa !23\l  %627 = zext i8 %626 to i64\l  %628 = shl nuw nsw i64 %627, 16\l  %629 = or i64 %624, %628\l  %630 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 3\l  %631 = load i8, i8 addrspace(4)* %630, align 1, !tbaa !23\l  %632 = zext i8 %631 to i64\l  %633 = shl nuw nsw i64 %632, 24\l  %634 = or i64 %629, %633\l  %635 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 4\l  %636 = load i8, i8 addrspace(4)* %635, align 1, !tbaa !23\l  %637 = zext i8 %636 to i64\l  %638 = shl nuw nsw i64 %637, 32\l  %639 = or i64 %634, %638\l  %640 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 5\l  %641 = load i8, i8 addrspace(4)* %640, align 1, !tbaa !23\l  %642 = zext i8 %641 to i64\l  %643 = shl nuw nsw i64 %642, 40\l  %644 = or i64 %639, %643\l  %645 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 6\l  %646 = load i8, i8 addrspace(4)* %645, align 1, !tbaa !23\l  %647 = zext i8 %646 to i64\l  %648 = shl nuw nsw i64 %647, 48\l  %649 = or i64 %644, %648\l  %650 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 7\l  %651 = load i8, i8 addrspace(4)* %650, align 1, !tbaa !23\l  %652 = zext i8 %651 to i64\l  %653 = shl nuw i64 %652, 56\l  %654 = or i64 %649, %653\l  %655 = add nsw i32 %612, -8\l  %656 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 8\l  br label %670\l}"];
	Node0x4ab4bd0 -> Node0x4ab4db0;
	Node0x4ab4e00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%657:\l657:                                              \l  %658 = phi i32 [ %668, %657 ], [ 0, %615 ]\l  %659 = phi i64 [ %667, %657 ], [ 0, %615 ]\l  %660 = zext i32 %658 to i64\l  %661 = getelementptr inbounds i8, i8 addrspace(4)* %611, i64 %660\l  %662 = load i8, i8 addrspace(4)* %661, align 1, !tbaa !23\l  %663 = zext i8 %662 to i64\l  %664 = shl i32 %658, 3\l  %665 = zext i32 %664 to i64\l  %666 = shl nuw i64 %663, %665\l  %667 = or i64 %666, %659\l  %668 = add nuw nsw i32 %658, 1\l  %669 = icmp eq i32 %668, %612\l  br i1 %669, label %670, label %657\l|{<s0>T|<s1>F}}"];
	Node0x4ab4e00:s0 -> Node0x4ab4db0;
	Node0x4ab4e00:s1 -> Node0x4ab4e00;
	Node0x4ab4db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%670:\l670:                                              \l  %671 = phi i8 addrspace(4)* [ %656, %617 ], [ %611, %615 ], [ %611, %657 ]\l  %672 = phi i32 [ %655, %617 ], [ 0, %615 ], [ 0, %657 ]\l  %673 = phi i64 [ %654, %617 ], [ 0, %615 ], [ %667, %657 ]\l  %674 = icmp ugt i32 %672, 7\l  br i1 %674, label %677, label %675\l|{<s0>T|<s1>F}}"];
	Node0x4ab4db0:s0 -> Node0x4ab6e20;
	Node0x4ab4db0:s1 -> Node0x4ab6e70;
	Node0x4ab6e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%675:\l675:                                              \l  %676 = icmp eq i32 %672, 0\l  br i1 %676, label %730, label %717\l|{<s0>T|<s1>F}}"];
	Node0x4ab6e70:s0 -> Node0x4ab7000;
	Node0x4ab6e70:s1 -> Node0x4ab7050;
	Node0x4ab6e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%677:\l677:                                              \l  %678 = load i8, i8 addrspace(4)* %671, align 1, !tbaa !23\l  %679 = zext i8 %678 to i64\l  %680 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 1\l  %681 = load i8, i8 addrspace(4)* %680, align 1, !tbaa !23\l  %682 = zext i8 %681 to i64\l  %683 = shl nuw nsw i64 %682, 8\l  %684 = or i64 %683, %679\l  %685 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 2\l  %686 = load i8, i8 addrspace(4)* %685, align 1, !tbaa !23\l  %687 = zext i8 %686 to i64\l  %688 = shl nuw nsw i64 %687, 16\l  %689 = or i64 %684, %688\l  %690 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 3\l  %691 = load i8, i8 addrspace(4)* %690, align 1, !tbaa !23\l  %692 = zext i8 %691 to i64\l  %693 = shl nuw nsw i64 %692, 24\l  %694 = or i64 %689, %693\l  %695 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 4\l  %696 = load i8, i8 addrspace(4)* %695, align 1, !tbaa !23\l  %697 = zext i8 %696 to i64\l  %698 = shl nuw nsw i64 %697, 32\l  %699 = or i64 %694, %698\l  %700 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 5\l  %701 = load i8, i8 addrspace(4)* %700, align 1, !tbaa !23\l  %702 = zext i8 %701 to i64\l  %703 = shl nuw nsw i64 %702, 40\l  %704 = or i64 %699, %703\l  %705 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 6\l  %706 = load i8, i8 addrspace(4)* %705, align 1, !tbaa !23\l  %707 = zext i8 %706 to i64\l  %708 = shl nuw nsw i64 %707, 48\l  %709 = or i64 %704, %708\l  %710 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 7\l  %711 = load i8, i8 addrspace(4)* %710, align 1, !tbaa !23\l  %712 = zext i8 %711 to i64\l  %713 = shl nuw i64 %712, 56\l  %714 = or i64 %709, %713\l  %715 = add nsw i32 %672, -8\l  %716 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 8\l  br label %730\l}"];
	Node0x4ab6e20 -> Node0x4ab7000;
	Node0x4ab7050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%717:\l717:                                              \l  %718 = phi i32 [ %728, %717 ], [ 0, %675 ]\l  %719 = phi i64 [ %727, %717 ], [ 0, %675 ]\l  %720 = zext i32 %718 to i64\l  %721 = getelementptr inbounds i8, i8 addrspace(4)* %671, i64 %720\l  %722 = load i8, i8 addrspace(4)* %721, align 1, !tbaa !23\l  %723 = zext i8 %722 to i64\l  %724 = shl i32 %718, 3\l  %725 = zext i32 %724 to i64\l  %726 = shl nuw i64 %723, %725\l  %727 = or i64 %726, %719\l  %728 = add nuw nsw i32 %718, 1\l  %729 = icmp eq i32 %728, %672\l  br i1 %729, label %730, label %717\l|{<s0>T|<s1>F}}"];
	Node0x4ab7050:s0 -> Node0x4ab7000;
	Node0x4ab7050:s1 -> Node0x4ab7050;
	Node0x4ab7000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%730:\l730:                                              \l  %731 = phi i8 addrspace(4)* [ %716, %677 ], [ %671, %675 ], [ %671, %717 ]\l  %732 = phi i32 [ %715, %677 ], [ 0, %675 ], [ 0, %717 ]\l  %733 = phi i64 [ %714, %677 ], [ 0, %675 ], [ %727, %717 ]\l  %734 = icmp ugt i32 %732, 7\l  br i1 %734, label %737, label %735\l|{<s0>T|<s1>F}}"];
	Node0x4ab7000:s0 -> Node0x4aba480;
	Node0x4ab7000:s1 -> Node0x4aba4d0;
	Node0x4aba4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%735:\l735:                                              \l  %736 = icmp eq i32 %732, 0\l  br i1 %736, label %790, label %777\l|{<s0>T|<s1>F}}"];
	Node0x4aba4d0:s0 -> Node0x4aba660;
	Node0x4aba4d0:s1 -> Node0x4aba6b0;
	Node0x4aba480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%737:\l737:                                              \l  %738 = load i8, i8 addrspace(4)* %731, align 1, !tbaa !23\l  %739 = zext i8 %738 to i64\l  %740 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 1\l  %741 = load i8, i8 addrspace(4)* %740, align 1, !tbaa !23\l  %742 = zext i8 %741 to i64\l  %743 = shl nuw nsw i64 %742, 8\l  %744 = or i64 %743, %739\l  %745 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 2\l  %746 = load i8, i8 addrspace(4)* %745, align 1, !tbaa !23\l  %747 = zext i8 %746 to i64\l  %748 = shl nuw nsw i64 %747, 16\l  %749 = or i64 %744, %748\l  %750 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 3\l  %751 = load i8, i8 addrspace(4)* %750, align 1, !tbaa !23\l  %752 = zext i8 %751 to i64\l  %753 = shl nuw nsw i64 %752, 24\l  %754 = or i64 %749, %753\l  %755 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 4\l  %756 = load i8, i8 addrspace(4)* %755, align 1, !tbaa !23\l  %757 = zext i8 %756 to i64\l  %758 = shl nuw nsw i64 %757, 32\l  %759 = or i64 %754, %758\l  %760 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 5\l  %761 = load i8, i8 addrspace(4)* %760, align 1, !tbaa !23\l  %762 = zext i8 %761 to i64\l  %763 = shl nuw nsw i64 %762, 40\l  %764 = or i64 %759, %763\l  %765 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 6\l  %766 = load i8, i8 addrspace(4)* %765, align 1, !tbaa !23\l  %767 = zext i8 %766 to i64\l  %768 = shl nuw nsw i64 %767, 48\l  %769 = or i64 %764, %768\l  %770 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 7\l  %771 = load i8, i8 addrspace(4)* %770, align 1, !tbaa !23\l  %772 = zext i8 %771 to i64\l  %773 = shl nuw i64 %772, 56\l  %774 = or i64 %769, %773\l  %775 = add nsw i32 %732, -8\l  %776 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 8\l  br label %790\l}"];
	Node0x4aba480 -> Node0x4aba660;
	Node0x4aba6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%777:\l777:                                              \l  %778 = phi i32 [ %788, %777 ], [ 0, %735 ]\l  %779 = phi i64 [ %787, %777 ], [ 0, %735 ]\l  %780 = zext i32 %778 to i64\l  %781 = getelementptr inbounds i8, i8 addrspace(4)* %731, i64 %780\l  %782 = load i8, i8 addrspace(4)* %781, align 1, !tbaa !23\l  %783 = zext i8 %782 to i64\l  %784 = shl i32 %778, 3\l  %785 = zext i32 %784 to i64\l  %786 = shl nuw i64 %783, %785\l  %787 = or i64 %786, %779\l  %788 = add nuw nsw i32 %778, 1\l  %789 = icmp eq i32 %788, %732\l  br i1 %789, label %790, label %777\l|{<s0>T|<s1>F}}"];
	Node0x4aba6b0:s0 -> Node0x4aba660;
	Node0x4aba6b0:s1 -> Node0x4aba6b0;
	Node0x4aba660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%790:\l790:                                              \l  %791 = phi i8 addrspace(4)* [ %776, %737 ], [ %731, %735 ], [ %731, %777 ]\l  %792 = phi i32 [ %775, %737 ], [ 0, %735 ], [ 0, %777 ]\l  %793 = phi i64 [ %774, %737 ], [ 0, %735 ], [ %787, %777 ]\l  %794 = icmp ugt i32 %792, 7\l  br i1 %794, label %797, label %795\l|{<s0>T|<s1>F}}"];
	Node0x4aba660:s0 -> Node0x4abc6d0;
	Node0x4aba660:s1 -> Node0x4abc720;
	Node0x4abc720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%795:\l795:                                              \l  %796 = icmp eq i32 %792, 0\l  br i1 %796, label %850, label %837\l|{<s0>T|<s1>F}}"];
	Node0x4abc720:s0 -> Node0x4abc8b0;
	Node0x4abc720:s1 -> Node0x4abc900;
	Node0x4abc6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%797:\l797:                                              \l  %798 = load i8, i8 addrspace(4)* %791, align 1, !tbaa !23\l  %799 = zext i8 %798 to i64\l  %800 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 1\l  %801 = load i8, i8 addrspace(4)* %800, align 1, !tbaa !23\l  %802 = zext i8 %801 to i64\l  %803 = shl nuw nsw i64 %802, 8\l  %804 = or i64 %803, %799\l  %805 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 2\l  %806 = load i8, i8 addrspace(4)* %805, align 1, !tbaa !23\l  %807 = zext i8 %806 to i64\l  %808 = shl nuw nsw i64 %807, 16\l  %809 = or i64 %804, %808\l  %810 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 3\l  %811 = load i8, i8 addrspace(4)* %810, align 1, !tbaa !23\l  %812 = zext i8 %811 to i64\l  %813 = shl nuw nsw i64 %812, 24\l  %814 = or i64 %809, %813\l  %815 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 4\l  %816 = load i8, i8 addrspace(4)* %815, align 1, !tbaa !23\l  %817 = zext i8 %816 to i64\l  %818 = shl nuw nsw i64 %817, 32\l  %819 = or i64 %814, %818\l  %820 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 5\l  %821 = load i8, i8 addrspace(4)* %820, align 1, !tbaa !23\l  %822 = zext i8 %821 to i64\l  %823 = shl nuw nsw i64 %822, 40\l  %824 = or i64 %819, %823\l  %825 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 6\l  %826 = load i8, i8 addrspace(4)* %825, align 1, !tbaa !23\l  %827 = zext i8 %826 to i64\l  %828 = shl nuw nsw i64 %827, 48\l  %829 = or i64 %824, %828\l  %830 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 7\l  %831 = load i8, i8 addrspace(4)* %830, align 1, !tbaa !23\l  %832 = zext i8 %831 to i64\l  %833 = shl nuw i64 %832, 56\l  %834 = or i64 %829, %833\l  %835 = add nsw i32 %792, -8\l  %836 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 8\l  br label %850\l}"];
	Node0x4abc6d0 -> Node0x4abc8b0;
	Node0x4abc900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%837:\l837:                                              \l  %838 = phi i32 [ %848, %837 ], [ 0, %795 ]\l  %839 = phi i64 [ %847, %837 ], [ 0, %795 ]\l  %840 = zext i32 %838 to i64\l  %841 = getelementptr inbounds i8, i8 addrspace(4)* %791, i64 %840\l  %842 = load i8, i8 addrspace(4)* %841, align 1, !tbaa !23\l  %843 = zext i8 %842 to i64\l  %844 = shl i32 %838, 3\l  %845 = zext i32 %844 to i64\l  %846 = shl nuw i64 %843, %845\l  %847 = or i64 %846, %839\l  %848 = add nuw nsw i32 %838, 1\l  %849 = icmp eq i32 %848, %792\l  br i1 %849, label %850, label %837\l|{<s0>T|<s1>F}}"];
	Node0x4abc900:s0 -> Node0x4abc8b0;
	Node0x4abc900:s1 -> Node0x4abc900;
	Node0x4abc8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%850:\l850:                                              \l  %851 = phi i8 addrspace(4)* [ %836, %797 ], [ %791, %795 ], [ %791, %837 ]\l  %852 = phi i32 [ %835, %797 ], [ 0, %795 ], [ 0, %837 ]\l  %853 = phi i64 [ %834, %797 ], [ 0, %795 ], [ %847, %837 ]\l  %854 = icmp ugt i32 %852, 7\l  br i1 %854, label %857, label %855\l|{<s0>T|<s1>F}}"];
	Node0x4abc8b0:s0 -> Node0x4abef30;
	Node0x4abc8b0:s1 -> Node0x4abef80;
	Node0x4abef80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%855:\l855:                                              \l  %856 = icmp eq i32 %852, 0\l  br i1 %856, label %908, label %895\l|{<s0>T|<s1>F}}"];
	Node0x4abef80:s0 -> Node0x4aadd20;
	Node0x4abef80:s1 -> Node0x4abf110;
	Node0x4abef30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%857:\l857:                                              \l  %858 = load i8, i8 addrspace(4)* %851, align 1, !tbaa !23\l  %859 = zext i8 %858 to i64\l  %860 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 1\l  %861 = load i8, i8 addrspace(4)* %860, align 1, !tbaa !23\l  %862 = zext i8 %861 to i64\l  %863 = shl nuw nsw i64 %862, 8\l  %864 = or i64 %863, %859\l  %865 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 2\l  %866 = load i8, i8 addrspace(4)* %865, align 1, !tbaa !23\l  %867 = zext i8 %866 to i64\l  %868 = shl nuw nsw i64 %867, 16\l  %869 = or i64 %864, %868\l  %870 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 3\l  %871 = load i8, i8 addrspace(4)* %870, align 1, !tbaa !23\l  %872 = zext i8 %871 to i64\l  %873 = shl nuw nsw i64 %872, 24\l  %874 = or i64 %869, %873\l  %875 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 4\l  %876 = load i8, i8 addrspace(4)* %875, align 1, !tbaa !23\l  %877 = zext i8 %876 to i64\l  %878 = shl nuw nsw i64 %877, 32\l  %879 = or i64 %874, %878\l  %880 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 5\l  %881 = load i8, i8 addrspace(4)* %880, align 1, !tbaa !23\l  %882 = zext i8 %881 to i64\l  %883 = shl nuw nsw i64 %882, 40\l  %884 = or i64 %879, %883\l  %885 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 6\l  %886 = load i8, i8 addrspace(4)* %885, align 1, !tbaa !23\l  %887 = zext i8 %886 to i64\l  %888 = shl nuw nsw i64 %887, 48\l  %889 = or i64 %884, %888\l  %890 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 7\l  %891 = load i8, i8 addrspace(4)* %890, align 1, !tbaa !23\l  %892 = zext i8 %891 to i64\l  %893 = shl nuw i64 %892, 56\l  %894 = or i64 %889, %893\l  br label %908\l}"];
	Node0x4abef30 -> Node0x4aadd20;
	Node0x4abf110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%895:\l895:                                              \l  %896 = phi i32 [ %906, %895 ], [ 0, %855 ]\l  %897 = phi i64 [ %905, %895 ], [ 0, %855 ]\l  %898 = zext i32 %896 to i64\l  %899 = getelementptr inbounds i8, i8 addrspace(4)* %851, i64 %898\l  %900 = load i8, i8 addrspace(4)* %899, align 1, !tbaa !23\l  %901 = zext i8 %900 to i64\l  %902 = shl i32 %896, 3\l  %903 = zext i32 %902 to i64\l  %904 = shl nuw i64 %901, %903\l  %905 = or i64 %904, %897\l  %906 = add nuw nsw i32 %896, 1\l  %907 = icmp eq i32 %906, %852\l  br i1 %907, label %908, label %895\l|{<s0>T|<s1>F}}"];
	Node0x4abf110:s0 -> Node0x4aadd20;
	Node0x4abf110:s1 -> Node0x4abf110;
	Node0x4aadd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%908:\l908:                                              \l  %909 = phi i64 [ %894, %857 ], [ 0, %855 ], [ %905, %895 ]\l  %910 = shl nuw nsw i64 %491, 2\l  %911 = add nuw nsw i64 %910, 28\l  %912 = and i64 %911, 480\l  %913 = and i64 %493, -225\l  %914 = or i64 %913, %912\l  %915 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %471, i64 noundef %914, i64 noundef %553, i64 noundef %613, i64 noundef %673,\l... i64 noundef %733, i64 noundef %793, i64 noundef %853, i64 noundef %909) #11\l  %916 = sub i64 %483, %491\l  %917 = getelementptr inbounds i8, i8 addrspace(4)* %484, i64 %491\l  %918 = icmp eq i64 %916, 0\l  br i1 %918, label %919, label %482\l|{<s0>T|<s1>F}}"];
	Node0x4aadd20:s0 -> Node0x4aacce0;
	Node0x4aadd20:s1 -> Node0x4aad880;
	Node0x4aacce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%919:\l919:                                              \l  %920 = phi \<2 x i64\> [ %477, %474 ], [ %915, %908 ]\l  %921 = extractelement \<2 x i64\> %920, i64 0\l  %922 = bitcast double %465 to i64\l  %923 = and i64 %921, -227\l  %924 = or i64 %923, 34\l  %925 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef\l... %471, i64 noundef %924, i64 noundef %922, i64 noundef 0, i64 noundef 0, i64\l... noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %926\l}"];
	Node0x4aacce0 -> Node0x4aa8a30;
	Node0x4aa8a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%926:\l926:                                              \l  ret void\l}"];
}
