digraph "CFG for '_Z13kernel_sharedPiS_S_S_' function" {
	label="CFG for '_Z13kernel_sharedPiS_S_S_' function";

	Node0x53003f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = shl nsw i32 %13, 11\l  %23 = add nsw i32 %21, %22\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %27 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13kernel_sharedPiS_S_S_E13shared_memory, i32 0, i32 %12,\l... i32 %20\l  store i32 %26, i32 addrspace(3)* %27, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = add i32 %11, %20\l  %29 = add i32 %19, %12\l  %30 = shl nsw i32 %29, 11\l  %31 = add nsw i32 %30, %28\l  %32 = shl nsw i32 %28, 11\l  %33 = add nsw i32 %29, %32\l  %34 = icmp slt i32 %31, 4194304\l  %35 = icmp slt i32 %33, 4194304\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %49\l|{<s0>T|<s1>F}}"];
	Node0x53003f0:s0 -> Node0x5302620;
	Node0x53003f0:s1 -> Node0x53052f0;
	Node0x5302620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%37:\l37:                                               \l  %38 = sext i32 %31 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = shl nsw i32 %40, 1\l  %42 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]\l... addrspace(3)* @_ZZ13kernel_sharedPiS_S_S_E13shared_memory, i32 0, i32 %20,\l... i32 %12\l  %43 = load i32, i32 addrspace(3)* %42, align 4, !tbaa !7\l  %44 = mul nsw i32 %41, %43\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = sub nsw i32 %44, %46\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %38\l  store i32 %47, i32 addrspace(1)* %48, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x5302620 -> Node0x53052f0;
	Node0x53052f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  ret void\l}"];
}
