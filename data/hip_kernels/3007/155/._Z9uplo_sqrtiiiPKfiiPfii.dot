digraph "CFG for '_Z9uplo_sqrtiiiPKfiiPfii' function" {
	label="CFG for '_Z9uplo_sqrtiiiPKfiiPfii' function";

	Node0x5bf2050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5bf2050:s0 -> Node0x5bf6610;
	Node0x5bf2050:s1 -> Node0x5bf66a0;
	Node0x5bf6610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5bf6610:s0 -> Node0x5bf4690;
	Node0x5bf6610:s1 -> Node0x5bf66a0;
	Node0x5bf4690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fcmp olt float %43, 0x39F0000000000000\l  %45 = select i1 %44, float 0x41F0000000000000, float 1.000000e+00\l  %46 = fmul float %43, %45\l  %47 = tail call float @llvm.sqrt.f32(float %46)\l  %48 = bitcast float %47 to i32\l  %49 = add nsw i32 %48, -1\l  %50 = bitcast i32 %49 to float\l  %51 = add nsw i32 %48, 1\l  %52 = bitcast i32 %51 to float\l  %53 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 608)\l  %54 = select i1 %44, float 0x3EF0000000000000, float 1.000000e+00\l  %55 = fneg float %52\l  %56 = tail call float @llvm.fma.f32(float %55, float %47, float %46)\l  %57 = fcmp ogt float %56, 0.000000e+00\l  %58 = fneg float %50\l  %59 = tail call float @llvm.fma.f32(float %58, float %47, float %46)\l  %60 = fcmp ole float %59, 0.000000e+00\l  %61 = select i1 %60, float %50, float %47\l  %62 = select i1 %57, float %52, float %61\l  %63 = fmul float %54, %62\l  %64 = select i1 %53, float %46, float %63\l  %65 = add nsw i32 %18, %7\l  %66 = mul nsw i32 %26, %8\l  %67 = add nsw i32 %65, %66\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %6, i64 %68\l  store float %64, float addrspace(1)* %69, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5bf4690 -> Node0x5bf66a0;
	Node0x5bf66a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  ret void\l}"];
}
