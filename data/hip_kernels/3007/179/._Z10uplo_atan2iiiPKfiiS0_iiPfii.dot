digraph "CFG for '_Z10uplo_atan2iiiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z10uplo_atan2iiiPKfiiS0_iiPfii' function";

	Node0x5a596e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %21, %0\l  %31 = icmp slt i32 %29, %0\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5a596e0:s0 -> Node0x5a5ae80;
	Node0x5a596e0:s1 -> Node0x5a5af10;
	Node0x5a5ae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %1, 132\l  %35 = mul nsw i32 %21, %2\l  %36 = mul nsw i32 %29, %2\l  %37 = icmp sgt i32 %35, %36\l  %38 = icmp sge i32 %35, %36\l  %39 = select i1 %34, i1 %37, i1 %38\l  br i1 %39, label %40, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5a5ae80:s0 -> Node0x5a5e3a0;
	Node0x5a5ae80:s1 -> Node0x5a5af10;
	Node0x5a5e3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%40:\l40:                                               \l  %41 = add nsw i32 %21, %4\l  %42 = mul nsw i32 %29, %5\l  %43 = add nsw i32 %41, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = add nsw i32 %21, %7\l  %48 = mul nsw i32 %29, %8\l  %49 = add nsw i32 %47, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = tail call float @llvm.fabs.f32(float %52)\l  %54 = tail call float @llvm.fabs.f32(float %46)\l  %55 = tail call float @llvm.minnum.f32(float %53, float %54)\l  %56 = tail call float @llvm.maxnum.f32(float %53, float %54)\l  %57 = fdiv float %55, %56, !fpmath !11\l  %58 = fmul float %57, %57\l  %59 = tail call float @llvm.fmuladd.f32(float %58, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %60 = tail call float @llvm.fmuladd.f32(float %58, float %59, float\l... 0x3FA53F67E0000000)\l  %61 = tail call float @llvm.fmuladd.f32(float %58, float %60, float\l... 0xBFB2FA9AE0000000)\l  %62 = tail call float @llvm.fmuladd.f32(float %58, float %61, float\l... 0x3FBB263640000000)\l  %63 = tail call float @llvm.fmuladd.f32(float %58, float %62, float\l... 0xBFC22C1CC0000000)\l  %64 = tail call float @llvm.fmuladd.f32(float %58, float %63, float\l... 0x3FC99717E0000000)\l  %65 = tail call float @llvm.fmuladd.f32(float %58, float %64, float\l... 0xBFD5554C40000000)\l  %66 = fmul float %58, %65\l  %67 = tail call float @llvm.fmuladd.f32(float %57, float %66, float %57)\l  %68 = fsub float 0x3FF921FB60000000, %67\l  %69 = fcmp ogt float %54, %53\l  %70 = select i1 %69, float %68, float %67\l  %71 = fsub float 0x400921FB60000000, %70\l  %72 = fcmp olt float %52, 0.000000e+00\l  %73 = select i1 %72, float %71, float %70\l  %74 = bitcast float %52 to i32\l  %75 = icmp slt i32 %74, 0\l  %76 = select i1 %75, float 0x400921FB60000000, float 0.000000e+00\l  %77 = fcmp oeq float %46, 0.000000e+00\l  %78 = select i1 %77, float %76, float %73\l  %79 = select i1 %72, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %80 = fcmp oeq float %53, 0x7FF0000000000000\l  %81 = fcmp oeq float %54, 0x7FF0000000000000\l  %82 = and i1 %81, %80\l  %83 = select i1 %82, float %79, float %78\l  %84 = fcmp uno float %52, %46\l  %85 = select i1 %84, float 0x7FF8000000000000, float %83\l  %86 = tail call float @llvm.copysign.f32(float %85, float %46)\l  %87 = add nsw i32 %21, %10\l  %88 = mul nsw i32 %29, %11\l  %89 = add nsw i32 %87, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %9, i64 %90\l  store float %86, float addrspace(1)* %91, align 4, !tbaa !7\l  br label %92\l}"];
	Node0x5a5e3a0 -> Node0x5a5af10;
	Node0x5a5af10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%92:\l92:                                               \l  ret void\l}"];
}
