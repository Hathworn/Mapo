digraph "CFG for '_Z7ge_fmodiiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z7ge_fmodiiPKfiiS0_iiPfii' function";

	Node0x495bb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %0\l  %30 = icmp slt i32 %28, %1\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %107\l|{<s0>T|<s1>F}}"];
	Node0x495bb40:s0 -> Node0x4960160;
	Node0x495bb40:s1 -> Node0x49601f0;
	Node0x4960160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%32:\l32:                                               \l  %33 = add nsw i32 %20, %3\l  %34 = mul nsw i32 %28, %4\l  %35 = add nsw i32 %33, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %20, %6\l  %40 = mul nsw i32 %28, %7\l  %41 = add nsw i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = tail call float @llvm.fabs.f32(float %38)\l  %46 = tail call float @llvm.fabs.f32(float %44)\l  %47 = fcmp ogt float %45, %46\l  br i1 %47, label %48, label %90\l|{<s0>T|<s1>F}}"];
	Node0x4960160:s0 -> Node0x4961640;
	Node0x4960160:s1 -> Node0x49616d0;
	Node0x4961640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%48:\l48:                                               \l  %49 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %45)\l  %50 = tail call float @llvm.amdgcn.frexp.mant.f32(float %45)\l  %51 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 12)\l  %52 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %46)\l  %53 = add nsw i32 %52, -1\l  %54 = tail call float @llvm.amdgcn.frexp.mant.f32(float %46)\l  %55 = tail call float @llvm.amdgcn.ldexp.f32(float %54, i32 1)\l  %56 = sub i32 %49, %52\l  %57 = tail call float @llvm.amdgcn.rcp.f32(float %55)\l  %58 = icmp sgt i32 %56, 12\l  br i1 %58, label %59, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4961640:s0 -> Node0x4962590;
	Node0x4961640:s1 -> Node0x4962620;
	Node0x4962590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %69, %59 ], [ %51, %48 ]\l  %61 = phi i32 [ %70, %59 ], [ %56, %48 ]\l  %62 = fmul float %57, %60\l  %63 = tail call float @llvm.rint.f32(float %62)\l  %64 = fneg float %63\l  %65 = tail call float @llvm.fma.f32(float %64, float %55, float %60)\l  %66 = fcmp olt float %65, 0.000000e+00\l  %67 = select i1 %66, float %55, float -0.000000e+00\l  %68 = fadd float %65, %67\l  %69 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 12)\l  %70 = add nsw i32 %61, -12\l  %71 = icmp ugt i32 %61, 24\l  br i1 %71, label %59, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4962590:s0 -> Node0x4962590;
	Node0x4962590:s1 -> Node0x4962620;
	Node0x4962620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%72:\l72:                                               \l  %73 = phi i32 [ %56, %48 ], [ %70, %59 ]\l  %74 = phi float [ %51, %48 ], [ %69, %59 ]\l  %75 = add nsw i32 %73, -11\l  %76 = tail call float @llvm.amdgcn.ldexp.f32(float %74, i32 %75)\l  %77 = fmul float %57, %76\l  %78 = tail call float @llvm.rint.f32(float %77)\l  %79 = fneg float %78\l  %80 = tail call float @llvm.fma.f32(float %79, float %55, float %76)\l  %81 = fcmp olt float %80, 0.000000e+00\l  %82 = select i1 %81, float %55, float -0.000000e+00\l  %83 = fadd float %80, %82\l  %84 = tail call float @llvm.amdgcn.ldexp.f32(float %83, i32 %53)\l  %85 = bitcast float %38 to i32\l  %86 = and i32 %85, -2147483648\l  %87 = bitcast float %84 to i32\l  %88 = xor i32 %86, %87\l  %89 = bitcast i32 %88 to float\l  br label %94\l}"];
	Node0x4962620 -> Node0x4964c70;
	Node0x49616d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%90:\l90:                                               \l  %91 = fcmp oeq float %45, %46\l  %92 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %38)\l  %93 = select i1 %91, float %92, float %38\l  br label %94\l}"];
	Node0x49616d0 -> Node0x4964c70;
	Node0x4964c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%94:\l94:                                               \l  %95 = phi float [ %89, %72 ], [ %93, %90 ]\l  %96 = fcmp oeq float %44, 0.000000e+00\l  %97 = select i1 %96, float 0x7FF8000000000000, float %95\l  %98 = fcmp ord float %44, 0.000000e+00\l  %99 = tail call i1 @llvm.amdgcn.class.f32(float %38, i32 504)\l  %100 = select i1 %98, i1 %99, i1 false\l  %101 = select i1 %100, float %97, float 0x7FF8000000000000\l  %102 = add nsw i32 %20, %9\l  %103 = mul nsw i32 %28, %10\l  %104 = add nsw i32 %102, %103\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %8, i64 %105\l  store float %101, float addrspace(1)* %106, align 4, !tbaa !7\l  br label %107\l}"];
	Node0x4964c70 -> Node0x49601f0;
	Node0x49601f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%107:\l107:                                              \l  ret void\l}"];
}
