digraph "CFG for '_Z7ge_cbrtiiPKfiiPfii' function" {
	label="CFG for '_Z7ge_cbrtiiPKfiiPfii' function";

	Node0x5b04d30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %58\l|{<s0>T|<s1>F}}"];
	Node0x5b04d30:s0 -> Node0x5b08770;
	Node0x5b04d30:s1 -> Node0x5b08800;
	Node0x5b08770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 144)\l  %38 = tail call float @llvm.amdgcn.ldexp.f32(float %36, i32 24)\l  %39 = select i1 %37, float %38, float %36\l  %40 = tail call float @llvm.log2.f32(float %39)\l  %41 = fmul float %40, 0x3FD5555560000000\l  %42 = tail call float @llvm.exp2.f32(float %41)\l  %43 = fmul float %42, %42\l  %44 = tail call float @llvm.amdgcn.rcp.f32(float %43)\l  %45 = fneg float %39\l  %46 = tail call float @llvm.fmuladd.f32(float %44, float %45, float %42)\l  %47 = tail call float @llvm.fmuladd.f32(float %46, float 0xBFD5555560000000,\l... float %42)\l  %48 = tail call float @llvm.amdgcn.ldexp.f32(float %47, i32 -8)\l  %49 = select i1 %37, float %48, float %47\l  %50 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 615)\l  %51 = select i1 %50, float %35, float %49\l  %52 = tail call float @llvm.copysign.f32(float %51, float %35)\l  %53 = add nsw i32 %17, %6\l  %54 = mul nsw i32 %25, %7\l  %55 = add nsw i32 %53, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %5, i64 %56\l  store float %52, float addrspace(1)* %57, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x5b08770 -> Node0x5b08800;
	Node0x5b08800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
