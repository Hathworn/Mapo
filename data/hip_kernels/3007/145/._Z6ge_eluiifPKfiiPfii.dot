digraph "CFG for '_Z6ge_eluiifPKfiiPfii' function" {
	label="CFG for '_Z6ge_eluiifPKfiiPfii' function";

	Node0x5d352c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %1\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5d352c0:s0 -> Node0x5d39860;
	Node0x5d352c0:s1 -> Node0x5d398f0;
	Node0x5d39860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = add nsw i32 %18, %4\l  %32 = mul nsw i32 %26, %5\l  %33 = add nsw i32 %31, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %3, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fmul float %36, 0x3FF7154760000000\l  %38 = tail call float @llvm.rint.f32(float %37)\l  %39 = fneg float %38\l  %40 = tail call float @llvm.fma.f32(float %39, float 0x3FE62E4300000000,\l... float %36)\l  %41 = tail call float @llvm.fma.f32(float %39, float 0xBE205C6100000000,\l... float %40)\l  %42 = tail call float @llvm.fmuladd.f32(float %41, float 0x3F2A267620000000,\l... float 0x3F56D2E000000000)\l  %43 = tail call float @llvm.fmuladd.f32(float %41, float %42, float\l... 0x3F8110FF20000000)\l  %44 = tail call float @llvm.fmuladd.f32(float %41, float %43, float\l... 0x3FA5555020000000)\l  %45 = tail call float @llvm.fmuladd.f32(float %41, float %44, float\l... 0x3FC5555560000000)\l  %46 = tail call float @llvm.fmuladd.f32(float %41, float %45, float\l... 5.000000e-01)\l  %47 = fmul float %41, %46\l  %48 = tail call float @llvm.fma.f32(float %41, float %47, float %41)\l  %49 = fcmp oeq float %38, 1.280000e+02\l  %50 = fptosi float %38 to i32\l  %51 = select i1 %49, i32 127, i32 %50\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float 1.000000e+00, i32 %51)\l  %53 = fadd float %52, -1.000000e+00\l  %54 = tail call float @llvm.fma.f32(float %52, float %48, float %53)\l  %55 = fmul float %54, 2.000000e+00\l  %56 = select i1 %49, float %55, float %54\l  %57 = fcmp ogt float %36, 0x40562E42E0000000\l  %58 = select i1 %57, float 0x7FF0000000000000, float %56\l  %59 = fcmp olt float %36, -1.700000e+01\l  %60 = select i1 %59, float -1.000000e+00, float %58\l  %61 = fmul contract float %60, %2\l  %62 = tail call float @llvm.maxnum.f32(float %36, float %61)\l  %63 = add nsw i32 %18, %7\l  %64 = mul nsw i32 %26, %8\l  %65 = add nsw i32 %63, %64\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %6, i64 %66\l  store float %62, float addrspace(1)* %67, align 4, !tbaa !7\l  br label %68\l}"];
	Node0x5d39860 -> Node0x5d398f0;
	Node0x5d398f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  ret void\l}"];
}
