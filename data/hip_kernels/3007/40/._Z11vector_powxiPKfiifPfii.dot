digraph "CFG for '_Z11vector_powxiPKfiifPfii' function" {
	label="CFG for '_Z11vector_powxiPKfiifPfii' function";

	Node0x5c36990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = icmp slt i32 %17, %0\l  br i1 %18, label %19, label %220\l|{<s0>T|<s1>F}}"];
	Node0x5c36990:s0 -> Node0x5c388c0;
	Node0x5c36990:s1 -> Node0x5c38950;
	Node0x5c388c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %17, %3\l  %21 = add nsw i32 %20, %2\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = tail call float @llvm.fabs.f32(float %24)\l  %26 = tail call float @llvm.amdgcn.frexp.mant.f32(float %25)\l  %27 = fcmp olt float %26, 0x3FE5555560000000\l  %28 = zext i1 %27 to i32\l  %29 = tail call float @llvm.amdgcn.ldexp.f32(float %26, i32 %28)\l  %30 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %25)\l  %31 = sub nsw i32 %30, %28\l  %32 = fadd float %29, -1.000000e+00\l  %33 = fadd float %29, 1.000000e+00\l  %34 = fadd float %33, -1.000000e+00\l  %35 = fsub float %29, %34\l  %36 = tail call float @llvm.amdgcn.rcp.f32(float %33)\l  %37 = fmul float %32, %36\l  %38 = fmul float %33, %37\l  %39 = fneg float %38\l  %40 = tail call float @llvm.fma.f32(float %37, float %33, float %39)\l  %41 = tail call float @llvm.fma.f32(float %37, float %35, float %40)\l  %42 = fadd float %38, %41\l  %43 = fsub float %42, %38\l  %44 = fsub float %41, %43\l  %45 = fsub float %32, %42\l  %46 = fsub float %32, %45\l  %47 = fsub float %46, %42\l  %48 = fsub float %47, %44\l  %49 = fadd float %45, %48\l  %50 = fmul float %36, %49\l  %51 = fadd float %37, %50\l  %52 = fsub float %51, %37\l  %53 = fsub float %50, %52\l  %54 = fmul float %51, %51\l  %55 = fneg float %54\l  %56 = tail call float @llvm.fma.f32(float %51, float %51, float %55)\l  %57 = fmul float %53, 2.000000e+00\l  %58 = tail call float @llvm.fma.f32(float %51, float %57, float %56)\l  %59 = fadd float %54, %58\l  %60 = fsub float %59, %54\l  %61 = fsub float %58, %60\l  %62 = tail call float @llvm.fmuladd.f32(float %59, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %63 = tail call float @llvm.fmuladd.f32(float %59, float %62, float\l... 0x3FD999BDE0000000)\l  %64 = sitofp i32 %31 to float\l  %65 = fmul float %64, 0x3FE62E4300000000\l  %66 = fneg float %65\l  %67 = tail call float @llvm.fma.f32(float %64, float 0x3FE62E4300000000,\l... float %66)\l  %68 = tail call float @llvm.fma.f32(float %64, float 0xBE205C6100000000,\l... float %67)\l  %69 = fadd float %65, %68\l  %70 = fsub float %69, %65\l  %71 = fsub float %68, %70\l  %72 = tail call float @llvm.amdgcn.ldexp.f32(float %51, i32 1)\l  %73 = fmul float %51, %59\l  %74 = fneg float %73\l  %75 = tail call float @llvm.fma.f32(float %59, float %51, float %74)\l  %76 = tail call float @llvm.fma.f32(float %59, float %53, float %75)\l  %77 = tail call float @llvm.fma.f32(float %61, float %51, float %76)\l  %78 = fadd float %73, %77\l  %79 = fsub float %78, %73\l  %80 = fsub float %77, %79\l  %81 = fmul float %59, %63\l  %82 = fneg float %81\l  %83 = tail call float @llvm.fma.f32(float %59, float %63, float %82)\l  %84 = tail call float @llvm.fma.f32(float %61, float %63, float %83)\l  %85 = fadd float %81, %84\l  %86 = fsub float %85, %81\l  %87 = fsub float %84, %86\l  %88 = fadd float %85, 0x3FE5555540000000\l  %89 = fadd float %88, 0xBFE5555540000000\l  %90 = fsub float %85, %89\l  %91 = fadd float %87, 0x3E2E720200000000\l  %92 = fadd float %91, %90\l  %93 = fadd float %88, %92\l  %94 = fsub float %93, %88\l  %95 = fsub float %92, %94\l  %96 = fmul float %78, %93\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %78, float %93, float %97)\l  %99 = tail call float @llvm.fma.f32(float %78, float %95, float %98)\l  %100 = tail call float @llvm.fma.f32(float %80, float %93, float %99)\l  %101 = tail call float @llvm.amdgcn.ldexp.f32(float %53, i32 1)\l  %102 = fadd float %96, %100\l  %103 = fsub float %102, %96\l  %104 = fsub float %100, %103\l  %105 = fadd float %72, %102\l  %106 = fsub float %105, %72\l  %107 = fsub float %102, %106\l  %108 = fadd float %101, %104\l  %109 = fadd float %108, %107\l  %110 = fadd float %105, %109\l  %111 = fsub float %110, %105\l  %112 = fsub float %109, %111\l  %113 = fadd float %69, %110\l  %114 = fsub float %113, %69\l  %115 = fsub float %113, %114\l  %116 = fsub float %69, %115\l  %117 = fsub float %110, %114\l  %118 = fadd float %117, %116\l  %119 = fadd float %71, %112\l  %120 = fsub float %119, %71\l  %121 = fsub float %119, %120\l  %122 = fsub float %71, %121\l  %123 = fsub float %112, %120\l  %124 = fadd float %123, %122\l  %125 = fadd float %119, %118\l  %126 = fadd float %113, %125\l  %127 = fsub float %126, %113\l  %128 = fsub float %125, %127\l  %129 = fadd float %124, %128\l  %130 = fadd float %126, %129\l  %131 = fsub float %130, %126\l  %132 = fsub float %129, %131\l  %133 = fmul float %130, %4\l  %134 = fneg float %133\l  %135 = tail call float @llvm.fma.f32(float %4, float %130, float %134)\l  %136 = tail call float @llvm.fma.f32(float %4, float %132, float %135)\l  %137 = fadd float %133, %136\l  %138 = fsub float %137, %133\l  %139 = fsub float %136, %138\l  %140 = tail call float @llvm.fabs.f32(float %133) #3\l  %141 = fcmp oeq float %140, 0x7FF0000000000000\l  %142 = select i1 %141, float %133, float %137\l  %143 = tail call float @llvm.fabs.f32(float %142) #3\l  %144 = fcmp oeq float %143, 0x7FF0000000000000\l  %145 = select i1 %144, float 0.000000e+00, float %139\l  %146 = fcmp oeq float %142, 0x40562E4300000000\l  %147 = select i1 %146, float 0x3EE0000000000000, float 0.000000e+00\l  %148 = fsub float %142, %147\l  %149 = fadd float %147, %145\l  %150 = fmul float %148, 0x3FF7154760000000\l  %151 = tail call float @llvm.rint.f32(float %150)\l  %152 = fcmp ogt float %148, 0x40562E4300000000\l  %153 = fcmp olt float %148, 0xC059D1DA00000000\l  %154 = fneg float %150\l  %155 = tail call float @llvm.fma.f32(float %148, float 0x3FF7154760000000,\l... float %154)\l  %156 = tail call float @llvm.fma.f32(float %148, float 0x3E54AE0BE0000000,\l... float %155)\l  %157 = fsub float %150, %151\l  %158 = fadd float %156, %157\l  %159 = tail call float @llvm.exp2.f32(float %158)\l  %160 = fptosi float %151 to i32\l  %161 = tail call float @llvm.amdgcn.ldexp.f32(float %159, i32 %160)\l  %162 = select i1 %153, float 0.000000e+00, float %161\l  %163 = select i1 %152, float 0x7FF0000000000000, float %162\l  %164 = tail call float @llvm.fma.f32(float %163, float %149, float %163)\l  %165 = tail call float @llvm.fabs.f32(float %163) #3\l  %166 = fcmp oeq float %165, 0x7FF0000000000000\l  %167 = select i1 %166, float %163, float %164\l  %168 = tail call float @llvm.fabs.f32(float %4)\l  %169 = tail call float @llvm.trunc.f32(float %168)\l  %170 = fcmp oeq float %168, %169\l  %171 = zext i1 %170 to i32\l  %172 = fmul float %169, 5.000000e-01\l  %173 = tail call float @llvm.amdgcn.fract.f32(float %172)\l  %174 = tail call i1 @llvm.amdgcn.class.f32(float %172, i32 516)\l  %175 = select i1 %174, float 0.000000e+00, float %173\l  %176 = fcmp oeq float %175, 0.000000e+00\l  %177 = and i1 %170, %176\l  %178 = zext i1 %177 to i32\l  %179 = add nuw nsw i32 %178, %171\l  %180 = icmp eq i32 %179, 1\l  %181 = fcmp olt float %24, 0.000000e+00\l  %182 = and i1 %180, %181\l  %183 = select i1 %182, float -0.000000e+00, float 0.000000e+00\l  %184 = tail call float @llvm.copysign.f32(float %167, float %183)\l  %185 = fcmp uge float %24, 0.000000e+00\l  %186 = icmp ne i32 %179, 0\l  %187 = select i1 %185, i1 true, i1 %186\l  %188 = select i1 %187, float %184, float 0x7FF8000000000000\l  %189 = fcmp oeq float %168, 0x7FF0000000000000\l  br i1 %189, label %190, label %199\l|{<s0>T|<s1>F}}"];
	Node0x5c388c0:s0 -> Node0x5c42d70;
	Node0x5c388c0:s1 -> Node0x5c42e00;
	Node0x5c42d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%190:\l190:                                              \l  %191 = fcmp oeq float %25, 1.000000e+00\l  %192 = fadd float %25, -1.000000e+00\l  %193 = bitcast float %4 to i32\l  %194 = bitcast float %192 to i32\l  %195 = xor i32 %194, %193\l  %196 = icmp sgt i32 %195, -1\l  %197 = select i1 %196, float 0x7FF0000000000000, float 0.000000e+00\l  %198 = select i1 %191, float %25, float %197\l  br label %199\l}"];
	Node0x5c42d70 -> Node0x5c42e00;
	Node0x5c42e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%199:\l199:                                              \l  %200 = phi float [ %188, %19 ], [ %198, %190 ]\l  %201 = fcmp oeq float %25, 0x7FF0000000000000\l  %202 = fcmp oeq float %24, 0.000000e+00\l  %203 = or i1 %202, %201\l  %204 = fcmp olt float %4, 0.000000e+00\l  %205 = xor i1 %204, %202\l  %206 = select i1 %205, float 0.000000e+00, float 0x7FF0000000000000\l  %207 = select i1 %180, float %24, float 0.000000e+00\l  %208 = tail call float @llvm.copysign.f32(float %206, float %207)\l  %209 = select i1 %203, float %208, float %200\l  %210 = fcmp uno float %24, %4\l  %211 = select i1 %210, float 0x7FF8000000000000, float %209\l  %212 = fcmp oeq float %24, 1.000000e+00\l  %213 = fcmp oeq float %4, 0.000000e+00\l  %214 = or i1 %213, %212\l  %215 = select i1 %214, float 1.000000e+00, float %211\l  %216 = mul nsw i32 %17, %7\l  %217 = add nsw i32 %216, %6\l  %218 = sext i32 %217 to i64\l  %219 = getelementptr inbounds float, float addrspace(1)* %5, i64 %218\l  store float %215, float addrspace(1)* %219, align 4, !tbaa !7\l  br label %220\l}"];
	Node0x5c42e00 -> Node0x5c38950;
	Node0x5c38950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%220:\l220:                                              \l  ret void\l}"];
}
