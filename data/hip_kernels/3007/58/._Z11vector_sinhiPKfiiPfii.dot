digraph "CFG for '_Z11vector_sinhiPKfiiPfii' function" {
	label="CFG for '_Z11vector_sinhiPKfiiPfii' function";

	Node0x6006800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %148\l|{<s0>T|<s1>F}}"];
	Node0x6006800:s0 -> Node0x6008730;
	Node0x6006800:s1 -> Node0x60087c0;
	Node0x6008730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = fadd float %24, 0xBFE62E4300000000\l  %26 = fsub float %25, %24\l  %27 = fsub float %26, %25\l  %28 = fadd float %24, %27\l  %29 = fadd float %26, 0x3FE62E4300000000\l  %30 = fsub float %28, %29\l  %31 = fadd float %30, 0x3E205C6100000000\l  %32 = fadd float %25, %31\l  %33 = fsub float %32, %25\l  %34 = fsub float %31, %33\l  %35 = fmul float %32, 0x3FF7154760000000\l  %36 = tail call float @llvm.rint.f32(float %35)\l  %37 = tail call float @llvm.fmuladd.f32(float %36, float 0xBFE62E4000000000,\l... float %32)\l  %38 = fadd float %34, %37\l  %39 = fsub float %38, %37\l  %40 = fsub float %34, %39\l  %41 = fmul float %36, 0x3EB7F78000000000\l  %42 = fsub float %38, %41\l  %43 = fsub float %38, %42\l  %44 = fsub float %43, %41\l  %45 = fadd float %40, %44\l  %46 = fadd float %42, %45\l  %47 = fsub float %46, %42\l  %48 = fsub float %45, %47\l  %49 = fmul float %36, 0x3DD473DE60000000\l  %50 = fsub float %46, %49\l  %51 = fsub float %46, %50\l  %52 = fsub float %51, %49\l  %53 = fadd float %48, %52\l  %54 = fadd float %50, %53\l  %55 = fsub float %54, %50\l  %56 = fsub float %53, %55\l  %57 = tail call float @llvm.fmuladd.f32(float %54, float 0x3F56850E40000000,\l... float 0x3F8123BCC0000000)\l  %58 = tail call float @llvm.fmuladd.f32(float %54, float %57, float\l... 0x3FA555B980000000)\l  %59 = tail call float @llvm.fmuladd.f32(float %54, float %58, float\l... 0x3FC55548E0000000)\l  %60 = tail call float @llvm.fmuladd.f32(float %54, float %59, float\l... 0x3FDFFFFF80000000)\l  %61 = fmul float %54, %54\l  %62 = fneg float %61\l  %63 = tail call float @llvm.fma.f32(float %54, float %54, float %62)\l  %64 = fmul float %56, 2.000000e+00\l  %65 = tail call float @llvm.fma.f32(float %54, float %64, float %63)\l  %66 = fadd float %61, %65\l  %67 = fsub float %66, %61\l  %68 = fsub float %65, %67\l  %69 = fmul float %60, %66\l  %70 = fneg float %69\l  %71 = tail call float @llvm.fma.f32(float %66, float %60, float %70)\l  %72 = tail call float @llvm.fma.f32(float %68, float %60, float %71)\l  %73 = fadd float %69, %72\l  %74 = fsub float %73, %69\l  %75 = fsub float %72, %74\l  %76 = fadd float %54, %73\l  %77 = fsub float %76, %54\l  %78 = fsub float %73, %77\l  %79 = fadd float %56, %75\l  %80 = fadd float %79, %78\l  %81 = fadd float %76, %80\l  %82 = fsub float %81, %76\l  %83 = fsub float %80, %82\l  %84 = fadd float %81, 1.000000e+00\l  %85 = fadd float %84, -1.000000e+00\l  %86 = fsub float %81, %85\l  %87 = fadd float %83, %86\l  %88 = fadd float %84, %87\l  %89 = fsub float %88, %84\l  %90 = fsub float %87, %89\l  %91 = fptosi float %36 to i32\l  %92 = tail call float @llvm.amdgcn.ldexp.f32(float %88, i32 %91)\l  %93 = tail call float @llvm.amdgcn.ldexp.f32(float %90, i32 %91)\l  %94 = tail call float @llvm.amdgcn.rcp.f32(float %92)\l  %95 = fmul float %92, %94\l  %96 = fneg float %95\l  %97 = tail call float @llvm.fma.f32(float %94, float %92, float %96)\l  %98 = tail call float @llvm.fma.f32(float %94, float %93, float %97)\l  %99 = fadd float %95, %98\l  %100 = fsub float %99, %95\l  %101 = fsub float %98, %100\l  %102 = fsub float 1.000000e+00, %99\l  %103 = fsub float 1.000000e+00, %102\l  %104 = fsub float %103, %99\l  %105 = fsub float %104, %101\l  %106 = fadd float %102, %105\l  %107 = fmul float %94, %106\l  %108 = fmul float %92, %107\l  %109 = fneg float %108\l  %110 = tail call float @llvm.fma.f32(float %107, float %92, float %109)\l  %111 = tail call float @llvm.fma.f32(float %107, float %93, float %110)\l  %112 = fsub float %106, %102\l  %113 = fsub float %105, %112\l  %114 = fadd float %108, %111\l  %115 = fsub float %114, %108\l  %116 = fsub float %111, %115\l  %117 = fsub float %106, %114\l  %118 = fsub float %106, %117\l  %119 = fsub float %118, %114\l  %120 = fadd float %113, %119\l  %121 = fsub float %120, %116\l  %122 = fadd float %117, %121\l  %123 = fmul float %94, %122\l  %124 = fadd float %94, %107\l  %125 = fsub float %124, %94\l  %126 = fsub float %107, %125\l  %127 = fadd float %126, %123\l  %128 = fadd float %124, %127\l  %129 = fsub float %128, %124\l  %130 = fsub float %127, %129\l  %131 = tail call float @llvm.amdgcn.ldexp.f32(float %128, i32 -2)\l  %132 = tail call float @llvm.amdgcn.ldexp.f32(float %130, i32 -2)\l  %133 = fsub float %92, %131\l  %134 = fsub float %92, %133\l  %135 = fsub float %134, %131\l  %136 = fadd float %93, %135\l  %137 = fsub float %136, %132\l  %138 = fadd float %133, %137\l  %139 = fcmp ogt float %24, 0x40565A9F80000000\l  %140 = select i1 %139, float 0x7FF0000000000000, float %138\l  %141 = fcmp olt float %24, 0x3F30000000000000\l  %142 = select i1 %141, float %24, float %140\l  %143 = tail call float @llvm.copysign.f32(float %142, float %23)\l  %144 = mul nsw i32 %16, %6\l  %145 = add nsw i32 %144, %5\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %4, i64 %146\l  store float %143, float addrspace(1)* %147, align 4, !tbaa !7\l  br label %148\l}"];
	Node0x6008730 -> Node0x60087c0;
	Node0x60087c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  ret void\l}"];
}
