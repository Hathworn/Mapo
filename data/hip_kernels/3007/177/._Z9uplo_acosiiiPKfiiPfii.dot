digraph "CFG for '_Z9uplo_acosiiiPKfiiPfii' function" {
	label="CFG for '_Z9uplo_acosiiiPKfiiPfii' function";

	Node0x4ef5170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4ef5170:s0 -> Node0x4ef9730;
	Node0x4ef5170:s1 -> Node0x4ef97c0;
	Node0x4ef9730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4ef9730:s0 -> Node0x4ef77b0;
	Node0x4ef9730:s1 -> Node0x4ef97c0;
	Node0x4ef77b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = tail call float @llvm.fmuladd.f32(float %44, float -5.000000e-01,\l... float 5.000000e-01)\l  %46 = fmul float %43, %43\l  %47 = fcmp ogt float %44, 5.000000e-01\l  %48 = select i1 %47, float %45, float %46\l  %49 = tail call float @llvm.fmuladd.f32(float %48, float 0x3FA38434E0000000,\l... float 0x3F8BF8BB40000000)\l  %50 = tail call float @llvm.fmuladd.f32(float %48, float %49, float\l... 0x3FA0698780000000)\l  %51 = tail call float @llvm.fmuladd.f32(float %48, float %50, float\l... 0x3FA6C83620000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %48, float %51, float\l... 0x3FB3337900000000)\l  %53 = tail call float @llvm.fmuladd.f32(float %48, float %52, float\l... 0x3FC5555580000000)\l  %54 = fmul float %48, %53\l  %55 = tail call float @llvm.sqrt.f32(float %48)\l  %56 = tail call float @llvm.fmuladd.f32(float %55, float %54, float %55)\l  %57 = fmul float %56, 2.000000e+00\l  %58 = fsub float 0x400921FB60000000, %57\l  %59 = fcmp olt float %43, 0.000000e+00\l  %60 = select i1 %59, float %58, float %57\l  %61 = tail call float @llvm.fmuladd.f32(float %43, float %54, float %43)\l  %62 = fsub float 0x3FF921FB60000000, %61\l  %63 = select i1 %47, float %60, float %62\l  %64 = add nsw i32 %18, %7\l  %65 = mul nsw i32 %26, %8\l  %66 = add nsw i32 %64, %65\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %6, i64 %67\l  store float %63, float addrspace(1)* %68, align 4, !tbaa !7\l  br label %69\l}"];
	Node0x4ef77b0 -> Node0x4ef97c0;
	Node0x4ef97c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
