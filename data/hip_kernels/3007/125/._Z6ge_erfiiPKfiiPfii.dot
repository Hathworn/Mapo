digraph "CFG for '_Z6ge_erfiiPKfiiPfii' function" {
	label="CFG for '_Z6ge_erfiiPKfiiPfii' function";

	Node0x4a64290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %78\l|{<s0>T|<s1>F}}"];
	Node0x4a64290:s0 -> Node0x4a67cd0;
	Node0x4a64290:s1 -> Node0x4a67d60;
	Node0x4a67cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = fcmp olt float %36, 1.000000e+00\l  br i1 %37, label %38, label %46\l|{<s0>T|<s1>F}}"];
	Node0x4a67cd0:s0 -> Node0x4a69120;
	Node0x4a67cd0:s1 -> Node0x4a691b0;
	Node0x4a69120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = fmul float %35, %35\l  %40 = tail call float @llvm.fmuladd.f32(float %39, float 0xBF4268BC20000000,\l... float 0x3F74208280000000)\l  %41 = tail call float @llvm.fmuladd.f32(float %39, float %40, float\l... 0xBF9B593700000000)\l  %42 = tail call float @llvm.fmuladd.f32(float %39, float %41, float\l... 0x3FBCE077C0000000)\l  %43 = tail call float @llvm.fmuladd.f32(float %39, float %42, float\l... 0xBFD8126600000000)\l  %44 = tail call float @llvm.fmuladd.f32(float %39, float %43, float\l... 0x3FC06EBA00000000)\l  %45 = tail call float @llvm.fma.f32(float %36, float %44, float %36)\l  br label %70\l}"];
	Node0x4a69120 -> Node0x4a69e60;
	Node0x4a691b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%46:\l46:                                               \l  %47 = tail call float @llvm.fmuladd.f32(float %36, float 0x3EF1D31560000000,\l... float 0xBF38D12900000000)\l  %48 = tail call float @llvm.fmuladd.f32(float %36, float %47, float\l... 0x3F6F9A6D20000000)\l  %49 = tail call float @llvm.fmuladd.f32(float %36, float %48, float\l... 0xBF98C31640000000)\l  %50 = tail call float @llvm.fmuladd.f32(float %36, float %49, float\l... 0x3FBB4E9C80000000)\l  %51 = tail call float @llvm.fmuladd.f32(float %36, float %50, float\l... 0x3FE4515FA0000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %36, float %51, float\l... 0x3FC078E500000000)\l  %53 = tail call float @llvm.fma.f32(float %36, float %52, float %36)\l  %54 = fneg float %53\l  %55 = fmul float %53, 0xBFF7154760000000\l  %56 = tail call float @llvm.rint.f32(float %55)\l  %57 = fcmp olt float %53, 0xC0562E4300000000\l  %58 = fcmp ogt float %53, 0x4059D1DA00000000\l  %59 = fneg float %55\l  %60 = tail call float @llvm.fma.f32(float %54, float 0x3FF7154760000000,\l... float %59)\l  %61 = tail call float @llvm.fma.f32(float %54, float 0x3E54AE0BE0000000,\l... float %60)\l  %62 = fsub float %55, %56\l  %63 = fadd float %61, %62\l  %64 = tail call float @llvm.exp2.f32(float %63)\l  %65 = fptosi float %56 to i32\l  %66 = tail call float @llvm.amdgcn.ldexp.f32(float %64, i32 %65)\l  %67 = fsub float 1.000000e+00, %66\l  %68 = select i1 %58, float 1.000000e+00, float %67\l  %69 = select i1 %57, float 0xFFF0000000000000, float %68\l  br label %70\l}"];
	Node0x4a691b0 -> Node0x4a69e60;
	Node0x4a69e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%70:\l70:                                               \l  %71 = phi float [ %45, %38 ], [ %69, %46 ]\l  %72 = tail call float @llvm.copysign.f32(float %71, float %35)\l  %73 = add nsw i32 %17, %6\l  %74 = mul nsw i32 %25, %7\l  %75 = add nsw i32 %73, %74\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %5, i64 %76\l  store float %72, float addrspace(1)* %77, align 4, !tbaa !7\l  br label %78\l}"];
	Node0x4a69e60 -> Node0x4a67d60;
	Node0x4a67d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  ret void\l}"];
}
