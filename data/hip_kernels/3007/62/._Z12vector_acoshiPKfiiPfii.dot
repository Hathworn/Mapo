digraph "CFG for '_Z12vector_acoshiPKfiiPfii' function" {
	label="CFG for '_Z12vector_acoshiPKfiiPfii' function";

	Node0x5abfc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %180\l|{<s0>T|<s1>F}}"];
	Node0x5abfc50:s0 -> Node0x5ac1b80;
	Node0x5abfc50:s1 -> Node0x5ac1c10;
	Node0x5ac1b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fcmp oge float %23, 0x43F0000000000000\l  %25 = select i1 %24, float 0x3BF0000000000000, float 1.000000e+00\l  %26 = fmul float %23, %25\l  %27 = fmul float %26, %26\l  %28 = fneg float %27\l  %29 = tail call float @llvm.fma.f32(float %26, float %26, float %28)\l  %30 = select i1 %24, float 0x37F0000000000000, float 1.000000e+00\l  %31 = fsub float %27, %30\l  %32 = fsub float %31, %27\l  %33 = fsub float %31, %32\l  %34 = fsub float %27, %33\l  %35 = fadd float %30, %32\l  %36 = fsub float %34, %35\l  %37 = fadd float %29, %36\l  %38 = fadd float %31, %37\l  %39 = tail call float @llvm.sqrt.f32(float %38)\l  %40 = fmul float %39, %39\l  %41 = fneg float %40\l  %42 = tail call float @llvm.fma.f32(float %39, float %39, float %41)\l  %43 = fsub float %38, %31\l  %44 = fsub float %37, %43\l  %45 = fsub float %38, %40\l  %46 = fsub float %38, %45\l  %47 = fsub float %46, %40\l  %48 = fadd float %44, %47\l  %49 = fsub float %48, %42\l  %50 = fadd float %45, %49\l  %51 = fmul float %39, 2.000000e+00\l  %52 = tail call float @llvm.amdgcn.rcp.f32(float %51)\l  %53 = fmul float %52, %50\l  %54 = fcmp oeq float %38, 0.000000e+00\l  %55 = select i1 %54, float 0.000000e+00, float %53\l  %56 = fadd float %39, %55\l  %57 = fsub float %56, %39\l  %58 = fsub float %55, %57\l  %59 = fadd float %26, %56\l  %60 = fsub float %59, %26\l  %61 = fsub float %59, %60\l  %62 = fsub float %26, %61\l  %63 = fsub float %56, %60\l  %64 = fadd float %63, %62\l  %65 = fadd float %58, %64\l  %66 = fadd float %59, %65\l  %67 = fsub float %66, %59\l  %68 = fsub float %65, %67\l  %69 = select i1 %24, i32 64, i32 0\l  %70 = tail call float @llvm.amdgcn.frexp.mant.f32(float %66)\l  %71 = fcmp olt float %70, 0x3FE5555560000000\l  %72 = sext i1 %71 to i32\l  %73 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %66)\l  %74 = add i32 %73, %72\l  %75 = sub nsw i32 0, %74\l  %76 = tail call float @llvm.amdgcn.ldexp.f32(float %66, i32 %75)\l  %77 = tail call float @llvm.amdgcn.ldexp.f32(float %68, i32 %75)\l  %78 = fadd float %76, -1.000000e+00\l  %79 = fadd float %78, 1.000000e+00\l  %80 = fsub float %76, %79\l  %81 = fadd float %77, %80\l  %82 = fadd float %78, %81\l  %83 = fsub float %82, %78\l  %84 = fsub float %81, %83\l  %85 = fadd float %76, 1.000000e+00\l  %86 = fadd float %85, -1.000000e+00\l  %87 = fsub float %76, %86\l  %88 = fadd float %77, %87\l  %89 = fadd float %85, %88\l  %90 = fsub float %89, %85\l  %91 = fsub float %88, %90\l  %92 = tail call float @llvm.amdgcn.rcp.f32(float %89)\l  %93 = fmul float %82, %92\l  %94 = fmul float %89, %93\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %93, float %89, float %95)\l  %97 = tail call float @llvm.fma.f32(float %93, float %91, float %96)\l  %98 = fadd float %94, %97\l  %99 = fsub float %98, %94\l  %100 = fsub float %97, %99\l  %101 = fsub float %82, %98\l  %102 = fsub float %82, %101\l  %103 = fsub float %102, %98\l  %104 = fadd float %84, %103\l  %105 = fsub float %104, %100\l  %106 = fadd float %101, %105\l  %107 = fmul float %92, %106\l  %108 = fmul float %89, %107\l  %109 = fneg float %108\l  %110 = tail call float @llvm.fma.f32(float %107, float %89, float %109)\l  %111 = tail call float @llvm.fma.f32(float %107, float %91, float %110)\l  %112 = fsub float %106, %101\l  %113 = fsub float %105, %112\l  %114 = fadd float %108, %111\l  %115 = fsub float %114, %108\l  %116 = fsub float %111, %115\l  %117 = fsub float %106, %114\l  %118 = fsub float %106, %117\l  %119 = fsub float %118, %114\l  %120 = fadd float %113, %119\l  %121 = fsub float %120, %116\l  %122 = fadd float %117, %121\l  %123 = fmul float %92, %122\l  %124 = fadd float %93, %107\l  %125 = fsub float %124, %93\l  %126 = fsub float %107, %125\l  %127 = fadd float %126, %123\l  %128 = fadd float %124, %127\l  %129 = fmul float %128, %128\l  %130 = tail call float @llvm.fmuladd.f32(float %129, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %131 = tail call float @llvm.fmuladd.f32(float %129, float %130, float\l... 0x3FE5555B40000000)\l  %132 = add nsw i32 %74, %69\l  %133 = sitofp i32 %132 to float\l  %134 = fmul float %133, 0x3FE62E4300000000\l  %135 = fneg float %134\l  %136 = tail call float @llvm.fma.f32(float %133, float 0x3FE62E4300000000,\l... float %135)\l  %137 = tail call float @llvm.fma.f32(float %133, float 0xBE205C6100000000,\l... float %136)\l  %138 = fsub float %128, %124\l  %139 = fsub float %127, %138\l  %140 = fadd float %134, %137\l  %141 = fsub float %140, %134\l  %142 = fsub float %137, %141\l  %143 = tail call float @llvm.amdgcn.ldexp.f32(float %128, i32 1)\l  %144 = tail call float @llvm.amdgcn.ldexp.f32(float %139, i32 1)\l  %145 = fmul float %128, %129\l  %146 = fmul float %145, %131\l  %147 = fadd float %143, %146\l  %148 = fsub float %147, %143\l  %149 = fsub float %146, %148\l  %150 = fadd float %144, %149\l  %151 = fadd float %147, %150\l  %152 = fsub float %151, %147\l  %153 = fsub float %150, %152\l  %154 = fadd float %140, %151\l  %155 = fsub float %154, %140\l  %156 = fsub float %154, %155\l  %157 = fsub float %140, %156\l  %158 = fsub float %151, %155\l  %159 = fadd float %158, %157\l  %160 = fadd float %142, %153\l  %161 = fsub float %160, %142\l  %162 = fsub float %160, %161\l  %163 = fsub float %142, %162\l  %164 = fsub float %153, %161\l  %165 = fadd float %164, %163\l  %166 = fadd float %160, %159\l  %167 = fadd float %154, %166\l  %168 = fsub float %167, %154\l  %169 = fsub float %166, %168\l  %170 = fadd float %165, %169\l  %171 = fadd float %167, %170\l  %172 = tail call i1 @llvm.amdgcn.class.f32(float %23, i32 512)\l  %173 = select i1 %172, float %23, float %171\l  %174 = fcmp olt float %23, 1.000000e+00\l  %175 = select i1 %174, float 0x7FF8000000000000, float %173\l  %176 = mul nsw i32 %16, %6\l  %177 = add nsw i32 %176, %5\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds float, float addrspace(1)* %4, i64 %178\l  store float %175, float addrspace(1)* %179, align 4, !tbaa !7\l  br label %180\l}"];
	Node0x5ac1b80 -> Node0x5ac1c10;
	Node0x5ac1c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%180:\l180:                                              \l  ret void\l}"];
}
