digraph "CFG for '_Z12uplo_sigmoidiiiPKfiiPfii' function" {
	label="CFG for '_Z12uplo_sigmoidiiiPKfiiPfii' function";

	Node0x505a720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %82\l|{<s0>T|<s1>F}}"];
	Node0x505a720:s0 -> Node0x505ece0;
	Node0x505a720:s1 -> Node0x505ed70;
	Node0x505ece0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %82\l|{<s0>T|<s1>F}}"];
	Node0x505ece0:s0 -> Node0x505cd60;
	Node0x505ece0:s1 -> Node0x505ed70;
	Node0x505cd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract float %43, 5.000000e-01\l  %45 = tail call float @llvm.fabs.f32(float %44)\l  %46 = fcmp olt float %45, 6.250000e-01\l  br i1 %46, label %47, label %55\l|{<s0>T|<s1>F}}"];
	Node0x505cd60:s0 -> Node0x50606b0;
	Node0x505cd60:s1 -> Node0x5060740;
	Node0x50606b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%47:\l47:                                               \l  %48 = fmul float %44, %44\l  %49 = tail call float @llvm.fmuladd.f32(float %48, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %50 = tail call float @llvm.fmuladd.f32(float %48, float %49, float\l... 0xBFAB8389C0000000)\l  %51 = tail call float @llvm.fmuladd.f32(float %48, float %50, float\l... 0x3FC1107040000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %48, float %51, float\l... 0xBFD5555320000000)\l  %53 = fmul float %45, %52\l  %54 = tail call float @llvm.fmuladd.f32(float %48, float %53, float %45)\l  br label %72\l}"];
	Node0x50606b0 -> Node0x50612a0;
	Node0x5060740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%55:\l55:                                               \l  %56 = fmul float %45, 2.000000e+00\l  %57 = fmul float %56, 0x3FF7154760000000\l  %58 = tail call float @llvm.rint.f32(float %57)\l  %59 = fcmp ogt float %56, 0x40562E4300000000\l  %60 = fneg float %57\l  %61 = tail call float @llvm.fma.f32(float %56, float 0x3FF7154760000000,\l... float %60)\l  %62 = tail call float @llvm.fma.f32(float %56, float 0x3E54AE0BE0000000,\l... float %61)\l  %63 = fsub float %57, %58\l  %64 = fadd float %62, %63\l  %65 = tail call float @llvm.exp2.f32(float %64)\l  %66 = fptosi float %58 to i32\l  %67 = tail call float @llvm.amdgcn.ldexp.f32(float %65, i32 %66)\l  %68 = fadd float %67, 1.000000e+00\l  %69 = select i1 %59, float 0x7FF0000000000000, float %68\l  %70 = tail call float @llvm.amdgcn.rcp.f32(float %69)\l  %71 = tail call float @llvm.fmuladd.f32(float %70, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %72\l}"];
	Node0x5060740 -> Node0x50612a0;
	Node0x50612a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%72:\l72:                                               \l  %73 = phi float [ %54, %47 ], [ %71, %55 ]\l  %74 = tail call float @llvm.copysign.f32(float %73, float %44)\l  %75 = fmul contract float %74, 5.000000e-01\l  %76 = fadd contract float %75, 5.000000e-01\l  %77 = add nsw i32 %18, %7\l  %78 = mul nsw i32 %26, %8\l  %79 = add nsw i32 %77, %78\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %6, i64 %80\l  store float %76, float addrspace(1)* %81, align 4, !tbaa !7\l  br label %82\l}"];
	Node0x50612a0 -> Node0x505ed70;
	Node0x505ed70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  ret void\l}"];
}
