digraph "CFG for '_Z9uplo_erfciiiPKfiiPfii' function" {
	label="CFG for '_Z9uplo_erfciiiPKfiiPfii' function";

	Node0x570da50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %102\l|{<s0>T|<s1>F}}"];
	Node0x570da50:s0 -> Node0x5712010;
	Node0x570da50:s1 -> Node0x57120a0;
	Node0x5712010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5712010:s0 -> Node0x5710090;
	Node0x5712010:s1 -> Node0x57120a0;
	Node0x5710090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fneg float %43\l  %46 = fmul float %43, %45\l  %47 = fneg float %46\l  %48 = tail call float @llvm.fma.f32(float %45, float %43, float %47)\l  %49 = fmul float %46, 0x3FF7154760000000\l  %50 = tail call float @llvm.rint.f32(float %49)\l  %51 = fcmp ogt float %46, 0x40562E4300000000\l  %52 = fcmp olt float %46, 0xC059D1DA00000000\l  %53 = fneg float %49\l  %54 = tail call float @llvm.fma.f32(float %46, float 0x3FF7154760000000,\l... float %53)\l  %55 = tail call float @llvm.fma.f32(float %46, float 0x3E54AE0BE0000000,\l... float %54)\l  %56 = fsub float %49, %50\l  %57 = fadd float %55, %56\l  %58 = tail call float @llvm.exp2.f32(float %57)\l  %59 = fptosi float %50 to i32\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 %59)\l  %61 = select i1 %52, float 0.000000e+00, float %60\l  %62 = select i1 %51, float 0x7FF0000000000000, float %61\l  %63 = tail call float @llvm.fma.f32(float %62, float %48, float %62)\l  %64 = fadd float %44, -2.000000e+00\l  %65 = fadd float %44, 2.000000e+00\l  %66 = tail call float @llvm.amdgcn.rcp.f32(float %65)\l  %67 = fmul float %64, %66\l  %68 = fneg float %67\l  %69 = fadd float %67, 1.000000e+00\l  %70 = tail call float @llvm.fma.f32(float %69, float -2.000000e+00, float\l... %44)\l  %71 = tail call float @llvm.fma.f32(float %68, float %44, float %70)\l  %72 = tail call float @llvm.fma.f32(float %66, float %71, float %67)\l  %73 = tail call float @llvm.fmuladd.f32(float %72, float 0xBF3ADF1880000000,\l... float 0xBF545AEA60000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %72, float %73, float\l... 0x3F55A5F680000000)\l  %75 = tail call float @llvm.fmuladd.f32(float %72, float %74, float\l... 0x3F81B44CE0000000)\l  %76 = tail call float @llvm.fmuladd.f32(float %72, float %75, float\l... 0xBF8082B620000000)\l  %77 = tail call float @llvm.fmuladd.f32(float %72, float %76, float\l... 0xBFABC14300000000)\l  %78 = tail call float @llvm.fmuladd.f32(float %72, float %77, float\l... 0x3FC4FFC540000000)\l  %79 = tail call float @llvm.fmuladd.f32(float %72, float %78, float\l... 0xBFC5407FA0000000)\l  %80 = tail call float @llvm.fmuladd.f32(float %72, float %79, float\l... 0xBFB7BF6160000000)\l  %81 = tail call float @llvm.fmuladd.f32(float %72, float %80, float\l... 0x3FD1BA0380000000)\l  %82 = fadd float %44, %44\l  %83 = fadd float %82, 1.000000e+00\l  %84 = tail call float @llvm.amdgcn.rcp.f32(float %83)\l  %85 = tail call float @llvm.fma.f32(float %81, float %84, float %84)\l  %86 = fneg float %85\l  %87 = tail call float @llvm.fma.f32(float %86, float %82, float 1.000000e+00)\l  %88 = fsub float %81, %85\l  %89 = fadd float %87, %88\l  %90 = tail call float @llvm.fma.f32(float %84, float %89, float %85)\l  %91 = fmul float %63, %90\l  %92 = fcmp ogt float %44, 0x40241BBF80000000\l  %93 = select i1 %92, float 0.000000e+00, float %91\l  %94 = fsub float 2.000000e+00, %93\l  %95 = fcmp olt float %43, 0.000000e+00\l  %96 = select i1 %95, float %94, float %93\l  %97 = add nsw i32 %18, %7\l  %98 = mul nsw i32 %26, %8\l  %99 = add nsw i32 %97, %98\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %6, i64 %100\l  store float %96, float addrspace(1)* %101, align 4, !tbaa !7\l  br label %102\l}"];
	Node0x5710090 -> Node0x57120a0;
	Node0x57120a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  ret void\l}"];
}
