digraph "CFG for '_Z8uplo_eluiiifPKfiiPfii' function" {
	label="CFG for '_Z8uplo_eluiiifPKfiiPfii' function";

	Node0x47e13f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %0\l  %29 = icmp slt i32 %27, %0\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %76\l|{<s0>T|<s1>F}}"];
	Node0x47e13f0:s0 -> Node0x47e59d0;
	Node0x47e13f0:s1 -> Node0x47e5a60;
	Node0x47e59d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %1, 132\l  %33 = mul nsw i32 %19, %2\l  %34 = mul nsw i32 %27, %2\l  %35 = icmp sgt i32 %33, %34\l  %36 = icmp sge i32 %33, %34\l  %37 = select i1 %32, i1 %35, i1 %36\l  br i1 %37, label %38, label %76\l|{<s0>T|<s1>F}}"];
	Node0x47e59d0:s0 -> Node0x47e39d0;
	Node0x47e59d0:s1 -> Node0x47e5a60;
	Node0x47e39d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%38:\l38:                                               \l  %39 = add nsw i32 %19, %5\l  %40 = mul nsw i32 %27, %6\l  %41 = add nsw i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %4, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fmul float %44, 0x3FF7154760000000\l  %46 = tail call float @llvm.rint.f32(float %45)\l  %47 = fneg float %46\l  %48 = tail call float @llvm.fma.f32(float %47, float 0x3FE62E4300000000,\l... float %44)\l  %49 = tail call float @llvm.fma.f32(float %47, float 0xBE205C6100000000,\l... float %48)\l  %50 = tail call float @llvm.fmuladd.f32(float %49, float 0x3F2A267620000000,\l... float 0x3F56D2E000000000)\l  %51 = tail call float @llvm.fmuladd.f32(float %49, float %50, float\l... 0x3F8110FF20000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %49, float %51, float\l... 0x3FA5555020000000)\l  %53 = tail call float @llvm.fmuladd.f32(float %49, float %52, float\l... 0x3FC5555560000000)\l  %54 = tail call float @llvm.fmuladd.f32(float %49, float %53, float\l... 5.000000e-01)\l  %55 = fmul float %49, %54\l  %56 = tail call float @llvm.fma.f32(float %49, float %55, float %49)\l  %57 = fcmp oeq float %46, 1.280000e+02\l  %58 = fptosi float %46 to i32\l  %59 = select i1 %57, i32 127, i32 %58\l  %60 = tail call float @llvm.amdgcn.ldexp.f32(float 1.000000e+00, i32 %59)\l  %61 = fadd float %60, -1.000000e+00\l  %62 = tail call float @llvm.fma.f32(float %60, float %56, float %61)\l  %63 = fmul float %62, 2.000000e+00\l  %64 = select i1 %57, float %63, float %62\l  %65 = fcmp ogt float %44, 0x40562E42E0000000\l  %66 = select i1 %65, float 0x7FF0000000000000, float %64\l  %67 = fcmp olt float %44, -1.700000e+01\l  %68 = select i1 %67, float -1.000000e+00, float %66\l  %69 = fmul contract float %68, %3\l  %70 = tail call float @llvm.maxnum.f32(float %44, float %69)\l  %71 = add nsw i32 %19, %8\l  %72 = mul nsw i32 %27, %9\l  %73 = add nsw i32 %71, %72\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %7, i64 %74\l  store float %70, float addrspace(1)* %75, align 4, !tbaa !7\l  br label %76\l}"];
	Node0x47e39d0 -> Node0x47e5a60;
	Node0x47e5a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  ret void\l}"];
}
