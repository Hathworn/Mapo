digraph "CFG for '_Z8ge_atanhiiPKfiiPfii' function" {
	label="CFG for '_Z8ge_atanhiiPKfiiPfii' function";

	Node0x46f0d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %176\l|{<s0>T|<s1>F}}"];
	Node0x46f0d60:s0 -> Node0x46f47a0;
	Node0x46f0d60:s1 -> Node0x46f4830;
	Node0x46f47a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = fadd float %36, 1.000000e+00\l  %38 = fsub float 1.000000e+00, %36\l  %39 = fsub float 1.000000e+00, %38\l  %40 = fsub float %39, %36\l  %41 = tail call float @llvm.amdgcn.rcp.f32(float %38)\l  %42 = fmul float %37, %41\l  %43 = fmul float %38, %42\l  %44 = fneg float %43\l  %45 = tail call float @llvm.fma.f32(float %42, float %38, float %44)\l  %46 = tail call float @llvm.fma.f32(float %42, float %40, float %45)\l  %47 = fadd float %37, -1.000000e+00\l  %48 = fsub float %36, %47\l  %49 = fadd float %43, %46\l  %50 = fsub float %49, %43\l  %51 = fsub float %46, %50\l  %52 = fsub float %37, %49\l  %53 = fsub float %37, %52\l  %54 = fsub float %53, %49\l  %55 = fsub float %54, %51\l  %56 = fadd float %48, %55\l  %57 = fadd float %52, %56\l  %58 = fmul float %41, %57\l  %59 = fadd float %42, %58\l  %60 = fsub float %59, %42\l  %61 = fsub float %58, %60\l  %62 = tail call float @llvm.amdgcn.frexp.mant.f32(float %59)\l  %63 = fcmp olt float %62, 0x3FE5555560000000\l  %64 = sext i1 %63 to i32\l  %65 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %59)\l  %66 = add i32 %65, %64\l  %67 = sub nsw i32 0, %66\l  %68 = tail call float @llvm.amdgcn.ldexp.f32(float %59, i32 %67)\l  %69 = tail call float @llvm.amdgcn.ldexp.f32(float %61, i32 %67)\l  %70 = fadd float %68, -1.000000e+00\l  %71 = fadd float %70, 1.000000e+00\l  %72 = fsub float %68, %71\l  %73 = fadd float %69, %72\l  %74 = fadd float %70, %73\l  %75 = fsub float %74, %70\l  %76 = fsub float %73, %75\l  %77 = fadd float %68, 1.000000e+00\l  %78 = fadd float %77, -1.000000e+00\l  %79 = fsub float %68, %78\l  %80 = fadd float %69, %79\l  %81 = fadd float %77, %80\l  %82 = fsub float %81, %77\l  %83 = fsub float %80, %82\l  %84 = tail call float @llvm.amdgcn.rcp.f32(float %81)\l  %85 = fmul float %74, %84\l  %86 = fmul float %81, %85\l  %87 = fneg float %86\l  %88 = tail call float @llvm.fma.f32(float %85, float %81, float %87)\l  %89 = tail call float @llvm.fma.f32(float %85, float %83, float %88)\l  %90 = fadd float %86, %89\l  %91 = fsub float %90, %86\l  %92 = fsub float %89, %91\l  %93 = fsub float %74, %90\l  %94 = fsub float %74, %93\l  %95 = fsub float %94, %90\l  %96 = fadd float %76, %95\l  %97 = fsub float %96, %92\l  %98 = fadd float %93, %97\l  %99 = fmul float %84, %98\l  %100 = fmul float %81, %99\l  %101 = fneg float %100\l  %102 = tail call float @llvm.fma.f32(float %99, float %81, float %101)\l  %103 = tail call float @llvm.fma.f32(float %99, float %83, float %102)\l  %104 = fsub float %98, %93\l  %105 = fsub float %97, %104\l  %106 = fadd float %100, %103\l  %107 = fsub float %106, %100\l  %108 = fsub float %103, %107\l  %109 = fsub float %98, %106\l  %110 = fsub float %98, %109\l  %111 = fsub float %110, %106\l  %112 = fadd float %105, %111\l  %113 = fsub float %112, %108\l  %114 = fadd float %109, %113\l  %115 = fmul float %84, %114\l  %116 = fadd float %85, %99\l  %117 = fsub float %116, %85\l  %118 = fsub float %99, %117\l  %119 = fadd float %118, %115\l  %120 = fadd float %116, %119\l  %121 = fmul float %120, %120\l  %122 = tail call float @llvm.fmuladd.f32(float %121, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %123 = tail call float @llvm.fmuladd.f32(float %121, float %122, float\l... 0x3FE5555B40000000)\l  %124 = sitofp i32 %66 to float\l  %125 = fmul float %124, 0x3FE62E4300000000\l  %126 = fneg float %125\l  %127 = tail call float @llvm.fma.f32(float %124, float 0x3FE62E4300000000,\l... float %126)\l  %128 = tail call float @llvm.fma.f32(float %124, float 0xBE205C6100000000,\l... float %127)\l  %129 = fsub float %120, %116\l  %130 = fsub float %119, %129\l  %131 = fadd float %125, %128\l  %132 = fsub float %131, %125\l  %133 = fsub float %128, %132\l  %134 = tail call float @llvm.amdgcn.ldexp.f32(float %120, i32 1)\l  %135 = tail call float @llvm.amdgcn.ldexp.f32(float %130, i32 1)\l  %136 = fmul float %120, %121\l  %137 = fmul float %136, %123\l  %138 = fadd float %134, %137\l  %139 = fsub float %138, %134\l  %140 = fsub float %137, %139\l  %141 = fadd float %135, %140\l  %142 = fadd float %138, %141\l  %143 = fsub float %142, %138\l  %144 = fsub float %141, %143\l  %145 = fadd float %131, %142\l  %146 = fsub float %145, %131\l  %147 = fsub float %145, %146\l  %148 = fsub float %131, %147\l  %149 = fsub float %142, %146\l  %150 = fadd float %149, %148\l  %151 = fadd float %133, %144\l  %152 = fsub float %151, %133\l  %153 = fsub float %151, %152\l  %154 = fsub float %133, %153\l  %155 = fsub float %144, %152\l  %156 = fadd float %155, %154\l  %157 = fadd float %151, %150\l  %158 = fadd float %145, %157\l  %159 = fsub float %158, %145\l  %160 = fsub float %157, %159\l  %161 = fadd float %156, %160\l  %162 = fadd float %158, %161\l  %163 = fmul float %162, 5.000000e-01\l  %164 = fcmp olt float %36, 0x3F30000000000000\l  %165 = select i1 %164, float %36, float %163\l  %166 = fcmp ogt float %36, 1.000000e+00\l  %167 = select i1 %166, float 0x7FF8000000000000, float %165\l  %168 = fcmp oeq float %36, 1.000000e+00\l  %169 = select i1 %168, float 0x7FF0000000000000, float %167\l  %170 = tail call float @llvm.copysign.f32(float %169, float %35)\l  %171 = add nsw i32 %17, %6\l  %172 = mul nsw i32 %25, %7\l  %173 = add nsw i32 %171, %172\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds float, float addrspace(1)* %5, i64 %174\l  store float %170, float addrspace(1)* %175, align 4, !tbaa !7\l  br label %176\l}"];
	Node0x46f47a0 -> Node0x46f4830;
	Node0x46f4830 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%176:\l176:                                              \l  ret void\l}"];
}
