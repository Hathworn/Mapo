digraph "CFG for '_Z8ge_asinhiiPKfiiPfii' function" {
	label="CFG for '_Z8ge_asinhiiPKfiiPfii' function";

	Node0x49d8120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %195\l|{<s0>T|<s1>F}}"];
	Node0x49d8120:s0 -> Node0x49dbb60;
	Node0x49d8120:s1 -> Node0x49dbbf0;
	Node0x49dbb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = fcmp oge float %36, 0x43F0000000000000\l  %38 = select i1 %37, float 0x3BF0000000000000, float 1.000000e+00\l  %39 = fmul float %36, %38\l  %40 = fmul float %39, %39\l  %41 = fneg float %40\l  %42 = tail call float @llvm.fma.f32(float %39, float %39, float %41)\l  %43 = select i1 %37, float 0x37F0000000000000, float 1.000000e+00\l  %44 = fadd float %43, %40\l  %45 = fsub float %44, %40\l  %46 = fsub float %44, %45\l  %47 = fsub float %40, %46\l  %48 = fsub float %43, %45\l  %49 = fadd float %48, %47\l  %50 = fadd float %42, %49\l  %51 = fadd float %44, %50\l  %52 = tail call float @llvm.sqrt.f32(float %51)\l  %53 = fmul float %52, %52\l  %54 = fneg float %53\l  %55 = tail call float @llvm.fma.f32(float %52, float %52, float %54)\l  %56 = fsub float %51, %44\l  %57 = fsub float %50, %56\l  %58 = fsub float %51, %53\l  %59 = fsub float %51, %58\l  %60 = fsub float %59, %53\l  %61 = fadd float %57, %60\l  %62 = fsub float %61, %55\l  %63 = fadd float %58, %62\l  %64 = fmul float %52, 2.000000e+00\l  %65 = tail call float @llvm.amdgcn.rcp.f32(float %64)\l  %66 = fmul float %65, %63\l  %67 = fcmp oeq float %51, 0.000000e+00\l  %68 = select i1 %67, float 0.000000e+00, float %66\l  %69 = fadd float %52, %68\l  %70 = fsub float %69, %52\l  %71 = fsub float %68, %70\l  %72 = fadd float %39, %69\l  %73 = fsub float %72, %39\l  %74 = fsub float %72, %73\l  %75 = fsub float %39, %74\l  %76 = fsub float %69, %73\l  %77 = fadd float %76, %75\l  %78 = fadd float %71, %77\l  %79 = fadd float %72, %78\l  %80 = fsub float %79, %72\l  %81 = fsub float %78, %80\l  %82 = select i1 %37, i32 64, i32 0\l  %83 = tail call float @llvm.amdgcn.frexp.mant.f32(float %79)\l  %84 = fcmp olt float %83, 0x3FE5555560000000\l  %85 = sext i1 %84 to i32\l  %86 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %79)\l  %87 = add i32 %86, %85\l  %88 = sub nsw i32 0, %87\l  %89 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 %88)\l  %90 = tail call float @llvm.amdgcn.ldexp.f32(float %81, i32 %88)\l  %91 = fadd float %89, -1.000000e+00\l  %92 = fadd float %91, 1.000000e+00\l  %93 = fsub float %89, %92\l  %94 = fadd float %90, %93\l  %95 = fadd float %91, %94\l  %96 = fsub float %95, %91\l  %97 = fsub float %94, %96\l  %98 = fadd float %89, 1.000000e+00\l  %99 = fadd float %98, -1.000000e+00\l  %100 = fsub float %89, %99\l  %101 = fadd float %90, %100\l  %102 = fadd float %98, %101\l  %103 = fsub float %102, %98\l  %104 = fsub float %101, %103\l  %105 = tail call float @llvm.amdgcn.rcp.f32(float %102)\l  %106 = fmul float %95, %105\l  %107 = fmul float %102, %106\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %106, float %102, float %108)\l  %110 = tail call float @llvm.fma.f32(float %106, float %104, float %109)\l  %111 = fadd float %107, %110\l  %112 = fsub float %111, %107\l  %113 = fsub float %110, %112\l  %114 = fsub float %95, %111\l  %115 = fsub float %95, %114\l  %116 = fsub float %115, %111\l  %117 = fadd float %97, %116\l  %118 = fsub float %117, %113\l  %119 = fadd float %114, %118\l  %120 = fmul float %105, %119\l  %121 = fmul float %102, %120\l  %122 = fneg float %121\l  %123 = tail call float @llvm.fma.f32(float %120, float %102, float %122)\l  %124 = tail call float @llvm.fma.f32(float %120, float %104, float %123)\l  %125 = fsub float %119, %114\l  %126 = fsub float %118, %125\l  %127 = fadd float %121, %124\l  %128 = fsub float %127, %121\l  %129 = fsub float %124, %128\l  %130 = fsub float %119, %127\l  %131 = fsub float %119, %130\l  %132 = fsub float %131, %127\l  %133 = fadd float %126, %132\l  %134 = fsub float %133, %129\l  %135 = fadd float %130, %134\l  %136 = fmul float %105, %135\l  %137 = fadd float %106, %120\l  %138 = fsub float %137, %106\l  %139 = fsub float %120, %138\l  %140 = fadd float %139, %136\l  %141 = fadd float %137, %140\l  %142 = fmul float %141, %141\l  %143 = tail call float @llvm.fmuladd.f32(float %142, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %144 = tail call float @llvm.fmuladd.f32(float %142, float %143, float\l... 0x3FE5555B40000000)\l  %145 = add nsw i32 %87, %82\l  %146 = sitofp i32 %145 to float\l  %147 = fmul float %146, 0x3FE62E4300000000\l  %148 = fneg float %147\l  %149 = tail call float @llvm.fma.f32(float %146, float 0x3FE62E4300000000,\l... float %148)\l  %150 = tail call float @llvm.fma.f32(float %146, float 0xBE205C6100000000,\l... float %149)\l  %151 = fsub float %141, %137\l  %152 = fsub float %140, %151\l  %153 = fadd float %147, %150\l  %154 = fsub float %153, %147\l  %155 = fsub float %150, %154\l  %156 = tail call float @llvm.amdgcn.ldexp.f32(float %141, i32 1)\l  %157 = tail call float @llvm.amdgcn.ldexp.f32(float %152, i32 1)\l  %158 = fmul float %141, %142\l  %159 = fmul float %158, %144\l  %160 = fadd float %156, %159\l  %161 = fsub float %160, %156\l  %162 = fsub float %159, %161\l  %163 = fadd float %157, %162\l  %164 = fadd float %160, %163\l  %165 = fsub float %164, %160\l  %166 = fsub float %163, %165\l  %167 = fadd float %153, %164\l  %168 = fsub float %167, %153\l  %169 = fsub float %167, %168\l  %170 = fsub float %153, %169\l  %171 = fsub float %164, %168\l  %172 = fadd float %171, %170\l  %173 = fadd float %155, %166\l  %174 = fsub float %173, %155\l  %175 = fsub float %173, %174\l  %176 = fsub float %155, %175\l  %177 = fsub float %166, %174\l  %178 = fadd float %177, %176\l  %179 = fadd float %173, %172\l  %180 = fadd float %167, %179\l  %181 = fsub float %180, %167\l  %182 = fsub float %179, %181\l  %183 = fadd float %178, %182\l  %184 = fadd float %180, %183\l  %185 = fcmp olt float %36, 0x3F30000000000000\l  %186 = tail call i1 @llvm.amdgcn.class.f32(float %36, i32 512)\l  %187 = select i1 %186, i1 true, i1 %185\l  %188 = select i1 %187, float %36, float %184\l  %189 = tail call float @llvm.copysign.f32(float %188, float %35)\l  %190 = add nsw i32 %17, %6\l  %191 = mul nsw i32 %25, %7\l  %192 = add nsw i32 %190, %191\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds float, float addrspace(1)* %5, i64 %193\l  store float %189, float addrspace(1)* %194, align 4, !tbaa !7\l  br label %195\l}"];
	Node0x49dbb60 -> Node0x49dbbf0;
	Node0x49dbbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%195:\l195:                                              \l  ret void\l}"];
}
