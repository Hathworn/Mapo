digraph "CFG for '_Z12uplo_erf_inviiiPKfiiPfii' function" {
	label="CFG for '_Z12uplo_erf_inviiiPKfiiPfii' function";

	Node0x4f611f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4f611f0:s0 -> Node0x4f657b0;
	Node0x4f611f0:s1 -> Node0x4f65840;
	Node0x4f657b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4f657b0:s0 -> Node0x4f63830;
	Node0x4f657b0:s1 -> Node0x4f65840;
	Node0x4f63830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fcmp olt float %44, 3.750000e-01\l  br i1 %45, label %46, label %54\l|{<s0>T|<s1>F}}"];
	Node0x4f63830:s0 -> Node0x4f670b0;
	Node0x4f63830:s1 -> Node0x4f67140;
	Node0x4f670b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%46:\l46:                                               \l  %47 = fmul float %43, %43\l  %48 = tail call float @llvm.fmuladd.f32(float %47, float 0x3FC48B6CA0000000,\l... float 0xBF9A2930A0000000)\l  %49 = tail call float @llvm.fmuladd.f32(float %47, float %48, float\l... 0x3FB65B0B40000000)\l  %50 = tail call float @llvm.fmuladd.f32(float %47, float %49, float\l... 0x3FB5581AE0000000)\l  %51 = tail call float @llvm.fmuladd.f32(float %47, float %50, float\l... 0x3FC05AA560000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %47, float %51, float\l... 0x3FCDB27480000000)\l  %53 = tail call float @llvm.fmuladd.f32(float %47, float %52, float\l... 0x3FEC5BF8A0000000)\l  br label %113\l}"];
	Node0x4f670b0 -> Node0x4f67dc0;
	Node0x4f67140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%54:\l54:                                               \l  %55 = fneg float %44\l  %56 = tail call float @llvm.fma.f32(float %55, float %44, float 1.000000e+00)\l  %57 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 144)\l  %58 = select i1 %57, float 0x41F0000000000000, float 1.000000e+00\l  %59 = fmul float %56, %58\l  %60 = tail call float @llvm.log2.f32(float %59)\l  %61 = fmul float %60, 0x3FE62E42E0000000\l  %62 = tail call i1 @llvm.amdgcn.class.f32(float %60, i32 519)\l  %63 = fneg float %61\l  %64 = tail call float @llvm.fma.f32(float %60, float 0x3FE62E42E0000000,\l... float %63)\l  %65 = tail call float @llvm.fma.f32(float %60, float 0x3E6EFA39E0000000,\l... float %64)\l  %66 = fadd float %61, %65\l  %67 = select i1 %62, float %60, float %66\l  %68 = select i1 %57, float 0x40362E4300000000, float 0.000000e+00\l  %69 = fsub float %67, %68\l  %70 = fcmp ogt float %69, -5.000000e+00\l  br i1 %70, label %71, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4f67140:s0 -> Node0x4f69290;
	Node0x4f67140:s1 -> Node0x4f69320;
	Node0x4f69290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%71:\l71:                                               \l  %72 = fsub float -2.500000e+00, %69\l  %73 = tail call float @llvm.fmuladd.f32(float %72, float 0x3E5E2CB100000000,\l... float 0x3E970966C0000000)\l  %74 = tail call float @llvm.fmuladd.f32(float %72, float %73, float\l... 0xBECD8E6AE0000000)\l  %75 = tail call float @llvm.fmuladd.f32(float %72, float %74, float\l... 0xBED26B5820000000)\l  %76 = tail call float @llvm.fmuladd.f32(float %72, float %75, float\l... 0x3F2CA65B60000000)\l  %77 = tail call float @llvm.fmuladd.f32(float %72, float %76, float\l... 0xBF548A8100000000)\l  %78 = tail call float @llvm.fmuladd.f32(float %72, float %77, float\l... 0xBF711C9DE0000000)\l  %79 = tail call float @llvm.fmuladd.f32(float %72, float %78, float\l... 0x3FCF91EC60000000)\l  %80 = tail call float @llvm.fmuladd.f32(float %72, float %79, float\l... 0x3FF805C5E0000000)\l  br label %113\l}"];
	Node0x4f69290 -> Node0x4f67dc0;
	Node0x4f69320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%81:\l81:                                               \l  %82 = fneg float %69\l  %83 = fcmp ogt float %69, 0xB9F0000000000000\l  %84 = select i1 %83, float 0x41F0000000000000, float 1.000000e+00\l  %85 = fmul float %84, %82\l  %86 = tail call float @llvm.sqrt.f32(float %85)\l  %87 = bitcast float %86 to i32\l  %88 = add nsw i32 %87, -1\l  %89 = bitcast i32 %88 to float\l  %90 = add nsw i32 %87, 1\l  %91 = bitcast i32 %90 to float\l  %92 = fneg float %91\l  %93 = tail call float @llvm.fma.f32(float %92, float %86, float %85)\l  %94 = fcmp ogt float %93, 0.000000e+00\l  %95 = fneg float %89\l  %96 = tail call float @llvm.fma.f32(float %95, float %86, float %85)\l  %97 = fcmp ole float %96, 0.000000e+00\l  %98 = select i1 %97, float %89, float %86\l  %99 = select i1 %94, float %91, float %98\l  %100 = select i1 %83, float 0x3EF0000000000000, float 1.000000e+00\l  %101 = fmul float %100, %99\l  %102 = tail call i1 @llvm.amdgcn.class.f32(float %85, i32 608)\l  %103 = select i1 %102, float %85, float %101\l  %104 = fadd float %103, -3.000000e+00\l  %105 = tail call float @llvm.fmuladd.f32(float %104, float\l... 0xBF2A3E1360000000, float 0x3F1A76AD60000000)\l  %106 = tail call float @llvm.fmuladd.f32(float %104, float %105, float\l... 0x3F561B8E40000000)\l  %107 = tail call float @llvm.fmuladd.f32(float %104, float %106, float\l... 0xBF6E17BCE0000000)\l  %108 = tail call float @llvm.fmuladd.f32(float %104, float %107, float\l... 0x3F77824F60000000)\l  %109 = tail call float @llvm.fmuladd.f32(float %104, float %108, float\l... 0xBF7F38BAE0000000)\l  %110 = tail call float @llvm.fmuladd.f32(float %104, float %109, float\l... 0x3F8354AFC0000000)\l  %111 = tail call float @llvm.fmuladd.f32(float %104, float %110, float\l... 0x3FF006DB60000000)\l  %112 = tail call float @llvm.fmuladd.f32(float %104, float %111, float\l... 0x4006A9EFC0000000)\l  br label %113\l}"];
	Node0x4f69320 -> Node0x4f67dc0;
	Node0x4f67dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%113:\l113:                                              \l  %114 = phi float [ %53, %46 ], [ %80, %71 ], [ %112, %81 ]\l  %115 = fmul float %44, %114\l  %116 = fcmp ogt float %44, 1.000000e+00\l  %117 = select i1 %116, float 0x7FF8000000000000, float %115\l  %118 = fcmp oeq float %44, 1.000000e+00\l  %119 = select i1 %118, float 0x7FF0000000000000, float %117\l  %120 = tail call float @llvm.copysign.f32(float %119, float %43)\l  %121 = add nsw i32 %18, %7\l  %122 = mul nsw i32 %26, %8\l  %123 = add nsw i32 %121, %122\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %6, i64 %124\l  store float %120, float addrspace(1)* %125, align 4, !tbaa !7\l  br label %126\l}"];
	Node0x4f67dc0 -> Node0x4f65840;
	Node0x4f65840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  ret void\l}"];
}
