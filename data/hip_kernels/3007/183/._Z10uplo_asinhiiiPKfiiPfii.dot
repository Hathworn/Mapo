digraph "CFG for '_Z10uplo_asinhiiiPKfiiPfii' function" {
	label="CFG for '_Z10uplo_asinhiiiPKfiiPfii' function";

	Node0x62aa720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %203\l|{<s0>T|<s1>F}}"];
	Node0x62aa720:s0 -> Node0x62aece0;
	Node0x62aa720:s1 -> Node0x62aed70;
	Node0x62aece0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %203\l|{<s0>T|<s1>F}}"];
	Node0x62aece0:s0 -> Node0x62acd60;
	Node0x62aece0:s1 -> Node0x62aed70;
	Node0x62acd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fcmp oge float %44, 0x43F0000000000000\l  %46 = select i1 %45, float 0x3BF0000000000000, float 1.000000e+00\l  %47 = fmul float %44, %46\l  %48 = fmul float %47, %47\l  %49 = fneg float %48\l  %50 = tail call float @llvm.fma.f32(float %47, float %47, float %49)\l  %51 = select i1 %45, float 0x37F0000000000000, float 1.000000e+00\l  %52 = fadd float %51, %48\l  %53 = fsub float %52, %48\l  %54 = fsub float %52, %53\l  %55 = fsub float %48, %54\l  %56 = fsub float %51, %53\l  %57 = fadd float %56, %55\l  %58 = fadd float %50, %57\l  %59 = fadd float %52, %58\l  %60 = tail call float @llvm.sqrt.f32(float %59)\l  %61 = fmul float %60, %60\l  %62 = fneg float %61\l  %63 = tail call float @llvm.fma.f32(float %60, float %60, float %62)\l  %64 = fsub float %59, %52\l  %65 = fsub float %58, %64\l  %66 = fsub float %59, %61\l  %67 = fsub float %59, %66\l  %68 = fsub float %67, %61\l  %69 = fadd float %65, %68\l  %70 = fsub float %69, %63\l  %71 = fadd float %66, %70\l  %72 = fmul float %60, 2.000000e+00\l  %73 = tail call float @llvm.amdgcn.rcp.f32(float %72)\l  %74 = fmul float %73, %71\l  %75 = fcmp oeq float %59, 0.000000e+00\l  %76 = select i1 %75, float 0.000000e+00, float %74\l  %77 = fadd float %60, %76\l  %78 = fsub float %77, %60\l  %79 = fsub float %76, %78\l  %80 = fadd float %47, %77\l  %81 = fsub float %80, %47\l  %82 = fsub float %80, %81\l  %83 = fsub float %47, %82\l  %84 = fsub float %77, %81\l  %85 = fadd float %84, %83\l  %86 = fadd float %79, %85\l  %87 = fadd float %80, %86\l  %88 = fsub float %87, %80\l  %89 = fsub float %86, %88\l  %90 = select i1 %45, i32 64, i32 0\l  %91 = tail call float @llvm.amdgcn.frexp.mant.f32(float %87)\l  %92 = fcmp olt float %91, 0x3FE5555560000000\l  %93 = sext i1 %92 to i32\l  %94 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %87)\l  %95 = add i32 %94, %93\l  %96 = sub nsw i32 0, %95\l  %97 = tail call float @llvm.amdgcn.ldexp.f32(float %87, i32 %96)\l  %98 = tail call float @llvm.amdgcn.ldexp.f32(float %89, i32 %96)\l  %99 = fadd float %97, -1.000000e+00\l  %100 = fadd float %99, 1.000000e+00\l  %101 = fsub float %97, %100\l  %102 = fadd float %98, %101\l  %103 = fadd float %99, %102\l  %104 = fsub float %103, %99\l  %105 = fsub float %102, %104\l  %106 = fadd float %97, 1.000000e+00\l  %107 = fadd float %106, -1.000000e+00\l  %108 = fsub float %97, %107\l  %109 = fadd float %98, %108\l  %110 = fadd float %106, %109\l  %111 = fsub float %110, %106\l  %112 = fsub float %109, %111\l  %113 = tail call float @llvm.amdgcn.rcp.f32(float %110)\l  %114 = fmul float %103, %113\l  %115 = fmul float %110, %114\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %114, float %110, float %116)\l  %118 = tail call float @llvm.fma.f32(float %114, float %112, float %117)\l  %119 = fadd float %115, %118\l  %120 = fsub float %119, %115\l  %121 = fsub float %118, %120\l  %122 = fsub float %103, %119\l  %123 = fsub float %103, %122\l  %124 = fsub float %123, %119\l  %125 = fadd float %105, %124\l  %126 = fsub float %125, %121\l  %127 = fadd float %122, %126\l  %128 = fmul float %113, %127\l  %129 = fmul float %110, %128\l  %130 = fneg float %129\l  %131 = tail call float @llvm.fma.f32(float %128, float %110, float %130)\l  %132 = tail call float @llvm.fma.f32(float %128, float %112, float %131)\l  %133 = fsub float %127, %122\l  %134 = fsub float %126, %133\l  %135 = fadd float %129, %132\l  %136 = fsub float %135, %129\l  %137 = fsub float %132, %136\l  %138 = fsub float %127, %135\l  %139 = fsub float %127, %138\l  %140 = fsub float %139, %135\l  %141 = fadd float %134, %140\l  %142 = fsub float %141, %137\l  %143 = fadd float %138, %142\l  %144 = fmul float %113, %143\l  %145 = fadd float %114, %128\l  %146 = fsub float %145, %114\l  %147 = fsub float %128, %146\l  %148 = fadd float %147, %144\l  %149 = fadd float %145, %148\l  %150 = fmul float %149, %149\l  %151 = tail call float @llvm.fmuladd.f32(float %150, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %152 = tail call float @llvm.fmuladd.f32(float %150, float %151, float\l... 0x3FE5555B40000000)\l  %153 = add nsw i32 %95, %90\l  %154 = sitofp i32 %153 to float\l  %155 = fmul float %154, 0x3FE62E4300000000\l  %156 = fneg float %155\l  %157 = tail call float @llvm.fma.f32(float %154, float 0x3FE62E4300000000,\l... float %156)\l  %158 = tail call float @llvm.fma.f32(float %154, float 0xBE205C6100000000,\l... float %157)\l  %159 = fsub float %149, %145\l  %160 = fsub float %148, %159\l  %161 = fadd float %155, %158\l  %162 = fsub float %161, %155\l  %163 = fsub float %158, %162\l  %164 = tail call float @llvm.amdgcn.ldexp.f32(float %149, i32 1)\l  %165 = tail call float @llvm.amdgcn.ldexp.f32(float %160, i32 1)\l  %166 = fmul float %149, %150\l  %167 = fmul float %166, %152\l  %168 = fadd float %164, %167\l  %169 = fsub float %168, %164\l  %170 = fsub float %167, %169\l  %171 = fadd float %165, %170\l  %172 = fadd float %168, %171\l  %173 = fsub float %172, %168\l  %174 = fsub float %171, %173\l  %175 = fadd float %161, %172\l  %176 = fsub float %175, %161\l  %177 = fsub float %175, %176\l  %178 = fsub float %161, %177\l  %179 = fsub float %172, %176\l  %180 = fadd float %179, %178\l  %181 = fadd float %163, %174\l  %182 = fsub float %181, %163\l  %183 = fsub float %181, %182\l  %184 = fsub float %163, %183\l  %185 = fsub float %174, %182\l  %186 = fadd float %185, %184\l  %187 = fadd float %181, %180\l  %188 = fadd float %175, %187\l  %189 = fsub float %188, %175\l  %190 = fsub float %187, %189\l  %191 = fadd float %186, %190\l  %192 = fadd float %188, %191\l  %193 = fcmp olt float %44, 0x3F30000000000000\l  %194 = tail call i1 @llvm.amdgcn.class.f32(float %44, i32 512)\l  %195 = select i1 %194, i1 true, i1 %193\l  %196 = select i1 %195, float %44, float %192\l  %197 = tail call float @llvm.copysign.f32(float %196, float %43)\l  %198 = add nsw i32 %18, %7\l  %199 = mul nsw i32 %26, %8\l  %200 = add nsw i32 %198, %199\l  %201 = sext i32 %200 to i64\l  %202 = getelementptr inbounds float, float addrspace(1)* %6, i64 %201\l  store float %197, float addrspace(1)* %202, align 4, !tbaa !7\l  br label %203\l}"];
	Node0x62acd60 -> Node0x62aed70;
	Node0x62aed70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%203:\l203:                                              \l  ret void\l}"];
}
