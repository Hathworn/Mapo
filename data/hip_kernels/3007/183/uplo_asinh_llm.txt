// Optimize memory access by ensuring coalesced reads from the 'a' array.  
// Use shared memory if there are repeated accesses to overlapping regions of 'a'.  
// Minimize divergence in the 'check' condition by restructuring branching logic.  
// Consider using vectorized memory accesses if the data layout allows (e.g., float2 or float4).  
// Ensure proper memory alignment for both 'a' and 'b' arrays for optimal memory transactions.  
// Experiment with varying block size for better occupancy and performance.  