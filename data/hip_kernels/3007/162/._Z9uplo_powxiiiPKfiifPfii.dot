digraph "CFG for '_Z9uplo_powxiiiPKfiifPfii' function" {
	label="CFG for '_Z9uplo_powxiiiPKfiifPfii' function";

	Node0x45b72a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %0\l  %29 = icmp slt i32 %27, %0\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %241\l|{<s0>T|<s1>F}}"];
	Node0x45b72a0:s0 -> Node0x45bb880;
	Node0x45b72a0:s1 -> Node0x45bb910;
	Node0x45bb880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %1, 132\l  %33 = mul nsw i32 %19, %2\l  %34 = mul nsw i32 %27, %2\l  %35 = icmp sgt i32 %33, %34\l  %36 = icmp sge i32 %33, %34\l  %37 = select i1 %32, i1 %35, i1 %36\l  br i1 %37, label %38, label %241\l|{<s0>T|<s1>F}}"];
	Node0x45bb880:s0 -> Node0x45b9880;
	Node0x45bb880:s1 -> Node0x45bb910;
	Node0x45b9880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%38:\l38:                                               \l  %39 = add nsw i32 %19, %4\l  %40 = mul nsw i32 %27, %5\l  %41 = add nsw i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %3, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = tail call float @llvm.fabs.f32(float %44)\l  %46 = tail call float @llvm.amdgcn.frexp.mant.f32(float %45)\l  %47 = fcmp olt float %46, 0x3FE5555560000000\l  %48 = zext i1 %47 to i32\l  %49 = tail call float @llvm.amdgcn.ldexp.f32(float %46, i32 %48)\l  %50 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %45)\l  %51 = sub nsw i32 %50, %48\l  %52 = fadd float %49, -1.000000e+00\l  %53 = fadd float %49, 1.000000e+00\l  %54 = fadd float %53, -1.000000e+00\l  %55 = fsub float %49, %54\l  %56 = tail call float @llvm.amdgcn.rcp.f32(float %53)\l  %57 = fmul float %52, %56\l  %58 = fmul float %53, %57\l  %59 = fneg float %58\l  %60 = tail call float @llvm.fma.f32(float %57, float %53, float %59)\l  %61 = tail call float @llvm.fma.f32(float %57, float %55, float %60)\l  %62 = fadd float %58, %61\l  %63 = fsub float %62, %58\l  %64 = fsub float %61, %63\l  %65 = fsub float %52, %62\l  %66 = fsub float %52, %65\l  %67 = fsub float %66, %62\l  %68 = fsub float %67, %64\l  %69 = fadd float %65, %68\l  %70 = fmul float %56, %69\l  %71 = fadd float %57, %70\l  %72 = fsub float %71, %57\l  %73 = fsub float %70, %72\l  %74 = fmul float %71, %71\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %71, float %71, float %75)\l  %77 = fmul float %73, 2.000000e+00\l  %78 = tail call float @llvm.fma.f32(float %71, float %77, float %76)\l  %79 = fadd float %74, %78\l  %80 = fsub float %79, %74\l  %81 = fsub float %78, %80\l  %82 = tail call float @llvm.fmuladd.f32(float %79, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %83 = tail call float @llvm.fmuladd.f32(float %79, float %82, float\l... 0x3FD999BDE0000000)\l  %84 = sitofp i32 %51 to float\l  %85 = fmul float %84, 0x3FE62E4300000000\l  %86 = fneg float %85\l  %87 = tail call float @llvm.fma.f32(float %84, float 0x3FE62E4300000000,\l... float %86)\l  %88 = tail call float @llvm.fma.f32(float %84, float 0xBE205C6100000000,\l... float %87)\l  %89 = fadd float %85, %88\l  %90 = fsub float %89, %85\l  %91 = fsub float %88, %90\l  %92 = tail call float @llvm.amdgcn.ldexp.f32(float %71, i32 1)\l  %93 = fmul float %71, %79\l  %94 = fneg float %93\l  %95 = tail call float @llvm.fma.f32(float %79, float %71, float %94)\l  %96 = tail call float @llvm.fma.f32(float %79, float %73, float %95)\l  %97 = tail call float @llvm.fma.f32(float %81, float %71, float %96)\l  %98 = fadd float %93, %97\l  %99 = fsub float %98, %93\l  %100 = fsub float %97, %99\l  %101 = fmul float %79, %83\l  %102 = fneg float %101\l  %103 = tail call float @llvm.fma.f32(float %79, float %83, float %102)\l  %104 = tail call float @llvm.fma.f32(float %81, float %83, float %103)\l  %105 = fadd float %101, %104\l  %106 = fsub float %105, %101\l  %107 = fsub float %104, %106\l  %108 = fadd float %105, 0x3FE5555540000000\l  %109 = fadd float %108, 0xBFE5555540000000\l  %110 = fsub float %105, %109\l  %111 = fadd float %107, 0x3E2E720200000000\l  %112 = fadd float %111, %110\l  %113 = fadd float %108, %112\l  %114 = fsub float %113, %108\l  %115 = fsub float %112, %114\l  %116 = fmul float %98, %113\l  %117 = fneg float %116\l  %118 = tail call float @llvm.fma.f32(float %98, float %113, float %117)\l  %119 = tail call float @llvm.fma.f32(float %98, float %115, float %118)\l  %120 = tail call float @llvm.fma.f32(float %100, float %113, float %119)\l  %121 = tail call float @llvm.amdgcn.ldexp.f32(float %73, i32 1)\l  %122 = fadd float %116, %120\l  %123 = fsub float %122, %116\l  %124 = fsub float %120, %123\l  %125 = fadd float %92, %122\l  %126 = fsub float %125, %92\l  %127 = fsub float %122, %126\l  %128 = fadd float %121, %124\l  %129 = fadd float %128, %127\l  %130 = fadd float %125, %129\l  %131 = fsub float %130, %125\l  %132 = fsub float %129, %131\l  %133 = fadd float %89, %130\l  %134 = fsub float %133, %89\l  %135 = fsub float %133, %134\l  %136 = fsub float %89, %135\l  %137 = fsub float %130, %134\l  %138 = fadd float %137, %136\l  %139 = fadd float %91, %132\l  %140 = fsub float %139, %91\l  %141 = fsub float %139, %140\l  %142 = fsub float %91, %141\l  %143 = fsub float %132, %140\l  %144 = fadd float %143, %142\l  %145 = fadd float %139, %138\l  %146 = fadd float %133, %145\l  %147 = fsub float %146, %133\l  %148 = fsub float %145, %147\l  %149 = fadd float %144, %148\l  %150 = fadd float %146, %149\l  %151 = fsub float %150, %146\l  %152 = fsub float %149, %151\l  %153 = fmul float %150, %6\l  %154 = fneg float %153\l  %155 = tail call float @llvm.fma.f32(float %6, float %150, float %154)\l  %156 = tail call float @llvm.fma.f32(float %6, float %152, float %155)\l  %157 = fadd float %153, %156\l  %158 = fsub float %157, %153\l  %159 = fsub float %156, %158\l  %160 = tail call float @llvm.fabs.f32(float %153) #3\l  %161 = fcmp oeq float %160, 0x7FF0000000000000\l  %162 = select i1 %161, float %153, float %157\l  %163 = tail call float @llvm.fabs.f32(float %162) #3\l  %164 = fcmp oeq float %163, 0x7FF0000000000000\l  %165 = select i1 %164, float 0.000000e+00, float %159\l  %166 = fcmp oeq float %162, 0x40562E4300000000\l  %167 = select i1 %166, float 0x3EE0000000000000, float 0.000000e+00\l  %168 = fsub float %162, %167\l  %169 = fadd float %167, %165\l  %170 = fmul float %168, 0x3FF7154760000000\l  %171 = tail call float @llvm.rint.f32(float %170)\l  %172 = fcmp ogt float %168, 0x40562E4300000000\l  %173 = fcmp olt float %168, 0xC059D1DA00000000\l  %174 = fneg float %170\l  %175 = tail call float @llvm.fma.f32(float %168, float 0x3FF7154760000000,\l... float %174)\l  %176 = tail call float @llvm.fma.f32(float %168, float 0x3E54AE0BE0000000,\l... float %175)\l  %177 = fsub float %170, %171\l  %178 = fadd float %176, %177\l  %179 = tail call float @llvm.exp2.f32(float %178)\l  %180 = fptosi float %171 to i32\l  %181 = tail call float @llvm.amdgcn.ldexp.f32(float %179, i32 %180)\l  %182 = select i1 %173, float 0.000000e+00, float %181\l  %183 = select i1 %172, float 0x7FF0000000000000, float %182\l  %184 = tail call float @llvm.fma.f32(float %183, float %169, float %183)\l  %185 = tail call float @llvm.fabs.f32(float %183) #3\l  %186 = fcmp oeq float %185, 0x7FF0000000000000\l  %187 = select i1 %186, float %183, float %184\l  %188 = tail call float @llvm.fabs.f32(float %6)\l  %189 = tail call float @llvm.trunc.f32(float %188)\l  %190 = fcmp oeq float %188, %189\l  %191 = zext i1 %190 to i32\l  %192 = fmul float %189, 5.000000e-01\l  %193 = tail call float @llvm.amdgcn.fract.f32(float %192)\l  %194 = tail call i1 @llvm.amdgcn.class.f32(float %192, i32 516)\l  %195 = select i1 %194, float 0.000000e+00, float %193\l  %196 = fcmp oeq float %195, 0.000000e+00\l  %197 = and i1 %190, %196\l  %198 = zext i1 %197 to i32\l  %199 = add nuw nsw i32 %198, %191\l  %200 = icmp eq i32 %199, 1\l  %201 = fcmp olt float %44, 0.000000e+00\l  %202 = and i1 %200, %201\l  %203 = select i1 %202, float -0.000000e+00, float 0.000000e+00\l  %204 = tail call float @llvm.copysign.f32(float %187, float %203)\l  %205 = fcmp uge float %44, 0.000000e+00\l  %206 = icmp ne i32 %199, 0\l  %207 = select i1 %205, i1 true, i1 %206\l  %208 = select i1 %207, float %204, float 0x7FF8000000000000\l  %209 = fcmp oeq float %188, 0x7FF0000000000000\l  br i1 %209, label %210, label %219\l|{<s0>T|<s1>F}}"];
	Node0x45b9880:s0 -> Node0x45c5cc0;
	Node0x45b9880:s1 -> Node0x45c5d50;
	Node0x45c5cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%210:\l210:                                              \l  %211 = fcmp oeq float %45, 1.000000e+00\l  %212 = fadd float %45, -1.000000e+00\l  %213 = bitcast float %6 to i32\l  %214 = bitcast float %212 to i32\l  %215 = xor i32 %214, %213\l  %216 = icmp sgt i32 %215, -1\l  %217 = select i1 %216, float 0x7FF0000000000000, float 0.000000e+00\l  %218 = select i1 %211, float %45, float %217\l  br label %219\l}"];
	Node0x45c5cc0 -> Node0x45c5d50;
	Node0x45c5d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%219:\l219:                                              \l  %220 = phi float [ %208, %38 ], [ %218, %210 ]\l  %221 = fcmp oeq float %45, 0x7FF0000000000000\l  %222 = fcmp oeq float %44, 0.000000e+00\l  %223 = or i1 %222, %221\l  %224 = fcmp olt float %6, 0.000000e+00\l  %225 = xor i1 %224, %222\l  %226 = select i1 %225, float 0.000000e+00, float 0x7FF0000000000000\l  %227 = select i1 %200, float %44, float 0.000000e+00\l  %228 = tail call float @llvm.copysign.f32(float %226, float %227)\l  %229 = select i1 %223, float %228, float %220\l  %230 = fcmp uno float %44, %6\l  %231 = select i1 %230, float 0x7FF8000000000000, float %229\l  %232 = fcmp oeq float %44, 1.000000e+00\l  %233 = fcmp oeq float %6, 0.000000e+00\l  %234 = or i1 %233, %232\l  %235 = select i1 %234, float 1.000000e+00, float %231\l  %236 = add nsw i32 %19, %8\l  %237 = mul nsw i32 %27, %9\l  %238 = add nsw i32 %236, %237\l  %239 = sext i32 %238 to i64\l  %240 = getelementptr inbounds float, float addrspace(1)* %7, i64 %239\l  store float %235, float addrspace(1)* %240, align 4, !tbaa !7\l  br label %241\l}"];
	Node0x45c5d50 -> Node0x45bb910;
	Node0x45bb910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%241:\l241:                                              \l  ret void\l}"];
}
