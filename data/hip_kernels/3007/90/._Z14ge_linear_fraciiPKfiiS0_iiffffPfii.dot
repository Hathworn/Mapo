digraph "CFG for '_Z14ge_linear_fraciiPKfiiS0_iiffffPfii' function" {
	label="CFG for '_Z14ge_linear_fraciiPKfiiS0_iiffffPfii' function";

	Node0x6408bd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%15:\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %18 = getelementptr i8, i8 addrspace(4)* %17, i64 4\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 4, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %16, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %24 = add i32 %22, %23\l  %25 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %26 = getelementptr i8, i8 addrspace(4)* %17, i64 6\l  %27 = bitcast i8 addrspace(4)* %26 to i16 addrspace(4)*\l  %28 = load i16, i16 addrspace(4)* %27, align 2, !range !4, !invariant.load !5\l  %29 = zext i16 %28 to i32\l  %30 = mul i32 %25, %29\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %32 = add i32 %30, %31\l  %33 = icmp slt i32 %24, %0\l  %34 = icmp slt i32 %32, %1\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %59\l|{<s0>T|<s1>F}}"];
	Node0x6408bd0:s0 -> Node0x6409b60;
	Node0x6408bd0:s1 -> Node0x640d410;
	Node0x6409b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%36:\l36:                                               \l  %37 = add nsw i32 %24, %3\l  %38 = mul nsw i32 %32, %4\l  %39 = add nsw i32 %37, %38\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = fmul contract float %42, %8\l  %44 = fadd contract float %43, %9\l  %45 = add nsw i32 %24, %6\l  %46 = mul nsw i32 %32, %7\l  %47 = add nsw i32 %45, %46\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %5, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %50, %10\l  %52 = fadd contract float %51, %11\l  %53 = fdiv contract float %44, %52\l  %54 = add nsw i32 %24, %13\l  %55 = mul nsw i32 %32, %14\l  %56 = add nsw i32 %54, %55\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %12, i64 %57\l  store float %53, float addrspace(1)* %58, align 4, !tbaa !7\l  br label %59\l}"];
	Node0x6409b60 -> Node0x640d410;
	Node0x640d410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  ret void\l}"];
}
