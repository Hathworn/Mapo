digraph "CFG for '_Z13vector_sincosiPKfiiPfiiS1_ii' function" {
	label="CFG for '_Z13vector_sincosiPKfiiPfiiS1_ii' function";

	Node0x49d8570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %0\l  br i1 %20, label %21, label %183\l|{<s0>T|<s1>F}}"];
	Node0x49d8570:s0 -> Node0x49db040;
	Node0x49d8570:s1 -> Node0x49db0d0;
	Node0x49db040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %19, %3\l  %23 = add nsw i32 %22, %2\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = mul nsw i32 %19, %6\l  %28 = add nsw i32 %27, %5\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %31 = mul nsw i32 %19, %9\l  %32 = add nsw i32 %31, %8\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %7, i64 %33\l  %35 = tail call float @llvm.fabs.f32(float %26)\l  %36 = fcmp olt float %35, 1.310720e+05\l  br i1 %36, label %37, label %45\l|{<s0>T|<s1>F}}"];
	Node0x49db040:s0 -> Node0x49dce40;
	Node0x49db040:s1 -> Node0x49dced0;
	Node0x49dce40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = fmul float %35, 0x3FE45F3060000000\l  %39 = tail call float @llvm.rint.f32(float %38)\l  %40 = tail call float @llvm.fma.f32(float %39, float 0xBFF921FB40000000,\l... float %35)\l  %41 = tail call float @llvm.fma.f32(float %39, float 0xBE74442D00000000,\l... float %40)\l  %42 = tail call float @llvm.fma.f32(float %39, float 0xBCF8469880000000,\l... float %41)\l  %43 = fptosi float %39 to i32\l  %44 = bitcast float %35 to i32\l  br label %151\l}"];
	Node0x49dce40 -> Node0x49dd9a0;
	Node0x49dced0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%45:\l45:                                               \l  %46 = bitcast float %35 to i32\l  %47 = lshr i32 %46, 23\l  %48 = and i32 %46, 8388607\l  %49 = or i32 %48, 8388608\l  %50 = zext i32 %49 to i64\l  %51 = mul nuw nsw i64 %50, 4266746795\l  %52 = trunc i64 %51 to i32\l  %53 = lshr i64 %51, 32\l  %54 = mul nuw nsw i64 %50, 1011060801\l  %55 = add nuw nsw i64 %53, %54\l  %56 = trunc i64 %55 to i32\l  %57 = lshr i64 %55, 32\l  %58 = mul nuw nsw i64 %50, 3680671129\l  %59 = add nuw nsw i64 %57, %58\l  %60 = trunc i64 %59 to i32\l  %61 = lshr i64 %59, 32\l  %62 = mul nuw nsw i64 %50, 4113882560\l  %63 = add nuw nsw i64 %61, %62\l  %64 = trunc i64 %63 to i32\l  %65 = lshr i64 %63, 32\l  %66 = mul nuw nsw i64 %50, 4230436817\l  %67 = add nuw nsw i64 %65, %66\l  %68 = trunc i64 %67 to i32\l  %69 = lshr i64 %67, 32\l  %70 = mul nuw nsw i64 %50, 1313084713\l  %71 = add nuw nsw i64 %69, %70\l  %72 = trunc i64 %71 to i32\l  %73 = lshr i64 %71, 32\l  %74 = mul nuw nsw i64 %50, 2734261102\l  %75 = add nuw nsw i64 %73, %74\l  %76 = trunc i64 %75 to i32\l  %77 = lshr i64 %75, 32\l  %78 = trunc i64 %77 to i32\l  %79 = add nsw i32 %47, -120\l  %80 = icmp ugt i32 %79, 63\l  %81 = select i1 %80, i32 %72, i32 %78\l  %82 = select i1 %80, i32 %68, i32 %76\l  %83 = select i1 %80, i32 %64, i32 %72\l  %84 = select i1 %80, i32 %60, i32 %68\l  %85 = select i1 %80, i32 %56, i32 %64\l  %86 = select i1 %80, i32 %52, i32 %60\l  %87 = select i1 %80, i32 -64, i32 0\l  %88 = add nsw i32 %87, %79\l  %89 = icmp ugt i32 %88, 31\l  %90 = select i1 %89, i32 %82, i32 %81\l  %91 = select i1 %89, i32 %83, i32 %82\l  %92 = select i1 %89, i32 %84, i32 %83\l  %93 = select i1 %89, i32 %85, i32 %84\l  %94 = select i1 %89, i32 %86, i32 %85\l  %95 = select i1 %89, i32 -32, i32 0\l  %96 = add nsw i32 %95, %88\l  %97 = icmp ugt i32 %96, 31\l  %98 = select i1 %97, i32 %91, i32 %90\l  %99 = select i1 %97, i32 %92, i32 %91\l  %100 = select i1 %97, i32 %93, i32 %92\l  %101 = select i1 %97, i32 %94, i32 %93\l  %102 = select i1 %97, i32 -32, i32 0\l  %103 = add nsw i32 %102, %96\l  %104 = icmp eq i32 %103, 0\l  %105 = sub nsw i32 32, %103\l  %106 = tail call i32 @llvm.fshr.i32(i32 %98, i32 %99, i32 %105)\l  %107 = tail call i32 @llvm.fshr.i32(i32 %99, i32 %100, i32 %105)\l  %108 = tail call i32 @llvm.fshr.i32(i32 %100, i32 %101, i32 %105)\l  %109 = select i1 %104, i32 %98, i32 %106\l  %110 = select i1 %104, i32 %99, i32 %107\l  %111 = select i1 %104, i32 %100, i32 %108\l  %112 = lshr i32 %109, 29\l  %113 = tail call i32 @llvm.fshl.i32(i32 %109, i32 %110, i32 2)\l  %114 = tail call i32 @llvm.fshl.i32(i32 %110, i32 %111, i32 2)\l  %115 = tail call i32 @llvm.fshl.i32(i32 %111, i32 %101, i32 2)\l  %116 = and i32 %112, 1\l  %117 = sub nsw i32 0, %116\l  %118 = shl i32 %112, 31\l  %119 = xor i32 %113, %117\l  %120 = xor i32 %114, %117\l  %121 = xor i32 %115, %117\l  %122 = tail call i32 @llvm.ctlz.i32(i32 %119, i1 false), !range !11\l  %123 = sub nsw i32 31, %122\l  %124 = tail call i32 @llvm.fshr.i32(i32 %119, i32 %120, i32 %123)\l  %125 = tail call i32 @llvm.fshr.i32(i32 %120, i32 %121, i32 %123)\l  %126 = shl nuw nsw i32 %122, 23\l  %127 = sub nuw nsw i32 1056964608, %126\l  %128 = lshr i32 %124, 9\l  %129 = or i32 %128, %127\l  %130 = or i32 %129, %118\l  %131 = bitcast i32 %130 to float\l  %132 = tail call i32 @llvm.fshl.i32(i32 %124, i32 %125, i32 23)\l  %133 = tail call i32 @llvm.ctlz.i32(i32 %132, i1 false), !range !11\l  %134 = fmul float %131, 0x3FF921FB40000000\l  %135 = add nuw nsw i32 %133, %122\l  %136 = shl nuw nsw i32 %135, 23\l  %137 = sub nuw nsw i32 855638016, %136\l  %138 = sub nsw i32 31, %133\l  %139 = tail call i32 @llvm.fshr.i32(i32 %132, i32 %125, i32 %138)\l  %140 = lshr i32 %139, 9\l  %141 = or i32 %137, %140\l  %142 = or i32 %141, %118\l  %143 = bitcast i32 %142 to float\l  %144 = fneg float %134\l  %145 = tail call float @llvm.fma.f32(float %131, float 0x3FF921FB40000000,\l... float %144)\l  %146 = tail call float @llvm.fma.f32(float %131, float 0x3E74442D00000000,\l... float %145)\l  %147 = tail call float @llvm.fma.f32(float %143, float 0x3FF921FB40000000,\l... float %146)\l  %148 = fadd float %134, %147\l  %149 = lshr i32 %109, 30\l  %150 = add nuw nsw i32 %116, %149\l  br label %151\l}"];
	Node0x49dced0 -> Node0x49dd9a0;
	Node0x49dd9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%151:\l151:                                              \l  %152 = phi i32 [ %44, %37 ], [ %46, %45 ]\l  %153 = phi float [ %42, %37 ], [ %148, %45 ]\l  %154 = phi i32 [ %43, %37 ], [ %150, %45 ]\l  %155 = fmul float %153, %153\l  %156 = tail call float @llvm.fmuladd.f32(float %155, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %157 = tail call float @llvm.fmuladd.f32(float %155, float %156, float\l... 0xBFC55553A0000000)\l  %158 = fmul float %155, %157\l  %159 = tail call float @llvm.fmuladd.f32(float %153, float %158, float %153)\l  %160 = tail call float @llvm.fmuladd.f32(float %155, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %161 = tail call float @llvm.fmuladd.f32(float %155, float %160, float\l... 0x3FA5557EE0000000)\l  %162 = tail call float @llvm.fmuladd.f32(float %155, float %161, float\l... 0xBFE0000080000000)\l  %163 = tail call float @llvm.fmuladd.f32(float %155, float %162, float\l... 1.000000e+00)\l  %164 = shl i32 %154, 30\l  %165 = and i32 %164, -2147483648\l  %166 = and i32 %154, 1\l  %167 = icmp eq i32 %166, 0\l  %168 = select i1 %167, float %159, float %163\l  %169 = bitcast float %168 to i32\l  %170 = bitcast float %26 to i32\l  %171 = xor i32 %152, %170\l  %172 = xor i32 %171, %169\l  %173 = xor i32 %172, %165\l  %174 = bitcast i32 %173 to float\l  %175 = fneg float %159\l  %176 = select i1 %167, float %163, float %175\l  %177 = bitcast float %176 to i32\l  %178 = xor i32 %165, %177\l  %179 = bitcast i32 %178 to float\l  %180 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 504)\l  %181 = select i1 %180, float %179, float 0x7FF8000000000000\l  %182 = select i1 %180, float %174, float 0x7FF8000000000000\l  store float %182, float addrspace(1)* %30, align 4, !tbaa !7\l  store float %181, float addrspace(1)* %34, align 4, !tbaa !7\l  br label %183\l}"];
	Node0x49dd9a0 -> Node0x49db0d0;
	Node0x49db0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%183:\l183:                                              \l  ret void\l}"];
}
