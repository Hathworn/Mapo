digraph "CFG for '_Z8uplo_powiiiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z8uplo_powiiiPKfiiS0_iiPfii' function";

	Node0x493a410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %21, %0\l  %31 = icmp slt i32 %29, %0\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %249\l|{<s0>T|<s1>F}}"];
	Node0x493a410:s0 -> Node0x493bbb0;
	Node0x493a410:s1 -> Node0x493bc40;
	Node0x493bbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %1, 132\l  %35 = mul nsw i32 %21, %2\l  %36 = mul nsw i32 %29, %2\l  %37 = icmp sgt i32 %35, %36\l  %38 = icmp sge i32 %35, %36\l  %39 = select i1 %34, i1 %37, i1 %38\l  br i1 %39, label %40, label %249\l|{<s0>T|<s1>F}}"];
	Node0x493bbb0:s0 -> Node0x493f0d0;
	Node0x493bbb0:s1 -> Node0x493bc40;
	Node0x493f0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%40:\l40:                                               \l  %41 = add nsw i32 %21, %4\l  %42 = mul nsw i32 %29, %5\l  %43 = add nsw i32 %41, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = add nsw i32 %21, %7\l  %48 = mul nsw i32 %29, %8\l  %49 = add nsw i32 %47, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = tail call float @llvm.fabs.f32(float %46)\l  %54 = tail call float @llvm.amdgcn.frexp.mant.f32(float %53)\l  %55 = fcmp olt float %54, 0x3FE5555560000000\l  %56 = zext i1 %55 to i32\l  %57 = tail call float @llvm.amdgcn.ldexp.f32(float %54, i32 %56)\l  %58 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %53)\l  %59 = sub nsw i32 %58, %56\l  %60 = fadd float %57, -1.000000e+00\l  %61 = fadd float %57, 1.000000e+00\l  %62 = fadd float %61, -1.000000e+00\l  %63 = fsub float %57, %62\l  %64 = tail call float @llvm.amdgcn.rcp.f32(float %61)\l  %65 = fmul float %60, %64\l  %66 = fmul float %61, %65\l  %67 = fneg float %66\l  %68 = tail call float @llvm.fma.f32(float %65, float %61, float %67)\l  %69 = tail call float @llvm.fma.f32(float %65, float %63, float %68)\l  %70 = fadd float %66, %69\l  %71 = fsub float %70, %66\l  %72 = fsub float %69, %71\l  %73 = fsub float %60, %70\l  %74 = fsub float %60, %73\l  %75 = fsub float %74, %70\l  %76 = fsub float %75, %72\l  %77 = fadd float %73, %76\l  %78 = fmul float %64, %77\l  %79 = fadd float %65, %78\l  %80 = fsub float %79, %65\l  %81 = fsub float %78, %80\l  %82 = fmul float %79, %79\l  %83 = fneg float %82\l  %84 = tail call float @llvm.fma.f32(float %79, float %79, float %83)\l  %85 = fmul float %81, 2.000000e+00\l  %86 = tail call float @llvm.fma.f32(float %79, float %85, float %84)\l  %87 = fadd float %82, %86\l  %88 = fsub float %87, %82\l  %89 = fsub float %86, %88\l  %90 = tail call float @llvm.fmuladd.f32(float %87, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %91 = tail call float @llvm.fmuladd.f32(float %87, float %90, float\l... 0x3FD999BDE0000000)\l  %92 = sitofp i32 %59 to float\l  %93 = fmul float %92, 0x3FE62E4300000000\l  %94 = fneg float %93\l  %95 = tail call float @llvm.fma.f32(float %92, float 0x3FE62E4300000000,\l... float %94)\l  %96 = tail call float @llvm.fma.f32(float %92, float 0xBE205C6100000000,\l... float %95)\l  %97 = fadd float %93, %96\l  %98 = fsub float %97, %93\l  %99 = fsub float %96, %98\l  %100 = tail call float @llvm.amdgcn.ldexp.f32(float %79, i32 1)\l  %101 = fmul float %79, %87\l  %102 = fneg float %101\l  %103 = tail call float @llvm.fma.f32(float %87, float %79, float %102)\l  %104 = tail call float @llvm.fma.f32(float %87, float %81, float %103)\l  %105 = tail call float @llvm.fma.f32(float %89, float %79, float %104)\l  %106 = fadd float %101, %105\l  %107 = fsub float %106, %101\l  %108 = fsub float %105, %107\l  %109 = fmul float %87, %91\l  %110 = fneg float %109\l  %111 = tail call float @llvm.fma.f32(float %87, float %91, float %110)\l  %112 = tail call float @llvm.fma.f32(float %89, float %91, float %111)\l  %113 = fadd float %109, %112\l  %114 = fsub float %113, %109\l  %115 = fsub float %112, %114\l  %116 = fadd float %113, 0x3FE5555540000000\l  %117 = fadd float %116, 0xBFE5555540000000\l  %118 = fsub float %113, %117\l  %119 = fadd float %115, 0x3E2E720200000000\l  %120 = fadd float %119, %118\l  %121 = fadd float %116, %120\l  %122 = fsub float %121, %116\l  %123 = fsub float %120, %122\l  %124 = fmul float %106, %121\l  %125 = fneg float %124\l  %126 = tail call float @llvm.fma.f32(float %106, float %121, float %125)\l  %127 = tail call float @llvm.fma.f32(float %106, float %123, float %126)\l  %128 = tail call float @llvm.fma.f32(float %108, float %121, float %127)\l  %129 = tail call float @llvm.amdgcn.ldexp.f32(float %81, i32 1)\l  %130 = fadd float %124, %128\l  %131 = fsub float %130, %124\l  %132 = fsub float %128, %131\l  %133 = fadd float %100, %130\l  %134 = fsub float %133, %100\l  %135 = fsub float %130, %134\l  %136 = fadd float %129, %132\l  %137 = fadd float %136, %135\l  %138 = fadd float %133, %137\l  %139 = fsub float %138, %133\l  %140 = fsub float %137, %139\l  %141 = fadd float %97, %138\l  %142 = fsub float %141, %97\l  %143 = fsub float %141, %142\l  %144 = fsub float %97, %143\l  %145 = fsub float %138, %142\l  %146 = fadd float %145, %144\l  %147 = fadd float %99, %140\l  %148 = fsub float %147, %99\l  %149 = fsub float %147, %148\l  %150 = fsub float %99, %149\l  %151 = fsub float %140, %148\l  %152 = fadd float %151, %150\l  %153 = fadd float %147, %146\l  %154 = fadd float %141, %153\l  %155 = fsub float %154, %141\l  %156 = fsub float %153, %155\l  %157 = fadd float %152, %156\l  %158 = fadd float %154, %157\l  %159 = fsub float %158, %154\l  %160 = fsub float %157, %159\l  %161 = fmul float %52, %158\l  %162 = fneg float %161\l  %163 = tail call float @llvm.fma.f32(float %52, float %158, float %162)\l  %164 = tail call float @llvm.fma.f32(float %52, float %160, float %163)\l  %165 = fadd float %161, %164\l  %166 = fsub float %165, %161\l  %167 = fsub float %164, %166\l  %168 = tail call float @llvm.fabs.f32(float %161) #3\l  %169 = fcmp oeq float %168, 0x7FF0000000000000\l  %170 = select i1 %169, float %161, float %165\l  %171 = tail call float @llvm.fabs.f32(float %170) #3\l  %172 = fcmp oeq float %171, 0x7FF0000000000000\l  %173 = select i1 %172, float 0.000000e+00, float %167\l  %174 = fcmp oeq float %170, 0x40562E4300000000\l  %175 = select i1 %174, float 0x3EE0000000000000, float 0.000000e+00\l  %176 = fsub float %170, %175\l  %177 = fadd float %175, %173\l  %178 = fmul float %176, 0x3FF7154760000000\l  %179 = tail call float @llvm.rint.f32(float %178)\l  %180 = fcmp ogt float %176, 0x40562E4300000000\l  %181 = fcmp olt float %176, 0xC059D1DA00000000\l  %182 = fneg float %178\l  %183 = tail call float @llvm.fma.f32(float %176, float 0x3FF7154760000000,\l... float %182)\l  %184 = tail call float @llvm.fma.f32(float %176, float 0x3E54AE0BE0000000,\l... float %183)\l  %185 = fsub float %178, %179\l  %186 = fadd float %184, %185\l  %187 = tail call float @llvm.exp2.f32(float %186)\l  %188 = fptosi float %179 to i32\l  %189 = tail call float @llvm.amdgcn.ldexp.f32(float %187, i32 %188)\l  %190 = select i1 %181, float 0.000000e+00, float %189\l  %191 = select i1 %180, float 0x7FF0000000000000, float %190\l  %192 = tail call float @llvm.fma.f32(float %191, float %177, float %191)\l  %193 = tail call float @llvm.fabs.f32(float %191) #3\l  %194 = fcmp oeq float %193, 0x7FF0000000000000\l  %195 = select i1 %194, float %191, float %192\l  %196 = tail call float @llvm.fabs.f32(float %52)\l  %197 = tail call float @llvm.trunc.f32(float %196)\l  %198 = fcmp oeq float %196, %197\l  %199 = zext i1 %198 to i32\l  %200 = fmul float %197, 5.000000e-01\l  %201 = tail call float @llvm.amdgcn.fract.f32(float %200)\l  %202 = tail call i1 @llvm.amdgcn.class.f32(float %200, i32 516)\l  %203 = select i1 %202, float 0.000000e+00, float %201\l  %204 = fcmp oeq float %203, 0.000000e+00\l  %205 = and i1 %198, %204\l  %206 = zext i1 %205 to i32\l  %207 = add nuw nsw i32 %206, %199\l  %208 = icmp eq i32 %207, 1\l  %209 = fcmp olt float %46, 0.000000e+00\l  %210 = and i1 %209, %208\l  %211 = select i1 %210, float -0.000000e+00, float 0.000000e+00\l  %212 = tail call float @llvm.copysign.f32(float %195, float %211)\l  %213 = fcmp uge float %46, 0.000000e+00\l  %214 = icmp ne i32 %207, 0\l  %215 = select i1 %213, i1 true, i1 %214\l  %216 = select i1 %215, float %212, float 0x7FF8000000000000\l  %217 = fcmp oeq float %196, 0x7FF0000000000000\l  br i1 %217, label %218, label %227\l|{<s0>T|<s1>F}}"];
	Node0x493f0d0:s0 -> Node0x49497f0;
	Node0x493f0d0:s1 -> Node0x4949880;
	Node0x49497f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%218:\l218:                                              \l  %219 = fcmp oeq float %53, 1.000000e+00\l  %220 = fadd float %53, -1.000000e+00\l  %221 = bitcast float %52 to i32\l  %222 = bitcast float %220 to i32\l  %223 = xor i32 %222, %221\l  %224 = icmp sgt i32 %223, -1\l  %225 = select i1 %224, float 0x7FF0000000000000, float 0.000000e+00\l  %226 = select i1 %219, float %53, float %225\l  br label %227\l}"];
	Node0x49497f0 -> Node0x4949880;
	Node0x4949880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%227:\l227:                                              \l  %228 = phi float [ %216, %40 ], [ %226, %218 ]\l  %229 = fcmp oeq float %53, 0x7FF0000000000000\l  %230 = fcmp oeq float %46, 0.000000e+00\l  %231 = or i1 %230, %229\l  %232 = fcmp olt float %52, 0.000000e+00\l  %233 = xor i1 %230, %232\l  %234 = select i1 %233, float 0.000000e+00, float 0x7FF0000000000000\l  %235 = select i1 %208, float %46, float 0.000000e+00\l  %236 = tail call float @llvm.copysign.f32(float %234, float %235)\l  %237 = select i1 %231, float %236, float %228\l  %238 = fcmp uno float %46, %52\l  %239 = select i1 %238, float 0x7FF8000000000000, float %237\l  %240 = fcmp oeq float %46, 1.000000e+00\l  %241 = fcmp oeq float %52, 0.000000e+00\l  %242 = or i1 %240, %241\l  %243 = select i1 %242, float 1.000000e+00, float %239\l  %244 = add nsw i32 %21, %10\l  %245 = mul nsw i32 %29, %11\l  %246 = add nsw i32 %244, %245\l  %247 = sext i32 %246 to i64\l  %248 = getelementptr inbounds float, float addrspace(1)* %9, i64 %247\l  store float %243, float addrspace(1)* %248, align 4, !tbaa !7\l  br label %249\l}"];
	Node0x4949880 -> Node0x493bc40;
	Node0x493bc40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%249:\l249:                                              \l  ret void\l}"];
}
