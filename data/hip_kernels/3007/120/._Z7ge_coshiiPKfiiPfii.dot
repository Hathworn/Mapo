digraph "CFG for '_Z7ge_coshiiPKfiiPfii' function" {
	label="CFG for '_Z7ge_coshiiPKfiiPfii' function";

	Node0x4950a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %158\l|{<s0>T|<s1>F}}"];
	Node0x4950a20:s0 -> Node0x4954460;
	Node0x4950a20:s1 -> Node0x49544f0;
	Node0x4954460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = fadd float %36, 0xBFE62E4300000000\l  %38 = fsub float %37, %36\l  %39 = fsub float %38, %37\l  %40 = fadd float %36, %39\l  %41 = fadd float %38, 0x3FE62E4300000000\l  %42 = fsub float %40, %41\l  %43 = fadd float %42, 0x3E205C6100000000\l  %44 = fadd float %37, %43\l  %45 = fsub float %44, %37\l  %46 = fsub float %43, %45\l  %47 = fmul float %44, 0x3FF7154760000000\l  %48 = tail call float @llvm.rint.f32(float %47)\l  %49 = tail call float @llvm.fmuladd.f32(float %48, float 0xBFE62E4000000000,\l... float %44)\l  %50 = fadd float %46, %49\l  %51 = fsub float %50, %49\l  %52 = fsub float %46, %51\l  %53 = fmul float %48, 0x3EB7F78000000000\l  %54 = fsub float %50, %53\l  %55 = fsub float %50, %54\l  %56 = fsub float %55, %53\l  %57 = fadd float %52, %56\l  %58 = fadd float %54, %57\l  %59 = fsub float %58, %54\l  %60 = fsub float %57, %59\l  %61 = fmul float %48, 0x3DD473DE60000000\l  %62 = fsub float %58, %61\l  %63 = fsub float %58, %62\l  %64 = fsub float %63, %61\l  %65 = fadd float %60, %64\l  %66 = fadd float %62, %65\l  %67 = fsub float %66, %62\l  %68 = fsub float %65, %67\l  %69 = tail call float @llvm.fmuladd.f32(float %66, float 0x3F56850E40000000,\l... float 0x3F8123BCC0000000)\l  %70 = tail call float @llvm.fmuladd.f32(float %66, float %69, float\l... 0x3FA555B980000000)\l  %71 = tail call float @llvm.fmuladd.f32(float %66, float %70, float\l... 0x3FC55548E0000000)\l  %72 = tail call float @llvm.fmuladd.f32(float %66, float %71, float\l... 0x3FDFFFFF80000000)\l  %73 = fmul float %66, %66\l  %74 = fneg float %73\l  %75 = tail call float @llvm.fma.f32(float %66, float %66, float %74)\l  %76 = fmul float %68, 2.000000e+00\l  %77 = tail call float @llvm.fma.f32(float %66, float %76, float %75)\l  %78 = fadd float %73, %77\l  %79 = fsub float %78, %73\l  %80 = fsub float %77, %79\l  %81 = fmul float %72, %78\l  %82 = fneg float %81\l  %83 = tail call float @llvm.fma.f32(float %78, float %72, float %82)\l  %84 = tail call float @llvm.fma.f32(float %80, float %72, float %83)\l  %85 = fadd float %81, %84\l  %86 = fsub float %85, %81\l  %87 = fsub float %84, %86\l  %88 = fadd float %66, %85\l  %89 = fsub float %88, %66\l  %90 = fsub float %85, %89\l  %91 = fadd float %68, %87\l  %92 = fadd float %91, %90\l  %93 = fadd float %88, %92\l  %94 = fsub float %93, %88\l  %95 = fsub float %92, %94\l  %96 = fadd float %93, 1.000000e+00\l  %97 = fadd float %96, -1.000000e+00\l  %98 = fsub float %93, %97\l  %99 = fadd float %95, %98\l  %100 = fadd float %96, %99\l  %101 = fsub float %100, %96\l  %102 = fsub float %99, %101\l  %103 = fptosi float %48 to i32\l  %104 = tail call float @llvm.amdgcn.ldexp.f32(float %100, i32 %103)\l  %105 = tail call float @llvm.amdgcn.ldexp.f32(float %102, i32 %103)\l  %106 = tail call float @llvm.amdgcn.rcp.f32(float %104)\l  %107 = fmul float %104, %106\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %106, float %104, float %108)\l  %110 = tail call float @llvm.fma.f32(float %106, float %105, float %109)\l  %111 = fadd float %107, %110\l  %112 = fsub float %111, %107\l  %113 = fsub float %110, %112\l  %114 = fsub float 1.000000e+00, %111\l  %115 = fsub float 1.000000e+00, %114\l  %116 = fsub float %115, %111\l  %117 = fsub float %116, %113\l  %118 = fadd float %114, %117\l  %119 = fmul float %106, %118\l  %120 = fmul float %104, %119\l  %121 = fneg float %120\l  %122 = tail call float @llvm.fma.f32(float %119, float %104, float %121)\l  %123 = tail call float @llvm.fma.f32(float %119, float %105, float %122)\l  %124 = fsub float %118, %114\l  %125 = fsub float %117, %124\l  %126 = fadd float %120, %123\l  %127 = fsub float %126, %120\l  %128 = fsub float %123, %127\l  %129 = fsub float %118, %126\l  %130 = fsub float %118, %129\l  %131 = fsub float %130, %126\l  %132 = fadd float %125, %131\l  %133 = fsub float %132, %128\l  %134 = fadd float %129, %133\l  %135 = fmul float %106, %134\l  %136 = fadd float %106, %119\l  %137 = fsub float %136, %106\l  %138 = fsub float %119, %137\l  %139 = fadd float %138, %135\l  %140 = fadd float %136, %139\l  %141 = fsub float %140, %136\l  %142 = fsub float %139, %141\l  %143 = tail call float @llvm.amdgcn.ldexp.f32(float %140, i32 -2)\l  %144 = tail call float @llvm.amdgcn.ldexp.f32(float %142, i32 -2)\l  %145 = fadd float %104, %143\l  %146 = fsub float %145, %104\l  %147 = fsub float %143, %146\l  %148 = fadd float %105, %144\l  %149 = fadd float %148, %147\l  %150 = fadd float %145, %149\l  %151 = fcmp ogt float %36, 0x40565A9F80000000\l  %152 = select i1 %151, float 0x7FF0000000000000, float %150\l  %153 = add nsw i32 %17, %6\l  %154 = mul nsw i32 %25, %7\l  %155 = add nsw i32 %153, %154\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds float, float addrspace(1)* %5, i64 %156\l  store float %152, float addrspace(1)* %157, align 4, !tbaa !7\l  br label %158\l}"];
	Node0x4954460 -> Node0x49544f0;
	Node0x49544f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%158:\l158:                                              \l  ret void\l}"];
}
