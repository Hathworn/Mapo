digraph "CFG for '_Z9uplo_sinhiiiPKfiiPfii' function" {
	label="CFG for '_Z9uplo_sinhiiiPKfiiPfii' function";

	Node0x5e8a150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %169\l|{<s0>T|<s1>F}}"];
	Node0x5e8a150:s0 -> Node0x5e8e710;
	Node0x5e8a150:s1 -> Node0x5e8e7a0;
	Node0x5e8e710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %169\l|{<s0>T|<s1>F}}"];
	Node0x5e8e710:s0 -> Node0x5e8c790;
	Node0x5e8e710:s1 -> Node0x5e8e7a0;
	Node0x5e8c790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fadd float %44, 0xBFE62E4300000000\l  %46 = fsub float %45, %44\l  %47 = fsub float %46, %45\l  %48 = fadd float %44, %47\l  %49 = fadd float %46, 0x3FE62E4300000000\l  %50 = fsub float %48, %49\l  %51 = fadd float %50, 0x3E205C6100000000\l  %52 = fadd float %45, %51\l  %53 = fsub float %52, %45\l  %54 = fsub float %51, %53\l  %55 = fmul float %52, 0x3FF7154760000000\l  %56 = tail call float @llvm.rint.f32(float %55)\l  %57 = tail call float @llvm.fmuladd.f32(float %56, float 0xBFE62E4000000000,\l... float %52)\l  %58 = fadd float %54, %57\l  %59 = fsub float %58, %57\l  %60 = fsub float %54, %59\l  %61 = fmul float %56, 0x3EB7F78000000000\l  %62 = fsub float %58, %61\l  %63 = fsub float %58, %62\l  %64 = fsub float %63, %61\l  %65 = fadd float %60, %64\l  %66 = fadd float %62, %65\l  %67 = fsub float %66, %62\l  %68 = fsub float %65, %67\l  %69 = fmul float %56, 0x3DD473DE60000000\l  %70 = fsub float %66, %69\l  %71 = fsub float %66, %70\l  %72 = fsub float %71, %69\l  %73 = fadd float %68, %72\l  %74 = fadd float %70, %73\l  %75 = fsub float %74, %70\l  %76 = fsub float %73, %75\l  %77 = tail call float @llvm.fmuladd.f32(float %74, float 0x3F56850E40000000,\l... float 0x3F8123BCC0000000)\l  %78 = tail call float @llvm.fmuladd.f32(float %74, float %77, float\l... 0x3FA555B980000000)\l  %79 = tail call float @llvm.fmuladd.f32(float %74, float %78, float\l... 0x3FC55548E0000000)\l  %80 = tail call float @llvm.fmuladd.f32(float %74, float %79, float\l... 0x3FDFFFFF80000000)\l  %81 = fmul float %74, %74\l  %82 = fneg float %81\l  %83 = tail call float @llvm.fma.f32(float %74, float %74, float %82)\l  %84 = fmul float %76, 2.000000e+00\l  %85 = tail call float @llvm.fma.f32(float %74, float %84, float %83)\l  %86 = fadd float %81, %85\l  %87 = fsub float %86, %81\l  %88 = fsub float %85, %87\l  %89 = fmul float %80, %86\l  %90 = fneg float %89\l  %91 = tail call float @llvm.fma.f32(float %86, float %80, float %90)\l  %92 = tail call float @llvm.fma.f32(float %88, float %80, float %91)\l  %93 = fadd float %89, %92\l  %94 = fsub float %93, %89\l  %95 = fsub float %92, %94\l  %96 = fadd float %74, %93\l  %97 = fsub float %96, %74\l  %98 = fsub float %93, %97\l  %99 = fadd float %76, %95\l  %100 = fadd float %99, %98\l  %101 = fadd float %96, %100\l  %102 = fsub float %101, %96\l  %103 = fsub float %100, %102\l  %104 = fadd float %101, 1.000000e+00\l  %105 = fadd float %104, -1.000000e+00\l  %106 = fsub float %101, %105\l  %107 = fadd float %103, %106\l  %108 = fadd float %104, %107\l  %109 = fsub float %108, %104\l  %110 = fsub float %107, %109\l  %111 = fptosi float %56 to i32\l  %112 = tail call float @llvm.amdgcn.ldexp.f32(float %108, i32 %111)\l  %113 = tail call float @llvm.amdgcn.ldexp.f32(float %110, i32 %111)\l  %114 = tail call float @llvm.amdgcn.rcp.f32(float %112)\l  %115 = fmul float %112, %114\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %114, float %112, float %116)\l  %118 = tail call float @llvm.fma.f32(float %114, float %113, float %117)\l  %119 = fadd float %115, %118\l  %120 = fsub float %119, %115\l  %121 = fsub float %118, %120\l  %122 = fsub float 1.000000e+00, %119\l  %123 = fsub float 1.000000e+00, %122\l  %124 = fsub float %123, %119\l  %125 = fsub float %124, %121\l  %126 = fadd float %122, %125\l  %127 = fmul float %114, %126\l  %128 = fmul float %112, %127\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %127, float %112, float %129)\l  %131 = tail call float @llvm.fma.f32(float %127, float %113, float %130)\l  %132 = fsub float %126, %122\l  %133 = fsub float %125, %132\l  %134 = fadd float %128, %131\l  %135 = fsub float %134, %128\l  %136 = fsub float %131, %135\l  %137 = fsub float %126, %134\l  %138 = fsub float %126, %137\l  %139 = fsub float %138, %134\l  %140 = fadd float %133, %139\l  %141 = fsub float %140, %136\l  %142 = fadd float %137, %141\l  %143 = fmul float %114, %142\l  %144 = fadd float %114, %127\l  %145 = fsub float %144, %114\l  %146 = fsub float %127, %145\l  %147 = fadd float %146, %143\l  %148 = fadd float %144, %147\l  %149 = fsub float %148, %144\l  %150 = fsub float %147, %149\l  %151 = tail call float @llvm.amdgcn.ldexp.f32(float %148, i32 -2)\l  %152 = tail call float @llvm.amdgcn.ldexp.f32(float %150, i32 -2)\l  %153 = fsub float %112, %151\l  %154 = fsub float %112, %153\l  %155 = fsub float %154, %151\l  %156 = fadd float %113, %155\l  %157 = fsub float %156, %152\l  %158 = fadd float %153, %157\l  %159 = fcmp ogt float %44, 0x40565A9F80000000\l  %160 = select i1 %159, float 0x7FF0000000000000, float %158\l  %161 = fcmp olt float %44, 0x3F30000000000000\l  %162 = select i1 %161, float %44, float %160\l  %163 = tail call float @llvm.copysign.f32(float %162, float %43)\l  %164 = add nsw i32 %18, %7\l  %165 = mul nsw i32 %26, %8\l  %166 = add nsw i32 %164, %165\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds float, float addrspace(1)* %6, i64 %167\l  store float %163, float addrspace(1)* %168, align 4, !tbaa !7\l  br label %169\l}"];
	Node0x5e8c790 -> Node0x5e8e7a0;
	Node0x5e8e7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%169:\l169:                                              \l  ret void\l}"];
}
