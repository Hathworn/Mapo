digraph "CFG for '_Z12vector_hypotiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z12vector_hypotiPKfiiS0_iiPfii' function";

	Node0x601fe80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %0\l  br i1 %20, label %21, label %50\l|{<s0>T|<s1>F}}"];
	Node0x601fe80:s0 -> Node0x6022950;
	Node0x601fe80:s1 -> Node0x60229e0;
	Node0x6022950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %19, %3\l  %23 = add nsw i32 %22, %2\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = mul nsw i32 %19, %6\l  %28 = add nsw i32 %27, %5\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = tail call float @llvm.fabs.f32(float %26)\l  %33 = tail call float @llvm.fabs.f32(float %31)\l  %34 = tail call float @llvm.maxnum.f32(float %32, float %33)\l  %35 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %34)\l  %36 = sub nsw i32 0, %35\l  %37 = tail call float @llvm.amdgcn.ldexp.f32(float %32, i32 %36)\l  %38 = tail call float @llvm.amdgcn.ldexp.f32(float %33, i32 %36)\l  %39 = fmul float %38, %38\l  %40 = tail call float @llvm.fmuladd.f32(float %37, float %37, float %39)\l  %41 = tail call float @llvm.sqrt.f32(float %40)\l  %42 = tail call float @llvm.amdgcn.ldexp.f32(float %41, i32 %35)\l  %43 = tail call float @llvm.fabs.f32(float %34) #3\l  %44 = fcmp oeq float %43, 0x7FF0000000000000\l  %45 = select i1 %44, float 0x7FF0000000000000, float %42\l  %46 = mul nsw i32 %19, %9\l  %47 = add nsw i32 %46, %8\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %7, i64 %48\l  store float %45, float addrspace(1)* %49, align 4, !tbaa !7\l  br label %50\l}"];
	Node0x6022950 -> Node0x60229e0;
	Node0x60229e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  ret void\l}"];
}
