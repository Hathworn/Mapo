digraph "CFG for '_Z12vector_asinhiPKfiiPfii' function" {
	label="CFG for '_Z12vector_asinhiPKfiiPfii' function";

	Node0x5f0ddd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %182\l|{<s0>T|<s1>F}}"];
	Node0x5f0ddd0:s0 -> Node0x5f0fd00;
	Node0x5f0ddd0:s1 -> Node0x5f0fd90;
	Node0x5f0fd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = fcmp oge float %24, 0x43F0000000000000\l  %26 = select i1 %25, float 0x3BF0000000000000, float 1.000000e+00\l  %27 = fmul float %24, %26\l  %28 = fmul float %27, %27\l  %29 = fneg float %28\l  %30 = tail call float @llvm.fma.f32(float %27, float %27, float %29)\l  %31 = select i1 %25, float 0x37F0000000000000, float 1.000000e+00\l  %32 = fadd float %31, %28\l  %33 = fsub float %32, %28\l  %34 = fsub float %32, %33\l  %35 = fsub float %28, %34\l  %36 = fsub float %31, %33\l  %37 = fadd float %36, %35\l  %38 = fadd float %30, %37\l  %39 = fadd float %32, %38\l  %40 = tail call float @llvm.sqrt.f32(float %39)\l  %41 = fmul float %40, %40\l  %42 = fneg float %41\l  %43 = tail call float @llvm.fma.f32(float %40, float %40, float %42)\l  %44 = fsub float %39, %32\l  %45 = fsub float %38, %44\l  %46 = fsub float %39, %41\l  %47 = fsub float %39, %46\l  %48 = fsub float %47, %41\l  %49 = fadd float %45, %48\l  %50 = fsub float %49, %43\l  %51 = fadd float %46, %50\l  %52 = fmul float %40, 2.000000e+00\l  %53 = tail call float @llvm.amdgcn.rcp.f32(float %52)\l  %54 = fmul float %53, %51\l  %55 = fcmp oeq float %39, 0.000000e+00\l  %56 = select i1 %55, float 0.000000e+00, float %54\l  %57 = fadd float %40, %56\l  %58 = fsub float %57, %40\l  %59 = fsub float %56, %58\l  %60 = fadd float %27, %57\l  %61 = fsub float %60, %27\l  %62 = fsub float %60, %61\l  %63 = fsub float %27, %62\l  %64 = fsub float %57, %61\l  %65 = fadd float %64, %63\l  %66 = fadd float %59, %65\l  %67 = fadd float %60, %66\l  %68 = fsub float %67, %60\l  %69 = fsub float %66, %68\l  %70 = select i1 %25, i32 64, i32 0\l  %71 = tail call float @llvm.amdgcn.frexp.mant.f32(float %67)\l  %72 = fcmp olt float %71, 0x3FE5555560000000\l  %73 = sext i1 %72 to i32\l  %74 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %67)\l  %75 = add i32 %74, %73\l  %76 = sub nsw i32 0, %75\l  %77 = tail call float @llvm.amdgcn.ldexp.f32(float %67, i32 %76)\l  %78 = tail call float @llvm.amdgcn.ldexp.f32(float %69, i32 %76)\l  %79 = fadd float %77, -1.000000e+00\l  %80 = fadd float %79, 1.000000e+00\l  %81 = fsub float %77, %80\l  %82 = fadd float %78, %81\l  %83 = fadd float %79, %82\l  %84 = fsub float %83, %79\l  %85 = fsub float %82, %84\l  %86 = fadd float %77, 1.000000e+00\l  %87 = fadd float %86, -1.000000e+00\l  %88 = fsub float %77, %87\l  %89 = fadd float %78, %88\l  %90 = fadd float %86, %89\l  %91 = fsub float %90, %86\l  %92 = fsub float %89, %91\l  %93 = tail call float @llvm.amdgcn.rcp.f32(float %90)\l  %94 = fmul float %83, %93\l  %95 = fmul float %90, %94\l  %96 = fneg float %95\l  %97 = tail call float @llvm.fma.f32(float %94, float %90, float %96)\l  %98 = tail call float @llvm.fma.f32(float %94, float %92, float %97)\l  %99 = fadd float %95, %98\l  %100 = fsub float %99, %95\l  %101 = fsub float %98, %100\l  %102 = fsub float %83, %99\l  %103 = fsub float %83, %102\l  %104 = fsub float %103, %99\l  %105 = fadd float %85, %104\l  %106 = fsub float %105, %101\l  %107 = fadd float %102, %106\l  %108 = fmul float %93, %107\l  %109 = fmul float %90, %108\l  %110 = fneg float %109\l  %111 = tail call float @llvm.fma.f32(float %108, float %90, float %110)\l  %112 = tail call float @llvm.fma.f32(float %108, float %92, float %111)\l  %113 = fsub float %107, %102\l  %114 = fsub float %106, %113\l  %115 = fadd float %109, %112\l  %116 = fsub float %115, %109\l  %117 = fsub float %112, %116\l  %118 = fsub float %107, %115\l  %119 = fsub float %107, %118\l  %120 = fsub float %119, %115\l  %121 = fadd float %114, %120\l  %122 = fsub float %121, %117\l  %123 = fadd float %118, %122\l  %124 = fmul float %93, %123\l  %125 = fadd float %94, %108\l  %126 = fsub float %125, %94\l  %127 = fsub float %108, %126\l  %128 = fadd float %127, %124\l  %129 = fadd float %125, %128\l  %130 = fmul float %129, %129\l  %131 = tail call float @llvm.fmuladd.f32(float %130, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %132 = tail call float @llvm.fmuladd.f32(float %130, float %131, float\l... 0x3FE5555B40000000)\l  %133 = add nsw i32 %75, %70\l  %134 = sitofp i32 %133 to float\l  %135 = fmul float %134, 0x3FE62E4300000000\l  %136 = fneg float %135\l  %137 = tail call float @llvm.fma.f32(float %134, float 0x3FE62E4300000000,\l... float %136)\l  %138 = tail call float @llvm.fma.f32(float %134, float 0xBE205C6100000000,\l... float %137)\l  %139 = fsub float %129, %125\l  %140 = fsub float %128, %139\l  %141 = fadd float %135, %138\l  %142 = fsub float %141, %135\l  %143 = fsub float %138, %142\l  %144 = tail call float @llvm.amdgcn.ldexp.f32(float %129, i32 1)\l  %145 = tail call float @llvm.amdgcn.ldexp.f32(float %140, i32 1)\l  %146 = fmul float %129, %130\l  %147 = fmul float %146, %132\l  %148 = fadd float %144, %147\l  %149 = fsub float %148, %144\l  %150 = fsub float %147, %149\l  %151 = fadd float %145, %150\l  %152 = fadd float %148, %151\l  %153 = fsub float %152, %148\l  %154 = fsub float %151, %153\l  %155 = fadd float %141, %152\l  %156 = fsub float %155, %141\l  %157 = fsub float %155, %156\l  %158 = fsub float %141, %157\l  %159 = fsub float %152, %156\l  %160 = fadd float %159, %158\l  %161 = fadd float %143, %154\l  %162 = fsub float %161, %143\l  %163 = fsub float %161, %162\l  %164 = fsub float %143, %163\l  %165 = fsub float %154, %162\l  %166 = fadd float %165, %164\l  %167 = fadd float %161, %160\l  %168 = fadd float %155, %167\l  %169 = fsub float %168, %155\l  %170 = fsub float %167, %169\l  %171 = fadd float %166, %170\l  %172 = fadd float %168, %171\l  %173 = fcmp olt float %24, 0x3F30000000000000\l  %174 = tail call i1 @llvm.amdgcn.class.f32(float %24, i32 512)\l  %175 = select i1 %174, i1 true, i1 %173\l  %176 = select i1 %175, float %24, float %172\l  %177 = tail call float @llvm.copysign.f32(float %176, float %23)\l  %178 = mul nsw i32 %16, %6\l  %179 = add nsw i32 %178, %5\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %4, i64 %180\l  store float %177, float addrspace(1)* %181, align 4, !tbaa !7\l  br label %182\l}"];
	Node0x5f0fd00 -> Node0x5f0fd90;
	Node0x5f0fd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%182:\l182:                                              \l  ret void\l}"];
}
