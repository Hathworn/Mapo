digraph "CFG for '_Z8ge_atan2iiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z8ge_atan2iiPKfiiS0_iiPfii' function";

	Node0x4b695a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %0\l  %30 = icmp slt i32 %28, %1\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4b695a0:s0 -> Node0x4b6dbc0;
	Node0x4b695a0:s1 -> Node0x4b6dc50;
	Node0x4b6dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%32:\l32:                                               \l  %33 = add nsw i32 %20, %3\l  %34 = mul nsw i32 %28, %4\l  %35 = add nsw i32 %33, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %20, %6\l  %40 = mul nsw i32 %28, %7\l  %41 = add nsw i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = tail call float @llvm.fabs.f32(float %44)\l  %46 = tail call float @llvm.fabs.f32(float %38)\l  %47 = tail call float @llvm.minnum.f32(float %45, float %46)\l  %48 = tail call float @llvm.maxnum.f32(float %45, float %46)\l  %49 = fdiv float %47, %48, !fpmath !11\l  %50 = fmul float %49, %49\l  %51 = tail call float @llvm.fmuladd.f32(float %50, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %52 = tail call float @llvm.fmuladd.f32(float %50, float %51, float\l... 0x3FA53F67E0000000)\l  %53 = tail call float @llvm.fmuladd.f32(float %50, float %52, float\l... 0xBFB2FA9AE0000000)\l  %54 = tail call float @llvm.fmuladd.f32(float %50, float %53, float\l... 0x3FBB263640000000)\l  %55 = tail call float @llvm.fmuladd.f32(float %50, float %54, float\l... 0xBFC22C1CC0000000)\l  %56 = tail call float @llvm.fmuladd.f32(float %50, float %55, float\l... 0x3FC99717E0000000)\l  %57 = tail call float @llvm.fmuladd.f32(float %50, float %56, float\l... 0xBFD5554C40000000)\l  %58 = fmul float %50, %57\l  %59 = tail call float @llvm.fmuladd.f32(float %49, float %58, float %49)\l  %60 = fsub float 0x3FF921FB60000000, %59\l  %61 = fcmp ogt float %46, %45\l  %62 = select i1 %61, float %60, float %59\l  %63 = fsub float 0x400921FB60000000, %62\l  %64 = fcmp olt float %44, 0.000000e+00\l  %65 = select i1 %64, float %63, float %62\l  %66 = bitcast float %44 to i32\l  %67 = icmp slt i32 %66, 0\l  %68 = select i1 %67, float 0x400921FB60000000, float 0.000000e+00\l  %69 = fcmp oeq float %38, 0.000000e+00\l  %70 = select i1 %69, float %68, float %65\l  %71 = select i1 %64, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %72 = fcmp oeq float %45, 0x7FF0000000000000\l  %73 = fcmp oeq float %46, 0x7FF0000000000000\l  %74 = and i1 %73, %72\l  %75 = select i1 %74, float %71, float %70\l  %76 = fcmp uno float %44, %38\l  %77 = select i1 %76, float 0x7FF8000000000000, float %75\l  %78 = tail call float @llvm.copysign.f32(float %77, float %38)\l  %79 = add nsw i32 %20, %9\l  %80 = mul nsw i32 %28, %10\l  %81 = add nsw i32 %79, %80\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %8, i64 %82\l  store float %78, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4b6dbc0 -> Node0x4b6dc50;
	Node0x4b6dc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
