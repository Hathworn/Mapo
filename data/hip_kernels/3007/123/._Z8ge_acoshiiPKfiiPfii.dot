digraph "CFG for '_Z8ge_acoshiiPKfiiPfii' function" {
	label="CFG for '_Z8ge_acoshiiPKfiiPfii' function";

	Node0x4fa5f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %193\l|{<s0>T|<s1>F}}"];
	Node0x4fa5f90:s0 -> Node0x4fa99d0;
	Node0x4fa5f90:s1 -> Node0x4fa9a60;
	Node0x4fa99d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fcmp oge float %35, 0x43F0000000000000\l  %37 = select i1 %36, float 0x3BF0000000000000, float 1.000000e+00\l  %38 = fmul float %35, %37\l  %39 = fmul float %38, %38\l  %40 = fneg float %39\l  %41 = tail call float @llvm.fma.f32(float %38, float %38, float %40)\l  %42 = select i1 %36, float 0x37F0000000000000, float 1.000000e+00\l  %43 = fsub float %39, %42\l  %44 = fsub float %43, %39\l  %45 = fsub float %43, %44\l  %46 = fsub float %39, %45\l  %47 = fadd float %42, %44\l  %48 = fsub float %46, %47\l  %49 = fadd float %41, %48\l  %50 = fadd float %43, %49\l  %51 = tail call float @llvm.sqrt.f32(float %50)\l  %52 = fmul float %51, %51\l  %53 = fneg float %52\l  %54 = tail call float @llvm.fma.f32(float %51, float %51, float %53)\l  %55 = fsub float %50, %43\l  %56 = fsub float %49, %55\l  %57 = fsub float %50, %52\l  %58 = fsub float %50, %57\l  %59 = fsub float %58, %52\l  %60 = fadd float %56, %59\l  %61 = fsub float %60, %54\l  %62 = fadd float %57, %61\l  %63 = fmul float %51, 2.000000e+00\l  %64 = tail call float @llvm.amdgcn.rcp.f32(float %63)\l  %65 = fmul float %64, %62\l  %66 = fcmp oeq float %50, 0.000000e+00\l  %67 = select i1 %66, float 0.000000e+00, float %65\l  %68 = fadd float %51, %67\l  %69 = fsub float %68, %51\l  %70 = fsub float %67, %69\l  %71 = fadd float %38, %68\l  %72 = fsub float %71, %38\l  %73 = fsub float %71, %72\l  %74 = fsub float %38, %73\l  %75 = fsub float %68, %72\l  %76 = fadd float %75, %74\l  %77 = fadd float %70, %76\l  %78 = fadd float %71, %77\l  %79 = fsub float %78, %71\l  %80 = fsub float %77, %79\l  %81 = select i1 %36, i32 64, i32 0\l  %82 = tail call float @llvm.amdgcn.frexp.mant.f32(float %78)\l  %83 = fcmp olt float %82, 0x3FE5555560000000\l  %84 = sext i1 %83 to i32\l  %85 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %78)\l  %86 = add i32 %85, %84\l  %87 = sub nsw i32 0, %86\l  %88 = tail call float @llvm.amdgcn.ldexp.f32(float %78, i32 %87)\l  %89 = tail call float @llvm.amdgcn.ldexp.f32(float %80, i32 %87)\l  %90 = fadd float %88, -1.000000e+00\l  %91 = fadd float %90, 1.000000e+00\l  %92 = fsub float %88, %91\l  %93 = fadd float %89, %92\l  %94 = fadd float %90, %93\l  %95 = fsub float %94, %90\l  %96 = fsub float %93, %95\l  %97 = fadd float %88, 1.000000e+00\l  %98 = fadd float %97, -1.000000e+00\l  %99 = fsub float %88, %98\l  %100 = fadd float %89, %99\l  %101 = fadd float %97, %100\l  %102 = fsub float %101, %97\l  %103 = fsub float %100, %102\l  %104 = tail call float @llvm.amdgcn.rcp.f32(float %101)\l  %105 = fmul float %94, %104\l  %106 = fmul float %101, %105\l  %107 = fneg float %106\l  %108 = tail call float @llvm.fma.f32(float %105, float %101, float %107)\l  %109 = tail call float @llvm.fma.f32(float %105, float %103, float %108)\l  %110 = fadd float %106, %109\l  %111 = fsub float %110, %106\l  %112 = fsub float %109, %111\l  %113 = fsub float %94, %110\l  %114 = fsub float %94, %113\l  %115 = fsub float %114, %110\l  %116 = fadd float %96, %115\l  %117 = fsub float %116, %112\l  %118 = fadd float %113, %117\l  %119 = fmul float %104, %118\l  %120 = fmul float %101, %119\l  %121 = fneg float %120\l  %122 = tail call float @llvm.fma.f32(float %119, float %101, float %121)\l  %123 = tail call float @llvm.fma.f32(float %119, float %103, float %122)\l  %124 = fsub float %118, %113\l  %125 = fsub float %117, %124\l  %126 = fadd float %120, %123\l  %127 = fsub float %126, %120\l  %128 = fsub float %123, %127\l  %129 = fsub float %118, %126\l  %130 = fsub float %118, %129\l  %131 = fsub float %130, %126\l  %132 = fadd float %125, %131\l  %133 = fsub float %132, %128\l  %134 = fadd float %129, %133\l  %135 = fmul float %104, %134\l  %136 = fadd float %105, %119\l  %137 = fsub float %136, %105\l  %138 = fsub float %119, %137\l  %139 = fadd float %138, %135\l  %140 = fadd float %136, %139\l  %141 = fmul float %140, %140\l  %142 = tail call float @llvm.fmuladd.f32(float %141, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %143 = tail call float @llvm.fmuladd.f32(float %141, float %142, float\l... 0x3FE5555B40000000)\l  %144 = add nsw i32 %86, %81\l  %145 = sitofp i32 %144 to float\l  %146 = fmul float %145, 0x3FE62E4300000000\l  %147 = fneg float %146\l  %148 = tail call float @llvm.fma.f32(float %145, float 0x3FE62E4300000000,\l... float %147)\l  %149 = tail call float @llvm.fma.f32(float %145, float 0xBE205C6100000000,\l... float %148)\l  %150 = fsub float %140, %136\l  %151 = fsub float %139, %150\l  %152 = fadd float %146, %149\l  %153 = fsub float %152, %146\l  %154 = fsub float %149, %153\l  %155 = tail call float @llvm.amdgcn.ldexp.f32(float %140, i32 1)\l  %156 = tail call float @llvm.amdgcn.ldexp.f32(float %151, i32 1)\l  %157 = fmul float %140, %141\l  %158 = fmul float %157, %143\l  %159 = fadd float %155, %158\l  %160 = fsub float %159, %155\l  %161 = fsub float %158, %160\l  %162 = fadd float %156, %161\l  %163 = fadd float %159, %162\l  %164 = fsub float %163, %159\l  %165 = fsub float %162, %164\l  %166 = fadd float %152, %163\l  %167 = fsub float %166, %152\l  %168 = fsub float %166, %167\l  %169 = fsub float %152, %168\l  %170 = fsub float %163, %167\l  %171 = fadd float %170, %169\l  %172 = fadd float %154, %165\l  %173 = fsub float %172, %154\l  %174 = fsub float %172, %173\l  %175 = fsub float %154, %174\l  %176 = fsub float %165, %173\l  %177 = fadd float %176, %175\l  %178 = fadd float %172, %171\l  %179 = fadd float %166, %178\l  %180 = fsub float %179, %166\l  %181 = fsub float %178, %180\l  %182 = fadd float %177, %181\l  %183 = fadd float %179, %182\l  %184 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 512)\l  %185 = select i1 %184, float %35, float %183\l  %186 = fcmp olt float %35, 1.000000e+00\l  %187 = select i1 %186, float 0x7FF8000000000000, float %185\l  %188 = add nsw i32 %17, %6\l  %189 = mul nsw i32 %25, %7\l  %190 = add nsw i32 %188, %189\l  %191 = sext i32 %190 to i64\l  %192 = getelementptr inbounds float, float addrspace(1)* %5, i64 %191\l  store float %187, float addrspace(1)* %192, align 4, !tbaa !7\l  br label %193\l}"];
	Node0x4fa99d0 -> Node0x4fa9a60;
	Node0x4fa9a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%193:\l193:                                              \l  ret void\l}"];
}
