digraph "CFG for '_Z10vector_erfiPKfiiPfii' function" {
	label="CFG for '_Z10vector_erfiPKfiiPfii' function";

	Node0x59d0f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %65\l|{<s0>T|<s1>F}}"];
	Node0x59d0f70:s0 -> Node0x59d2ea0;
	Node0x59d0f70:s1 -> Node0x59d2f30;
	Node0x59d2ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = fcmp olt float %24, 1.000000e+00\l  br i1 %25, label %26, label %34\l|{<s0>T|<s1>F}}"];
	Node0x59d2ea0:s0 -> Node0x59d4740;
	Node0x59d2ea0:s1 -> Node0x59d47d0;
	Node0x59d4740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = fmul float %23, %23\l  %28 = tail call float @llvm.fmuladd.f32(float %27, float 0xBF4268BC20000000,\l... float 0x3F74208280000000)\l  %29 = tail call float @llvm.fmuladd.f32(float %27, float %28, float\l... 0xBF9B593700000000)\l  %30 = tail call float @llvm.fmuladd.f32(float %27, float %29, float\l... 0x3FBCE077C0000000)\l  %31 = tail call float @llvm.fmuladd.f32(float %27, float %30, float\l... 0xBFD8126600000000)\l  %32 = tail call float @llvm.fmuladd.f32(float %27, float %31, float\l... 0x3FC06EBA00000000)\l  %33 = tail call float @llvm.fma.f32(float %24, float %32, float %24)\l  br label %58\l}"];
	Node0x59d4740 -> Node0x59d55b0;
	Node0x59d47d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = tail call float @llvm.fmuladd.f32(float %24, float 0x3EF1D31560000000,\l... float 0xBF38D12900000000)\l  %36 = tail call float @llvm.fmuladd.f32(float %24, float %35, float\l... 0x3F6F9A6D20000000)\l  %37 = tail call float @llvm.fmuladd.f32(float %24, float %36, float\l... 0xBF98C31640000000)\l  %38 = tail call float @llvm.fmuladd.f32(float %24, float %37, float\l... 0x3FBB4E9C80000000)\l  %39 = tail call float @llvm.fmuladd.f32(float %24, float %38, float\l... 0x3FE4515FA0000000)\l  %40 = tail call float @llvm.fmuladd.f32(float %24, float %39, float\l... 0x3FC078E500000000)\l  %41 = tail call float @llvm.fma.f32(float %24, float %40, float %24)\l  %42 = fneg float %41\l  %43 = fmul float %41, 0xBFF7154760000000\l  %44 = tail call float @llvm.rint.f32(float %43)\l  %45 = fcmp olt float %41, 0xC0562E4300000000\l  %46 = fcmp ogt float %41, 0x4059D1DA00000000\l  %47 = fneg float %43\l  %48 = tail call float @llvm.fma.f32(float %42, float 0x3FF7154760000000,\l... float %47)\l  %49 = tail call float @llvm.fma.f32(float %42, float 0x3E54AE0BE0000000,\l... float %48)\l  %50 = fsub float %43, %44\l  %51 = fadd float %49, %50\l  %52 = tail call float @llvm.exp2.f32(float %51)\l  %53 = fptosi float %44 to i32\l  %54 = tail call float @llvm.amdgcn.ldexp.f32(float %52, i32 %53)\l  %55 = fsub float 1.000000e+00, %54\l  %56 = select i1 %46, float 1.000000e+00, float %55\l  %57 = select i1 %45, float 0xFFF0000000000000, float %56\l  br label %58\l}"];
	Node0x59d47d0 -> Node0x59d55b0;
	Node0x59d55b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%58:\l58:                                               \l  %59 = phi float [ %33, %26 ], [ %57, %34 ]\l  %60 = tail call float @llvm.copysign.f32(float %59, float %23)\l  %61 = mul nsw i32 %16, %6\l  %62 = add nsw i32 %61, %5\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %4, i64 %63\l  store float %60, float addrspace(1)* %64, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x59d55b0 -> Node0x59d2f30;
	Node0x59d2f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%65:\l65:                                               \l  ret void\l}"];
}
