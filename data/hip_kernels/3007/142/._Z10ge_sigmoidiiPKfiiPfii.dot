digraph "CFG for '_Z10ge_sigmoidiiPKfiiPfii' function" {
	label="CFG for '_Z10ge_sigmoidiiPKfiiPfii' function";

	Node0x6180150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %74\l|{<s0>T|<s1>F}}"];
	Node0x6180150:s0 -> Node0x6183b90;
	Node0x6180150:s1 -> Node0x6183c20;
	Node0x6183b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fmul contract float %35, 5.000000e-01\l  %37 = tail call float @llvm.fabs.f32(float %36)\l  %38 = fcmp olt float %37, 6.250000e-01\l  br i1 %38, label %39, label %47\l|{<s0>T|<s1>F}}"];
	Node0x6183b90:s0 -> Node0x61850b0;
	Node0x6183b90:s1 -> Node0x6185140;
	Node0x61850b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%39:\l39:                                               \l  %40 = fmul float %36, %36\l  %41 = tail call float @llvm.fmuladd.f32(float %40, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %42 = tail call float @llvm.fmuladd.f32(float %40, float %41, float\l... 0xBFAB8389C0000000)\l  %43 = tail call float @llvm.fmuladd.f32(float %40, float %42, float\l... 0x3FC1107040000000)\l  %44 = tail call float @llvm.fmuladd.f32(float %40, float %43, float\l... 0xBFD5555320000000)\l  %45 = fmul float %37, %44\l  %46 = tail call float @llvm.fmuladd.f32(float %40, float %45, float %37)\l  br label %64\l}"];
	Node0x61850b0 -> Node0x6185c80;
	Node0x6185140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%47:\l47:                                               \l  %48 = fmul float %37, 2.000000e+00\l  %49 = fmul float %48, 0x3FF7154760000000\l  %50 = tail call float @llvm.rint.f32(float %49)\l  %51 = fcmp ogt float %48, 0x40562E4300000000\l  %52 = fneg float %49\l  %53 = tail call float @llvm.fma.f32(float %48, float 0x3FF7154760000000,\l... float %52)\l  %54 = tail call float @llvm.fma.f32(float %48, float 0x3E54AE0BE0000000,\l... float %53)\l  %55 = fsub float %49, %50\l  %56 = fadd float %54, %55\l  %57 = tail call float @llvm.exp2.f32(float %56)\l  %58 = fptosi float %50 to i32\l  %59 = tail call float @llvm.amdgcn.ldexp.f32(float %57, i32 %58)\l  %60 = fadd float %59, 1.000000e+00\l  %61 = select i1 %51, float 0x7FF0000000000000, float %60\l  %62 = tail call float @llvm.amdgcn.rcp.f32(float %61)\l  %63 = tail call float @llvm.fmuladd.f32(float %62, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %64\l}"];
	Node0x6185140 -> Node0x6185c80;
	Node0x6185c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%64:\l64:                                               \l  %65 = phi float [ %46, %39 ], [ %63, %47 ]\l  %66 = tail call float @llvm.copysign.f32(float %65, float %36)\l  %67 = fmul contract float %66, 5.000000e-01\l  %68 = fadd contract float %67, 5.000000e-01\l  %69 = add nsw i32 %17, %6\l  %70 = mul nsw i32 %25, %7\l  %71 = add nsw i32 %69, %70\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %5, i64 %72\l  store float %68, float addrspace(1)* %73, align 4, !tbaa !7\l  br label %74\l}"];
	Node0x6185c80 -> Node0x6183c20;
	Node0x6183c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  ret void\l}"];
}
