digraph "CFG for '_Z9uplo_fremiiiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z9uplo_fremiiiPKfiiS0_iiPfii' function";

	Node0x4d270d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %21, %0\l  %31 = icmp slt i32 %29, %0\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4d270d0:s0 -> Node0x4d28870;
	Node0x4d270d0:s1 -> Node0x4d28900;
	Node0x4d28870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %1, 132\l  %35 = mul nsw i32 %21, %2\l  %36 = mul nsw i32 %29, %2\l  %37 = icmp sgt i32 %35, %36\l  %38 = icmp sge i32 %35, %36\l  %39 = select i1 %34, i1 %37, i1 %38\l  br i1 %39, label %40, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4d28870:s0 -> Node0x4d2bd90;
	Node0x4d28870:s1 -> Node0x4d28900;
	Node0x4d2bd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%40:\l40:                                               \l  %41 = add nsw i32 %21, %4\l  %42 = mul nsw i32 %29, %5\l  %43 = add nsw i32 %41, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = add nsw i32 %21, %7\l  %48 = mul nsw i32 %29, %8\l  %49 = add nsw i32 %47, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = tail call float @llvm.fabs.f32(float %46)\l  %54 = tail call float @llvm.fabs.f32(float %52)\l  %55 = fcmp ogt float %53, %54\l  br i1 %55, label %56, label %109\l|{<s0>T|<s1>F}}"];
	Node0x4d2bd90:s0 -> Node0x4d2d090;
	Node0x4d2bd90:s1 -> Node0x4d2d120;
	Node0x4d2d090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%56:\l56:                                               \l  %57 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %53)\l  %58 = tail call float @llvm.amdgcn.frexp.mant.f32(float %53)\l  %59 = tail call float @llvm.amdgcn.ldexp.f32(float %58, i32 12)\l  %60 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %54)\l  %61 = add nsw i32 %60, -1\l  %62 = tail call float @llvm.amdgcn.frexp.mant.f32(float %54)\l  %63 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 1)\l  %64 = sub i32 %57, %60\l  %65 = tail call float @llvm.amdgcn.rcp.f32(float %63)\l  %66 = icmp sgt i32 %64, 12\l  br i1 %66, label %67, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4d2d090:s0 -> Node0x4d2b8c0;
	Node0x4d2d090:s1 -> Node0x4d2e280;
	Node0x4d2b8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi float [ %77, %67 ], [ %59, %56 ]\l  %69 = phi i32 [ %78, %67 ], [ %64, %56 ]\l  %70 = fmul float %65, %68\l  %71 = tail call float @llvm.rint.f32(float %70)\l  %72 = fneg float %71\l  %73 = tail call float @llvm.fma.f32(float %72, float %63, float %68)\l  %74 = fcmp olt float %73, 0.000000e+00\l  %75 = select i1 %74, float %63, float -0.000000e+00\l  %76 = fadd float %73, %75\l  %77 = tail call float @llvm.amdgcn.ldexp.f32(float %76, i32 12)\l  %78 = add nsw i32 %69, -12\l  %79 = icmp ugt i32 %69, 24\l  br i1 %79, label %67, label %80\l|{<s0>T|<s1>F}}"];
	Node0x4d2b8c0:s0 -> Node0x4d2b8c0;
	Node0x4d2b8c0:s1 -> Node0x4d2e280;
	Node0x4d2e280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%80:\l80:                                               \l  %81 = phi i32 [ %64, %56 ], [ %78, %67 ]\l  %82 = phi float [ %59, %56 ], [ %77, %67 ]\l  %83 = add nsw i32 %81, -11\l  %84 = tail call float @llvm.amdgcn.ldexp.f32(float %82, i32 %83)\l  %85 = fmul float %65, %84\l  %86 = tail call float @llvm.rint.f32(float %85)\l  %87 = fneg float %86\l  %88 = tail call float @llvm.fma.f32(float %87, float %63, float %84)\l  %89 = fcmp olt float %88, 0.000000e+00\l  %90 = select i1 %89, float %63, float -0.000000e+00\l  %91 = fadd float %88, %90\l  %92 = fptosi float %86 to i32\l  %93 = fmul float %91, 2.000000e+00\l  %94 = fcmp ogt float %93, %63\l  %95 = and i32 %92, 1\l  %96 = icmp ne i32 %95, 0\l  %97 = xor i1 %89, %96\l  %98 = fcmp oeq float %93, %63\l  %99 = and i1 %97, %98\l  %100 = or i1 %94, %99\l  %101 = select i1 %100, float %63, float 0.000000e+00\l  %102 = fsub float %91, %101\l  %103 = tail call float @llvm.amdgcn.ldexp.f32(float %102, i32 %61)\l  %104 = bitcast float %46 to i32\l  %105 = and i32 %104, -2147483648\l  %106 = bitcast float %103 to i32\l  %107 = xor i32 %105, %106\l  %108 = bitcast i32 %107 to float\l  br label %129\l}"];
	Node0x4d2e280 -> Node0x4d30d30;
	Node0x4d2d120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%109:\l109:                                              \l  %110 = fcmp olt float %54, 0x47E0000000000000\l  %111 = fmul float %53, 2.000000e+00\l  %112 = fcmp ogt float %111, %54\l  %113 = and i1 %110, %112\l  %114 = fmul float %54, 5.000000e-01\l  %115 = fcmp ogt float %53, %114\l  %116 = or i1 %115, %113\l  %117 = bitcast float %46 to i32\l  %118 = bitcast float %52 to i32\l  %119 = xor i32 %118, %117\l  %120 = ashr i32 %119, 30\l  %121 = or i32 %120, 1\l  %122 = sitofp i32 %121 to float\l  %123 = fneg float %122\l  %124 = tail call float @llvm.fmuladd.f32(float %52, float %123, float %46)\l  %125 = select i1 %116, float %124, float %46\l  %126 = fcmp oeq float %53, %54\l  %127 = tail call float @llvm.copysign.f32(float 0.000000e+00, float %46)\l  %128 = select i1 %126, float %127, float %125\l  br label %129\l}"];
	Node0x4d2d120 -> Node0x4d30d30;
	Node0x4d30d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%129:\l129:                                              \l  %130 = phi float [ %108, %80 ], [ %128, %109 ]\l  %131 = fcmp oeq float %52, 0.000000e+00\l  %132 = select i1 %131, float 0x7FF8000000000000, float %130\l  %133 = fcmp ord float %52, 0.000000e+00\l  %134 = tail call i1 @llvm.amdgcn.class.f32(float %46, i32 504)\l  %135 = select i1 %133, i1 %134, i1 false\l  %136 = select i1 %135, float %132, float 0x7FF8000000000000\l  %137 = add nsw i32 %21, %10\l  %138 = mul nsw i32 %29, %11\l  %139 = add nsw i32 %137, %138\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %9, i64 %140\l  store float %136, float addrspace(1)* %141, align 4, !tbaa !7\l  br label %142\l}"];
	Node0x4d30d30 -> Node0x4d28900;
	Node0x4d28900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{%142:\l142:                                              \l  ret void\l}"];
}
