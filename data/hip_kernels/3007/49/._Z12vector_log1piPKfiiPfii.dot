digraph "CFG for '_Z12vector_log1piPKfiiPfii' function" {
	label="CFG for '_Z12vector_log1piPKfiiPfii' function";

	Node0x63ad760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %144\l|{<s0>T|<s1>F}}"];
	Node0x63ad760:s0 -> Node0x63af690;
	Node0x63ad760:s1 -> Node0x63af720;
	Node0x63af690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fadd float %23, 1.000000e+00\l  %25 = fadd float %24, -1.000000e+00\l  %26 = fsub float %25, %24\l  %27 = fadd float %26, 1.000000e+00\l  %28 = fsub float %23, %25\l  %29 = fadd float %28, %27\l  %30 = tail call float @llvm.amdgcn.frexp.mant.f32(float %24)\l  %31 = fcmp olt float %30, 0x3FE5555560000000\l  %32 = sext i1 %31 to i32\l  %33 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %24)\l  %34 = add i32 %33, %32\l  %35 = sub nsw i32 0, %34\l  %36 = tail call float @llvm.amdgcn.ldexp.f32(float %24, i32 %35)\l  %37 = tail call float @llvm.amdgcn.ldexp.f32(float %29, i32 %35)\l  %38 = fadd float %36, -1.000000e+00\l  %39 = fadd float %38, 1.000000e+00\l  %40 = fsub float %36, %39\l  %41 = fadd float %37, %40\l  %42 = fadd float %38, %41\l  %43 = fsub float %42, %38\l  %44 = fsub float %41, %43\l  %45 = fadd float %36, 1.000000e+00\l  %46 = fadd float %45, -1.000000e+00\l  %47 = fsub float %36, %46\l  %48 = fadd float %37, %47\l  %49 = fadd float %45, %48\l  %50 = fsub float %49, %45\l  %51 = fsub float %48, %50\l  %52 = tail call float @llvm.amdgcn.rcp.f32(float %49)\l  %53 = fmul float %42, %52\l  %54 = fmul float %49, %53\l  %55 = fneg float %54\l  %56 = tail call float @llvm.fma.f32(float %53, float %49, float %55)\l  %57 = tail call float @llvm.fma.f32(float %53, float %51, float %56)\l  %58 = fadd float %54, %57\l  %59 = fsub float %58, %54\l  %60 = fsub float %57, %59\l  %61 = fsub float %42, %58\l  %62 = fsub float %42, %61\l  %63 = fsub float %62, %58\l  %64 = fadd float %44, %63\l  %65 = fsub float %64, %60\l  %66 = fadd float %61, %65\l  %67 = fmul float %52, %66\l  %68 = fmul float %49, %67\l  %69 = fneg float %68\l  %70 = tail call float @llvm.fma.f32(float %67, float %49, float %69)\l  %71 = tail call float @llvm.fma.f32(float %67, float %51, float %70)\l  %72 = fsub float %66, %61\l  %73 = fsub float %65, %72\l  %74 = fadd float %68, %71\l  %75 = fsub float %74, %68\l  %76 = fsub float %71, %75\l  %77 = fsub float %66, %74\l  %78 = fsub float %66, %77\l  %79 = fsub float %78, %74\l  %80 = fadd float %73, %79\l  %81 = fsub float %80, %76\l  %82 = fadd float %77, %81\l  %83 = fmul float %52, %82\l  %84 = fadd float %53, %67\l  %85 = fsub float %84, %53\l  %86 = fsub float %67, %85\l  %87 = fadd float %86, %83\l  %88 = fadd float %84, %87\l  %89 = fmul float %88, %88\l  %90 = tail call float @llvm.fmuladd.f32(float %89, float 0x3FD36DB580000000,\l... float 0x3FD992B460000000)\l  %91 = tail call float @llvm.fmuladd.f32(float %89, float %90, float\l... 0x3FE5555B40000000)\l  %92 = sitofp i32 %34 to float\l  %93 = fmul float %92, 0x3FE62E4300000000\l  %94 = fneg float %93\l  %95 = tail call float @llvm.fma.f32(float %92, float 0x3FE62E4300000000,\l... float %94)\l  %96 = tail call float @llvm.fma.f32(float %92, float 0xBE205C6100000000,\l... float %95)\l  %97 = fsub float %88, %84\l  %98 = fsub float %87, %97\l  %99 = fadd float %93, %96\l  %100 = fsub float %99, %93\l  %101 = fsub float %96, %100\l  %102 = tail call float @llvm.amdgcn.ldexp.f32(float %88, i32 1)\l  %103 = tail call float @llvm.amdgcn.ldexp.f32(float %98, i32 1)\l  %104 = fmul float %88, %89\l  %105 = fmul float %104, %91\l  %106 = fadd float %102, %105\l  %107 = fsub float %106, %102\l  %108 = fsub float %105, %107\l  %109 = fadd float %103, %108\l  %110 = fadd float %106, %109\l  %111 = fsub float %110, %106\l  %112 = fsub float %109, %111\l  %113 = fadd float %99, %110\l  %114 = fsub float %113, %99\l  %115 = fsub float %113, %114\l  %116 = fsub float %99, %115\l  %117 = fsub float %110, %114\l  %118 = fadd float %117, %116\l  %119 = fadd float %101, %112\l  %120 = fsub float %119, %101\l  %121 = fsub float %119, %120\l  %122 = fsub float %101, %121\l  %123 = fsub float %112, %120\l  %124 = fadd float %123, %122\l  %125 = fadd float %119, %118\l  %126 = fadd float %113, %125\l  %127 = fsub float %126, %113\l  %128 = fsub float %125, %127\l  %129 = fadd float %124, %128\l  %130 = fadd float %126, %129\l  %131 = tail call i1 @llvm.amdgcn.class.f32(float %23, i32 512)\l  %132 = select i1 %131, float %23, float %130\l  %133 = fcmp olt float %23, -1.000000e+00\l  %134 = select i1 %133, float 0x7FF8000000000000, float %132\l  %135 = fcmp oeq float %23, -1.000000e+00\l  %136 = select i1 %135, float 0xFFF0000000000000, float %134\l  %137 = tail call float @llvm.fabs.f32(float %23)\l  %138 = fcmp olt float %137, 0x3E70000000000000\l  %139 = select i1 %138, float %23, float %136\l  %140 = mul nsw i32 %16, %6\l  %141 = add nsw i32 %140, %5\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds float, float addrspace(1)* %4, i64 %142\l  store float %139, float addrspace(1)* %143, align 4, !tbaa !7\l  br label %144\l}"];
	Node0x63af690 -> Node0x63af720;
	Node0x63af720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%144:\l144:                                              \l  ret void\l}"];
}
