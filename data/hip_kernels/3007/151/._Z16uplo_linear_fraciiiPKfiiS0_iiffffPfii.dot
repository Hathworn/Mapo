digraph "CFG for '_Z16uplo_linear_fraciiiPKfiiS0_iiffffPfii' function" {
	label="CFG for '_Z16uplo_linear_fraciiiPKfiiS0_iiffffPfii' function";

	Node0x55cfd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %19 = getelementptr i8, i8 addrspace(4)* %18, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %17, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %25 = add i32 %23, %24\l  %26 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %27 = getelementptr i8, i8 addrspace(4)* %18, i64 6\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 2, !range !4, !invariant.load !5\l  %30 = zext i16 %29 to i32\l  %31 = mul i32 %26, %30\l  %32 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %33 = add i32 %31, %32\l  %34 = icmp slt i32 %25, %0\l  %35 = icmp slt i32 %33, %0\l  %36 = select i1 %34, i1 %35, i1 false\l  br i1 %36, label %37, label %67\l|{<s0>T|<s1>F}}"];
	Node0x55cfd10:s0 -> Node0x55cfbd0;
	Node0x55cfd10:s1 -> Node0x55d4570;
	Node0x55cfbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %1, 132\l  %39 = mul nsw i32 %25, %2\l  %40 = mul nsw i32 %33, %2\l  %41 = icmp sgt i32 %39, %40\l  %42 = icmp sge i32 %39, %40\l  %43 = select i1 %38, i1 %41, i1 %42\l  br i1 %43, label %44, label %67\l|{<s0>T|<s1>F}}"];
	Node0x55cfbd0:s0 -> Node0x55d4a60;
	Node0x55cfbd0:s1 -> Node0x55d4570;
	Node0x55d4a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%44:\l44:                                               \l  %45 = add nsw i32 %25, %4\l  %46 = mul nsw i32 %33, %5\l  %47 = add nsw i32 %45, %46\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fmul contract float %50, %9\l  %52 = fadd contract float %51, %10\l  %53 = add nsw i32 %25, %7\l  %54 = mul nsw i32 %33, %8\l  %55 = add nsw i32 %53, %54\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %6, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fmul contract float %58, %11\l  %60 = fadd contract float %59, %12\l  %61 = fdiv contract float %52, %60\l  %62 = add nsw i32 %25, %14\l  %63 = mul nsw i32 %33, %15\l  %64 = add nsw i32 %62, %63\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %13, i64 %65\l  store float %61, float addrspace(1)* %66, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x55d4a60 -> Node0x55d4570;
	Node0x55d4570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  ret void\l}"];
}
