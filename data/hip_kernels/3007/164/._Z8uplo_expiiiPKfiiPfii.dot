digraph "CFG for '_Z8uplo_expiiiPKfiiPfii' function" {
	label="CFG for '_Z8uplo_expiiiPKfiiPfii' function";

	Node0x57be000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %63\l|{<s0>T|<s1>F}}"];
	Node0x57be000:s0 -> Node0x57c25a0;
	Node0x57be000:s1 -> Node0x57c2630;
	Node0x57c25a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %63\l|{<s0>T|<s1>F}}"];
	Node0x57c25a0:s0 -> Node0x57c0620;
	Node0x57c25a0:s1 -> Node0x57c2630;
	Node0x57c0620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul float %43, 0x3FF7154760000000\l  %45 = tail call float @llvm.rint.f32(float %44)\l  %46 = fcmp ogt float %43, 0x40562E4300000000\l  %47 = fcmp olt float %43, 0xC059D1DA00000000\l  %48 = fneg float %44\l  %49 = tail call float @llvm.fma.f32(float %43, float 0x3FF7154760000000,\l... float %48)\l  %50 = tail call float @llvm.fma.f32(float %43, float 0x3E54AE0BE0000000,\l... float %49)\l  %51 = fsub float %44, %45\l  %52 = fadd float %50, %51\l  %53 = tail call float @llvm.exp2.f32(float %52)\l  %54 = fptosi float %45 to i32\l  %55 = tail call float @llvm.amdgcn.ldexp.f32(float %53, i32 %54)\l  %56 = select i1 %47, float 0.000000e+00, float %55\l  %57 = select i1 %46, float 0x7FF0000000000000, float %56\l  %58 = add nsw i32 %18, %7\l  %59 = mul nsw i32 %26, %8\l  %60 = add nsw i32 %58, %59\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %6, i64 %61\l  store float %57, float addrspace(1)* %62, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x57c0620 -> Node0x57c2630;
	Node0x57c2630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%63:\l63:                                               \l  ret void\l}"];
}
