digraph "CFG for '_Z21uplo_equals_no_transpiiiPKfiiS0_iiPi' function" {
	label="CFG for '_Z21uplo_equals_no_transpiiiPKfiiS0_iiPi' function";

	Node0x624ec80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %0\l  %29 = icmp slt i32 %27, %0\l  %30 = select i1 %28, i1 %29, i1 false\l  br i1 %30, label %31, label %55\l|{<s0>T|<s1>F}}"];
	Node0x624ec80:s0 -> Node0x6253270;
	Node0x624ec80:s1 -> Node0x6253300;
	Node0x6253270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %1, 132\l  %33 = mul nsw i32 %19, %2\l  %34 = mul nsw i32 %27, %2\l  %35 = icmp sgt i32 %33, %34\l  %36 = icmp sge i32 %33, %34\l  %37 = select i1 %32, i1 %35, i1 %36\l  br i1 %37, label %38, label %55\l|{<s0>T|<s1>F}}"];
	Node0x6253270:s0 -> Node0x6251270;
	Node0x6253270:s1 -> Node0x6253300;
	Node0x6251270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%38:\l38:                                               \l  %39 = add nsw i32 %19, %4\l  %40 = mul nsw i32 %27, %5\l  %41 = add nsw i32 %39, %40\l  %42 = add nsw i32 %19, %7\l  %43 = mul nsw i32 %27, %8\l  %44 = add nsw i32 %42, %43\l  %45 = sext i32 %41 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %3, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = sext i32 %44 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %6, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %51 = fcmp contract une float %47, %50\l  br i1 %51, label %52, label %55\l|{<s0>T|<s1>F}}"];
	Node0x6251270:s0 -> Node0x62548e0;
	Node0x6251270:s1 -> Node0x6253300;
	Node0x62548e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%52:\l52:                                               \l  %53 = load i32, i32 addrspace(1)* %9, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %54 = add nsw i32 %53, 1\l  store i32 %54, i32 addrspace(1)* %9, align 4, !tbaa !11\l  br label %55\l}"];
	Node0x62548e0 -> Node0x6253300;
	Node0x6253300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  ret void\l}"];
}
