digraph "CFG for '_Z13uplo_cdf_normiiiPKfiiPfii' function" {
	label="CFG for '_Z13uplo_cdf_normiiiPKfiiPfii' function";

	Node0x60a8e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %119\l|{<s0>T|<s1>F}}"];
	Node0x60a8e40:s0 -> Node0x60ad400;
	Node0x60a8e40:s1 -> Node0x60ad490;
	Node0x60ad400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %119\l|{<s0>T|<s1>F}}"];
	Node0x60ad400:s0 -> Node0x60ab480;
	Node0x60ad400:s1 -> Node0x60ad490;
	Node0x60ab480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fcmp ogt float %44, 0x402C572280000000\l  %46 = tail call float @llvm.copysign.f32(float 0x402C572280000000, float %43)\l  %47 = select i1 %45, float %46, float %43\l  %48 = fmul float %47, 0xBFE6A09E60000000\l  %49 = fneg float %48\l  %50 = tail call float @llvm.fma.f32(float %47, float 0xBFE6A09E60000000,\l... float %49)\l  %51 = tail call float @llvm.fma.f32(float %47, float 0xBE49FCEF40000000,\l... float %50)\l  %52 = fadd float %48, %51\l  %53 = fsub float %52, %48\l  %54 = fsub float %51, %53\l  %55 = tail call float @llvm.fabs.f32(float %52)\l  %56 = fneg float %52\l  %57 = fmul float %52, %56\l  %58 = fneg float %57\l  %59 = tail call float @llvm.fma.f32(float %56, float %52, float %58)\l  %60 = fmul float %57, 0x3FF7154760000000\l  %61 = tail call float @llvm.rint.f32(float %60)\l  %62 = fcmp ogt float %57, 0x40562E4300000000\l  %63 = fcmp olt float %57, 0xC059D1DA00000000\l  %64 = fneg float %60\l  %65 = tail call float @llvm.fma.f32(float %57, float 0x3FF7154760000000,\l... float %64)\l  %66 = tail call float @llvm.fma.f32(float %57, float 0x3E54AE0BE0000000,\l... float %65)\l  %67 = fsub float %60, %61\l  %68 = fadd float %66, %67\l  %69 = tail call float @llvm.exp2.f32(float %68)\l  %70 = fptosi float %61 to i32\l  %71 = tail call float @llvm.amdgcn.ldexp.f32(float %69, i32 %70)\l  %72 = select i1 %63, float 0.000000e+00, float %71\l  %73 = select i1 %62, float 0x7FF0000000000000, float %72\l  %74 = tail call float @llvm.fma.f32(float %73, float %59, float %73)\l  %75 = fadd float %55, -2.000000e+00\l  %76 = fadd float %55, 2.000000e+00\l  %77 = tail call float @llvm.amdgcn.rcp.f32(float %76)\l  %78 = fmul float %75, %77\l  %79 = fneg float %78\l  %80 = fadd float %78, 1.000000e+00\l  %81 = tail call float @llvm.fma.f32(float %80, float -2.000000e+00, float\l... %55)\l  %82 = tail call float @llvm.fma.f32(float %79, float %55, float %81)\l  %83 = tail call float @llvm.fma.f32(float %77, float %82, float %78)\l  %84 = tail call float @llvm.fmuladd.f32(float %83, float 0xBF3ADF1880000000,\l... float 0xBF545AEA60000000)\l  %85 = tail call float @llvm.fmuladd.f32(float %83, float %84, float\l... 0x3F55A5F680000000)\l  %86 = tail call float @llvm.fmuladd.f32(float %83, float %85, float\l... 0x3F81B44CE0000000)\l  %87 = tail call float @llvm.fmuladd.f32(float %83, float %86, float\l... 0xBF8082B620000000)\l  %88 = tail call float @llvm.fmuladd.f32(float %83, float %87, float\l... 0xBFABC14300000000)\l  %89 = tail call float @llvm.fmuladd.f32(float %83, float %88, float\l... 0x3FC4FFC540000000)\l  %90 = tail call float @llvm.fmuladd.f32(float %83, float %89, float\l... 0xBFC5407FA0000000)\l  %91 = tail call float @llvm.fmuladd.f32(float %83, float %90, float\l... 0xBFB7BF6160000000)\l  %92 = tail call float @llvm.fmuladd.f32(float %83, float %91, float\l... 0x3FD1BA0380000000)\l  %93 = fadd float %55, %55\l  %94 = fadd float %93, 1.000000e+00\l  %95 = tail call float @llvm.amdgcn.rcp.f32(float %94)\l  %96 = tail call float @llvm.fma.f32(float %92, float %95, float %95)\l  %97 = fneg float %96\l  %98 = tail call float @llvm.fma.f32(float %97, float %93, float 1.000000e+00)\l  %99 = fsub float %92, %96\l  %100 = fadd float %98, %99\l  %101 = tail call float @llvm.fma.f32(float %95, float %100, float %96)\l  %102 = fmul float %74, %101\l  %103 = fcmp ogt float %55, 0x40241BBF80000000\l  %104 = select i1 %103, float 0.000000e+00, float %102\l  %105 = fsub float 2.000000e+00, %104\l  %106 = fcmp olt float %52, 0.000000e+00\l  %107 = select i1 %106, float %105, float %104\l  %108 = fmul float %52, -2.000000e+00\l  %109 = fmul float %108, %107\l  %110 = fcmp oge float %47, -1.000000e+00\l  %111 = select i1 %110, float 0.000000e+00, float %109\l  %112 = tail call float @llvm.fma.f32(float %54, float %111, float %107)\l  %113 = fmul float %112, 5.000000e-01\l  %114 = add nsw i32 %18, %7\l  %115 = mul nsw i32 %26, %8\l  %116 = add nsw i32 %114, %115\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %6, i64 %117\l  store float %113, float addrspace(1)* %118, align 4, !tbaa !7\l  br label %119\l}"];
	Node0x60ab480 -> Node0x60ad490;
	Node0x60ad490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  ret void\l}"];
}
