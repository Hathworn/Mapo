digraph "CFG for '_Z8ge_log1piiPKfiiPfii' function" {
	label="CFG for '_Z8ge_log1piiPKfiiPfii' function";

	Node0x63c2aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %157\l|{<s0>T|<s1>F}}"];
	Node0x63c2aa0:s0 -> Node0x63c64e0;
	Node0x63c2aa0:s1 -> Node0x63c6570;
	Node0x63c64e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = fadd float %35, 1.000000e+00\l  %37 = fadd float %36, -1.000000e+00\l  %38 = fsub float %37, %36\l  %39 = fadd float %38, 1.000000e+00\l  %40 = fsub float %35, %37\l  %41 = fadd float %40, %39\l  %42 = tail call float @llvm.amdgcn.frexp.mant.f32(float %36)\l  %43 = fcmp olt float %42, 0x3FE5555560000000\l  %44 = sext i1 %43 to i32\l  %45 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %36)\l  %46 = add i32 %45, %44\l  %47 = sub nsw i32 0, %46\l  %48 = tail call float @llvm.amdgcn.ldexp.f32(float %36, i32 %47)\l  %49 = tail call float @llvm.amdgcn.ldexp.f32(float %41, i32 %47)\l  %50 = fadd float %48, -1.000000e+00\l  %51 = fadd float %50, 1.000000e+00\l  %52 = fsub float %48, %51\l  %53 = fadd float %49, %52\l  %54 = fadd float %50, %53\l  %55 = fsub float %54, %50\l  %56 = fsub float %53, %55\l  %57 = fadd float %48, 1.000000e+00\l  %58 = fadd float %57, -1.000000e+00\l  %59 = fsub float %48, %58\l  %60 = fadd float %49, %59\l  %61 = fadd float %57, %60\l  %62 = fsub float %61, %57\l  %63 = fsub float %60, %62\l  %64 = tail call float @llvm.amdgcn.rcp.f32(float %61)\l  %65 = fmul float %54, %64\l  %66 = fmul float %61, %65\l  %67 = fneg float %66\l  %68 = tail call float @llvm.fma.f32(float %65, float %61, float %67)\l  %69 = tail call float @llvm.fma.f32(float %65, float %63, float %68)\l  %70 = fadd float %66, %69\l  %71 = fsub float %70, %66\l  %72 = fsub float %69, %71\l  %73 = fsub float %54, %70\l  %74 = fsub float %54, %73\l  %75 = fsub float %74, %70\l  %76 = fadd float %56, %75\l  %77 = fsub float %76, %72\l  %78 = fadd float %73, %77\l  %79 = fmul float %64, %78\l  %80 = fmul float %61, %79\l  %81 = fneg float %80\l  %82 = tail call float @llvm.fma.f32(float %79, float %61, float %81)\l  %83 = tail call float @llvm.fma.f32(float %79, float %63, float %82)\l  %84 = fsub float %78, %73\l  %85 = fsub float %77, %84\l  %86 = fadd float %80, %83\l  %87 = fsub float %86, %80\l  %88 = fsub float %83, %87\l  %89 = fsub float %78, %86\l  %90 = fsub float %78, %89\l  %91 = fsub float %90, %86\l  %92 = fadd float %85, %91\l  %93 = fsub float %92, %88\l  %94 = fadd float %89, %93\l  %95 = fmul float %64, %94\l  %96 = fadd float %65, %79\l  %97 = fsub float %96, %65\l  %98 = fsub float %79, %97\l  %99 = fadd float %98, %95\l  %100 = fadd float %96, %99\l  %101 = fmul float %100, %100\l  %102 = tail call float @llvm.fmuladd.f32(float %101, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %103 = tail call float @llvm.fmuladd.f32(float %101, float %102, float\l... 0x3FE5555B40000000)\l  %104 = sitofp i32 %46 to float\l  %105 = fmul float %104, 0x3FE62E4300000000\l  %106 = fneg float %105\l  %107 = tail call float @llvm.fma.f32(float %104, float 0x3FE62E4300000000,\l... float %106)\l  %108 = tail call float @llvm.fma.f32(float %104, float 0xBE205C6100000000,\l... float %107)\l  %109 = fsub float %100, %96\l  %110 = fsub float %99, %109\l  %111 = fadd float %105, %108\l  %112 = fsub float %111, %105\l  %113 = fsub float %108, %112\l  %114 = tail call float @llvm.amdgcn.ldexp.f32(float %100, i32 1)\l  %115 = tail call float @llvm.amdgcn.ldexp.f32(float %110, i32 1)\l  %116 = fmul float %100, %101\l  %117 = fmul float %116, %103\l  %118 = fadd float %114, %117\l  %119 = fsub float %118, %114\l  %120 = fsub float %117, %119\l  %121 = fadd float %115, %120\l  %122 = fadd float %118, %121\l  %123 = fsub float %122, %118\l  %124 = fsub float %121, %123\l  %125 = fadd float %111, %122\l  %126 = fsub float %125, %111\l  %127 = fsub float %125, %126\l  %128 = fsub float %111, %127\l  %129 = fsub float %122, %126\l  %130 = fadd float %129, %128\l  %131 = fadd float %113, %124\l  %132 = fsub float %131, %113\l  %133 = fsub float %131, %132\l  %134 = fsub float %113, %133\l  %135 = fsub float %124, %132\l  %136 = fadd float %135, %134\l  %137 = fadd float %131, %130\l  %138 = fadd float %125, %137\l  %139 = fsub float %138, %125\l  %140 = fsub float %137, %139\l  %141 = fadd float %136, %140\l  %142 = fadd float %138, %141\l  %143 = tail call i1 @llvm.amdgcn.class.f32(float %35, i32 512)\l  %144 = select i1 %143, float %35, float %142\l  %145 = fcmp olt float %35, -1.000000e+00\l  %146 = select i1 %145, float 0x7FF8000000000000, float %144\l  %147 = fcmp oeq float %35, -1.000000e+00\l  %148 = select i1 %147, float 0xFFF0000000000000, float %146\l  %149 = tail call float @llvm.fabs.f32(float %35)\l  %150 = fcmp olt float %149, 0x3E70000000000000\l  %151 = select i1 %150, float %35, float %148\l  %152 = add nsw i32 %17, %6\l  %153 = mul nsw i32 %25, %7\l  %154 = add nsw i32 %152, %153\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds float, float addrspace(1)* %5, i64 %155\l  store float %151, float addrspace(1)* %156, align 4, !tbaa !7\l  br label %157\l}"];
	Node0x63c64e0 -> Node0x63c6570;
	Node0x63c6570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  ret void\l}"];
}
