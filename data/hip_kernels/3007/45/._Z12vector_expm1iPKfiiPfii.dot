digraph "CFG for '_Z12vector_expm1iPKfiiPfii' function" {
	label="CFG for '_Z12vector_expm1iPKfiiPfii' function";

	Node0x4cb29e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4cb29e0:s0 -> Node0x4cb4910;
	Node0x4cb29e0:s1 -> Node0x4cb49a0;
	Node0x4cb4910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fmul float %23, 0x3FF7154760000000\l  %25 = tail call float @llvm.rint.f32(float %24)\l  %26 = fneg float %25\l  %27 = tail call float @llvm.fma.f32(float %26, float 0x3FE62E4300000000,\l... float %23)\l  %28 = tail call float @llvm.fma.f32(float %26, float 0xBE205C6100000000,\l... float %27)\l  %29 = tail call float @llvm.fmuladd.f32(float %28, float 0x3F2A267620000000,\l... float 0x3F56D2E000000000)\l  %30 = tail call float @llvm.fmuladd.f32(float %28, float %29, float\l... 0x3F8110FF20000000)\l  %31 = tail call float @llvm.fmuladd.f32(float %28, float %30, float\l... 0x3FA5555020000000)\l  %32 = tail call float @llvm.fmuladd.f32(float %28, float %31, float\l... 0x3FC5555560000000)\l  %33 = tail call float @llvm.fmuladd.f32(float %28, float %32, float\l... 5.000000e-01)\l  %34 = fmul float %28, %33\l  %35 = tail call float @llvm.fma.f32(float %28, float %34, float %28)\l  %36 = fcmp oeq float %25, 1.280000e+02\l  %37 = fptosi float %25 to i32\l  %38 = select i1 %36, i32 127, i32 %37\l  %39 = tail call float @llvm.amdgcn.ldexp.f32(float 1.000000e+00, i32 %38)\l  %40 = fadd float %39, -1.000000e+00\l  %41 = tail call float @llvm.fma.f32(float %39, float %35, float %40)\l  %42 = fmul float %41, 2.000000e+00\l  %43 = select i1 %36, float %42, float %41\l  %44 = fcmp ogt float %23, 0x40562E42E0000000\l  %45 = select i1 %44, float 0x7FF0000000000000, float %43\l  %46 = fcmp olt float %23, -1.700000e+01\l  %47 = select i1 %46, float -1.000000e+00, float %45\l  %48 = mul nsw i32 %16, %6\l  %49 = add nsw i32 %48, %5\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  store float %47, float addrspace(1)* %51, align 4, !tbaa !7\l  br label %52\l}"];
	Node0x4cb4910 -> Node0x4cb49a0;
	Node0x4cb49a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  ret void\l}"];
}
