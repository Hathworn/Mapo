digraph "CFG for '_Z7ge_powxiiPKfiifPfii' function" {
	label="CFG for '_Z7ge_powxiiPKfiifPfii' function";

	Node0x5b42160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %1\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %233\l|{<s0>T|<s1>F}}"];
	Node0x5b42160:s0 -> Node0x5b46700;
	Node0x5b42160:s1 -> Node0x5b46790;
	Node0x5b46700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%30:\l30:                                               \l  %31 = add nsw i32 %18, %3\l  %32 = mul nsw i32 %26, %4\l  %33 = add nsw i32 %31, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = tail call float @llvm.fabs.f32(float %36)\l  %38 = tail call float @llvm.amdgcn.frexp.mant.f32(float %37)\l  %39 = fcmp olt float %38, 0x3FE5555560000000\l  %40 = zext i1 %39 to i32\l  %41 = tail call float @llvm.amdgcn.ldexp.f32(float %38, i32 %40)\l  %42 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %37)\l  %43 = sub nsw i32 %42, %40\l  %44 = fadd float %41, -1.000000e+00\l  %45 = fadd float %41, 1.000000e+00\l  %46 = fadd float %45, -1.000000e+00\l  %47 = fsub float %41, %46\l  %48 = tail call float @llvm.amdgcn.rcp.f32(float %45)\l  %49 = fmul float %44, %48\l  %50 = fmul float %45, %49\l  %51 = fneg float %50\l  %52 = tail call float @llvm.fma.f32(float %49, float %45, float %51)\l  %53 = tail call float @llvm.fma.f32(float %49, float %47, float %52)\l  %54 = fadd float %50, %53\l  %55 = fsub float %54, %50\l  %56 = fsub float %53, %55\l  %57 = fsub float %44, %54\l  %58 = fsub float %44, %57\l  %59 = fsub float %58, %54\l  %60 = fsub float %59, %56\l  %61 = fadd float %57, %60\l  %62 = fmul float %48, %61\l  %63 = fadd float %49, %62\l  %64 = fsub float %63, %49\l  %65 = fsub float %62, %64\l  %66 = fmul float %63, %63\l  %67 = fneg float %66\l  %68 = tail call float @llvm.fma.f32(float %63, float %63, float %67)\l  %69 = fmul float %65, 2.000000e+00\l  %70 = tail call float @llvm.fma.f32(float %63, float %69, float %68)\l  %71 = fadd float %66, %70\l  %72 = fsub float %71, %66\l  %73 = fsub float %70, %72\l  %74 = tail call float @llvm.fmuladd.f32(float %71, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %75 = tail call float @llvm.fmuladd.f32(float %71, float %74, float\l... 0x3FD999BDE0000000)\l  %76 = sitofp i32 %43 to float\l  %77 = fmul float %76, 0x3FE62E4300000000\l  %78 = fneg float %77\l  %79 = tail call float @llvm.fma.f32(float %76, float 0x3FE62E4300000000,\l... float %78)\l  %80 = tail call float @llvm.fma.f32(float %76, float 0xBE205C6100000000,\l... float %79)\l  %81 = fadd float %77, %80\l  %82 = fsub float %81, %77\l  %83 = fsub float %80, %82\l  %84 = tail call float @llvm.amdgcn.ldexp.f32(float %63, i32 1)\l  %85 = fmul float %63, %71\l  %86 = fneg float %85\l  %87 = tail call float @llvm.fma.f32(float %71, float %63, float %86)\l  %88 = tail call float @llvm.fma.f32(float %71, float %65, float %87)\l  %89 = tail call float @llvm.fma.f32(float %73, float %63, float %88)\l  %90 = fadd float %85, %89\l  %91 = fsub float %90, %85\l  %92 = fsub float %89, %91\l  %93 = fmul float %71, %75\l  %94 = fneg float %93\l  %95 = tail call float @llvm.fma.f32(float %71, float %75, float %94)\l  %96 = tail call float @llvm.fma.f32(float %73, float %75, float %95)\l  %97 = fadd float %93, %96\l  %98 = fsub float %97, %93\l  %99 = fsub float %96, %98\l  %100 = fadd float %97, 0x3FE5555540000000\l  %101 = fadd float %100, 0xBFE5555540000000\l  %102 = fsub float %97, %101\l  %103 = fadd float %99, 0x3E2E720200000000\l  %104 = fadd float %103, %102\l  %105 = fadd float %100, %104\l  %106 = fsub float %105, %100\l  %107 = fsub float %104, %106\l  %108 = fmul float %90, %105\l  %109 = fneg float %108\l  %110 = tail call float @llvm.fma.f32(float %90, float %105, float %109)\l  %111 = tail call float @llvm.fma.f32(float %90, float %107, float %110)\l  %112 = tail call float @llvm.fma.f32(float %92, float %105, float %111)\l  %113 = tail call float @llvm.amdgcn.ldexp.f32(float %65, i32 1)\l  %114 = fadd float %108, %112\l  %115 = fsub float %114, %108\l  %116 = fsub float %112, %115\l  %117 = fadd float %84, %114\l  %118 = fsub float %117, %84\l  %119 = fsub float %114, %118\l  %120 = fadd float %113, %116\l  %121 = fadd float %120, %119\l  %122 = fadd float %117, %121\l  %123 = fsub float %122, %117\l  %124 = fsub float %121, %123\l  %125 = fadd float %81, %122\l  %126 = fsub float %125, %81\l  %127 = fsub float %125, %126\l  %128 = fsub float %81, %127\l  %129 = fsub float %122, %126\l  %130 = fadd float %129, %128\l  %131 = fadd float %83, %124\l  %132 = fsub float %131, %83\l  %133 = fsub float %131, %132\l  %134 = fsub float %83, %133\l  %135 = fsub float %124, %132\l  %136 = fadd float %135, %134\l  %137 = fadd float %131, %130\l  %138 = fadd float %125, %137\l  %139 = fsub float %138, %125\l  %140 = fsub float %137, %139\l  %141 = fadd float %136, %140\l  %142 = fadd float %138, %141\l  %143 = fsub float %142, %138\l  %144 = fsub float %141, %143\l  %145 = fmul float %142, %5\l  %146 = fneg float %145\l  %147 = tail call float @llvm.fma.f32(float %5, float %142, float %146)\l  %148 = tail call float @llvm.fma.f32(float %5, float %144, float %147)\l  %149 = fadd float %145, %148\l  %150 = fsub float %149, %145\l  %151 = fsub float %148, %150\l  %152 = tail call float @llvm.fabs.f32(float %145) #3\l  %153 = fcmp oeq float %152, 0x7FF0000000000000\l  %154 = select i1 %153, float %145, float %149\l  %155 = tail call float @llvm.fabs.f32(float %154) #3\l  %156 = fcmp oeq float %155, 0x7FF0000000000000\l  %157 = select i1 %156, float 0.000000e+00, float %151\l  %158 = fcmp oeq float %154, 0x40562E4300000000\l  %159 = select i1 %158, float 0x3EE0000000000000, float 0.000000e+00\l  %160 = fsub float %154, %159\l  %161 = fadd float %159, %157\l  %162 = fmul float %160, 0x3FF7154760000000\l  %163 = tail call float @llvm.rint.f32(float %162)\l  %164 = fcmp ogt float %160, 0x40562E4300000000\l  %165 = fcmp olt float %160, 0xC059D1DA00000000\l  %166 = fneg float %162\l  %167 = tail call float @llvm.fma.f32(float %160, float 0x3FF7154760000000,\l... float %166)\l  %168 = tail call float @llvm.fma.f32(float %160, float 0x3E54AE0BE0000000,\l... float %167)\l  %169 = fsub float %162, %163\l  %170 = fadd float %168, %169\l  %171 = tail call float @llvm.exp2.f32(float %170)\l  %172 = fptosi float %163 to i32\l  %173 = tail call float @llvm.amdgcn.ldexp.f32(float %171, i32 %172)\l  %174 = select i1 %165, float 0.000000e+00, float %173\l  %175 = select i1 %164, float 0x7FF0000000000000, float %174\l  %176 = tail call float @llvm.fma.f32(float %175, float %161, float %175)\l  %177 = tail call float @llvm.fabs.f32(float %175) #3\l  %178 = fcmp oeq float %177, 0x7FF0000000000000\l  %179 = select i1 %178, float %175, float %176\l  %180 = tail call float @llvm.fabs.f32(float %5)\l  %181 = tail call float @llvm.trunc.f32(float %180)\l  %182 = fcmp oeq float %180, %181\l  %183 = zext i1 %182 to i32\l  %184 = fmul float %181, 5.000000e-01\l  %185 = tail call float @llvm.amdgcn.fract.f32(float %184)\l  %186 = tail call i1 @llvm.amdgcn.class.f32(float %184, i32 516)\l  %187 = select i1 %186, float 0.000000e+00, float %185\l  %188 = fcmp oeq float %187, 0.000000e+00\l  %189 = and i1 %182, %188\l  %190 = zext i1 %189 to i32\l  %191 = add nuw nsw i32 %190, %183\l  %192 = icmp eq i32 %191, 1\l  %193 = fcmp olt float %36, 0.000000e+00\l  %194 = and i1 %192, %193\l  %195 = select i1 %194, float -0.000000e+00, float 0.000000e+00\l  %196 = tail call float @llvm.copysign.f32(float %179, float %195)\l  %197 = fcmp uge float %36, 0.000000e+00\l  %198 = icmp ne i32 %191, 0\l  %199 = select i1 %197, i1 true, i1 %198\l  %200 = select i1 %199, float %196, float 0x7FF8000000000000\l  %201 = fcmp oeq float %180, 0x7FF0000000000000\l  br i1 %201, label %202, label %211\l|{<s0>T|<s1>F}}"];
	Node0x5b46700:s0 -> Node0x5b50690;
	Node0x5b46700:s1 -> Node0x5b50720;
	Node0x5b50690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%202:\l202:                                              \l  %203 = fcmp oeq float %37, 1.000000e+00\l  %204 = fadd float %37, -1.000000e+00\l  %205 = bitcast float %5 to i32\l  %206 = bitcast float %204 to i32\l  %207 = xor i32 %206, %205\l  %208 = icmp sgt i32 %207, -1\l  %209 = select i1 %208, float 0x7FF0000000000000, float 0.000000e+00\l  %210 = select i1 %203, float %37, float %209\l  br label %211\l}"];
	Node0x5b50690 -> Node0x5b50720;
	Node0x5b50720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%211:\l211:                                              \l  %212 = phi float [ %200, %30 ], [ %210, %202 ]\l  %213 = fcmp oeq float %37, 0x7FF0000000000000\l  %214 = fcmp oeq float %36, 0.000000e+00\l  %215 = or i1 %214, %213\l  %216 = fcmp olt float %5, 0.000000e+00\l  %217 = xor i1 %216, %214\l  %218 = select i1 %217, float 0.000000e+00, float 0x7FF0000000000000\l  %219 = select i1 %192, float %36, float 0.000000e+00\l  %220 = tail call float @llvm.copysign.f32(float %218, float %219)\l  %221 = select i1 %215, float %220, float %212\l  %222 = fcmp uno float %36, %5\l  %223 = select i1 %222, float 0x7FF8000000000000, float %221\l  %224 = fcmp oeq float %36, 1.000000e+00\l  %225 = fcmp oeq float %5, 0.000000e+00\l  %226 = or i1 %225, %224\l  %227 = select i1 %226, float 1.000000e+00, float %223\l  %228 = add nsw i32 %18, %7\l  %229 = mul nsw i32 %26, %8\l  %230 = add nsw i32 %228, %229\l  %231 = sext i32 %230 to i64\l  %232 = getelementptr inbounds float, float addrspace(1)* %6, i64 %231\l  store float %227, float addrspace(1)* %232, align 4, !tbaa !7\l  br label %233\l}"];
	Node0x5b50720 -> Node0x5b46790;
	Node0x5b46790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%233:\l233:                                              \l  ret void\l}"];
}
