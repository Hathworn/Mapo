digraph "CFG for '_Z11vector_erfciPKfiiPfii' function" {
	label="CFG for '_Z11vector_erfciPKfiiPfii' function";

	Node0x4c80140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4c80140:s0 -> Node0x4c82070;
	Node0x4c80140:s1 -> Node0x4c82100;
	Node0x4c82070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = fneg float %23\l  %26 = fmul float %23, %25\l  %27 = fneg float %26\l  %28 = tail call float @llvm.fma.f32(float %25, float %23, float %27)\l  %29 = fmul float %26, 0x3FF7154760000000\l  %30 = tail call float @llvm.rint.f32(float %29)\l  %31 = fcmp ogt float %26, 0x40562E4300000000\l  %32 = fcmp olt float %26, 0xC059D1DA00000000\l  %33 = fneg float %29\l  %34 = tail call float @llvm.fma.f32(float %26, float 0x3FF7154760000000,\l... float %33)\l  %35 = tail call float @llvm.fma.f32(float %26, float 0x3E54AE0BE0000000,\l... float %34)\l  %36 = fsub float %29, %30\l  %37 = fadd float %35, %36\l  %38 = tail call float @llvm.exp2.f32(float %37)\l  %39 = fptosi float %30 to i32\l  %40 = tail call float @llvm.amdgcn.ldexp.f32(float %38, i32 %39)\l  %41 = select i1 %32, float 0.000000e+00, float %40\l  %42 = select i1 %31, float 0x7FF0000000000000, float %41\l  %43 = tail call float @llvm.fma.f32(float %42, float %28, float %42)\l  %44 = fadd float %24, -2.000000e+00\l  %45 = fadd float %24, 2.000000e+00\l  %46 = tail call float @llvm.amdgcn.rcp.f32(float %45)\l  %47 = fmul float %44, %46\l  %48 = fneg float %47\l  %49 = fadd float %47, 1.000000e+00\l  %50 = tail call float @llvm.fma.f32(float %49, float -2.000000e+00, float\l... %24)\l  %51 = tail call float @llvm.fma.f32(float %48, float %24, float %50)\l  %52 = tail call float @llvm.fma.f32(float %46, float %51, float %47)\l  %53 = tail call float @llvm.fmuladd.f32(float %52, float 0xBF3ADF1880000000,\l... float 0xBF545AEA60000000)\l  %54 = tail call float @llvm.fmuladd.f32(float %52, float %53, float\l... 0x3F55A5F680000000)\l  %55 = tail call float @llvm.fmuladd.f32(float %52, float %54, float\l... 0x3F81B44CE0000000)\l  %56 = tail call float @llvm.fmuladd.f32(float %52, float %55, float\l... 0xBF8082B620000000)\l  %57 = tail call float @llvm.fmuladd.f32(float %52, float %56, float\l... 0xBFABC14300000000)\l  %58 = tail call float @llvm.fmuladd.f32(float %52, float %57, float\l... 0x3FC4FFC540000000)\l  %59 = tail call float @llvm.fmuladd.f32(float %52, float %58, float\l... 0xBFC5407FA0000000)\l  %60 = tail call float @llvm.fmuladd.f32(float %52, float %59, float\l... 0xBFB7BF6160000000)\l  %61 = tail call float @llvm.fmuladd.f32(float %52, float %60, float\l... 0x3FD1BA0380000000)\l  %62 = fadd float %24, %24\l  %63 = fadd float %62, 1.000000e+00\l  %64 = tail call float @llvm.amdgcn.rcp.f32(float %63)\l  %65 = tail call float @llvm.fma.f32(float %61, float %64, float %64)\l  %66 = fneg float %65\l  %67 = tail call float @llvm.fma.f32(float %66, float %62, float 1.000000e+00)\l  %68 = fsub float %61, %65\l  %69 = fadd float %67, %68\l  %70 = tail call float @llvm.fma.f32(float %64, float %69, float %65)\l  %71 = fmul float %43, %70\l  %72 = fcmp ogt float %24, 0x40241BBF80000000\l  %73 = select i1 %72, float 0.000000e+00, float %71\l  %74 = fsub float 2.000000e+00, %73\l  %75 = fcmp olt float %23, 0.000000e+00\l  %76 = select i1 %75, float %74, float %73\l  %77 = mul nsw i32 %16, %6\l  %78 = add nsw i32 %77, %5\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %4, i64 %79\l  store float %76, float addrspace(1)* %80, align 4, !tbaa !7\l  br label %81\l}"];
	Node0x4c82070 -> Node0x4c82100;
	Node0x4c82100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  ret void\l}"];
}
