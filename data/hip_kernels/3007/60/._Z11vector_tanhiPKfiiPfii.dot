digraph "CFG for '_Z11vector_tanhiPKfiiPfii' function" {
	label="CFG for '_Z11vector_tanhiPKfiiPfii' function";

	Node0x4e54d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %58\l|{<s0>T|<s1>F}}"];
	Node0x4e54d80:s0 -> Node0x4e56cb0;
	Node0x4e54d80:s1 -> Node0x4e56d40;
	Node0x4e56cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = fcmp olt float %24, 6.250000e-01\l  br i1 %25, label %26, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4e56cb0:s0 -> Node0x4e58550;
	Node0x4e56cb0:s1 -> Node0x4e585e0;
	Node0x4e58550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%26:\l26:                                               \l  %27 = fmul float %23, %23\l  %28 = tail call float @llvm.fmuladd.f32(float %27, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %29 = tail call float @llvm.fmuladd.f32(float %27, float %28, float\l... 0xBFAB8389C0000000)\l  %30 = tail call float @llvm.fmuladd.f32(float %27, float %29, float\l... 0x3FC1107040000000)\l  %31 = tail call float @llvm.fmuladd.f32(float %27, float %30, float\l... 0xBFD5555320000000)\l  %32 = fmul float %24, %31\l  %33 = tail call float @llvm.fmuladd.f32(float %27, float %32, float %24)\l  br label %51\l}"];
	Node0x4e58550 -> Node0x4e59250;
	Node0x4e585e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%34:\l34:                                               \l  %35 = fmul float %24, 2.000000e+00\l  %36 = fmul float %35, 0x3FF7154760000000\l  %37 = tail call float @llvm.rint.f32(float %36)\l  %38 = fcmp ogt float %35, 0x40562E4300000000\l  %39 = fneg float %36\l  %40 = tail call float @llvm.fma.f32(float %35, float 0x3FF7154760000000,\l... float %39)\l  %41 = tail call float @llvm.fma.f32(float %35, float 0x3E54AE0BE0000000,\l... float %40)\l  %42 = fsub float %36, %37\l  %43 = fadd float %41, %42\l  %44 = tail call float @llvm.exp2.f32(float %43)\l  %45 = fptosi float %37 to i32\l  %46 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %45)\l  %47 = fadd float %46, 1.000000e+00\l  %48 = select i1 %38, float 0x7FF0000000000000, float %47\l  %49 = tail call float @llvm.amdgcn.rcp.f32(float %48)\l  %50 = tail call float @llvm.fmuladd.f32(float %49, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %51\l}"];
	Node0x4e585e0 -> Node0x4e59250;
	Node0x4e59250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%51:\l51:                                               \l  %52 = phi float [ %33, %26 ], [ %50, %34 ]\l  %53 = tail call float @llvm.copysign.f32(float %52, float %23)\l  %54 = mul nsw i32 %16, %6\l  %55 = add nsw i32 %54, %5\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %4, i64 %56\l  store float %53, float addrspace(1)* %57, align 4, !tbaa !7\l  br label %58\l}"];
	Node0x4e59250 -> Node0x4e56d40;
	Node0x4e56d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  ret void\l}"];
}
