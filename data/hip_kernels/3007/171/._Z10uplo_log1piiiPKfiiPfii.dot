digraph "CFG for '_Z10uplo_log1piiiPKfiiPfii' function" {
	label="CFG for '_Z10uplo_log1piiiPKfiiPfii' function";

	Node0x5ebc0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %165\l|{<s0>T|<s1>F}}"];
	Node0x5ebc0a0:s0 -> Node0x5ec0660;
	Node0x5ebc0a0:s1 -> Node0x5ec06f0;
	Node0x5ec0660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %165\l|{<s0>T|<s1>F}}"];
	Node0x5ec0660:s0 -> Node0x5ebe6e0;
	Node0x5ec0660:s1 -> Node0x5ec06f0;
	Node0x5ebe6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fadd float %43, 1.000000e+00\l  %45 = fadd float %44, -1.000000e+00\l  %46 = fsub float %45, %44\l  %47 = fadd float %46, 1.000000e+00\l  %48 = fsub float %43, %45\l  %49 = fadd float %48, %47\l  %50 = tail call float @llvm.amdgcn.frexp.mant.f32(float %44)\l  %51 = fcmp olt float %50, 0x3FE5555560000000\l  %52 = sext i1 %51 to i32\l  %53 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %44)\l  %54 = add i32 %53, %52\l  %55 = sub nsw i32 0, %54\l  %56 = tail call float @llvm.amdgcn.ldexp.f32(float %44, i32 %55)\l  %57 = tail call float @llvm.amdgcn.ldexp.f32(float %49, i32 %55)\l  %58 = fadd float %56, -1.000000e+00\l  %59 = fadd float %58, 1.000000e+00\l  %60 = fsub float %56, %59\l  %61 = fadd float %57, %60\l  %62 = fadd float %58, %61\l  %63 = fsub float %62, %58\l  %64 = fsub float %61, %63\l  %65 = fadd float %56, 1.000000e+00\l  %66 = fadd float %65, -1.000000e+00\l  %67 = fsub float %56, %66\l  %68 = fadd float %57, %67\l  %69 = fadd float %65, %68\l  %70 = fsub float %69, %65\l  %71 = fsub float %68, %70\l  %72 = tail call float @llvm.amdgcn.rcp.f32(float %69)\l  %73 = fmul float %62, %72\l  %74 = fmul float %69, %73\l  %75 = fneg float %74\l  %76 = tail call float @llvm.fma.f32(float %73, float %69, float %75)\l  %77 = tail call float @llvm.fma.f32(float %73, float %71, float %76)\l  %78 = fadd float %74, %77\l  %79 = fsub float %78, %74\l  %80 = fsub float %77, %79\l  %81 = fsub float %62, %78\l  %82 = fsub float %62, %81\l  %83 = fsub float %82, %78\l  %84 = fadd float %64, %83\l  %85 = fsub float %84, %80\l  %86 = fadd float %81, %85\l  %87 = fmul float %72, %86\l  %88 = fmul float %69, %87\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %87, float %69, float %89)\l  %91 = tail call float @llvm.fma.f32(float %87, float %71, float %90)\l  %92 = fsub float %86, %81\l  %93 = fsub float %85, %92\l  %94 = fadd float %88, %91\l  %95 = fsub float %94, %88\l  %96 = fsub float %91, %95\l  %97 = fsub float %86, %94\l  %98 = fsub float %86, %97\l  %99 = fsub float %98, %94\l  %100 = fadd float %93, %99\l  %101 = fsub float %100, %96\l  %102 = fadd float %97, %101\l  %103 = fmul float %72, %102\l  %104 = fadd float %73, %87\l  %105 = fsub float %104, %73\l  %106 = fsub float %87, %105\l  %107 = fadd float %106, %103\l  %108 = fadd float %104, %107\l  %109 = fmul float %108, %108\l  %110 = tail call float @llvm.fmuladd.f32(float %109, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %111 = tail call float @llvm.fmuladd.f32(float %109, float %110, float\l... 0x3FE5555B40000000)\l  %112 = sitofp i32 %54 to float\l  %113 = fmul float %112, 0x3FE62E4300000000\l  %114 = fneg float %113\l  %115 = tail call float @llvm.fma.f32(float %112, float 0x3FE62E4300000000,\l... float %114)\l  %116 = tail call float @llvm.fma.f32(float %112, float 0xBE205C6100000000,\l... float %115)\l  %117 = fsub float %108, %104\l  %118 = fsub float %107, %117\l  %119 = fadd float %113, %116\l  %120 = fsub float %119, %113\l  %121 = fsub float %116, %120\l  %122 = tail call float @llvm.amdgcn.ldexp.f32(float %108, i32 1)\l  %123 = tail call float @llvm.amdgcn.ldexp.f32(float %118, i32 1)\l  %124 = fmul float %108, %109\l  %125 = fmul float %124, %111\l  %126 = fadd float %122, %125\l  %127 = fsub float %126, %122\l  %128 = fsub float %125, %127\l  %129 = fadd float %123, %128\l  %130 = fadd float %126, %129\l  %131 = fsub float %130, %126\l  %132 = fsub float %129, %131\l  %133 = fadd float %119, %130\l  %134 = fsub float %133, %119\l  %135 = fsub float %133, %134\l  %136 = fsub float %119, %135\l  %137 = fsub float %130, %134\l  %138 = fadd float %137, %136\l  %139 = fadd float %121, %132\l  %140 = fsub float %139, %121\l  %141 = fsub float %139, %140\l  %142 = fsub float %121, %141\l  %143 = fsub float %132, %140\l  %144 = fadd float %143, %142\l  %145 = fadd float %139, %138\l  %146 = fadd float %133, %145\l  %147 = fsub float %146, %133\l  %148 = fsub float %145, %147\l  %149 = fadd float %144, %148\l  %150 = fadd float %146, %149\l  %151 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 512)\l  %152 = select i1 %151, float %43, float %150\l  %153 = fcmp olt float %43, -1.000000e+00\l  %154 = select i1 %153, float 0x7FF8000000000000, float %152\l  %155 = fcmp oeq float %43, -1.000000e+00\l  %156 = select i1 %155, float 0xFFF0000000000000, float %154\l  %157 = tail call float @llvm.fabs.f32(float %43)\l  %158 = fcmp olt float %157, 0x3E70000000000000\l  %159 = select i1 %158, float %43, float %156\l  %160 = add nsw i32 %18, %7\l  %161 = mul nsw i32 %26, %8\l  %162 = add nsw i32 %160, %161\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds float, float addrspace(1)* %6, i64 %163\l  store float %159, float addrspace(1)* %164, align 4, !tbaa !7\l  br label %165\l}"];
	Node0x5ebe6e0 -> Node0x5ec06f0;
	Node0x5ec06f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%165:\l165:                                              \l  ret void\l}"];
}
