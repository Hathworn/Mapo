digraph "CFG for '_Z14vector_sigmoidiPKfiiPfii' function" {
	label="CFG for '_Z14vector_sigmoidiPKfiiPfii' function";

	Node0x545ee10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %61\l|{<s0>T|<s1>F}}"];
	Node0x545ee10:s0 -> Node0x5460d40;
	Node0x545ee10:s1 -> Node0x5460dd0;
	Node0x5460d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = fmul contract float %23, 5.000000e-01\l  %25 = tail call float @llvm.fabs.f32(float %24)\l  %26 = fcmp olt float %25, 6.250000e-01\l  br i1 %26, label %27, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5460d40:s0 -> Node0x54626b0;
	Node0x5460d40:s1 -> Node0x5462740;
	Node0x54626b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%27:\l27:                                               \l  %28 = fmul float %24, %24\l  %29 = tail call float @llvm.fmuladd.f32(float %28, float 0xBF7758E7A0000000,\l... float 0x3F95211920000000)\l  %30 = tail call float @llvm.fmuladd.f32(float %28, float %29, float\l... 0xBFAB8389C0000000)\l  %31 = tail call float @llvm.fmuladd.f32(float %28, float %30, float\l... 0x3FC1107040000000)\l  %32 = tail call float @llvm.fmuladd.f32(float %28, float %31, float\l... 0xBFD5555320000000)\l  %33 = fmul float %25, %32\l  %34 = tail call float @llvm.fmuladd.f32(float %28, float %33, float %25)\l  br label %52\l}"];
	Node0x54626b0 -> Node0x54633b0;
	Node0x5462740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%35:\l35:                                               \l  %36 = fmul float %25, 2.000000e+00\l  %37 = fmul float %36, 0x3FF7154760000000\l  %38 = tail call float @llvm.rint.f32(float %37)\l  %39 = fcmp ogt float %36, 0x40562E4300000000\l  %40 = fneg float %37\l  %41 = tail call float @llvm.fma.f32(float %36, float 0x3FF7154760000000,\l... float %40)\l  %42 = tail call float @llvm.fma.f32(float %36, float 0x3E54AE0BE0000000,\l... float %41)\l  %43 = fsub float %37, %38\l  %44 = fadd float %42, %43\l  %45 = tail call float @llvm.exp2.f32(float %44)\l  %46 = fptosi float %38 to i32\l  %47 = tail call float @llvm.amdgcn.ldexp.f32(float %45, i32 %46)\l  %48 = fadd float %47, 1.000000e+00\l  %49 = select i1 %39, float 0x7FF0000000000000, float %48\l  %50 = tail call float @llvm.amdgcn.rcp.f32(float %49)\l  %51 = tail call float @llvm.fmuladd.f32(float %50, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %52\l}"];
	Node0x5462740 -> Node0x54633b0;
	Node0x54633b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%52:\l52:                                               \l  %53 = phi float [ %34, %27 ], [ %51, %35 ]\l  %54 = tail call float @llvm.copysign.f32(float %53, float %24)\l  %55 = fmul contract float %54, 5.000000e-01\l  %56 = fadd contract float %55, 5.000000e-01\l  %57 = mul nsw i32 %16, %6\l  %58 = add nsw i32 %57, %5\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %4, i64 %59\l  store float %56, float addrspace(1)* %60, align 4, !tbaa !7\l  br label %61\l}"];
	Node0x54633b0 -> Node0x5460dd0;
	Node0x5460dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%61:\l61:                                               \l  ret void\l}"];
}
