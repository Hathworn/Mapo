digraph "CFG for '_Z10uplo_acoshiiiPKfiiPfii' function" {
	label="CFG for '_Z10uplo_acoshiiiPKfiiPfii' function";

	Node0x57ec5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %201\l|{<s0>T|<s1>F}}"];
	Node0x57ec5a0:s0 -> Node0x57f0b60;
	Node0x57ec5a0:s1 -> Node0x57f0bf0;
	Node0x57f0b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %201\l|{<s0>T|<s1>F}}"];
	Node0x57f0b60:s0 -> Node0x57eebe0;
	Node0x57f0b60:s1 -> Node0x57f0bf0;
	Node0x57eebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fcmp oge float %43, 0x43F0000000000000\l  %45 = select i1 %44, float 0x3BF0000000000000, float 1.000000e+00\l  %46 = fmul float %43, %45\l  %47 = fmul float %46, %46\l  %48 = fneg float %47\l  %49 = tail call float @llvm.fma.f32(float %46, float %46, float %48)\l  %50 = select i1 %44, float 0x37F0000000000000, float 1.000000e+00\l  %51 = fsub float %47, %50\l  %52 = fsub float %51, %47\l  %53 = fsub float %51, %52\l  %54 = fsub float %47, %53\l  %55 = fadd float %50, %52\l  %56 = fsub float %54, %55\l  %57 = fadd float %49, %56\l  %58 = fadd float %51, %57\l  %59 = tail call float @llvm.sqrt.f32(float %58)\l  %60 = fmul float %59, %59\l  %61 = fneg float %60\l  %62 = tail call float @llvm.fma.f32(float %59, float %59, float %61)\l  %63 = fsub float %58, %51\l  %64 = fsub float %57, %63\l  %65 = fsub float %58, %60\l  %66 = fsub float %58, %65\l  %67 = fsub float %66, %60\l  %68 = fadd float %64, %67\l  %69 = fsub float %68, %62\l  %70 = fadd float %65, %69\l  %71 = fmul float %59, 2.000000e+00\l  %72 = tail call float @llvm.amdgcn.rcp.f32(float %71)\l  %73 = fmul float %72, %70\l  %74 = fcmp oeq float %58, 0.000000e+00\l  %75 = select i1 %74, float 0.000000e+00, float %73\l  %76 = fadd float %59, %75\l  %77 = fsub float %76, %59\l  %78 = fsub float %75, %77\l  %79 = fadd float %46, %76\l  %80 = fsub float %79, %46\l  %81 = fsub float %79, %80\l  %82 = fsub float %46, %81\l  %83 = fsub float %76, %80\l  %84 = fadd float %83, %82\l  %85 = fadd float %78, %84\l  %86 = fadd float %79, %85\l  %87 = fsub float %86, %79\l  %88 = fsub float %85, %87\l  %89 = select i1 %44, i32 64, i32 0\l  %90 = tail call float @llvm.amdgcn.frexp.mant.f32(float %86)\l  %91 = fcmp olt float %90, 0x3FE5555560000000\l  %92 = sext i1 %91 to i32\l  %93 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %86)\l  %94 = add i32 %93, %92\l  %95 = sub nsw i32 0, %94\l  %96 = tail call float @llvm.amdgcn.ldexp.f32(float %86, i32 %95)\l  %97 = tail call float @llvm.amdgcn.ldexp.f32(float %88, i32 %95)\l  %98 = fadd float %96, -1.000000e+00\l  %99 = fadd float %98, 1.000000e+00\l  %100 = fsub float %96, %99\l  %101 = fadd float %97, %100\l  %102 = fadd float %98, %101\l  %103 = fsub float %102, %98\l  %104 = fsub float %101, %103\l  %105 = fadd float %96, 1.000000e+00\l  %106 = fadd float %105, -1.000000e+00\l  %107 = fsub float %96, %106\l  %108 = fadd float %97, %107\l  %109 = fadd float %105, %108\l  %110 = fsub float %109, %105\l  %111 = fsub float %108, %110\l  %112 = tail call float @llvm.amdgcn.rcp.f32(float %109)\l  %113 = fmul float %102, %112\l  %114 = fmul float %109, %113\l  %115 = fneg float %114\l  %116 = tail call float @llvm.fma.f32(float %113, float %109, float %115)\l  %117 = tail call float @llvm.fma.f32(float %113, float %111, float %116)\l  %118 = fadd float %114, %117\l  %119 = fsub float %118, %114\l  %120 = fsub float %117, %119\l  %121 = fsub float %102, %118\l  %122 = fsub float %102, %121\l  %123 = fsub float %122, %118\l  %124 = fadd float %104, %123\l  %125 = fsub float %124, %120\l  %126 = fadd float %121, %125\l  %127 = fmul float %112, %126\l  %128 = fmul float %109, %127\l  %129 = fneg float %128\l  %130 = tail call float @llvm.fma.f32(float %127, float %109, float %129)\l  %131 = tail call float @llvm.fma.f32(float %127, float %111, float %130)\l  %132 = fsub float %126, %121\l  %133 = fsub float %125, %132\l  %134 = fadd float %128, %131\l  %135 = fsub float %134, %128\l  %136 = fsub float %131, %135\l  %137 = fsub float %126, %134\l  %138 = fsub float %126, %137\l  %139 = fsub float %138, %134\l  %140 = fadd float %133, %139\l  %141 = fsub float %140, %136\l  %142 = fadd float %137, %141\l  %143 = fmul float %112, %142\l  %144 = fadd float %113, %127\l  %145 = fsub float %144, %113\l  %146 = fsub float %127, %145\l  %147 = fadd float %146, %143\l  %148 = fadd float %144, %147\l  %149 = fmul float %148, %148\l  %150 = tail call float @llvm.fmuladd.f32(float %149, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %151 = tail call float @llvm.fmuladd.f32(float %149, float %150, float\l... 0x3FE5555B40000000)\l  %152 = add nsw i32 %94, %89\l  %153 = sitofp i32 %152 to float\l  %154 = fmul float %153, 0x3FE62E4300000000\l  %155 = fneg float %154\l  %156 = tail call float @llvm.fma.f32(float %153, float 0x3FE62E4300000000,\l... float %155)\l  %157 = tail call float @llvm.fma.f32(float %153, float 0xBE205C6100000000,\l... float %156)\l  %158 = fsub float %148, %144\l  %159 = fsub float %147, %158\l  %160 = fadd float %154, %157\l  %161 = fsub float %160, %154\l  %162 = fsub float %157, %161\l  %163 = tail call float @llvm.amdgcn.ldexp.f32(float %148, i32 1)\l  %164 = tail call float @llvm.amdgcn.ldexp.f32(float %159, i32 1)\l  %165 = fmul float %148, %149\l  %166 = fmul float %165, %151\l  %167 = fadd float %163, %166\l  %168 = fsub float %167, %163\l  %169 = fsub float %166, %168\l  %170 = fadd float %164, %169\l  %171 = fadd float %167, %170\l  %172 = fsub float %171, %167\l  %173 = fsub float %170, %172\l  %174 = fadd float %160, %171\l  %175 = fsub float %174, %160\l  %176 = fsub float %174, %175\l  %177 = fsub float %160, %176\l  %178 = fsub float %171, %175\l  %179 = fadd float %178, %177\l  %180 = fadd float %162, %173\l  %181 = fsub float %180, %162\l  %182 = fsub float %180, %181\l  %183 = fsub float %162, %182\l  %184 = fsub float %173, %181\l  %185 = fadd float %184, %183\l  %186 = fadd float %180, %179\l  %187 = fadd float %174, %186\l  %188 = fsub float %187, %174\l  %189 = fsub float %186, %188\l  %190 = fadd float %185, %189\l  %191 = fadd float %187, %190\l  %192 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 512)\l  %193 = select i1 %192, float %43, float %191\l  %194 = fcmp olt float %43, 1.000000e+00\l  %195 = select i1 %194, float 0x7FF8000000000000, float %193\l  %196 = add nsw i32 %18, %7\l  %197 = mul nsw i32 %26, %8\l  %198 = add nsw i32 %196, %197\l  %199 = sext i32 %198 to i64\l  %200 = getelementptr inbounds float, float addrspace(1)* %6, i64 %199\l  store float %195, float addrspace(1)* %200, align 4, !tbaa !7\l  br label %201\l}"];
	Node0x57eebe0 -> Node0x57f0bf0;
	Node0x57f0bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%201:\l201:                                              \l  ret void\l}"];
}
