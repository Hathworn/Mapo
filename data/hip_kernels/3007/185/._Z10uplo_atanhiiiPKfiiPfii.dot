digraph "CFG for '_Z10uplo_atanhiiiPKfiiPfii' function" {
	label="CFG for '_Z10uplo_atanhiiiPKfiiPfii' function";

	Node0x48a6360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %11, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %26 = add i32 %24, %25\l  %27 = icmp slt i32 %18, %0\l  %28 = icmp slt i32 %26, %0\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %184\l|{<s0>T|<s1>F}}"];
	Node0x48a6360:s0 -> Node0x48aa920;
	Node0x48a6360:s1 -> Node0x48aa9b0;
	Node0x48aa920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%30:\l30:                                               \l  %31 = icmp eq i32 %1, 132\l  %32 = mul nsw i32 %18, %2\l  %33 = mul nsw i32 %26, %2\l  %34 = icmp sgt i32 %32, %33\l  %35 = icmp sge i32 %32, %33\l  %36 = select i1 %31, i1 %34, i1 %35\l  br i1 %36, label %37, label %184\l|{<s0>T|<s1>F}}"];
	Node0x48aa920:s0 -> Node0x48a89a0;
	Node0x48aa920:s1 -> Node0x48aa9b0;
	Node0x48a89a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = add nsw i32 %18, %4\l  %39 = mul nsw i32 %26, %5\l  %40 = add nsw i32 %38, %39\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = tail call float @llvm.fabs.f32(float %43)\l  %45 = fadd float %44, 1.000000e+00\l  %46 = fsub float 1.000000e+00, %44\l  %47 = fsub float 1.000000e+00, %46\l  %48 = fsub float %47, %44\l  %49 = tail call float @llvm.amdgcn.rcp.f32(float %46)\l  %50 = fmul float %45, %49\l  %51 = fmul float %46, %50\l  %52 = fneg float %51\l  %53 = tail call float @llvm.fma.f32(float %50, float %46, float %52)\l  %54 = tail call float @llvm.fma.f32(float %50, float %48, float %53)\l  %55 = fadd float %45, -1.000000e+00\l  %56 = fsub float %44, %55\l  %57 = fadd float %51, %54\l  %58 = fsub float %57, %51\l  %59 = fsub float %54, %58\l  %60 = fsub float %45, %57\l  %61 = fsub float %45, %60\l  %62 = fsub float %61, %57\l  %63 = fsub float %62, %59\l  %64 = fadd float %56, %63\l  %65 = fadd float %60, %64\l  %66 = fmul float %49, %65\l  %67 = fadd float %50, %66\l  %68 = fsub float %67, %50\l  %69 = fsub float %66, %68\l  %70 = tail call float @llvm.amdgcn.frexp.mant.f32(float %67)\l  %71 = fcmp olt float %70, 0x3FE5555560000000\l  %72 = sext i1 %71 to i32\l  %73 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %67)\l  %74 = add i32 %73, %72\l  %75 = sub nsw i32 0, %74\l  %76 = tail call float @llvm.amdgcn.ldexp.f32(float %67, i32 %75)\l  %77 = tail call float @llvm.amdgcn.ldexp.f32(float %69, i32 %75)\l  %78 = fadd float %76, -1.000000e+00\l  %79 = fadd float %78, 1.000000e+00\l  %80 = fsub float %76, %79\l  %81 = fadd float %77, %80\l  %82 = fadd float %78, %81\l  %83 = fsub float %82, %78\l  %84 = fsub float %81, %83\l  %85 = fadd float %76, 1.000000e+00\l  %86 = fadd float %85, -1.000000e+00\l  %87 = fsub float %76, %86\l  %88 = fadd float %77, %87\l  %89 = fadd float %85, %88\l  %90 = fsub float %89, %85\l  %91 = fsub float %88, %90\l  %92 = tail call float @llvm.amdgcn.rcp.f32(float %89)\l  %93 = fmul float %82, %92\l  %94 = fmul float %89, %93\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %93, float %89, float %95)\l  %97 = tail call float @llvm.fma.f32(float %93, float %91, float %96)\l  %98 = fadd float %94, %97\l  %99 = fsub float %98, %94\l  %100 = fsub float %97, %99\l  %101 = fsub float %82, %98\l  %102 = fsub float %82, %101\l  %103 = fsub float %102, %98\l  %104 = fadd float %84, %103\l  %105 = fsub float %104, %100\l  %106 = fadd float %101, %105\l  %107 = fmul float %92, %106\l  %108 = fmul float %89, %107\l  %109 = fneg float %108\l  %110 = tail call float @llvm.fma.f32(float %107, float %89, float %109)\l  %111 = tail call float @llvm.fma.f32(float %107, float %91, float %110)\l  %112 = fsub float %106, %101\l  %113 = fsub float %105, %112\l  %114 = fadd float %108, %111\l  %115 = fsub float %114, %108\l  %116 = fsub float %111, %115\l  %117 = fsub float %106, %114\l  %118 = fsub float %106, %117\l  %119 = fsub float %118, %114\l  %120 = fadd float %113, %119\l  %121 = fsub float %120, %116\l  %122 = fadd float %117, %121\l  %123 = fmul float %92, %122\l  %124 = fadd float %93, %107\l  %125 = fsub float %124, %93\l  %126 = fsub float %107, %125\l  %127 = fadd float %126, %123\l  %128 = fadd float %124, %127\l  %129 = fmul float %128, %128\l  %130 = tail call float @llvm.fmuladd.f32(float %129, float\l... 0x3FD36DB580000000, float 0x3FD992B460000000)\l  %131 = tail call float @llvm.fmuladd.f32(float %129, float %130, float\l... 0x3FE5555B40000000)\l  %132 = sitofp i32 %74 to float\l  %133 = fmul float %132, 0x3FE62E4300000000\l  %134 = fneg float %133\l  %135 = tail call float @llvm.fma.f32(float %132, float 0x3FE62E4300000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %132, float 0xBE205C6100000000,\l... float %135)\l  %137 = fsub float %128, %124\l  %138 = fsub float %127, %137\l  %139 = fadd float %133, %136\l  %140 = fsub float %139, %133\l  %141 = fsub float %136, %140\l  %142 = tail call float @llvm.amdgcn.ldexp.f32(float %128, i32 1)\l  %143 = tail call float @llvm.amdgcn.ldexp.f32(float %138, i32 1)\l  %144 = fmul float %128, %129\l  %145 = fmul float %144, %131\l  %146 = fadd float %142, %145\l  %147 = fsub float %146, %142\l  %148 = fsub float %145, %147\l  %149 = fadd float %143, %148\l  %150 = fadd float %146, %149\l  %151 = fsub float %150, %146\l  %152 = fsub float %149, %151\l  %153 = fadd float %139, %150\l  %154 = fsub float %153, %139\l  %155 = fsub float %153, %154\l  %156 = fsub float %139, %155\l  %157 = fsub float %150, %154\l  %158 = fadd float %157, %156\l  %159 = fadd float %141, %152\l  %160 = fsub float %159, %141\l  %161 = fsub float %159, %160\l  %162 = fsub float %141, %161\l  %163 = fsub float %152, %160\l  %164 = fadd float %163, %162\l  %165 = fadd float %159, %158\l  %166 = fadd float %153, %165\l  %167 = fsub float %166, %153\l  %168 = fsub float %165, %167\l  %169 = fadd float %164, %168\l  %170 = fadd float %166, %169\l  %171 = fmul float %170, 5.000000e-01\l  %172 = fcmp olt float %44, 0x3F30000000000000\l  %173 = select i1 %172, float %44, float %171\l  %174 = fcmp ogt float %44, 1.000000e+00\l  %175 = select i1 %174, float 0x7FF8000000000000, float %173\l  %176 = fcmp oeq float %44, 1.000000e+00\l  %177 = select i1 %176, float 0x7FF0000000000000, float %175\l  %178 = tail call float @llvm.copysign.f32(float %177, float %43)\l  %179 = add nsw i32 %18, %7\l  %180 = mul nsw i32 %26, %8\l  %181 = add nsw i32 %179, %180\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %6, i64 %182\l  store float %178, float addrspace(1)* %183, align 4, !tbaa !7\l  br label %184\l}"];
	Node0x48a89a0 -> Node0x48aa9b0;
	Node0x48aa9b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%184:\l184:                                              \l  ret void\l}"];
}
