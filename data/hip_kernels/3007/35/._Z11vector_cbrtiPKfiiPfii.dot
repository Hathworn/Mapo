digraph "CFG for '_Z11vector_cbrtiPKfiiPfii' function" {
	label="CFG for '_Z11vector_cbrtiPKfiiPfii' function";

	Node0x4e70a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4e70a10:s0 -> Node0x4e72940;
	Node0x4e70a10:s1 -> Node0x4e729d0;
	Node0x4e72940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = tail call i1 @llvm.amdgcn.class.f32(float %23, i32 144)\l  %26 = tail call float @llvm.amdgcn.ldexp.f32(float %24, i32 24)\l  %27 = select i1 %25, float %26, float %24\l  %28 = tail call float @llvm.log2.f32(float %27)\l  %29 = fmul float %28, 0x3FD5555560000000\l  %30 = tail call float @llvm.exp2.f32(float %29)\l  %31 = fmul float %30, %30\l  %32 = tail call float @llvm.amdgcn.rcp.f32(float %31)\l  %33 = fneg float %27\l  %34 = tail call float @llvm.fmuladd.f32(float %32, float %33, float %30)\l  %35 = tail call float @llvm.fmuladd.f32(float %34, float 0xBFD5555560000000,\l... float %30)\l  %36 = tail call float @llvm.amdgcn.ldexp.f32(float %35, i32 -8)\l  %37 = select i1 %25, float %36, float %35\l  %38 = tail call i1 @llvm.amdgcn.class.f32(float %23, i32 615)\l  %39 = select i1 %38, float %23, float %37\l  %40 = tail call float @llvm.copysign.f32(float %39, float %23)\l  %41 = mul nsw i32 %16, %6\l  %42 = add nsw i32 %41, %5\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %4, i64 %43\l  store float %40, float addrspace(1)* %44, align 4, !tbaa !7\l  br label %45\l}"];
	Node0x4e72940 -> Node0x4e729d0;
	Node0x4e729d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  ret void\l}"];
}
