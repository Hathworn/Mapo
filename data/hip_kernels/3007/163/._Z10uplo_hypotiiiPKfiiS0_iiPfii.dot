digraph "CFG for '_Z10uplo_hypotiiiPKfiiS0_iiPfii' function" {
	label="CFG for '_Z10uplo_hypotiiiPKfiiS0_iiPfii' function";

	Node0x4d4b2f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%12:\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %13, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %23 = getelementptr i8, i8 addrspace(4)* %14, i64 6\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 2, !range !4, !invariant.load !5\l  %26 = zext i16 %25 to i32\l  %27 = mul i32 %22, %26\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %29 = add i32 %27, %28\l  %30 = icmp slt i32 %21, %0\l  %31 = icmp slt i32 %29, %0\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4d4b2f0:s0 -> Node0x4d4ca90;
	Node0x4d4b2f0:s1 -> Node0x4d4cb20;
	Node0x4d4ca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%33:\l33:                                               \l  %34 = icmp eq i32 %1, 132\l  %35 = mul nsw i32 %21, %2\l  %36 = mul nsw i32 %29, %2\l  %37 = icmp sgt i32 %35, %36\l  %38 = icmp sge i32 %35, %36\l  %39 = select i1 %34, i1 %37, i1 %38\l  br i1 %39, label %40, label %72\l|{<s0>T|<s1>F}}"];
	Node0x4d4ca90:s0 -> Node0x4d4ffb0;
	Node0x4d4ca90:s1 -> Node0x4d4cb20;
	Node0x4d4ffb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%40:\l40:                                               \l  %41 = add nsw i32 %21, %4\l  %42 = mul nsw i32 %29, %5\l  %43 = add nsw i32 %41, %42\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %3, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %47 = add nsw i32 %21, %7\l  %48 = mul nsw i32 %29, %8\l  %49 = add nsw i32 %47, %48\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %6, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = tail call float @llvm.fabs.f32(float %46)\l  %54 = tail call float @llvm.fabs.f32(float %52)\l  %55 = tail call float @llvm.maxnum.f32(float %53, float %54)\l  %56 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %55)\l  %57 = sub nsw i32 0, %56\l  %58 = tail call float @llvm.amdgcn.ldexp.f32(float %53, i32 %57)\l  %59 = tail call float @llvm.amdgcn.ldexp.f32(float %54, i32 %57)\l  %60 = fmul float %59, %59\l  %61 = tail call float @llvm.fmuladd.f32(float %58, float %58, float %60)\l  %62 = tail call float @llvm.sqrt.f32(float %61)\l  %63 = tail call float @llvm.amdgcn.ldexp.f32(float %62, i32 %56)\l  %64 = tail call float @llvm.fabs.f32(float %55) #3\l  %65 = fcmp oeq float %64, 0x7FF0000000000000\l  %66 = select i1 %65, float 0x7FF0000000000000, float %63\l  %67 = add nsw i32 %21, %10\l  %68 = mul nsw i32 %29, %11\l  %69 = add nsw i32 %67, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %9, i64 %70\l  store float %66, float addrspace(1)* %71, align 4, !tbaa !7\l  br label %72\l}"];
	Node0x4d4ffb0 -> Node0x4d4cb20;
	Node0x4d4cb20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%72:\l72:                                               \l  ret void\l}"];
}
