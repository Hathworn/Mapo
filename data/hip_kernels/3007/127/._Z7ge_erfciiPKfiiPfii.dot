digraph "CFG for '_Z7ge_erfciiPKfiiPfii' function" {
	label="CFG for '_Z7ge_erfciiPKfiiPfii' function";

	Node0x566d460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !4, !invariant.load !5\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %25 = add i32 %23, %24\l  %26 = icmp slt i32 %17, %0\l  %27 = icmp slt i32 %25, %1\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %94\l|{<s0>T|<s1>F}}"];
	Node0x566d460:s0 -> Node0x5670ea0;
	Node0x566d460:s1 -> Node0x5670f30;
	Node0x5670ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%29:\l29:                                               \l  %30 = add nsw i32 %17, %3\l  %31 = mul nsw i32 %25, %4\l  %32 = add nsw i32 %30, %31\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = tail call float @llvm.fabs.f32(float %35)\l  %37 = fneg float %35\l  %38 = fmul float %35, %37\l  %39 = fneg float %38\l  %40 = tail call float @llvm.fma.f32(float %37, float %35, float %39)\l  %41 = fmul float %38, 0x3FF7154760000000\l  %42 = tail call float @llvm.rint.f32(float %41)\l  %43 = fcmp ogt float %38, 0x40562E4300000000\l  %44 = fcmp olt float %38, 0xC059D1DA00000000\l  %45 = fneg float %41\l  %46 = tail call float @llvm.fma.f32(float %38, float 0x3FF7154760000000,\l... float %45)\l  %47 = tail call float @llvm.fma.f32(float %38, float 0x3E54AE0BE0000000,\l... float %46)\l  %48 = fsub float %41, %42\l  %49 = fadd float %47, %48\l  %50 = tail call float @llvm.exp2.f32(float %49)\l  %51 = fptosi float %42 to i32\l  %52 = tail call float @llvm.amdgcn.ldexp.f32(float %50, i32 %51)\l  %53 = select i1 %44, float 0.000000e+00, float %52\l  %54 = select i1 %43, float 0x7FF0000000000000, float %53\l  %55 = tail call float @llvm.fma.f32(float %54, float %40, float %54)\l  %56 = fadd float %36, -2.000000e+00\l  %57 = fadd float %36, 2.000000e+00\l  %58 = tail call float @llvm.amdgcn.rcp.f32(float %57)\l  %59 = fmul float %56, %58\l  %60 = fneg float %59\l  %61 = fadd float %59, 1.000000e+00\l  %62 = tail call float @llvm.fma.f32(float %61, float -2.000000e+00, float\l... %36)\l  %63 = tail call float @llvm.fma.f32(float %60, float %36, float %62)\l  %64 = tail call float @llvm.fma.f32(float %58, float %63, float %59)\l  %65 = tail call float @llvm.fmuladd.f32(float %64, float 0xBF3ADF1880000000,\l... float 0xBF545AEA60000000)\l  %66 = tail call float @llvm.fmuladd.f32(float %64, float %65, float\l... 0x3F55A5F680000000)\l  %67 = tail call float @llvm.fmuladd.f32(float %64, float %66, float\l... 0x3F81B44CE0000000)\l  %68 = tail call float @llvm.fmuladd.f32(float %64, float %67, float\l... 0xBF8082B620000000)\l  %69 = tail call float @llvm.fmuladd.f32(float %64, float %68, float\l... 0xBFABC14300000000)\l  %70 = tail call float @llvm.fmuladd.f32(float %64, float %69, float\l... 0x3FC4FFC540000000)\l  %71 = tail call float @llvm.fmuladd.f32(float %64, float %70, float\l... 0xBFC5407FA0000000)\l  %72 = tail call float @llvm.fmuladd.f32(float %64, float %71, float\l... 0xBFB7BF6160000000)\l  %73 = tail call float @llvm.fmuladd.f32(float %64, float %72, float\l... 0x3FD1BA0380000000)\l  %74 = fadd float %36, %36\l  %75 = fadd float %74, 1.000000e+00\l  %76 = tail call float @llvm.amdgcn.rcp.f32(float %75)\l  %77 = tail call float @llvm.fma.f32(float %73, float %76, float %76)\l  %78 = fneg float %77\l  %79 = tail call float @llvm.fma.f32(float %78, float %74, float 1.000000e+00)\l  %80 = fsub float %73, %77\l  %81 = fadd float %79, %80\l  %82 = tail call float @llvm.fma.f32(float %76, float %81, float %77)\l  %83 = fmul float %55, %82\l  %84 = fcmp ogt float %36, 0x40241BBF80000000\l  %85 = select i1 %84, float 0.000000e+00, float %83\l  %86 = fsub float 2.000000e+00, %85\l  %87 = fcmp olt float %35, 0.000000e+00\l  %88 = select i1 %87, float %86, float %85\l  %89 = add nsw i32 %17, %6\l  %90 = mul nsw i32 %25, %7\l  %91 = add nsw i32 %89, %90\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %5, i64 %92\l  store float %88, float addrspace(1)* %93, align 4, !tbaa !7\l  br label %94\l}"];
	Node0x5670ea0 -> Node0x5670f30;
	Node0x5670f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%94:\l94:                                               \l  ret void\l}"];
}
