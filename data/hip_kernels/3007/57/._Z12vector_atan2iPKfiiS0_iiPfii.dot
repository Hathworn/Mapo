digraph "CFG for '_Z12vector_atan2iPKfiiS0_iiPfii' function" {
	label="CFG for '_Z12vector_atan2iPKfiiS0_iiPfii' function";

	Node0x54a0270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = icmp slt i32 %19, %0\l  br i1 %20, label %21, label %70\l|{<s0>T|<s1>F}}"];
	Node0x54a0270:s0 -> Node0x54a2d40;
	Node0x54a0270:s1 -> Node0x54a2dd0;
	Node0x54a2d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%21:\l21:                                               \l  %22 = mul nsw i32 %19, %3\l  %23 = add nsw i32 %22, %2\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %27 = mul nsw i32 %19, %6\l  %28 = add nsw i32 %27, %5\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = tail call float @llvm.fabs.f32(float %31)\l  %33 = tail call float @llvm.fabs.f32(float %26)\l  %34 = tail call float @llvm.minnum.f32(float %32, float %33)\l  %35 = tail call float @llvm.maxnum.f32(float %32, float %33)\l  %36 = fdiv float %34, %35, !fpmath !11\l  %37 = fmul float %36, %36\l  %38 = tail call float @llvm.fmuladd.f32(float %37, float 0x3F65A54B00000000,\l... float 0xBF8F4B2180000000)\l  %39 = tail call float @llvm.fmuladd.f32(float %37, float %38, float\l... 0x3FA53F67E0000000)\l  %40 = tail call float @llvm.fmuladd.f32(float %37, float %39, float\l... 0xBFB2FA9AE0000000)\l  %41 = tail call float @llvm.fmuladd.f32(float %37, float %40, float\l... 0x3FBB263640000000)\l  %42 = tail call float @llvm.fmuladd.f32(float %37, float %41, float\l... 0xBFC22C1CC0000000)\l  %43 = tail call float @llvm.fmuladd.f32(float %37, float %42, float\l... 0x3FC99717E0000000)\l  %44 = tail call float @llvm.fmuladd.f32(float %37, float %43, float\l... 0xBFD5554C40000000)\l  %45 = fmul float %37, %44\l  %46 = tail call float @llvm.fmuladd.f32(float %36, float %45, float %36)\l  %47 = fsub float 0x3FF921FB60000000, %46\l  %48 = fcmp ogt float %33, %32\l  %49 = select i1 %48, float %47, float %46\l  %50 = fsub float 0x400921FB60000000, %49\l  %51 = fcmp olt float %31, 0.000000e+00\l  %52 = select i1 %51, float %50, float %49\l  %53 = bitcast float %31 to i32\l  %54 = icmp slt i32 %53, 0\l  %55 = select i1 %54, float 0x400921FB60000000, float 0.000000e+00\l  %56 = fcmp oeq float %26, 0.000000e+00\l  %57 = select i1 %56, float %55, float %52\l  %58 = select i1 %51, float 0x4002D97C80000000, float 0x3FE921FB60000000\l  %59 = fcmp oeq float %32, 0x7FF0000000000000\l  %60 = fcmp oeq float %33, 0x7FF0000000000000\l  %61 = and i1 %60, %59\l  %62 = select i1 %61, float %58, float %57\l  %63 = fcmp uno float %31, %26\l  %64 = select i1 %63, float 0x7FF8000000000000, float %62\l  %65 = tail call float @llvm.copysign.f32(float %64, float %26)\l  %66 = mul nsw i32 %19, %9\l  %67 = add nsw i32 %66, %8\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %7, i64 %68\l  store float %65, float addrspace(1)* %69, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x54a2d40 -> Node0x54a2dd0;
	Node0x54a2dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  ret void\l}"];
}
