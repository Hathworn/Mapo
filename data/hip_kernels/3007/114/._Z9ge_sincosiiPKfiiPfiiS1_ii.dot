digraph "CFG for '_Z9ge_sincosiiPKfiiPfiiS1_ii' function" {
	label="CFG for '_Z9ge_sincosiiPKfiiPfiiS1_ii' function";

	Node0x561b8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %22 = getelementptr i8, i8 addrspace(4)* %13, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %21, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = icmp slt i32 %20, %0\l  %30 = icmp slt i32 %28, %1\l  %31 = select i1 %29, i1 %30, i1 false\l  br i1 %31, label %32, label %197\l|{<s0>T|<s1>F}}"];
	Node0x561b8c0:s0 -> Node0x561fee0;
	Node0x561b8c0:s1 -> Node0x561ff70;
	Node0x561fee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%32:\l32:                                               \l  %33 = add nsw i32 %20, %3\l  %34 = mul nsw i32 %28, %4\l  %35 = add nsw i32 %33, %34\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %2, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %39 = add nsw i32 %20, %6\l  %40 = mul nsw i32 %28, %7\l  %41 = add nsw i32 %39, %40\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 %42\l  %44 = add nsw i32 %20, %9\l  %45 = mul nsw i32 %28, %10\l  %46 = add nsw i32 %44, %45\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %8, i64 %47\l  %49 = tail call float @llvm.fabs.f32(float %38)\l  %50 = fcmp olt float %49, 1.310720e+05\l  br i1 %50, label %51, label %59\l|{<s0>T|<s1>F}}"];
	Node0x561fee0:s0 -> Node0x56218c0;
	Node0x561fee0:s1 -> Node0x5621950;
	Node0x56218c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%51:\l51:                                               \l  %52 = fmul float %49, 0x3FE45F3060000000\l  %53 = tail call float @llvm.rint.f32(float %52)\l  %54 = tail call float @llvm.fma.f32(float %53, float 0xBFF921FB40000000,\l... float %49)\l  %55 = tail call float @llvm.fma.f32(float %53, float 0xBE74442D00000000,\l... float %54)\l  %56 = tail call float @llvm.fma.f32(float %53, float 0xBCF8469880000000,\l... float %55)\l  %57 = fptosi float %53 to i32\l  %58 = bitcast float %49 to i32\l  br label %165\l}"];
	Node0x56218c0 -> Node0x5622400;
	Node0x5621950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%59:\l59:                                               \l  %60 = bitcast float %49 to i32\l  %61 = lshr i32 %60, 23\l  %62 = and i32 %60, 8388607\l  %63 = or i32 %62, 8388608\l  %64 = zext i32 %63 to i64\l  %65 = mul nuw nsw i64 %64, 4266746795\l  %66 = trunc i64 %65 to i32\l  %67 = lshr i64 %65, 32\l  %68 = mul nuw nsw i64 %64, 1011060801\l  %69 = add nuw nsw i64 %67, %68\l  %70 = trunc i64 %69 to i32\l  %71 = lshr i64 %69, 32\l  %72 = mul nuw nsw i64 %64, 3680671129\l  %73 = add nuw nsw i64 %71, %72\l  %74 = trunc i64 %73 to i32\l  %75 = lshr i64 %73, 32\l  %76 = mul nuw nsw i64 %64, 4113882560\l  %77 = add nuw nsw i64 %75, %76\l  %78 = trunc i64 %77 to i32\l  %79 = lshr i64 %77, 32\l  %80 = mul nuw nsw i64 %64, 4230436817\l  %81 = add nuw nsw i64 %79, %80\l  %82 = trunc i64 %81 to i32\l  %83 = lshr i64 %81, 32\l  %84 = mul nuw nsw i64 %64, 1313084713\l  %85 = add nuw nsw i64 %83, %84\l  %86 = trunc i64 %85 to i32\l  %87 = lshr i64 %85, 32\l  %88 = mul nuw nsw i64 %64, 2734261102\l  %89 = add nuw nsw i64 %87, %88\l  %90 = trunc i64 %89 to i32\l  %91 = lshr i64 %89, 32\l  %92 = trunc i64 %91 to i32\l  %93 = add nsw i32 %61, -120\l  %94 = icmp ugt i32 %93, 63\l  %95 = select i1 %94, i32 %86, i32 %92\l  %96 = select i1 %94, i32 %82, i32 %90\l  %97 = select i1 %94, i32 %78, i32 %86\l  %98 = select i1 %94, i32 %74, i32 %82\l  %99 = select i1 %94, i32 %70, i32 %78\l  %100 = select i1 %94, i32 %66, i32 %74\l  %101 = select i1 %94, i32 -64, i32 0\l  %102 = add nsw i32 %101, %93\l  %103 = icmp ugt i32 %102, 31\l  %104 = select i1 %103, i32 %96, i32 %95\l  %105 = select i1 %103, i32 %97, i32 %96\l  %106 = select i1 %103, i32 %98, i32 %97\l  %107 = select i1 %103, i32 %99, i32 %98\l  %108 = select i1 %103, i32 %100, i32 %99\l  %109 = select i1 %103, i32 -32, i32 0\l  %110 = add nsw i32 %109, %102\l  %111 = icmp ugt i32 %110, 31\l  %112 = select i1 %111, i32 %105, i32 %104\l  %113 = select i1 %111, i32 %106, i32 %105\l  %114 = select i1 %111, i32 %107, i32 %106\l  %115 = select i1 %111, i32 %108, i32 %107\l  %116 = select i1 %111, i32 -32, i32 0\l  %117 = add nsw i32 %116, %110\l  %118 = icmp eq i32 %117, 0\l  %119 = sub nsw i32 32, %117\l  %120 = tail call i32 @llvm.fshr.i32(i32 %112, i32 %113, i32 %119)\l  %121 = tail call i32 @llvm.fshr.i32(i32 %113, i32 %114, i32 %119)\l  %122 = tail call i32 @llvm.fshr.i32(i32 %114, i32 %115, i32 %119)\l  %123 = select i1 %118, i32 %112, i32 %120\l  %124 = select i1 %118, i32 %113, i32 %121\l  %125 = select i1 %118, i32 %114, i32 %122\l  %126 = lshr i32 %123, 29\l  %127 = tail call i32 @llvm.fshl.i32(i32 %123, i32 %124, i32 2)\l  %128 = tail call i32 @llvm.fshl.i32(i32 %124, i32 %125, i32 2)\l  %129 = tail call i32 @llvm.fshl.i32(i32 %125, i32 %115, i32 2)\l  %130 = and i32 %126, 1\l  %131 = sub nsw i32 0, %130\l  %132 = shl i32 %126, 31\l  %133 = xor i32 %127, %131\l  %134 = xor i32 %128, %131\l  %135 = xor i32 %129, %131\l  %136 = tail call i32 @llvm.ctlz.i32(i32 %133, i1 false), !range !11\l  %137 = sub nsw i32 31, %136\l  %138 = tail call i32 @llvm.fshr.i32(i32 %133, i32 %134, i32 %137)\l  %139 = tail call i32 @llvm.fshr.i32(i32 %134, i32 %135, i32 %137)\l  %140 = shl nuw nsw i32 %136, 23\l  %141 = sub nuw nsw i32 1056964608, %140\l  %142 = lshr i32 %138, 9\l  %143 = or i32 %142, %141\l  %144 = or i32 %143, %132\l  %145 = bitcast i32 %144 to float\l  %146 = tail call i32 @llvm.fshl.i32(i32 %138, i32 %139, i32 23)\l  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 false), !range !11\l  %148 = fmul float %145, 0x3FF921FB40000000\l  %149 = add nuw nsw i32 %147, %136\l  %150 = shl nuw nsw i32 %149, 23\l  %151 = sub nuw nsw i32 855638016, %150\l  %152 = sub nsw i32 31, %147\l  %153 = tail call i32 @llvm.fshr.i32(i32 %146, i32 %139, i32 %152)\l  %154 = lshr i32 %153, 9\l  %155 = or i32 %151, %154\l  %156 = or i32 %155, %132\l  %157 = bitcast i32 %156 to float\l  %158 = fneg float %148\l  %159 = tail call float @llvm.fma.f32(float %145, float 0x3FF921FB40000000,\l... float %158)\l  %160 = tail call float @llvm.fma.f32(float %145, float 0x3E74442D00000000,\l... float %159)\l  %161 = tail call float @llvm.fma.f32(float %157, float 0x3FF921FB40000000,\l... float %160)\l  %162 = fadd float %148, %161\l  %163 = lshr i32 %123, 30\l  %164 = add nuw nsw i32 %130, %163\l  br label %165\l}"];
	Node0x5621950 -> Node0x5622400;
	Node0x5622400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%165:\l165:                                              \l  %166 = phi i32 [ %58, %51 ], [ %60, %59 ]\l  %167 = phi float [ %56, %51 ], [ %162, %59 ]\l  %168 = phi i32 [ %57, %51 ], [ %164, %59 ]\l  %169 = fmul float %167, %167\l  %170 = tail call float @llvm.fmuladd.f32(float %169, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %171 = tail call float @llvm.fmuladd.f32(float %169, float %170, float\l... 0xBFC55553A0000000)\l  %172 = fmul float %169, %171\l  %173 = tail call float @llvm.fmuladd.f32(float %167, float %172, float %167)\l  %174 = tail call float @llvm.fmuladd.f32(float %169, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %175 = tail call float @llvm.fmuladd.f32(float %169, float %174, float\l... 0x3FA5557EE0000000)\l  %176 = tail call float @llvm.fmuladd.f32(float %169, float %175, float\l... 0xBFE0000080000000)\l  %177 = tail call float @llvm.fmuladd.f32(float %169, float %176, float\l... 1.000000e+00)\l  %178 = shl i32 %168, 30\l  %179 = and i32 %178, -2147483648\l  %180 = and i32 %168, 1\l  %181 = icmp eq i32 %180, 0\l  %182 = select i1 %181, float %173, float %177\l  %183 = bitcast float %182 to i32\l  %184 = bitcast float %38 to i32\l  %185 = xor i32 %166, %184\l  %186 = xor i32 %185, %183\l  %187 = xor i32 %186, %179\l  %188 = bitcast i32 %187 to float\l  %189 = fneg float %173\l  %190 = select i1 %181, float %177, float %189\l  %191 = bitcast float %190 to i32\l  %192 = xor i32 %179, %191\l  %193 = bitcast i32 %192 to float\l  %194 = tail call i1 @llvm.amdgcn.class.f32(float %49, i32 504)\l  %195 = select i1 %194, float %193, float 0x7FF8000000000000\l  %196 = select i1 %194, float %188, float 0x7FF8000000000000\l  store float %196, float addrspace(1)* %43, align 4, !tbaa !7\l  store float %195, float addrspace(1)* %48, align 4, !tbaa !7\l  br label %197\l}"];
	Node0x5622400 -> Node0x561ff70;
	Node0x561ff70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%197:\l197:                                              \l  ret void\l}"];
}
