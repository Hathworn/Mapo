digraph "CFG for '_Z11vector_asiniPKfiiPfii' function" {
	label="CFG for '_Z11vector_asiniPKfiiPfii' function";

	Node0x47278f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %8, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %47\l|{<s0>T|<s1>F}}"];
	Node0x47278f0:s0 -> Node0x4729820;
	Node0x47278f0:s1 -> Node0x47298b0;
	Node0x4729820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %16, %3\l  %20 = add nsw i32 %19, %2\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds float, float addrspace(1)* %1, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  %25 = tail call float @llvm.fmuladd.f32(float %24, float -5.000000e-01,\l... float 5.000000e-01)\l  %26 = fmul float %23, %23\l  %27 = fcmp oge float %24, 5.000000e-01\l  %28 = select i1 %27, float %25, float %26\l  %29 = tail call float @llvm.fmuladd.f32(float %28, float 0x3FA38434E0000000,\l... float 0x3F8BF8BB40000000)\l  %30 = tail call float @llvm.fmuladd.f32(float %28, float %29, float\l... 0x3FA0698780000000)\l  %31 = tail call float @llvm.fmuladd.f32(float %28, float %30, float\l... 0x3FA6C83620000000)\l  %32 = tail call float @llvm.fmuladd.f32(float %28, float %31, float\l... 0x3FB3337900000000)\l  %33 = tail call float @llvm.fmuladd.f32(float %28, float %32, float\l... 0x3FC5555580000000)\l  %34 = fmul float %28, %33\l  %35 = tail call float @llvm.sqrt.f32(float %28)\l  %36 = tail call float @llvm.fmuladd.f32(float %35, float %34, float %35)\l  %37 = fmul float %36, 2.000000e+00\l  %38 = fsub float 0x3FF921FB60000000, %37\l  %39 = tail call float @llvm.fmuladd.f32(float %24, float %34, float %24)\l  %40 = fcmp olt float %24, 5.000000e-01\l  %41 = select i1 %40, float %39, float %38\l  %42 = tail call float @llvm.copysign.f32(float %41, float %23)\l  %43 = mul nsw i32 %16, %6\l  %44 = add nsw i32 %43, %5\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  store float %42, float addrspace(1)* %46, align 4, !tbaa !7\l  br label %47\l}"];
	Node0x4729820 -> Node0x47298b0;
	Node0x47298b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  ret void\l}"];
}
