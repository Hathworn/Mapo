digraph "CFG for '_Z21scan_large_sum_kernelPjS_S_S_S_S_jjj' function" {
	label="CFG for '_Z21scan_large_sum_kernelPjS_S_S_S_S_jjj' function";

	Node0x5ccd850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = add i32 %17, %10\l  %19 = icmp ult i32 %18, %8\l  br i1 %19, label %20, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5ccd850:s0 -> Node0x5ccf860;
	Node0x5ccd850:s1 -> Node0x5ccf8f0;
	Node0x5ccf860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%20:\l20:                                               \l  %21 = zext i32 %11 to i64\l  %22 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %21\l  %23 = load i32, i32 addrspace(1)* %22, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %24 = zext i32 %18 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %27 = add i32 %26, %23\l  br label %28\l}"];
	Node0x5ccf860 -> Node0x5ccf8f0;
	Node0x5ccf8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%28:\l28:                                               \l  %29 = phi i32 [ %27, %20 ], [ 1, %9 ]\l  %30 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ21scan_large_sum_kernelPjS_S_S_S_S_jjjE17shared_prefix_sum, i32 0, i32 %10\l  store i32 %29, i32 addrspace(3)* %30, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %19, label %31, label %534\l|{<s0>T|<s1>F}}"];
	Node0x5ccf8f0:s0 -> Node0x5cd11c0;
	Node0x5ccf8f0:s1 -> Node0x5cd1210;
	Node0x5cd11c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%31:\l31:                                               \l  %32 = load i32, i32 addrspace(3)* %30, align 4, !tbaa !7\l  %33 = zext i32 %18 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %36 = shl nuw i32 1, %6\l  %37 = and i32 %35, %36\l  %38 = icmp eq i32 %37, 0\l  br i1 %38, label %43, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5cd11c0:s0 -> Node0x5cd1830;
	Node0x5cd11c0:s1 -> Node0x5cd18c0;
	Node0x5cd18c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%39:\l39:                                               \l  %40 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %41 = sub i32 %18, %32\l  %42 = add i32 %41, %40\l  br label %43\l}"];
	Node0x5cd18c0 -> Node0x5cd1830;
	Node0x5cd1830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %42, %39 ], [ %32, %31 ]\l  %45 = icmp ult i32 %44, %8\l  br i1 %45, label %532, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5cd1830:s0 -> Node0x5cd1ce0;
	Node0x5cd1830:s1 -> Node0x5cd1d30;
	Node0x5cd1d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%46:\l46:                                               \l  %47 = load i32, i32 addrspace(1)* %5, align 4, !tbaa !7, !amdgpu.noclobber !6\l  %48 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 24\l  %50 = bitcast i8 addrspace(4)* %49 to i64 addrspace(4)*\l  %51 = load i64, i64 addrspace(4)* %50, align 8, !tbaa !11\l  %52 = inttoptr i64 %51 to i8 addrspace(1)*\l  %53 = addrspacecast i8 addrspace(1)* %52 to i8*\l  %54 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %55 = extractelement \<2 x i64\> %54, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([89 x i8], [89 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %56, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5cd1d30:s0 -> Node0x5cd2ce0;
	Node0x5cd1d30:s1 -> Node0x5cd36d0;
	Node0x5cd2ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%56:\l56:                                               \l  %57 = and i64 %55, -225\l  %58 = or i64 %57, 32\l  %59 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %58, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %501\l}"];
	Node0x5cd2ce0 -> Node0x5cd3990;
	Node0x5cd36d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%60:\l60:                                               \l  %61 = and i64 %55, 2\l  %62 = and i64 %55, -3\l  %63 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %62, i64 0\l  br label %64\l}"];
	Node0x5cd36d0 -> Node0x5cd4530;
	Node0x5cd4530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%64:\l64:                                               \l  %65 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([89 x i8], [89 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([89 x i8], [89 x i8] addrspace(4)*\l... @.str, i64 0, i64 88) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([89 x i8]* addrspacecast ([89 x i8] addrspace(4)* @.str to [89 x i8]*) to\l... i64)), i64 1))), %60 ], [ %498, %490 ]\l  %66 = phi i8 addrspace(4)* [ getelementptr inbounds ([89 x i8], [89 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %60 ], [ %499, %490 ]\l  %67 = phi \<2 x i64\> [ %63, %60 ], [ %497, %490 ]\l  %68 = icmp ugt i64 %65, 56\l  %69 = extractelement \<2 x i64\> %67, i64 0\l  %70 = or i64 %69, %61\l  %71 = insertelement \<2 x i64\> poison, i64 %70, i64 0\l  %72 = select i1 %68, \<2 x i64\> %67, \<2 x i64\> %71\l  %73 = tail call i64 @llvm.umin.i64(i64 %65, i64 56)\l  %74 = trunc i64 %73 to i32\l  %75 = extractelement \<2 x i64\> %72, i64 0\l  %76 = icmp ugt i32 %74, 7\l  br i1 %76, label %79, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5cd4530:s0 -> Node0x5cd56b0;
	Node0x5cd4530:s1 -> Node0x5cd5740;
	Node0x5cd5740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%77:\l77:                                               \l  %78 = icmp eq i32 %74, 0\l  br i1 %78, label %132, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5cd5740:s0 -> Node0x5cd5910;
	Node0x5cd5740:s1 -> Node0x5cd5960;
	Node0x5cd56b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%79:\l79:                                               \l  %80 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !15\l  %81 = zext i8 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 1\l  %83 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !15\l  %84 = zext i8 %83 to i64\l  %85 = shl nuw nsw i64 %84, 8\l  %86 = or i64 %85, %81\l  %87 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 2\l  %88 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !15\l  %89 = zext i8 %88 to i64\l  %90 = shl nuw nsw i64 %89, 16\l  %91 = or i64 %86, %90\l  %92 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 3\l  %93 = load i8, i8 addrspace(4)* %92, align 1, !tbaa !15\l  %94 = zext i8 %93 to i64\l  %95 = shl nuw nsw i64 %94, 24\l  %96 = or i64 %91, %95\l  %97 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 4\l  %98 = load i8, i8 addrspace(4)* %97, align 1, !tbaa !15\l  %99 = zext i8 %98 to i64\l  %100 = shl nuw nsw i64 %99, 32\l  %101 = or i64 %96, %100\l  %102 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 5\l  %103 = load i8, i8 addrspace(4)* %102, align 1, !tbaa !15\l  %104 = zext i8 %103 to i64\l  %105 = shl nuw nsw i64 %104, 40\l  %106 = or i64 %101, %105\l  %107 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 6\l  %108 = load i8, i8 addrspace(4)* %107, align 1, !tbaa !15\l  %109 = zext i8 %108 to i64\l  %110 = shl nuw nsw i64 %109, 48\l  %111 = or i64 %106, %110\l  %112 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 7\l  %113 = load i8, i8 addrspace(4)* %112, align 1, !tbaa !15\l  %114 = zext i8 %113 to i64\l  %115 = shl nuw i64 %114, 56\l  %116 = or i64 %111, %115\l  %117 = add nsw i32 %74, -8\l  %118 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 8\l  br label %132\l}"];
	Node0x5cd56b0 -> Node0x5cd5910;
	Node0x5cd5960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi i32 [ %130, %119 ], [ 0, %77 ]\l  %121 = phi i64 [ %129, %119 ], [ 0, %77 ]\l  %122 = zext i32 %120 to i64\l  %123 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 %122\l  %124 = load i8, i8 addrspace(4)* %123, align 1, !tbaa !15\l  %125 = zext i8 %124 to i64\l  %126 = shl i32 %120, 3\l  %127 = zext i32 %126 to i64\l  %128 = shl nuw i64 %125, %127\l  %129 = or i64 %128, %121\l  %130 = add nuw nsw i32 %120, 1\l  %131 = icmp eq i32 %130, %74\l  br i1 %131, label %132, label %119, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5cd5960:s0 -> Node0x5cd5910;
	Node0x5cd5960:s1 -> Node0x5cd5960;
	Node0x5cd5910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%132:\l132:                                              \l  %133 = phi i8 addrspace(4)* [ %118, %79 ], [ %66, %77 ], [ %66, %119 ]\l  %134 = phi i32 [ %117, %79 ], [ 0, %77 ], [ 0, %119 ]\l  %135 = phi i64 [ %116, %79 ], [ 0, %77 ], [ %129, %119 ]\l  %136 = icmp ugt i32 %134, 7\l  br i1 %136, label %139, label %137\l|{<s0>T|<s1>F}}"];
	Node0x5cd5910:s0 -> Node0x5cd8820;
	Node0x5cd5910:s1 -> Node0x5cd8870;
	Node0x5cd8870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%137:\l137:                                              \l  %138 = icmp eq i32 %134, 0\l  br i1 %138, label %192, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5cd8870:s0 -> Node0x5cd8a40;
	Node0x5cd8870:s1 -> Node0x5cd8a90;
	Node0x5cd8820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%139:\l139:                                              \l  %140 = load i8, i8 addrspace(4)* %133, align 1, !tbaa !15\l  %141 = zext i8 %140 to i64\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 1\l  %143 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !15\l  %144 = zext i8 %143 to i64\l  %145 = shl nuw nsw i64 %144, 8\l  %146 = or i64 %145, %141\l  %147 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 2\l  %148 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !15\l  %149 = zext i8 %148 to i64\l  %150 = shl nuw nsw i64 %149, 16\l  %151 = or i64 %146, %150\l  %152 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 3\l  %153 = load i8, i8 addrspace(4)* %152, align 1, !tbaa !15\l  %154 = zext i8 %153 to i64\l  %155 = shl nuw nsw i64 %154, 24\l  %156 = or i64 %151, %155\l  %157 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 4\l  %158 = load i8, i8 addrspace(4)* %157, align 1, !tbaa !15\l  %159 = zext i8 %158 to i64\l  %160 = shl nuw nsw i64 %159, 32\l  %161 = or i64 %156, %160\l  %162 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 5\l  %163 = load i8, i8 addrspace(4)* %162, align 1, !tbaa !15\l  %164 = zext i8 %163 to i64\l  %165 = shl nuw nsw i64 %164, 40\l  %166 = or i64 %161, %165\l  %167 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 6\l  %168 = load i8, i8 addrspace(4)* %167, align 1, !tbaa !15\l  %169 = zext i8 %168 to i64\l  %170 = shl nuw nsw i64 %169, 48\l  %171 = or i64 %166, %170\l  %172 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 7\l  %173 = load i8, i8 addrspace(4)* %172, align 1, !tbaa !15\l  %174 = zext i8 %173 to i64\l  %175 = shl nuw i64 %174, 56\l  %176 = or i64 %171, %175\l  %177 = add nsw i32 %134, -8\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 8\l  br label %192\l}"];
	Node0x5cd8820 -> Node0x5cd8a40;
	Node0x5cd8a90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%179:\l179:                                              \l  %180 = phi i32 [ %190, %179 ], [ 0, %137 ]\l  %181 = phi i64 [ %189, %179 ], [ 0, %137 ]\l  %182 = zext i32 %180 to i64\l  %183 = getelementptr inbounds i8, i8 addrspace(4)* %133, i64 %182\l  %184 = load i8, i8 addrspace(4)* %183, align 1, !tbaa !15\l  %185 = zext i8 %184 to i64\l  %186 = shl i32 %180, 3\l  %187 = zext i32 %186 to i64\l  %188 = shl nuw i64 %185, %187\l  %189 = or i64 %188, %181\l  %190 = add nuw nsw i32 %180, 1\l  %191 = icmp eq i32 %190, %134\l  br i1 %191, label %192, label %179\l|{<s0>T|<s1>F}}"];
	Node0x5cd8a90:s0 -> Node0x5cd8a40;
	Node0x5cd8a90:s1 -> Node0x5cd8a90;
	Node0x5cd8a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%192:\l192:                                              \l  %193 = phi i8 addrspace(4)* [ %178, %139 ], [ %133, %137 ], [ %133, %179 ]\l  %194 = phi i32 [ %177, %139 ], [ 0, %137 ], [ 0, %179 ]\l  %195 = phi i64 [ %176, %139 ], [ 0, %137 ], [ %189, %179 ]\l  %196 = icmp ugt i32 %194, 7\l  br i1 %196, label %199, label %197\l|{<s0>T|<s1>F}}"];
	Node0x5cd8a40:s0 -> Node0x5cdab20;
	Node0x5cd8a40:s1 -> Node0x5cdab70;
	Node0x5cdab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%197:\l197:                                              \l  %198 = icmp eq i32 %194, 0\l  br i1 %198, label %252, label %239\l|{<s0>T|<s1>F}}"];
	Node0x5cdab70:s0 -> Node0x5cdad00;
	Node0x5cdab70:s1 -> Node0x5cdad50;
	Node0x5cdab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%199:\l199:                                              \l  %200 = load i8, i8 addrspace(4)* %193, align 1, !tbaa !15\l  %201 = zext i8 %200 to i64\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 1\l  %203 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !15\l  %204 = zext i8 %203 to i64\l  %205 = shl nuw nsw i64 %204, 8\l  %206 = or i64 %205, %201\l  %207 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 2\l  %208 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !15\l  %209 = zext i8 %208 to i64\l  %210 = shl nuw nsw i64 %209, 16\l  %211 = or i64 %206, %210\l  %212 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 3\l  %213 = load i8, i8 addrspace(4)* %212, align 1, !tbaa !15\l  %214 = zext i8 %213 to i64\l  %215 = shl nuw nsw i64 %214, 24\l  %216 = or i64 %211, %215\l  %217 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 4\l  %218 = load i8, i8 addrspace(4)* %217, align 1, !tbaa !15\l  %219 = zext i8 %218 to i64\l  %220 = shl nuw nsw i64 %219, 32\l  %221 = or i64 %216, %220\l  %222 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 5\l  %223 = load i8, i8 addrspace(4)* %222, align 1, !tbaa !15\l  %224 = zext i8 %223 to i64\l  %225 = shl nuw nsw i64 %224, 40\l  %226 = or i64 %221, %225\l  %227 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 6\l  %228 = load i8, i8 addrspace(4)* %227, align 1, !tbaa !15\l  %229 = zext i8 %228 to i64\l  %230 = shl nuw nsw i64 %229, 48\l  %231 = or i64 %226, %230\l  %232 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 7\l  %233 = load i8, i8 addrspace(4)* %232, align 1, !tbaa !15\l  %234 = zext i8 %233 to i64\l  %235 = shl nuw i64 %234, 56\l  %236 = or i64 %231, %235\l  %237 = add nsw i32 %194, -8\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 8\l  br label %252\l}"];
	Node0x5cdab20 -> Node0x5cdad00;
	Node0x5cdad50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%239:\l239:                                              \l  %240 = phi i32 [ %250, %239 ], [ 0, %197 ]\l  %241 = phi i64 [ %249, %239 ], [ 0, %197 ]\l  %242 = zext i32 %240 to i64\l  %243 = getelementptr inbounds i8, i8 addrspace(4)* %193, i64 %242\l  %244 = load i8, i8 addrspace(4)* %243, align 1, !tbaa !15\l  %245 = zext i8 %244 to i64\l  %246 = shl i32 %240, 3\l  %247 = zext i32 %246 to i64\l  %248 = shl nuw i64 %245, %247\l  %249 = or i64 %248, %241\l  %250 = add nuw nsw i32 %240, 1\l  %251 = icmp eq i32 %250, %194\l  br i1 %251, label %252, label %239\l|{<s0>T|<s1>F}}"];
	Node0x5cdad50:s0 -> Node0x5cdad00;
	Node0x5cdad50:s1 -> Node0x5cdad50;
	Node0x5cdad00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%252:\l252:                                              \l  %253 = phi i8 addrspace(4)* [ %238, %199 ], [ %193, %197 ], [ %193, %239 ]\l  %254 = phi i32 [ %237, %199 ], [ 0, %197 ], [ 0, %239 ]\l  %255 = phi i64 [ %236, %199 ], [ 0, %197 ], [ %249, %239 ]\l  %256 = icmp ugt i32 %254, 7\l  br i1 %256, label %259, label %257\l|{<s0>T|<s1>F}}"];
	Node0x5cdad00:s0 -> Node0x5cd7de0;
	Node0x5cdad00:s1 -> Node0x5cd7e30;
	Node0x5cd7e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%257:\l257:                                              \l  %258 = icmp eq i32 %254, 0\l  br i1 %258, label %312, label %299\l|{<s0>T|<s1>F}}"];
	Node0x5cd7e30:s0 -> Node0x5cd7fc0;
	Node0x5cd7e30:s1 -> Node0x5cd8010;
	Node0x5cd7de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%259:\l259:                                              \l  %260 = load i8, i8 addrspace(4)* %253, align 1, !tbaa !15\l  %261 = zext i8 %260 to i64\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 1\l  %263 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !15\l  %264 = zext i8 %263 to i64\l  %265 = shl nuw nsw i64 %264, 8\l  %266 = or i64 %265, %261\l  %267 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 2\l  %268 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !15\l  %269 = zext i8 %268 to i64\l  %270 = shl nuw nsw i64 %269, 16\l  %271 = or i64 %266, %270\l  %272 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 3\l  %273 = load i8, i8 addrspace(4)* %272, align 1, !tbaa !15\l  %274 = zext i8 %273 to i64\l  %275 = shl nuw nsw i64 %274, 24\l  %276 = or i64 %271, %275\l  %277 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 4\l  %278 = load i8, i8 addrspace(4)* %277, align 1, !tbaa !15\l  %279 = zext i8 %278 to i64\l  %280 = shl nuw nsw i64 %279, 32\l  %281 = or i64 %276, %280\l  %282 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 5\l  %283 = load i8, i8 addrspace(4)* %282, align 1, !tbaa !15\l  %284 = zext i8 %283 to i64\l  %285 = shl nuw nsw i64 %284, 40\l  %286 = or i64 %281, %285\l  %287 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 6\l  %288 = load i8, i8 addrspace(4)* %287, align 1, !tbaa !15\l  %289 = zext i8 %288 to i64\l  %290 = shl nuw nsw i64 %289, 48\l  %291 = or i64 %286, %290\l  %292 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 7\l  %293 = load i8, i8 addrspace(4)* %292, align 1, !tbaa !15\l  %294 = zext i8 %293 to i64\l  %295 = shl nuw i64 %294, 56\l  %296 = or i64 %291, %295\l  %297 = add nsw i32 %254, -8\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 8\l  br label %312\l}"];
	Node0x5cd7de0 -> Node0x5cd7fc0;
	Node0x5cd8010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%299:\l299:                                              \l  %300 = phi i32 [ %310, %299 ], [ 0, %257 ]\l  %301 = phi i64 [ %309, %299 ], [ 0, %257 ]\l  %302 = zext i32 %300 to i64\l  %303 = getelementptr inbounds i8, i8 addrspace(4)* %253, i64 %302\l  %304 = load i8, i8 addrspace(4)* %303, align 1, !tbaa !15\l  %305 = zext i8 %304 to i64\l  %306 = shl i32 %300, 3\l  %307 = zext i32 %306 to i64\l  %308 = shl nuw i64 %305, %307\l  %309 = or i64 %308, %301\l  %310 = add nuw nsw i32 %300, 1\l  %311 = icmp eq i32 %310, %254\l  br i1 %311, label %312, label %299\l|{<s0>T|<s1>F}}"];
	Node0x5cd8010:s0 -> Node0x5cd7fc0;
	Node0x5cd8010:s1 -> Node0x5cd8010;
	Node0x5cd7fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%312:\l312:                                              \l  %313 = phi i8 addrspace(4)* [ %298, %259 ], [ %253, %257 ], [ %253, %299 ]\l  %314 = phi i32 [ %297, %259 ], [ 0, %257 ], [ 0, %299 ]\l  %315 = phi i64 [ %296, %259 ], [ 0, %257 ], [ %309, %299 ]\l  %316 = icmp ugt i32 %314, 7\l  br i1 %316, label %319, label %317\l|{<s0>T|<s1>F}}"];
	Node0x5cd7fc0:s0 -> Node0x5cdf7c0;
	Node0x5cd7fc0:s1 -> Node0x5cdf810;
	Node0x5cdf810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%317:\l317:                                              \l  %318 = icmp eq i32 %314, 0\l  br i1 %318, label %372, label %359\l|{<s0>T|<s1>F}}"];
	Node0x5cdf810:s0 -> Node0x5cdf9a0;
	Node0x5cdf810:s1 -> Node0x5cdf9f0;
	Node0x5cdf7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%319:\l319:                                              \l  %320 = load i8, i8 addrspace(4)* %313, align 1, !tbaa !15\l  %321 = zext i8 %320 to i64\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 1\l  %323 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !15\l  %324 = zext i8 %323 to i64\l  %325 = shl nuw nsw i64 %324, 8\l  %326 = or i64 %325, %321\l  %327 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 2\l  %328 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !15\l  %329 = zext i8 %328 to i64\l  %330 = shl nuw nsw i64 %329, 16\l  %331 = or i64 %326, %330\l  %332 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 3\l  %333 = load i8, i8 addrspace(4)* %332, align 1, !tbaa !15\l  %334 = zext i8 %333 to i64\l  %335 = shl nuw nsw i64 %334, 24\l  %336 = or i64 %331, %335\l  %337 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 4\l  %338 = load i8, i8 addrspace(4)* %337, align 1, !tbaa !15\l  %339 = zext i8 %338 to i64\l  %340 = shl nuw nsw i64 %339, 32\l  %341 = or i64 %336, %340\l  %342 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 5\l  %343 = load i8, i8 addrspace(4)* %342, align 1, !tbaa !15\l  %344 = zext i8 %343 to i64\l  %345 = shl nuw nsw i64 %344, 40\l  %346 = or i64 %341, %345\l  %347 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 6\l  %348 = load i8, i8 addrspace(4)* %347, align 1, !tbaa !15\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw nsw i64 %349, 48\l  %351 = or i64 %346, %350\l  %352 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 7\l  %353 = load i8, i8 addrspace(4)* %352, align 1, !tbaa !15\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw i64 %354, 56\l  %356 = or i64 %351, %355\l  %357 = add nsw i32 %314, -8\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 8\l  br label %372\l}"];
	Node0x5cdf7c0 -> Node0x5cdf9a0;
	Node0x5cdf9f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%359:\l359:                                              \l  %360 = phi i32 [ %370, %359 ], [ 0, %317 ]\l  %361 = phi i64 [ %369, %359 ], [ 0, %317 ]\l  %362 = zext i32 %360 to i64\l  %363 = getelementptr inbounds i8, i8 addrspace(4)* %313, i64 %362\l  %364 = load i8, i8 addrspace(4)* %363, align 1, !tbaa !15\l  %365 = zext i8 %364 to i64\l  %366 = shl i32 %360, 3\l  %367 = zext i32 %366 to i64\l  %368 = shl nuw i64 %365, %367\l  %369 = or i64 %368, %361\l  %370 = add nuw nsw i32 %360, 1\l  %371 = icmp eq i32 %370, %314\l  br i1 %371, label %372, label %359\l|{<s0>T|<s1>F}}"];
	Node0x5cdf9f0:s0 -> Node0x5cdf9a0;
	Node0x5cdf9f0:s1 -> Node0x5cdf9f0;
	Node0x5cdf9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%372:\l372:                                              \l  %373 = phi i8 addrspace(4)* [ %358, %319 ], [ %313, %317 ], [ %313, %359 ]\l  %374 = phi i32 [ %357, %319 ], [ 0, %317 ], [ 0, %359 ]\l  %375 = phi i64 [ %356, %319 ], [ 0, %317 ], [ %369, %359 ]\l  %376 = icmp ugt i32 %374, 7\l  br i1 %376, label %379, label %377\l|{<s0>T|<s1>F}}"];
	Node0x5cdf9a0:s0 -> Node0x5ce2420;
	Node0x5cdf9a0:s1 -> Node0x5ce2470;
	Node0x5ce2470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%377:\l377:                                              \l  %378 = icmp eq i32 %374, 0\l  br i1 %378, label %432, label %419\l|{<s0>T|<s1>F}}"];
	Node0x5ce2470:s0 -> Node0x5ce2600;
	Node0x5ce2470:s1 -> Node0x5ce2650;
	Node0x5ce2420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%379:\l379:                                              \l  %380 = load i8, i8 addrspace(4)* %373, align 1, !tbaa !15\l  %381 = zext i8 %380 to i64\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 1\l  %383 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !15\l  %384 = zext i8 %383 to i64\l  %385 = shl nuw nsw i64 %384, 8\l  %386 = or i64 %385, %381\l  %387 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 2\l  %388 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !15\l  %389 = zext i8 %388 to i64\l  %390 = shl nuw nsw i64 %389, 16\l  %391 = or i64 %386, %390\l  %392 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 3\l  %393 = load i8, i8 addrspace(4)* %392, align 1, !tbaa !15\l  %394 = zext i8 %393 to i64\l  %395 = shl nuw nsw i64 %394, 24\l  %396 = or i64 %391, %395\l  %397 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 4\l  %398 = load i8, i8 addrspace(4)* %397, align 1, !tbaa !15\l  %399 = zext i8 %398 to i64\l  %400 = shl nuw nsw i64 %399, 32\l  %401 = or i64 %396, %400\l  %402 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 5\l  %403 = load i8, i8 addrspace(4)* %402, align 1, !tbaa !15\l  %404 = zext i8 %403 to i64\l  %405 = shl nuw nsw i64 %404, 40\l  %406 = or i64 %401, %405\l  %407 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 6\l  %408 = load i8, i8 addrspace(4)* %407, align 1, !tbaa !15\l  %409 = zext i8 %408 to i64\l  %410 = shl nuw nsw i64 %409, 48\l  %411 = or i64 %406, %410\l  %412 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 7\l  %413 = load i8, i8 addrspace(4)* %412, align 1, !tbaa !15\l  %414 = zext i8 %413 to i64\l  %415 = shl nuw i64 %414, 56\l  %416 = or i64 %411, %415\l  %417 = add nsw i32 %374, -8\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 8\l  br label %432\l}"];
	Node0x5ce2420 -> Node0x5ce2600;
	Node0x5ce2650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%419:\l419:                                              \l  %420 = phi i32 [ %430, %419 ], [ 0, %377 ]\l  %421 = phi i64 [ %429, %419 ], [ 0, %377 ]\l  %422 = zext i32 %420 to i64\l  %423 = getelementptr inbounds i8, i8 addrspace(4)* %373, i64 %422\l  %424 = load i8, i8 addrspace(4)* %423, align 1, !tbaa !15\l  %425 = zext i8 %424 to i64\l  %426 = shl i32 %420, 3\l  %427 = zext i32 %426 to i64\l  %428 = shl nuw i64 %425, %427\l  %429 = or i64 %428, %421\l  %430 = add nuw nsw i32 %420, 1\l  %431 = icmp eq i32 %430, %374\l  br i1 %431, label %432, label %419\l|{<s0>T|<s1>F}}"];
	Node0x5ce2650:s0 -> Node0x5ce2600;
	Node0x5ce2650:s1 -> Node0x5ce2650;
	Node0x5ce2600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%432:\l432:                                              \l  %433 = phi i8 addrspace(4)* [ %418, %379 ], [ %373, %377 ], [ %373, %419 ]\l  %434 = phi i32 [ %417, %379 ], [ 0, %377 ], [ 0, %419 ]\l  %435 = phi i64 [ %416, %379 ], [ 0, %377 ], [ %429, %419 ]\l  %436 = icmp ugt i32 %434, 7\l  br i1 %436, label %439, label %437\l|{<s0>T|<s1>F}}"];
	Node0x5ce2600:s0 -> Node0x5ce4c80;
	Node0x5ce2600:s1 -> Node0x5ce4cd0;
	Node0x5ce4cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%437:\l437:                                              \l  %438 = icmp eq i32 %434, 0\l  br i1 %438, label %490, label %477\l|{<s0>T|<s1>F}}"];
	Node0x5ce4cd0:s0 -> Node0x5cd4be0;
	Node0x5ce4cd0:s1 -> Node0x5ce4e60;
	Node0x5ce4c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%439:\l439:                                              \l  %440 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !15\l  %441 = zext i8 %440 to i64\l  %442 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 1\l  %443 = load i8, i8 addrspace(4)* %442, align 1, !tbaa !15\l  %444 = zext i8 %443 to i64\l  %445 = shl nuw nsw i64 %444, 8\l  %446 = or i64 %445, %441\l  %447 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 2\l  %448 = load i8, i8 addrspace(4)* %447, align 1, !tbaa !15\l  %449 = zext i8 %448 to i64\l  %450 = shl nuw nsw i64 %449, 16\l  %451 = or i64 %446, %450\l  %452 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 3\l  %453 = load i8, i8 addrspace(4)* %452, align 1, !tbaa !15\l  %454 = zext i8 %453 to i64\l  %455 = shl nuw nsw i64 %454, 24\l  %456 = or i64 %451, %455\l  %457 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 4\l  %458 = load i8, i8 addrspace(4)* %457, align 1, !tbaa !15\l  %459 = zext i8 %458 to i64\l  %460 = shl nuw nsw i64 %459, 32\l  %461 = or i64 %456, %460\l  %462 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 5\l  %463 = load i8, i8 addrspace(4)* %462, align 1, !tbaa !15\l  %464 = zext i8 %463 to i64\l  %465 = shl nuw nsw i64 %464, 40\l  %466 = or i64 %461, %465\l  %467 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 6\l  %468 = load i8, i8 addrspace(4)* %467, align 1, !tbaa !15\l  %469 = zext i8 %468 to i64\l  %470 = shl nuw nsw i64 %469, 48\l  %471 = or i64 %466, %470\l  %472 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 7\l  %473 = load i8, i8 addrspace(4)* %472, align 1, !tbaa !15\l  %474 = zext i8 %473 to i64\l  %475 = shl nuw i64 %474, 56\l  %476 = or i64 %471, %475\l  br label %490\l}"];
	Node0x5ce4c80 -> Node0x5cd4be0;
	Node0x5ce4e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%477:\l477:                                              \l  %478 = phi i32 [ %488, %477 ], [ 0, %437 ]\l  %479 = phi i64 [ %487, %477 ], [ 0, %437 ]\l  %480 = zext i32 %478 to i64\l  %481 = getelementptr inbounds i8, i8 addrspace(4)* %433, i64 %480\l  %482 = load i8, i8 addrspace(4)* %481, align 1, !tbaa !15\l  %483 = zext i8 %482 to i64\l  %484 = shl i32 %478, 3\l  %485 = zext i32 %484 to i64\l  %486 = shl nuw i64 %483, %485\l  %487 = or i64 %486, %479\l  %488 = add nuw nsw i32 %478, 1\l  %489 = icmp eq i32 %488, %434\l  br i1 %489, label %490, label %477\l|{<s0>T|<s1>F}}"];
	Node0x5ce4e60:s0 -> Node0x5cd4be0;
	Node0x5ce4e60:s1 -> Node0x5ce4e60;
	Node0x5cd4be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%490:\l490:                                              \l  %491 = phi i64 [ %476, %439 ], [ 0, %437 ], [ %487, %477 ]\l  %492 = shl nuw nsw i64 %73, 2\l  %493 = add nuw nsw i64 %492, 28\l  %494 = and i64 %493, 480\l  %495 = and i64 %75, -225\l  %496 = or i64 %495, %494\l  %497 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %496, i64 noundef %135, i64 noundef %195, i64 noundef %255, i64\l... noundef %315, i64 noundef %375, i64 noundef %435, i64 noundef %491) #11\l  %498 = sub i64 %65, %73\l  %499 = getelementptr inbounds i8, i8 addrspace(4)* %66, i64 %73\l  %500 = icmp eq i64 %498, 0\l  br i1 %500, label %501, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5cd4be0:s0 -> Node0x5cd3990;
	Node0x5cd4be0:s1 -> Node0x5cd4530;
	Node0x5cd3990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%501:\l501:                                              \l  %502 = phi \<2 x i64\> [ %59, %56 ], [ %497, %490 ]\l  %503 = extractelement \<2 x i64\> %502, i64 0\l  %504 = zext i32 %6 to i64\l  %505 = and i64 %503, -225\l  %506 = or i64 %505, 32\l  %507 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %506, i64 noundef %504, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %508 = extractelement \<2 x i64\> %507, i64 0\l  %509 = zext i32 %35 to i64\l  %510 = and i64 %508, -225\l  %511 = or i64 %510, 32\l  %512 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %511, i64 noundef %509, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %513 = extractelement \<2 x i64\> %512, i64 0\l  %514 = and i64 %513, -225\l  %515 = or i64 %514, 32\l  %516 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %515, i64 noundef %33, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %517 = extractelement \<2 x i64\> %516, i64 0\l  %518 = zext i32 %11 to i64\l  %519 = and i64 %517, -225\l  %520 = or i64 %519, 32\l  %521 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %520, i64 noundef %518, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %522 = extractelement \<2 x i64\> %521, i64 0\l  %523 = zext i32 %47 to i64\l  %524 = and i64 %522, -225\l  %525 = or i64 %524, 32\l  %526 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %525, i64 noundef %523, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %527 = extractelement \<2 x i64\> %526, i64 0\l  %528 = zext i32 %32 to i64\l  %529 = and i64 %527, -227\l  %530 = or i64 %529, 34\l  %531 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %530, i64 noundef %528, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %532\l}"];
	Node0x5cd3990 -> Node0x5cd1ce0;
	Node0x5cd1ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%532:\l532:                                              \l  %533 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %33\l  store i32 %44, i32 addrspace(1)* %533, align 4, !tbaa !7\l  br label %534\l}"];
	Node0x5cd1ce0 -> Node0x5cd1210;
	Node0x5cd1210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%534:\l534:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
