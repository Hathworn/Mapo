digraph "CFG for '_Z34kernel_normalize_and_add_to_outputPfS_S_S_' function" {
	label="CFG for '_Z34kernel_normalize_and_add_to_outputPfS_S_S_' function";

	Node0x6296880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = and i32 %5, 16777215\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = and i32 %15, 16777215\l  %21 = mul i32 %20, %19\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %25 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !4, !invariant.load !5\l  %28 = zext i16 %27 to i32\l  %29 = and i32 %24, 16777215\l  %30 = mul i32 %29, %28\l  %31 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %32 = add i32 %30, %31\l  %33 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_volSize,\l... i64 0, i32 0, i32 0, i32 0, i32 0, i64 0), align 4, !tbaa !7\l  %34 = icmp ult i32 %14, %33\l  br i1 %34, label %35, label %70\l|{<s0>T|<s1>F}}"];
	Node0x6296880:s0 -> Node0x629a950;
	Node0x6296880:s1 -> Node0x629a9e0;
	Node0x629a950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%35:\l35:                                               \l  %36 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_volSize,\l... i64 0, i32 0, i32 0, i32 0, i32 0, i64 1), align 4, !tbaa !7\l  %37 = icmp ult i32 %23, %36\l  %38 = load i32, i32 addrspace(4)* getelementptr inbounds\l... (%struct.HIP_vector_type, %struct.HIP_vector_type addrspace(4)* @c_volSize,\l... i64 0, i32 0, i32 0, i32 0, i32 0, i64 2), align 4\l  %39 = icmp ult i32 %32, %38\l  %40 = select i1 %37, i1 %39, i1 false\l  br i1 %40, label %41, label %70\l|{<s0>T|<s1>F}}"];
	Node0x629a950:s0 -> Node0x629b660;
	Node0x629a950:s1 -> Node0x629a9e0;
	Node0x629b660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%41:\l41:                                               \l  %42 = mul i32 %36, %32\l  %43 = add i32 %42, %23\l  %44 = mul i32 %43, %33\l  %45 = add i32 %44, %14\l  %46 = zext i32 %45 to i64\l  %47 = load i8, i8 addrspace(4)* @c_normalize, align 1, !tbaa !10, !range !12\l  %48 = icmp eq i8 %47, 0\l  br i1 %48, label %61, label %49\l|{<s0>T|<s1>F}}"];
	Node0x629b660:s0 -> Node0x629bdc0;
	Node0x629b660:s1 -> Node0x629be50;
	Node0x629be50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %46\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %52 = tail call float @llvm.fabs.f32(float %51)\l  %53 = fcmp contract ogt float %52, 0x3EB0C6F7A0000000\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !13\l  br i1 %53, label %56, label %67\l|{<s0>T|<s1>F}}"];
	Node0x629be50:s0 -> Node0x629d600;
	Node0x629be50:s1 -> Node0x629d690;
	Node0x629d600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%56:\l56:                                               \l  %57 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %59 = fdiv contract float %58, %51\l  %60 = fadd contract float %55, %59\l  br label %67\l}"];
	Node0x629d600 -> Node0x629d690;
	Node0x629bdc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %64 = getelementptr inbounds float, float addrspace(1)* %3, i64 %46\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %66 = fadd contract float %63, %65\l  br label %67\l}"];
	Node0x629bdc0 -> Node0x629d690;
	Node0x629d690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%67:\l67:                                               \l  %68 = phi float [ %66, %61 ], [ %60, %56 ], [ %55, %49 ]\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  store float %68, float addrspace(1)* %69, align 4, !tbaa !13\l  br label %70\l}"];
	Node0x629d690 -> Node0x629a9e0;
	Node0x629a9e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  ret void\l}"];
}
