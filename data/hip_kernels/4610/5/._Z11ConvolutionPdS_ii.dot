digraph "CFG for '_Z11ConvolutionPdS_ii' function" {
	label="CFG for '_Z11ConvolutionPdS_ii' function";

	Node0x4561bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp sgt i32 %13, %3\l  br i1 %14, label %15, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4561bc0:s0 -> Node0x4563ac0;
	Node0x4561bc0:s1 -> Node0x4563b50;
	Node0x4563ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%15:\l15:                                               \l  %16 = mul nsw i32 %3, %2\l  %17 = sub nsw i32 %16, %3\l  %18 = icmp slt i32 %13, %17\l  br i1 %18, label %19, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4563ac0:s0 -> Node0x4563ec0;
	Node0x4563ac0:s1 -> Node0x4563b50;
	Node0x4563ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%19:\l19:                                               \l  %20 = srem i32 %13, %3\l  %21 = icmp eq i32 %20, 0\l  br i1 %21, label %79, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4563ec0:s0 -> Node0x4563b50;
	Node0x4563ec0:s1 -> Node0x45640e0;
	Node0x45640e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%22:\l22:                                               \l  %23 = add nsw i32 %13, 1\l  %24 = srem i32 %23, %3\l  %25 = icmp eq i32 %24, 0\l  br i1 %25, label %79, label %26\l|{<s0>T|<s1>F}}"];
	Node0x45640e0:s0 -> Node0x4563b50;
	Node0x45640e0:s1 -> Node0x45643c0;
	Node0x45643c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%26:\l26:                                               \l  %27 = sub nsw i32 %13, %3\l  %28 = add nsw i32 %27, -1\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = fmul contract double %31, 2.000000e-01\l  %33 = add nsw i32 %13, -1\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = fmul contract double %36, 3.000000e-01\l  %38 = fsub contract double %32, %37\l  %39 = add nsw i32 %13, %3\l  %40 = add nsw i32 %39, -1\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %0, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fmul contract double %43, 4.000000e-01\l  %45 = fadd contract double %38, %44\l  %46 = sext i32 %27 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fmul contract double %48, 5.000000e-01\l  %50 = fadd contract double %45, %49\l  %51 = sext i32 %13 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %54 = fmul contract double %53, 6.000000e-01\l  %55 = fadd contract double %50, %54\l  %56 = sext i32 %39 to i64\l  %57 = getelementptr inbounds double, double addrspace(1)* %0, i64 %56\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fmul contract double %58, 0x3FE6666666666666\l  %60 = fadd contract double %55, %59\l  %61 = add nsw i32 %27, 1\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = fmul contract double %64, 8.000000e-01\l  %66 = fsub contract double %60, %65\l  %67 = sext i32 %23 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fmul contract double %69, 9.000000e-01\l  %71 = fsub contract double %66, %70\l  %72 = add nsw i32 %39, 1\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds double, double addrspace(1)* %0, i64 %73\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %76 = fmul contract double %75, 1.000000e-01\l  %77 = fadd contract double %71, %76\l  %78 = getelementptr inbounds double, double addrspace(1)* %1, i64 %51\l  store double %77, double addrspace(1)* %78, align 8, !tbaa !7\l  br label %79\l}"];
	Node0x45643c0 -> Node0x4563b50;
	Node0x4563b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%79:\l79:                                               \l  ret void\l}"];
}
