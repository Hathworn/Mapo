digraph "CFG for '_Z8calcdataPdS_ii' function" {
	label="CFG for '_Z8calcdataPdS_ii' function";

	Node0x4c0e4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add nuw nsw i32 %12, 1\l  %14 = add i32 %13, %11\l  %15 = add nsw i32 %3, 1\l  %16 = icmp sgt i32 %14, %15\l  %17 = icmp slt i32 %2, 1\l  %18 = select i1 %16, i1 true, i1 %17\l  br i1 %18, label %121, label %19\l|{<s0>T|<s1>F}}"];
	Node0x4c0e4f0:s0 -> Node0x4c10700;
	Node0x4c0e4f0:s1 -> Node0x4c10790;
	Node0x4c10790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = add nuw nsw i32 %2, 1\l  %21 = mul nsw i32 %14, %20\l  %22 = add i32 %2, -1\l  %23 = and i32 %2, 7\l  %24 = icmp ult i32 %22, 7\l  br i1 %24, label %104, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4c10790:s0 -> Node0x4c10c00;
	Node0x4c10790:s1 -> Node0x4c10c50;
	Node0x4c10c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%25:\l25:                                               \l  %26 = and i32 %2, -8\l  br label %27\l}"];
	Node0x4c10c50 -> Node0x4c10e50;
	Node0x4c10e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%27:\l27:                                               \l  %28 = phi i32 [ 1, %25 ], [ %101, %27 ]\l  %29 = phi i32 [ 0, %25 ], [ %102, %27 ]\l  %30 = zext i32 %28 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %1, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7\l  %33 = add nsw i32 %28, %21\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7\l  %37 = fsub contract double %36, %32\l  store double %37, double addrspace(1)* %35, align 8, !tbaa !7\l  %38 = add nuw nsw i32 %28, 1\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %1, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = add nsw i32 %38, %21\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7\l  %46 = fsub contract double %45, %41\l  store double %46, double addrspace(1)* %44, align 8, !tbaa !7\l  %47 = add nuw nsw i32 %28, 2\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !7\l  %51 = add nsw i32 %47, %21\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %0, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !7\l  %55 = fsub contract double %54, %50\l  store double %55, double addrspace(1)* %53, align 8, !tbaa !7\l  %56 = add nuw nsw i32 %28, 3\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %1, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !7\l  %60 = add nsw i32 %56, %21\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %0, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = fsub contract double %63, %59\l  store double %64, double addrspace(1)* %62, align 8, !tbaa !7\l  %65 = add nuw nsw i32 %28, 4\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %1, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !7\l  %69 = add nsw i32 %65, %21\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %0, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7\l  %73 = fsub contract double %72, %68\l  store double %73, double addrspace(1)* %71, align 8, !tbaa !7\l  %74 = add nuw nsw i32 %28, 5\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %1, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !7\l  %78 = add nsw i32 %74, %21\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds double, double addrspace(1)* %0, i64 %79\l  %81 = load double, double addrspace(1)* %80, align 8, !tbaa !7\l  %82 = fsub contract double %81, %77\l  store double %82, double addrspace(1)* %80, align 8, !tbaa !7\l  %83 = add nuw nsw i32 %28, 6\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %1, i64 %84\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !7\l  %87 = add nsw i32 %83, %21\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds double, double addrspace(1)* %0, i64 %88\l  %90 = load double, double addrspace(1)* %89, align 8, !tbaa !7\l  %91 = fsub contract double %90, %86\l  store double %91, double addrspace(1)* %89, align 8, !tbaa !7\l  %92 = add nuw i32 %28, 7\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %1, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !7\l  %96 = add nsw i32 %92, %21\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds double, double addrspace(1)* %0, i64 %97\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !7\l  %100 = fsub contract double %99, %95\l  store double %100, double addrspace(1)* %98, align 8, !tbaa !7\l  %101 = add nuw i32 %28, 8\l  %102 = add i32 %29, 8\l  %103 = icmp eq i32 %102, %26\l  br i1 %103, label %104, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c10e50:s0 -> Node0x4c10c00;
	Node0x4c10e50:s1 -> Node0x4c10e50;
	Node0x4c10c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%104:\l104:                                              \l  %105 = phi i32 [ 1, %19 ], [ %101, %27 ]\l  %106 = icmp eq i32 %23, 0\l  br i1 %106, label %121, label %107\l|{<s0>T|<s1>F}}"];
	Node0x4c10c00:s0 -> Node0x4c10700;
	Node0x4c10c00:s1 -> Node0x4c14aa0;
	Node0x4c14aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi i32 [ %118, %107 ], [ %105, %104 ]\l  %109 = phi i32 [ %119, %107 ], [ 0, %104 ]\l  %110 = zext i32 %108 to i64\l  %111 = getelementptr inbounds double, double addrspace(1)* %1, i64 %110\l  %112 = load double, double addrspace(1)* %111, align 8, !tbaa !7\l  %113 = add nsw i32 %108, %21\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds double, double addrspace(1)* %0, i64 %114\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !7\l  %117 = fsub contract double %116, %112\l  store double %117, double addrspace(1)* %115, align 8, !tbaa !7\l  %118 = add nuw i32 %108, 1\l  %119 = add i32 %109, 1\l  %120 = icmp eq i32 %119, %23\l  br i1 %120, label %121, label %107, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c14aa0:s0 -> Node0x4c10700;
	Node0x4c14aa0:s1 -> Node0x4c14aa0;
	Node0x4c10700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%121:\l121:                                              \l  ret void\l}"];
}
