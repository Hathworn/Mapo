digraph "CFG for '_Z8calcmeanPdS_ii' function" {
	label="CFG for '_Z8calcmeanPdS_ii' function";

	Node0x4b9e250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add nuw nsw i32 %12, 1\l  %14 = add i32 %13, %11\l  %15 = add nsw i32 %2, 1\l  %16 = icmp sgt i32 %14, %15\l  br i1 %16, label %109, label %17\l|{<s0>T|<s1>F}}"];
	Node0x4b9e250:s0 -> Node0x4b9f990;
	Node0x4b9e250:s1 -> Node0x4ba0380;
	Node0x4ba0380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = sext i32 %14 to i64\l  %19 = getelementptr inbounds double, double addrspace(1)* %1, i64 %18\l  store double 0.000000e+00, double addrspace(1)* %19, align 8, !tbaa !7\l  %20 = icmp slt i32 %3, 1\l  br i1 %20, label %106, label %21\l|{<s0>T|<s1>F}}"];
	Node0x4ba0380:s0 -> Node0x4ba1270;
	Node0x4ba0380:s1 -> Node0x4ba1300;
	Node0x4ba1300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = and i32 %3, 7\l  %23 = icmp ult i32 %3, 8\l  br i1 %23, label %88, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4ba1300:s0 -> Node0x4ba1590;
	Node0x4ba1300:s1 -> Node0x4ba15e0;
	Node0x4ba15e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %3, -8\l  br label %26\l}"];
	Node0x4ba15e0 -> Node0x4ba17e0;
	Node0x4ba17e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%26:\l26:                                               \l  %27 = phi double [ 0.000000e+00, %24 ], [ %84, %26 ]\l  %28 = phi i32 [ 1, %24 ], [ %85, %26 ]\l  %29 = phi i32 [ 0, %24 ], [ %86, %26 ]\l  %30 = mul nsw i32 %28, %15\l  %31 = add nsw i32 %30, %14\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %0, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !7\l  %35 = fadd contract double %34, %27\l  store double %35, double addrspace(1)* %19, align 8, !tbaa !7\l  %36 = add nuw nsw i32 %28, 1\l  %37 = mul nsw i32 %36, %15\l  %38 = add nsw i32 %37, %14\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, double addrspace(1)* %0, i64 %39\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7\l  %42 = fadd contract double %41, %35\l  store double %42, double addrspace(1)* %19, align 8, !tbaa !7\l  %43 = add nuw nsw i32 %28, 2\l  %44 = mul nsw i32 %43, %15\l  %45 = add nsw i32 %44, %14\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, double addrspace(1)* %0, i64 %46\l  %48 = load double, double addrspace(1)* %47, align 8, !tbaa !7\l  %49 = fadd contract double %48, %42\l  store double %49, double addrspace(1)* %19, align 8, !tbaa !7\l  %50 = add nuw nsw i32 %28, 3\l  %51 = mul nsw i32 %50, %15\l  %52 = add nsw i32 %51, %14\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds double, double addrspace(1)* %0, i64 %53\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7\l  %56 = fadd contract double %55, %49\l  store double %56, double addrspace(1)* %19, align 8, !tbaa !7\l  %57 = add nuw nsw i32 %28, 4\l  %58 = mul nsw i32 %57, %15\l  %59 = add nsw i32 %58, %14\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds double, double addrspace(1)* %0, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !7\l  %63 = fadd contract double %62, %56\l  store double %63, double addrspace(1)* %19, align 8, !tbaa !7\l  %64 = add nuw nsw i32 %28, 5\l  %65 = mul nsw i32 %64, %15\l  %66 = add nsw i32 %65, %14\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7\l  %70 = fadd contract double %69, %63\l  store double %70, double addrspace(1)* %19, align 8, !tbaa !7\l  %71 = add nuw nsw i32 %28, 6\l  %72 = mul nsw i32 %71, %15\l  %73 = add nsw i32 %72, %14\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %0, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !7\l  %77 = fadd contract double %76, %70\l  store double %77, double addrspace(1)* %19, align 8, !tbaa !7\l  %78 = add nuw i32 %28, 7\l  %79 = mul nsw i32 %78, %15\l  %80 = add nsw i32 %79, %14\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds double, double addrspace(1)* %0, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7\l  %84 = fadd contract double %83, %77\l  store double %84, double addrspace(1)* %19, align 8, !tbaa !7\l  %85 = add nuw i32 %28, 8\l  %86 = add i32 %29, 8\l  %87 = icmp eq i32 %86, %25\l  br i1 %87, label %88, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4ba17e0:s0 -> Node0x4ba1590;
	Node0x4ba17e0:s1 -> Node0x4ba17e0;
	Node0x4ba1590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%88:\l88:                                               \l  %89 = phi double [ undef, %21 ], [ %84, %26 ]\l  %90 = phi double [ 0.000000e+00, %21 ], [ %84, %26 ]\l  %91 = phi i32 [ 1, %21 ], [ %85, %26 ]\l  %92 = icmp eq i32 %22, 0\l  br i1 %92, label %106, label %93\l|{<s0>T|<s1>F}}"];
	Node0x4ba1590:s0 -> Node0x4ba1270;
	Node0x4ba1590:s1 -> Node0x4ba51b0;
	Node0x4ba51b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi double [ %102, %93 ], [ %90, %88 ]\l  %95 = phi i32 [ %103, %93 ], [ %91, %88 ]\l  %96 = phi i32 [ %104, %93 ], [ 0, %88 ]\l  %97 = mul nsw i32 %95, %15\l  %98 = add nsw i32 %97, %14\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds double, double addrspace(1)* %0, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !7\l  %102 = fadd contract double %101, %94\l  store double %102, double addrspace(1)* %19, align 8, !tbaa !7\l  %103 = add nuw i32 %95, 1\l  %104 = add i32 %96, 1\l  %105 = icmp eq i32 %104, %22\l  br i1 %105, label %106, label %93, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4ba51b0:s0 -> Node0x4ba1270;
	Node0x4ba51b0:s1 -> Node0x4ba51b0;
	Node0x4ba1270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%106:\l106:                                              \l  %107 = phi double [ 0.000000e+00, %17 ], [ %89, %88 ], [ %102, %93 ]\l  %108 = fdiv contract double %107, 0x414885C20147AE14\l  store double %108, double addrspace(1)* %19, align 8, !tbaa !7\l  br label %109\l}"];
	Node0x4ba1270 -> Node0x4b9f990;
	Node0x4b9f990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%109:\l109:                                              \l  ret void\l}"];
}
