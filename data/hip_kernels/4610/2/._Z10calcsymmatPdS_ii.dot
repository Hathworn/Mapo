digraph "CFG for '_Z10calcsymmatPdS_ii' function" {
	label="CFG for '_Z10calcsymmatPdS_ii' function";

	Node0x5cdb2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add nuw nsw i32 %12, 1\l  %14 = add i32 %13, %11\l  %15 = add nsw i32 %2, 1\l  %16 = icmp sgt i32 %14, %15\l  %17 = icmp sgt i32 %14, %2\l  %18 = or i1 %16, %17\l  br i1 %18, label %116, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5cdb2e0:s0 -> Node0x5cdd4a0;
	Node0x5cdb2e0:s1 -> Node0x5cdd530;
	Node0x5cdd530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = mul nsw i32 %14, %15\l  %21 = icmp slt i32 %3, 1\l  %22 = and i32 %3, 3\l  %23 = icmp ult i32 %3, 4\l  %24 = and i32 %3, -4\l  %25 = icmp eq i32 %22, 0\l  br label %26\l}"];
	Node0x5cdd530 -> Node0x5cdda90;
	Node0x5cdda90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%26:\l26:                                               \l  %27 = phi i32 [ %14, %19 ], [ %114, %108 ]\l  %28 = add nsw i32 %27, %20\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29\l  store double 0.000000e+00, double addrspace(1)* %30, align 8, !tbaa !7\l  br i1 %21, label %108, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5cdda90:s0 -> Node0x5cddb80;
	Node0x5cdda90:s1 -> Node0x5cdeab0;
	Node0x5cdeab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%31:\l31:                                               \l  br i1 %23, label %86, label %32\l|{<s0>T|<s1>F}}"];
	Node0x5cdeab0:s0 -> Node0x5cdebf0;
	Node0x5cdeab0:s1 -> Node0x5cdec40;
	Node0x5cdec40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%32:\l32:                                               \l  %33 = phi double [ %82, %32 ], [ 0.000000e+00, %31 ]\l  %34 = phi i32 [ %83, %32 ], [ 1, %31 ]\l  %35 = phi i32 [ %84, %32 ], [ 0, %31 ]\l  %36 = mul nsw i32 %34, %15\l  %37 = add nsw i32 %36, %14\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !7\l  %41 = add nsw i32 %36, %27\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %0, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7\l  %45 = fmul contract double %40, %44\l  %46 = fadd contract double %33, %45\l  store double %46, double addrspace(1)* %30, align 8, !tbaa !7\l  %47 = add nuw nsw i32 %34, 1\l  %48 = mul nsw i32 %47, %15\l  %49 = add nsw i32 %48, %14\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds double, double addrspace(1)* %0, i64 %50\l  %52 = load double, double addrspace(1)* %51, align 8, !tbaa !7\l  %53 = add nsw i32 %48, %27\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %54\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %57 = fmul contract double %52, %56\l  %58 = fadd contract double %46, %57\l  store double %58, double addrspace(1)* %30, align 8, !tbaa !7\l  %59 = add nuw nsw i32 %34, 2\l  %60 = mul nsw i32 %59, %15\l  %61 = add nsw i32 %60, %14\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %0, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7\l  %65 = add nsw i32 %60, %27\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %0, i64 %66\l  %68 = load double, double addrspace(1)* %67, align 8, !tbaa !7\l  %69 = fmul contract double %64, %68\l  %70 = fadd contract double %58, %69\l  store double %70, double addrspace(1)* %30, align 8, !tbaa !7\l  %71 = add nuw i32 %34, 3\l  %72 = mul nsw i32 %71, %15\l  %73 = add nsw i32 %72, %14\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %0, i64 %74\l  %76 = load double, double addrspace(1)* %75, align 8, !tbaa !7\l  %77 = add nsw i32 %72, %27\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %0, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !7\l  %81 = fmul contract double %76, %80\l  %82 = fadd contract double %70, %81\l  store double %82, double addrspace(1)* %30, align 8, !tbaa !7\l  %83 = add nuw i32 %34, 4\l  %84 = add i32 %35, 4\l  %85 = icmp eq i32 %84, %24\l  br i1 %85, label %86, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5cdec40:s0 -> Node0x5cdebf0;
	Node0x5cdec40:s1 -> Node0x5cdec40;
	Node0x5cdebf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%86:\l86:                                               \l  %87 = phi double [ undef, %31 ], [ %82, %32 ]\l  %88 = phi double [ 0.000000e+00, %31 ], [ %82, %32 ]\l  %89 = phi i32 [ 1, %31 ], [ %83, %32 ]\l  br i1 %25, label %108, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5cdebf0:s0 -> Node0x5cddb80;
	Node0x5cdebf0:s1 -> Node0x5ce1e10;
	Node0x5ce1e10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi double [ %104, %90 ], [ %88, %86 ]\l  %92 = phi i32 [ %105, %90 ], [ %89, %86 ]\l  %93 = phi i32 [ %106, %90 ], [ 0, %86 ]\l  %94 = mul nsw i32 %92, %15\l  %95 = add nsw i32 %94, %14\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds double, double addrspace(1)* %0, i64 %96\l  %98 = load double, double addrspace(1)* %97, align 8, !tbaa !7\l  %99 = add nsw i32 %94, %27\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %0, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !7\l  %103 = fmul contract double %98, %102\l  %104 = fadd contract double %91, %103\l  store double %104, double addrspace(1)* %30, align 8, !tbaa !7\l  %105 = add nuw i32 %92, 1\l  %106 = add i32 %93, 1\l  %107 = icmp eq i32 %106, %22\l  br i1 %107, label %108, label %90, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ce1e10:s0 -> Node0x5cddb80;
	Node0x5ce1e10:s1 -> Node0x5ce1e10;
	Node0x5cddb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%108:\l108:                                              \l  %109 = phi double [ 0.000000e+00, %26 ], [ %87, %86 ], [ %104, %90 ]\l  %110 = mul nsw i32 %27, %15\l  %111 = add nsw i32 %110, %14\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %1, i64 %112\l  store double %109, double addrspace(1)* %113, align 8, !tbaa !7\l  %114 = add nsw i32 %27, 1\l  %115 = icmp slt i32 %27, %2\l  br i1 %115, label %26, label %116, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5cddb80:s0 -> Node0x5cdda90;
	Node0x5cddb80:s1 -> Node0x5cdd4a0;
	Node0x5cdd4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%116:\l116:                                              \l  ret void\l}"];
}
