digraph "CFG for '_Z8gpu_sortPiii' function" {
	label="CFG for '_Z8gpu_sortPiii' function";

	Node0x4a206e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = mul i32 %12, %2\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4a206e0:s0 -> Node0x4a22650;
	Node0x4a206e0:s1 -> Node0x4a226e0;
	Node0x4a22650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%15:\l15:                                               \l  %16 = add nsw i32 %13, %2\l  %17 = tail call i32 @llvm.smin.i32(i32 %16, i32 %1)\l  %18 = add nsw i32 %13, 1\l  %19 = icmp slt i32 %18, %17\l  br i1 %19, label %20, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4a22650:s0 -> Node0x4a22c50;
	Node0x4a22650:s1 -> Node0x4a226e0;
	Node0x4a22c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%20:\l20:                                               \l  %21 = add nsw i32 %13, -1\l  br label %22\l}"];
	Node0x4a22c50 -> Node0x4a22e50;
	Node0x4a22e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%22:\l22:                                               \l  %23 = phi i32 [ %18, %20 ], [ %49, %48 ]\l  %24 = phi i32 [ %13, %20 ], [ %23, %48 ]\l  %25 = sext i32 %23 to i64\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %25\l  %27 = load i32, i32 addrspace(1)* %26, align 4, !tbaa !7\l  %28 = icmp slt i32 %24, %21\l  br i1 %28, label %48, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4a22e50:s0 -> Node0x4a22f40;
	Node0x4a22e50:s1 -> Node0x4a234e0;
	Node0x4a234e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %46, %42 ], [ %24, %22 ]\l  %31 = icmp eq i32 %30, %21\l  br i1 %31, label %37, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4a234e0:s0 -> Node0x4a237f0;
	Node0x4a234e0:s1 -> Node0x4a23880;
	Node0x4a23880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = sext i32 %30 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %36 = icmp sgt i32 %27, %35\l  br i1 %36, label %37, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4a23880:s0 -> Node0x4a237f0;
	Node0x4a23880:s1 -> Node0x4a23620;
	Node0x4a237f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = phi i32 [ %30, %32 ], [ %21, %29 ]\l  %39 = add nsw i32 %38, 1\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %40\l  store i32 %27, i32 addrspace(1)* %41, align 4, !tbaa !7\l  br label %48\l}"];
	Node0x4a237f0 -> Node0x4a22f40;
	Node0x4a23620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%42:\l42:                                               \l  %43 = add nsw i32 %30, 1\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %44\l  store i32 %35, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %46 = add nsw i32 %30, -1\l  %47 = icmp slt i32 %30, %13\l  br i1 %47, label %48, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4a23620:s0 -> Node0x4a22f40;
	Node0x4a23620:s1 -> Node0x4a234e0;
	Node0x4a22f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%48:\l48:                                               \l  %49 = add nsw i32 %23, 1\l  %50 = icmp slt i32 %49, %17\l  br i1 %50, label %22, label %51, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4a22f40:s0 -> Node0x4a22e50;
	Node0x4a22f40:s1 -> Node0x4a226e0;
	Node0x4a226e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%51:\l51:                                               \l  ret void\l}"];
}
