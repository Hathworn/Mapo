digraph "CFG for '_Z10meanMatrixPdS_iPi' function" {
	label="CFG for '_Z10meanMatrixPdS_iPi' function";

	Node0x5ac3b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !7\l  %15 = mul i32 %6, %11\l  %16 = add i32 %15, %5\l  %17 = icmp slt i32 %16, %2\l  br i1 %17, label %18, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5ac3b10:s0 -> Node0x5ac3b60;
	Node0x5ac3b10:s1 -> Node0x5ac5e10;
	Node0x5ac3b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = udiv i32 %14, %11\l  %20 = mul i32 %19, %11\l  %21 = icmp ugt i32 %14, %20\l  %22 = zext i1 %21 to i32\l  %23 = add i32 %19, %22\l  %24 = mul i32 %23, %11\l  br label %25\l}"];
	Node0x5ac3b60 -> Node0x5ac6290;
	Node0x5ac6290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi double [ 0.000000e+00, %18 ], [ %31, %25 ]\l  %27 = phi i32 [ %16, %18 ], [ %32, %25 ]\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %0, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %31 = fadd contract double %26, %30\l  %32 = add i32 %24, %27\l  %33 = icmp slt i32 %32, %2\l  br i1 %33, label %25, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5ac6290:s0 -> Node0x5ac6290;
	Node0x5ac6290:s1 -> Node0x5ac5e10;
	Node0x5ac5e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%34:\l34:                                               \l  %35 = phi double [ 0.000000e+00, %4 ], [ %31, %25 ]\l  %36 = getelementptr inbounds [512 x double], [512 x double] addrspace(3)*\l... @_ZZ10meanMatrixPdS_iPiE5cache, i32 0, i32 %5\l  store double %35, double addrspace(3)* %36, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = icmp ult i16 %10, 2\l  br i1 %37, label %53, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5ac5e10:s0 -> Node0x5ac8880;
	Node0x5ac5e10:s1 -> Node0x5ac88d0;
	Node0x5ac88d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%38:\l38:                                               \l  %39 = lshr i32 %11, 1\l  br label %40\l}"];
	Node0x5ac88d0 -> Node0x5ac8ad0;
	Node0x5ac8ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi i32 [ %50, %49 ], [ %39, %38 ]\l  %42 = icmp slt i32 %5, %41\l  br i1 %42, label %43, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5ac8ad0:s0 -> Node0x5ac8d90;
	Node0x5ac8ad0:s1 -> Node0x5ac8bc0;
	Node0x5ac8d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  %44 = add nsw i32 %41, %5\l  %45 = getelementptr inbounds [512 x double], [512 x double] addrspace(3)*\l... @_ZZ10meanMatrixPdS_iPiE5cache, i32 0, i32 %44\l  %46 = load double, double addrspace(3)* %45, align 8, !tbaa !16\l  %47 = load double, double addrspace(3)* %36, align 8, !tbaa !16\l  %48 = fadd contract double %46, %47\l  store double %48, double addrspace(3)* %36, align 8, !tbaa !16\l  br label %49\l}"];
	Node0x5ac8d90 -> Node0x5ac8bc0;
	Node0x5ac8bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%49:\l49:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %50 = sdiv i32 %41, 2\l  %51 = add nsw i32 %41, 1\l  %52 = icmp ult i32 %51, 3\l  br i1 %52, label %53, label %40, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5ac8bc0:s0 -> Node0x5ac8880;
	Node0x5ac8bc0:s1 -> Node0x5ac8ad0;
	Node0x5ac8880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%53:\l53:                                               \l  %54 = icmp eq i32 %5, 0\l  br i1 %54, label %55, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5ac8880:s0 -> Node0x5ac97d0;
	Node0x5ac8880:s1 -> Node0x5ac9820;
	Node0x5ac97d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%55:\l55:                                               \l  %56 = cmpxchg i32 addrspace(1)* %3, i32 0, i32 1 syncscope(\"agent-one-as\")\l... monotonic monotonic, align 4\l  %57 = extractvalue \{ i32, i1 \} %56, 1\l  br i1 %57, label %58, label %55, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5ac97d0:s0 -> Node0x5ac9ce0;
	Node0x5ac97d0:s1 -> Node0x5ac97d0;
	Node0x5ac9ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%58:\l58:                                               \l  %59 = load double, double addrspace(3)* getelementptr inbounds ([512 x\l... double], [512 x double] addrspace(3)* @_ZZ10meanMatrixPdS_iPiE5cache, i32 0,\l... i32 0), align 16, !tbaa !16\l  %60 = load double, double addrspace(1)* %1, align 8, !tbaa !16\l  %61 = fadd contract double %59, %60\l  store double %61, double addrspace(1)* %1, align 8, !tbaa !16\l  %62 = atomicrmw xchg i32 addrspace(1)* %3, i32 0 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %63 = load double, double addrspace(1)* %1, align 8, !tbaa !16\l  %64 = sitofp i32 %2 to double\l  %65 = fdiv contract double %63, %64\l  store double %65, double addrspace(1)* %1, align 8, !tbaa !16\l  br label %66\l}"];
	Node0x5ac9ce0 -> Node0x5ac9820;
	Node0x5ac9820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%66:\l66:                                               \l  ret void\l}"];
}
