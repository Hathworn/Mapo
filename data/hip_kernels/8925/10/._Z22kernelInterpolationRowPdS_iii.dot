digraph "CFG for '_Z22kernelInterpolationRowPdS_iii' function" {
	label="CFG for '_Z22kernelInterpolationRowPdS_iii' function";

	Node0x47a8fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = icmp slt i32 %14, %2\l  br i1 %15, label %16, label %161\l|{<s0>T|<s1>F}}"];
	Node0x47a8fa0:s0 -> Node0x47aaeb0;
	Node0x47a8fa0:s1 -> Node0x47aaf40;
	Node0x47aaeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%16:\l16:                                               \l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !5, !invariant.load !6\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %24 = add i32 %22, %23\l  %25 = mul nsw i32 %24, %2\l  %26 = add nsw i32 %25, %14\l  %27 = mul nsw i32 %25, %4\l  %28 = add i32 %27, %14\l  %29 = mul i32 %28, %4\l  %30 = sext i32 %26 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = add nsw i32 %26, 1\l  %33 = sext i32 %32 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %0, i64 %33\l  %35 = sitofp i32 %4 to double\l  %36 = add nsw i32 %2, -1\l  %37 = icmp eq i32 %14, %36\l  %38 = icmp slt i32 %4, 0\l  %39 = icmp sgt i32 %4, 0\l  %40 = add i32 %4, 1\l  %41 = and i32 %40, 7\l  %42 = icmp ult i32 %4, 7\l  %43 = and i32 %40, -8\l  %44 = icmp eq i32 %41, 0\l  %45 = and i32 %4, 7\l  %46 = icmp ult i32 %4, 8\l  %47 = and i32 %4, -8\l  %48 = icmp eq i32 %45, 0\l  br label %49\l}"];
	Node0x47aaeb0 -> Node0x47ad9c0;
	Node0x47ad9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%49:\l49:                                               \l  %50 = load double, double addrspace(1)* %31, align 8, !tbaa !7\l  %51 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %52 = fsub contract double %51, %50\l  %53 = fdiv contract double %52, %35\l  br i1 %37, label %56, label %54\l|{<s0>T|<s1>F}}"];
	Node0x47ad9c0:s0 -> Node0x47ae400;
	Node0x47ad9c0:s1 -> Node0x47ae490;
	Node0x47ae490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%54:\l54:                                               \l  br i1 %38, label %160, label %55\l|{<s0>T|<s1>F}}"];
	Node0x47ae490:s0 -> Node0x47ae5d0;
	Node0x47ae490:s1 -> Node0x47ae620;
	Node0x47ae620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%55:\l55:                                               \l  br i1 %42, label %147, label %58\l|{<s0>T|<s1>F}}"];
	Node0x47ae620:s0 -> Node0x47ae760;
	Node0x47ae620:s1 -> Node0x47ae7b0;
	Node0x47ae400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%56:\l56:                                               \l  br i1 %39, label %57, label %160\l|{<s0>T|<s1>F}}"];
	Node0x47ae400:s0 -> Node0x47ae8f0;
	Node0x47ae400:s1 -> Node0x47ae5d0;
	Node0x47ae8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%57:\l57:                                               \l  br i1 %46, label %134, label %96\l|{<s0>T|<s1>F}}"];
	Node0x47ae8f0:s0 -> Node0x47ae9f0;
	Node0x47ae8f0:s1 -> Node0x47aea40;
	Node0x47ae7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%58:\l58:                                               \l  %59 = phi i32 [ %93, %58 ], [ %29, %55 ]\l  %60 = phi double [ %92, %58 ], [ %50, %55 ]\l  %61 = phi i32 [ %94, %58 ], [ 0, %55 ]\l  %62 = sext i32 %59 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %62\l  store double %60, double addrspace(1)* %63, align 8, !tbaa !7\l  %64 = fadd contract double %53, %60\l  %65 = add nsw i32 %59, 1\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds double, double addrspace(1)* %1, i64 %66\l  store double %64, double addrspace(1)* %67, align 8, !tbaa !7\l  %68 = fadd contract double %53, %64\l  %69 = add nsw i32 %59, 2\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %1, i64 %70\l  store double %68, double addrspace(1)* %71, align 8, !tbaa !7\l  %72 = fadd contract double %53, %68\l  %73 = add nsw i32 %59, 3\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds double, double addrspace(1)* %1, i64 %74\l  store double %72, double addrspace(1)* %75, align 8, !tbaa !7\l  %76 = fadd contract double %53, %72\l  %77 = add nsw i32 %59, 4\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds double, double addrspace(1)* %1, i64 %78\l  store double %76, double addrspace(1)* %79, align 8, !tbaa !7\l  %80 = fadd contract double %53, %76\l  %81 = add nsw i32 %59, 5\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, double addrspace(1)* %1, i64 %82\l  store double %80, double addrspace(1)* %83, align 8, !tbaa !7\l  %84 = fadd contract double %53, %80\l  %85 = add nsw i32 %59, 6\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %1, i64 %86\l  store double %84, double addrspace(1)* %87, align 8, !tbaa !7\l  %88 = fadd contract double %53, %84\l  %89 = add nsw i32 %59, 7\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds double, double addrspace(1)* %1, i64 %90\l  store double %88, double addrspace(1)* %91, align 8, !tbaa !7\l  %92 = fadd contract double %53, %88\l  %93 = add nsw i32 %59, 8\l  %94 = add i32 %61, 8\l  %95 = icmp eq i32 %94, %43\l  br i1 %95, label %147, label %58, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47ae7b0:s0 -> Node0x47ae760;
	Node0x47ae7b0:s1 -> Node0x47ae7b0;
	Node0x47aea40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%96:\l96:                                               \l  %97 = phi i32 [ %131, %96 ], [ %29, %57 ]\l  %98 = phi double [ %130, %96 ], [ %51, %57 ]\l  %99 = phi i32 [ %132, %96 ], [ 0, %57 ]\l  %100 = sext i32 %97 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %1, i64 %100\l  store double %98, double addrspace(1)* %101, align 8, !tbaa !7\l  %102 = fsub contract double %98, %53\l  %103 = add nsw i32 %97, 1\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds double, double addrspace(1)* %1, i64 %104\l  store double %102, double addrspace(1)* %105, align 8, !tbaa !7\l  %106 = fsub contract double %102, %53\l  %107 = add nsw i32 %97, 2\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds double, double addrspace(1)* %1, i64 %108\l  store double %106, double addrspace(1)* %109, align 8, !tbaa !7\l  %110 = fsub contract double %106, %53\l  %111 = add nsw i32 %97, 3\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds double, double addrspace(1)* %1, i64 %112\l  store double %110, double addrspace(1)* %113, align 8, !tbaa !7\l  %114 = fsub contract double %110, %53\l  %115 = add nsw i32 %97, 4\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %1, i64 %116\l  store double %114, double addrspace(1)* %117, align 8, !tbaa !7\l  %118 = fsub contract double %114, %53\l  %119 = add nsw i32 %97, 5\l  %120 = sext i32 %119 to i64\l  %121 = getelementptr inbounds double, double addrspace(1)* %1, i64 %120\l  store double %118, double addrspace(1)* %121, align 8, !tbaa !7\l  %122 = fsub contract double %118, %53\l  %123 = add nsw i32 %97, 6\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds double, double addrspace(1)* %1, i64 %124\l  store double %122, double addrspace(1)* %125, align 8, !tbaa !7\l  %126 = fsub contract double %122, %53\l  %127 = add nsw i32 %97, 7\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds double, double addrspace(1)* %1, i64 %128\l  store double %126, double addrspace(1)* %129, align 8, !tbaa !7\l  %130 = fsub contract double %126, %53\l  %131 = add nsw i32 %97, 8\l  %132 = add i32 %99, 8\l  %133 = icmp eq i32 %132, %47\l  br i1 %133, label %134, label %96, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x47aea40:s0 -> Node0x47ae9f0;
	Node0x47aea40:s1 -> Node0x47aea40;
	Node0x47ae9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%134:\l134:                                              \l  %135 = phi i32 [ %29, %57 ], [ %131, %96 ]\l  %136 = phi double [ %51, %57 ], [ %130, %96 ]\l  br i1 %48, label %160, label %137\l|{<s0>T|<s1>F}}"];
	Node0x47ae9f0:s0 -> Node0x47ae5d0;
	Node0x47ae9f0:s1 -> Node0x47b2a40;
	Node0x47b2a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi i32 [ %144, %137 ], [ %135, %134 ]\l  %139 = phi double [ %143, %137 ], [ %136, %134 ]\l  %140 = phi i32 [ %145, %137 ], [ 0, %134 ]\l  %141 = sext i32 %138 to i64\l  %142 = getelementptr inbounds double, double addrspace(1)* %1, i64 %141\l  store double %139, double addrspace(1)* %142, align 8, !tbaa !7\l  %143 = fsub contract double %139, %53\l  %144 = add nsw i32 %138, 1\l  %145 = add i32 %140, 1\l  %146 = icmp eq i32 %145, %45\l  br i1 %146, label %160, label %137, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x47b2a40:s0 -> Node0x47ae5d0;
	Node0x47b2a40:s1 -> Node0x47b2a40;
	Node0x47ae760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%147:\l147:                                              \l  %148 = phi i32 [ %29, %55 ], [ %93, %58 ]\l  %149 = phi double [ %50, %55 ], [ %92, %58 ]\l  br i1 %44, label %160, label %150\l|{<s0>T|<s1>F}}"];
	Node0x47ae760:s0 -> Node0x47ae5d0;
	Node0x47ae760:s1 -> Node0x47b3440;
	Node0x47b3440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%150:\l150:                                              \l  %151 = phi i32 [ %157, %150 ], [ %148, %147 ]\l  %152 = phi double [ %156, %150 ], [ %149, %147 ]\l  %153 = phi i32 [ %158, %150 ], [ 0, %147 ]\l  %154 = sext i32 %151 to i64\l  %155 = getelementptr inbounds double, double addrspace(1)* %1, i64 %154\l  store double %152, double addrspace(1)* %155, align 8, !tbaa !7\l  %156 = fadd contract double %53, %152\l  %157 = add nsw i32 %151, 1\l  %158 = add i32 %153, 1\l  %159 = icmp eq i32 %158, %41\l  br i1 %159, label %160, label %150, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x47b3440:s0 -> Node0x47ae5d0;
	Node0x47b3440:s1 -> Node0x47b3440;
	Node0x47ae5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%160:\l160:                                              \l  br label %49, !llvm.loop !17\l}"];
	Node0x47ae5d0 -> Node0x47ad9c0;
	Node0x47aaf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%161:\l161:                                              \l  ret void\l}"];
}
