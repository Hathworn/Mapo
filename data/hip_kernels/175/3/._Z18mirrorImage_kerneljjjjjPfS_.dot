digraph "CFG for '_Z18mirrorImage_kerneljjjjjPfS_' function" {
	label="CFG for '_Z18mirrorImage_kerneljjjjjPfS_' function";

	Node0x5621a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !4, !invariant.load !5\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %9, %13\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = icmp ult i32 %16, %3\l  %26 = icmp ult i32 %24, %4\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %70\l|{<s0>T|<s1>F}}"];
	Node0x5621a60:s0 -> Node0x56254b0;
	Node0x5621a60:s1 -> Node0x5625540;
	Node0x56254b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%28:\l28:                                               \l  %29 = icmp ult i32 %16, %2\l  br i1 %29, label %30, label %33\l|{<s0>T|<s1>F}}"];
	Node0x56254b0:s0 -> Node0x5625710;
	Node0x56254b0:s1 -> Node0x5625760;
	Node0x5625710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%30:\l30:                                               \l  %31 = xor i32 %16, -1\l  %32 = add i32 %31, %2\l  br label %43\l}"];
	Node0x5625710 -> Node0x5623880;
	Node0x5625760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%33:\l33:                                               \l  %34 = add i32 %2, %0\l  %35 = icmp ult i32 %16, %34\l  br i1 %35, label %36, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5625760:s0 -> Node0x5623940;
	Node0x5625760:s1 -> Node0x5625d20;
	Node0x5623940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%36:\l36:                                               \l  %37 = sub i32 %16, %2\l  br label %43\l}"];
	Node0x5623940 -> Node0x5623880;
	Node0x5625d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = shl i32 %0, 1\l  %40 = add i32 %39, -1\l  %41 = add i32 %40, %2\l  %42 = sub i32 %41, %16\l  br label %43\l}"];
	Node0x5625d20 -> Node0x5623880;
	Node0x5623880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %32, %30 ], [ %37, %36 ], [ %42, %38 ]\l  %45 = icmp ult i32 %24, %2\l  br i1 %45, label %46, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5623880:s0 -> Node0x56263a0;
	Node0x5623880:s1 -> Node0x56263f0;
	Node0x56263a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%46:\l46:                                               \l  %47 = xor i32 %24, -1\l  %48 = add i32 %47, %2\l  br label %59\l}"];
	Node0x56263a0 -> Node0x5626610;
	Node0x56263f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%49:\l49:                                               \l  %50 = add i32 %2, %1\l  %51 = icmp ult i32 %24, %50\l  br i1 %51, label %52, label %54\l|{<s0>T|<s1>F}}"];
	Node0x56263f0:s0 -> Node0x56267f0;
	Node0x56263f0:s1 -> Node0x5626840;
	Node0x56267f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  %53 = sub i32 %24, %2\l  br label %59\l}"];
	Node0x56267f0 -> Node0x5626610;
	Node0x5626840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%54:\l54:                                               \l  %55 = shl i32 %1, 1\l  %56 = add i32 %2, -1\l  %57 = add i32 %56, %55\l  %58 = sub i32 %57, %24\l  br label %59\l}"];
	Node0x5626840 -> Node0x5626610;
	Node0x5626610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%59:\l59:                                               \l  %60 = phi i32 [ %48, %46 ], [ %53, %52 ], [ %58, %54 ]\l  %61 = mul i32 %60, %0\l  %62 = add i32 %61, %44\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %5, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = mul i32 %24, %3\l  %67 = add i32 %66, %16\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %6, i64 %68\l  store float %65, float addrspace(1)* %69, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5626610 -> Node0x5625540;
	Node0x5625540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  ret void\l}"];
}
