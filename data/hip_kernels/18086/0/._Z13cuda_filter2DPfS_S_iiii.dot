digraph "CFG for '_Z13cuda_filter2DPfS_S_iiii' function" {
	label="CFG for '_Z13cuda_filter2DPfS_S_iiii' function";

	Node0x5c4b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 6\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 2, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = add i32 %15, %8\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 4, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = icmp slt i32 %16, %4\l  %26 = icmp slt i32 %24, %3\l  %27 = select i1 %25, i1 %26, i1 false\l  br i1 %27, label %28, label %190\l|{<s0>T|<s1>F}}"];
	Node0x5c4b300:s0 -> Node0x5c4ed50;
	Node0x5c4b300:s1 -> Node0x5c4ede0;
	Node0x5c4ed50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%28:\l28:                                               \l  %29 = icmp sgt i32 %5, 0\l  br i1 %29, label %30, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5c4ed50:s0 -> Node0x5c4efe0;
	Node0x5c4ed50:s1 -> Node0x5c4f030;
	Node0x5c4efe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%30:\l30:                                               \l  %31 = icmp sgt i32 %6, 0\l  %32 = add nsw i32 %5, -1\l  %33 = lshr i32 %32, 1\l  %34 = sub i32 %16, %33\l  %35 = add i32 %6, -1\l  %36 = sdiv i32 %35, -2\l  %37 = and i32 %6, 3\l  %38 = icmp ult i32 %6, 4\l  %39 = and i32 %6, -4\l  %40 = icmp eq i32 %37, 0\l  br label %41\l}"];
	Node0x5c4efe0 -> Node0x5c4f950;
	Node0x5c4f950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%41:\l41:                                               \l  %42 = phi i32 [ 0, %30 ], [ %94, %92 ]\l  %43 = phi float [ 0.000000e+00, %30 ], [ %93, %92 ]\l  br i1 %31, label %44, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5c4f950:s0 -> Node0x5c506f0;
	Node0x5c4f950:s1 -> Node0x5c4fa40;
	Node0x5c506f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%44:\l44:                                               \l  %45 = add i32 %34, %42\l  %46 = icmp sgt i32 %45, -1\l  %47 = icmp slt i32 %45, %4\l  %48 = mul nsw i32 %42, %6\l  %49 = mul nsw i32 %45, %3\l  br i1 %38, label %60, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5c506f0:s0 -> Node0x5c50b00;
	Node0x5c506f0:s1 -> Node0x5c50b50;
	Node0x5c4f030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%50:\l50:                                               \l  %51 = phi float [ 0.000000e+00, %28 ], [ %93, %92 ]\l  %52 = fcmp contract olt float %51, 0.000000e+00\l  %53 = fcmp contract ogt float %51, 2.550000e+02\l  %54 = select contract i1 %53, float 2.550000e+02, float %51\l  %55 = select contract i1 %52, float 0.000000e+00, float %54\l  %56 = mul nsw i32 %16, %3\l  %57 = add nsw i32 %56, %24\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  store float %55, float addrspace(1)* %59, align 4, !tbaa !7\l  br label %190\l}"];
	Node0x5c4f030 -> Node0x5c4ede0;
	Node0x5c50b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%60:\l60:                                               \l  %61 = phi float [ undef, %44 ], [ %186, %185 ]\l  %62 = phi i32 [ 0, %44 ], [ %187, %185 ]\l  %63 = phi float [ %43, %44 ], [ %186, %185 ]\l  br i1 %40, label %92, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5c50b00:s0 -> Node0x5c4fa40;
	Node0x5c50b00:s1 -> Node0x5c51b80;
	Node0x5c51b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %89, %87 ], [ %62, %60 ]\l  %66 = phi float [ %88, %87 ], [ %63, %60 ]\l  %67 = phi i32 [ %90, %87 ], [ 0, %60 ]\l  br i1 %46, label %68, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5c51b80:s0 -> Node0x5c522a0;
	Node0x5c51b80:s1 -> Node0x5c4f300;
	Node0x5c522a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#cc403a70",label="{%68:\l68:                                               \l  %69 = add i32 %65, %24\l  %70 = add i32 %69, %36\l  %71 = icmp sgt i32 %70, -1\l  %72 = icmp slt i32 %70, %3\l  %73 = select i1 %71, i1 %72, i1 false\l  %74 = select i1 %73, i1 %47, i1 false\l  br i1 %74, label %75, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5c522a0:s0 -> Node0x5c52780;
	Node0x5c522a0:s1 -> Node0x5c4f300;
	Node0x5c52780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%75:\l75:                                               \l  %76 = add nsw i32 %65, %48\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %2, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %80 = sub i32 %69, %33\l  %81 = add i32 %80, %49\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %1, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = fmul contract float %79, %84\l  %86 = fadd contract float %66, %85\l  br label %87\l}"];
	Node0x5c52780 -> Node0x5c4f300;
	Node0x5c4f300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%87:\l87:                                               \l  %88 = phi float [ %86, %75 ], [ %66, %68 ], [ %66, %64 ]\l  %89 = add nuw nsw i32 %65, 1\l  %90 = add i32 %67, 1\l  %91 = icmp eq i32 %90, %37\l  br i1 %91, label %92, label %64, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c4f300:s0 -> Node0x5c4fa40;
	Node0x5c4f300:s1 -> Node0x5c51b80;
	Node0x5c4fa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%92:\l92:                                               \l  %93 = phi float [ %43, %41 ], [ %61, %60 ], [ %88, %87 ]\l  %94 = add nuw nsw i32 %42, 1\l  %95 = icmp eq i32 %94, %5\l  br i1 %95, label %50, label %41, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c4fa40:s0 -> Node0x5c4f030;
	Node0x5c4fa40:s1 -> Node0x5c4f950;
	Node0x5c50b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%96:\l96:                                               \l  %97 = phi i32 [ %187, %185 ], [ 0, %44 ]\l  %98 = phi float [ %186, %185 ], [ %43, %44 ]\l  %99 = phi i32 [ %188, %185 ], [ 0, %44 ]\l  br i1 %46, label %100, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5c50b50:s0 -> Node0x5c53e60;
	Node0x5c50b50:s1 -> Node0x5c53eb0;
	Node0x5c53e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%100:\l100:                                              \l  %101 = add i32 %97, %24\l  %102 = add i32 %101, %36\l  %103 = icmp sgt i32 %102, -1\l  %104 = icmp slt i32 %102, %3\l  %105 = select i1 %103, i1 %104, i1 false\l  %106 = select i1 %105, i1 %47, i1 false\l  br i1 %106, label %107, label %119\l|{<s0>T|<s1>F}}"];
	Node0x5c53e60:s0 -> Node0x5c54350;
	Node0x5c53e60:s1 -> Node0x5c53eb0;
	Node0x5c54350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%107:\l107:                                              \l  %108 = add nsw i32 %97, %48\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %2, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %112 = sub i32 %101, %33\l  %113 = add i32 %112, %49\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %117 = fmul contract float %111, %116\l  %118 = fadd contract float %98, %117\l  br label %119\l}"];
	Node0x5c54350 -> Node0x5c53eb0;
	Node0x5c53eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%119:\l119:                                              \l  %120 = phi float [ %118, %107 ], [ %98, %100 ], [ %98, %96 ]\l  %121 = or i32 %97, 1\l  br i1 %46, label %122, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5c53eb0:s0 -> Node0x5c54c30;
	Node0x5c53eb0:s1 -> Node0x5c54c80;
	Node0x5c54c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%122:\l122:                                              \l  %123 = add i32 %121, %24\l  %124 = add i32 %123, %36\l  %125 = icmp sgt i32 %124, -1\l  %126 = icmp slt i32 %124, %3\l  %127 = select i1 %125, i1 %126, i1 false\l  %128 = select i1 %127, i1 %47, i1 false\l  br i1 %128, label %129, label %141\l|{<s0>T|<s1>F}}"];
	Node0x5c54c30:s0 -> Node0x5c51cc0;
	Node0x5c54c30:s1 -> Node0x5c54c80;
	Node0x5c51cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%129:\l129:                                              \l  %130 = add nsw i32 %121, %48\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %2, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %134 = sub i32 %123, %33\l  %135 = add i32 %134, %49\l  %136 = sext i32 %135 to i64\l  %137 = getelementptr inbounds float, float addrspace(1)* %1, i64 %136\l  %138 = load float, float addrspace(1)* %137, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %139 = fmul contract float %133, %138\l  %140 = fadd contract float %120, %139\l  br label %141\l}"];
	Node0x5c51cc0 -> Node0x5c54c80;
	Node0x5c54c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%141:\l141:                                              \l  %142 = phi float [ %140, %129 ], [ %120, %122 ], [ %120, %119 ]\l  %143 = or i32 %97, 2\l  br i1 %46, label %144, label %163\l|{<s0>T|<s1>F}}"];
	Node0x5c54c80:s0 -> Node0x5c55e40;
	Node0x5c54c80:s1 -> Node0x5c55e90;
	Node0x5c55e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%144:\l144:                                              \l  %145 = add i32 %143, %24\l  %146 = add i32 %145, %36\l  %147 = icmp sgt i32 %146, -1\l  %148 = icmp slt i32 %146, %3\l  %149 = select i1 %147, i1 %148, i1 false\l  %150 = select i1 %149, i1 %47, i1 false\l  br i1 %150, label %151, label %163\l|{<s0>T|<s1>F}}"];
	Node0x5c55e40:s0 -> Node0x5c56370;
	Node0x5c55e40:s1 -> Node0x5c55e90;
	Node0x5c56370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%151:\l151:                                              \l  %152 = add nsw i32 %143, %48\l  %153 = sext i32 %152 to i64\l  %154 = getelementptr inbounds float, float addrspace(1)* %2, i64 %153\l  %155 = load float, float addrspace(1)* %154, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %156 = sub i32 %145, %33\l  %157 = add i32 %156, %49\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %1, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %161 = fmul contract float %155, %160\l  %162 = fadd contract float %142, %161\l  br label %163\l}"];
	Node0x5c56370 -> Node0x5c55e90;
	Node0x5c55e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%163:\l163:                                              \l  %164 = phi float [ %162, %151 ], [ %142, %144 ], [ %142, %141 ]\l  %165 = or i32 %97, 3\l  br i1 %46, label %166, label %185\l|{<s0>T|<s1>F}}"];
	Node0x5c55e90:s0 -> Node0x5c56c50;
	Node0x5c55e90:s1 -> Node0x5c51870;
	Node0x5c56c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%166:\l166:                                              \l  %167 = add i32 %165, %24\l  %168 = add i32 %167, %36\l  %169 = icmp sgt i32 %168, -1\l  %170 = icmp slt i32 %168, %3\l  %171 = select i1 %169, i1 %170, i1 false\l  %172 = select i1 %171, i1 %47, i1 false\l  br i1 %172, label %173, label %185\l|{<s0>T|<s1>F}}"];
	Node0x5c56c50:s0 -> Node0x5c570f0;
	Node0x5c56c50:s1 -> Node0x5c51870;
	Node0x5c570f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%173:\l173:                                              \l  %174 = add nsw i32 %165, %48\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds float, float addrspace(1)* %2, i64 %175\l  %177 = load float, float addrspace(1)* %176, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %178 = sub i32 %167, %33\l  %179 = add i32 %178, %49\l  %180 = sext i32 %179 to i64\l  %181 = getelementptr inbounds float, float addrspace(1)* %1, i64 %180\l  %182 = load float, float addrspace(1)* %181, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %183 = fmul contract float %177, %182\l  %184 = fadd contract float %164, %183\l  br label %185\l}"];
	Node0x5c570f0 -> Node0x5c51870;
	Node0x5c51870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%185:\l185:                                              \l  %186 = phi float [ %184, %173 ], [ %164, %166 ], [ %164, %163 ]\l  %187 = add nuw nsw i32 %97, 4\l  %188 = add i32 %99, 4\l  %189 = icmp eq i32 %188, %39\l  br i1 %189, label %60, label %96, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5c51870:s0 -> Node0x5c50b00;
	Node0x5c51870:s1 -> Node0x5c50b50;
	Node0x5c4ede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%190:\l190:                                              \l  ret void\l}"];
}
