digraph "CFG for '_Z19cuda_cosineDistancePdS_lS_S_S_' function" {
	label="CFG for '_Z19cuda_cosineDistancePdS_lS_S_S_' function";

	Node0x51ef610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %9, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !7\l  %17 = mul i32 %8, %13\l  %18 = add i32 %17, %7\l  %19 = zext i32 %18 to i64\l  %20 = zext i32 %7 to i64\l  %21 = icmp slt i64 %19, %2\l  br i1 %21, label %22, label %47\l|{<s0>T|<s1>F}}"];
	Node0x51ef610:s0 -> Node0x51f1910;
	Node0x51ef610:s1 -> Node0x51f19a0;
	Node0x51f1910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%22:\l22:                                               \l  %23 = udiv i32 %16, %13\l  %24 = mul i32 %23, %13\l  %25 = icmp ugt i32 %16, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %13\l  %29 = zext i32 %28 to i64\l  br label %30\l}"];
	Node0x51f1910 -> Node0x51f1e90;
	Node0x51f1e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi double [ 0.000000e+00, %22 ], [ %44, %30 ]\l  %32 = phi double [ 0.000000e+00, %22 ], [ %42, %30 ]\l  %33 = phi double [ 0.000000e+00, %22 ], [ %40, %30 ]\l  %34 = phi i64 [ %19, %22 ], [ %45, %30 ]\l  %35 = getelementptr inbounds double, double addrspace(1)* %0, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %37 = getelementptr inbounds double, double addrspace(1)* %1, i64 %34\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !16,\l... !amdgpu.noclobber !6\l  %39 = fmul contract double %36, %38\l  %40 = fadd contract double %33, %39\l  %41 = fmul contract double %36, %36\l  %42 = fadd contract double %32, %41\l  %43 = fmul contract double %38, %38\l  %44 = fadd contract double %31, %43\l  %45 = add nuw nsw i64 %34, %29\l  %46 = icmp slt i64 %45, %2\l  br i1 %46, label %30, label %47, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x51f1e90:s0 -> Node0x51f1e90;
	Node0x51f1e90:s1 -> Node0x51f19a0;
	Node0x51f19a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%47:\l47:                                               \l  %48 = phi double [ 0.000000e+00, %6 ], [ %40, %30 ]\l  %49 = phi double [ 0.000000e+00, %6 ], [ %42, %30 ]\l  %50 = phi double [ 0.000000e+00, %6 ], [ %44, %30 ]\l  %51 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E9dot_cache, i32 0, i32 %7\l  store double %48, double addrspace(3)* %51, align 8, !tbaa !16\l  %52 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_x_cache, i32 0, i32 %7\l  store double %49, double addrspace(3)* %52, align 8, !tbaa !16\l  %53 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_y_cache, i32 0, i32 %7\l  store double %50, double addrspace(3)* %53, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %54 = icmp ult i16 %12, 2\l  br i1 %54, label %80, label %55\l|{<s0>T|<s1>F}}"];
	Node0x51f19a0:s0 -> Node0x51f4e40;
	Node0x51f19a0:s1 -> Node0x51f4e90;
	Node0x51f4e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%55:\l55:                                               \l  %56 = lshr i32 %13, 1\l  %57 = zext i32 %56 to i64\l  br label %58\l}"];
	Node0x51f4e90 -> Node0x51f50c0;
	Node0x51f50c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i64 [ %77, %76 ], [ %57, %55 ]\l  %60 = icmp sgt i64 %59, %20\l  br i1 %60, label %61, label %76\l|{<s0>T|<s1>F}}"];
	Node0x51f50c0:s0 -> Node0x51f5320;
	Node0x51f50c0:s1 -> Node0x51f51b0;
	Node0x51f5320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%61:\l61:                                               \l  %62 = trunc i64 %59 to i32\l  %63 = add i32 %7, %62\l  %64 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E9dot_cache, i32 0, i32 %63\l  %65 = load double, double addrspace(3)* %64, align 8, !tbaa !16\l  %66 = load double, double addrspace(3)* %51, align 8, !tbaa !16\l  %67 = fadd contract double %65, %66\l  store double %67, double addrspace(3)* %51, align 8, !tbaa !16\l  %68 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_x_cache, i32 0, i32 %63\l  %69 = load double, double addrspace(3)* %68, align 8, !tbaa !16\l  %70 = load double, double addrspace(3)* %52, align 8, !tbaa !16\l  %71 = fadd contract double %69, %70\l  store double %71, double addrspace(3)* %52, align 8, !tbaa !16\l  %72 = getelementptr inbounds [16 x double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_y_cache, i32 0, i32 %63\l  %73 = load double, double addrspace(3)* %72, align 8, !tbaa !16\l  %74 = load double, double addrspace(3)* %53, align 8, !tbaa !16\l  %75 = fadd contract double %73, %74\l  store double %75, double addrspace(3)* %53, align 8, !tbaa !16\l  br label %76\l}"];
	Node0x51f5320 -> Node0x51f51b0;
	Node0x51f51b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %77 = sdiv i64 %59, 2\l  %78 = add nsw i64 %59, 1\l  %79 = icmp ult i64 %78, 3\l  br i1 %79, label %80, label %58, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x51f51b0:s0 -> Node0x51f4e40;
	Node0x51f51b0:s1 -> Node0x51f50c0;
	Node0x51f4e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%80:\l80:                                               \l  %81 = icmp eq i32 %7, 0\l  br i1 %81, label %82, label %90\l|{<s0>T|<s1>F}}"];
	Node0x51f4e40:s0 -> Node0x51f6650;
	Node0x51f4e40:s1 -> Node0x51f66a0;
	Node0x51f6650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%82:\l82:                                               \l  %83 = load double, double addrspace(3)* getelementptr inbounds ([16 x\l... double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E9dot_cache, i32 0, i32 0), align 16,\l... !tbaa !16\l  %84 = zext i32 %8 to i64\l  %85 = getelementptr inbounds double, double addrspace(1)* %3, i64 %84\l  store double %83, double addrspace(1)* %85, align 8, !tbaa !16\l  %86 = load double, double addrspace(3)* getelementptr inbounds ([16 x\l... double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_x_cache, i32 0, i32 0), align 16,\l... !tbaa !16\l  %87 = getelementptr inbounds double, double addrspace(1)* %4, i64 %84\l  store double %86, double addrspace(1)* %87, align 8, !tbaa !16\l  %88 = load double, double addrspace(3)* getelementptr inbounds ([16 x\l... double], [16 x double] addrspace(3)*\l... @_ZZ19cuda_cosineDistancePdS_lS_S_S_E12norm_y_cache, i32 0, i32 0), align 16,\l... !tbaa !16\l  %89 = getelementptr inbounds double, double addrspace(1)* %5, i64 %84\l  store double %88, double addrspace(1)* %89, align 8, !tbaa !16\l  br label %90\l}"];
	Node0x51f6650 -> Node0x51f66a0;
	Node0x51f66a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%90:\l90:                                               \l  ret void\l}"];
}
