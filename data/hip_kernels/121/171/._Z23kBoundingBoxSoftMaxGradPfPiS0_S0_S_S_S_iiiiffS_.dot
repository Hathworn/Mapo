digraph "CFG for '_Z23kBoundingBoxSoftMaxGradPfPiS0_S0_S_S_S_iiiiffS_' function" {
	label="CFG for '_Z23kBoundingBoxSoftMaxGradPfPiS0_S0_S_S_S_iiiiffS_' function";

	Node0x530cf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%14:\l  %15 = mul i32 %8, %7\l  %16 = mul i32 %15, %9\l  %17 = mul i32 %16, %10\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %20 = getelementptr i8, i8 addrspace(4)* %19, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !4, !invariant.load !5\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %19, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !6\l  %27 = mul i32 %18, %23\l  %28 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %29 = add i32 %27, %28\l  %30 = udiv i32 %26, %23\l  %31 = mul i32 %30, %23\l  %32 = icmp ugt i32 %26, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %23\l  %36 = icmp ult i32 %29, %17\l  br i1 %36, label %38, label %37\l|{<s0>T|<s1>F}}"];
	Node0x530cf00:s0 -> Node0x5310380;
	Node0x530cf00:s1 -> Node0x5310410;
	Node0x5310410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%37:\l37:                                               \l  ret void\l}"];
	Node0x5310380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%38:\l38:                                               \l  %39 = phi i32 [ %150, %146 ], [ %29, %14 ]\l  %40 = freeze i32 %39\l  %41 = freeze i32 %7\l  %42 = sdiv i32 %40, %41\l  %43 = mul i32 %42, %41\l  %44 = sub i32 %40, %43\l  %45 = freeze i32 %8\l  %46 = sdiv i32 %42, %45\l  %47 = mul i32 %46, %45\l  %48 = sub i32 %42, %47\l  %49 = sitofp i32 %48 to float\l  %50 = fmul contract float %49, %11\l  %51 = freeze i32 %9\l  %52 = sdiv i32 %46, %51\l  %53 = mul i32 %52, %51\l  %54 = sub i32 %46, %53\l  %55 = sitofp i32 %54 to float\l  %56 = fmul contract float %55, %12\l  %57 = srem i32 %52, %10\l  %58 = sext i32 %44 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %4, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !16\l  %61 = fptosi float %60 to i32\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %62\l  %64 = bitcast i32 addrspace(1)* %63 to \<2 x i32\> addrspace(1)*\l  %65 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %64, align 4, !tbaa !20\l  %66 = extractelement \<2 x i32\> %65, i64 0\l  %67 = extractelement \<2 x i32\> %65, i64 1\l  %68 = icmp slt i32 %66, %67\l  br i1 %68, label %69, label %132\l|{<s0>T|<s1>F}}"];
	Node0x5310380:s0 -> Node0x53120b0;
	Node0x5310380:s1 -> Node0x5312140;
	Node0x53120b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%69:\l69:                                               \l  %70 = getelementptr inbounds float, float addrspace(1)* %5, i64 %58\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !16\l  %72 = getelementptr inbounds float, float addrspace(1)* %6, i64 %58\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  br label %74\l}"];
	Node0x53120b0 -> Node0x5312ab0;
	Node0x5312ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i32 [ 0, %69 ], [ %120, %126 ]\l  %76 = phi i32 [ 0, %69 ], [ %129, %126 ]\l  %77 = phi i32 [ %66, %69 ], [ %130, %126 ]\l  %78 = shl i32 %77, 2\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %82 = sitofp i32 %81 to float\l  %83 = fsub contract float %82, %71\l  %84 = fptosi float %83 to i32\l  %85 = sitofp i32 %84 to float\l  %86 = fcmp contract ult float %50, %85\l  br i1 %86, label %117, label %87\l|{<s0>T|<s1>F}}"];
	Node0x5312ab0:s0 -> Node0x5314070;
	Node0x5312ab0:s1 -> Node0x5314100;
	Node0x5314100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%87:\l87:                                               \l  %88 = add nuw nsw i32 %78, 3\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %92 = sitofp i32 %91 to float\l  %93 = fsub contract float %92, %73\l  %94 = fptosi float %93 to i32\l  %95 = add nuw nsw i32 %78, 1\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !20, !amdgpu.noclobber\l... !5\l  %99 = sitofp i32 %98 to float\l  %100 = fsub contract float %99, %73\l  %101 = fptosi float %100 to i32\l  %102 = add nuw nsw i32 %78, 2\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %106 = sitofp i32 %105 to float\l  %107 = fsub contract float %106, %71\l  %108 = fptosi float %107 to i32\l  %109 = sitofp i32 %108 to float\l  %110 = fcmp contract ole float %50, %109\l  %111 = sitofp i32 %101 to float\l  %112 = fcmp contract oge float %56, %111\l  %113 = select i1 %110, i1 %112, i1 false\l  %114 = sitofp i32 %94 to float\l  %115 = fcmp contract ole float %56, %114\l  %116 = select i1 %113, i1 %115, i1 false\l  br label %117\l}"];
	Node0x5314100 -> Node0x5314070;
	Node0x5314070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%117:\l117:                                              \l  %118 = phi i1 [ false, %74 ], [ %116, %87 ]\l  %119 = zext i1 %118 to i32\l  %120 = add nuw nsw i32 %75, %119\l  br i1 %118, label %121, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5314070:s0 -> Node0x5315450;
	Node0x5314070:s1 -> Node0x5312ba0;
	Node0x5315450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%121:\l121:                                              \l  %122 = sext i32 %77 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !20,\l... !amdgpu.noclobber !5\l  %125 = icmp eq i32 %124, %57\l  br label %126\l}"];
	Node0x5315450 -> Node0x5312ba0;
	Node0x5312ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi i1 [ false, %117 ], [ %125, %121 ]\l  %128 = zext i1 %127 to i32\l  %129 = add nuw nsw i32 %76, %128\l  %130 = add nsw i32 %77, 1\l  %131 = icmp slt i32 %130, %67\l  br i1 %131, label %74, label %132, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5312ba0:s0 -> Node0x5312ab0;
	Node0x5312ba0:s1 -> Node0x5312140;
	Node0x5312140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%132:\l132:                                              \l  %133 = phi i32 [ 0, %38 ], [ %129, %126 ]\l  %134 = phi i32 [ 0, %38 ], [ %120, %126 ]\l  %135 = zext i32 %39 to i64\l  %136 = getelementptr inbounds float, float addrspace(1)* %0, i64 %135\l  %137 = load float, float addrspace(1)* %136, align 4, !tbaa !16\l  %138 = icmp eq i32 %134, 0\l  br i1 %138, label %143, label %139\l|{<s0>T|<s1>F}}"];
	Node0x5312140:s0 -> Node0x5316370;
	Node0x5312140:s1 -> Node0x53163c0;
	Node0x53163c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%139:\l139:                                              \l  %140 = sitofp i32 %133 to float\l  %141 = sitofp i32 %134 to float\l  %142 = fdiv contract float %140, %141\l  br label %146\l}"];
	Node0x53163c0 -> Node0x53105a0;
	Node0x5316370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%143:\l143:                                              \l  %144 = icmp eq i32 %57, 0\l  %145 = uitofp i1 %144 to float\l  br label %146\l}"];
	Node0x5316370 -> Node0x53105a0;
	Node0x53105a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%146:\l146:                                              \l  %147 = phi contract float [ %142, %139 ], [ %145, %143 ]\l  %148 = fsub contract float %137, %147\l  %149 = getelementptr inbounds float, float addrspace(1)* %13, i64 %135\l  store float %148, float addrspace(1)* %149, align 4, !tbaa !16\l  %150 = add i32 %39, %35\l  %151 = icmp ult i32 %150, %17\l  br i1 %151, label %38, label %37, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x53105a0:s0 -> Node0x5310380;
	Node0x53105a0:s1 -> Node0x5310410;
}
