digraph "CFG for '_Z11kMultScalarPffS_jf' function" {
	label="CFG for '_Z11kMultScalarPffS_jf' function";

	Node0x5556840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = fcmp contract oeq float %4, 0.000000e+00\l  %25 = icmp ult i32 %17, %3\l  br i1 %24, label %27, label %26\l|{<s0>T|<s1>F}}"];
	Node0x5556840:s0 -> Node0x5559890;
	Node0x5556840:s1 -> Node0x5559920;
	Node0x5559920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%26:\l26:                                               \l  br i1 %25, label %37, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5559920:s0 -> Node0x5559a60;
	Node0x5559920:s1 -> Node0x5559ab0;
	Node0x5559890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%27:\l27:                                               \l  br i1 %25, label %28, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5559890:s0 -> Node0x5559bf0;
	Node0x5559890:s1 -> Node0x5559ab0;
	Node0x5559bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %35, %28 ], [ %17, %27 ]\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !16\l  %33 = fmul contract float %32, %1\l  %34 = getelementptr inbounds float, float addrspace(1)* %2, i64 %30\l  store float %33, float addrspace(1)* %34, align 4, !tbaa !16\l  %35 = add i32 %29, %23\l  %36 = icmp ult i32 %35, %3\l  br i1 %36, label %28, label %49, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5559bf0:s0 -> Node0x5559bf0;
	Node0x5559bf0:s1 -> Node0x5559ab0;
	Node0x5559a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%37:\l37:                                               \l  %38 = phi i32 [ %47, %37 ], [ %17, %26 ]\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fmul contract float %41, %4\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = fmul contract float %44, %1\l  %46 = fadd contract float %42, %45\l  store float %46, float addrspace(1)* %40, align 4, !tbaa !16\l  %47 = add i32 %38, %23\l  %48 = icmp ult i32 %47, %3\l  br i1 %48, label %37, label %49, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5559a60:s0 -> Node0x5559a60;
	Node0x5559a60:s1 -> Node0x5559ab0;
	Node0x5559ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%49:\l49:                                               \l  ret void\l}"];
}
