digraph "CFG for '_Z5sobelPhS_ii' function" {
	label="CFG for '_Z5sobelPhS_ii' function";

	Node0x49038d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %21, %3\l  %23 = icmp slt i32 %13, %2\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %148\l|{<s0>T|<s1>F}}"];
	Node0x49038d0:s0 -> Node0x4907380;
	Node0x49038d0:s1 -> Node0x4907410;
	Node0x4907380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%25:\l25:                                               \l  %26 = add i32 %11, -1\l  %27 = add i32 %19, -1\l  %28 = tail call i32 @llvm.smax.i32(i32 %26, i32 0)\l  %29 = tail call i32 @llvm.smax.i32(i32 %27, i32 0)\l  %30 = mul nuw nsw i32 %20, %10\l  %31 = add nuw nsw i32 %30, %12\l  %32 = icmp ult i32 %31, 162\l  br i1 %32, label %33, label %61\l|{<s0>T|<s1>F}}"];
	Node0x4907380:s0 -> Node0x4905a50;
	Node0x4907380:s1 -> Node0x4905ae0;
	Node0x4905a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = icmp slt i32 %29, %3\l  %35 = add nsw i32 %18, -1\l  %36 = select i1 %34, i32 %29, i32 %35\l  %37 = icmp slt i32 %28, %2\l  %38 = add nsw i32 %10, -1\l  %39 = select i1 %37, i32 %28, i32 %38\l  %40 = mul nsw i32 %36, %2\l  %41 = add nsw i32 %40, %39\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %42\l  %44 = trunc i32 %31 to i16\l  %45 = udiv i16 %44, 9\l  %46 = zext i16 %45 to i32\l  %47 = trunc i32 %31 to i8\l  %48 = urem i8 %47, 9\l  %49 = shl nuw nsw i8 %48, 1\l  %50 = zext i8 %49 to i32\l  %51 = mul nsw i32 %46, %2\l  %52 = add nsw i32 %51, %50\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 %53\l  %55 = load i8, i8 addrspace(1)* %54, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %56 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %46, i32 %50\l  store i8 %55, i8 addrspace(3)* %56, align 2, !tbaa !7\l  %57 = getelementptr inbounds i8, i8 addrspace(1)* %54, i64 1\l  %58 = load i8, i8 addrspace(1)* %57, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %59 = or i32 %50, 1\l  %60 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %46, i32 %59\l  store i8 %58, i8 addrspace(3)* %60, align 1, !tbaa !7\l  br label %61\l}"];
	Node0x4905a50 -> Node0x4905ae0;
	Node0x4905ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%61:\l61:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %62 = add nuw nsw i32 %12, 1\l  %63 = add nuw nsw i32 %20, 1\l  %64 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %20, i32 %12\l  %65 = load i8, i8 addrspace(3)* %64, align 1, !tbaa !7\l  %66 = uitofp i8 %65 to float\l  %67 = fsub contract float 0.000000e+00, %66\l  %68 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %20, i32 %62\l  %69 = load i8, i8 addrspace(3)* %68, align 1, !tbaa !7\l  %70 = uitofp i8 %69 to float\l  %71 = fmul contract float %70, -2.000000e+00\l  %72 = fadd contract float %67, %71\l  %73 = fmul contract float %70, 0.000000e+00\l  %74 = fadd contract float %67, %73\l  %75 = add nuw nsw i32 %12, 2\l  %76 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %20, i32 %75\l  %77 = load i8, i8 addrspace(3)* %76, align 1, !tbaa !7\l  %78 = uitofp i8 %77 to float\l  %79 = fsub contract float %72, %78\l  %80 = fadd contract float %74, %78\l  %81 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %63, i32 %12\l  %82 = load i8, i8 addrspace(3)* %81, align 1, !tbaa !7\l  %83 = uitofp i8 %82 to float\l  %84 = fmul contract float %83, 0.000000e+00\l  %85 = fadd contract float %79, %84\l  %86 = fmul contract float %83, -2.000000e+00\l  %87 = fadd contract float %80, %86\l  %88 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %63, i32 %62\l  %89 = load i8, i8 addrspace(3)* %88, align 1, !tbaa !7\l  %90 = uitofp i8 %89 to float\l  %91 = fmul contract float %90, 0.000000e+00\l  %92 = fadd contract float %85, %91\l  %93 = fadd contract float %87, %91\l  %94 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %63, i32 %75\l  %95 = load i8, i8 addrspace(3)* %94, align 1, !tbaa !7\l  %96 = uitofp i8 %95 to float\l  %97 = fmul contract float %96, 0.000000e+00\l  %98 = fadd contract float %92, %97\l  %99 = fmul contract float %96, 2.000000e+00\l  %100 = fadd contract float %93, %99\l  %101 = add nuw nsw i32 %20, 2\l  %102 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %101, i32 %12\l  %103 = load i8, i8 addrspace(3)* %102, align 1, !tbaa !7\l  %104 = uitofp i8 %103 to float\l  %105 = fadd contract float %98, %104\l  %106 = fsub contract float %100, %104\l  %107 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %101, i32 %62\l  %108 = load i8, i8 addrspace(3)* %107, align 1, !tbaa !7\l  %109 = uitofp i8 %108 to float\l  %110 = fmul contract float %109, 2.000000e+00\l  %111 = fadd contract float %105, %110\l  %112 = fmul contract float %109, 0.000000e+00\l  %113 = fadd contract float %106, %112\l  %114 = getelementptr inbounds [18 x [18 x i8]], [18 x [18 x i8]]\l... addrspace(3)* @_ZZ5sobelPhS_iiE6pixels, i32 0, i32 %101, i32 %75\l  %115 = load i8, i8 addrspace(3)* %114, align 1, !tbaa !7\l  %116 = uitofp i8 %115 to float\l  %117 = fadd contract float %111, %116\l  %118 = fadd contract float %113, %116\l  %119 = mul nsw i32 %21, %2\l  %120 = add nsw i32 %119, %13\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %121\l  %123 = fmul contract float %117, %117\l  %124 = fmul contract float %118, %118\l  %125 = fadd contract float %124, %123\l  %126 = fcmp olt float %125, 0x39F0000000000000\l  %127 = select i1 %126, float 0x41F0000000000000, float 1.000000e+00\l  %128 = fmul float %125, %127\l  %129 = tail call float @llvm.sqrt.f32(float %128)\l  %130 = bitcast float %129 to i32\l  %131 = add nsw i32 %130, -1\l  %132 = bitcast i32 %131 to float\l  %133 = add nsw i32 %130, 1\l  %134 = bitcast i32 %133 to float\l  %135 = tail call i1 @llvm.amdgcn.class.f32(float %128, i32 608)\l  %136 = select i1 %126, float 0x3EF0000000000000, float 1.000000e+00\l  %137 = fneg float %134\l  %138 = tail call float @llvm.fma.f32(float %137, float %129, float %128)\l  %139 = fcmp ogt float %138, 0.000000e+00\l  %140 = fneg float %132\l  %141 = tail call float @llvm.fma.f32(float %140, float %129, float %128)\l  %142 = fcmp ole float %141, 0.000000e+00\l  %143 = select i1 %142, float %132, float %129\l  %144 = select i1 %139, float %134, float %143\l  %145 = fmul float %136, %144\l  %146 = select i1 %135, float %128, float %145\l  %147 = fptoui float %146 to i8\l  store i8 %147, i8 addrspace(1)* %122, align 1, !tbaa !7\l  br label %148\l}"];
	Node0x4905ae0 -> Node0x4907410;
	Node0x4907410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%148:\l148:                                              \l  ret void\l}"];
}
