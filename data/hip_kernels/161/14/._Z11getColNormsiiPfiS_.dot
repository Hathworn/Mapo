digraph "CFG for '_Z11getColNormsiiPfiS_' function" {
	label="CFG for '_Z11getColNormsiiPfiS_' function";

	Node0x597b000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = add i32 %13, %6\l  %15 = icmp slt i32 %14, %1\l  br i1 %15, label %16, label %101\l|{<s0>T|<s1>F}}"];
	Node0x597b000:s0 -> Node0x597ced0;
	Node0x597b000:s1 -> Node0x597cf60;
	Node0x597ced0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%16:\l16:                                               \l  %17 = mul nsw i32 %14, %3\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %20 = icmp sgt i32 %0, 0\l  br i1 %20, label %21, label %43\l|{<s0>T|<s1>F}}"];
	Node0x597ced0:s0 -> Node0x597d350;
	Node0x597ced0:s1 -> Node0x597d3a0;
	Node0x597d350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = and i32 %0, 7\l  %23 = icmp ult i32 %0, 8\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x597d350:s0 -> Node0x597d660;
	Node0x597d350:s1 -> Node0x597d6b0;
	Node0x597d6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %0, -8\l  br label %47\l}"];
	Node0x597d6b0 -> Node0x597d8b0;
	Node0x597d660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%26:\l26:                                               \l  %27 = phi float [ undef, %21 ], [ %97, %47 ]\l  %28 = phi i32 [ 0, %21 ], [ %98, %47 ]\l  %29 = phi float [ 0.000000e+00, %21 ], [ %97, %47 ]\l  %30 = icmp eq i32 %22, 0\l  br i1 %30, label %43, label %31\l|{<s0>T|<s1>F}}"];
	Node0x597d660:s0 -> Node0x597d3a0;
	Node0x597d660:s1 -> Node0x597eb20;
	Node0x597eb20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %40, %31 ], [ %28, %26 ]\l  %33 = phi float [ %39, %31 ], [ %29, %26 ]\l  %34 = phi i32 [ %41, %31 ], [ 0, %26 ]\l  %35 = zext i32 %32 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %19, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %38 = fmul contract float %37, %37\l  %39 = fadd contract float %33, %38\l  %40 = add nuw nsw i32 %32, 1\l  %41 = add i32 %34, 1\l  %42 = icmp eq i32 %41, %22\l  br i1 %42, label %43, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x597eb20:s0 -> Node0x597d3a0;
	Node0x597eb20:s1 -> Node0x597eb20;
	Node0x597d3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%43:\l43:                                               \l  %44 = phi float [ 0.000000e+00, %16 ], [ %27, %26 ], [ %39, %31 ]\l  %45 = sext i32 %14 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  store float %44, float addrspace(1)* %46, align 4, !tbaa !7\l  br label %101\l}"];
	Node0x597d3a0 -> Node0x597cf60;
	Node0x597d8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %24 ], [ %98, %47 ]\l  %49 = phi float [ 0.000000e+00, %24 ], [ %97, %47 ]\l  %50 = phi i32 [ 0, %24 ], [ %99, %47 ]\l  %51 = zext i32 %48 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %19, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %54 = fmul contract float %53, %53\l  %55 = fadd contract float %49, %54\l  %56 = or i32 %48, 1\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %19, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = fmul contract float %59, %59\l  %61 = fadd contract float %55, %60\l  %62 = or i32 %48, 2\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %19, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %66 = fmul contract float %65, %65\l  %67 = fadd contract float %61, %66\l  %68 = or i32 %48, 3\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %19, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %72 = fmul contract float %71, %71\l  %73 = fadd contract float %67, %72\l  %74 = or i32 %48, 4\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %19, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %78 = fmul contract float %77, %77\l  %79 = fadd contract float %73, %78\l  %80 = or i32 %48, 5\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %19, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %84 = fmul contract float %83, %83\l  %85 = fadd contract float %79, %84\l  %86 = or i32 %48, 6\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %19, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = fmul contract float %89, %89\l  %91 = fadd contract float %85, %90\l  %92 = or i32 %48, 7\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %19, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %96 = fmul contract float %95, %95\l  %97 = fadd contract float %91, %96\l  %98 = add nuw nsw i32 %48, 8\l  %99 = add i32 %50, 8\l  %100 = icmp eq i32 %99, %25\l  br i1 %100, label %26, label %47, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x597d8b0:s0 -> Node0x597d660;
	Node0x597d8b0:s1 -> Node0x597d8b0;
	Node0x597cf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%101:\l101:                                              \l  ret void\l}"];
}
