digraph "CFG for '_Z11gpuSDNoTestPKfmS0_mmS0_S0_Pf' function" {
	label="CFG for '_Z11gpuSDNoTestPKfmS0_mmS0_S0_Pf' function";

	Node0x58eac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = zext i32 %9 to i64\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp ult i64 %12, %1\l  %16 = icmp ult i64 %14, %3\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %163\l|{<s0>T|<s1>F}}"];
	Node0x58eac20:s0 -> Node0x58eace0;
	Node0x58eac20:s1 -> Node0x58ec800;
	Node0x58eace0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = icmp eq i32 %9, 0\l  br i1 %19, label %20, label %31\l|{<s0>T|<s1>F}}"];
	Node0x58eace0:s0 -> Node0x58eca00;
	Node0x58eace0:s1 -> Node0x58eca50;
	Node0x58eca00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%20:\l20:                                               \l  %21 = mul i64 %12, %3\l  %22 = add i64 %21, %14\l  %23 = shl i64 %22, 1\l  %24 = getelementptr inbounds float, float addrspace(1)* %5, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %25, float addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE5meanA, align 4, !tbaa !5\l  %26 = add nuw nsw i64 %23, 1\l  %27 = getelementptr inbounds float, float addrspace(1)* %5, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %28, float addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE5meanB, align 4, !tbaa !5\l  %29 = getelementptr inbounds float, float addrspace(1)* %6, i64 %22\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %30, float addrspace(3)* @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE1n,\l... align 4, !tbaa !5\l  br label %31\l}"];
	Node0x58eca00 -> Node0x58eca50;
	Node0x58eca50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %9\l  store float 0.000000e+00, float addrspace(3)* %32, align 4, !tbaa !5\l  %33 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %9\l  store float 0.000000e+00, float addrspace(3)* %33, align 4, !tbaa !5\l  %34 = icmp ult i64 %10, %4\l  br i1 %34, label %35, label %59\l|{<s0>T|<s1>F}}"];
	Node0x58eca50:s0 -> Node0x58ec0b0;
	Node0x58eca50:s1 -> Node0x58ef560;
	Node0x58ec0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%35:\l35:                                               \l  %36 = mul i64 %12, %4\l  %37 = mul i64 %14, %4\l  %38 = load float, float addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE5meanA, align 4, !tbaa !5\l  %39 = load float, float addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE5meanB, align 4, !tbaa !5\l  br label %40\l}"];
	Node0x58ec0b0 -> Node0x58ef7c0;
	Node0x58ef7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %35 ], [ %55, %40 ]\l  %42 = phi float [ 0.000000e+00, %35 ], [ %53, %40 ]\l  %43 = phi i64 [ %10, %35 ], [ %56, %40 ]\l  %44 = add i64 %43, %36\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %47 = add i64 %43, %37\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = fsub contract float %46, %38\l  %51 = fsub contract float %49, %39\l  %52 = fmul contract float %50, %50\l  %53 = fadd contract float %42, %52\l  %54 = fmul contract float %51, %51\l  %55 = fadd contract float %54, %41\l  %56 = add i64 %43, 16\l  %57 = icmp ult i64 %56, %4\l  br i1 %57, label %40, label %58, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x58ef7c0:s0 -> Node0x58ef7c0;
	Node0x58ef7c0:s1 -> Node0x58f0460;
	Node0x58f0460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%58:\l58:                                               \l  store float %53, float addrspace(3)* %32, align 4, !tbaa !5\l  store float %55, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %59\l}"];
	Node0x58f0460 -> Node0x58ef560;
	Node0x58ef560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%59:\l59:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %60 = icmp ult i32 %9, 8\l  br i1 %60, label %61, label %71\l|{<s0>T|<s1>F}}"];
	Node0x58ef560:s0 -> Node0x58f09b0;
	Node0x58ef560:s1 -> Node0x58f0a00;
	Node0x58f09b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%61:\l61:                                               \l  %62 = add nuw nsw i32 %9, 8\l  %63 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %62\l  %64 = load float, float addrspace(3)* %63, align 4, !tbaa !5\l  %65 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %66 = fadd contract float %64, %65\l  store float %66, float addrspace(3)* %32, align 4, !tbaa !5\l  %67 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %62\l  %68 = load float, float addrspace(3)* %67, align 4, !tbaa !5\l  %69 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %70 = fadd contract float %68, %69\l  store float %70, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %71\l}"];
	Node0x58f09b0 -> Node0x58f0a00;
	Node0x58f0a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%71:\l71:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %72 = icmp ult i32 %9, 4\l  br i1 %72, label %73, label %83\l|{<s0>T|<s1>F}}"];
	Node0x58f0a00:s0 -> Node0x58f15f0;
	Node0x58f0a00:s1 -> Node0x58f1640;
	Node0x58f15f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%73:\l73:                                               \l  %74 = add nuw nsw i32 %9, 4\l  %75 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %74\l  %76 = load float, float addrspace(3)* %75, align 4, !tbaa !5\l  %77 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %78 = fadd contract float %76, %77\l  store float %78, float addrspace(3)* %32, align 4, !tbaa !5\l  %79 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %74\l  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !5\l  %81 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %82 = fadd contract float %80, %81\l  store float %82, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %83\l}"];
	Node0x58f15f0 -> Node0x58f1640;
	Node0x58f1640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%83:\l83:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %84 = icmp ult i32 %9, 2\l  br i1 %84, label %85, label %95\l|{<s0>T|<s1>F}}"];
	Node0x58f1640:s0 -> Node0x58f1fc0;
	Node0x58f1640:s1 -> Node0x58f2010;
	Node0x58f1fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%85:\l85:                                               \l  %86 = add nuw nsw i32 %9, 2\l  %87 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !5\l  %89 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %90 = fadd contract float %88, %89\l  store float %90, float addrspace(3)* %32, align 4, !tbaa !5\l  %91 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %86\l  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !5\l  %93 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %94 = fadd contract float %92, %93\l  store float %94, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %95\l}"];
	Node0x58f1fc0 -> Node0x58f2010;
	Node0x58f2010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%95:\l95:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %96 = icmp eq i32 %9, 0\l  br i1 %96, label %97, label %107\l|{<s0>T|<s1>F}}"];
	Node0x58f2010:s0 -> Node0x58f29c0;
	Node0x58f2010:s1 -> Node0x58f2a10;
	Node0x58f29c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%97:\l97:                                               \l  %98 = add nuw nsw i32 %9, 1\l  %99 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %98\l  %100 = load float, float addrspace(3)* %99, align 4, !tbaa !5\l  %101 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %102 = fadd contract float %100, %101\l  store float %102, float addrspace(3)* %32, align 4, !tbaa !5\l  %103 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %98\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !5\l  %105 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %106 = fadd contract float %104, %105\l  store float %106, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %107\l}"];
	Node0x58f29c0 -> Node0x58f2a10;
	Node0x58f2a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%107:\l107:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %19, label %108, label %163\l|{<s0>T|<s1>F}}"];
	Node0x58f2a10:s0 -> Node0x58f3330;
	Node0x58f2a10:s1 -> Node0x58ec800;
	Node0x58f3330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%108:\l108:                                              \l  %109 = load float, float addrspace(3)* getelementptr inbounds ([16 x float],\l... [16 x float] addrspace(3)* @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsA,\l... i32 0, i32 0), align 16, !tbaa !5\l  %110 = load float, float addrspace(3)*\l... @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE1n, align 4, !tbaa !5\l  %111 = fadd contract float %110, -1.000000e+00\l  %112 = fdiv contract float %109, %111\l  %113 = fcmp olt float %112, 0x39F0000000000000\l  %114 = select i1 %113, float 0x41F0000000000000, float 1.000000e+00\l  %115 = fmul float %112, %114\l  %116 = tail call float @llvm.sqrt.f32(float %115)\l  %117 = bitcast float %116 to i32\l  %118 = add nsw i32 %117, -1\l  %119 = bitcast i32 %118 to float\l  %120 = add nsw i32 %117, 1\l  %121 = bitcast i32 %120 to float\l  %122 = tail call i1 @llvm.amdgcn.class.f32(float %115, i32 608)\l  %123 = select i1 %113, float 0x3EF0000000000000, float 1.000000e+00\l  %124 = fneg float %121\l  %125 = tail call float @llvm.fma.f32(float %124, float %116, float %115)\l  %126 = fcmp ogt float %125, 0.000000e+00\l  %127 = fneg float %119\l  %128 = tail call float @llvm.fma.f32(float %127, float %116, float %115)\l  %129 = fcmp ole float %128, 0.000000e+00\l  %130 = select i1 %129, float %119, float %116\l  %131 = select i1 %126, float %121, float %130\l  %132 = fmul float %123, %131\l  %133 = select i1 %122, float %115, float %132\l  %134 = mul i64 %12, %3\l  %135 = add i64 %134, %14\l  %136 = shl i64 %135, 1\l  %137 = getelementptr inbounds float, float addrspace(1)* %7, i64 %136\l  store float %133, float addrspace(1)* %137, align 4, !tbaa !5\l  %138 = load float, float addrspace(3)* getelementptr inbounds ([16 x float],\l... [16 x float] addrspace(3)* @_ZZ11gpuSDNoTestPKfmS0_mmS0_S0_PfE11threadSumsB,\l... i32 0, i32 0), align 16, !tbaa !5\l  %139 = fdiv contract float %138, %111\l  %140 = fcmp olt float %139, 0x39F0000000000000\l  %141 = select i1 %140, float 0x41F0000000000000, float 1.000000e+00\l  %142 = fmul float %139, %141\l  %143 = tail call float @llvm.sqrt.f32(float %142)\l  %144 = bitcast float %143 to i32\l  %145 = add nsw i32 %144, -1\l  %146 = bitcast i32 %145 to float\l  %147 = add nsw i32 %144, 1\l  %148 = bitcast i32 %147 to float\l  %149 = tail call i1 @llvm.amdgcn.class.f32(float %142, i32 608)\l  %150 = select i1 %140, float 0x3EF0000000000000, float 1.000000e+00\l  %151 = fneg float %148\l  %152 = tail call float @llvm.fma.f32(float %151, float %143, float %142)\l  %153 = fcmp ogt float %152, 0.000000e+00\l  %154 = fneg float %146\l  %155 = tail call float @llvm.fma.f32(float %154, float %143, float %142)\l  %156 = fcmp ole float %155, 0.000000e+00\l  %157 = select i1 %156, float %146, float %143\l  %158 = select i1 %153, float %148, float %157\l  %159 = fmul float %150, %158\l  %160 = select i1 %149, float %142, float %159\l  %161 = add nuw nsw i64 %136, 1\l  %162 = getelementptr inbounds float, float addrspace(1)* %7, i64 %161\l  store float %160, float addrspace(1)* %162, align 4, !tbaa !5\l  br label %163\l}"];
	Node0x58f3330 -> Node0x58ec800;
	Node0x58ec800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%163:\l163:                                              \l  ret void\l}"];
}
