digraph "CFG for '_Z13dUpdateSignifPKfmPf' function" {
	label="CFG for '_Z13dUpdateSignifPKfmPf' function";

	Node0x5205640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = zext i32 %4 to i64\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = shl nuw nsw i64 %5, 9\l  %8 = shl nuw nsw i32 %6, 5\l  %9 = zext i32 %8 to i64\l  %10 = add nuw nsw i64 %7, %9\l  br label %11\l}"];
	Node0x5205640 -> Node0x52057f0;
	Node0x52057f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = phi i64 [ 0, %3 ], [ %123, %119 ]\l  %13 = add nuw nsw i64 %10, %12\l  %14 = icmp ugt i64 %13, %1\l  br i1 %14, label %125, label %15\l|{<s0>T|<s1>F}}"];
	Node0x52057f0:s0 -> Node0x52072a0;
	Node0x52057f0:s1 -> Node0x5207330;
	Node0x5207330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%15:\l15:                                               \l  %16 = mul i64 %13, 5\l  %17 = mul i64 %13, 6\l  %18 = add nuw nsw i64 %16, 3\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5\l  %21 = add nuw nsw i64 %16, 4\l  %22 = getelementptr inbounds float, float addrspace(1)* %0, i64 %21\l  %23 = load float, float addrspace(1)* %22, align 4, !tbaa !5\l  %24 = fpext float %20 to double\l  %25 = fcmp contract ult double %24, 0x3FEFF7CED916872B\l  br i1 %25, label %26, label %53\l|{<s0>T|<s1>F}}"];
	Node0x5207330:s0 -> Node0x5208260;
	Node0x5207330:s1 -> Node0x52082f0;
	Node0x5208260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%26:\l26:                                               \l  %27 = fadd contract float %23, -2.000000e+00\l  %28 = fmul contract float %20, %20\l  %29 = fsub contract float 1.000000e+00, %28\l  %30 = fdiv contract float %27, %29\l  %31 = fcmp olt float %30, 0x39F0000000000000\l  %32 = select i1 %31, float 0x41F0000000000000, float 1.000000e+00\l  %33 = fmul float %30, %32\l  %34 = tail call float @llvm.sqrt.f32(float %33)\l  %35 = bitcast float %34 to i32\l  %36 = add nsw i32 %35, -1\l  %37 = bitcast i32 %36 to float\l  %38 = add nsw i32 %35, 1\l  %39 = bitcast i32 %38 to float\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %33, i32 608)\l  %41 = select i1 %31, float 0x3EF0000000000000, float 1.000000e+00\l  %42 = fneg float %39\l  %43 = tail call float @llvm.fma.f32(float %42, float %34, float %33)\l  %44 = fcmp ogt float %43, 0.000000e+00\l  %45 = fneg float %37\l  %46 = tail call float @llvm.fma.f32(float %45, float %34, float %33)\l  %47 = fcmp ole float %46, 0.000000e+00\l  %48 = select i1 %47, float %37, float %34\l  %49 = select i1 %44, float %39, float %48\l  %50 = fmul float %41, %49\l  %51 = select i1 %40, float %33, float %50\l  %52 = fmul contract float %20, %51\l  br label %53\l}"];
	Node0x5208260 -> Node0x52082f0;
	Node0x52082f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%53:\l53:                                               \l  %54 = phi float [ %52, %26 ], [ 1.000000e+04, %15 ]\l  %55 = fptosi float %23 to i32\l  %56 = icmp slt i32 %55, 1\l  br i1 %56, label %97, label %57\l|{<s0>T|<s1>F}}"];
	Node0x52082f0:s0 -> Node0x5209dc0;
	Node0x52082f0:s1 -> Node0x5209e50;
	Node0x5209e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%57:\l57:                                               \l  %58 = icmp ult i32 %55, 31\l  br i1 %58, label %59, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5209e50:s0 -> Node0x520a020;
	Node0x5209e50:s1 -> Node0x520a070;
	Node0x520a020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%59:\l59:                                               \l  %60 = add nsw i32 %55, -1\l  br label %89\l}"];
	Node0x520a020 -> Node0x520a240;
	Node0x520a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%61:\l61:                                               \l  %62 = icmp ult i32 %55, 51\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x520a070:s0 -> Node0x520a3c0;
	Node0x520a070:s1 -> Node0x520a410;
	Node0x520a3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%63:\l63:                                               \l  %64 = and i32 %55, 1\l  %65 = add nuw nsw i32 %64, %55\l  %66 = trunc i32 %65 to i8\l  %67 = add nsw i8 %66, -32\l  %68 = sdiv i8 %67, 2\l  %69 = add nuw nsw i8 %68, 30\l  %70 = zext i8 %69 to i32\l  br label %89\l}"];
	Node0x520a3c0 -> Node0x520a240;
	Node0x520a410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%71:\l71:                                               \l  %72 = icmp ult i32 %55, 71\l  br i1 %72, label %73, label %80\l|{<s0>T|<s1>F}}"];
	Node0x520a410:s0 -> Node0x520acb0;
	Node0x520a410:s1 -> Node0x520ad00;
	Node0x520acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%73:\l73:                                               \l  %74 = icmp ult i32 %55, 56\l  %75 = icmp ult i32 %55, 61\l  %76 = icmp ult i32 %55, 66\l  %77 = select i1 %76, i32 42, i32 43\l  %78 = select i1 %75, i32 41, i32 %77\l  %79 = select i1 %74, i32 40, i32 %78\l  br label %89\l}"];
	Node0x520acb0 -> Node0x520a240;
	Node0x520ad00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%80:\l80:                                               \l  %81 = icmp ult i32 %55, 81\l  br i1 %81, label %89, label %82\l|{<s0>T|<s1>F}}"];
	Node0x520ad00:s0 -> Node0x520a240;
	Node0x520ad00:s1 -> Node0x520b480;
	Node0x520b480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%82:\l82:                                               \l  %83 = icmp ult i32 %55, 101\l  %84 = icmp ult i32 %55, 151\l  %85 = icmp ult i32 %55, 201\l  %86 = select i1 %85, i32 47, i32 48\l  %87 = select i1 %84, i32 46, i32 %86\l  %88 = select i1 %83, i32 45, i32 %87\l  br label %89\l}"];
	Node0x520b480 -> Node0x520a240;
	Node0x520a240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%89:\l89:                                               \l  %90 = phi i32 [ %60, %59 ], [ %70, %63 ], [ 44, %80 ], [ %79, %73 ], [ %88,\l... %82 ]\l  %91 = tail call float @llvm.fabs.f32(float %54)\l  %92 = zext i32 %90 to i64\l  %93 = getelementptr [49 x float], [49 x float] addrspace(4)*\l... @__const._Z14dIsSignificantfi.tcutoffs, i64 0, i64 %92\l  %94 = load float, float addrspace(4)* %93, align 4, !tbaa !5\l  %95 = fcmp contract uge float %91, %94\l  %96 = zext i1 %95 to i32\l  br label %97\l}"];
	Node0x520a240 -> Node0x5209dc0;
	Node0x5209dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%97:\l97:                                               \l  %98 = phi i32 [ 0, %53 ], [ %96, %89 ]\l  %99 = icmp eq i32 %98, 0\l  br i1 %99, label %119, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5209dc0:s0 -> Node0x5207040;
	Node0x5209dc0:s1 -> Node0x520c2b0;
	Node0x520c2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %102 = load float, float addrspace(1)* %101, align 4, !tbaa !5\l  %103 = getelementptr inbounds float, float addrspace(1)* %2, i64 %17\l  store float %102, float addrspace(1)* %103, align 4, !tbaa !5\l  %104 = add nuw nsw i64 %16, 1\l  %105 = getelementptr inbounds float, float addrspace(1)* %0, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !5\l  %107 = or i64 %17, 1\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  store float %106, float addrspace(1)* %108, align 4, !tbaa !5\l  %109 = add nuw nsw i64 %16, 2\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !5\l  %112 = add nuw nsw i64 %17, 2\l  %113 = getelementptr inbounds float, float addrspace(1)* %2, i64 %112\l  store float %111, float addrspace(1)* %113, align 4, !tbaa !5\l  %114 = add nuw nsw i64 %17, 3\l  %115 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  store float %20, float addrspace(1)* %115, align 4, !tbaa !5\l  %116 = add nuw nsw i64 %17, 4\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  store float %54, float addrspace(1)* %117, align 4, !tbaa !5\l  %118 = add nuw nsw i64 %17, 5\l  br label %119\l}"];
	Node0x520c2b0 -> Node0x5207040;
	Node0x5207040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%119:\l119:                                              \l  %120 = phi i64 [ %118, %100 ], [ %17, %97 ]\l  %121 = phi float [ %23, %100 ], [ -1.000000e+00, %97 ]\l  %122 = getelementptr inbounds float, float addrspace(1)* %2, i64 %120\l  store float %121, float addrspace(1)* %122, align 4, !tbaa !5\l  %123 = add nuw nsw i64 %12, 1\l  %124 = icmp eq i64 %123, 32\l  br i1 %124, label %125, label %11, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5207040:s0 -> Node0x52072a0;
	Node0x5207040:s1 -> Node0x52057f0;
	Node0x52072a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%125:\l125:                                              \l  ret void\l}"];
}
