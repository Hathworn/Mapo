digraph "CFG for '_Z18kernelFeedForward1PfiS_iS_' function" {
	label="CFG for '_Z18kernelFeedForward1PfiS_iS_' function";

	Node0x5704400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = zext i32 %6 to i64\l  %8 = getelementptr inbounds float, float addrspace(1)* %0, i64 %7\l  store float 0.000000e+00, float addrspace(1)* %8, align 4, !tbaa !5\l  %9 = icmp sgt i32 %1, 0\l  br i1 %9, label %10, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5704400:s0 -> Node0x5706580;
	Node0x5704400:s1 -> Node0x5706610;
	Node0x5706580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%10:\l10:                                               \l  %11 = mul i32 %6, %1\l  %12 = add i32 %11, %3\l  %13 = and i32 %1, 7\l  %14 = icmp ult i32 %1, 8\l  br i1 %14, label %103, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5706580:s0 -> Node0x57069f0;
	Node0x5706580:s1 -> Node0x5706a40;
	Node0x5706a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%15:\l15:                                               \l  %16 = and i32 %1, -8\l  br label %17\l}"];
	Node0x5706a40 -> Node0x5705270;
	Node0x5705270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%17:\l17:                                               \l  %18 = phi float [ 0.000000e+00, %15 ], [ %99, %17 ]\l  %19 = phi i32 [ 0, %15 ], [ %100, %17 ]\l  %20 = phi i32 [ 0, %15 ], [ %101, %17 ]\l  %21 = add i32 %12, %19\l  %22 = zext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %2, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !5\l  %25 = zext i32 %19 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %4, i64 %25\l  %27 = load float, float addrspace(1)* %26, align 4, !tbaa !5\l  %28 = fmul contract float %24, %27\l  %29 = fadd contract float %18, %28\l  store float %29, float addrspace(1)* %8, align 4, !tbaa !5\l  %30 = or i32 %19, 1\l  %31 = add i32 %12, %30\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !5\l  %35 = zext i32 %30 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %4, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5\l  %38 = fmul contract float %34, %37\l  %39 = fadd contract float %29, %38\l  store float %39, float addrspace(1)* %8, align 4, !tbaa !5\l  %40 = or i32 %19, 2\l  %41 = add i32 %12, %40\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5\l  %45 = zext i32 %40 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5\l  %48 = fmul contract float %44, %47\l  %49 = fadd contract float %39, %48\l  store float %49, float addrspace(1)* %8, align 4, !tbaa !5\l  %50 = or i32 %19, 3\l  %51 = add i32 %12, %50\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %2, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5\l  %55 = zext i32 %50 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %4, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5\l  %58 = fmul contract float %54, %57\l  %59 = fadd contract float %49, %58\l  store float %59, float addrspace(1)* %8, align 4, !tbaa !5\l  %60 = or i32 %19, 4\l  %61 = add i32 %12, %60\l  %62 = zext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %2, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !5\l  %65 = zext i32 %60 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %4, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !5\l  %68 = fmul contract float %64, %67\l  %69 = fadd contract float %59, %68\l  store float %69, float addrspace(1)* %8, align 4, !tbaa !5\l  %70 = or i32 %19, 5\l  %71 = add i32 %12, %70\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !5\l  %75 = zext i32 %70 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %4, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !5\l  %78 = fmul contract float %74, %77\l  %79 = fadd contract float %69, %78\l  store float %79, float addrspace(1)* %8, align 4, !tbaa !5\l  %80 = or i32 %19, 6\l  %81 = add i32 %12, %80\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !5\l  %85 = zext i32 %80 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %4, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = fmul contract float %84, %87\l  %89 = fadd contract float %79, %88\l  store float %89, float addrspace(1)* %8, align 4, !tbaa !5\l  %90 = or i32 %19, 7\l  %91 = add i32 %12, %90\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %2, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !5\l  %95 = zext i32 %90 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %4, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !5\l  %98 = fmul contract float %94, %97\l  %99 = fadd contract float %89, %98\l  store float %99, float addrspace(1)* %8, align 4, !tbaa !5\l  %100 = add nuw nsw i32 %19, 8\l  %101 = add i32 %20, 8\l  %102 = icmp eq i32 %101, %16\l  br i1 %102, label %103, label %17, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x5705270:s0 -> Node0x57069f0;
	Node0x5705270:s1 -> Node0x5705270;
	Node0x57069f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%103:\l103:                                              \l  %104 = phi float [ 0.000000e+00, %10 ], [ %99, %17 ]\l  %105 = phi i32 [ 0, %10 ], [ %100, %17 ]\l  %106 = icmp eq i32 %13, 0\l  br i1 %106, label %123, label %107\l|{<s0>T|<s1>F}}"];
	Node0x57069f0:s0 -> Node0x5706610;
	Node0x57069f0:s1 -> Node0x570add0;
	Node0x570add0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi float [ %119, %107 ], [ %104, %103 ]\l  %109 = phi i32 [ %120, %107 ], [ %105, %103 ]\l  %110 = phi i32 [ %121, %107 ], [ 0, %103 ]\l  %111 = add i32 %12, %109\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %2, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !5\l  %115 = zext i32 %109 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %4, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !5\l  %118 = fmul contract float %114, %117\l  %119 = fadd contract float %108, %118\l  store float %119, float addrspace(1)* %8, align 4, !tbaa !5\l  %120 = add nuw nsw i32 %109, 1\l  %121 = add i32 %110, 1\l  %122 = icmp eq i32 %121, %13\l  br i1 %122, label %123, label %107, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x570add0:s0 -> Node0x5706610;
	Node0x570add0:s1 -> Node0x570add0;
	Node0x5706610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%123:\l123:                                              \l  ret void\l}"];
}
