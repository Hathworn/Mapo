digraph "CFG for '_Z18kernelFeedForward3PfS_iS_' function" {
	label="CFG for '_Z18kernelFeedForward3PfS_iS_' function";

	Node0x49bb750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = add i32 %5, %2\l  %7 = zext i32 %6 to i64\l  %8 = getelementptr inbounds float, float addrspace(1)* %1, i64 %7\l  %9 = load float, float addrspace(1)* %8, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !10, !invariant.load\l... !9\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = add i32 %16, %5\l  %18 = zext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %21 = fadd contract float %9, %20\l  store float %21, float addrspace(1)* %19, align 4, !tbaa !5\l  %22 = fneg contract float %21\l  %23 = fmul float %21, 0xBFF7154760000000\l  %24 = tail call float @llvm.rint.f32(float %23)\l  %25 = fcmp olt float %21, 0xC0562E4300000000\l  %26 = fcmp ogt float %21, 0x4059D1DA00000000\l  %27 = fneg float %23\l  %28 = tail call float @llvm.fma.f32(float %22, float 0x3FF7154760000000,\l... float %27)\l  %29 = tail call float @llvm.fma.f32(float %22, float 0x3E54AE0BE0000000,\l... float %28)\l  %30 = fsub float %23, %24\l  %31 = fadd float %29, %30\l  %32 = tail call float @llvm.exp2.f32(float %31)\l  %33 = fptosi float %24 to i32\l  %34 = tail call float @llvm.amdgcn.ldexp.f32(float %32, i32 %33)\l  %35 = select i1 %26, float 0.000000e+00, float %34\l  %36 = select i1 %25, float 0x7FF0000000000000, float %35\l  %37 = fpext float %36 to double\l  %38 = fadd contract double %37, 1.000000e+00\l  %39 = fdiv contract double 1.000000e+00, %38\l  %40 = fptrunc double %39 to float\l  %41 = getelementptr inbounds float, float addrspace(1)* %3, i64 %18\l  store float %40, float addrspace(1)* %41, align 4, !tbaa !5\l  ret void\l}"];
}
