digraph "CFG for '_Z25readGlobalMemoryCoalescedPfS_ii' function" {
	label="CFG for '_Z25readGlobalMemoryCoalescedPfS_ii' function";

	Node0x553d2e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp sgt i32 %3, 0\l  br i1 %14, label %15, label %120\l|{<s0>T|<s1>F}}"];
	Node0x553d2e0:s0 -> Node0x553f1f0;
	Node0x553d2e0:s1 -> Node0x553f280;
	Node0x553f1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = add nsw i32 %2, -1\l  br label %17\l}"];
	Node0x553f1f0 -> Node0x553ea20;
	Node0x553ea20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%17:\l17:                                               \l  %18 = phi i32 [ 0, %15 ], [ %118, %17 ]\l  %19 = phi float [ 0.000000e+00, %15 ], [ %115, %17 ]\l  %20 = phi i32 [ %13, %15 ], [ %117, %17 ]\l  %21 = and i32 %20, %16\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %25 = add nsw i32 %20, 32768\l  %26 = and i32 %25, %16\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %30 = add nsw i32 %20, 65536\l  %31 = and i32 %30, %16\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = add nsw i32 %20, 98304\l  %36 = and i32 %35, %16\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %40 = add nsw i32 %20, 131072\l  %41 = and i32 %40, %16\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %45 = add nsw i32 %20, 163840\l  %46 = and i32 %45, %16\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %50 = add nsw i32 %20, 196608\l  %51 = and i32 %50, %16\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %55 = add nsw i32 %20, 229376\l  %56 = and i32 %55, %16\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %60 = add nsw i32 %20, 262144\l  %61 = and i32 %60, %16\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %65 = add nsw i32 %20, 294912\l  %66 = and i32 %65, %16\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %70 = add nsw i32 %20, 327680\l  %71 = and i32 %70, %16\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %75 = add nsw i32 %20, 360448\l  %76 = and i32 %75, %16\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %80 = add nsw i32 %20, 393216\l  %81 = and i32 %80, %16\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %85 = add nsw i32 %20, 425984\l  %86 = and i32 %85, %16\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %90 = add nsw i32 %20, 458752\l  %91 = and i32 %90, %16\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %92\l  %94 = load float, float addrspace(1)* %93, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %95 = add nsw i32 %20, 491520\l  %96 = and i32 %95, %16\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %100 = fadd contract float %24, %29\l  %101 = fadd contract float %100, %34\l  %102 = fadd contract float %101, %39\l  %103 = fadd contract float %102, %44\l  %104 = fadd contract float %103, %49\l  %105 = fadd contract float %104, %54\l  %106 = fadd contract float %105, %59\l  %107 = fadd contract float %106, %64\l  %108 = fadd contract float %107, %69\l  %109 = fadd contract float %108, %74\l  %110 = fadd contract float %109, %79\l  %111 = fadd contract float %110, %84\l  %112 = fadd contract float %111, %89\l  %113 = fadd contract float %112, %94\l  %114 = fadd contract float %113, %99\l  %115 = fadd contract float %19, %114\l  %116 = add nsw i32 %20, 524288\l  %117 = and i32 %116, %16\l  %118 = add nuw nsw i32 %18, 1\l  %119 = icmp eq i32 %118, %3\l  br i1 %119, label %120, label %17, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x553ea20:s0 -> Node0x553f280;
	Node0x553ea20:s1 -> Node0x553ea20;
	Node0x553f280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%120:\l120:                                              \l  %121 = phi float [ 0.000000e+00, %4 ], [ %115, %17 ]\l  %122 = sext i32 %13 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %1, i64 %122\l  store float %121, float addrspace(1)* %123, align 4, !tbaa !7\l  ret void\l}"];
}
