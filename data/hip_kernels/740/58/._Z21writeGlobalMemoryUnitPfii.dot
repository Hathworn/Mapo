digraph "CFG for '_Z21writeGlobalMemoryUnitPfii' function" {
	label="CFG for '_Z21writeGlobalMemoryUnitPfii' function";

	Node0x62e8d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = icmp sgt i32 %2, 0\l  br i1 %13, label %14, label %88\l|{<s0>T|<s1>F}}"];
	Node0x62e8d80:s0 -> Node0x62eac20;
	Node0x62e8d80:s1 -> Node0x62eacb0;
	Node0x62eac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%14:\l14:                                               \l  %15 = shl nsw i32 %12, 9\l  %16 = sitofp i32 %12 to float\l  %17 = add nsw i32 %1, -1\l  br label %18\l}"];
	Node0x62eac20 -> Node0x62ea810;
	Node0x62ea810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = phi i32 [ %15, %14 ], [ %85, %18 ]\l  %20 = phi i32 [ 0, %14 ], [ %86, %18 ]\l  %21 = and i32 %19, %17\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %0, i64 %22\l  store float %16, float addrspace(1)* %23, align 4, !tbaa !7\l  %24 = add nsw i32 %19, 1\l  %25 = and i32 %24, %17\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %0, i64 %26\l  store float %16, float addrspace(1)* %27, align 4, !tbaa !7\l  %28 = add nsw i32 %19, 2\l  %29 = and i32 %28, %17\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  store float %16, float addrspace(1)* %31, align 4, !tbaa !7\l  %32 = add nsw i32 %19, 3\l  %33 = and i32 %32, %17\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  store float %16, float addrspace(1)* %35, align 4, !tbaa !7\l  %36 = add nsw i32 %19, 4\l  %37 = and i32 %36, %17\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %0, i64 %38\l  store float %16, float addrspace(1)* %39, align 4, !tbaa !7\l  %40 = add nsw i32 %19, 5\l  %41 = and i32 %40, %17\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  store float %16, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = add nsw i32 %19, 6\l  %45 = and i32 %44, %17\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %0, i64 %46\l  store float %16, float addrspace(1)* %47, align 4, !tbaa !7\l  %48 = add nsw i32 %19, 7\l  %49 = and i32 %48, %17\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %0, i64 %50\l  store float %16, float addrspace(1)* %51, align 4, !tbaa !7\l  %52 = add nsw i32 %19, 8\l  %53 = and i32 %52, %17\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  store float %16, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = add nsw i32 %19, 9\l  %57 = and i32 %56, %17\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  store float %16, float addrspace(1)* %59, align 4, !tbaa !7\l  %60 = add nsw i32 %19, 10\l  %61 = and i32 %60, %17\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  store float %16, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = add nsw i32 %19, 11\l  %65 = and i32 %64, %17\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %0, i64 %66\l  store float %16, float addrspace(1)* %67, align 4, !tbaa !7\l  %68 = add nsw i32 %19, 12\l  %69 = and i32 %68, %17\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %0, i64 %70\l  store float %16, float addrspace(1)* %71, align 4, !tbaa !7\l  %72 = add nsw i32 %19, 13\l  %73 = and i32 %72, %17\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  store float %16, float addrspace(1)* %75, align 4, !tbaa !7\l  %76 = add nsw i32 %19, 14\l  %77 = and i32 %76, %17\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds float, float addrspace(1)* %0, i64 %78\l  store float %16, float addrspace(1)* %79, align 4, !tbaa !7\l  %80 = add nsw i32 %19, 15\l  %81 = and i32 %80, %17\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  store float %16, float addrspace(1)* %83, align 4, !tbaa !7\l  %84 = add nsw i32 %19, 16\l  %85 = and i32 %84, %17\l  %86 = add nuw nsw i32 %20, 1\l  %87 = icmp eq i32 %86, %2\l  br i1 %87, label %88, label %18, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x62ea810:s0 -> Node0x62eacb0;
	Node0x62ea810:s1 -> Node0x62ea810;
	Node0x62eacb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%88:\l88:                                               \l  ret void\l}"];
}
