digraph "CFG for '_Z11AddIntsCUDAPiS_' function" {
	label="CFG for '_Z11AddIntsCUDAPiS_' function";

	Node0x4d3d370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l  %3 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !4\l  br label %5\l}"];
	Node0x4d3d370 -> Node0x4d3dfa0;
	Node0x4d3e0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l4:                                                \l  ret void\l}"];
	Node0x4d3dfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l5:                                                \l  %6 = phi i32 [ %3, %2 ], [ %37, %5 ]\l  %7 = phi i32 [ 0, %2 ], [ %38, %5 ]\l  %8 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %9 = add nsw i32 %6, %8\l  store i32 %9, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %10 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %11 = add nsw i32 %9, %10\l  store i32 %11, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %12 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %13 = add nsw i32 %11, %12\l  store i32 %13, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %14 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %15 = add nsw i32 %13, %14\l  store i32 %15, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %16 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %17 = add nsw i32 %15, %16\l  store i32 %17, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %18 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %19 = add nsw i32 %17, %18\l  store i32 %19, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %20 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %21 = add nsw i32 %19, %20\l  store i32 %21, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %22 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %23 = add nsw i32 %21, %22\l  store i32 %23, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %24 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %25 = add nsw i32 %23, %24\l  store i32 %25, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %26 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %27 = add nsw i32 %25, %26\l  store i32 %27, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %28 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %29 = add nsw i32 %27, %28\l  store i32 %29, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %30 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %31 = add nsw i32 %29, %30\l  store i32 %31, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %32 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %33 = add nsw i32 %31, %32\l  store i32 %33, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %34 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %35 = add nsw i32 %33, %34\l  store i32 %35, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %36 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4\l  %37 = add nsw i32 %35, %36\l  store i32 %37, i32 addrspace(1)* %0, align 4, !tbaa !4\l  %38 = add nuw nsw i32 %7, 15\l  %39 = icmp eq i32 %38, 1000005\l  br i1 %39, label %4, label %5, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x4d3dfa0:s0 -> Node0x4d3e0a0;
	Node0x4d3dfa0:s1 -> Node0x4d3dfa0;
}
