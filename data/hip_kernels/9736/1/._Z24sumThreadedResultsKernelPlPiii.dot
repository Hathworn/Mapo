digraph "CFG for '_Z24sumThreadedResultsKernelPlPiii' function" {
	label="CFG for '_Z24sumThreadedResultsKernelPlPiii' function";

	Node0x54c1cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = icmp sgt i32 %3, 0\l  br i1 %6, label %7, label %36\l|{<s0>T|<s1>F}}"];
	Node0x54c1cf0:s0 -> Node0x54c3180;
	Node0x54c1cf0:s1 -> Node0x54c3210;
	Node0x54c3180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%7:\l7:                                                \l  %8 = zext i32 %5 to i64\l  %9 = getelementptr inbounds i64, i64 addrspace(1)* %0, i64 %8\l  %10 = load i64, i64 addrspace(1)* %9, align 8, !tbaa !5\l  %11 = and i32 %3, 7\l  %12 = icmp ult i32 %3, 8\l  br i1 %12, label %15, label %13\l|{<s0>T|<s1>F}}"];
	Node0x54c3180:s0 -> Node0x54c1d80;
	Node0x54c3180:s1 -> Node0x54c3820;
	Node0x54c3820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%13:\l13:                                               \l  %14 = and i32 %3, -8\l  br label %37\l}"];
	Node0x54c3820 -> Node0x54c3a20;
	Node0x54c1d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%15:\l15:                                               \l  %16 = phi i64 [ undef, %7 ], [ %103, %37 ]\l  %17 = phi i64 [ %10, %7 ], [ %103, %37 ]\l  %18 = phi i32 [ 0, %7 ], [ %104, %37 ]\l  %19 = icmp eq i32 %11, 0\l  br i1 %19, label %34, label %20\l|{<s0>T|<s1>F}}"];
	Node0x54c1d80:s0 -> Node0x54c42d0;
	Node0x54c1d80:s1 -> Node0x54c4360;
	Node0x54c4360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = phi i64 [ %30, %20 ], [ %17, %15 ]\l  %22 = phi i32 [ %31, %20 ], [ %18, %15 ]\l  %23 = phi i32 [ %32, %20 ], [ 0, %15 ]\l  %24 = mul nsw i32 %22, %2\l  %25 = add nsw i32 %24, %5\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %29 = sext i32 %28 to i64\l  %30 = add nsw i64 %21, %29\l  %31 = add nuw nsw i32 %22, 1\l  %32 = add i32 %23, 1\l  %33 = icmp eq i32 %32, %11\l  br i1 %33, label %34, label %20, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x54c4360:s0 -> Node0x54c42d0;
	Node0x54c4360:s1 -> Node0x54c4360;
	Node0x54c42d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = phi i64 [ %16, %15 ], [ %30, %20 ]\l  store i64 %35, i64 addrspace(1)* %9, align 8, !tbaa !5\l  br label %36\l}"];
	Node0x54c42d0 -> Node0x54c3210;
	Node0x54c3210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  ret void\l}"];
	Node0x54c3a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i64 [ %10, %13 ], [ %103, %37 ]\l  %39 = phi i32 [ 0, %13 ], [ %104, %37 ]\l  %40 = phi i32 [ 0, %13 ], [ %105, %37 ]\l  %41 = mul nsw i32 %39, %2\l  %42 = add nsw i32 %41, %5\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %46 = sext i32 %45 to i64\l  %47 = add nsw i64 %38, %46\l  %48 = or i32 %39, 1\l  %49 = mul nsw i32 %48, %2\l  %50 = add nsw i32 %49, %5\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %54 = sext i32 %53 to i64\l  %55 = add nsw i64 %47, %54\l  %56 = or i32 %39, 2\l  %57 = mul nsw i32 %56, %2\l  %58 = add nsw i32 %57, %5\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %59\l  %61 = load i32, i32 addrspace(1)* %60, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %62 = sext i32 %61 to i64\l  %63 = add nsw i64 %55, %62\l  %64 = or i32 %39, 3\l  %65 = mul nsw i32 %64, %2\l  %66 = add nsw i32 %65, %5\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %70 = sext i32 %69 to i64\l  %71 = add nsw i64 %63, %70\l  %72 = or i32 %39, 4\l  %73 = mul nsw i32 %72, %2\l  %74 = add nsw i32 %73, %5\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %78 = sext i32 %77 to i64\l  %79 = add nsw i64 %71, %78\l  %80 = or i32 %39, 5\l  %81 = mul nsw i32 %80, %2\l  %82 = add nsw i32 %81, %5\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %86 = sext i32 %85 to i64\l  %87 = add nsw i64 %79, %86\l  %88 = or i32 %39, 6\l  %89 = mul nsw i32 %88, %2\l  %90 = add nsw i32 %89, %5\l  %91 = sext i32 %90 to i64\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %91\l  %93 = load i32, i32 addrspace(1)* %92, align 4, !tbaa !9, !amdgpu.noclobber\l... !11\l  %94 = sext i32 %93 to i64\l  %95 = add nsw i64 %87, %94\l  %96 = or i32 %39, 7\l  %97 = mul nsw i32 %96, %2\l  %98 = add nsw i32 %97, %5\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !9,\l... !amdgpu.noclobber !11\l  %102 = sext i32 %101 to i64\l  %103 = add nsw i64 %95, %102\l  %104 = add nuw nsw i32 %39, 8\l  %105 = add i32 %40, 8\l  %106 = icmp eq i32 %105, %14\l  br i1 %106, label %15, label %37, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x54c3a20:s0 -> Node0x54c1d80;
	Node0x54c3a20:s1 -> Node0x54c3a20;
}
