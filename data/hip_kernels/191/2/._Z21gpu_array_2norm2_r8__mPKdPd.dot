digraph "CFG for '_Z21gpu_array_2norm2_r8__mPKdPd' function" {
	label="CFG for '_Z21gpu_array_2norm2_r8__mPKdPd' function";

	Node0x5a45f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %18 = mul i32 %17, %11\l  %19 = mul i32 %16, %11\l  %20 = zext i32 %19 to i64\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %18, %21\l  %23 = zext i32 %22 to i64\l  %24 = icmp ult i64 %23, %0\l  br i1 %24, label %25, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5a45f00:s0 -> Node0x5a485a0;
	Node0x5a45f00:s1 -> Node0x5a48630;
	Node0x5a485a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi double [ %31, %25 ], [ 0.000000e+00, %3 ]\l  %27 = phi i64 [ %32, %25 ], [ %23, %3 ]\l  %28 = getelementptr inbounds double, double addrspace(1)* %1, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %30 = fmul contract double %29, %29\l  %31 = fadd contract double %26, %30\l  %32 = add i64 %27, %20\l  %33 = icmp ult i64 %32, %0\l  br i1 %33, label %25, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5a485a0:s0 -> Node0x5a485a0;
	Node0x5a485a0:s1 -> Node0x5a48630;
	Node0x5a48630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%34:\l34:                                               \l  %35 = phi double [ 0.000000e+00, %3 ], [ %31, %25 ]\l  %36 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %21\l  store double %35, double addrspace(3)* %36, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = icmp eq i32 %21, 0\l  br i1 %37, label %38, label %115\l|{<s0>T|<s1>F}}"];
	Node0x5a48630:s0 -> Node0x5a4ac80;
	Node0x5a48630:s1 -> Node0x5a4acd0;
	Node0x5a4ac80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%38:\l38:                                               \l  %39 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @thread_norms2_r8, i32 0, i32 0), align\l... 8, !tbaa !16\l  %40 = zext i32 %17 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  store double %39, double addrspace(1)* %41, align 8, !tbaa !16\l  %42 = zext i16 %10 to i64\l  %43 = icmp ugt i16 %10, 1\l  br i1 %43, label %44, label %115\l|{<s0>T|<s1>F}}"];
	Node0x5a4ac80:s0 -> Node0x5a4b3f0;
	Node0x5a4ac80:s1 -> Node0x5a4acd0;
	Node0x5a4b3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%44:\l44:                                               \l  %45 = add nsw i64 %42, -1\l  %46 = add nsw i64 %42, -2\l  %47 = and i64 %45, 7\l  %48 = icmp ult i64 %46, 7\l  br i1 %48, label %97, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5a4b3f0:s0 -> Node0x5a4b7c0;
	Node0x5a4b3f0:s1 -> Node0x5a4b810;
	Node0x5a4b810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%49:\l49:                                               \l  %50 = and i64 %45, -8\l  br label %51\l}"];
	Node0x5a4b810 -> Node0x5a4ba10;
	Node0x5a4ba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%51:\l51:                                               \l  %52 = phi double [ %39, %49 ], [ %93, %51 ]\l  %53 = phi i64 [ 1, %49 ], [ %94, %51 ]\l  %54 = phi i64 [ 0, %49 ], [ %95, %51 ]\l  %55 = trunc i64 %53 to i32\l  %56 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %55\l  %57 = load double, double addrspace(3)* %56, align 8, !tbaa !16\l  %58 = fadd contract double %57, %52\l  %59 = trunc i64 %53 to i32\l  %60 = add i32 %59, 1\l  %61 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %60\l  %62 = load double, double addrspace(3)* %61, align 8, !tbaa !16\l  %63 = fadd contract double %62, %58\l  %64 = trunc i64 %53 to i32\l  %65 = add i32 %64, 2\l  %66 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %65\l  %67 = load double, double addrspace(3)* %66, align 8, !tbaa !16\l  %68 = fadd contract double %67, %63\l  %69 = trunc i64 %53 to i32\l  %70 = add i32 %69, 3\l  %71 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %70\l  %72 = load double, double addrspace(3)* %71, align 8, !tbaa !16\l  %73 = fadd contract double %72, %68\l  %74 = trunc i64 %53 to i32\l  %75 = add i32 %74, 4\l  %76 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %75\l  %77 = load double, double addrspace(3)* %76, align 8, !tbaa !16\l  %78 = fadd contract double %77, %73\l  %79 = trunc i64 %53 to i32\l  %80 = add i32 %79, 5\l  %81 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %80\l  %82 = load double, double addrspace(3)* %81, align 8, !tbaa !16\l  %83 = fadd contract double %82, %78\l  %84 = trunc i64 %53 to i32\l  %85 = add i32 %84, 6\l  %86 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %85\l  %87 = load double, double addrspace(3)* %86, align 8, !tbaa !16\l  %88 = fadd contract double %87, %83\l  %89 = trunc i64 %53 to i32\l  %90 = add i32 %89, 7\l  %91 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %90\l  %92 = load double, double addrspace(3)* %91, align 8, !tbaa !16\l  %93 = fadd contract double %92, %88\l  %94 = add nuw nsw i64 %53, 8\l  %95 = add i64 %54, 8\l  %96 = icmp eq i64 %95, %50\l  br i1 %96, label %97, label %51, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5a4ba10:s0 -> Node0x5a4b7c0;
	Node0x5a4ba10:s1 -> Node0x5a4ba10;
	Node0x5a4b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%97:\l97:                                               \l  %98 = phi double [ undef, %44 ], [ %93, %51 ]\l  %99 = phi double [ %39, %44 ], [ %93, %51 ]\l  %100 = phi i64 [ 1, %44 ], [ %94, %51 ]\l  %101 = icmp eq i64 %47, 0\l  br i1 %101, label %113, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5a4b7c0:s0 -> Node0x5a4e130;
	Node0x5a4b7c0:s1 -> Node0x5a4e180;
	Node0x5a4e180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%102:\l102:                                              \l  %103 = phi double [ %109, %102 ], [ %99, %97 ]\l  %104 = phi i64 [ %110, %102 ], [ %100, %97 ]\l  %105 = phi i64 [ %111, %102 ], [ 0, %97 ]\l  %106 = trunc i64 %104 to i32\l  %107 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @thread_norms2_r8, i32 0, i32 %106\l  %108 = load double, double addrspace(3)* %107, align 8, !tbaa !16\l  %109 = fadd contract double %108, %103\l  %110 = add nuw nsw i64 %104, 1\l  %111 = add i64 %105, 1\l  %112 = icmp eq i64 %111, %47\l  br i1 %112, label %113, label %102, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x5a4e180:s0 -> Node0x5a4e130;
	Node0x5a4e180:s1 -> Node0x5a4e180;
	Node0x5a4e130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%113:\l113:                                              \l  %114 = phi double [ %98, %97 ], [ %109, %102 ]\l  store double %114, double addrspace(1)* %41, align 8, !tbaa !16\l  br label %115\l}"];
	Node0x5a4e130 -> Node0x5a4acd0;
	Node0x5a4acd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%115:\l115:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
