digraph "CFG for '_Z21createRaysOrthoKernelP15HIP_vector_typeIfLj4EEiifffffj' function" {
	label="CFG for '_Z21createRaysOrthoKernelP15HIP_vector_typeIfLj4EEiifffffj' function";

	Node0x58594a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !5, !invariant.load !6\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = add i32 %17, %10\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !5, !invariant.load !6\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = add i32 %25, %19\l  %27 = icmp slt i32 %18, %1\l  %28 = icmp slt i32 %26, %2\l  %29 = select i1 %27, i1 %28, i1 false\l  br i1 %29, label %30, label %50\l|{<s0>T|<s1>F}}"];
	Node0x58594a0:s0 -> Node0x585da20;
	Node0x58594a0:s1 -> Node0x585dab0;
	Node0x585da20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%30:\l30:                                               \l  %31 = bitcast i32 %8 to float\l  %32 = mul nsw i32 %26, %1\l  %33 = add nsw i32 %32, %18\l  %34 = sitofp i32 %18 to float\l  %35 = fmul contract float %34, %6\l  %36 = fadd contract float %35, %3\l  %37 = sitofp i32 %26 to float\l  %38 = fmul contract float %37, %7\l  %39 = fadd contract float %38, %4\l  %40 = insertelement \<4 x float\> undef, float %36, i64 0\l  %41 = insertelement \<4 x float\> %40, float %39, i64 1\l  %42 = insertelement \<4 x float\> %41, float %5, i64 2\l  %43 = insertelement \<4 x float\> %42, float %31, i64 3\l  %44 = shl nsw i32 %33, 1\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %45, i32 0, i32 0, i32 0\l  store \<4 x float\> %43, \<4 x float\> addrspace(1)* %46, align 16\l  %47 = add nuw nsw i32 %44, 1\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds %struct.HIP_vector_type,\l... %struct.HIP_vector_type addrspace(1)* %0, i64 %48, i32 0, i32 0, i32 0\l  store \<4 x float\> \<float 0.000000e+00, float 0.000000e+00, float\l... 1.000000e+00, float 0x46FED09BE0000000\>, \<4 x float\> addrspace(1)* %49, align\l... 16\l  br label %50\l}"];
	Node0x585da20 -> Node0x585dab0;
	Node0x585dab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  ret void\l}"];
}
