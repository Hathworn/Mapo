digraph "CFG for '_Z31kernel_image2D1C_ConvolveColumnPfiisS_S_' function" {
	label="CFG for '_Z31kernel_image2D1C_ConvolveColumnPfiisS_S_' function";

	Node0x45f6a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %1\l  %25 = icmp slt i32 %23, %2\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %63\l|{<s0>T|<s1>F}}"];
	Node0x45f6a00:s0 -> Node0x45fa4c0;
	Node0x45f6a00:s1 -> Node0x45fa550;
	Node0x45fa4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = sext i16 %3 to i64\l  %29 = sub i16 0, %3\l  %30 = icmp sgt i16 %29, %3\l  br i1 %30, label %35, label %31\l|{<s0>T|<s1>F}}"];
	Node0x45fa4c0:s0 -> Node0x45fa850;
	Node0x45fa4c0:s1 -> Node0x45fa8a0;
	Node0x45fa8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = trunc i32 %23 to i16\l  %33 = trunc i32 %2 to i16\l  %34 = add i16 %33, -1\l  br label %41\l}"];
	Node0x45fa8a0 -> Node0x45f8b00;
	Node0x45fa850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = phi float [ 0.000000e+00, %27 ], [ %60, %41 ]\l  %37 = mul nsw i32 %23, %1\l  %38 = add nsw i32 %37, %15\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %5, i64 %39\l  store float %36, float addrspace(1)* %40, align 4, !tbaa !7\l  br label %63\l}"];
	Node0x45fa850 -> Node0x45fa550;
	Node0x45f8b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi i16 [ %29, %31 ], [ %61, %41 ]\l  %43 = phi float [ 0.000000e+00, %31 ], [ %60, %41 ]\l  %44 = sext i16 %42 to i64\l  %45 = add i16 %42, %32\l  %46 = tail call i16 @llvm.smax.i16(i16 %45, i16 0)\l  %47 = zext i16 %46 to i32\l  %48 = icmp slt i32 %47, %2\l  %49 = select i1 %48, i16 %46, i16 %34\l  %50 = add nsw i64 %44, %28\l  %51 = getelementptr inbounds float, float addrspace(1)* %4, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %53 = sext i16 %49 to i32\l  %54 = mul nsw i32 %53, %1\l  %55 = add nsw i32 %54, %15\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %59 = fmul contract float %52, %58\l  %60 = fadd contract float %43, %59\l  %61 = add i16 %42, 1\l  %62 = icmp sgt i16 %61, %3\l  br i1 %62, label %35, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45f8b00:s0 -> Node0x45fa850;
	Node0x45f8b00:s1 -> Node0x45f8b00;
	Node0x45fa550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%63:\l63:                                               \l  ret void\l}"];
}
