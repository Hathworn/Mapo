digraph "CFG for '_Z28kernel_image2D1C_ConvolveRowPfiisS_S_' function" {
	label="CFG for '_Z28kernel_image2D1C_ConvolveRowPfiisS_S_' function";

	Node0x4d6fa70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %1\l  %25 = icmp slt i32 %23, %2\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %65\l|{<s0>T|<s1>F}}"];
	Node0x4d6fa70:s0 -> Node0x4d73530;
	Node0x4d6fa70:s1 -> Node0x4d735c0;
	Node0x4d73530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%27:\l27:                                               \l  %28 = sext i16 %3 to i64\l  %29 = sub i16 0, %3\l  %30 = icmp sgt i16 %29, %3\l  br i1 %30, label %31, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4d73530:s0 -> Node0x4d738c0;
	Node0x4d73530:s1 -> Node0x4d73910;
	Node0x4d738c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%31:\l31:                                               \l  %32 = mul nsw i32 %23, %1\l  br label %38\l}"];
	Node0x4d738c0 -> Node0x4d71ad0;
	Node0x4d73910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%33:\l33:                                               \l  %34 = trunc i32 %15 to i16\l  %35 = trunc i32 %1 to i16\l  %36 = add i16 %35, -1\l  %37 = mul nsw i32 %23, %1\l  br label %44\l}"];
	Node0x4d73910 -> Node0x4d73ef0;
	Node0x4d71ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %32, %31 ], [ %37, %44 ]\l  %40 = phi float [ 0.000000e+00, %31 ], [ %62, %44 ]\l  %41 = add nsw i32 %39, %15\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %5, i64 %42\l  store float %40, float addrspace(1)* %43, align 4, !tbaa !7\l  br label %65\l}"];
	Node0x4d71ad0 -> Node0x4d735c0;
	Node0x4d73ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi i16 [ %29, %33 ], [ %63, %44 ]\l  %46 = phi float [ 0.000000e+00, %33 ], [ %62, %44 ]\l  %47 = sext i16 %45 to i64\l  %48 = add i16 %45, %34\l  %49 = tail call i16 @llvm.smax.i16(i16 %48, i16 0)\l  %50 = zext i16 %49 to i32\l  %51 = icmp slt i32 %50, %1\l  %52 = select i1 %51, i16 %49, i16 %36\l  %53 = add nsw i64 %47, %28\l  %54 = getelementptr inbounds float, float addrspace(1)* %4, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = sext i16 %52 to i32\l  %57 = add nsw i32 %37, %56\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %61 = fmul contract float %55, %60\l  %62 = fadd contract float %46, %61\l  %63 = add i16 %45, 1\l  %64 = icmp sgt i16 %63, %3\l  br i1 %64, label %38, label %44, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4d73ef0:s0 -> Node0x4d71ad0;
	Node0x4d73ef0:s1 -> Node0x4d73ef0;
	Node0x4d735c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%65:\l65:                                               \l  ret void\l}"];
}
