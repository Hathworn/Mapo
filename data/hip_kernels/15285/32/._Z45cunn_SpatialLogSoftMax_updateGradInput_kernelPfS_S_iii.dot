digraph "CFG for '_Z45cunn_SpatialLogSoftMax_updateGradInput_kernelPfS_S_iii' function" {
	label="CFG for '_Z45cunn_SpatialLogSoftMax_updateGradInput_kernelPfS_S_iii' function";

	Node0x5d33870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = add i32 %14, %7\l  %16 = freeze i32 %15\l  %17 = freeze i32 %4\l  %18 = sdiv i32 %16, %17\l  %19 = mul nsw i32 %18, %3\l  %20 = mul i32 %18, %17\l  %21 = sub i32 %16, %20\l  %22 = add nsw i32 %19, %21\l  %23 = icmp slt i32 %22, %5\l  br i1 %23, label %24, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5d33870:s0 -> Node0x5d35b60;
	Node0x5d33870:s1 -> Node0x5d35bf0;
	Node0x5d35b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%24:\l24:                                               \l  %25 = add nsw i32 %22, %3\l  %26 = icmp sgt i32 %3, 0\l  br i1 %26, label %29, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5d35b60:s0 -> Node0x5d35e50;
	Node0x5d35b60:s1 -> Node0x5d35ea0;
	Node0x5d35ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%27:\l27:                                               \l  %28 = phi float [ 0.000000e+00, %24 ], [ %35, %29 ]\l  br i1 %26, label %38, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5d35ea0:s0 -> Node0x5d36b10;
	Node0x5d35ea0:s1 -> Node0x5d35bf0;
	Node0x5d35e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %36, %29 ], [ %22, %24 ]\l  %31 = phi float [ %35, %29 ], [ 0.000000e+00, %24 ]\l  %32 = sext i32 %30 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %2, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %35 = fadd contract float %31, %34\l  %36 = add nsw i32 %30, %4\l  %37 = icmp slt i32 %36, %25\l  br i1 %37, label %29, label %27, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5d35e50:s0 -> Node0x5d35e50;
	Node0x5d35e50:s1 -> Node0x5d35ea0;
	Node0x5d36b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %49, %38 ], [ %22, %27 ]\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = tail call float @llvm.exp.f32(float %44)\l  %46 = fmul contract float %28, %45\l  %47 = fsub contract float %42, %46\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %40\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  %49 = add nsw i32 %39, %4\l  %50 = icmp slt i32 %49, %25\l  br i1 %50, label %38, label %51, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5d36b10:s0 -> Node0x5d36b10;
	Node0x5d36b10:s1 -> Node0x5d35bf0;
	Node0x5d35bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%51:\l51:                                               \l  ret void\l}"];
}
