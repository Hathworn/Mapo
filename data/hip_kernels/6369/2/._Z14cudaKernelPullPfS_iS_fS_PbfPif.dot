digraph "CFG for '_Z14cudaKernelPullPfS_iS_fS_PbfPif' function" {
	label="CFG for '_Z14cudaKernelPullPfS_iS_fS_PbfPif' function";

	Node0x5f73ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %13 = sext i32 %11 to i64\l  %14 = getelementptr inbounds float, float addrspace(1)* %3, i64 %13\l  %15 = icmp eq i32 %12, 0\l  %16 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 %13\l  %17 = icmp sgt i32 %2, 0\l  %18 = add nsw i32 %2, 1\l  %19 = mul nsw i32 %11, %2\l  %20 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %21 = getelementptr i8, i8 addrspace(4)* %20, i64 4\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = sext i32 %19 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %5, i64 %23\l  %25 = fsub contract float 1.000000e+00, %9\l  br label %26\l}"];
	Node0x5f73ee0 -> Node0x5f77430;
	Node0x5f77430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%26:\l26:                                               \l  br i1 %15, label %27, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5f77430:s0 -> Node0x5f77530;
	Node0x5f77430:s1 -> Node0x5f77580;
	Node0x5f77530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%27:\l27:                                               \l  %28 = load float, float addrspace(1)* %14, align 4, !tbaa !5\l  %29 = fsub contract float %28, %4\l  store float %29, float addrspace(1)* %14, align 4, !tbaa !5\l  br label %30\l}"];
	Node0x5f77530 -> Node0x5f77580;
	Node0x5f77580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%30:\l30:                                               \l  br label %31\l}"];
	Node0x5f77580 -> Node0x5f78030;
	Node0x5f78030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %15, label %32, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5f78030:s0 -> Node0x5f78390;
	Node0x5f78030:s1 -> Node0x5f78420;
	Node0x5f78390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%32:\l32:                                               \l  store i8 0, i8 addrspace(1)* %16, align 1, !tbaa !9\l  br label %33\l}"];
	Node0x5f78390 -> Node0x5f78420;
	Node0x5f78420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%33:\l33:                                               \l  br i1 %17, label %37, label %34\l|{<s0>T|<s1>F}}"];
	Node0x5f78420:s0 -> Node0x5f788a0;
	Node0x5f78420:s1 -> Node0x5f788f0;
	Node0x5f788f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%34:\l34:                                               \l  %35 = load i8, i8 addrspace(1)* %16, align 1, !tbaa !9, !range !11\l  %36 = icmp eq i8 %35, 0\l  br i1 %36, label %158, label %31, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5f788f0:s0 -> Node0x5f79280;
	Node0x5f788f0:s1 -> Node0x5f78030;
	Node0x5f788a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%37:\l37:                                               \l  %38 = phi i32 [ %156, %155 ], [ 0, %33 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = mul nsw i32 %38, %18\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %40\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !14\l  %43 = icmp slt i32 %12, %42\l  br i1 %43, label %44, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5f788a0:s0 -> Node0x5f79c00;
	Node0x5f788a0:s1 -> Node0x5f79c90;
	Node0x5f79c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%44:\l44:                                               \l  %45 = add i32 %39, 1\l  %46 = mul nsw i32 %38, %2\l  %47 = load i16, i16 addrspace(4)* %22, align 4, !range !16, !invariant.load\l... !17\l  %48 = zext i16 %47 to i32\l  br label %49\l}"];
	Node0x5f79c00 -> Node0x5f7a250;
	Node0x5f7a250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%49:\l49:                                               \l  %50 = phi i32 [ %12, %44 ], [ %67, %49 ]\l  %51 = add i32 %45, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %8, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !14\l  %55 = add nsw i32 %54, %19\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %1, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5\l  %59 = add nsw i32 %54, %46\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !5\l  %63 = fmul contract float %58, %62\l  %64 = add nsw i32 %50, %19\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds float, float addrspace(1)* %5, i64 %65\l  store float %63, float addrspace(1)* %66, align 4, !tbaa !5\l  %67 = add i32 %50, %48\l  %68 = icmp slt i32 %67, %42\l  br i1 %68, label %49, label %69, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5f7a250:s0 -> Node0x5f7a250;
	Node0x5f7a250:s1 -> Node0x5f79c90;
	Node0x5f79c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%69:\l69:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %70 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !14\l  %71 = icmp sgt i32 %70, 1\l  br i1 %71, label %72, label %102\l|{<s0>T|<s1>F}}"];
	Node0x5f79c90:s0 -> Node0x5f7ba70;
	Node0x5f79c90:s1 -> Node0x5f7bac0;
	Node0x5f7ba70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%72:\l72:                                               \l  %73 = zext i32 %70 to i64\l  br label %74\l}"];
	Node0x5f7ba70 -> Node0x5f7bc70;
	Node0x5f7bc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%74:\l74:                                               \l  %75 = phi i64 [ %100, %97 ], [ %73, %72 ]\l  %76 = phi i64 [ %98, %97 ], [ 1, %72 ]\l  br label %77\l}"];
	Node0x5f7bc70 -> Node0x5f7bf60;
	Node0x5f7bf60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = phi i32 [ %96, %84 ], [ %12, %74 ]\l  %79 = shl nsw i32 %78, 1\l  %80 = add nuw nsw i32 %79, 1\l  %81 = sext i32 %80 to i64\l  %82 = mul nsw i64 %76, %81\l  %83 = icmp slt i64 %82, %75\l  br i1 %83, label %84, label %97\l|{<s0>T|<s1>F}}"];
	Node0x5f7bf60:s0 -> Node0x5f7c090;
	Node0x5f7bf60:s1 -> Node0x5f7bd30;
	Node0x5f7c090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = add nsw i64 %82, %23\l  %86 = getelementptr inbounds float, float addrspace(1)* %5, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !5\l  %88 = sext i32 %79 to i64\l  %89 = mul nsw i64 %76, %88\l  %90 = add nsw i64 %89, %23\l  %91 = getelementptr inbounds float, float addrspace(1)* %5, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !5\l  %93 = fadd contract float %87, %92\l  store float %93, float addrspace(1)* %91, align 4, !tbaa !5\l  %94 = load i16, i16 addrspace(4)* %22, align 4, !range !16, !invariant.load\l... !17\l  %95 = zext i16 %94 to i32\l  %96 = add i32 %78, %95\l  br label %77, !llvm.loop !19\l}"];
	Node0x5f7c090 -> Node0x5f7bf60;
	Node0x5f7bd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%97:\l97:                                               \l  %98 = shl nsw i64 %76, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %99 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !14\l  %100 = sext i32 %99 to i64\l  %101 = icmp slt i64 %98, %100\l  br i1 %101, label %74, label %102, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5f7bd30:s0 -> Node0x5f7bc70;
	Node0x5f7bd30:s1 -> Node0x5f7bac0;
	Node0x5f7bac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%102:\l102:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %15, label %103, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5f7bac0:s0 -> Node0x5f7dfd0;
	Node0x5f7bac0:s1 -> Node0x5f79500;
	Node0x5f7dfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%103:\l103:                                              \l  %104 = load float, float addrspace(1)* %24, align 4, !tbaa !5\l  %105 = add nsw i32 %38, %19\l  %106 = sext i32 %105 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %1, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !5\l  %109 = load float, float addrspace(1)* %14, align 4, !tbaa !5\l  %110 = fcmp contract ogt float %109, 0.000000e+00\l  br i1 %110, label %111, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5f7dfd0:s0 -> Node0x5f7e450;
	Node0x5f7dfd0:s1 -> Node0x5f7e4e0;
	Node0x5f7e450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%111:\l111:                                              \l  %112 = fdiv contract float %104, %109\l  %113 = tail call float @llvm.fabs.f32(float %112)\l  %114 = fcmp olt float %113, 6.250000e-01\l  br i1 %114, label %115, label %123\l|{<s0>T|<s1>F}}"];
	Node0x5f7e450:s0 -> Node0x5f7e900;
	Node0x5f7e450:s1 -> Node0x5f7e990;
	Node0x5f7e900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%115:\l115:                                              \l  %116 = fmul float %112, %112\l  %117 = tail call float @llvm.fmuladd.f32(float %116, float\l... 0xBF7758E7A0000000, float 0x3F95211920000000)\l  %118 = tail call float @llvm.fmuladd.f32(float %116, float %117, float\l... 0xBFAB8389C0000000)\l  %119 = tail call float @llvm.fmuladd.f32(float %116, float %118, float\l... 0x3FC1107040000000)\l  %120 = tail call float @llvm.fmuladd.f32(float %116, float %119, float\l... 0xBFD5555320000000)\l  %121 = fmul float %113, %120\l  %122 = tail call float @llvm.fmuladd.f32(float %116, float %121, float %113)\l  br label %140\l}"];
	Node0x5f7e900 -> Node0x5f7f490;
	Node0x5f7e990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%123:\l123:                                              \l  %124 = fmul float %113, 2.000000e+00\l  %125 = fmul float %124, 0x3FF7154760000000\l  %126 = tail call float @llvm.rint.f32(float %125)\l  %127 = fcmp ogt float %124, 0x40562E4300000000\l  %128 = fneg float %125\l  %129 = tail call float @llvm.fma.f32(float %124, float 0x3FF7154760000000,\l... float %128)\l  %130 = tail call float @llvm.fma.f32(float %124, float 0x3E54AE0BE0000000,\l... float %129)\l  %131 = fsub float %125, %126\l  %132 = fadd float %130, %131\l  %133 = tail call float @llvm.exp2.f32(float %132)\l  %134 = fptosi float %126 to i32\l  %135 = tail call float @llvm.amdgcn.ldexp.f32(float %133, i32 %134)\l  %136 = fadd float %135, 1.000000e+00\l  %137 = select i1 %127, float 0x7FF0000000000000, float %136\l  %138 = tail call float @llvm.amdgcn.rcp.f32(float %137)\l  %139 = tail call float @llvm.fmuladd.f32(float %138, float -2.000000e+00,\l... float 1.000000e+00)\l  br label %140\l}"];
	Node0x5f7e990 -> Node0x5f7f490;
	Node0x5f7f490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%140:\l140:                                              \l  %141 = phi float [ %122, %115 ], [ %139, %123 ]\l  %142 = tail call float @llvm.copysign.f32(float %141, float %112)\l  %143 = fmul contract float %25, %108\l  %144 = fmul contract float %142, %9\l  %145 = fsub contract float %143, %144\l  br label %149\l}"];
	Node0x5f7f490 -> Node0x5f81200;
	Node0x5f7e4e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%146:\l146:                                              \l  %147 = fcmp contract ogt float %104, 0.000000e+00\l  %148 = select i1 %147, float -1.000000e+00, float 1.000000e+00\l  br label %149\l}"];
	Node0x5f7e4e0 -> Node0x5f81200;
	Node0x5f81200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%149:\l149:                                              \l  %150 = phi float [ %145, %140 ], [ %148, %146 ]\l  store float %150, float addrspace(1)* %107, align 4, !tbaa !5\l  %151 = fsub contract float %108, %150\l  %152 = tail call float @llvm.fabs.f32(float %151)\l  %153 = fcmp contract ogt float %152, %7\l  br i1 %153, label %154, label %155\l|{<s0>T|<s1>F}}"];
	Node0x5f81200:s0 -> Node0x5f81820;
	Node0x5f81200:s1 -> Node0x5f79500;
	Node0x5f81820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%154:\l154:                                              \l  store i8 1, i8 addrspace(1)* %16, align 1, !tbaa !9\l  br label %155\l}"];
	Node0x5f81820 -> Node0x5f79500;
	Node0x5f79500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%155:\l155:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %156 = add nuw nsw i32 %38, 1\l  %157 = icmp eq i32 %156, %2\l  br i1 %157, label %34, label %37, !llvm.loop !21\l|{<s0>T|<s1>F}}"];
	Node0x5f79500:s0 -> Node0x5f788f0;
	Node0x5f79500:s1 -> Node0x5f788a0;
	Node0x5f79280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%158:\l158:                                              \l  %159 = load float, float addrspace(1)* %14, align 4, !tbaa !5\l  %160 = fcmp contract ult float %159, 0.000000e+00\l  br i1 %160, label %161, label %26, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x5f79280:s0 -> Node0x5f81f10;
	Node0x5f79280:s1 -> Node0x5f77430;
	Node0x5f81f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5f7fe870",label="{%161:\l161:                                              \l  ret void\l}"];
}
