digraph "CFG for '_Z16allocHamiltonianPfS_iiPd' function" {
	label="CFG for '_Z16allocHamiltonianPfS_iiPd' function";

	Node0x4fee820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = mul nsw i32 %3, %3\l  %19 = icmp slt i32 %17, %18\l  br i1 %19, label %20, label %52\l|{<s0>T|<s1>F}}"];
	Node0x4fee820:s0 -> Node0x4ff0af0;
	Node0x4fee820:s1 -> Node0x4ff0b80;
	Node0x4ff0af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%20:\l20:                                               \l  %21 = mul nsw i32 %3, %2\l  %22 = udiv i32 %15, %12\l  %23 = mul i32 %22, %12\l  %24 = icmp ugt i32 %15, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %12\l  br label %28\l}"];
	Node0x4ff0af0 -> Node0x4ff1090;
	Node0x4ff1090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%28:\l28:                                               \l  %29 = phi i32 [ %17, %20 ], [ %50, %28 ]\l  %30 = freeze i32 %29\l  %31 = freeze i32 %3\l  %32 = sdiv i32 %30, %31\l  %33 = mul i32 %32, %31\l  %34 = sub i32 %30, %33\l  %35 = add nsw i32 %34, %21\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %1, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %39 = add nsw i32 %32, %21\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %1, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %43 = fmul contract float %38, %42\l  %44 = sext i32 %29 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16,\l... !amdgpu.noclobber !6\l  %47 = fmul contract float %43, %46\l  %48 = fpext float %47 to double\l  %49 = getelementptr inbounds double, double addrspace(1)* %4, i64 %44\l  store double %48, double addrspace(1)* %49, align 8, !tbaa !20\l  %50 = add i32 %27, %29\l  %51 = icmp slt i32 %50, %18\l  br i1 %51, label %28, label %52, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4ff1090:s0 -> Node0x4ff1090;
	Node0x4ff1090:s1 -> Node0x4ff0b80;
	Node0x4ff0b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%52:\l52:                                               \l  ret void\l}"];
}
