digraph "CFG for '_Z12do_sum_mergePii' function" {
	label="CFG for '_Z12do_sum_mergePii' function";

	Node0x47cd0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %9 = mul nuw nsw i32 %8, %7\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add nuw nsw i32 %9, %10\l  %12 = icmp sgt i32 %1, 1\l  br i1 %12, label %13, label %503\l|{<s0>T|<s1>F}}"];
	Node0x47cd0f0:s0 -> Node0x47cf630;
	Node0x47cd0f0:s1 -> Node0x47cf6c0;
	Node0x47cf630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%13:\l13:                                               \l  %14 = xor i32 %11, -1\l  %15 = zext i32 %11 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 24\l  %19 = bitcast i8 addrspace(4)* %18 to i64 addrspace(4)*\l  br label %20\l}"];
	Node0x47cf630 -> Node0x47cfd30;
	Node0x47cfd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%20:\l20:                                               \l  %21 = phi i32 [ %1, %13 ], [ %501, %500 ]\l  %22 = add nuw nsw i32 %21, 1\l  %23 = lshr i32 %22, 1\l  %24 = icmp ult i32 %11, %23\l  br i1 %24, label %25, label %500\l|{<s0>T|<s1>F}}"];
	Node0x47cfd30:s0 -> Node0x47d0150;
	Node0x47cfd30:s1 -> Node0x47cfe60;
	Node0x47d0150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%25:\l25:                                               \l  %26 = add i32 %21, %14\l  %27 = icmp eq i32 %26, %11\l  br i1 %27, label %500, label %28\l|{<s0>T|<s1>F}}"];
	Node0x47d0150:s0 -> Node0x47cfe60;
	Node0x47d0150:s1 -> Node0x47d03b0;
	Node0x47d03b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%28:\l28:                                               \l  %29 = sext i32 %26 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7\l  %32 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %33 = add nsw i32 %32, %31\l  store i32 %33, i32 addrspace(1)* %16, align 4, !tbaa !7\l  %34 = load i64, i64 addrspace(4)* %19, align 8, !tbaa !11\l  %35 = inttoptr i64 %34 to i8 addrspace(1)*\l  %36 = addrspacecast i8 addrspace(1)* %35 to i8*\l  %37 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %38 = extractelement \<2 x i64\> %37, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([12 x i8], [12 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %39, label %43\l|{<s0>T|<s1>F}}"];
	Node0x47d03b0:s0 -> Node0x47d1b20;
	Node0x47d03b0:s1 -> Node0x47d2510;
	Node0x47d1b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%39:\l39:                                               \l  %40 = and i64 %38, -225\l  %41 = or i64 %40, 32\l  %42 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef %41, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %484\l}"];
	Node0x47d1b20 -> Node0x47d27f0;
	Node0x47d2510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%43:\l43:                                               \l  %44 = and i64 %38, 2\l  %45 = and i64 %38, -3\l  %46 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %45, i64 0\l  br label %47\l}"];
	Node0x47d2510 -> Node0x47d3390;
	Node0x47d3390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  %48 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([12 x i8], [12 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([12 x i8], [12 x i8] addrspace(4)*\l... @.str, i64 0, i64 11) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([12 x i8]* addrspacecast ([12 x i8] addrspace(4)* @.str to [12 x i8]*) to\l... i64)), i64 1))), %43 ], [ %481, %473 ]\l  %49 = phi i8 addrspace(4)* [ getelementptr inbounds ([12 x i8], [12 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %43 ], [ %482, %473 ]\l  %50 = phi \<2 x i64\> [ %46, %43 ], [ %480, %473 ]\l  %51 = icmp ugt i64 %48, 56\l  %52 = extractelement \<2 x i64\> %50, i64 0\l  %53 = or i64 %52, %44\l  %54 = insertelement \<2 x i64\> poison, i64 %53, i64 0\l  %55 = select i1 %51, \<2 x i64\> %50, \<2 x i64\> %54\l  %56 = tail call i64 @llvm.umin.i64(i64 %48, i64 56)\l  %57 = trunc i64 %56 to i32\l  %58 = extractelement \<2 x i64\> %55, i64 0\l  %59 = icmp ugt i32 %57, 7\l  br i1 %59, label %62, label %60\l|{<s0>T|<s1>F}}"];
	Node0x47d3390:s0 -> Node0x47d4300;
	Node0x47d3390:s1 -> Node0x47d4390;
	Node0x47d4390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%60:\l60:                                               \l  %61 = icmp eq i32 %57, 0\l  br i1 %61, label %115, label %102\l|{<s0>T|<s1>F}}"];
	Node0x47d4390:s0 -> Node0x47d4590;
	Node0x47d4390:s1 -> Node0x47d45e0;
	Node0x47d4300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%62:\l62:                                               \l  %63 = load i8, i8 addrspace(4)* %49, align 1, !tbaa !15\l  %64 = zext i8 %63 to i64\l  %65 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 1\l  %66 = load i8, i8 addrspace(4)* %65, align 1, !tbaa !15\l  %67 = zext i8 %66 to i64\l  %68 = shl nuw nsw i64 %67, 8\l  %69 = or i64 %68, %64\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 2\l  %71 = load i8, i8 addrspace(4)* %70, align 1, !tbaa !15\l  %72 = zext i8 %71 to i64\l  %73 = shl nuw nsw i64 %72, 16\l  %74 = or i64 %69, %73\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 3\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !15\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw nsw i64 %77, 24\l  %79 = or i64 %74, %78\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 4\l  %81 = load i8, i8 addrspace(4)* %80, align 1, !tbaa !15\l  %82 = zext i8 %81 to i64\l  %83 = shl nuw nsw i64 %82, 32\l  %84 = or i64 %79, %83\l  %85 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 5\l  %86 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !15\l  %87 = zext i8 %86 to i64\l  %88 = shl nuw nsw i64 %87, 40\l  %89 = or i64 %84, %88\l  %90 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 6\l  %91 = load i8, i8 addrspace(4)* %90, align 1, !tbaa !15\l  %92 = zext i8 %91 to i64\l  %93 = shl nuw nsw i64 %92, 48\l  %94 = or i64 %89, %93\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 7\l  %96 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !15\l  %97 = zext i8 %96 to i64\l  %98 = shl nuw i64 %97, 56\l  %99 = or i64 %94, %98\l  %100 = add nsw i32 %57, -8\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 8\l  br label %115\l}"];
	Node0x47d4300 -> Node0x47d4590;
	Node0x47d45e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %113, %102 ], [ 0, %60 ]\l  %104 = phi i64 [ %112, %102 ], [ 0, %60 ]\l  %105 = zext i32 %103 to i64\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 %105\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !15\l  %108 = zext i8 %107 to i64\l  %109 = shl i32 %103, 3\l  %110 = zext i32 %109 to i64\l  %111 = shl nuw i64 %108, %110\l  %112 = or i64 %111, %104\l  %113 = add nuw nsw i32 %103, 1\l  %114 = icmp eq i32 %113, %57\l  br i1 %114, label %115, label %102, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x47d45e0:s0 -> Node0x47d4590;
	Node0x47d45e0:s1 -> Node0x47d45e0;
	Node0x47d4590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%115:\l115:                                              \l  %116 = phi i8 addrspace(4)* [ %101, %62 ], [ %49, %60 ], [ %49, %102 ]\l  %117 = phi i32 [ %100, %62 ], [ 0, %60 ], [ 0, %102 ]\l  %118 = phi i64 [ %99, %62 ], [ 0, %60 ], [ %112, %102 ]\l  %119 = icmp ugt i32 %117, 7\l  br i1 %119, label %122, label %120\l|{<s0>T|<s1>F}}"];
	Node0x47d4590:s0 -> Node0x47d7280;
	Node0x47d4590:s1 -> Node0x47d72d0;
	Node0x47d72d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%120:\l120:                                              \l  %121 = icmp eq i32 %117, 0\l  br i1 %121, label %175, label %162\l|{<s0>T|<s1>F}}"];
	Node0x47d72d0:s0 -> Node0x47d74a0;
	Node0x47d72d0:s1 -> Node0x47d74f0;
	Node0x47d7280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%122:\l122:                                              \l  %123 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !15\l  %124 = zext i8 %123 to i64\l  %125 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 1\l  %126 = load i8, i8 addrspace(4)* %125, align 1, !tbaa !15\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 8\l  %129 = or i64 %128, %124\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 2\l  %131 = load i8, i8 addrspace(4)* %130, align 1, !tbaa !15\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 16\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 3\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !15\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 24\l  %139 = or i64 %134, %138\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 4\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !15\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw nsw i64 %142, 32\l  %144 = or i64 %139, %143\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 5\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !15\l  %147 = zext i8 %146 to i64\l  %148 = shl nuw nsw i64 %147, 40\l  %149 = or i64 %144, %148\l  %150 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 6\l  %151 = load i8, i8 addrspace(4)* %150, align 1, !tbaa !15\l  %152 = zext i8 %151 to i64\l  %153 = shl nuw nsw i64 %152, 48\l  %154 = or i64 %149, %153\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 7\l  %156 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !15\l  %157 = zext i8 %156 to i64\l  %158 = shl nuw i64 %157, 56\l  %159 = or i64 %154, %158\l  %160 = add nsw i32 %117, -8\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 8\l  br label %175\l}"];
	Node0x47d7280 -> Node0x47d74a0;
	Node0x47d74f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%162:\l162:                                              \l  %163 = phi i32 [ %173, %162 ], [ 0, %120 ]\l  %164 = phi i64 [ %172, %162 ], [ 0, %120 ]\l  %165 = zext i32 %163 to i64\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %116, i64 %165\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !15\l  %168 = zext i8 %167 to i64\l  %169 = shl i32 %163, 3\l  %170 = zext i32 %169 to i64\l  %171 = shl nuw i64 %168, %170\l  %172 = or i64 %171, %164\l  %173 = add nuw nsw i32 %163, 1\l  %174 = icmp eq i32 %173, %117\l  br i1 %174, label %175, label %162\l|{<s0>T|<s1>F}}"];
	Node0x47d74f0:s0 -> Node0x47d74a0;
	Node0x47d74f0:s1 -> Node0x47d74f0;
	Node0x47d74a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%175:\l175:                                              \l  %176 = phi i8 addrspace(4)* [ %161, %122 ], [ %116, %120 ], [ %116, %162 ]\l  %177 = phi i32 [ %160, %122 ], [ 0, %120 ], [ 0, %162 ]\l  %178 = phi i64 [ %159, %122 ], [ 0, %120 ], [ %172, %162 ]\l  %179 = icmp ugt i32 %177, 7\l  br i1 %179, label %182, label %180\l|{<s0>T|<s1>F}}"];
	Node0x47d74a0:s0 -> Node0x47d9990;
	Node0x47d74a0:s1 -> Node0x47d99e0;
	Node0x47d99e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%180:\l180:                                              \l  %181 = icmp eq i32 %177, 0\l  br i1 %181, label %235, label %222\l|{<s0>T|<s1>F}}"];
	Node0x47d99e0:s0 -> Node0x47d9b70;
	Node0x47d99e0:s1 -> Node0x47d9bc0;
	Node0x47d9990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%182:\l182:                                              \l  %183 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !15\l  %184 = zext i8 %183 to i64\l  %185 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 1\l  %186 = load i8, i8 addrspace(4)* %185, align 1, !tbaa !15\l  %187 = zext i8 %186 to i64\l  %188 = shl nuw nsw i64 %187, 8\l  %189 = or i64 %188, %184\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 2\l  %191 = load i8, i8 addrspace(4)* %190, align 1, !tbaa !15\l  %192 = zext i8 %191 to i64\l  %193 = shl nuw nsw i64 %192, 16\l  %194 = or i64 %189, %193\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 3\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !15\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 24\l  %199 = or i64 %194, %198\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 4\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !15\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw nsw i64 %202, 32\l  %204 = or i64 %199, %203\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 5\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !15\l  %207 = zext i8 %206 to i64\l  %208 = shl nuw nsw i64 %207, 40\l  %209 = or i64 %204, %208\l  %210 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 6\l  %211 = load i8, i8 addrspace(4)* %210, align 1, !tbaa !15\l  %212 = zext i8 %211 to i64\l  %213 = shl nuw nsw i64 %212, 48\l  %214 = or i64 %209, %213\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 7\l  %216 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !15\l  %217 = zext i8 %216 to i64\l  %218 = shl nuw i64 %217, 56\l  %219 = or i64 %214, %218\l  %220 = add nsw i32 %177, -8\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 8\l  br label %235\l}"];
	Node0x47d9990 -> Node0x47d9b70;
	Node0x47d9bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%222:\l222:                                              \l  %223 = phi i32 [ %233, %222 ], [ 0, %180 ]\l  %224 = phi i64 [ %232, %222 ], [ 0, %180 ]\l  %225 = zext i32 %223 to i64\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %176, i64 %225\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !15\l  %228 = zext i8 %227 to i64\l  %229 = shl i32 %223, 3\l  %230 = zext i32 %229 to i64\l  %231 = shl nuw i64 %228, %230\l  %232 = or i64 %231, %224\l  %233 = add nuw nsw i32 %223, 1\l  %234 = icmp eq i32 %233, %177\l  br i1 %234, label %235, label %222\l|{<s0>T|<s1>F}}"];
	Node0x47d9bc0:s0 -> Node0x47d9b70;
	Node0x47d9bc0:s1 -> Node0x47d9bc0;
	Node0x47d9b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%235:\l235:                                              \l  %236 = phi i8 addrspace(4)* [ %221, %182 ], [ %176, %180 ], [ %176, %222 ]\l  %237 = phi i32 [ %220, %182 ], [ 0, %180 ], [ 0, %222 ]\l  %238 = phi i64 [ %219, %182 ], [ 0, %180 ], [ %232, %222 ]\l  %239 = icmp ugt i32 %237, 7\l  br i1 %239, label %242, label %240\l|{<s0>T|<s1>F}}"];
	Node0x47d9b70:s0 -> Node0x47dbc10;
	Node0x47d9b70:s1 -> Node0x47dbc60;
	Node0x47dbc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%240:\l240:                                              \l  %241 = icmp eq i32 %237, 0\l  br i1 %241, label %295, label %282\l|{<s0>T|<s1>F}}"];
	Node0x47dbc60:s0 -> Node0x47dbdf0;
	Node0x47dbc60:s1 -> Node0x47dbe40;
	Node0x47dbc10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%242:\l242:                                              \l  %243 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !15\l  %244 = zext i8 %243 to i64\l  %245 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 1\l  %246 = load i8, i8 addrspace(4)* %245, align 1, !tbaa !15\l  %247 = zext i8 %246 to i64\l  %248 = shl nuw nsw i64 %247, 8\l  %249 = or i64 %248, %244\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 2\l  %251 = load i8, i8 addrspace(4)* %250, align 1, !tbaa !15\l  %252 = zext i8 %251 to i64\l  %253 = shl nuw nsw i64 %252, 16\l  %254 = or i64 %249, %253\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 3\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !15\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 24\l  %259 = or i64 %254, %258\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 4\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !15\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw nsw i64 %262, 32\l  %264 = or i64 %259, %263\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 5\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !15\l  %267 = zext i8 %266 to i64\l  %268 = shl nuw nsw i64 %267, 40\l  %269 = or i64 %264, %268\l  %270 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 6\l  %271 = load i8, i8 addrspace(4)* %270, align 1, !tbaa !15\l  %272 = zext i8 %271 to i64\l  %273 = shl nuw nsw i64 %272, 48\l  %274 = or i64 %269, %273\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 7\l  %276 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !15\l  %277 = zext i8 %276 to i64\l  %278 = shl nuw i64 %277, 56\l  %279 = or i64 %274, %278\l  %280 = add nsw i32 %237, -8\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 8\l  br label %295\l}"];
	Node0x47dbc10 -> Node0x47dbdf0;
	Node0x47dbe40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%282:\l282:                                              \l  %283 = phi i32 [ %293, %282 ], [ 0, %240 ]\l  %284 = phi i64 [ %292, %282 ], [ 0, %240 ]\l  %285 = zext i32 %283 to i64\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %236, i64 %285\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !15\l  %288 = zext i8 %287 to i64\l  %289 = shl i32 %283, 3\l  %290 = zext i32 %289 to i64\l  %291 = shl nuw i64 %288, %290\l  %292 = or i64 %291, %284\l  %293 = add nuw nsw i32 %283, 1\l  %294 = icmp eq i32 %293, %237\l  br i1 %294, label %295, label %282\l|{<s0>T|<s1>F}}"];
	Node0x47dbe40:s0 -> Node0x47dbdf0;
	Node0x47dbe40:s1 -> Node0x47dbe40;
	Node0x47dbdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%295:\l295:                                              \l  %296 = phi i8 addrspace(4)* [ %281, %242 ], [ %236, %240 ], [ %236, %282 ]\l  %297 = phi i32 [ %280, %242 ], [ 0, %240 ], [ 0, %282 ]\l  %298 = phi i64 [ %279, %242 ], [ 0, %240 ], [ %292, %282 ]\l  %299 = icmp ugt i32 %297, 7\l  br i1 %299, label %302, label %300\l|{<s0>T|<s1>F}}"];
	Node0x47dbdf0:s0 -> Node0x47de690;
	Node0x47dbdf0:s1 -> Node0x47de6e0;
	Node0x47de6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%300:\l300:                                              \l  %301 = icmp eq i32 %297, 0\l  br i1 %301, label %355, label %342\l|{<s0>T|<s1>F}}"];
	Node0x47de6e0:s0 -> Node0x47de870;
	Node0x47de6e0:s1 -> Node0x47de8c0;
	Node0x47de690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%302:\l302:                                              \l  %303 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !15\l  %304 = zext i8 %303 to i64\l  %305 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 1\l  %306 = load i8, i8 addrspace(4)* %305, align 1, !tbaa !15\l  %307 = zext i8 %306 to i64\l  %308 = shl nuw nsw i64 %307, 8\l  %309 = or i64 %308, %304\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 2\l  %311 = load i8, i8 addrspace(4)* %310, align 1, !tbaa !15\l  %312 = zext i8 %311 to i64\l  %313 = shl nuw nsw i64 %312, 16\l  %314 = or i64 %309, %313\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 3\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !15\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 24\l  %319 = or i64 %314, %318\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 4\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !15\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw nsw i64 %322, 32\l  %324 = or i64 %319, %323\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 5\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !15\l  %327 = zext i8 %326 to i64\l  %328 = shl nuw nsw i64 %327, 40\l  %329 = or i64 %324, %328\l  %330 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 6\l  %331 = load i8, i8 addrspace(4)* %330, align 1, !tbaa !15\l  %332 = zext i8 %331 to i64\l  %333 = shl nuw nsw i64 %332, 48\l  %334 = or i64 %329, %333\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 7\l  %336 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !15\l  %337 = zext i8 %336 to i64\l  %338 = shl nuw i64 %337, 56\l  %339 = or i64 %334, %338\l  %340 = add nsw i32 %297, -8\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 8\l  br label %355\l}"];
	Node0x47de690 -> Node0x47de870;
	Node0x47de8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%342:\l342:                                              \l  %343 = phi i32 [ %353, %342 ], [ 0, %300 ]\l  %344 = phi i64 [ %352, %342 ], [ 0, %300 ]\l  %345 = zext i32 %343 to i64\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %296, i64 %345\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !15\l  %348 = zext i8 %347 to i64\l  %349 = shl i32 %343, 3\l  %350 = zext i32 %349 to i64\l  %351 = shl nuw i64 %348, %350\l  %352 = or i64 %351, %344\l  %353 = add nuw nsw i32 %343, 1\l  %354 = icmp eq i32 %353, %297\l  br i1 %354, label %355, label %342\l|{<s0>T|<s1>F}}"];
	Node0x47de8c0:s0 -> Node0x47de870;
	Node0x47de8c0:s1 -> Node0x47de8c0;
	Node0x47de870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%355:\l355:                                              \l  %356 = phi i8 addrspace(4)* [ %341, %302 ], [ %296, %300 ], [ %296, %342 ]\l  %357 = phi i32 [ %340, %302 ], [ 0, %300 ], [ 0, %342 ]\l  %358 = phi i64 [ %339, %302 ], [ 0, %300 ], [ %352, %342 ]\l  %359 = icmp ugt i32 %357, 7\l  br i1 %359, label %362, label %360\l|{<s0>T|<s1>F}}"];
	Node0x47de870:s0 -> Node0x47e12e0;
	Node0x47de870:s1 -> Node0x47e1330;
	Node0x47e1330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%360:\l360:                                              \l  %361 = icmp eq i32 %357, 0\l  br i1 %361, label %415, label %402\l|{<s0>T|<s1>F}}"];
	Node0x47e1330:s0 -> Node0x47e14c0;
	Node0x47e1330:s1 -> Node0x47e1510;
	Node0x47e12e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%362:\l362:                                              \l  %363 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !15\l  %364 = zext i8 %363 to i64\l  %365 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 1\l  %366 = load i8, i8 addrspace(4)* %365, align 1, !tbaa !15\l  %367 = zext i8 %366 to i64\l  %368 = shl nuw nsw i64 %367, 8\l  %369 = or i64 %368, %364\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 2\l  %371 = load i8, i8 addrspace(4)* %370, align 1, !tbaa !15\l  %372 = zext i8 %371 to i64\l  %373 = shl nuw nsw i64 %372, 16\l  %374 = or i64 %369, %373\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 3\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !15\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 24\l  %379 = or i64 %374, %378\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 4\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !15\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw nsw i64 %382, 32\l  %384 = or i64 %379, %383\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 5\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !15\l  %387 = zext i8 %386 to i64\l  %388 = shl nuw nsw i64 %387, 40\l  %389 = or i64 %384, %388\l  %390 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 6\l  %391 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !15\l  %392 = zext i8 %391 to i64\l  %393 = shl nuw nsw i64 %392, 48\l  %394 = or i64 %389, %393\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 7\l  %396 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !15\l  %397 = zext i8 %396 to i64\l  %398 = shl nuw i64 %397, 56\l  %399 = or i64 %394, %398\l  %400 = add nsw i32 %357, -8\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 8\l  br label %415\l}"];
	Node0x47e12e0 -> Node0x47e14c0;
	Node0x47e1510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%402:\l402:                                              \l  %403 = phi i32 [ %413, %402 ], [ 0, %360 ]\l  %404 = phi i64 [ %412, %402 ], [ 0, %360 ]\l  %405 = zext i32 %403 to i64\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %356, i64 %405\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !15\l  %408 = zext i8 %407 to i64\l  %409 = shl i32 %403, 3\l  %410 = zext i32 %409 to i64\l  %411 = shl nuw i64 %408, %410\l  %412 = or i64 %411, %404\l  %413 = add nuw nsw i32 %403, 1\l  %414 = icmp eq i32 %413, %357\l  br i1 %414, label %415, label %402\l|{<s0>T|<s1>F}}"];
	Node0x47e1510:s0 -> Node0x47e14c0;
	Node0x47e1510:s1 -> Node0x47e1510;
	Node0x47e14c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%415:\l415:                                              \l  %416 = phi i8 addrspace(4)* [ %401, %362 ], [ %356, %360 ], [ %356, %402 ]\l  %417 = phi i32 [ %400, %362 ], [ 0, %360 ], [ 0, %402 ]\l  %418 = phi i64 [ %399, %362 ], [ 0, %360 ], [ %412, %402 ]\l  %419 = icmp ugt i32 %417, 7\l  br i1 %419, label %422, label %420\l|{<s0>T|<s1>F}}"];
	Node0x47e14c0:s0 -> Node0x47e3b00;
	Node0x47e14c0:s1 -> Node0x47e3b50;
	Node0x47e3b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%420:\l420:                                              \l  %421 = icmp eq i32 %417, 0\l  br i1 %421, label %473, label %460\l|{<s0>T|<s1>F}}"];
	Node0x47e3b50:s0 -> Node0x47d3830;
	Node0x47e3b50:s1 -> Node0x47e3ce0;
	Node0x47e3b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%422:\l422:                                              \l  %423 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !15\l  %424 = zext i8 %423 to i64\l  %425 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 1\l  %426 = load i8, i8 addrspace(4)* %425, align 1, !tbaa !15\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw nsw i64 %427, 8\l  %429 = or i64 %428, %424\l  %430 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 2\l  %431 = load i8, i8 addrspace(4)* %430, align 1, !tbaa !15\l  %432 = zext i8 %431 to i64\l  %433 = shl nuw nsw i64 %432, 16\l  %434 = or i64 %429, %433\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 3\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !15\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 24\l  %439 = or i64 %434, %438\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 4\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !15\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw nsw i64 %442, 32\l  %444 = or i64 %439, %443\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 5\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !15\l  %447 = zext i8 %446 to i64\l  %448 = shl nuw nsw i64 %447, 40\l  %449 = or i64 %444, %448\l  %450 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 6\l  %451 = load i8, i8 addrspace(4)* %450, align 1, !tbaa !15\l  %452 = zext i8 %451 to i64\l  %453 = shl nuw nsw i64 %452, 48\l  %454 = or i64 %449, %453\l  %455 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 7\l  %456 = load i8, i8 addrspace(4)* %455, align 1, !tbaa !15\l  %457 = zext i8 %456 to i64\l  %458 = shl nuw i64 %457, 56\l  %459 = or i64 %454, %458\l  br label %473\l}"];
	Node0x47e3b00 -> Node0x47d3830;
	Node0x47e3ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%460:\l460:                                              \l  %461 = phi i32 [ %471, %460 ], [ 0, %420 ]\l  %462 = phi i64 [ %470, %460 ], [ 0, %420 ]\l  %463 = zext i32 %461 to i64\l  %464 = getelementptr inbounds i8, i8 addrspace(4)* %416, i64 %463\l  %465 = load i8, i8 addrspace(4)* %464, align 1, !tbaa !15\l  %466 = zext i8 %465 to i64\l  %467 = shl i32 %461, 3\l  %468 = zext i32 %467 to i64\l  %469 = shl nuw i64 %466, %468\l  %470 = or i64 %469, %462\l  %471 = add nuw nsw i32 %461, 1\l  %472 = icmp eq i32 %471, %417\l  br i1 %472, label %473, label %460\l|{<s0>T|<s1>F}}"];
	Node0x47e3ce0:s0 -> Node0x47d3830;
	Node0x47e3ce0:s1 -> Node0x47e3ce0;
	Node0x47d3830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%473:\l473:                                              \l  %474 = phi i64 [ %459, %422 ], [ 0, %420 ], [ %470, %460 ]\l  %475 = shl nuw nsw i64 %56, 2\l  %476 = add nuw nsw i64 %475, 28\l  %477 = and i64 %476, 480\l  %478 = and i64 %58, -225\l  %479 = or i64 %478, %477\l  %480 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef %479, i64 noundef %118, i64 noundef %178, i64 noundef %238, i64\l... noundef %298, i64 noundef %358, i64 noundef %418, i64 noundef %474) #11\l  %481 = sub i64 %48, %56\l  %482 = getelementptr inbounds i8, i8 addrspace(4)* %49, i64 %56\l  %483 = icmp eq i64 %481, 0\l  br i1 %483, label %484, label %47\l|{<s0>T|<s1>F}}"];
	Node0x47d3830:s0 -> Node0x47d27f0;
	Node0x47d3830:s1 -> Node0x47d3390;
	Node0x47d27f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%484:\l484:                                              \l  %485 = phi \<2 x i64\> [ %42, %39 ], [ %480, %473 ]\l  %486 = extractelement \<2 x i64\> %485, i64 0\l  %487 = zext i32 %21 to i64\l  %488 = and i64 %486, -225\l  %489 = or i64 %488, 32\l  %490 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef %489, i64 noundef %487, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %491 = extractelement \<2 x i64\> %490, i64 0\l  %492 = and i64 %491, -225\l  %493 = or i64 %492, 32\l  %494 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef %493, i64 noundef %15, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  %495 = extractelement \<2 x i64\> %494, i64 0\l  %496 = zext i32 %33 to i64\l  %497 = and i64 %495, -227\l  %498 = or i64 %497, 34\l  %499 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %36,\l... i64 noundef %498, i64 noundef %496, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #11\l  br label %500\l}"];
	Node0x47d27f0 -> Node0x47cfe60;
	Node0x47cfe60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%500:\l500:                                              \l  %501 = sdiv i32 %21, 2\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %502 = icmp sgt i32 %21, 3\l  br i1 %502, label %20, label %503, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x47cfe60:s0 -> Node0x47cfd30;
	Node0x47cfe60:s1 -> Node0x47cf6c0;
	Node0x47cf6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%503:\l503:                                              \l  ret void\l}"];
}
