digraph "CFG for '_Z10merge_sortPii' function" {
	label="CFG for '_Z10merge_sortPii' function";

	Node0x582c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%2:\l  %3 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %4 = getelementptr i8, i8 addrspace(4)* %3, i64 4\l  %5 = bitcast i8 addrspace(4)* %4 to i16 addrspace(4)*\l  %6 = load i16, i16 addrspace(4)* %5, align 4, !range !4, !invariant.load !5\l  %7 = zext i16 %6 to i32\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %9 = mul nuw nsw i32 %8, %7\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %11 = add nuw nsw i32 %9, %10\l  %12 = icmp slt i32 %11, %1\l  br i1 %12, label %13, label %18\l|{<s0>T|<s1>F}}"];
	Node0x582c820:s0 -> Node0x582ed30;
	Node0x582c820:s1 -> Node0x582edc0;
	Node0x582ed30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%13:\l13:                                               \l  %14 = zext i32 %11 to i64\l  %15 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %14\l  %16 = load i32, i32 addrspace(1)* %15, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %17 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %11\l  store i32 %16, i32 addrspace(3)* %17, align 4, !tbaa !7\l  br label %18\l}"];
	Node0x582ed30 -> Node0x582edc0;
	Node0x582edc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%18:\l18:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = shl nsw i32 %1, 1\l  %20 = icmp sgt i32 %1, 1\l  br i1 %20, label %32, label %24\l|{<s0>T|<s1>F}}"];
	Node0x582edc0:s0 -> Node0x58304c0;
	Node0x582edc0:s1 -> Node0x5830510;
	Node0x5830650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%21:\l21:                                               \l  %22 = and i32 %90, 1\l  %23 = xor i32 %22, 1\l  br label %24\l}"];
	Node0x5830650 -> Node0x5830510;
	Node0x5830510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%24:\l24:                                               \l  %25 = phi i32 [ 0, %18 ], [ %23, %21 ]\l  %26 = mul nuw nsw i32 %25, %1\l  %27 = add nsw i32 %26, %11\l  %28 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %27\l  %29 = load i32, i32 addrspace(3)* %28, align 4, !tbaa !7\l  %30 = zext i32 %11 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  store i32 %29, i32 addrspace(1)* %31, align 4, !tbaa !7\l  ret void\l}"];
	Node0x58304c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%32:\l32:                                               \l  %33 = phi i32 [ %90, %88 ], [ 1, %18 ]\l  %34 = phi i32 [ %89, %88 ], [ 2, %18 ]\l  %35 = add i32 %34, -1\l  %36 = and i32 %35, %11\l  %37 = icmp eq i32 %36, 0\l  br i1 %37, label %38, label %88\l|{<s0>T|<s1>F}}"];
	Node0x58304c0:s0 -> Node0x5831290;
	Node0x58304c0:s1 -> Node0x582f840;
	Node0x5831290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%38:\l38:                                               \l  %39 = and i32 %33, 1\l  %40 = xor i32 %39, 1\l  %41 = mul nuw nsw i32 %40, %1\l  %42 = add i32 %41, %11\l  %43 = ashr exact i32 %34, 1\l  %44 = add i32 %42, %43\l  %45 = add i32 %42, %34\l  %46 = sub nuw nsw i32 2, %39\l  %47 = mul nsw i32 %46, %1\l  %48 = icmp eq i32 %39, 0\l  %49 = select i1 %48, i32 0, i32 %1\l  %50 = add nsw i32 %49, %11\l  br label %51\l}"];
	Node0x5831290 -> Node0x5831ab0;
	Node0x5831ab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %42, %38 ], [ %85, %84 ]\l  %53 = phi i32 [ %44, %38 ], [ %86, %84 ]\l  %54 = phi i32 [ %50, %38 ], [ %87, %84 ]\l  %55 = icmp slt i32 %52, %44\l  %56 = icmp slt i32 %52, %47\l  %57 = select i1 %55, i1 %56, i1 false\l  %58 = icmp slt i32 %53, %45\l  %59 = icmp slt i32 %53, %47\l  %60 = select i1 %58, i1 %59, i1 false\l  br i1 %57, label %67, label %61\l|{<s0>T|<s1>F}}"];
	Node0x5831ab0:s0 -> Node0x58322f0;
	Node0x5831ab0:s1 -> Node0x5832380;
	Node0x5832380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%61:\l61:                                               \l  br i1 %60, label %62, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5832380:s0 -> Node0x58324c0;
	Node0x5832380:s1 -> Node0x582f840;
	Node0x58324c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %53\l  %64 = load i32, i32 addrspace(3)* %63, align 4, !tbaa !7\l  %65 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %54\l  store i32 %64, i32 addrspace(3)* %65, align 4, !tbaa !7\l  %66 = add nsw i32 %53, 1\l  br label %84\l}"];
	Node0x58324c0 -> Node0x5831ba0;
	Node0x58322f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%67:\l67:                                               \l  br i1 %60, label %73, label %68\l|{<s0>T|<s1>F}}"];
	Node0x58322f0:s0 -> Node0x5832ba0;
	Node0x58322f0:s1 -> Node0x5832bf0;
	Node0x5832bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %52\l  %70 = load i32, i32 addrspace(3)* %69, align 4, !tbaa !7\l  %71 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %54\l  store i32 %70, i32 addrspace(3)* %71, align 4, !tbaa !7\l  %72 = add nsw i32 %52, 1\l  br label %84\l}"];
	Node0x5832bf0 -> Node0x5831ba0;
	Node0x5832ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%73:\l73:                                               \l  %74 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %53\l  %75 = load i32, i32 addrspace(3)* %74, align 4, !tbaa !7\l  %76 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %52\l  %77 = load i32, i32 addrspace(3)* %76, align 4, !tbaa !7\l  %78 = icmp sgt i32 %75, %77\l  %79 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shared, i32\l... 0, i32 %54\l  br i1 %78, label %80, label %82\l|{<s0>T|<s1>F}}"];
	Node0x5832ba0:s0 -> Node0x5833420;
	Node0x5832ba0:s1 -> Node0x5833470;
	Node0x5833420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%80:\l80:                                               \l  store i32 %77, i32 addrspace(3)* %79, align 4, !tbaa !7\l  %81 = add nsw i32 %52, 1\l  br label %84\l}"];
	Node0x5833420 -> Node0x5831ba0;
	Node0x5833470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%82:\l82:                                               \l  store i32 %75, i32 addrspace(3)* %79, align 4, !tbaa !7\l  %83 = add nsw i32 %53, 1\l  br label %84\l}"];
	Node0x5833470 -> Node0x5831ba0;
	Node0x5831ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  %85 = phi i32 [ %81, %80 ], [ %52, %82 ], [ %72, %68 ], [ %52, %62 ]\l  %86 = phi i32 [ %53, %80 ], [ %83, %82 ], [ %53, %68 ], [ %66, %62 ]\l  %87 = add nsw i32 %54, 1\l  br label %51, !llvm.loop !11\l}"];
	Node0x5831ba0 -> Node0x5831ab0;
	Node0x582f840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%88:\l88:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %89 = shl i32 %34, 1\l  %90 = add nuw nsw i32 %33, 1\l  %91 = icmp slt i32 %89, %19\l  br i1 %91, label %32, label %21, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x582f840:s0 -> Node0x58304c0;
	Node0x582f840:s1 -> Node0x5830650;
}
