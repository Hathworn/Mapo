digraph "CFG for '_Z11saxpy_shmemPfS_fPl' function" {
	label="CFG for '_Z11saxpy_shmemPfS_fPl' function";

	Node0x63b4b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = shl i32 %6, 7\l  %8 = add i32 %7, %5\l  %9 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ11saxpy_shmemPfS_fPlE8sdata_x0, i32 0, i32 %5\l  %10 = addrspacecast float addrspace(3)* %9 to float*\l  %11 = getelementptr inbounds [128 x float], [128 x float] addrspace(3)*\l... @_ZZ11saxpy_shmemPfS_fPlE8sdata_y0, i32 0, i32 %5\l  %12 = addrspacecast float addrspace(3)* %11 to float*\l  br label %14\l}"];
	Node0x63b4b40 -> Node0x63b4b90;
	Node0x63b6630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  ret void\l}"];
	Node0x63b4b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = phi i32 [ 0, %4 ], [ %63, %14 ]\l  %16 = mul nuw nsw i32 %15, 1792\l  %17 = add i32 %8, %16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %18 = zext i32 %17 to i64\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !5\l  store volatile float %20, float* %10, align 4, !tbaa !5\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %18\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !5\l  store volatile float %22, float* %12, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %23 = load volatile float, float* %10, align 4, !tbaa !5\l  %24 = fmul contract float %23, %2\l  %25 = load volatile float, float* %12, align 4, !tbaa !5\l  %26 = fadd contract float %24, %25\l  store float %26, float addrspace(1)* %21, align 4, !tbaa !5\l  %27 = mul nuw i32 %15, 1792\l  %28 = add nuw i32 %27, 1792\l  %29 = add i32 %8, %28\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !5\l  store volatile float %32, float* %10, align 4, !tbaa !5\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !5\l  store volatile float %34, float* %12, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = load volatile float, float* %10, align 4, !tbaa !5\l  %36 = fmul contract float %35, %2\l  %37 = load volatile float, float* %12, align 4, !tbaa !5\l  %38 = fadd contract float %36, %37\l  store float %38, float addrspace(1)* %33, align 4, !tbaa !5\l  %39 = mul nuw i32 %15, 1792\l  %40 = add nuw i32 %39, 3584\l  %41 = add i32 %8, %40\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = zext i32 %41 to i64\l  %43 = getelementptr inbounds float, float addrspace(1)* %1, i64 %42\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !5\l  store volatile float %44, float* %10, align 4, !tbaa !5\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %42\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5\l  store volatile float %46, float* %12, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = load volatile float, float* %10, align 4, !tbaa !5\l  %48 = fmul contract float %47, %2\l  %49 = load volatile float, float* %12, align 4, !tbaa !5\l  %50 = fadd contract float %48, %49\l  store float %50, float addrspace(1)* %45, align 4, !tbaa !5\l  %51 = mul nuw i32 %15, 1792\l  %52 = add nuw i32 %51, 5376\l  %53 = add i32 %8, %52\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5\l  store volatile float %56, float* %10, align 4, !tbaa !5\l  %57 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !5\l  store volatile float %58, float* %12, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %59 = load volatile float, float* %10, align 4, !tbaa !5\l  %60 = fmul contract float %59, %2\l  %61 = load volatile float, float* %12, align 4, !tbaa !5\l  %62 = fadd contract float %60, %61\l  store float %62, float addrspace(1)* %57, align 4, !tbaa !5\l  %63 = add nuw nsw i32 %15, 4\l  %64 = icmp eq i32 %63, 2048\l  br i1 %64, label %13, label %14, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x63b4b90:s0 -> Node0x63b6630;
	Node0x63b4b90:s1 -> Node0x63b4b90;
}
