digraph "CFG for '_Z14saxpy_baselinePfS_fPl' function" {
	label="CFG for '_Z14saxpy_baselinePfS_fPl' function";

	Node0x58cde10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = mul i32 %5, 768\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = add i32 %6, %7\l  br label %10\l}"];
	Node0x58cde10 -> Node0x58cde60;
	Node0x58cf600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l9:                                                \l  ret void\l}"];
	Node0x58cde60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  %11 = phi i32 [ 0, %4 ], [ %91, %10 ]\l  %12 = mul nuw nsw i32 %11, 10752\l  %13 = add i32 %8, %12\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %16 = load float, float addrspace(1)* %15, align 4, !tbaa !5\l  %17 = fmul contract float %16, %2\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14\l  %19 = load float, float addrspace(1)* %18, align 4, !tbaa !5\l  %20 = fadd contract float %17, %19\l  store float %20, float addrspace(1)* %18, align 4, !tbaa !5\l  %21 = mul nuw i32 %11, 10752\l  %22 = add nuw i32 %21, 10752\l  %23 = add i32 %8, %22\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds float, float addrspace(1)* %1, i64 %24\l  %26 = load float, float addrspace(1)* %25, align 4, !tbaa !5\l  %27 = fmul contract float %26, %2\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %24\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !5\l  %30 = fadd contract float %27, %29\l  store float %30, float addrspace(1)* %28, align 4, !tbaa !5\l  %31 = mul nuw i32 %11, 10752\l  %32 = add nuw i32 %31, 21504\l  %33 = add i32 %8, %32\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5\l  %37 = fmul contract float %36, %2\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !5\l  %40 = fadd contract float %37, %39\l  store float %40, float addrspace(1)* %38, align 4, !tbaa !5\l  %41 = mul nuw i32 %11, 10752\l  %42 = add nuw i32 %41, 32256\l  %43 = add i32 %8, %42\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5\l  %47 = fmul contract float %46, %2\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5\l  %50 = fadd contract float %47, %49\l  store float %50, float addrspace(1)* %48, align 4, !tbaa !5\l  %51 = mul nuw i32 %11, 10752\l  %52 = add nuw i32 %51, 43008\l  %53 = add i32 %8, %52\l  %54 = zext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !5\l  %57 = fmul contract float %56, %2\l  %58 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !5\l  %60 = fadd contract float %57, %59\l  store float %60, float addrspace(1)* %58, align 4, !tbaa !5\l  %61 = mul nuw i32 %11, 10752\l  %62 = add nuw i32 %61, 53760\l  %63 = add i32 %8, %62\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !5\l  %67 = fmul contract float %66, %2\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %64\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !5\l  %70 = fadd contract float %67, %69\l  store float %70, float addrspace(1)* %68, align 4, !tbaa !5\l  %71 = mul nuw i32 %11, 10752\l  %72 = add nuw i32 %71, 64512\l  %73 = add i32 %8, %72\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !5\l  %77 = fmul contract float %76, %2\l  %78 = getelementptr inbounds float, float addrspace(1)* %0, i64 %74\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !5\l  %80 = fadd contract float %77, %79\l  store float %80, float addrspace(1)* %78, align 4, !tbaa !5\l  %81 = mul nuw i32 %11, 10752\l  %82 = add nuw i32 %81, 75264\l  %83 = add i32 %8, %82\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !5\l  %87 = fmul contract float %86, %2\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !5\l  %90 = fadd contract float %87, %89\l  store float %90, float addrspace(1)* %88, align 4, !tbaa !5\l  %91 = add nuw nsw i32 %11, 8\l  %92 = icmp eq i32 %91, 2048\l  br i1 %92, label %9, label %10, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x58cde60:s0 -> Node0x58cf600;
	Node0x58cde60:s1 -> Node0x58cde60;
}
