digraph "CFG for '_ZL6calc_eiPddPiS_S_' function" {
	label="CFG for '_ZL6calc_eiPddPiS_S_' function";

	Node0x5c7b350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %0\l  br i1 %16, label %17, label %184\l|{<s0>T|<s1>F}}"];
	Node0x5c7b350:s0 -> Node0x5c7bc30;
	Node0x5c7b350:s1 -> Node0x5c7d320;
	Node0x5c7bc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = icmp sgt i32 %0, 0\l  br i1 %18, label %19, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5c7bc30:s0 -> Node0x5c7d4f0;
	Node0x5c7bc30:s1 -> Node0x5c7d540;
	Node0x5c7d4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %0, 7\l  %21 = icmp ult i32 %0, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5c7d4f0:s0 -> Node0x5c7d800;
	Node0x5c7d4f0:s1 -> Node0x5c7d850;
	Node0x5c7d850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %0, -8\l  br label %58\l}"];
	Node0x5c7d850 -> Node0x5c7da50;
	Node0x5c7d800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi double [ undef, %19 ], [ %180, %58 ]\l  %26 = phi i32 [ 0, %19 ], [ %181, %58 ]\l  %27 = phi double [ %2, %19 ], [ %180, %58 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %50, label %29\l|{<s0>T|<s1>F}}"];
	Node0x5c7d800:s0 -> Node0x5c7d540;
	Node0x5c7d800:s1 -> Node0x5c7e270;
	Node0x5c7e270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %47, %29 ], [ %26, %24 ]\l  %31 = phi double [ %46, %29 ], [ %27, %24 ]\l  %32 = phi i32 [ %48, %29 ], [ 0, %24 ]\l  %33 = zext i32 %30 to i64\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 %33\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %33\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %38 = sitofp i32 %37 to double\l  %39 = fmul contract double %35, %38\l  %40 = mul nsw i32 %30, %0\l  %41 = add nsw i32 %40, %15\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds double, double addrspace(1)* %4, i64 %42\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %45 = fmul contract double %44, %39\l  %46 = fadd contract double %31, %45\l  %47 = add nuw nsw i32 %30, 1\l  %48 = add i32 %32, 1\l  %49 = icmp eq i32 %48, %20\l  br i1 %49, label %50, label %29, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c7e270:s0 -> Node0x5c7d540;
	Node0x5c7e270:s1 -> Node0x5c7e270;
	Node0x5c7d540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = phi double [ %2, %17 ], [ %25, %24 ], [ %46, %29 ]\l  %52 = sext i32 %15 to i64\l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %52\l  %54 = load i32, i32 addrspace(1)* %53, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %55 = sitofp i32 %54 to double\l  %56 = fsub contract double %51, %55\l  %57 = getelementptr inbounds double, double addrspace(1)* %5, i64 %52\l  store double %56, double addrspace(1)* %57, align 8, !tbaa !7\l  br label %184\l}"];
	Node0x5c7d540 -> Node0x5c7d320;
	Node0x5c7da50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%58:\l58:                                               \l  %59 = phi i32 [ 0, %22 ], [ %181, %58 ]\l  %60 = phi double [ %2, %22 ], [ %180, %58 ]\l  %61 = phi i32 [ 0, %22 ], [ %182, %58 ]\l  %62 = zext i32 %59 to i64\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %62\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %62\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %67 = sitofp i32 %66 to double\l  %68 = fmul contract double %64, %67\l  %69 = mul nsw i32 %59, %0\l  %70 = add nsw i32 %69, %15\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds double, double addrspace(1)* %4, i64 %71\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %74 = fmul contract double %73, %68\l  %75 = fadd contract double %60, %74\l  %76 = or i32 %59, 1\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds double, double addrspace(1)* %1, i64 %77\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %77\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %82 = sitofp i32 %81 to double\l  %83 = fmul contract double %79, %82\l  %84 = mul nsw i32 %76, %0\l  %85 = add nsw i32 %84, %15\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds double, double addrspace(1)* %4, i64 %86\l  %88 = load double, double addrspace(1)* %87, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %89 = fmul contract double %88, %83\l  %90 = fadd contract double %75, %89\l  %91 = or i32 %59, 2\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds double, double addrspace(1)* %1, i64 %92\l  %94 = load double, double addrspace(1)* %93, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %95 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %92\l  %96 = load i32, i32 addrspace(1)* %95, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %97 = sitofp i32 %96 to double\l  %98 = fmul contract double %94, %97\l  %99 = mul nsw i32 %91, %0\l  %100 = add nsw i32 %99, %15\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds double, double addrspace(1)* %4, i64 %101\l  %103 = load double, double addrspace(1)* %102, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %104 = fmul contract double %103, %98\l  %105 = fadd contract double %90, %104\l  %106 = or i32 %59, 3\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds double, double addrspace(1)* %1, i64 %107\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %107\l  %111 = load i32, i32 addrspace(1)* %110, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %112 = sitofp i32 %111 to double\l  %113 = fmul contract double %109, %112\l  %114 = mul nsw i32 %106, %0\l  %115 = add nsw i32 %114, %15\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds double, double addrspace(1)* %4, i64 %116\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %119 = fmul contract double %118, %113\l  %120 = fadd contract double %105, %119\l  %121 = or i32 %59, 4\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds double, double addrspace(1)* %1, i64 %122\l  %124 = load double, double addrspace(1)* %123, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %122\l  %126 = load i32, i32 addrspace(1)* %125, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %127 = sitofp i32 %126 to double\l  %128 = fmul contract double %124, %127\l  %129 = mul nsw i32 %121, %0\l  %130 = add nsw i32 %129, %15\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds double, double addrspace(1)* %4, i64 %131\l  %133 = load double, double addrspace(1)* %132, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = fmul contract double %133, %128\l  %135 = fadd contract double %120, %134\l  %136 = or i32 %59, 5\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds double, double addrspace(1)* %1, i64 %137\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %137\l  %141 = load i32, i32 addrspace(1)* %140, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %142 = sitofp i32 %141 to double\l  %143 = fmul contract double %139, %142\l  %144 = mul nsw i32 %136, %0\l  %145 = add nsw i32 %144, %15\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds double, double addrspace(1)* %4, i64 %146\l  %148 = load double, double addrspace(1)* %147, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %149 = fmul contract double %148, %143\l  %150 = fadd contract double %135, %149\l  %151 = or i32 %59, 6\l  %152 = zext i32 %151 to i64\l  %153 = getelementptr inbounds double, double addrspace(1)* %1, i64 %152\l  %154 = load double, double addrspace(1)* %153, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %155 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %152\l  %156 = load i32, i32 addrspace(1)* %155, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %157 = sitofp i32 %156 to double\l  %158 = fmul contract double %154, %157\l  %159 = mul nsw i32 %151, %0\l  %160 = add nsw i32 %159, %15\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds double, double addrspace(1)* %4, i64 %161\l  %163 = load double, double addrspace(1)* %162, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %164 = fmul contract double %163, %158\l  %165 = fadd contract double %150, %164\l  %166 = or i32 %59, 7\l  %167 = zext i32 %166 to i64\l  %168 = getelementptr inbounds double, double addrspace(1)* %1, i64 %167\l  %169 = load double, double addrspace(1)* %168, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %170 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %167\l  %171 = load i32, i32 addrspace(1)* %170, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %172 = sitofp i32 %171 to double\l  %173 = fmul contract double %169, %172\l  %174 = mul nsw i32 %166, %0\l  %175 = add nsw i32 %174, %15\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds double, double addrspace(1)* %4, i64 %176\l  %178 = load double, double addrspace(1)* %177, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %179 = fmul contract double %178, %173\l  %180 = fadd contract double %165, %179\l  %181 = add nuw nsw i32 %59, 8\l  %182 = add i32 %61, 8\l  %183 = icmp eq i32 %182, %23\l  br i1 %183, label %24, label %58, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5c7da50:s0 -> Node0x5c7d800;
	Node0x5c7da50:s1 -> Node0x5c7da50;
	Node0x5c7d320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%184:\l184:                                              \l  ret void\l}"];
}
