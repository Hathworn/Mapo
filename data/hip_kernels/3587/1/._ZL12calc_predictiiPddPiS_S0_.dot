digraph "CFG for '_ZL12calc_predictiiPddPiS_S0_' function" {
	label="CFG for '_ZL12calc_predictiiPddPiS_S0_' function";

	Node0x59ec350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%7:\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = mul i32 %13, %12\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp slt i32 %16, %0\l  br i1 %17, label %18, label %183\l|{<s0>T|<s1>F}}"];
	Node0x59ec350:s0 -> Node0x59ee270;
	Node0x59ec350:s1 -> Node0x59ee300;
	Node0x59ee270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%18:\l18:                                               \l  %19 = icmp sgt i32 %1, 0\l  br i1 %19, label %20, label %51\l|{<s0>T|<s1>F}}"];
	Node0x59ee270:s0 -> Node0x59ee4d0;
	Node0x59ee270:s1 -> Node0x59ee520;
	Node0x59ee4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%20:\l20:                                               \l  %21 = and i32 %1, 7\l  %22 = icmp ult i32 %1, 8\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x59ee4d0:s0 -> Node0x59ee7e0;
	Node0x59ee4d0:s1 -> Node0x59ee830;
	Node0x59ee830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%23:\l23:                                               \l  %24 = and i32 %1, -8\l  br label %57\l}"];
	Node0x59ee830 -> Node0x59eea30;
	Node0x59ee7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%25:\l25:                                               \l  %26 = phi double [ undef, %20 ], [ %179, %57 ]\l  %27 = phi i32 [ 0, %20 ], [ %180, %57 ]\l  %28 = phi double [ %3, %20 ], [ %179, %57 ]\l  %29 = icmp eq i32 %21, 0\l  br i1 %29, label %51, label %30\l|{<s0>T|<s1>F}}"];
	Node0x59ee7e0:s0 -> Node0x59ee520;
	Node0x59ee7e0:s1 -> Node0x59ef250;
	Node0x59ef250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %48, %30 ], [ %27, %25 ]\l  %32 = phi double [ %47, %30 ], [ %28, %25 ]\l  %33 = phi i32 [ %49, %30 ], [ 0, %25 ]\l  %34 = zext i32 %31 to i64\l  %35 = getelementptr inbounds double, double addrspace(1)* %2, i64 %34\l  %36 = load double, double addrspace(1)* %35, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %34\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %39 = sitofp i32 %38 to double\l  %40 = fmul contract double %36, %39\l  %41 = mul nsw i32 %31, %0\l  %42 = add nsw i32 %41, %16\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %5, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %46 = fmul contract double %45, %40\l  %47 = fadd contract double %32, %46\l  %48 = add nuw nsw i32 %31, 1\l  %49 = add i32 %33, 1\l  %50 = icmp eq i32 %49, %21\l  br i1 %50, label %51, label %30, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x59ef250:s0 -> Node0x59ee520;
	Node0x59ef250:s1 -> Node0x59ef250;
	Node0x59ee520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%51:\l51:                                               \l  %52 = phi double [ %3, %18 ], [ %26, %25 ], [ %47, %30 ]\l  %53 = fcmp contract oge double %52, 0.000000e+00\l  %54 = select i1 %53, i32 1, i32 -1\l  %55 = sext i32 %16 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %6, i64 %55\l  store i32 %54, i32 addrspace(1)* %56, align 4, !tbaa !11\l  br label %183\l}"];
	Node0x59ee520 -> Node0x59ee300;
	Node0x59eea30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%57:\l57:                                               \l  %58 = phi i32 [ 0, %23 ], [ %180, %57 ]\l  %59 = phi double [ %3, %23 ], [ %179, %57 ]\l  %60 = phi i32 [ 0, %23 ], [ %181, %57 ]\l  %61 = zext i32 %58 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %2, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %61\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %66 = sitofp i32 %65 to double\l  %67 = fmul contract double %63, %66\l  %68 = mul nsw i32 %58, %0\l  %69 = add nsw i32 %68, %16\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds double, double addrspace(1)* %5, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %73 = fmul contract double %72, %67\l  %74 = fadd contract double %59, %73\l  %75 = or i32 %58, 1\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds double, double addrspace(1)* %2, i64 %76\l  %78 = load double, double addrspace(1)* %77, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %76\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %81 = sitofp i32 %80 to double\l  %82 = fmul contract double %78, %81\l  %83 = mul nsw i32 %75, %0\l  %84 = add nsw i32 %83, %16\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds double, double addrspace(1)* %5, i64 %85\l  %87 = load double, double addrspace(1)* %86, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %88 = fmul contract double %87, %82\l  %89 = fadd contract double %74, %88\l  %90 = or i32 %58, 2\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %2, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %91\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !11, !amdgpu.noclobber\l... !5\l  %96 = sitofp i32 %95 to double\l  %97 = fmul contract double %93, %96\l  %98 = mul nsw i32 %90, %0\l  %99 = add nsw i32 %98, %16\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, double addrspace(1)* %5, i64 %100\l  %102 = load double, double addrspace(1)* %101, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = fmul contract double %102, %97\l  %104 = fadd contract double %89, %103\l  %105 = or i32 %58, 3\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds double, double addrspace(1)* %2, i64 %106\l  %108 = load double, double addrspace(1)* %107, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %109 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %106\l  %110 = load i32, i32 addrspace(1)* %109, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %111 = sitofp i32 %110 to double\l  %112 = fmul contract double %108, %111\l  %113 = mul nsw i32 %105, %0\l  %114 = add nsw i32 %113, %16\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds double, double addrspace(1)* %5, i64 %115\l  %117 = load double, double addrspace(1)* %116, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %118 = fmul contract double %117, %112\l  %119 = fadd contract double %104, %118\l  %120 = or i32 %58, 4\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds double, double addrspace(1)* %2, i64 %121\l  %123 = load double, double addrspace(1)* %122, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %124 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %121\l  %125 = load i32, i32 addrspace(1)* %124, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %126 = sitofp i32 %125 to double\l  %127 = fmul contract double %123, %126\l  %128 = mul nsw i32 %120, %0\l  %129 = add nsw i32 %128, %16\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds double, double addrspace(1)* %5, i64 %130\l  %132 = load double, double addrspace(1)* %131, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %133 = fmul contract double %132, %127\l  %134 = fadd contract double %119, %133\l  %135 = or i32 %58, 5\l  %136 = zext i32 %135 to i64\l  %137 = getelementptr inbounds double, double addrspace(1)* %2, i64 %136\l  %138 = load double, double addrspace(1)* %137, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %136\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %141 = sitofp i32 %140 to double\l  %142 = fmul contract double %138, %141\l  %143 = mul nsw i32 %135, %0\l  %144 = add nsw i32 %143, %16\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds double, double addrspace(1)* %5, i64 %145\l  %147 = load double, double addrspace(1)* %146, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %148 = fmul contract double %147, %142\l  %149 = fadd contract double %134, %148\l  %150 = or i32 %58, 6\l  %151 = zext i32 %150 to i64\l  %152 = getelementptr inbounds double, double addrspace(1)* %2, i64 %151\l  %153 = load double, double addrspace(1)* %152, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %151\l  %155 = load i32, i32 addrspace(1)* %154, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %156 = sitofp i32 %155 to double\l  %157 = fmul contract double %153, %156\l  %158 = mul nsw i32 %150, %0\l  %159 = add nsw i32 %158, %16\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds double, double addrspace(1)* %5, i64 %160\l  %162 = load double, double addrspace(1)* %161, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %163 = fmul contract double %162, %157\l  %164 = fadd contract double %149, %163\l  %165 = or i32 %58, 7\l  %166 = zext i32 %165 to i64\l  %167 = getelementptr inbounds double, double addrspace(1)* %2, i64 %166\l  %168 = load double, double addrspace(1)* %167, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %169 = getelementptr inbounds i32, i32 addrspace(1)* %4, i64 %166\l  %170 = load i32, i32 addrspace(1)* %169, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %171 = sitofp i32 %170 to double\l  %172 = fmul contract double %168, %171\l  %173 = mul nsw i32 %165, %0\l  %174 = add nsw i32 %173, %16\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds double, double addrspace(1)* %5, i64 %175\l  %177 = load double, double addrspace(1)* %176, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %178 = fmul contract double %177, %172\l  %179 = fadd contract double %164, %178\l  %180 = add nuw nsw i32 %58, 8\l  %181 = add i32 %60, 8\l  %182 = icmp eq i32 %181, %24\l  br i1 %182, label %25, label %57, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x59eea30:s0 -> Node0x59ee7e0;
	Node0x59eea30:s1 -> Node0x59eea30;
	Node0x59ee300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%183:\l183:                                              \l  ret void\l}"];
}
