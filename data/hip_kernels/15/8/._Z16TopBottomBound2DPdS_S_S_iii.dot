digraph "CFG for '_Z16TopBottomBound2DPdS_S_S_iii' function" {
	label="CFG for '_Z16TopBottomBound2DPdS_S_S_iii' function";

	Node0x500d670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !7\l  %18 = mul i32 %9, %14\l  %19 = add i32 %18, %8\l  %20 = icmp slt i32 %19, %6\l  br i1 %20, label %21, label %79\l|{<s0>T|<s1>F}}"];
	Node0x500d670:s0 -> Node0x500f2a0;
	Node0x500d670:s1 -> Node0x500f330;
	Node0x500f2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%21:\l21:                                               \l  %22 = icmp eq i32 %4, 0\l  %23 = load double, double addrspace(4)* @hcri, align 8\l  %24 = add nsw i32 %5, -1\l  %25 = mul nsw i32 %24, %6\l  %26 = add nsw i32 %5, -2\l  %27 = mul nsw i32 %26, %6\l  %28 = udiv i32 %17, %14\l  %29 = mul i32 %28, %14\l  %30 = icmp ugt i32 %17, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = mul i32 %32, %14\l  br label %34\l}"];
	Node0x500f2a0 -> Node0x500ef00;
	Node0x500ef00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%34:\l34:                                               \l  %35 = phi i32 [ %19, %21 ], [ %77, %66 ]\l  br i1 %22, label %36, label %50\l|{<s0>T|<s1>F}}"];
	Node0x500ef00:s0 -> Node0x500fe50;
	Node0x500ef00:s1 -> Node0x500fee0;
	Node0x500fe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%36:\l36:                                               \l  %37 = add nsw i32 %35, %6\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !16\l  %41 = sext i32 %35 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %0, i64 %41\l  store double %40, double addrspace(1)* %42, align 8, !tbaa !16\l  %43 = add nsw i32 %35, %27\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %0, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !16\l  %47 = add nsw i32 %35, %25\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %0, i64 %48\l  store double %46, double addrspace(1)* %49, align 8, !tbaa !16\l  br label %66\l}"];
	Node0x500fe50 -> Node0x500fd10;
	Node0x500fee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%50:\l50:                                               \l  %51 = sext i32 %35 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %1, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16\l  %54 = fadd contract double %23, %53\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  store double %54, double addrspace(1)* %55, align 8, !tbaa !16\l  %56 = add nsw i32 %35, %25\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds double, double addrspace(1)* %1, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !16\l  %60 = fadd contract double %23, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %0, i64 %57\l  store double %60, double addrspace(1)* %61, align 8, !tbaa !16\l  %62 = add nsw i32 %35, %6\l  %63 = sext i32 %62 to i64\l  %64 = add nsw i32 %35, %27\l  %65 = sext i32 %64 to i64\l  br label %66\l}"];
	Node0x500fee0 -> Node0x500fd10;
	Node0x500fd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i64 [ %57, %50 ], [ %48, %36 ]\l  %68 = phi i64 [ %65, %50 ], [ %44, %36 ]\l  %69 = phi i64 [ %51, %50 ], [ %41, %36 ]\l  %70 = phi i64 [ %63, %50 ], [ %38, %36 ]\l  %71 = getelementptr inbounds double, double addrspace(1)* %3, i64 %70\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !16\l  %73 = getelementptr inbounds double, double addrspace(1)* %3, i64 %69\l  store double %72, double addrspace(1)* %73, align 8, !tbaa !16\l  %74 = getelementptr inbounds double, double addrspace(1)* %2, i64 %68\l  %75 = load double, double addrspace(1)* %74, align 8, !tbaa !16\l  %76 = getelementptr inbounds double, double addrspace(1)* %2, i64 %67\l  store double %75, double addrspace(1)* %76, align 8, !tbaa !16\l  %77 = add i32 %33, %35\l  %78 = icmp slt i32 %77, %6\l  br i1 %78, label %34, label %79, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x500fd10:s0 -> Node0x500ef00;
	Node0x500fd10:s1 -> Node0x500f330;
	Node0x500f330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%79:\l79:                                               \l  ret void\l}"];
}
