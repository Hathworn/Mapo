digraph "CFG for '_Z18vanGenuchtenIntialPdS_S_S_i' function" {
	label="CFG for '_Z18vanGenuchtenIntialPdS_S_S_i' function";

	Node0x4d91f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !7\l  %16 = mul i32 %7, %12\l  %17 = add i32 %16, %6\l  %18 = icmp slt i32 %17, %4\l  br i1 %18, label %19, label %890\l|{<s0>T|<s1>F}}"];
	Node0x4d91f00:s0 -> Node0x4d91ad0;
	Node0x4d91f00:s1 -> Node0x4d93ba0;
	Node0x4d91ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = load double, double addrspace(4)* @nv, align 8, !tbaa !16\l  %21 = fadd contract double %20, -1.000000e+00\l  %22 = fdiv contract double %21, %20\l  %23 = load double, double addrspace(4)* @theta_S, align 8\l  %24 = load double, double addrspace(4)* @theta_R, align 8\l  %25 = fsub contract double %23, %24\l  %26 = load double, double addrspace(4)* @alpha, align 8\l  %27 = tail call double @llvm.fabs.f64(double %20)\l  %28 = tail call double @llvm.trunc.f64(double %27)\l  %29 = fcmp oeq double %27, %28\l  %30 = zext i1 %29 to i32\l  %31 = fmul double %28, 5.000000e-01\l  %32 = tail call double @llvm.amdgcn.fract.f64(double %31)\l  %33 = tail call i1 @llvm.amdgcn.class.f64(double %31, i32 516)\l  %34 = select i1 %33, double 0.000000e+00, double %32\l  %35 = fcmp oeq double %34, 0.000000e+00\l  %36 = and i1 %29, %35\l  %37 = zext i1 %36 to i32\l  %38 = add nuw nsw i32 %37, %30\l  %39 = icmp eq i32 %38, 1\l  %40 = icmp ne i32 %38, 0\l  %41 = fcmp oeq double %27, 0x7FF0000000000000\l  %42 = bitcast double %20 to \<2 x i32\>\l  %43 = extractelement \<2 x i32\> %42, i64 1\l  %44 = fcmp olt double %20, 0.000000e+00\l  %45 = fcmp oeq double %20, 0.000000e+00\l  %46 = tail call double @llvm.fabs.f64(double %22)\l  %47 = tail call double @llvm.trunc.f64(double %46)\l  %48 = fcmp oeq double %46, %47\l  %49 = zext i1 %48 to i32\l  %50 = fmul double %47, 5.000000e-01\l  %51 = tail call double @llvm.amdgcn.fract.f64(double %50)\l  %52 = tail call i1 @llvm.amdgcn.class.f64(double %50, i32 516)\l  %53 = select i1 %52, double 0.000000e+00, double %51\l  %54 = fcmp oeq double %53, 0.000000e+00\l  %55 = and i1 %48, %54\l  %56 = zext i1 %55 to i32\l  %57 = add nuw nsw i32 %56, %49\l  %58 = icmp eq i32 %57, 1\l  %59 = icmp ne i32 %57, 0\l  %60 = fcmp oeq double %46, 0x7FF0000000000000\l  %61 = bitcast double %22 to \<2 x i32\>\l  %62 = extractelement \<2 x i32\> %61, i64 1\l  %63 = fcmp olt double %22, 0.000000e+00\l  %64 = fcmp oeq double %22, 0.000000e+00\l  %65 = fdiv contract double 1.000000e+00, %22\l  %66 = tail call double @llvm.fabs.f64(double %65)\l  %67 = tail call double @llvm.trunc.f64(double %66)\l  %68 = fcmp oeq double %66, %67\l  %69 = zext i1 %68 to i32\l  %70 = fmul double %67, 5.000000e-01\l  %71 = tail call double @llvm.amdgcn.fract.f64(double %70)\l  %72 = tail call i1 @llvm.amdgcn.class.f64(double %70, i32 516)\l  %73 = select i1 %72, double 0.000000e+00, double %71\l  %74 = fcmp oeq double %73, 0.000000e+00\l  %75 = and i1 %68, %74\l  %76 = zext i1 %75 to i32\l  %77 = add nuw nsw i32 %76, %69\l  %78 = icmp eq i32 %77, 1\l  %79 = icmp ne i32 %77, 0\l  %80 = fcmp oeq double %66, 0x7FF0000000000000\l  %81 = bitcast double %65 to \<2 x i32\>\l  %82 = extractelement \<2 x i32\> %81, i64 1\l  %83 = fcmp olt double %65, 0.000000e+00\l  %84 = fcmp oeq double %65, 0.000000e+00\l  %85 = udiv i32 %15, %12\l  %86 = mul i32 %85, %12\l  %87 = icmp ugt i32 %15, %86\l  %88 = zext i1 %87 to i32\l  %89 = add i32 %85, %88\l  %90 = mul i32 %89, %12\l  br label %91\l}"];
	Node0x4d91ad0 -> Node0x4d97960;
	Node0x4d97960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = phi i32 [ %17, %19 ], [ %888, %479 ]\l  %93 = sext i32 %92 to i64\l  %94 = getelementptr inbounds double, double addrspace(1)* %3, i64 %93\l  %95 = load double, double addrspace(1)* %94, align 8, !tbaa !16\l  %96 = fmul contract double %95, 1.000000e+02\l  %97 = fcmp contract olt double %96, 0.000000e+00\l  br i1 %97, label %98, label %479\l|{<s0>T|<s1>F}}"];
	Node0x4d97960:s0 -> Node0x4d98450;
	Node0x4d97960:s1 -> Node0x4d97a20;
	Node0x4d98450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%98:\l98:                                               \l  %99 = fneg contract double %96\l  %100 = fmul contract double %26, %99\l  %101 = tail call double @llvm.fabs.f64(double %100)\l  %102 = tail call double @llvm.amdgcn.frexp.mant.f64(double %101)\l  %103 = fcmp olt double %102, 0x3FE5555555555555\l  %104 = zext i1 %103 to i32\l  %105 = tail call double @llvm.amdgcn.ldexp.f64(double %102, i32 %104)\l  %106 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %101)\l  %107 = sub nsw i32 %106, %104\l  %108 = fadd double %105, -1.000000e+00\l  %109 = fadd double %105, 1.000000e+00\l  %110 = fadd double %109, -1.000000e+00\l  %111 = fsub double %105, %110\l  %112 = tail call double @llvm.amdgcn.rcp.f64(double %109)\l  %113 = fneg double %109\l  %114 = tail call double @llvm.fma.f64(double %113, double %112, double\l... 1.000000e+00)\l  %115 = tail call double @llvm.fma.f64(double %114, double %112, double %112)\l  %116 = tail call double @llvm.fma.f64(double %113, double %115, double\l... 1.000000e+00)\l  %117 = tail call double @llvm.fma.f64(double %116, double %115, double %115)\l  %118 = fmul double %108, %117\l  %119 = fmul double %109, %118\l  %120 = fneg double %119\l  %121 = tail call double @llvm.fma.f64(double %118, double %109, double %120)\l  %122 = tail call double @llvm.fma.f64(double %118, double %111, double %121)\l  %123 = fadd double %119, %122\l  %124 = fsub double %123, %119\l  %125 = fsub double %122, %124\l  %126 = fsub double %108, %123\l  %127 = fsub double %108, %126\l  %128 = fsub double %127, %123\l  %129 = fsub double %128, %125\l  %130 = fadd double %126, %129\l  %131 = fmul double %117, %130\l  %132 = fadd double %118, %131\l  %133 = fsub double %132, %118\l  %134 = fsub double %131, %133\l  %135 = fmul double %132, %132\l  %136 = fneg double %135\l  %137 = tail call double @llvm.fma.f64(double %132, double %132, double %136)\l  %138 = fmul double %134, 2.000000e+00\l  %139 = tail call double @llvm.fma.f64(double %132, double %138, double %137)\l  %140 = fadd double %135, %139\l  %141 = fsub double %140, %135\l  %142 = fsub double %139, %141\l  %143 = tail call double @llvm.fma.f64(double %140, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %144 = tail call double @llvm.fma.f64(double %140, double %143, double\l... 0x3FBE25E43ABE935A)\l  %145 = tail call double @llvm.fma.f64(double %140, double %144, double\l... 0x3FC110EF47E6C9C2)\l  %146 = tail call double @llvm.fma.f64(double %140, double %145, double\l... 0x3FC3B13BCFA74449)\l  %147 = tail call double @llvm.fma.f64(double %140, double %146, double\l... 0x3FC745D171BF3C30)\l  %148 = tail call double @llvm.fma.f64(double %140, double %147, double\l... 0x3FCC71C71C7792CE)\l  %149 = tail call double @llvm.fma.f64(double %140, double %148, double\l... 0x3FD24924924920DA)\l  %150 = tail call double @llvm.fma.f64(double %140, double %149, double\l... 0x3FD999999999999C)\l  %151 = sitofp i32 %107 to double\l  %152 = fmul double %151, 0x3FE62E42FEFA39EF\l  %153 = fneg double %152\l  %154 = tail call double @llvm.fma.f64(double %151, double\l... 0x3FE62E42FEFA39EF, double %153)\l  %155 = tail call double @llvm.fma.f64(double %151, double\l... 0x3C7ABC9E3B39803F, double %154)\l  %156 = fadd double %152, %155\l  %157 = fsub double %156, %152\l  %158 = fsub double %155, %157\l  %159 = tail call double @llvm.amdgcn.ldexp.f64(double %132, i32 1)\l  %160 = tail call double @llvm.amdgcn.ldexp.f64(double %134, i32 1)\l  %161 = fmul double %132, %140\l  %162 = fneg double %161\l  %163 = tail call double @llvm.fma.f64(double %140, double %132, double %162)\l  %164 = tail call double @llvm.fma.f64(double %140, double %134, double %163)\l  %165 = tail call double @llvm.fma.f64(double %142, double %132, double %164)\l  %166 = fadd double %161, %165\l  %167 = fsub double %166, %161\l  %168 = fsub double %165, %167\l  %169 = fmul double %140, %150\l  %170 = fneg double %169\l  %171 = tail call double @llvm.fma.f64(double %140, double %150, double %170)\l  %172 = tail call double @llvm.fma.f64(double %142, double %150, double %171)\l  %173 = fadd double %169, %172\l  %174 = fsub double %173, %169\l  %175 = fsub double %172, %174\l  %176 = fadd double %173, 0x3FE5555555555555\l  %177 = fadd double %176, 0xBFE5555555555555\l  %178 = fsub double %173, %177\l  %179 = fadd double %175, 0x3C8543B0D5DF274D\l  %180 = fadd double %179, %178\l  %181 = fadd double %176, %180\l  %182 = fsub double %181, %176\l  %183 = fsub double %180, %182\l  %184 = fmul double %166, %181\l  %185 = fneg double %184\l  %186 = tail call double @llvm.fma.f64(double %166, double %181, double %185)\l  %187 = tail call double @llvm.fma.f64(double %166, double %183, double %186)\l  %188 = tail call double @llvm.fma.f64(double %168, double %181, double %187)\l  %189 = fadd double %184, %188\l  %190 = fsub double %189, %184\l  %191 = fsub double %188, %190\l  %192 = fadd double %159, %189\l  %193 = fsub double %192, %159\l  %194 = fsub double %189, %193\l  %195 = fadd double %160, %191\l  %196 = fadd double %195, %194\l  %197 = fadd double %192, %196\l  %198 = fsub double %197, %192\l  %199 = fsub double %196, %198\l  %200 = fadd double %156, %197\l  %201 = fsub double %200, %156\l  %202 = fsub double %200, %201\l  %203 = fsub double %156, %202\l  %204 = fsub double %197, %201\l  %205 = fadd double %204, %203\l  %206 = fadd double %158, %199\l  %207 = fsub double %206, %158\l  %208 = fsub double %206, %207\l  %209 = fsub double %158, %208\l  %210 = fsub double %199, %207\l  %211 = fadd double %210, %209\l  %212 = fadd double %206, %205\l  %213 = fadd double %200, %212\l  %214 = fsub double %213, %200\l  %215 = fsub double %212, %214\l  %216 = fadd double %211, %215\l  %217 = fadd double %213, %216\l  %218 = fsub double %217, %213\l  %219 = fsub double %216, %218\l  %220 = fmul double %20, %217\l  %221 = fneg double %220\l  %222 = tail call double @llvm.fma.f64(double %20, double %217, double %221)\l  %223 = tail call double @llvm.fma.f64(double %20, double %219, double %222)\l  %224 = fadd double %220, %223\l  %225 = fsub double %224, %220\l  %226 = fsub double %223, %225\l  %227 = tail call double @llvm.fabs.f64(double %220) #3\l  %228 = fcmp oeq double %227, 0x7FF0000000000000\l  %229 = select i1 %228, double %220, double %224\l  %230 = tail call double @llvm.fabs.f64(double %229) #3\l  %231 = fcmp oeq double %230, 0x7FF0000000000000\l  %232 = select i1 %231, double 0.000000e+00, double %226\l  %233 = fmul double %229, 0x3FF71547652B82FE\l  %234 = tail call double @llvm.rint.f64(double %233)\l  %235 = fneg double %234\l  %236 = tail call double @llvm.fma.f64(double %235, double\l... 0x3FE62E42FEFA39EF, double %229)\l  %237 = tail call double @llvm.fma.f64(double %235, double\l... 0x3C7ABC9E3B39803F, double %236)\l  %238 = tail call double @llvm.fma.f64(double %237, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %239 = tail call double @llvm.fma.f64(double %237, double %238, double\l... 0x3EC71DEE623FDE64)\l  %240 = tail call double @llvm.fma.f64(double %237, double %239, double\l... 0x3EFA01997C89E6B0)\l  %241 = tail call double @llvm.fma.f64(double %237, double %240, double\l... 0x3F2A01A014761F6E)\l  %242 = tail call double @llvm.fma.f64(double %237, double %241, double\l... 0x3F56C16C1852B7B0)\l  %243 = tail call double @llvm.fma.f64(double %237, double %242, double\l... 0x3F81111111122322)\l  %244 = tail call double @llvm.fma.f64(double %237, double %243, double\l... 0x3FA55555555502A1)\l  %245 = tail call double @llvm.fma.f64(double %237, double %244, double\l... 0x3FC5555555555511)\l  %246 = tail call double @llvm.fma.f64(double %237, double %245, double\l... 0x3FE000000000000B)\l  %247 = tail call double @llvm.fma.f64(double %237, double %246, double\l... 1.000000e+00)\l  %248 = tail call double @llvm.fma.f64(double %237, double %247, double\l... 1.000000e+00)\l  %249 = fptosi double %234 to i32\l  %250 = tail call double @llvm.amdgcn.ldexp.f64(double %248, i32 %249)\l  %251 = fcmp ogt double %229, 1.024000e+03\l  %252 = select i1 %251, double 0x7FF0000000000000, double %250\l  %253 = fcmp olt double %229, -1.075000e+03\l  %254 = select i1 %253, double 0.000000e+00, double %252\l  %255 = tail call double @llvm.fma.f64(double %254, double %232, double %254)\l  %256 = tail call double @llvm.fabs.f64(double %254) #3\l  %257 = fcmp oeq double %256, 0x7FF0000000000000\l  %258 = select i1 %257, double %254, double %255\l  %259 = fcmp olt double %100, 0.000000e+00\l  %260 = and i1 %39, %259\l  %261 = select i1 %260, double -0.000000e+00, double 0.000000e+00\l  %262 = tail call double @llvm.copysign.f64(double %258, double %261)\l  %263 = fcmp uge double %100, 0.000000e+00\l  %264 = select i1 %263, i1 true, i1 %40\l  %265 = select i1 %264, double %262, double 0x7FF8000000000000\l  %266 = fcmp oeq double %101, 1.000000e+00\l  %267 = fadd double %101, -1.000000e+00\l  %268 = bitcast double %267 to \<2 x i32\>\l  %269 = extractelement \<2 x i32\> %268, i64 1\l  %270 = xor i32 %269, %43\l  %271 = icmp sgt i32 %270, -1\l  %272 = select i1 %271, double 0x7FF0000000000000, double 0.000000e+00\l  %273 = select i1 %266, double %101, double %272\l  %274 = select i1 %41, double %273, double %265\l  %275 = fcmp oeq double %101, 0x7FF0000000000000\l  %276 = fcmp oeq double %100, 0.000000e+00\l  %277 = or i1 %276, %275\l  %278 = xor i1 %44, %276\l  %279 = select i1 %278, double 0.000000e+00, double 0x7FF0000000000000\l  %280 = select i1 %39, double %100, double 0.000000e+00\l  %281 = tail call double @llvm.copysign.f64(double %279, double %280)\l  %282 = select i1 %277, double %281, double %274\l  %283 = fcmp uno double %100, %20\l  %284 = fcmp oeq double %100, 1.000000e+00\l  %285 = or i1 %45, %284\l  %286 = fadd contract double %282, 1.000000e+00\l  %287 = select i1 %283, double 0x7FF8000000000000, double %286\l  %288 = select i1 %285, double 2.000000e+00, double %287\l  %289 = tail call double @llvm.fabs.f64(double %288)\l  %290 = tail call double @llvm.amdgcn.frexp.mant.f64(double %289)\l  %291 = fcmp olt double %290, 0x3FE5555555555555\l  %292 = zext i1 %291 to i32\l  %293 = tail call double @llvm.amdgcn.ldexp.f64(double %290, i32 %292)\l  %294 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %289)\l  %295 = sub nsw i32 %294, %292\l  %296 = fadd double %293, -1.000000e+00\l  %297 = fadd double %293, 1.000000e+00\l  %298 = fadd double %297, -1.000000e+00\l  %299 = fsub double %293, %298\l  %300 = tail call double @llvm.amdgcn.rcp.f64(double %297)\l  %301 = fneg double %297\l  %302 = tail call double @llvm.fma.f64(double %301, double %300, double\l... 1.000000e+00)\l  %303 = tail call double @llvm.fma.f64(double %302, double %300, double %300)\l  %304 = tail call double @llvm.fma.f64(double %301, double %303, double\l... 1.000000e+00)\l  %305 = tail call double @llvm.fma.f64(double %304, double %303, double %303)\l  %306 = fmul double %296, %305\l  %307 = fmul double %297, %306\l  %308 = fneg double %307\l  %309 = tail call double @llvm.fma.f64(double %306, double %297, double %308)\l  %310 = tail call double @llvm.fma.f64(double %306, double %299, double %309)\l  %311 = fadd double %307, %310\l  %312 = fsub double %311, %307\l  %313 = fsub double %310, %312\l  %314 = fsub double %296, %311\l  %315 = fsub double %296, %314\l  %316 = fsub double %315, %311\l  %317 = fsub double %316, %313\l  %318 = fadd double %314, %317\l  %319 = fmul double %305, %318\l  %320 = fadd double %306, %319\l  %321 = fsub double %320, %306\l  %322 = fsub double %319, %321\l  %323 = fmul double %320, %320\l  %324 = fneg double %323\l  %325 = tail call double @llvm.fma.f64(double %320, double %320, double %324)\l  %326 = fmul double %322, 2.000000e+00\l  %327 = tail call double @llvm.fma.f64(double %320, double %326, double %325)\l  %328 = fadd double %323, %327\l  %329 = fsub double %328, %323\l  %330 = fsub double %327, %329\l  %331 = tail call double @llvm.fma.f64(double %328, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %332 = tail call double @llvm.fma.f64(double %328, double %331, double\l... 0x3FBE25E43ABE935A)\l  %333 = tail call double @llvm.fma.f64(double %328, double %332, double\l... 0x3FC110EF47E6C9C2)\l  %334 = tail call double @llvm.fma.f64(double %328, double %333, double\l... 0x3FC3B13BCFA74449)\l  %335 = tail call double @llvm.fma.f64(double %328, double %334, double\l... 0x3FC745D171BF3C30)\l  %336 = tail call double @llvm.fma.f64(double %328, double %335, double\l... 0x3FCC71C71C7792CE)\l  %337 = tail call double @llvm.fma.f64(double %328, double %336, double\l... 0x3FD24924924920DA)\l  %338 = tail call double @llvm.fma.f64(double %328, double %337, double\l... 0x3FD999999999999C)\l  %339 = sitofp i32 %295 to double\l  %340 = fmul double %339, 0x3FE62E42FEFA39EF\l  %341 = fneg double %340\l  %342 = tail call double @llvm.fma.f64(double %339, double\l... 0x3FE62E42FEFA39EF, double %341)\l  %343 = tail call double @llvm.fma.f64(double %339, double\l... 0x3C7ABC9E3B39803F, double %342)\l  %344 = fadd double %340, %343\l  %345 = fsub double %344, %340\l  %346 = fsub double %343, %345\l  %347 = tail call double @llvm.amdgcn.ldexp.f64(double %320, i32 1)\l  %348 = tail call double @llvm.amdgcn.ldexp.f64(double %322, i32 1)\l  %349 = fmul double %320, %328\l  %350 = fneg double %349\l  %351 = tail call double @llvm.fma.f64(double %328, double %320, double %350)\l  %352 = tail call double @llvm.fma.f64(double %328, double %322, double %351)\l  %353 = tail call double @llvm.fma.f64(double %330, double %320, double %352)\l  %354 = fadd double %349, %353\l  %355 = fsub double %354, %349\l  %356 = fsub double %353, %355\l  %357 = fmul double %328, %338\l  %358 = fneg double %357\l  %359 = tail call double @llvm.fma.f64(double %328, double %338, double %358)\l  %360 = tail call double @llvm.fma.f64(double %330, double %338, double %359)\l  %361 = fadd double %357, %360\l  %362 = fsub double %361, %357\l  %363 = fsub double %360, %362\l  %364 = fadd double %361, 0x3FE5555555555555\l  %365 = fadd double %364, 0xBFE5555555555555\l  %366 = fsub double %361, %365\l  %367 = fadd double %363, 0x3C8543B0D5DF274D\l  %368 = fadd double %367, %366\l  %369 = fadd double %364, %368\l  %370 = fsub double %369, %364\l  %371 = fsub double %368, %370\l  %372 = fmul double %354, %369\l  %373 = fneg double %372\l  %374 = tail call double @llvm.fma.f64(double %354, double %369, double %373)\l  %375 = tail call double @llvm.fma.f64(double %354, double %371, double %374)\l  %376 = tail call double @llvm.fma.f64(double %356, double %369, double %375)\l  %377 = fadd double %372, %376\l  %378 = fsub double %377, %372\l  %379 = fsub double %376, %378\l  %380 = fadd double %347, %377\l  %381 = fsub double %380, %347\l  %382 = fsub double %377, %381\l  %383 = fadd double %348, %379\l  %384 = fadd double %383, %382\l  %385 = fadd double %380, %384\l  %386 = fsub double %385, %380\l  %387 = fsub double %384, %386\l  %388 = fadd double %344, %385\l  %389 = fsub double %388, %344\l  %390 = fsub double %388, %389\l  %391 = fsub double %344, %390\l  %392 = fsub double %385, %389\l  %393 = fadd double %392, %391\l  %394 = fadd double %346, %387\l  %395 = fsub double %394, %346\l  %396 = fsub double %394, %395\l  %397 = fsub double %346, %396\l  %398 = fsub double %387, %395\l  %399 = fadd double %398, %397\l  %400 = fadd double %394, %393\l  %401 = fadd double %388, %400\l  %402 = fsub double %401, %388\l  %403 = fsub double %400, %402\l  %404 = fadd double %399, %403\l  %405 = fadd double %401, %404\l  %406 = fsub double %405, %401\l  %407 = fsub double %404, %406\l  %408 = fmul double %22, %405\l  %409 = fneg double %408\l  %410 = tail call double @llvm.fma.f64(double %22, double %405, double %409)\l  %411 = tail call double @llvm.fma.f64(double %22, double %407, double %410)\l  %412 = fadd double %408, %411\l  %413 = fsub double %412, %408\l  %414 = fsub double %411, %413\l  %415 = tail call double @llvm.fabs.f64(double %408) #3\l  %416 = fcmp oeq double %415, 0x7FF0000000000000\l  %417 = select i1 %416, double %408, double %412\l  %418 = tail call double @llvm.fabs.f64(double %417) #3\l  %419 = fcmp oeq double %418, 0x7FF0000000000000\l  %420 = select i1 %419, double 0.000000e+00, double %414\l  %421 = fmul double %417, 0x3FF71547652B82FE\l  %422 = tail call double @llvm.rint.f64(double %421)\l  %423 = fneg double %422\l  %424 = tail call double @llvm.fma.f64(double %423, double\l... 0x3FE62E42FEFA39EF, double %417)\l  %425 = tail call double @llvm.fma.f64(double %423, double\l... 0x3C7ABC9E3B39803F, double %424)\l  %426 = tail call double @llvm.fma.f64(double %425, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %427 = tail call double @llvm.fma.f64(double %425, double %426, double\l... 0x3EC71DEE623FDE64)\l  %428 = tail call double @llvm.fma.f64(double %425, double %427, double\l... 0x3EFA01997C89E6B0)\l  %429 = tail call double @llvm.fma.f64(double %425, double %428, double\l... 0x3F2A01A014761F6E)\l  %430 = tail call double @llvm.fma.f64(double %425, double %429, double\l... 0x3F56C16C1852B7B0)\l  %431 = tail call double @llvm.fma.f64(double %425, double %430, double\l... 0x3F81111111122322)\l  %432 = tail call double @llvm.fma.f64(double %425, double %431, double\l... 0x3FA55555555502A1)\l  %433 = tail call double @llvm.fma.f64(double %425, double %432, double\l... 0x3FC5555555555511)\l  %434 = tail call double @llvm.fma.f64(double %425, double %433, double\l... 0x3FE000000000000B)\l  %435 = tail call double @llvm.fma.f64(double %425, double %434, double\l... 1.000000e+00)\l  %436 = tail call double @llvm.fma.f64(double %425, double %435, double\l... 1.000000e+00)\l  %437 = fptosi double %422 to i32\l  %438 = tail call double @llvm.amdgcn.ldexp.f64(double %436, i32 %437)\l  %439 = fcmp ogt double %417, 1.024000e+03\l  %440 = select i1 %439, double 0x7FF0000000000000, double %438\l  %441 = fcmp olt double %417, -1.075000e+03\l  %442 = select i1 %441, double 0.000000e+00, double %440\l  %443 = tail call double @llvm.fma.f64(double %442, double %420, double %442)\l  %444 = tail call double @llvm.fabs.f64(double %442) #3\l  %445 = fcmp oeq double %444, 0x7FF0000000000000\l  %446 = select i1 %445, double %442, double %443\l  %447 = fcmp olt double %288, 0.000000e+00\l  %448 = and i1 %58, %447\l  %449 = select i1 %448, double -0.000000e+00, double 0.000000e+00\l  %450 = tail call double @llvm.copysign.f64(double %446, double %449)\l  %451 = fcmp uge double %288, 0.000000e+00\l  %452 = select i1 %451, i1 true, i1 %59\l  %453 = select i1 %452, double %450, double 0x7FF8000000000000\l  %454 = fcmp oeq double %289, 1.000000e+00\l  %455 = fadd double %289, -1.000000e+00\l  %456 = bitcast double %455 to \<2 x i32\>\l  %457 = extractelement \<2 x i32\> %456, i64 1\l  %458 = xor i32 %457, %62\l  %459 = icmp sgt i32 %458, -1\l  %460 = select i1 %459, double 0x7FF0000000000000, double 0.000000e+00\l  %461 = select i1 %454, double %289, double %460\l  %462 = select i1 %60, double %461, double %453\l  %463 = fcmp oeq double %289, 0x7FF0000000000000\l  %464 = fcmp oeq double %288, 0.000000e+00\l  %465 = or i1 %464, %463\l  %466 = xor i1 %63, %464\l  %467 = select i1 %466, double 0.000000e+00, double 0x7FF0000000000000\l  %468 = select i1 %58, double %288, double 0.000000e+00\l  %469 = tail call double @llvm.copysign.f64(double %467, double %468)\l  %470 = select i1 %465, double %469, double %462\l  %471 = fcmp uno double %288, %22\l  %472 = select i1 %471, double 0x7FF8000000000000, double %470\l  %473 = fcmp oeq double %288, 1.000000e+00\l  %474 = or i1 %64, %473\l  %475 = select i1 %474, double 1.000000e+00, double %472\l  %476 = fdiv contract double %25, %475\l  %477 = fadd contract double %24, %476\l  %478 = fsub contract double %477, %24\l  br label %479\l}"];
	Node0x4d98450 -> Node0x4d97a20;
	Node0x4d97a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%479:\l479:                                              \l  %480 = phi double [ %25, %91 ], [ %478, %98 ]\l  %481 = phi double [ %23, %91 ], [ %477, %98 ]\l  %482 = getelementptr inbounds double, double addrspace(1)* %0, i64 %93\l  store double %481, double addrspace(1)* %482, align 8, !tbaa !16\l  %483 = fdiv contract double %480, %25\l  %484 = getelementptr inbounds double, double addrspace(1)* %2, i64 %93\l  %485 = load double, double addrspace(1)* %484, align 8, !tbaa !16\l  %486 = fcmp olt double %483, 0x1000000000000000\l  %487 = select i1 %486, double 0x4FF0000000000000, double 1.000000e+00\l  %488 = fmul double %483, %487\l  %489 = tail call double @llvm.amdgcn.rsq.f64(double %488)\l  %490 = fmul double %488, %489\l  %491 = fmul double %489, 5.000000e-01\l  %492 = fneg double %491\l  %493 = tail call double @llvm.fma.f64(double %492, double %490, double\l... 5.000000e-01)\l  %494 = tail call double @llvm.fma.f64(double %491, double %493, double %491)\l  %495 = tail call double @llvm.fma.f64(double %490, double %493, double %490)\l  %496 = fneg double %495\l  %497 = tail call double @llvm.fma.f64(double %496, double %495, double %488)\l  %498 = tail call double @llvm.fma.f64(double %497, double %494, double %495)\l  %499 = fneg double %498\l  %500 = tail call double @llvm.fma.f64(double %499, double %498, double %488)\l  %501 = tail call double @llvm.fma.f64(double %500, double %494, double %498)\l  %502 = select i1 %486, double 0x37F0000000000000, double 1.000000e+00\l  %503 = fmul double %502, %501\l  %504 = fcmp oeq double %488, 0.000000e+00\l  %505 = fcmp oeq double %488, 0x7FF0000000000000\l  %506 = or i1 %504, %505\l  %507 = select i1 %506, double %488, double %503\l  %508 = fmul contract double %485, %507\l  %509 = tail call double @llvm.fabs.f64(double %483)\l  %510 = tail call double @llvm.amdgcn.frexp.mant.f64(double %509)\l  %511 = fcmp olt double %510, 0x3FE5555555555555\l  %512 = zext i1 %511 to i32\l  %513 = tail call double @llvm.amdgcn.ldexp.f64(double %510, i32 %512)\l  %514 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %509)\l  %515 = sub nsw i32 %514, %512\l  %516 = fadd double %513, -1.000000e+00\l  %517 = fadd double %513, 1.000000e+00\l  %518 = fadd double %517, -1.000000e+00\l  %519 = fsub double %513, %518\l  %520 = tail call double @llvm.amdgcn.rcp.f64(double %517)\l  %521 = fneg double %517\l  %522 = tail call double @llvm.fma.f64(double %521, double %520, double\l... 1.000000e+00)\l  %523 = tail call double @llvm.fma.f64(double %522, double %520, double %520)\l  %524 = tail call double @llvm.fma.f64(double %521, double %523, double\l... 1.000000e+00)\l  %525 = tail call double @llvm.fma.f64(double %524, double %523, double %523)\l  %526 = fmul double %516, %525\l  %527 = fmul double %517, %526\l  %528 = fneg double %527\l  %529 = tail call double @llvm.fma.f64(double %526, double %517, double %528)\l  %530 = tail call double @llvm.fma.f64(double %526, double %519, double %529)\l  %531 = fadd double %527, %530\l  %532 = fsub double %531, %527\l  %533 = fsub double %530, %532\l  %534 = fsub double %516, %531\l  %535 = fsub double %516, %534\l  %536 = fsub double %535, %531\l  %537 = fsub double %536, %533\l  %538 = fadd double %534, %537\l  %539 = fmul double %525, %538\l  %540 = fadd double %526, %539\l  %541 = fsub double %540, %526\l  %542 = fsub double %539, %541\l  %543 = fmul double %540, %540\l  %544 = fneg double %543\l  %545 = tail call double @llvm.fma.f64(double %540, double %540, double %544)\l  %546 = fmul double %542, 2.000000e+00\l  %547 = tail call double @llvm.fma.f64(double %540, double %546, double %545)\l  %548 = fadd double %543, %547\l  %549 = fsub double %548, %543\l  %550 = fsub double %547, %549\l  %551 = tail call double @llvm.fma.f64(double %548, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %552 = tail call double @llvm.fma.f64(double %548, double %551, double\l... 0x3FBE25E43ABE935A)\l  %553 = tail call double @llvm.fma.f64(double %548, double %552, double\l... 0x3FC110EF47E6C9C2)\l  %554 = tail call double @llvm.fma.f64(double %548, double %553, double\l... 0x3FC3B13BCFA74449)\l  %555 = tail call double @llvm.fma.f64(double %548, double %554, double\l... 0x3FC745D171BF3C30)\l  %556 = tail call double @llvm.fma.f64(double %548, double %555, double\l... 0x3FCC71C71C7792CE)\l  %557 = tail call double @llvm.fma.f64(double %548, double %556, double\l... 0x3FD24924924920DA)\l  %558 = tail call double @llvm.fma.f64(double %548, double %557, double\l... 0x3FD999999999999C)\l  %559 = sitofp i32 %515 to double\l  %560 = fmul double %559, 0x3FE62E42FEFA39EF\l  %561 = fneg double %560\l  %562 = tail call double @llvm.fma.f64(double %559, double\l... 0x3FE62E42FEFA39EF, double %561)\l  %563 = tail call double @llvm.fma.f64(double %559, double\l... 0x3C7ABC9E3B39803F, double %562)\l  %564 = fadd double %560, %563\l  %565 = fsub double %564, %560\l  %566 = fsub double %563, %565\l  %567 = tail call double @llvm.amdgcn.ldexp.f64(double %540, i32 1)\l  %568 = tail call double @llvm.amdgcn.ldexp.f64(double %542, i32 1)\l  %569 = fmul double %540, %548\l  %570 = fneg double %569\l  %571 = tail call double @llvm.fma.f64(double %548, double %540, double %570)\l  %572 = tail call double @llvm.fma.f64(double %548, double %542, double %571)\l  %573 = tail call double @llvm.fma.f64(double %550, double %540, double %572)\l  %574 = fadd double %569, %573\l  %575 = fsub double %574, %569\l  %576 = fsub double %573, %575\l  %577 = fmul double %548, %558\l  %578 = fneg double %577\l  %579 = tail call double @llvm.fma.f64(double %548, double %558, double %578)\l  %580 = tail call double @llvm.fma.f64(double %550, double %558, double %579)\l  %581 = fadd double %577, %580\l  %582 = fsub double %581, %577\l  %583 = fsub double %580, %582\l  %584 = fadd double %581, 0x3FE5555555555555\l  %585 = fadd double %584, 0xBFE5555555555555\l  %586 = fsub double %581, %585\l  %587 = fadd double %583, 0x3C8543B0D5DF274D\l  %588 = fadd double %587, %586\l  %589 = fadd double %584, %588\l  %590 = fsub double %589, %584\l  %591 = fsub double %588, %590\l  %592 = fmul double %574, %589\l  %593 = fneg double %592\l  %594 = tail call double @llvm.fma.f64(double %574, double %589, double %593)\l  %595 = tail call double @llvm.fma.f64(double %574, double %591, double %594)\l  %596 = tail call double @llvm.fma.f64(double %576, double %589, double %595)\l  %597 = fadd double %592, %596\l  %598 = fsub double %597, %592\l  %599 = fsub double %596, %598\l  %600 = fadd double %567, %597\l  %601 = fsub double %600, %567\l  %602 = fsub double %597, %601\l  %603 = fadd double %568, %599\l  %604 = fadd double %603, %602\l  %605 = fadd double %600, %604\l  %606 = fsub double %605, %600\l  %607 = fsub double %604, %606\l  %608 = fadd double %564, %605\l  %609 = fsub double %608, %564\l  %610 = fsub double %608, %609\l  %611 = fsub double %564, %610\l  %612 = fsub double %605, %609\l  %613 = fadd double %612, %611\l  %614 = fadd double %566, %607\l  %615 = fsub double %614, %566\l  %616 = fsub double %614, %615\l  %617 = fsub double %566, %616\l  %618 = fsub double %607, %615\l  %619 = fadd double %618, %617\l  %620 = fadd double %614, %613\l  %621 = fadd double %608, %620\l  %622 = fsub double %621, %608\l  %623 = fsub double %620, %622\l  %624 = fadd double %619, %623\l  %625 = fadd double %621, %624\l  %626 = fsub double %625, %621\l  %627 = fsub double %624, %626\l  %628 = fmul double %65, %625\l  %629 = fneg double %628\l  %630 = tail call double @llvm.fma.f64(double %65, double %625, double %629)\l  %631 = tail call double @llvm.fma.f64(double %65, double %627, double %630)\l  %632 = fadd double %628, %631\l  %633 = fsub double %632, %628\l  %634 = fsub double %631, %633\l  %635 = tail call double @llvm.fabs.f64(double %628) #3\l  %636 = fcmp oeq double %635, 0x7FF0000000000000\l  %637 = select i1 %636, double %628, double %632\l  %638 = tail call double @llvm.fabs.f64(double %637) #3\l  %639 = fcmp oeq double %638, 0x7FF0000000000000\l  %640 = select i1 %639, double 0.000000e+00, double %634\l  %641 = fmul double %637, 0x3FF71547652B82FE\l  %642 = tail call double @llvm.rint.f64(double %641)\l  %643 = fneg double %642\l  %644 = tail call double @llvm.fma.f64(double %643, double\l... 0x3FE62E42FEFA39EF, double %637)\l  %645 = tail call double @llvm.fma.f64(double %643, double\l... 0x3C7ABC9E3B39803F, double %644)\l  %646 = tail call double @llvm.fma.f64(double %645, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %647 = tail call double @llvm.fma.f64(double %645, double %646, double\l... 0x3EC71DEE623FDE64)\l  %648 = tail call double @llvm.fma.f64(double %645, double %647, double\l... 0x3EFA01997C89E6B0)\l  %649 = tail call double @llvm.fma.f64(double %645, double %648, double\l... 0x3F2A01A014761F6E)\l  %650 = tail call double @llvm.fma.f64(double %645, double %649, double\l... 0x3F56C16C1852B7B0)\l  %651 = tail call double @llvm.fma.f64(double %645, double %650, double\l... 0x3F81111111122322)\l  %652 = tail call double @llvm.fma.f64(double %645, double %651, double\l... 0x3FA55555555502A1)\l  %653 = tail call double @llvm.fma.f64(double %645, double %652, double\l... 0x3FC5555555555511)\l  %654 = tail call double @llvm.fma.f64(double %645, double %653, double\l... 0x3FE000000000000B)\l  %655 = tail call double @llvm.fma.f64(double %645, double %654, double\l... 1.000000e+00)\l  %656 = tail call double @llvm.fma.f64(double %645, double %655, double\l... 1.000000e+00)\l  %657 = fptosi double %642 to i32\l  %658 = tail call double @llvm.amdgcn.ldexp.f64(double %656, i32 %657)\l  %659 = fcmp ogt double %637, 1.024000e+03\l  %660 = select i1 %659, double 0x7FF0000000000000, double %658\l  %661 = fcmp olt double %637, -1.075000e+03\l  %662 = select i1 %661, double 0.000000e+00, double %660\l  %663 = tail call double @llvm.fma.f64(double %662, double %640, double %662)\l  %664 = tail call double @llvm.fabs.f64(double %662) #3\l  %665 = fcmp oeq double %664, 0x7FF0000000000000\l  %666 = select i1 %665, double %662, double %663\l  %667 = fcmp olt double %483, 0.000000e+00\l  %668 = and i1 %78, %667\l  %669 = select i1 %668, double -0.000000e+00, double 0.000000e+00\l  %670 = tail call double @llvm.copysign.f64(double %666, double %669)\l  %671 = fcmp uge double %483, 0.000000e+00\l  %672 = select i1 %671, i1 true, i1 %79\l  %673 = select i1 %672, double %670, double 0x7FF8000000000000\l  %674 = fcmp oeq double %509, 1.000000e+00\l  %675 = fadd double %509, -1.000000e+00\l  %676 = bitcast double %675 to \<2 x i32\>\l  %677 = extractelement \<2 x i32\> %676, i64 1\l  %678 = xor i32 %677, %82\l  %679 = icmp sgt i32 %678, -1\l  %680 = select i1 %679, double 0x7FF0000000000000, double 0.000000e+00\l  %681 = select i1 %674, double %509, double %680\l  %682 = select i1 %80, double %681, double %673\l  %683 = fcmp oeq double %509, 0x7FF0000000000000\l  %684 = fcmp oeq double %483, 0.000000e+00\l  %685 = or i1 %684, %683\l  %686 = xor i1 %83, %684\l  %687 = select i1 %686, double 0.000000e+00, double 0x7FF0000000000000\l  %688 = select i1 %78, double %483, double 0.000000e+00\l  %689 = tail call double @llvm.copysign.f64(double %687, double %688)\l  %690 = select i1 %685, double %689, double %682\l  %691 = fcmp uno double %483, %65\l  %692 = fcmp oeq double %483, 1.000000e+00\l  %693 = or i1 %84, %692\l  %694 = fsub contract double 1.000000e+00, %690\l  %695 = select i1 %691, double 0x7FF8000000000000, double %694\l  %696 = select i1 %693, double 0.000000e+00, double %695\l  %697 = tail call double @llvm.fabs.f64(double %696)\l  %698 = tail call double @llvm.amdgcn.frexp.mant.f64(double %697)\l  %699 = fcmp olt double %698, 0x3FE5555555555555\l  %700 = zext i1 %699 to i32\l  %701 = tail call double @llvm.amdgcn.ldexp.f64(double %698, i32 %700)\l  %702 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %697)\l  %703 = sub nsw i32 %702, %700\l  %704 = fadd double %701, -1.000000e+00\l  %705 = fadd double %701, 1.000000e+00\l  %706 = fadd double %705, -1.000000e+00\l  %707 = fsub double %701, %706\l  %708 = tail call double @llvm.amdgcn.rcp.f64(double %705)\l  %709 = fneg double %705\l  %710 = tail call double @llvm.fma.f64(double %709, double %708, double\l... 1.000000e+00)\l  %711 = tail call double @llvm.fma.f64(double %710, double %708, double %708)\l  %712 = tail call double @llvm.fma.f64(double %709, double %711, double\l... 1.000000e+00)\l  %713 = tail call double @llvm.fma.f64(double %712, double %711, double %711)\l  %714 = fmul double %704, %713\l  %715 = fmul double %705, %714\l  %716 = fneg double %715\l  %717 = tail call double @llvm.fma.f64(double %714, double %705, double %716)\l  %718 = tail call double @llvm.fma.f64(double %714, double %707, double %717)\l  %719 = fadd double %715, %718\l  %720 = fsub double %719, %715\l  %721 = fsub double %718, %720\l  %722 = fsub double %704, %719\l  %723 = fsub double %704, %722\l  %724 = fsub double %723, %719\l  %725 = fsub double %724, %721\l  %726 = fadd double %722, %725\l  %727 = fmul double %713, %726\l  %728 = fadd double %714, %727\l  %729 = fsub double %728, %714\l  %730 = fsub double %727, %729\l  %731 = fmul double %728, %728\l  %732 = fneg double %731\l  %733 = tail call double @llvm.fma.f64(double %728, double %728, double %732)\l  %734 = fmul double %730, 2.000000e+00\l  %735 = tail call double @llvm.fma.f64(double %728, double %734, double %733)\l  %736 = fadd double %731, %735\l  %737 = fsub double %736, %731\l  %738 = fsub double %735, %737\l  %739 = tail call double @llvm.fma.f64(double %736, double\l... 0x3FBDEE674222DE17, double 0x3FBA6564968915A9)\l  %740 = tail call double @llvm.fma.f64(double %736, double %739, double\l... 0x3FBE25E43ABE935A)\l  %741 = tail call double @llvm.fma.f64(double %736, double %740, double\l... 0x3FC110EF47E6C9C2)\l  %742 = tail call double @llvm.fma.f64(double %736, double %741, double\l... 0x3FC3B13BCFA74449)\l  %743 = tail call double @llvm.fma.f64(double %736, double %742, double\l... 0x3FC745D171BF3C30)\l  %744 = tail call double @llvm.fma.f64(double %736, double %743, double\l... 0x3FCC71C71C7792CE)\l  %745 = tail call double @llvm.fma.f64(double %736, double %744, double\l... 0x3FD24924924920DA)\l  %746 = tail call double @llvm.fma.f64(double %736, double %745, double\l... 0x3FD999999999999C)\l  %747 = sitofp i32 %703 to double\l  %748 = fmul double %747, 0x3FE62E42FEFA39EF\l  %749 = fneg double %748\l  %750 = tail call double @llvm.fma.f64(double %747, double\l... 0x3FE62E42FEFA39EF, double %749)\l  %751 = tail call double @llvm.fma.f64(double %747, double\l... 0x3C7ABC9E3B39803F, double %750)\l  %752 = fadd double %748, %751\l  %753 = fsub double %752, %748\l  %754 = fsub double %751, %753\l  %755 = tail call double @llvm.amdgcn.ldexp.f64(double %728, i32 1)\l  %756 = tail call double @llvm.amdgcn.ldexp.f64(double %730, i32 1)\l  %757 = fmul double %728, %736\l  %758 = fneg double %757\l  %759 = tail call double @llvm.fma.f64(double %736, double %728, double %758)\l  %760 = tail call double @llvm.fma.f64(double %736, double %730, double %759)\l  %761 = tail call double @llvm.fma.f64(double %738, double %728, double %760)\l  %762 = fadd double %757, %761\l  %763 = fsub double %762, %757\l  %764 = fsub double %761, %763\l  %765 = fmul double %736, %746\l  %766 = fneg double %765\l  %767 = tail call double @llvm.fma.f64(double %736, double %746, double %766)\l  %768 = tail call double @llvm.fma.f64(double %738, double %746, double %767)\l  %769 = fadd double %765, %768\l  %770 = fsub double %769, %765\l  %771 = fsub double %768, %770\l  %772 = fadd double %769, 0x3FE5555555555555\l  %773 = fadd double %772, 0xBFE5555555555555\l  %774 = fsub double %769, %773\l  %775 = fadd double %771, 0x3C8543B0D5DF274D\l  %776 = fadd double %775, %774\l  %777 = fadd double %772, %776\l  %778 = fsub double %777, %772\l  %779 = fsub double %776, %778\l  %780 = fmul double %762, %777\l  %781 = fneg double %780\l  %782 = tail call double @llvm.fma.f64(double %762, double %777, double %781)\l  %783 = tail call double @llvm.fma.f64(double %762, double %779, double %782)\l  %784 = tail call double @llvm.fma.f64(double %764, double %777, double %783)\l  %785 = fadd double %780, %784\l  %786 = fsub double %785, %780\l  %787 = fsub double %784, %786\l  %788 = fadd double %755, %785\l  %789 = fsub double %788, %755\l  %790 = fsub double %785, %789\l  %791 = fadd double %756, %787\l  %792 = fadd double %791, %790\l  %793 = fadd double %788, %792\l  %794 = fsub double %793, %788\l  %795 = fsub double %792, %794\l  %796 = fadd double %752, %793\l  %797 = fsub double %796, %752\l  %798 = fsub double %796, %797\l  %799 = fsub double %752, %798\l  %800 = fsub double %793, %797\l  %801 = fadd double %800, %799\l  %802 = fadd double %754, %795\l  %803 = fsub double %802, %754\l  %804 = fsub double %802, %803\l  %805 = fsub double %754, %804\l  %806 = fsub double %795, %803\l  %807 = fadd double %806, %805\l  %808 = fadd double %802, %801\l  %809 = fadd double %796, %808\l  %810 = fsub double %809, %796\l  %811 = fsub double %808, %810\l  %812 = fadd double %807, %811\l  %813 = fadd double %809, %812\l  %814 = fsub double %813, %809\l  %815 = fsub double %812, %814\l  %816 = fmul double %22, %813\l  %817 = fneg double %816\l  %818 = tail call double @llvm.fma.f64(double %22, double %813, double %817)\l  %819 = tail call double @llvm.fma.f64(double %22, double %815, double %818)\l  %820 = fadd double %816, %819\l  %821 = fsub double %820, %816\l  %822 = fsub double %819, %821\l  %823 = tail call double @llvm.fabs.f64(double %816) #3\l  %824 = fcmp oeq double %823, 0x7FF0000000000000\l  %825 = select i1 %824, double %816, double %820\l  %826 = tail call double @llvm.fabs.f64(double %825) #3\l  %827 = fcmp oeq double %826, 0x7FF0000000000000\l  %828 = select i1 %827, double 0.000000e+00, double %822\l  %829 = fmul double %825, 0x3FF71547652B82FE\l  %830 = tail call double @llvm.rint.f64(double %829)\l  %831 = fneg double %830\l  %832 = tail call double @llvm.fma.f64(double %831, double\l... 0x3FE62E42FEFA39EF, double %825)\l  %833 = tail call double @llvm.fma.f64(double %831, double\l... 0x3C7ABC9E3B39803F, double %832)\l  %834 = tail call double @llvm.fma.f64(double %833, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %835 = tail call double @llvm.fma.f64(double %833, double %834, double\l... 0x3EC71DEE623FDE64)\l  %836 = tail call double @llvm.fma.f64(double %833, double %835, double\l... 0x3EFA01997C89E6B0)\l  %837 = tail call double @llvm.fma.f64(double %833, double %836, double\l... 0x3F2A01A014761F6E)\l  %838 = tail call double @llvm.fma.f64(double %833, double %837, double\l... 0x3F56C16C1852B7B0)\l  %839 = tail call double @llvm.fma.f64(double %833, double %838, double\l... 0x3F81111111122322)\l  %840 = tail call double @llvm.fma.f64(double %833, double %839, double\l... 0x3FA55555555502A1)\l  %841 = tail call double @llvm.fma.f64(double %833, double %840, double\l... 0x3FC5555555555511)\l  %842 = tail call double @llvm.fma.f64(double %833, double %841, double\l... 0x3FE000000000000B)\l  %843 = tail call double @llvm.fma.f64(double %833, double %842, double\l... 1.000000e+00)\l  %844 = tail call double @llvm.fma.f64(double %833, double %843, double\l... 1.000000e+00)\l  %845 = fptosi double %830 to i32\l  %846 = tail call double @llvm.amdgcn.ldexp.f64(double %844, i32 %845)\l  %847 = fcmp ogt double %825, 1.024000e+03\l  %848 = select i1 %847, double 0x7FF0000000000000, double %846\l  %849 = fcmp olt double %825, -1.075000e+03\l  %850 = select i1 %849, double 0.000000e+00, double %848\l  %851 = tail call double @llvm.fma.f64(double %850, double %828, double %850)\l  %852 = tail call double @llvm.fabs.f64(double %850) #3\l  %853 = fcmp oeq double %852, 0x7FF0000000000000\l  %854 = select i1 %853, double %850, double %851\l  %855 = fcmp olt double %696, 0.000000e+00\l  %856 = and i1 %58, %855\l  %857 = select i1 %856, double -0.000000e+00, double 0.000000e+00\l  %858 = tail call double @llvm.copysign.f64(double %854, double %857)\l  %859 = fcmp uge double %696, 0.000000e+00\l  %860 = select i1 %859, i1 true, i1 %59\l  %861 = select i1 %860, double %858, double 0x7FF8000000000000\l  %862 = fcmp oeq double %697, 1.000000e+00\l  %863 = fadd double %697, -1.000000e+00\l  %864 = bitcast double %863 to \<2 x i32\>\l  %865 = extractelement \<2 x i32\> %864, i64 1\l  %866 = xor i32 %865, %62\l  %867 = icmp sgt i32 %866, -1\l  %868 = select i1 %867, double 0x7FF0000000000000, double 0.000000e+00\l  %869 = select i1 %862, double %697, double %868\l  %870 = select i1 %60, double %869, double %861\l  %871 = fcmp oeq double %697, 0x7FF0000000000000\l  %872 = fcmp oeq double %696, 0.000000e+00\l  %873 = or i1 %872, %871\l  %874 = xor i1 %63, %872\l  %875 = select i1 %874, double 0.000000e+00, double 0x7FF0000000000000\l  %876 = select i1 %58, double %696, double 0.000000e+00\l  %877 = tail call double @llvm.copysign.f64(double %875, double %876)\l  %878 = select i1 %873, double %877, double %870\l  %879 = fcmp uno double %696, %22\l  %880 = fcmp oeq double %696, 1.000000e+00\l  %881 = or i1 %64, %880\l  %882 = fsub contract double 1.000000e+00, %878\l  %883 = select i1 %879, double 0x7FF8000000000000, double %882\l  %884 = select i1 %881, double 0.000000e+00, double %883\l  %885 = fmul contract double %508, %884\l  %886 = fmul contract double %884, %885\l  %887 = getelementptr inbounds double, double addrspace(1)* %1, i64 %93\l  store double %886, double addrspace(1)* %887, align 8, !tbaa !16\l  %888 = add i32 %90, %92\l  %889 = icmp slt i32 %888, %4\l  br i1 %889, label %91, label %890, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d97a20:s0 -> Node0x4d97960;
	Node0x4d97a20:s1 -> Node0x4d93ba0;
	Node0x4d93ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%890:\l890:                                              \l  ret void\l}"];
}
