digraph "CFG for '_Z20computePressure_CUDAPfS_iff' function" {
	label="CFG for '_Z20computePressure_CUDAPfS_iff' function";

	Node0x55af200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = shl i32 %6, 8\l  %13 = ashr exact i32 %12, 8\l  %14 = mul nsw i32 %13, %11\l  %15 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %16 = add i32 %14, %15\l  %17 = icmp ult i32 %16, %2\l  br i1 %17, label %18, label %184\l|{<s0>T|<s1>F}}"];
	Node0x55af200:s0 -> Node0x55b1290;
	Node0x55af200:s1 -> Node0x55b1320;
	Node0x55b1290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = fdiv contract float %21, %3\l  %23 = tail call float @llvm.fabs.f32(float %22)\l  %24 = tail call float @llvm.amdgcn.frexp.mant.f32(float %23)\l  %25 = fcmp olt float %24, 0x3FE5555560000000\l  %26 = zext i1 %25 to i32\l  %27 = tail call float @llvm.amdgcn.ldexp.f32(float %24, i32 %26)\l  %28 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %23)\l  %29 = sub nsw i32 %28, %26\l  %30 = fadd float %27, -1.000000e+00\l  %31 = fadd float %27, 1.000000e+00\l  %32 = fadd float %31, -1.000000e+00\l  %33 = fsub float %27, %32\l  %34 = tail call float @llvm.amdgcn.rcp.f32(float %31)\l  %35 = fmul float %30, %34\l  %36 = fmul float %31, %35\l  %37 = fneg float %36\l  %38 = tail call float @llvm.fma.f32(float %35, float %31, float %37)\l  %39 = tail call float @llvm.fma.f32(float %35, float %33, float %38)\l  %40 = fadd float %36, %39\l  %41 = fsub float %40, %36\l  %42 = fsub float %39, %41\l  %43 = fsub float %30, %40\l  %44 = fsub float %30, %43\l  %45 = fsub float %44, %40\l  %46 = fsub float %45, %42\l  %47 = fadd float %43, %46\l  %48 = fmul float %34, %47\l  %49 = fadd float %35, %48\l  %50 = fsub float %49, %35\l  %51 = fsub float %48, %50\l  %52 = fmul float %49, %49\l  %53 = fneg float %52\l  %54 = tail call float @llvm.fma.f32(float %49, float %49, float %53)\l  %55 = fmul float %51, 2.000000e+00\l  %56 = tail call float @llvm.fma.f32(float %49, float %55, float %54)\l  %57 = fadd float %52, %56\l  %58 = fsub float %57, %52\l  %59 = fsub float %56, %58\l  %60 = tail call float @llvm.fmuladd.f32(float %57, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %61 = tail call float @llvm.fmuladd.f32(float %57, float %60, float\l... 0x3FD999BDE0000000)\l  %62 = sitofp i32 %29 to float\l  %63 = fmul float %62, 0x3FE62E4300000000\l  %64 = fneg float %63\l  %65 = tail call float @llvm.fma.f32(float %62, float 0x3FE62E4300000000,\l... float %64)\l  %66 = tail call float @llvm.fma.f32(float %62, float 0xBE205C6100000000,\l... float %65)\l  %67 = fadd float %63, %66\l  %68 = fsub float %67, %63\l  %69 = fsub float %66, %68\l  %70 = tail call float @llvm.amdgcn.ldexp.f32(float %49, i32 1)\l  %71 = fmul float %49, %57\l  %72 = fneg float %71\l  %73 = tail call float @llvm.fma.f32(float %57, float %49, float %72)\l  %74 = tail call float @llvm.fma.f32(float %57, float %51, float %73)\l  %75 = tail call float @llvm.fma.f32(float %59, float %49, float %74)\l  %76 = fadd float %71, %75\l  %77 = fsub float %76, %71\l  %78 = fsub float %75, %77\l  %79 = fmul float %57, %61\l  %80 = fneg float %79\l  %81 = tail call float @llvm.fma.f32(float %57, float %61, float %80)\l  %82 = tail call float @llvm.fma.f32(float %59, float %61, float %81)\l  %83 = fadd float %79, %82\l  %84 = fsub float %83, %79\l  %85 = fsub float %82, %84\l  %86 = fadd float %83, 0x3FE5555540000000\l  %87 = fadd float %86, 0xBFE5555540000000\l  %88 = fsub float %83, %87\l  %89 = fadd float %85, 0x3E2E720200000000\l  %90 = fadd float %89, %88\l  %91 = fadd float %86, %90\l  %92 = fsub float %91, %86\l  %93 = fsub float %90, %92\l  %94 = fmul float %76, %91\l  %95 = fneg float %94\l  %96 = tail call float @llvm.fma.f32(float %76, float %91, float %95)\l  %97 = tail call float @llvm.fma.f32(float %76, float %93, float %96)\l  %98 = tail call float @llvm.fma.f32(float %78, float %91, float %97)\l  %99 = tail call float @llvm.amdgcn.ldexp.f32(float %51, i32 1)\l  %100 = fadd float %94, %98\l  %101 = fsub float %100, %94\l  %102 = fsub float %98, %101\l  %103 = fadd float %70, %100\l  %104 = fsub float %103, %70\l  %105 = fsub float %100, %104\l  %106 = fadd float %99, %102\l  %107 = fadd float %106, %105\l  %108 = fadd float %103, %107\l  %109 = fsub float %108, %103\l  %110 = fsub float %107, %109\l  %111 = fadd float %67, %108\l  %112 = fsub float %111, %67\l  %113 = fsub float %111, %112\l  %114 = fsub float %67, %113\l  %115 = fsub float %108, %112\l  %116 = fadd float %115, %114\l  %117 = fadd float %69, %110\l  %118 = fsub float %117, %69\l  %119 = fsub float %117, %118\l  %120 = fsub float %69, %119\l  %121 = fsub float %110, %118\l  %122 = fadd float %121, %120\l  %123 = fadd float %117, %116\l  %124 = fadd float %111, %123\l  %125 = fsub float %124, %111\l  %126 = fsub float %123, %125\l  %127 = fadd float %122, %126\l  %128 = fadd float %124, %127\l  %129 = fsub float %128, %124\l  %130 = fsub float %127, %129\l  %131 = fmul float %128, 7.000000e+00\l  %132 = fneg float %131\l  %133 = tail call float @llvm.fma.f32(float %128, float 7.000000e+00, float\l... %132)\l  %134 = tail call float @llvm.fma.f32(float %130, float 7.000000e+00, float\l... %133)\l  %135 = fadd float %131, %134\l  %136 = fsub float %135, %131\l  %137 = fsub float %134, %136\l  %138 = tail call float @llvm.fabs.f32(float %131) #3\l  %139 = fcmp oeq float %138, 0x7FF0000000000000\l  %140 = select i1 %139, float %131, float %135\l  %141 = tail call float @llvm.fabs.f32(float %140) #3\l  %142 = fcmp oeq float %141, 0x7FF0000000000000\l  %143 = select i1 %142, float 0.000000e+00, float %137\l  %144 = fcmp oeq float %140, 0x40562E4300000000\l  %145 = select i1 %144, float 0x3EE0000000000000, float 0.000000e+00\l  %146 = fsub float %140, %145\l  %147 = fadd float %145, %143\l  %148 = fmul float %146, 0x3FF7154760000000\l  %149 = tail call float @llvm.rint.f32(float %148)\l  %150 = fcmp ogt float %146, 0x40562E4300000000\l  %151 = fcmp olt float %146, 0xC059D1DA00000000\l  %152 = fneg float %148\l  %153 = tail call float @llvm.fma.f32(float %146, float 0x3FF7154760000000,\l... float %152)\l  %154 = tail call float @llvm.fma.f32(float %146, float 0x3E54AE0BE0000000,\l... float %153)\l  %155 = fsub float %148, %149\l  %156 = fadd float %154, %155\l  %157 = tail call float @llvm.exp2.f32(float %156)\l  %158 = fptosi float %149 to i32\l  %159 = tail call float @llvm.amdgcn.ldexp.f32(float %157, i32 %158)\l  %160 = select i1 %151, float 0.000000e+00, float %159\l  %161 = select i1 %150, float 0x7FF0000000000000, float %160\l  %162 = tail call float @llvm.fma.f32(float %161, float %147, float %161)\l  %163 = tail call float @llvm.fabs.f32(float %161) #3\l  %164 = fcmp oeq float %163, 0x7FF0000000000000\l  %165 = select i1 %164, float %161, float %162\l  %166 = fcmp olt float %22, 0.000000e+00\l  %167 = select i1 %166, float -0.000000e+00, float 0.000000e+00\l  %168 = tail call float @llvm.copysign.f32(float %165, float %167)\l  %169 = fcmp oeq float %23, 0x7FF0000000000000\l  %170 = fcmp oeq float %22, 0.000000e+00\l  %171 = or i1 %170, %169\l  %172 = select i1 %170, float 0.000000e+00, float 0x7FF0000000000000\l  %173 = tail call float @llvm.copysign.f32(float %172, float %22)\l  %174 = select i1 %171, float %173, float %168\l  %175 = fcmp uno float %22, 0.000000e+00\l  %176 = fcmp oeq float %22, 1.000000e+00\l  %177 = fadd contract float %174, -1.000000e+00\l  %178 = select i1 %175, float 0x7FF8000000000000, float %177\l  %179 = select i1 %176, float 0.000000e+00, float %178\l  %180 = fmul contract float %179, %4\l  %181 = getelementptr inbounds float, float addrspace(1)* %0, i64 %19\l  %182 = fcmp contract olt float %180, 0.000000e+00\l  %183 = select i1 %182, float 0.000000e+00, float %180\l  store float %183, float addrspace(1)* %181, align 4, !tbaa !7\l  br label %184\l}"];
	Node0x55b1290 -> Node0x55b1320;
	Node0x55b1320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%184:\l184:                                              \l  ret void\l}"];
}
