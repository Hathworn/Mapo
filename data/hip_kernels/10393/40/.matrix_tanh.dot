digraph "CFG for 'matrix_tanh' function" {
	label="CFG for 'matrix_tanh' function";

	Node0x574bcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %169\l|{<s0>T|<s1>F}}"];
	Node0x574bcb0:s0 -> Node0x574dbc0;
	Node0x574bcb0:s1 -> Node0x574dc50;
	Node0x574dbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fmul double %18, 0x3FF71547652B82FE\l  %20 = tail call double @llvm.rint.f64(double %19)\l  %21 = tail call double @llvm.fma.f64(double %20, double 0xBFE62E42FEFA3000,\l... double %18)\l  %22 = fadd double %21, 0.000000e+00\l  %23 = fsub double %21, %22\l  %24 = fadd double %23, 0.000000e+00\l  %25 = fmul double %20, 0x3D53DE6AF278E000\l  %26 = fsub double %22, %25\l  %27 = fsub double %22, %26\l  %28 = fsub double %27, %25\l  %29 = fadd double %24, %28\l  %30 = fadd double %26, %29\l  %31 = fsub double %30, %26\l  %32 = fsub double %29, %31\l  %33 = fmul double %20, 0x3AC9CC01F97B57A0\l  %34 = fsub double %30, %33\l  %35 = fsub double %30, %34\l  %36 = fsub double %35, %33\l  %37 = fadd double %32, %36\l  %38 = fadd double %34, %37\l  %39 = fsub double %38, %34\l  %40 = fsub double %37, %39\l  %41 = tail call double @llvm.fma.f64(double %38, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %42 = tail call double @llvm.fma.f64(double %38, double %41, double\l... 0x3EC71DEE623FDE64)\l  %43 = tail call double @llvm.fma.f64(double %38, double %42, double\l... 0x3EFA01997C89E6B0)\l  %44 = tail call double @llvm.fma.f64(double %38, double %43, double\l... 0x3F2A01A014761F6E)\l  %45 = tail call double @llvm.fma.f64(double %38, double %44, double\l... 0x3F56C16C1852B7B0)\l  %46 = tail call double @llvm.fma.f64(double %38, double %45, double\l... 0x3F81111111122322)\l  %47 = tail call double @llvm.fma.f64(double %38, double %46, double\l... 0x3FA55555555502A1)\l  %48 = tail call double @llvm.fma.f64(double %38, double %47, double\l... 0x3FC5555555555511)\l  %49 = tail call double @llvm.fma.f64(double %38, double %48, double\l... 0x3FE000000000000B)\l  %50 = fmul double %38, %38\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %38, double %38, double %51)\l  %53 = fmul double %40, 2.000000e+00\l  %54 = tail call double @llvm.fma.f64(double %38, double %53, double %52)\l  %55 = fadd double %50, %54\l  %56 = fsub double %55, %50\l  %57 = fsub double %54, %56\l  %58 = fmul double %55, %49\l  %59 = fneg double %58\l  %60 = tail call double @llvm.fma.f64(double %55, double %49, double %59)\l  %61 = tail call double @llvm.fma.f64(double %57, double %49, double %60)\l  %62 = fadd double %58, %61\l  %63 = fsub double %62, %58\l  %64 = fsub double %61, %63\l  %65 = fadd double %38, %62\l  %66 = fsub double %65, %38\l  %67 = fsub double %62, %66\l  %68 = fadd double %40, %64\l  %69 = fadd double %68, %67\l  %70 = fadd double %65, %69\l  %71 = fsub double %70, %65\l  %72 = fsub double %69, %71\l  %73 = fadd double %70, 1.000000e+00\l  %74 = fadd double %73, -1.000000e+00\l  %75 = fsub double %70, %74\l  %76 = fadd double %72, %75\l  %77 = fadd double %73, %76\l  %78 = fsub double %77, %73\l  %79 = fsub double %76, %78\l  %80 = fptosi double %20 to i32\l  %81 = tail call double @llvm.amdgcn.ldexp.f64(double %77, i32 %80)\l  %82 = tail call double @llvm.amdgcn.ldexp.f64(double %79, i32 %80)\l  %83 = tail call double @llvm.amdgcn.rcp.f64(double %81)\l  %84 = fneg double %81\l  %85 = tail call double @llvm.fma.f64(double %84, double %83, double\l... 1.000000e+00)\l  %86 = tail call double @llvm.fma.f64(double %85, double %83, double %83)\l  %87 = tail call double @llvm.fma.f64(double %84, double %86, double\l... 1.000000e+00)\l  %88 = tail call double @llvm.fma.f64(double %87, double %86, double %86)\l  %89 = fmul double %81, %88\l  %90 = fneg double %89\l  %91 = tail call double @llvm.fma.f64(double %88, double %81, double %90)\l  %92 = tail call double @llvm.fma.f64(double %88, double %82, double %91)\l  %93 = fadd double %89, %92\l  %94 = fsub double %93, %89\l  %95 = fsub double %92, %94\l  %96 = fsub double 1.000000e+00, %93\l  %97 = fsub double 1.000000e+00, %96\l  %98 = fsub double %97, %93\l  %99 = fsub double %98, %95\l  %100 = fadd double %96, %99\l  %101 = fsub double %100, %96\l  %102 = fsub double %99, %101\l  %103 = fmul double %88, %100\l  %104 = fmul double %81, %103\l  %105 = fneg double %104\l  %106 = tail call double @llvm.fma.f64(double %103, double %81, double %105)\l  %107 = tail call double @llvm.fma.f64(double %103, double %82, double %106)\l  %108 = fadd double %104, %107\l  %109 = fsub double %108, %104\l  %110 = fsub double %107, %109\l  %111 = fsub double %100, %108\l  %112 = fsub double %100, %111\l  %113 = fsub double %112, %108\l  %114 = fadd double %102, %113\l  %115 = fsub double %114, %110\l  %116 = fadd double %111, %115\l  %117 = fmul double %88, %116\l  %118 = fadd double %88, %103\l  %119 = fsub double %118, %88\l  %120 = fsub double %103, %119\l  %121 = fadd double %120, %117\l  %122 = fadd double %118, %121\l  %123 = fsub double %122, %118\l  %124 = fsub double %121, %123\l  %125 = fsub double %81, %122\l  %126 = fsub double %81, %125\l  %127 = fsub double %126, %122\l  %128 = fadd double %82, %127\l  %129 = fsub double %128, %124\l  %130 = fadd double %125, %129\l  %131 = fsub double %130, %125\l  %132 = fsub double %129, %131\l  %133 = fadd double %81, %122\l  %134 = fsub double %133, %81\l  %135 = fsub double %122, %134\l  %136 = fadd double %82, %124\l  %137 = fadd double %136, %135\l  %138 = fadd double %133, %137\l  %139 = fsub double %138, %133\l  %140 = fsub double %137, %139\l  %141 = tail call double @llvm.amdgcn.rcp.f64(double %138)\l  %142 = fneg double %138\l  %143 = tail call double @llvm.fma.f64(double %142, double %141, double\l... 1.000000e+00)\l  %144 = tail call double @llvm.fma.f64(double %143, double %141, double %141)\l  %145 = tail call double @llvm.fma.f64(double %142, double %144, double\l... 1.000000e+00)\l  %146 = tail call double @llvm.fma.f64(double %145, double %144, double %144)\l  %147 = fmul double %130, %146\l  %148 = fmul double %138, %147\l  %149 = fneg double %148\l  %150 = tail call double @llvm.fma.f64(double %147, double %138, double %149)\l  %151 = tail call double @llvm.fma.f64(double %147, double %140, double %150)\l  %152 = fadd double %148, %151\l  %153 = fsub double %152, %148\l  %154 = fsub double %151, %153\l  %155 = fsub double %130, %152\l  %156 = fsub double %130, %155\l  %157 = fsub double %156, %152\l  %158 = fsub double %157, %154\l  %159 = fadd double %132, %158\l  %160 = fadd double %155, %159\l  %161 = fmul double %146, %160\l  %162 = fadd double %147, %161\l  %163 = fcmp ogt double %18, 1.906250e+01\l  %164 = select i1 %163, double 1.000000e+00, double %162\l  %165 = fcmp olt double %18, 0x3E40000000000000\l  %166 = select i1 %165, double %18, double %164\l  %167 = tail call double @llvm.copysign.f64(double %166, double %17)\l  %168 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  store double %167, double addrspace(1)* %168, align 8, !tbaa !7\l  br label %169\l}"];
	Node0x574dbc0 -> Node0x574dc50;
	Node0x574dc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%169:\l169:                                              \l  ret void\l}"];
}
