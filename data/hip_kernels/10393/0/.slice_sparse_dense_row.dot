digraph "CFG for 'slice_sparse_dense_row' function" {
	label="CFG for 'slice_sparse_dense_row' function";

	Node0x538ebb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = add i32 %16, %17\l  %19 = add nsw i32 %18, %4\l  %20 = icmp sgt i32 %19, %5\l  br i1 %20, label %50, label %21\l|{<s0>T|<s1>F}}"];
	Node0x538ebb0:s0 -> Node0x53916d0;
	Node0x538ebb0:s1 -> Node0x5391760;
	Node0x5391760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  %22 = sext i32 %19 to i64\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %22\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %25 = add nsw i32 %19, 1\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %29 = icmp slt i32 %24, %28\l  br i1 %29, label %30, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5391760:s0 -> Node0x5392aa0;
	Node0x5391760:s1 -> Node0x53916d0;
	Node0x5392aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%30:\l30:                                               \l  %31 = mul nsw i32 %18, %8\l  %32 = sub i32 %31, %6\l  br label %33\l}"];
	Node0x5392aa0 -> Node0x5391140;
	Node0x5391140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %24, %30 ], [ %48, %47 ]\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %35\l  %37 = load i32, i32 addrspace(1)* %36, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %38 = icmp slt i32 %37, %6\l  %39 = icmp sgt i32 %37, %7\l  %40 = select i1 %38, i1 true, i1 %39\l  br i1 %40, label %47, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5391140:s0 -> Node0x5392f10;
	Node0x5391140:s1 -> Node0x5393410;
	Node0x5393410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds double, double addrspace(1)* %0, i64 %35\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !11\l  %44 = add i32 %32, %37\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %3, i64 %45\l  store double %43, double addrspace(1)* %46, align 8, !tbaa !11\l  br label %47\l}"];
	Node0x5393410 -> Node0x5392f10;
	Node0x5392f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = add nsw i32 %34, 1\l  %49 = icmp slt i32 %48, %28\l  br i1 %49, label %33, label %50, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5392f10:s0 -> Node0x5391140;
	Node0x5392f10:s1 -> Node0x53916d0;
	Node0x53916d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%50:\l50:                                               \l  ret void\l}"];
}
