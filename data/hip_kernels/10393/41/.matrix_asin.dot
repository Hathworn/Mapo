digraph "CFG for 'matrix_asin' function" {
	label="CFG for 'matrix_asin' function";

	Node0x5602390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5602390:s0 -> Node0x56042a0;
	Node0x5602390:s1 -> Node0x5604330;
	Node0x56042a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fcmp oge double %18, 5.000000e-01\l  %20 = tail call double @llvm.fma.f64(double %18, double -5.000000e-01,\l... double 5.000000e-01)\l  %21 = fmul double %17, %17\l  %22 = select i1 %19, double %20, double %21\l  %23 = tail call double @llvm.fma.f64(double %22, double 0x3FA059859FEA6A70,\l... double 0xBF90A5A378A05EAF)\l  %24 = tail call double @llvm.fma.f64(double %22, double %23, double\l... 0x3F94052137024D6A)\l  %25 = tail call double @llvm.fma.f64(double %22, double %24, double\l... 0x3F7AB3A098A70509)\l  %26 = tail call double @llvm.fma.f64(double %22, double %25, double\l... 0x3F88ED60A300C8D2)\l  %27 = tail call double @llvm.fma.f64(double %22, double %26, double\l... 0x3F8C6FA84B77012B)\l  %28 = tail call double @llvm.fma.f64(double %22, double %27, double\l... 0x3F91C6C111DCCB70)\l  %29 = tail call double @llvm.fma.f64(double %22, double %28, double\l... 0x3F96E89F0A0ADACF)\l  %30 = tail call double @llvm.fma.f64(double %22, double %29, double\l... 0x3F9F1C72C668963F)\l  %31 = tail call double @llvm.fma.f64(double %22, double %30, double\l... 0x3FA6DB6DB41CE4BD)\l  %32 = tail call double @llvm.fma.f64(double %22, double %31, double\l... 0x3FB333333336FD5B)\l  %33 = tail call double @llvm.fma.f64(double %22, double %32, double\l... 0x3FC5555555555380)\l  %34 = fmul double %22, %33\l  %35 = tail call double @llvm.fma.f64(double %18, double %34, double %18)\l  br i1 %19, label %36, label %95\l|{<s0>T|<s1>F}}"];
	Node0x56042a0:s0 -> Node0x5607200;
	Node0x56042a0:s1 -> Node0x5607290;
	Node0x5607200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%36:\l36:                                               \l  %37 = tail call double @llvm.amdgcn.rsq.f64(double %22)\l  %38 = fmul double %22, %37\l  %39 = fmul double %37, 5.000000e-01\l  %40 = fneg double %39\l  %41 = tail call double @llvm.fma.f64(double %40, double %38, double\l... 5.000000e-01)\l  %42 = tail call double @llvm.fma.f64(double %39, double %41, double %39)\l  %43 = tail call double @llvm.fma.f64(double %38, double %41, double %38)\l  %44 = fneg double %43\l  %45 = tail call double @llvm.fma.f64(double %44, double %43, double %22)\l  %46 = tail call double @llvm.fma.f64(double %45, double %42, double %43)\l  %47 = fcmp oeq double %22, 0.000000e+00\l  %48 = select i1 %47, double %22, double %46\l  %49 = fmul double %48, %48\l  %50 = fneg double %49\l  %51 = tail call double @llvm.fma.f64(double %48, double %48, double %50)\l  %52 = fsub double %22, %49\l  %53 = fsub double %22, %52\l  %54 = fsub double %53, %49\l  %55 = fsub double %54, %51\l  %56 = fadd double %52, %55\l  %57 = fmul double %48, 2.000000e+00\l  %58 = tail call double @llvm.amdgcn.rcp.f64(double %57)\l  %59 = fneg double %57\l  %60 = tail call double @llvm.fma.f64(double %59, double %58, double\l... 1.000000e+00)\l  %61 = tail call double @llvm.fma.f64(double %60, double %58, double %58)\l  %62 = tail call double @llvm.fma.f64(double %59, double %61, double\l... 1.000000e+00)\l  %63 = tail call double @llvm.fma.f64(double %62, double %61, double %61)\l  %64 = fmul double %56, %63\l  %65 = tail call double @llvm.fma.f64(double %59, double %64, double %56)\l  %66 = tail call double @llvm.fma.f64(double %65, double %63, double %64)\l  %67 = select i1 %47, double 0.000000e+00, double %66\l  %68 = fadd double %48, %67\l  %69 = fsub double %68, %48\l  %70 = fsub double %67, %69\l  %71 = fmul double %34, %68\l  %72 = fneg double %71\l  %73 = tail call double @llvm.fma.f64(double %68, double %34, double %72)\l  %74 = tail call double @llvm.fma.f64(double %70, double %34, double %73)\l  %75 = fadd double %71, %74\l  %76 = fsub double %75, %71\l  %77 = fsub double %74, %76\l  %78 = fadd double %68, %75\l  %79 = fsub double %78, %68\l  %80 = fsub double %75, %79\l  %81 = fadd double %70, %77\l  %82 = fadd double %81, %80\l  %83 = fadd double %78, %82\l  %84 = fsub double %83, %78\l  %85 = fsub double %82, %84\l  %86 = fsub double 0x3FE921FB54442D18, %83\l  %87 = fsub double 0x3FE921FB54442D18, %86\l  %88 = fsub double %87, %83\l  %89 = fadd double %88, 0x3C81A62633145C07\l  %90 = fsub double %89, %85\l  %91 = fadd double %86, %90\l  %92 = fadd double %91, %91\l  %93 = fcmp oeq double %18, 1.000000e+00\l  %94 = select i1 %93, double 0x3FF921FB54442D18, double %92\l  br label %95\l}"];
	Node0x5607200 -> Node0x5607290;
	Node0x5607290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%95:\l95:                                               \l  %96 = phi double [ %94, %36 ], [ %35, %14 ]\l  %97 = tail call double @llvm.copysign.f64(double %96, double %17)\l  %98 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  store double %97, double addrspace(1)* %98, align 8, !tbaa !7\l  br label %99\l}"];
	Node0x5607290 -> Node0x5604330;
	Node0x5604330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  ret void\l}"];
}
