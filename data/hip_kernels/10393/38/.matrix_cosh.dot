digraph "CFG for 'matrix_cosh' function" {
	label="CFG for 'matrix_cosh' function";

	Node0x5a19820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  br i1 %13, label %14, label %146\l|{<s0>T|<s1>F}}"];
	Node0x5a19820:s0 -> Node0x5a1b730;
	Node0x5a19820:s1 -> Node0x5a1b7c0;
	Node0x5a1b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds double, double addrspace(1)* %0, i64 %15\l  %17 = load double, double addrspace(1)* %16, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = tail call double @llvm.fabs.f64(double %17)\l  %19 = fadd double %18, 0xBFE62E42FEFA39EF\l  %20 = fsub double %19, %18\l  %21 = fsub double %20, %19\l  %22 = fadd double %18, %21\l  %23 = fadd double %20, 0x3FE62E42FEFA39EF\l  %24 = fsub double %22, %23\l  %25 = fadd double %24, 0xBC7ABC9E3B39803F\l  %26 = fadd double %19, %25\l  %27 = fsub double %26, %19\l  %28 = fsub double %25, %27\l  %29 = fmul double %26, 0x3FF71547652B82FE\l  %30 = tail call double @llvm.rint.f64(double %29)\l  %31 = tail call double @llvm.fma.f64(double %30, double 0xBFE62E42FEFA3000,\l... double %26)\l  %32 = fadd double %28, %31\l  %33 = fsub double %32, %31\l  %34 = fsub double %28, %33\l  %35 = fmul double %30, 0x3D53DE6AF278E000\l  %36 = fsub double %32, %35\l  %37 = fsub double %32, %36\l  %38 = fsub double %37, %35\l  %39 = fadd double %34, %38\l  %40 = fadd double %36, %39\l  %41 = fsub double %40, %36\l  %42 = fsub double %39, %41\l  %43 = fmul double %30, 0x3AC9CC01F97B57A0\l  %44 = fsub double %40, %43\l  %45 = fsub double %40, %44\l  %46 = fsub double %45, %43\l  %47 = fadd double %42, %46\l  %48 = fadd double %44, %47\l  %49 = fsub double %48, %44\l  %50 = fsub double %47, %49\l  %51 = tail call double @llvm.fma.f64(double %48, double 0x3E5ADE156A5DCB37,\l... double 0x3E928AF3FCA7AB0C)\l  %52 = tail call double @llvm.fma.f64(double %48, double %51, double\l... 0x3EC71DEE623FDE64)\l  %53 = tail call double @llvm.fma.f64(double %48, double %52, double\l... 0x3EFA01997C89E6B0)\l  %54 = tail call double @llvm.fma.f64(double %48, double %53, double\l... 0x3F2A01A014761F6E)\l  %55 = tail call double @llvm.fma.f64(double %48, double %54, double\l... 0x3F56C16C1852B7B0)\l  %56 = tail call double @llvm.fma.f64(double %48, double %55, double\l... 0x3F81111111122322)\l  %57 = tail call double @llvm.fma.f64(double %48, double %56, double\l... 0x3FA55555555502A1)\l  %58 = tail call double @llvm.fma.f64(double %48, double %57, double\l... 0x3FC5555555555511)\l  %59 = tail call double @llvm.fma.f64(double %48, double %58, double\l... 0x3FE000000000000B)\l  %60 = fmul double %48, %48\l  %61 = fneg double %60\l  %62 = tail call double @llvm.fma.f64(double %48, double %48, double %61)\l  %63 = fmul double %50, 2.000000e+00\l  %64 = tail call double @llvm.fma.f64(double %48, double %63, double %62)\l  %65 = fadd double %60, %64\l  %66 = fsub double %65, %60\l  %67 = fsub double %64, %66\l  %68 = fmul double %65, %59\l  %69 = fneg double %68\l  %70 = tail call double @llvm.fma.f64(double %65, double %59, double %69)\l  %71 = tail call double @llvm.fma.f64(double %67, double %59, double %70)\l  %72 = fadd double %68, %71\l  %73 = fsub double %72, %68\l  %74 = fsub double %71, %73\l  %75 = fadd double %48, %72\l  %76 = fsub double %75, %48\l  %77 = fsub double %72, %76\l  %78 = fadd double %50, %74\l  %79 = fadd double %78, %77\l  %80 = fadd double %75, %79\l  %81 = fsub double %80, %75\l  %82 = fsub double %79, %81\l  %83 = fadd double %80, 1.000000e+00\l  %84 = fadd double %83, -1.000000e+00\l  %85 = fsub double %80, %84\l  %86 = fadd double %82, %85\l  %87 = fadd double %83, %86\l  %88 = fsub double %87, %83\l  %89 = fsub double %86, %88\l  %90 = fptosi double %30 to i32\l  %91 = tail call double @llvm.amdgcn.ldexp.f64(double %87, i32 %90)\l  %92 = tail call double @llvm.amdgcn.ldexp.f64(double %89, i32 %90)\l  %93 = tail call double @llvm.amdgcn.rcp.f64(double %91)\l  %94 = fneg double %91\l  %95 = tail call double @llvm.fma.f64(double %94, double %93, double\l... 1.000000e+00)\l  %96 = tail call double @llvm.fma.f64(double %95, double %93, double %93)\l  %97 = tail call double @llvm.fma.f64(double %94, double %96, double\l... 1.000000e+00)\l  %98 = tail call double @llvm.fma.f64(double %97, double %96, double %96)\l  %99 = fmul double %91, %98\l  %100 = fneg double %99\l  %101 = tail call double @llvm.fma.f64(double %98, double %91, double %100)\l  %102 = tail call double @llvm.fma.f64(double %98, double %92, double %101)\l  %103 = fadd double %99, %102\l  %104 = fsub double %103, %99\l  %105 = fsub double %102, %104\l  %106 = fsub double 1.000000e+00, %103\l  %107 = fsub double 1.000000e+00, %106\l  %108 = fsub double %107, %103\l  %109 = fsub double %108, %105\l  %110 = fadd double %106, %109\l  %111 = fsub double %110, %106\l  %112 = fsub double %109, %111\l  %113 = fmul double %98, %110\l  %114 = fmul double %91, %113\l  %115 = fneg double %114\l  %116 = tail call double @llvm.fma.f64(double %113, double %91, double %115)\l  %117 = tail call double @llvm.fma.f64(double %113, double %92, double %116)\l  %118 = fadd double %114, %117\l  %119 = fsub double %118, %114\l  %120 = fsub double %117, %119\l  %121 = fsub double %110, %118\l  %122 = fsub double %110, %121\l  %123 = fsub double %122, %118\l  %124 = fadd double %112, %123\l  %125 = fsub double %124, %120\l  %126 = fadd double %121, %125\l  %127 = fmul double %98, %126\l  %128 = fadd double %98, %113\l  %129 = fsub double %128, %98\l  %130 = fsub double %113, %129\l  %131 = fadd double %130, %127\l  %132 = fadd double %128, %131\l  %133 = fsub double %132, %128\l  %134 = fsub double %131, %133\l  %135 = tail call double @llvm.amdgcn.ldexp.f64(double %132, i32 -2)\l  %136 = tail call double @llvm.amdgcn.ldexp.f64(double %134, i32 -2)\l  %137 = fadd double %91, %135\l  %138 = fsub double %137, %91\l  %139 = fsub double %135, %138\l  %140 = fadd double %92, %136\l  %141 = fadd double %140, %139\l  %142 = fadd double %137, %141\l  %143 = fcmp oge double %18, 0x408633CE8FB9F87E\l  %144 = select i1 %143, double 0x7FF0000000000000, double %142\l  %145 = getelementptr inbounds double, double addrspace(1)* %1, i64 %15\l  store double %144, double addrspace(1)* %145, align 8, !tbaa !7\l  br label %146\l}"];
	Node0x5a1b730 -> Node0x5a1b7c0;
	Node0x5a1b7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%146:\l146:                                              \l  ret void\l}"];
}
