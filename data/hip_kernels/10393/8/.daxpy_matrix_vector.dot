digraph "CFG for 'daxpy_matrix_vector' function" {
	label="CFG for 'daxpy_matrix_vector' function";

	Node0x63f8370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = freeze i32 %17\l  %19 = freeze i32 %5\l  %20 = sdiv i32 %18, %19\l  %21 = mul i32 %20, %19\l  %22 = sub i32 %18, %21\l  %23 = icmp slt i32 %20, %4\l  %24 = icmp sgt i32 %5, -1\l  %25 = and i1 %24, %23\l  br i1 %25, label %26, label %40\l|{<s0>T|<s1>F}}"];
	Node0x63f8370:s0 -> Node0x63fa650;
	Node0x63f8370:s1 -> Node0x63fa6e0;
	Node0x63fa650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%26:\l26:                                               \l  %27 = mul nsw i32 %20, %5\l  %28 = add nsw i32 %27, %22\l  %29 = icmp eq i32 %6, 1\l  %30 = sext i32 %28 to i64\l  %31 = getelementptr inbounds double, double addrspace(1)* %0, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !7\l  %33 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  %34 = select i1 %29, i32 %22, i32 %20\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds double, double addrspace(1)* %1, i64 %35\l  %37 = load double, double addrspace(1)* %36, align 8, !tbaa !7\l  %38 = fmul contract double %37, %2\l  %39 = fadd contract double %32, %38\l  store double %39, double addrspace(1)* %33, align 8, !tbaa !7\l  br label %40\l}"];
	Node0x63fa650 -> Node0x63fa6e0;
	Node0x63fa6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  ret void\l}"];
}
