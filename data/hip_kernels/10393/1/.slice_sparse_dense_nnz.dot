digraph "CFG for 'slice_sparse_dense_nnz' function" {
	label="CFG for 'slice_sparse_dense_nnz' function";

	Node0x5e34bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !4, !invariant.load !5\l  %15 = zext i16 %14 to i32\l  %16 = mul i32 %10, %15\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %18 = sext i32 %4 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = add i32 %20, %17\l  %22 = add i32 %21, %16\l  %23 = add nsw i32 %5, 1\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %27 = icmp slt i32 %22, %26\l  br i1 %27, label %28, label %51\l|{<s0>T|<s1>F}}"];
	Node0x5e34bb0:s0 -> Node0x5e38880;
	Node0x5e34bb0:s1 -> Node0x5e38910;
	Node0x5e38880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  %29 = sext i32 %22 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = icmp slt i32 %31, %6\l  %33 = icmp sgt i32 %31, %7\l  %34 = select i1 %32, i1 true, i1 %33\l  br i1 %34, label %51, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5e38880:s0 -> Node0x5e38910;
	Node0x5e38880:s1 -> Node0x5e371d0;
	Node0x5e371d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i32 [ %37, %35 ], [ %4, %28 ]\l  %37 = add nsw i32 %36, 1\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %38\l  %40 = load i32, i32 addrspace(1)* %39, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %41 = icmp sgt i32 %40, %22\l  br i1 %41, label %42, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5e371d0:s0 -> Node0x5e39390;
	Node0x5e371d0:s1 -> Node0x5e371d0;
	Node0x5e39390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !13,\l... !amdgpu.noclobber !5\l  %45 = sub nsw i32 %36, %4\l  %46 = mul nsw i32 %45, %8\l  %47 = sub i32 %31, %6\l  %48 = add nsw i32 %47, %46\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %3, i64 %49\l  store double %44, double addrspace(1)* %50, align 8, !tbaa !13\l  br label %51\l}"];
	Node0x5e39390 -> Node0x5e38910;
	Node0x5e38910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%51:\l51:                                               \l  ret void\l}"];
}
