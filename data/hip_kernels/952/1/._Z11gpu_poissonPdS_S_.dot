digraph "CFG for '_Z11gpu_poissonPdS_S_' function" {
	label="CFG for '_Z11gpu_poissonPdS_S_' function";

	Node0x5f7aa30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add nuw nsw i32 %14, 1\l  %16 = add nuw nsw i32 %12, 1\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = add i32 %4, %20\l  %22 = urem i32 %21, 101\l  %23 = add i32 %4, 100\l  %24 = urem i32 %23, 101\l  %25 = mul i32 %4, 122\l  %26 = add i32 %13, %25\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds double, double addrspace(1)* %1, i64 %27\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %30 = mul nuw nsw i32 %15, 63\l  %31 = add nuw nsw i32 %30, %16\l  %32 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %31\l  store double %29, double addrspace(3)* %32, align 8, !tbaa !7\l  %33 = icmp eq i32 %12, 0\l  br i1 %33, label %34, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5f7aa30:s0 -> Node0x5f7ce80;
	Node0x5f7aa30:s1 -> Node0x5f7ef20;
	Node0x5f7ce80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%34:\l34:                                               \l  %35 = add i32 %13, 121\l  %36 = urem i32 %35, 122\l  %37 = add i32 %13, %10\l  %38 = urem i32 %37, 122\l  %39 = add i32 %36, %25\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %43 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %30\l  store double %42, double addrspace(3)* %43, align 8, !tbaa !7\l  %44 = add i32 %38, %25\l  %45 = zext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %1, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = add nuw nsw i32 %31, %10\l  %49 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %48\l  store double %47, double addrspace(3)* %49, align 8, !tbaa !7\l  br label %50\l}"];
	Node0x5f7ce80 -> Node0x5f7ef20;
	Node0x5f7ef20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = icmp eq i32 %14, 0\l  br i1 %51, label %52, label %68\l|{<s0>T|<s1>F}}"];
	Node0x5f7ef20:s0 -> Node0x5f7fba0;
	Node0x5f7ef20:s1 -> Node0x5f7fbf0;
	Node0x5f7fba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%52:\l52:                                               \l  %53 = mul nuw nsw i32 %24, 122\l  %54 = add i32 %13, %53\l  %55 = zext i32 %54 to i64\l  %56 = getelementptr inbounds double, double addrspace(1)* %1, i64 %55\l  %57 = load double, double addrspace(1)* %56, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %58 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %16\l  store double %57, double addrspace(3)* %58, align 8, !tbaa !7\l  %59 = mul nuw nsw i32 %22, 122\l  %60 = add i32 %59, %13\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds double, double addrspace(1)* %1, i64 %61\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = add nuw nsw i32 %15, %20\l  %65 = mul nuw nsw i32 %64, 63\l  %66 = add nuw nsw i32 %65, %16\l  %67 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %66\l  store double %63, double addrspace(3)* %67, align 8, !tbaa !7\l  br label %68\l}"];
	Node0x5f7fba0 -> Node0x5f7fbf0;
	Node0x5f7fbf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  switch i32 %4, label %77 [\l    i32 0, label %69\l    i32 100, label %73\l  ]\l|{<s0>def|<s1>0|<s2>100}}"];
	Node0x5f7fbf0:s0 -> Node0x5f80990;
	Node0x5f7fbf0:s1 -> Node0x5f809e0;
	Node0x5f7fbf0:s2 -> Node0x5f80a30;
	Node0x5f809e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%69:\l69:                                               \l  %70 = load double, double addrspace(4)* @voltage, align 8, !tbaa !7\l  %71 = zext i32 %13 to i64\l  %72 = getelementptr inbounds double, double addrspace(1)* %1, i64 %71\l  store double %70, double addrspace(1)* %72, align 8, !tbaa !7\l  br label %108\l}"];
	Node0x5f809e0 -> Node0x5f80df0;
	Node0x5f80a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%73:\l73:                                               \l  %74 = add i32 %13, 12200\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %1, i64 %75\l  store double 0.000000e+00, double addrspace(1)* %76, align 8, !tbaa !7\l  br label %108\l}"];
	Node0x5f80a30 -> Node0x5f80df0;
	Node0x5f80990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%77:\l77:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = getelementptr inbounds double, double addrspace(1)* %0, i64 %27\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %80 = load double, double addrspace(3)* %32, align 8, !tbaa !7\l  %81 = add nuw nsw i32 %30, %12\l  %82 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %81\l  %83 = load double, double addrspace(3)* %82, align 8, !tbaa !7\l  %84 = add nuw nsw i32 %81, 2\l  %85 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %84\l  %86 = load double, double addrspace(3)* %85, align 8, !tbaa !7\l  %87 = mul nuw nsw i32 %14, 63\l  %88 = add nuw nsw i32 %87, 126\l  %89 = add nuw nsw i32 %88, %16\l  %90 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %89\l  %91 = load double, double addrspace(3)* %90, align 8, !tbaa !7\l  %92 = add nuw nsw i32 %87, %16\l  %93 = getelementptr inbounds [189 x double], [189 x double] addrspace(3)*\l... @_ZZ11gpu_poissonPdS_S_E4s_in, i32 0, i32 %92\l  %94 = load double, double addrspace(3)* %93, align 8, !tbaa !7\l  %95 = load double, double addrspace(4)* @eps, align 8, !tbaa !7\l  %96 = fdiv contract double %79, %95\l  %97 = load double, double addrspace(4)* @dx, align 8, !tbaa !7\l  %98 = fmul contract double %96, %97\l  %99 = fmul contract double %97, %98\l  %100 = fadd contract double %83, %86\l  %101 = fadd contract double %100, %91\l  %102 = fadd contract double %101, %94\l  %103 = fadd contract double %102, %99\l  %104 = fmul contract double %103, 2.500000e-01\l  %105 = fsub contract double %104, %80\l  %106 = tail call double @llvm.fabs.f64(double %105)\l  %107 = getelementptr inbounds double, double addrspace(1)* %2, i64 %27\l  store double %106, double addrspace(1)* %107, align 8, !tbaa !7\l  store double %104, double addrspace(1)* %28, align 8, !tbaa !7\l  br label %108\l}"];
	Node0x5f80990 -> Node0x5f80df0;
	Node0x5f80df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  ret void\l}"];
}
