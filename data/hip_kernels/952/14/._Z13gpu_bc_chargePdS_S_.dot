digraph "CFG for '_Z13gpu_bc_chargePdS_S_' function" {
	label="CFG for '_Z13gpu_bc_chargePdS_S_' function";

	Node0x46b6f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  store i32 0, i32 addrspace(1)* @perturb, align 4, !tbaa !7\l  %14 = icmp eq i32 %13, 0\l  br i1 %14, label %15, label %74\l|{<s0>T|<s1>F}}"];
	Node0x46b6f40:s0 -> Node0x46b8be0;
	Node0x46b6f40:s1 -> Node0x46b8c70;
	Node0x46b8be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%15:\l15:                                               \l  %16 = load double, double addrspace(4)* @charge0, align 8, !tbaa !11\l  %17 = fmul contract double %16, 2.000000e+00\l  %18 = load double, double addrspace(4)* @w0, align 8, !tbaa !11\l  %19 = fmul contract double %17, %18\l  %20 = load double, double addrspace(4)* @ws, align 8, !tbaa !11\l  %21 = fmul contract double %17, %20\l  %22 = load double, double addrspace(4)* @wd, align 8, !tbaa !11\l  %23 = fmul contract double %17, %22\l  %24 = zext i32 %12 to i64\l  %25 = getelementptr inbounds double, double addrspace(1)* %2, i64 %24\l  %26 = load double, double addrspace(1)* %25, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %27 = add i32 %12, 12322\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %31 = add i32 %12, 24644\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds double, double addrspace(1)* %2, i64 %32\l  %34 = load double, double addrspace(1)* %33, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %35 = add i32 %12, 36966\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds double, double addrspace(1)* %2, i64 %36\l  %38 = load double, double addrspace(1)* %37, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %39 = add i32 %12, 49288\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds double, double addrspace(1)* %2, i64 %40\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %43 = add i32 %12, 61610\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds double, double addrspace(1)* %2, i64 %44\l  %46 = load double, double addrspace(1)* %45, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %47 = add i32 %12, 73932\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds double, double addrspace(1)* %2, i64 %48\l  %50 = load double, double addrspace(1)* %49, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %51 = add i32 %12, 86254\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds double, double addrspace(1)* %2, i64 %52\l  %54 = load double, double addrspace(1)* %53, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %55 = getelementptr inbounds double, double addrspace(1)* %0, i64 %24\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !11,\l... !amdgpu.noclobber !5\l  %57 = fsub contract double %19, %56\l  store double %57, double addrspace(1)* %55, align 8, !tbaa !11\l  %58 = fsub contract double %21, %26\l  %59 = getelementptr inbounds double, double addrspace(1)* %1, i64 %32\l  store double %58, double addrspace(1)* %59, align 8, !tbaa !11\l  %60 = fsub contract double %21, %30\l  %61 = getelementptr inbounds double, double addrspace(1)* %1, i64 %36\l  store double %60, double addrspace(1)* %61, align 8, !tbaa !11\l  %62 = fsub contract double %21, %34\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %24\l  store double %62, double addrspace(1)* %63, align 8, !tbaa !11\l  %64 = fsub contract double %21, %38\l  %65 = getelementptr inbounds double, double addrspace(1)* %1, i64 %28\l  store double %64, double addrspace(1)* %65, align 8, !tbaa !11\l  %66 = fsub contract double %23, %42\l  %67 = getelementptr inbounds double, double addrspace(1)* %1, i64 %48\l  store double %66, double addrspace(1)* %67, align 8, !tbaa !11\l  %68 = fsub contract double %23, %46\l  %69 = getelementptr inbounds double, double addrspace(1)* %1, i64 %52\l  store double %68, double addrspace(1)* %69, align 8, !tbaa !11\l  %70 = fsub contract double %23, %50\l  %71 = getelementptr inbounds double, double addrspace(1)* %1, i64 %40\l  store double %70, double addrspace(1)* %71, align 8, !tbaa !11\l  %72 = fsub contract double %23, %54\l  %73 = getelementptr inbounds double, double addrspace(1)* %1, i64 %44\l  store double %72, double addrspace(1)* %73, align 8, !tbaa !11\l  br label %74\l}"];
	Node0x46b8be0 -> Node0x46b8c70;
	Node0x46b8c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  ret void\l}"];
}
