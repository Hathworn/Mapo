digraph "CFG for '_Z28rearrangePopulationWithRangePfS_Pi' function" {
	label="CFG for '_Z28rearrangePopulationWithRangePfS_Pi' function";

	Node0x4f72f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = bitcast i32 addrspace(1)* %2 to \<2 x i32\> addrspace(1)*\l  %14 = load \<2 x i32\>, \<2 x i32\> addrspace(1)* %13, align 4, !tbaa !7\l  %15 = extractelement \<2 x i32\> %14, i64 0\l  %16 = extractelement \<2 x i32\> %14, i64 1\l  %17 = icmp slt i32 %16, %15\l  br i1 %17, label %84, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4f72f80:s0 -> Node0x4f758c0;
	Node0x4f72f80:s1 -> Node0x4f75950;
	Node0x4f75950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%18:\l18:                                               \l  %19 = sub i32 1, %15\l  %20 = add i32 %19, %16\l  %21 = sdiv i32 %20, 2\l  %22 = icmp sgt i32 %12, %21\l  br i1 %22, label %84, label %23\l|{<s0>T|<s1>F}}"];
	Node0x4f75950:s0 -> Node0x4f758c0;
	Node0x4f75950:s1 -> Node0x4f75d30;
	Node0x4f75d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%23:\l23:                                               \l  %24 = add nsw i32 %12, %15\l  %25 = sub nsw i32 %16, %12\l  %26 = sext i32 %24 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %1, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %29 = sext i32 %25 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %32 = fcmp contract olt float %28, %31\l  br i1 %32, label %33, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4f75d30:s0 -> Node0x4f757b0;
	Node0x4f75d30:s1 -> Node0x4f758c0;
	Node0x4f757b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = mul nsw i32 %24, 6\l  %35 = mul nsw i32 %25, 6\l  %36 = sext i32 %34 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %0, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !11\l  %39 = sext i32 %35 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !11\l  store float %41, float addrspace(1)* %37, align 4, !tbaa !11\l  store float %38, float addrspace(1)* %40, align 4, !tbaa !11\l  %42 = or i32 %34, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !11\l  %46 = or i32 %35, 1\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !11\l  store float %49, float addrspace(1)* %44, align 4, !tbaa !11\l  store float %45, float addrspace(1)* %48, align 4, !tbaa !11\l  %50 = add nsw i32 %34, 2\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !11\l  %54 = add nsw i32 %35, 2\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds float, float addrspace(1)* %0, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !11\l  store float %57, float addrspace(1)* %52, align 4, !tbaa !11\l  store float %53, float addrspace(1)* %56, align 4, !tbaa !11\l  %58 = add nsw i32 %34, 3\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11\l  %62 = add nsw i32 %35, 3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !11\l  store float %65, float addrspace(1)* %60, align 4, !tbaa !11\l  store float %61, float addrspace(1)* %64, align 4, !tbaa !11\l  %66 = add nsw i32 %34, 4\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !11\l  %70 = add nsw i32 %35, 4\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !11\l  store float %73, float addrspace(1)* %68, align 4, !tbaa !11\l  store float %69, float addrspace(1)* %72, align 4, !tbaa !11\l  %74 = add nsw i32 %34, 5\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !11\l  %78 = add nsw i32 %35, 5\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11\l  store float %81, float addrspace(1)* %76, align 4, !tbaa !11\l  store float %77, float addrspace(1)* %80, align 4, !tbaa !11\l  %82 = load float, float addrspace(1)* %27, align 4, !tbaa !11\l  %83 = load float, float addrspace(1)* %30, align 4, !tbaa !11\l  store float %83, float addrspace(1)* %27, align 4, !tbaa !11\l  store float %82, float addrspace(1)* %30, align 4, !tbaa !11\l  br label %84\l}"];
	Node0x4f757b0 -> Node0x4f758c0;
	Node0x4f758c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%84:\l84:                                               \l  ret void\l}"];
}
