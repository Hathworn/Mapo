digraph "CFG for '_Z19rearrangePopulationPfS_Pi' function" {
	label="CFG for '_Z19rearrangePopulationPfS_Pi' function";

	Node0x5d63390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 1\l  %14 = load i32, i32 addrspace(1)* %13, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %15 = sdiv i32 %14, 2\l  %16 = icmp sgt i32 %12, %15\l  br i1 %16, label %88, label %17\l|{<s0>T|<s1>F}}"];
	Node0x5d63390:s0 -> Node0x5d64e20;
	Node0x5d63390:s1 -> Node0x5d65d40;
	Node0x5d65d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%17:\l17:                                               \l  %18 = xor i32 %12, -1\l  %19 = add i32 %14, %18\l  %20 = sext i32 %12 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %1, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %23 = sext i32 %19 to i64\l  %24 = getelementptr inbounds float, float addrspace(1)* %1, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !11,\l... !amdgpu.noclobber !6\l  %26 = fcmp contract olt float %22, %25\l  br i1 %26, label %27, label %88\l|{<s0>T|<s1>F}}"];
	Node0x5d65d40:s0 -> Node0x5d66b20;
	Node0x5d65d40:s1 -> Node0x5d64e20;
	Node0x5d66b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%27:\l27:                                               \l  %28 = mul nsw i32 %12, 6\l  %29 = mul nsw i32 %19, 6\l  %30 = sext i32 %28 to i64\l  %31 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %32 = load float, float addrspace(1)* %31, align 4, !tbaa !11\l  %33 = sext i32 %29 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !11\l  store float %35, float addrspace(1)* %31, align 4, !tbaa !11\l  store float %32, float addrspace(1)* %34, align 4, !tbaa !11\l  %36 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %37 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %37, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %36, float addrspace(1)* %24, align 4, !tbaa !11\l  %38 = or i32 %28, 1\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !11\l  %42 = or i32 %29, 1\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %0, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !11\l  store float %45, float addrspace(1)* %40, align 4, !tbaa !11\l  store float %41, float addrspace(1)* %44, align 4, !tbaa !11\l  %46 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %47 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %47, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %46, float addrspace(1)* %24, align 4, !tbaa !11\l  %48 = add nsw i32 %28, 2\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %0, i64 %49\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !11\l  %52 = add nsw i32 %29, 2\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds float, float addrspace(1)* %0, i64 %53\l  %55 = load float, float addrspace(1)* %54, align 4, !tbaa !11\l  store float %55, float addrspace(1)* %50, align 4, !tbaa !11\l  store float %51, float addrspace(1)* %54, align 4, !tbaa !11\l  %56 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %57 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %57, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %56, float addrspace(1)* %24, align 4, !tbaa !11\l  %58 = add nsw i32 %28, 3\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %0, i64 %59\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !11\l  %62 = add nsw i32 %29, 3\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %0, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !11\l  store float %65, float addrspace(1)* %60, align 4, !tbaa !11\l  store float %61, float addrspace(1)* %64, align 4, !tbaa !11\l  %66 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %67 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %67, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %66, float addrspace(1)* %24, align 4, !tbaa !11\l  %68 = add nsw i32 %28, 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds float, float addrspace(1)* %0, i64 %69\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !11\l  %72 = add nsw i32 %29, 4\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !11\l  store float %75, float addrspace(1)* %70, align 4, !tbaa !11\l  store float %71, float addrspace(1)* %74, align 4, !tbaa !11\l  %76 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %77 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %77, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %76, float addrspace(1)* %24, align 4, !tbaa !11\l  %78 = add nsw i32 %28, 5\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !11\l  %82 = add nsw i32 %29, 5\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %0, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !11\l  store float %85, float addrspace(1)* %80, align 4, !tbaa !11\l  store float %81, float addrspace(1)* %84, align 4, !tbaa !11\l  %86 = load float, float addrspace(1)* %21, align 4, !tbaa !11\l  %87 = load float, float addrspace(1)* %24, align 4, !tbaa !11\l  store float %87, float addrspace(1)* %21, align 4, !tbaa !11\l  store float %86, float addrspace(1)* %24, align 4, !tbaa !11\l  br label %88\l}"];
	Node0x5d66b20 -> Node0x5d64e20;
	Node0x5d64e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  ret void\l}"];
}
