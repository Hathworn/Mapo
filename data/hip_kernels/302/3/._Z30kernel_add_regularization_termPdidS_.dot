digraph "CFG for '_Z30kernel_add_regularization_termPdidS_' function" {
	label="CFG for '_Z30kernel_add_regularization_termPdidS_' function";

	Node0x5d0f010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = icmp eq i32 %5, 0\l  br i1 %6, label %7, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5d0f010:s0 -> Node0x5d104a0;
	Node0x5d0f010:s1 -> Node0x5d10530;
	Node0x5d104a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%7:\l7:                                                \l  %8 = icmp sgt i32 %1, 1\l  br i1 %8, label %9, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5d104a0:s0 -> Node0x5d0f0a0;
	Node0x5d104a0:s1 -> Node0x5d107c0;
	Node0x5d0f0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%9:\l9:                                                \l  %10 = add i32 %1, -1\l  %11 = add i32 %1, -2\l  %12 = and i32 %10, 7\l  %13 = icmp ult i32 %11, 7\l  br i1 %13, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5d0f0a0:s0 -> Node0x5d10bd0;
	Node0x5d0f0a0:s1 -> Node0x5d10c20;
	Node0x5d10c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%14:\l14:                                               \l  %15 = and i32 %10, -8\l  br label %39\l}"];
	Node0x5d10c20 -> Node0x5d10e20;
	Node0x5d10bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = phi double [ undef, %9 ], [ %105, %39 ]\l  %18 = phi i32 [ 1, %9 ], [ %106, %39 ]\l  %19 = phi double [ 0.000000e+00, %9 ], [ %105, %39 ]\l  %20 = icmp eq i32 %12, 0\l  br i1 %20, label %35, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5d10bd0:s0 -> Node0x5d107c0;
	Node0x5d10bd0:s1 -> Node0x5d12110;
	Node0x5d12110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ %32, %21 ], [ %18, %16 ]\l  %23 = phi double [ %31, %21 ], [ %19, %16 ]\l  %24 = phi i32 [ %33, %21 ], [ 0, %16 ]\l  %25 = zext i32 %22 to i64\l  %26 = getelementptr inbounds double, double addrspace(1)* %0, i64 %25\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %28 = fmul contract double %27, 5.000000e-01\l  %29 = fmul contract double %27, %28\l  %30 = fmul contract double %29, %2\l  %31 = fadd contract double %23, %30\l  %32 = add nuw nsw i32 %22, 1\l  %33 = add i32 %24, 1\l  %34 = icmp eq i32 %33, %12\l  br i1 %34, label %35, label %21, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5d12110:s0 -> Node0x5d107c0;
	Node0x5d12110:s1 -> Node0x5d12110;
	Node0x5d107c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%35:\l35:                                               \l  %36 = phi double [ 0.000000e+00, %7 ], [ %17, %16 ], [ %31, %21 ]\l  %37 = load double, double addrspace(1)* %3, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %38 = fadd contract double %36, %37\l  store double %38, double addrspace(1)* %3, align 8, !tbaa !5\l  br label %109\l}"];
	Node0x5d107c0 -> Node0x5d10530;
	Node0x5d10e20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = phi i32 [ 1, %14 ], [ %106, %39 ]\l  %41 = phi double [ 0.000000e+00, %14 ], [ %105, %39 ]\l  %42 = phi i32 [ 0, %14 ], [ %107, %39 ]\l  %43 = zext i32 %40 to i64\l  %44 = getelementptr inbounds double, double addrspace(1)* %0, i64 %43\l  %45 = load double, double addrspace(1)* %44, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %46 = fmul contract double %45, 5.000000e-01\l  %47 = fmul contract double %45, %46\l  %48 = fmul contract double %47, %2\l  %49 = fadd contract double %41, %48\l  %50 = add nuw nsw i32 %40, 1\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds double, double addrspace(1)* %0, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %54 = fmul contract double %53, 5.000000e-01\l  %55 = fmul contract double %53, %54\l  %56 = fmul contract double %55, %2\l  %57 = fadd contract double %49, %56\l  %58 = add nuw nsw i32 %40, 2\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds double, double addrspace(1)* %0, i64 %59\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %62 = fmul contract double %61, 5.000000e-01\l  %63 = fmul contract double %61, %62\l  %64 = fmul contract double %63, %2\l  %65 = fadd contract double %57, %64\l  %66 = add nuw nsw i32 %40, 3\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds double, double addrspace(1)* %0, i64 %67\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %70 = fmul contract double %69, 5.000000e-01\l  %71 = fmul contract double %69, %70\l  %72 = fmul contract double %71, %2\l  %73 = fadd contract double %65, %72\l  %74 = add nuw nsw i32 %40, 4\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds double, double addrspace(1)* %0, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %78 = fmul contract double %77, 5.000000e-01\l  %79 = fmul contract double %77, %78\l  %80 = fmul contract double %79, %2\l  %81 = fadd contract double %73, %80\l  %82 = add nuw nsw i32 %40, 5\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds double, double addrspace(1)* %0, i64 %83\l  %85 = load double, double addrspace(1)* %84, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %86 = fmul contract double %85, 5.000000e-01\l  %87 = fmul contract double %85, %86\l  %88 = fmul contract double %87, %2\l  %89 = fadd contract double %81, %88\l  %90 = add nuw nsw i32 %40, 6\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds double, double addrspace(1)* %0, i64 %91\l  %93 = load double, double addrspace(1)* %92, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %94 = fmul contract double %93, 5.000000e-01\l  %95 = fmul contract double %93, %94\l  %96 = fmul contract double %95, %2\l  %97 = fadd contract double %89, %96\l  %98 = add nuw nsw i32 %40, 7\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds double, double addrspace(1)* %0, i64 %99\l  %101 = load double, double addrspace(1)* %100, align 8, !tbaa !5,\l... !amdgpu.noclobber !9\l  %102 = fmul contract double %101, 5.000000e-01\l  %103 = fmul contract double %101, %102\l  %104 = fmul contract double %103, %2\l  %105 = fadd contract double %97, %104\l  %106 = add nuw nsw i32 %40, 8\l  %107 = add i32 %42, 8\l  %108 = icmp eq i32 %107, %15\l  br i1 %108, label %16, label %39, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5d10e20:s0 -> Node0x5d10bd0;
	Node0x5d10e20:s1 -> Node0x5d10e20;
	Node0x5d10530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%109:\l109:                                              \l  ret void\l}"];
}
