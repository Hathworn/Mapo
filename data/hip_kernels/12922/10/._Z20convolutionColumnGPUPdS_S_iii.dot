digraph "CFG for '_Z20convolutionColumnGPUPdS_S_iii' function" {
	label="CFG for '_Z20convolutionColumnGPUPdS_S_iii' function";

	Node0x5b517c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %5, 0\l  br i1 %24, label %54, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5b517c0:s0 -> Node0x5b55140;
	Node0x5b517c0:s1 -> Node0x5b551d0;
	Node0x5b551d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = sub nsw i32 0, %5\l  %27 = mul nsw i32 %23, %3\l  %28 = add nsw i32 %27, %15\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29\l  br label %31\l}"];
	Node0x5b551d0 -> Node0x5b555d0;
	Node0x5b555d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %26, %25 ], [ %52, %50 ]\l  %33 = phi double [ 0.000000e+00, %25 ], [ %51, %50 ]\l  %34 = add nsw i32 %32, %23\l  %35 = icmp sgt i32 %34, -1\l  %36 = icmp slt i32 %34, %4\l  %37 = select i1 %35, i1 %36, i1 false\l  br i1 %37, label %38, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5b555d0:s0 -> Node0x5b56740;
	Node0x5b555d0:s1 -> Node0x5b556c0;
	Node0x5b56740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %34, %3\l  %40 = add nsw i32 %39, %15\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds double, double addrspace(1)* %1, i64 %41\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !7\l  %44 = sub nsw i32 %5, %32\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds double, double addrspace(1)* %2, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !7\l  %48 = fmul contract double %43, %47\l  %49 = fadd contract double %33, %48\l  br label %50\l}"];
	Node0x5b56740 -> Node0x5b556c0;
	Node0x5b556c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = phi double [ %49, %38 ], [ %33, %31 ]\l  store double %51, double addrspace(1)* %30, align 8, !tbaa !7\l  %52 = add i32 %32, 1\l  %53 = icmp eq i32 %32, %5\l  br i1 %53, label %54, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b556c0:s0 -> Node0x5b55140;
	Node0x5b556c0:s1 -> Node0x5b555d0;
	Node0x5b55140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%54:\l54:                                               \l  ret void\l}"];
}
