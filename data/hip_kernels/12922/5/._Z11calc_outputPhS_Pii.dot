digraph "CFG for '_Z11calc_outputPhS_Pii' function" {
	label="CFG for '_Z11calc_outputPhS_Pii' function";

	Node0x4b198f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !6\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !4, !invariant.load !5\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %22 = add i32 %20, %21\l  %23 = udiv i32 %13, %10\l  %24 = mul i32 %23, %10\l  %25 = icmp ugt i32 %13, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %22\l  %29 = add i32 %28, %5\l  %30 = mul i32 %29, %10\l  %31 = add i32 %30, %14\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = icmp slt i32 %31, %3\l  br i1 %32, label %33, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4b198f0:s0 -> Node0x4b1bbc0;
	Node0x4b198f0:s1 -> Node0x4b1bc50;
	Node0x4b1bbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%33:\l33:                                               \l  %34 = sext i32 %31 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !16, !amdgpu.noclobber !5\l  %37 = zext i8 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !19, !amdgpu.noclobber\l... !5\l  %40 = tail call i32 @llvm.smin.i32(i32 %39, i32 255)\l  %41 = trunc i32 %40 to i8\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %34\l  store i8 %41, i8 addrspace(1)* %42, align 1, !tbaa !16\l  br label %43\l}"];
	Node0x4b1bbc0 -> Node0x4b1bc50;
	Node0x4b1bc50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  ret void\l}"];
}
