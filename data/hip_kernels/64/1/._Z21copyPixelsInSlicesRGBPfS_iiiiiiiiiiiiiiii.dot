digraph "CFG for '_Z21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiii' function" {
	label="CFG for '_Z21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiii' function";

	Node0x54d5ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%18:\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr i8, i8 addrspace(4)* %21, i64 6\l  %23 = bitcast i8 addrspace(4)* %22 to i16 addrspace(4)*\l  %24 = load i16, i16 addrspace(4)* %23, align 2, !range !4, !invariant.load !5\l  %25 = zext i16 %24 to i32\l  %26 = mul i32 %20, %25\l  %27 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %28 = add i32 %26, %27\l  %29 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %30 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %31 = getelementptr i8, i8 addrspace(4)* %21, i64 8\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 4, !range !4, !invariant.load !5\l  %34 = zext i16 %33 to i32\l  %35 = mul i32 %30, %34\l  %36 = tail call i32 @llvm.amdgcn.workitem.id.z(), !range !6\l  %37 = add i32 %35, %36\l  %38 = icmp eq i32 %36, 0\l  br i1 %38, label %39, label %87\l|{<s0>T|<s1>F}}"];
	Node0x54d5ea0:s0 -> Node0x54da660;
	Node0x54d5ea0:s1 -> Node0x54da6f0;
	Node0x54da660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%39:\l39:                                               \l  %40 = add i32 %19, %2\l  %41 = sub i32 %40, %4\l  %42 = sdiv i32 %41, %2\l  %43 = tail call i32 @llvm.smax.i32(i32 %42, i32 0)\l  %44 = sub i32 %3, %5\l  %45 = add i32 %44, %28\l  %46 = sdiv i32 %45, %3\l  %47 = tail call i32 @llvm.smax.i32(i32 %46, i32 0)\l  %48 = sdiv i32 %19, %2\l  %49 = icmp slt i32 %48, %6\l  %50 = add nsw i32 %6, -1\l  %51 = select i1 %49, i32 %48, i32 %50\l  %52 = sdiv i32 %28, %3\l  %53 = icmp slt i32 %52, %7\l  %54 = add nsw i32 %7, -1\l  %55 = select i1 %53, i32 %52, i32 %54\l  %56 = icmp eq i32 %29, 0\l  %57 = icmp eq i32 %27, 0\l  %58 = select i1 %56, i1 %57, i1 false\l  br i1 %58, label %59, label %60\l|{<s0>T|<s1>F}}"];
	Node0x54da660:s0 -> Node0x54db590;
	Node0x54da660:s1 -> Node0x54db620;
	Node0x54db590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%59:\l59:                                               \l  store i32 %43, i32 addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_imin, align 4, !tbaa !7\l  store i32 %51, i32 addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_imax, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x54db590 -> Node0x54db620;
	Node0x54db620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%60:\l60:                                               \l  br i1 %56, label %61, label %64\l|{<s0>T|<s1>F}}"];
	Node0x54db620:s0 -> Node0x54db7c0;
	Node0x54db620:s1 -> Node0x54dc0c0;
	Node0x54db7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_jmin, i32 0, i32 %27\l  store i32 %47, i32 addrspace(3)* %62, align 4, !tbaa !7\l  %63 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_jmax, i32 0, i32 %27\l  store i32 %55, i32 addrspace(3)* %63, align 4, !tbaa !7\l  br label %64\l}"];
	Node0x54db7c0 -> Node0x54dc0c0;
	Node0x54dc0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%64:\l64:                                               \l  %65 = mul i32 %35, %15\l  %66 = sub nsw i32 %19, %13\l  %67 = mul nsw i32 %66, %9\l  %68 = sub i32 %67, %11\l  %69 = add i32 %68, %28\l  %70 = mul nsw i32 %69, %10\l  %71 = add i32 %70, %65\l  %72 = mul i32 %35, %16\l  %73 = mul nsw i32 %43, %7\l  %74 = add nsw i32 %73, %47\l  %75 = mul nsw i32 %74, %4\l  %76 = mul nsw i32 %43, %2\l  %77 = sub i32 %19, %76\l  %78 = add i32 %77, %75\l  %79 = mul i32 %78, %5\l  %80 = mul nsw i32 %47, %3\l  %81 = sub i32 %28, %80\l  %82 = add nsw i32 %81, %79\l  %83 = mul nsw i32 %82, %10\l  %84 = add i32 %83, %72\l  %85 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]\l... addrspace(3)* @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE12_inputoffset,\l... i32 0, i32 %27, i32 %29\l  store i32 %71, i32 addrspace(3)* %85, align 4, !tbaa !7\l  %86 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]\l... addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE13_ksliceoffset, i32 0, i32\l... %27, i32 %29\l  store i32 %84, i32 addrspace(3)* %86, align 4, !tbaa !7\l  br label %87\l}"];
	Node0x54dc0c0 -> Node0x54da6f0;
	Node0x54da6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%87:\l87:                                               \l  %88 = phi i32 [ %43, %64 ], [ undef, %18 ]\l  %89 = phi i32 [ %47, %64 ], [ undef, %18 ]\l  %90 = phi i32 [ %51, %64 ], [ undef, %18 ]\l  %91 = phi i32 [ %55, %64 ], [ undef, %18 ]\l  %92 = phi i32 [ %71, %64 ], [ undef, %18 ]\l  %93 = phi i32 [ %84, %64 ], [ undef, %18 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %94 = icmp slt i32 %37, %17\l  br i1 %94, label %95, label %173\l|{<s0>T|<s1>F}}"];
	Node0x54da6f0:s0 -> Node0x54ddcd0;
	Node0x54da6f0:s1 -> Node0x54ddd60;
	Node0x54ddcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%95:\l95:                                               \l  %96 = add i32 %11, %9\l  %97 = add nsw i32 %96, %12\l  %98 = icmp slt i32 %28, %97\l  br i1 %98, label %99, label %173\l|{<s0>T|<s1>F}}"];
	Node0x54ddcd0:s0 -> Node0x54de050;
	Node0x54ddcd0:s1 -> Node0x54ddd60;
	Node0x54de050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%99:\l99:                                               \l  br i1 %38, label %111, label %100\l|{<s0>T|<s1>F}}"];
	Node0x54de050:s0 -> Node0x54de150;
	Node0x54de050:s1 -> Node0x54de1a0;
	Node0x54de1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%100:\l100:                                              \l  %101 = load i32, i32 addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_imin, align 4, !tbaa !7\l  %102 = load i32, i32 addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_imax, align 4, !tbaa !7\l  %103 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_jmin, i32 0, i32 %27\l  %104 = load i32, i32 addrspace(3)* %103, align 4, !tbaa !7\l  %105 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE5_jmax, i32 0, i32 %27\l  %106 = load i32, i32 addrspace(3)* %105, align 4, !tbaa !7\l  %107 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]\l... addrspace(3)* @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE12_inputoffset,\l... i32 0, i32 %27, i32 %29\l  %108 = load i32, i32 addrspace(3)* %107, align 4, !tbaa !7\l  %109 = getelementptr inbounds [32 x [3 x i32]], [32 x [3 x i32]]\l... addrspace(3)*\l... @_ZZ21copyPixelsInSlicesRGBPfS_iiiiiiiiiiiiiiiiE13_ksliceoffset, i32 0, i32\l... %27, i32 %29\l  %110 = load i32, i32 addrspace(3)* %109, align 4, !tbaa !7\l  br label %111\l}"];
	Node0x54de1a0 -> Node0x54de150;
	Node0x54de150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%111:\l111:                                              \l  %112 = phi i32 [ %101, %100 ], [ %88, %99 ]\l  %113 = phi i32 [ %104, %100 ], [ %89, %99 ]\l  %114 = phi i32 [ %102, %100 ], [ %90, %99 ]\l  %115 = phi i32 [ %106, %100 ], [ %91, %99 ]\l  %116 = phi i32 [ %108, %100 ], [ %92, %99 ]\l  %117 = phi i32 [ %110, %100 ], [ %93, %99 ]\l  %118 = mul i32 %36, %15\l  %119 = add i32 %116, %118\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %120\l  %122 = mul i32 %36, %16\l  %123 = add i32 %117, %122\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds float, float addrspace(1)* %1, i64 %124\l  %126 = mul nsw i32 %5, %4\l  %127 = sub nsw i32 %126, %3\l  %128 = mul nsw i32 %127, %10\l  %129 = mul nsw i32 %7, %4\l  %130 = sub nsw i32 %129, %2\l  %131 = mul nsw i32 %130, %5\l  %132 = mul nsw i32 %131, %10\l  %133 = xor i32 %115, -1\l  %134 = add i32 %113, %133\l  %135 = mul i32 %134, %128\l  %136 = add i32 %135, %132\l  %137 = icmp slt i32 %19, %13\l  br i1 %137, label %150, label %138\l|{<s0>T|<s1>F}}"];
	Node0x54de150:s0 -> Node0x54dfd20;
	Node0x54de150:s1 -> Node0x54dfd70;
	Node0x54dfd70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%138:\l138:                                              \l  %139 = add nsw i32 %8, -1\l  %140 = add nsw i32 %139, %13\l  %141 = icmp sgt i32 %19, %140\l  %142 = icmp slt i32 %28, %11\l  %143 = select i1 %141, i1 true, i1 %142\l  %144 = icmp sge i32 %28, %96\l  %145 = select i1 %143, i1 true, i1 %144\l  br i1 %145, label %150, label %146\l|{<s0>T|<s1>F}}"];
	Node0x54dfd70:s0 -> Node0x54dfd20;
	Node0x54dfd70:s1 -> Node0x54e02a0;
	Node0x54e02a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%146:\l146:                                              \l  %147 = zext i32 %29 to i64\l  %148 = getelementptr inbounds float, float addrspace(1)* %121, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  br label %150\l}"];
	Node0x54e02a0 -> Node0x54dfd20;
	Node0x54dfd20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%150:\l150:                                              \l  %151 = phi float [ 0.000000e+00, %138 ], [ %149, %146 ], [ 0.000000e+00,\l... %111 ]\l  %152 = icmp sgt i32 %112, %114\l  br i1 %152, label %173, label %153\l|{<s0>T|<s1>F}}"];
	Node0x54dfd20:s0 -> Node0x54ddd60;
	Node0x54dfd20:s1 -> Node0x54e1230;
	Node0x54e1230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%153:\l153:                                              \l  %154 = icmp sgt i32 %113, %115\l  %155 = zext i32 %29 to i64\l  %156 = sext i32 %128 to i64\l  %157 = sext i32 %136 to i64\l  br label %158\l}"];
	Node0x54e1230 -> Node0x54e1550;
	Node0x54e1550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%158:\l158:                                              \l  %159 = phi float addrspace(1)* [ %125, %153 ], [ %170, %168 ]\l  %160 = phi i32 [ %112, %153 ], [ %171, %168 ]\l  br i1 %154, label %168, label %161\l|{<s0>T|<s1>F}}"];
	Node0x54e1550:s0 -> Node0x54e1640;
	Node0x54e1550:s1 -> Node0x54e18a0;
	Node0x54e18a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%161:\l161:                                              \l  %162 = phi float addrspace(1)* [ %165, %161 ], [ %159, %158 ]\l  %163 = phi i32 [ %166, %161 ], [ %113, %158 ]\l  %164 = getelementptr inbounds float, float addrspace(1)* %162, i64 %155\l  store float %151, float addrspace(1)* %164, align 4, !tbaa !11\l  %165 = getelementptr inbounds float, float addrspace(1)* %162, i64 %156\l  %166 = add nsw i32 %163, 1\l  %167 = icmp slt i32 %163, %115\l  br i1 %167, label %161, label %168, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x54e18a0:s0 -> Node0x54e18a0;
	Node0x54e18a0:s1 -> Node0x54e1640;
	Node0x54e1640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%168:\l168:                                              \l  %169 = phi float addrspace(1)* [ %159, %158 ], [ %165, %161 ]\l  %170 = getelementptr inbounds float, float addrspace(1)* %169, i64 %157\l  %171 = add nsw i32 %160, 1\l  %172 = icmp slt i32 %160, %114\l  br i1 %172, label %158, label %173, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x54e1640:s0 -> Node0x54e1550;
	Node0x54e1640:s1 -> Node0x54ddd60;
	Node0x54ddd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%173:\l173:                                              \l  ret void\l}"];
}
