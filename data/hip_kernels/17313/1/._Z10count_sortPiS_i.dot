digraph "CFG for '_Z10count_sortPiS_i' function" {
	label="CFG for '_Z10count_sortPiS_i' function";

	Node0x4f4c530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %146\l|{<s0>T|<s1>F}}"];
	Node0x4f4c530:s0 -> Node0x4f4e430;
	Node0x4f4c530:s1 -> Node0x4f4e4c0;
	Node0x4f4e430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%14:\l14:                                               \l  %15 = icmp sgt i32 %2, 0\l  %16 = sext i32 %12 to i64\l  %17 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %16\l  %18 = load i32, i32 addrspace(1)* %17, align 4, !tbaa !7\l  br i1 %15, label %19, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4f4e430:s0 -> Node0x4f4e9e0;
	Node0x4f4e430:s1 -> Node0x4f4ea70;
	Node0x4f4e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%19:\l19:                                               \l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  br i1 %21, label %24, label %22\l|{<s0>T|<s1>F}}"];
	Node0x4f4e9e0:s0 -> Node0x4f4ed00;
	Node0x4f4e9e0:s1 -> Node0x4f4ed50;
	Node0x4f4ed50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %2, -8\l  br label %52\l}"];
	Node0x4f4ed50 -> Node0x4f4ef50;
	Node0x4f4ed00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = phi i32 [ undef, %19 ], [ %142, %52 ]\l  %26 = phi i32 [ 0, %19 ], [ %143, %52 ]\l  %27 = phi i32 [ 0, %19 ], [ %142, %52 ]\l  %28 = icmp eq i32 %20, 0\l  br i1 %28, label %46, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4f4ed00:s0 -> Node0x4f4f770;
	Node0x4f4ed00:s1 -> Node0x4f4f800;
	Node0x4f4f800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %43, %29 ], [ %26, %24 ]\l  %31 = phi i32 [ %42, %29 ], [ %27, %24 ]\l  %32 = phi i32 [ %44, %29 ], [ 0, %24 ]\l  %33 = zext i32 %30 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %36 = icmp slt i32 %35, %18\l  %37 = icmp eq i32 %35, %18\l  %38 = icmp slt i32 %30, %12\l  %39 = select i1 %37, i1 %38, i1 false\l  %40 = select i1 %36, i1 true, i1 %39\l  %41 = zext i1 %40 to i32\l  %42 = add nuw nsw i32 %31, %41\l  %43 = add nuw nsw i32 %30, 1\l  %44 = add i32 %32, 1\l  %45 = icmp eq i32 %44, %20\l  br i1 %45, label %46, label %29, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4f4f800:s0 -> Node0x4f4f770;
	Node0x4f4f800:s1 -> Node0x4f4f800;
	Node0x4f4f770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%46:\l46:                                               \l  %47 = phi i32 [ %25, %24 ], [ %42, %29 ]\l  %48 = zext i32 %47 to i64\l  br label %49\l}"];
	Node0x4f4f770 -> Node0x4f4ea70;
	Node0x4f4ea70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%49:\l49:                                               \l  %50 = phi i64 [ 0, %14 ], [ %48, %46 ]\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  store i32 %18, i32 addrspace(1)* %51, align 4, !tbaa !7\l  br label %146\l}"];
	Node0x4f4ea70 -> Node0x4f4e4c0;
	Node0x4f4ef50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %22 ], [ %143, %52 ]\l  %54 = phi i32 [ 0, %22 ], [ %142, %52 ]\l  %55 = phi i32 [ 0, %22 ], [ %144, %52 ]\l  %56 = zext i32 %53 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %59 = icmp slt i32 %58, %18\l  %60 = icmp eq i32 %58, %18\l  %61 = icmp slt i32 %53, %12\l  %62 = select i1 %60, i1 %61, i1 false\l  %63 = select i1 %59, i1 true, i1 %62\l  %64 = zext i1 %63 to i32\l  %65 = add nuw nsw i32 %54, %64\l  %66 = or i32 %53, 1\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %70 = icmp slt i32 %69, %18\l  %71 = icmp eq i32 %69, %18\l  %72 = icmp slt i32 %66, %12\l  %73 = select i1 %71, i1 %72, i1 false\l  %74 = select i1 %70, i1 true, i1 %73\l  %75 = zext i1 %74 to i32\l  %76 = add nuw nsw i32 %65, %75\l  %77 = or i32 %53, 2\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %81 = icmp slt i32 %80, %18\l  %82 = icmp eq i32 %80, %18\l  %83 = icmp slt i32 %77, %12\l  %84 = select i1 %82, i1 %83, i1 false\l  %85 = select i1 %81, i1 true, i1 %84\l  %86 = zext i1 %85 to i32\l  %87 = add nuw nsw i32 %76, %86\l  %88 = or i32 %53, 3\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %92 = icmp slt i32 %91, %18\l  %93 = icmp eq i32 %91, %18\l  %94 = icmp slt i32 %88, %12\l  %95 = select i1 %93, i1 %94, i1 false\l  %96 = select i1 %92, i1 true, i1 %95\l  %97 = zext i1 %96 to i32\l  %98 = add nuw nsw i32 %87, %97\l  %99 = or i32 %53, 4\l  %100 = zext i32 %99 to i64\l  %101 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %100\l  %102 = load i32, i32 addrspace(1)* %101, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %103 = icmp slt i32 %102, %18\l  %104 = icmp eq i32 %102, %18\l  %105 = icmp slt i32 %99, %12\l  %106 = select i1 %104, i1 %105, i1 false\l  %107 = select i1 %103, i1 true, i1 %106\l  %108 = zext i1 %107 to i32\l  %109 = add nuw nsw i32 %98, %108\l  %110 = or i32 %53, 5\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %111\l  %113 = load i32, i32 addrspace(1)* %112, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %114 = icmp slt i32 %113, %18\l  %115 = icmp eq i32 %113, %18\l  %116 = icmp slt i32 %110, %12\l  %117 = select i1 %115, i1 %116, i1 false\l  %118 = select i1 %114, i1 true, i1 %117\l  %119 = zext i1 %118 to i32\l  %120 = add nuw nsw i32 %109, %119\l  %121 = or i32 %53, 6\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %122\l  %124 = load i32, i32 addrspace(1)* %123, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %125 = icmp slt i32 %124, %18\l  %126 = icmp eq i32 %124, %18\l  %127 = icmp slt i32 %121, %12\l  %128 = select i1 %126, i1 %127, i1 false\l  %129 = select i1 %125, i1 true, i1 %128\l  %130 = zext i1 %129 to i32\l  %131 = add nuw nsw i32 %120, %130\l  %132 = or i32 %53, 7\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %133\l  %135 = load i32, i32 addrspace(1)* %134, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %136 = icmp slt i32 %135, %18\l  %137 = icmp eq i32 %135, %18\l  %138 = icmp slt i32 %132, %12\l  %139 = select i1 %137, i1 %138, i1 false\l  %140 = select i1 %136, i1 true, i1 %139\l  %141 = zext i1 %140 to i32\l  %142 = add nuw nsw i32 %131, %141\l  %143 = add nuw nsw i32 %53, 8\l  %144 = add i32 %55, 8\l  %145 = icmp eq i32 %144, %23\l  br i1 %145, label %24, label %52, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4f4ef50:s0 -> Node0x4f4ed00;
	Node0x4f4ef50:s1 -> Node0x4f4ef50;
	Node0x4f4e4c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%146:\l146:                                              \l  ret void\l}"];
}
