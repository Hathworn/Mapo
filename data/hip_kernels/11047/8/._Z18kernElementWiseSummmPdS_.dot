digraph "CFG for '_Z18kernElementWiseSummmPdS_' function" {
	label="CFG for '_Z18kernElementWiseSummmPdS_' function";

	Node0x49a4640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = add i32 %19, %20\l  %22 = mul i32 %21, %13\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = sext i32 %24 to i64\l  %26 = icmp ult i64 %25, %0\l  br i1 %26, label %27, label %104\l|{<s0>T|<s1>F}}"];
	Node0x49a4640:s0 -> Node0x49a6f50;
	Node0x49a4640:s1 -> Node0x49a6fe0;
	Node0x49a6f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%27:\l27:                                               \l  %28 = mul i64 %25, %1\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  %30 = getelementptr inbounds double, double addrspace(1)* %3, i64 %28\l  %31 = icmp eq i64 %1, 0\l  br i1 %31, label %104, label %32\l|{<s0>T|<s1>F}}"];
	Node0x49a6f50:s0 -> Node0x49a6fe0;
	Node0x49a6f50:s1 -> Node0x49a7380;
	Node0x49a7380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%32:\l32:                                               \l  %33 = and i64 %1, 7\l  %34 = icmp ult i64 %1, 8\l  br i1 %34, label %90, label %35\l|{<s0>T|<s1>F}}"];
	Node0x49a7380:s0 -> Node0x49a7720;
	Node0x49a7380:s1 -> Node0x49a7770;
	Node0x49a7770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%35:\l35:                                               \l  %36 = and i64 %1, -8\l  br label %37\l}"];
	Node0x49a7770 -> Node0x49a7970;
	Node0x49a7970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%37:\l37:                                               \l  %38 = phi i64 [ 0, %35 ], [ %87, %37 ]\l  %39 = phi i64 [ 0, %35 ], [ %88, %37 ]\l  %40 = getelementptr inbounds double, double addrspace(1)* %30, i64 %38\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !16\l  %42 = getelementptr inbounds double, double addrspace(1)* %29, i64 %38\l  %43 = load double, double addrspace(1)* %42, align 8, !tbaa !16\l  %44 = fadd contract double %41, %43\l  store double %44, double addrspace(1)* %42, align 8, !tbaa !16\l  %45 = or i64 %38, 1\l  %46 = getelementptr inbounds double, double addrspace(1)* %30, i64 %45\l  %47 = load double, double addrspace(1)* %46, align 8, !tbaa !16\l  %48 = getelementptr inbounds double, double addrspace(1)* %29, i64 %45\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !16\l  %50 = fadd contract double %47, %49\l  store double %50, double addrspace(1)* %48, align 8, !tbaa !16\l  %51 = or i64 %38, 2\l  %52 = getelementptr inbounds double, double addrspace(1)* %30, i64 %51\l  %53 = load double, double addrspace(1)* %52, align 8, !tbaa !16\l  %54 = getelementptr inbounds double, double addrspace(1)* %29, i64 %51\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !16\l  %56 = fadd contract double %53, %55\l  store double %56, double addrspace(1)* %54, align 8, !tbaa !16\l  %57 = or i64 %38, 3\l  %58 = getelementptr inbounds double, double addrspace(1)* %30, i64 %57\l  %59 = load double, double addrspace(1)* %58, align 8, !tbaa !16\l  %60 = getelementptr inbounds double, double addrspace(1)* %29, i64 %57\l  %61 = load double, double addrspace(1)* %60, align 8, !tbaa !16\l  %62 = fadd contract double %59, %61\l  store double %62, double addrspace(1)* %60, align 8, !tbaa !16\l  %63 = or i64 %38, 4\l  %64 = getelementptr inbounds double, double addrspace(1)* %30, i64 %63\l  %65 = load double, double addrspace(1)* %64, align 8, !tbaa !16\l  %66 = getelementptr inbounds double, double addrspace(1)* %29, i64 %63\l  %67 = load double, double addrspace(1)* %66, align 8, !tbaa !16\l  %68 = fadd contract double %65, %67\l  store double %68, double addrspace(1)* %66, align 8, !tbaa !16\l  %69 = or i64 %38, 5\l  %70 = getelementptr inbounds double, double addrspace(1)* %30, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !16\l  %72 = getelementptr inbounds double, double addrspace(1)* %29, i64 %69\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !16\l  %74 = fadd contract double %71, %73\l  store double %74, double addrspace(1)* %72, align 8, !tbaa !16\l  %75 = or i64 %38, 6\l  %76 = getelementptr inbounds double, double addrspace(1)* %30, i64 %75\l  %77 = load double, double addrspace(1)* %76, align 8, !tbaa !16\l  %78 = getelementptr inbounds double, double addrspace(1)* %29, i64 %75\l  %79 = load double, double addrspace(1)* %78, align 8, !tbaa !16\l  %80 = fadd contract double %77, %79\l  store double %80, double addrspace(1)* %78, align 8, !tbaa !16\l  %81 = or i64 %38, 7\l  %82 = getelementptr inbounds double, double addrspace(1)* %30, i64 %81\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !16\l  %84 = getelementptr inbounds double, double addrspace(1)* %29, i64 %81\l  %85 = load double, double addrspace(1)* %84, align 8, !tbaa !16\l  %86 = fadd contract double %83, %85\l  store double %86, double addrspace(1)* %84, align 8, !tbaa !16\l  %87 = add nuw i64 %38, 8\l  %88 = add i64 %39, 8\l  %89 = icmp eq i64 %88, %36\l  br i1 %89, label %90, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x49a7970:s0 -> Node0x49a7720;
	Node0x49a7970:s1 -> Node0x49a7970;
	Node0x49a7720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%90:\l90:                                               \l  %91 = phi i64 [ 0, %32 ], [ %87, %37 ]\l  %92 = icmp eq i64 %33, 0\l  br i1 %92, label %104, label %93\l|{<s0>T|<s1>F}}"];
	Node0x49a7720:s0 -> Node0x49a6fe0;
	Node0x49a7720:s1 -> Node0x49aa8f0;
	Node0x49aa8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%93:\l93:                                               \l  %94 = phi i64 [ %101, %93 ], [ %91, %90 ]\l  %95 = phi i64 [ %102, %93 ], [ 0, %90 ]\l  %96 = getelementptr inbounds double, double addrspace(1)* %30, i64 %94\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !16\l  %98 = getelementptr inbounds double, double addrspace(1)* %29, i64 %94\l  %99 = load double, double addrspace(1)* %98, align 8, !tbaa !16\l  %100 = fadd contract double %97, %99\l  store double %100, double addrspace(1)* %98, align 8, !tbaa !16\l  %101 = add nuw i64 %94, 1\l  %102 = add i64 %95, 1\l  %103 = icmp eq i64 %102, %33\l  br i1 %103, label %104, label %93, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x49aa8f0:s0 -> Node0x49a6fe0;
	Node0x49aa8f0:s1 -> Node0x49aa8f0;
	Node0x49a6fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%104:\l104:                                              \l  ret void\l}"];
}
