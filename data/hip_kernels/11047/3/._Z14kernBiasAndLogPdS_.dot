digraph "CFG for '_Z14kernBiasAndLogPdS_' function" {
	label="CFG for '_Z14kernBiasAndLogPdS_' function";

	Node0x4748cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = load double, double addrspace(1)* %1, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %4 = load double, double addrspace(1)* %0, align 8, !tbaa !4,\l... !amdgpu.noclobber !8\l  %5 = tail call double @llvm.amdgcn.frexp.mant.f64(double %4)\l  %6 = fcmp olt double %5, 0x3FE5555555555555\l  %7 = zext i1 %6 to i32\l  %8 = tail call double @llvm.amdgcn.ldexp.f64(double %5, i32 %7)\l  %9 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %4)\l  %10 = sub nsw i32 %9, %7\l  %11 = fadd double %8, -1.000000e+00\l  %12 = fadd double %8, 1.000000e+00\l  %13 = fadd double %12, -1.000000e+00\l  %14 = fsub double %8, %13\l  %15 = tail call double @llvm.amdgcn.rcp.f64(double %12)\l  %16 = fneg double %12\l  %17 = tail call double @llvm.fma.f64(double %16, double %15, double\l... 1.000000e+00)\l  %18 = tail call double @llvm.fma.f64(double %17, double %15, double %15)\l  %19 = tail call double @llvm.fma.f64(double %16, double %18, double\l... 1.000000e+00)\l  %20 = tail call double @llvm.fma.f64(double %19, double %18, double %18)\l  %21 = fmul double %11, %20\l  %22 = fmul double %12, %21\l  %23 = fneg double %22\l  %24 = tail call double @llvm.fma.f64(double %21, double %12, double %23)\l  %25 = tail call double @llvm.fma.f64(double %21, double %14, double %24)\l  %26 = fadd double %22, %25\l  %27 = fsub double %26, %22\l  %28 = fsub double %25, %27\l  %29 = fsub double %11, %26\l  %30 = fsub double %11, %29\l  %31 = fsub double %30, %26\l  %32 = fsub double %31, %28\l  %33 = fadd double %29, %32\l  %34 = fmul double %20, %33\l  %35 = fadd double %21, %34\l  %36 = fsub double %35, %21\l  %37 = fsub double %34, %36\l  %38 = fmul double %35, %35\l  %39 = tail call double @llvm.fma.f64(double %38, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %40 = tail call double @llvm.fma.f64(double %38, double %39, double\l... 0x3FC7474DD7F4DF2E)\l  %41 = tail call double @llvm.fma.f64(double %38, double %40, double\l... 0x3FCC71C016291751)\l  %42 = tail call double @llvm.fma.f64(double %38, double %41, double\l... 0x3FD249249B27ACF1)\l  %43 = tail call double @llvm.fma.f64(double %38, double %42, double\l... 0x3FD99999998EF7B6)\l  %44 = tail call double @llvm.fma.f64(double %38, double %43, double\l... 0x3FE5555555555780)\l  %45 = tail call double @llvm.amdgcn.ldexp.f64(double %35, i32 1)\l  %46 = tail call double @llvm.amdgcn.ldexp.f64(double %37, i32 1)\l  %47 = fmul double %35, %38\l  %48 = fmul double %47, %44\l  %49 = fadd double %45, %48\l  %50 = fsub double %49, %45\l  %51 = fsub double %48, %50\l  %52 = fadd double %46, %51\l  %53 = fadd double %49, %52\l  %54 = fsub double %53, %49\l  %55 = fsub double %52, %54\l  %56 = sitofp i32 %10 to double\l  %57 = fmul double %56, 0x3FE62E42FEFA39EF\l  %58 = fneg double %57\l  %59 = tail call double @llvm.fma.f64(double %56, double 0x3FE62E42FEFA39EF,\l... double %58)\l  %60 = tail call double @llvm.fma.f64(double %56, double 0x3C7ABC9E3B39803F,\l... double %59)\l  %61 = fadd double %57, %60\l  %62 = fsub double %61, %57\l  %63 = fsub double %60, %62\l  %64 = fadd double %61, %53\l  %65 = fsub double %64, %61\l  %66 = fsub double %64, %65\l  %67 = fsub double %61, %66\l  %68 = fsub double %53, %65\l  %69 = fadd double %68, %67\l  %70 = fadd double %63, %55\l  %71 = fsub double %70, %63\l  %72 = fsub double %70, %71\l  %73 = fsub double %63, %72\l  %74 = fsub double %55, %71\l  %75 = fadd double %74, %73\l  %76 = fadd double %70, %69\l  %77 = fadd double %64, %76\l  %78 = fsub double %77, %64\l  %79 = fsub double %76, %78\l  %80 = fadd double %75, %79\l  %81 = fadd double %77, %80\l  %82 = tail call double @llvm.fabs.f64(double %4) #3\l  %83 = fcmp oeq double %82, 0x7FF0000000000000\l  %84 = select i1 %83, double %4, double %81\l  %85 = fcmp olt double %4, 0.000000e+00\l  %86 = select i1 %85, double 0x7FF8000000000000, double %84\l  %87 = fcmp oeq double %4, 0.000000e+00\l  %88 = select i1 %87, double 0xFFF0000000000000, double %86\l  %89 = fadd contract double %3, %88\l  store double %89, double addrspace(1)* %0, align 8, !tbaa !4\l  ret void\l}"];
}
