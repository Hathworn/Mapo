digraph "CFG for '_Z16kernBlockWiseSummmPd' function" {
	label="CFG for '_Z16kernBlockWiseSummmPd' function";

	Node0x46d76a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr inbounds i8, i8 addrspace(4)* %5, i64 12\l  %7 = bitcast i8 addrspace(4)* %6 to i32 addrspace(4)*\l  %8 = load i32, i32 addrspace(4)* %7, align 4, !tbaa !4\l  %9 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !13, !invariant.load\l... !14\l  %12 = zext i16 %11 to i32\l  %13 = udiv i32 %8, %12\l  %14 = mul i32 %13, %12\l  %15 = icmp ugt i32 %8, %14\l  %16 = zext i1 %15 to i32\l  %17 = add i32 %13, %16\l  %18 = mul i32 %17, %4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = add i32 %18, %19\l  %21 = mul i32 %20, %12\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %23 = add i32 %21, %22\l  %24 = zext i32 %22 to i64\l  %25 = icmp ult i64 %24, %0\l  br i1 %25, label %26, label %31\l|{<s0>T|<s1>F}}"];
	Node0x46d76a0:s0 -> Node0x46d9f70;
	Node0x46d76a0:s1 -> Node0x46da000;
	Node0x46d9f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%26:\l26:                                               \l  %27 = sext i32 %23 to i64\l  %28 = mul i64 %27, %1\l  %29 = getelementptr inbounds double, double addrspace(1)* %2, i64 %28\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %31\l}"];
	Node0x46d9f70 -> Node0x46da000;
	Node0x46da000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  %32 = phi double [ %30, %26 ], [ 0.000000e+00, %3 ]\l  %33 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ16kernBlockWiseSummmPdE8blockSum, i32 0, i32 %22\l  store double %32, double addrspace(3)* %33, align 8\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = lshr i32 %12, 1\l  %35 = icmp ult i32 %22, %34\l  br i1 %35, label %38, label %36\l|{<s0>T|<s1>F}}"];
	Node0x46da000:s0 -> Node0x46dbca0;
	Node0x46da000:s1 -> Node0x46dbd30;
	Node0x46dbd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%36:\l36:                                               \l  %37 = icmp eq i32 %22, 0\l  br i1 %37, label %47, label %52\l|{<s0>T|<s1>F}}"];
	Node0x46dbd30:s0 -> Node0x46dbf00;
	Node0x46dbd30:s1 -> Node0x46dbf50;
	Node0x46dbca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %45, %38 ], [ %34, %31 ]\l  %40 = add nsw i32 %39, %22\l  %41 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ16kernBlockWiseSummmPdE8blockSum, i32 0, i32 %40\l  %42 = load double, double addrspace(3)* %41, align 8, !tbaa !16\l  %43 = load double, double addrspace(3)* %33, align 8, !tbaa !16\l  %44 = fadd contract double %42, %43\l  store double %44, double addrspace(3)* %33, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = sdiv i32 %39, 2\l  %46 = icmp ult i32 %22, %45\l  br i1 %46, label %38, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x46dbca0:s0 -> Node0x46dbca0;
	Node0x46dbca0:s1 -> Node0x46dbd30;
	Node0x46dbf00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%47:\l47:                                               \l  %48 = load double, double addrspace(3)* getelementptr inbounds ([1024 x\l... double], [1024 x double] addrspace(3)* @_ZZ16kernBlockWiseSummmPdE8blockSum,\l... i32 0, i32 0), align 16, !tbaa !16\l  %49 = sext i32 %23 to i64\l  %50 = mul i64 %49, %1\l  %51 = getelementptr inbounds double, double addrspace(1)* %2, i64 %50\l  store double %48, double addrspace(1)* %51, align 8, !tbaa !16\l  br label %52\l}"];
	Node0x46dbf00 -> Node0x46dbf50;
	Node0x46dbf50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%52:\l52:                                               \l  ret void\l}"];
}
