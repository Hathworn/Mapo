digraph "CFG for '_Z12kernUpdatePimmPdS_' function" {
	label="CFG for '_Z12kernUpdatePimmPdS_' function";

	Node0x5330f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %21 = add i32 %19, %20\l  %22 = mul i32 %21, %13\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = sext i32 %24 to i64\l  %26 = icmp ugt i64 %25, %1\l  br i1 %26, label %306, label %27\l|{<s0>T|<s1>F}}"];
	Node0x5330f40:s0 -> Node0x5333850;
	Node0x5330f40:s1 -> Node0x53338e0;
	Node0x53338e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%27:\l27:                                               \l  %28 = getelementptr inbounds double, double addrspace(1)* %2, i64 %25\l  %29 = load double, double addrspace(1)* %28, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %30 = mul i64 %25, %0\l  %31 = getelementptr inbounds double, double addrspace(1)* %3, i64 %30\l  %32 = load double, double addrspace(1)* %31, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  %33 = tail call double @llvm.amdgcn.frexp.mant.f64(double %32)\l  %34 = fcmp olt double %33, 0x3FE5555555555555\l  %35 = zext i1 %34 to i32\l  %36 = tail call double @llvm.amdgcn.ldexp.f64(double %33, i32 %35)\l  %37 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %32)\l  %38 = sub nsw i32 %37, %35\l  %39 = fadd double %36, -1.000000e+00\l  %40 = fadd double %36, 1.000000e+00\l  %41 = fadd double %40, -1.000000e+00\l  %42 = fsub double %36, %41\l  %43 = tail call double @llvm.amdgcn.rcp.f64(double %40)\l  %44 = fneg double %40\l  %45 = tail call double @llvm.fma.f64(double %44, double %43, double\l... 1.000000e+00)\l  %46 = tail call double @llvm.fma.f64(double %45, double %43, double %43)\l  %47 = tail call double @llvm.fma.f64(double %44, double %46, double\l... 1.000000e+00)\l  %48 = tail call double @llvm.fma.f64(double %47, double %46, double %46)\l  %49 = fmul double %39, %48\l  %50 = fmul double %40, %49\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %49, double %40, double %51)\l  %53 = tail call double @llvm.fma.f64(double %49, double %42, double %52)\l  %54 = fadd double %50, %53\l  %55 = fsub double %54, %50\l  %56 = fsub double %53, %55\l  %57 = fsub double %39, %54\l  %58 = fsub double %39, %57\l  %59 = fsub double %58, %54\l  %60 = fsub double %59, %56\l  %61 = fadd double %57, %60\l  %62 = fmul double %48, %61\l  %63 = fadd double %49, %62\l  %64 = fsub double %63, %49\l  %65 = fsub double %62, %64\l  %66 = fmul double %63, %63\l  %67 = tail call double @llvm.fma.f64(double %66, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %68 = tail call double @llvm.fma.f64(double %66, double %67, double\l... 0x3FC7474DD7F4DF2E)\l  %69 = tail call double @llvm.fma.f64(double %66, double %68, double\l... 0x3FCC71C016291751)\l  %70 = tail call double @llvm.fma.f64(double %66, double %69, double\l... 0x3FD249249B27ACF1)\l  %71 = tail call double @llvm.fma.f64(double %66, double %70, double\l... 0x3FD99999998EF7B6)\l  %72 = tail call double @llvm.fma.f64(double %66, double %71, double\l... 0x3FE5555555555780)\l  %73 = tail call double @llvm.amdgcn.ldexp.f64(double %63, i32 1)\l  %74 = tail call double @llvm.amdgcn.ldexp.f64(double %65, i32 1)\l  %75 = fmul double %63, %66\l  %76 = fmul double %75, %72\l  %77 = fadd double %73, %76\l  %78 = fsub double %77, %73\l  %79 = fsub double %76, %78\l  %80 = fadd double %74, %79\l  %81 = fadd double %77, %80\l  %82 = fsub double %81, %77\l  %83 = fsub double %80, %82\l  %84 = sitofp i32 %38 to double\l  %85 = fmul double %84, 0x3FE62E42FEFA39EF\l  %86 = fneg double %85\l  %87 = tail call double @llvm.fma.f64(double %84, double 0x3FE62E42FEFA39EF,\l... double %86)\l  %88 = tail call double @llvm.fma.f64(double %84, double 0x3C7ABC9E3B39803F,\l... double %87)\l  %89 = fadd double %85, %88\l  %90 = fsub double %89, %85\l  %91 = fsub double %88, %90\l  %92 = fadd double %89, %81\l  %93 = fsub double %92, %89\l  %94 = fsub double %92, %93\l  %95 = fsub double %89, %94\l  %96 = fsub double %81, %93\l  %97 = fadd double %96, %95\l  %98 = fadd double %91, %83\l  %99 = fsub double %98, %91\l  %100 = fsub double %98, %99\l  %101 = fsub double %91, %100\l  %102 = fsub double %83, %99\l  %103 = fadd double %102, %101\l  %104 = fadd double %98, %97\l  %105 = fadd double %92, %104\l  %106 = fsub double %105, %92\l  %107 = fsub double %104, %106\l  %108 = fadd double %103, %107\l  %109 = fadd double %105, %108\l  %110 = tail call double @llvm.fabs.f64(double %32) #4\l  %111 = fcmp oeq double %110, 0x7FF0000000000000\l  %112 = select i1 %111, double %32, double %109\l  %113 = fcmp olt double %32, 0.000000e+00\l  %114 = select i1 %113, double 0x7FF8000000000000, double %112\l  %115 = fcmp oeq double %32, 0.000000e+00\l  %116 = select i1 %115, double 0xFFF0000000000000, double %114\l  %117 = fadd contract double %29, %116\l  %118 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ12kernUpdatePimmPdS_E1A, i32 0, i32 %24\l  store double %117, double addrspace(3)* %118, align 8, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %119 = icmp eq i64 %1, 0\l  br i1 %119, label %158, label %120\l|{<s0>T|<s1>F}}"];
	Node0x53338e0:s0 -> Node0x533a3f0;
	Node0x53338e0:s1 -> Node0x533a480;
	Node0x533a480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%120:\l120:                                              \l  %121 = and i64 %1, 1\l  %122 = icmp eq i64 %1, 1\l  br i1 %122, label %127, label %123\l|{<s0>T|<s1>F}}"];
	Node0x533a480:s0 -> Node0x533a710;
	Node0x533a480:s1 -> Node0x533a760;
	Node0x533a760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%123:\l123:                                              \l  %124 = and i64 %1, -2\l  br label %246\l}"];
	Node0x533a760 -> Node0x533a960;
	Node0x533aa20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%125:\l125:                                              \l  %126 = trunc i64 %303 to i32\l  br label %127\l}"];
	Node0x533aa20 -> Node0x533a710;
	Node0x533a710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%127:\l127:                                              \l  %128 = phi double [ undef, %120 ], [ %302, %125 ]\l  %129 = phi i32 [ 0, %120 ], [ %126, %125 ]\l  %130 = phi double [ 0.000000e+00, %120 ], [ %302, %125 ]\l  %131 = icmp eq i64 %121, 0\l  br i1 %131, label %158, label %132\l|{<s0>T|<s1>F}}"];
	Node0x533a710:s0 -> Node0x533a3f0;
	Node0x533a710:s1 -> Node0x53375b0;
	Node0x53375b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%132:\l132:                                              \l  %133 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ12kernUpdatePimmPdS_E1A, i32 0, i32 %129\l  %134 = load double, double addrspace(3)* %133, align 8, !tbaa !16\l  %135 = fmul double %134, 0x3FF71547652B82FE\l  %136 = tail call double @llvm.rint.f64(double %135)\l  %137 = fneg double %136\l  %138 = tail call double @llvm.fma.f64(double %137, double\l... 0x3FE62E42FEFA39EF, double %134)\l  %139 = tail call double @llvm.fma.f64(double %137, double\l... 0x3C7ABC9E3B39803F, double %138)\l  %140 = tail call double @llvm.fma.f64(double %139, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %141 = tail call double @llvm.fma.f64(double %139, double %140, double\l... 0x3EC71DEE623FDE64)\l  %142 = tail call double @llvm.fma.f64(double %139, double %141, double\l... 0x3EFA01997C89E6B0)\l  %143 = tail call double @llvm.fma.f64(double %139, double %142, double\l... 0x3F2A01A014761F6E)\l  %144 = tail call double @llvm.fma.f64(double %139, double %143, double\l... 0x3F56C16C1852B7B0)\l  %145 = tail call double @llvm.fma.f64(double %139, double %144, double\l... 0x3F81111111122322)\l  %146 = tail call double @llvm.fma.f64(double %139, double %145, double\l... 0x3FA55555555502A1)\l  %147 = tail call double @llvm.fma.f64(double %139, double %146, double\l... 0x3FC5555555555511)\l  %148 = tail call double @llvm.fma.f64(double %139, double %147, double\l... 0x3FE000000000000B)\l  %149 = tail call double @llvm.fma.f64(double %139, double %148, double\l... 1.000000e+00)\l  %150 = tail call double @llvm.fma.f64(double %139, double %149, double\l... 1.000000e+00)\l  %151 = fptosi double %136 to i32\l  %152 = tail call double @llvm.amdgcn.ldexp.f64(double %150, i32 %151)\l  %153 = fcmp ogt double %134, 1.024000e+03\l  %154 = select i1 %153, double 0x7FF0000000000000, double %152\l  %155 = fcmp olt double %134, -1.075000e+03\l  %156 = select i1 %155, double 0.000000e+00, double %154\l  %157 = fadd contract double %130, %156\l  br label %158\l}"];
	Node0x53375b0 -> Node0x533a3f0;
	Node0x533a3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%158:\l158:                                              \l  %159 = phi double [ 0.000000e+00, %27 ], [ %128, %127 ], [ %157, %132 ]\l  %160 = load double, double addrspace(3)* %118, align 8, !tbaa !16\l  %161 = tail call double @llvm.amdgcn.frexp.mant.f64(double %159)\l  %162 = fcmp olt double %161, 0x3FE5555555555555\l  %163 = zext i1 %162 to i32\l  %164 = tail call double @llvm.amdgcn.ldexp.f64(double %161, i32 %163)\l  %165 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %159)\l  %166 = sub nsw i32 %165, %163\l  %167 = fadd double %164, -1.000000e+00\l  %168 = fadd double %164, 1.000000e+00\l  %169 = fadd double %168, -1.000000e+00\l  %170 = fsub double %164, %169\l  %171 = tail call double @llvm.amdgcn.rcp.f64(double %168)\l  %172 = fneg double %168\l  %173 = tail call double @llvm.fma.f64(double %172, double %171, double\l... 1.000000e+00)\l  %174 = tail call double @llvm.fma.f64(double %173, double %171, double %171)\l  %175 = tail call double @llvm.fma.f64(double %172, double %174, double\l... 1.000000e+00)\l  %176 = tail call double @llvm.fma.f64(double %175, double %174, double %174)\l  %177 = fmul double %167, %176\l  %178 = fmul double %168, %177\l  %179 = fneg double %178\l  %180 = tail call double @llvm.fma.f64(double %177, double %168, double %179)\l  %181 = tail call double @llvm.fma.f64(double %177, double %170, double %180)\l  %182 = fadd double %178, %181\l  %183 = fsub double %182, %178\l  %184 = fsub double %181, %183\l  %185 = fsub double %167, %182\l  %186 = fsub double %167, %185\l  %187 = fsub double %186, %182\l  %188 = fsub double %187, %184\l  %189 = fadd double %185, %188\l  %190 = fmul double %176, %189\l  %191 = fadd double %177, %190\l  %192 = fsub double %191, %177\l  %193 = fsub double %190, %192\l  %194 = fmul double %191, %191\l  %195 = tail call double @llvm.fma.f64(double %194, double\l... 0x3FC3AB76BF559E2B, double 0x3FC385386B47B09A)\l  %196 = tail call double @llvm.fma.f64(double %194, double %195, double\l... 0x3FC7474DD7F4DF2E)\l  %197 = tail call double @llvm.fma.f64(double %194, double %196, double\l... 0x3FCC71C016291751)\l  %198 = tail call double @llvm.fma.f64(double %194, double %197, double\l... 0x3FD249249B27ACF1)\l  %199 = tail call double @llvm.fma.f64(double %194, double %198, double\l... 0x3FD99999998EF7B6)\l  %200 = tail call double @llvm.fma.f64(double %194, double %199, double\l... 0x3FE5555555555780)\l  %201 = tail call double @llvm.amdgcn.ldexp.f64(double %191, i32 1)\l  %202 = tail call double @llvm.amdgcn.ldexp.f64(double %193, i32 1)\l  %203 = fmul double %191, %194\l  %204 = fmul double %203, %200\l  %205 = fadd double %201, %204\l  %206 = fsub double %205, %201\l  %207 = fsub double %204, %206\l  %208 = fadd double %202, %207\l  %209 = fadd double %205, %208\l  %210 = fsub double %209, %205\l  %211 = fsub double %208, %210\l  %212 = sitofp i32 %166 to double\l  %213 = fmul double %212, 0x3FE62E42FEFA39EF\l  %214 = fneg double %213\l  %215 = tail call double @llvm.fma.f64(double %212, double\l... 0x3FE62E42FEFA39EF, double %214)\l  %216 = tail call double @llvm.fma.f64(double %212, double\l... 0x3C7ABC9E3B39803F, double %215)\l  %217 = fadd double %213, %216\l  %218 = fsub double %217, %213\l  %219 = fsub double %216, %218\l  %220 = fadd double %217, %209\l  %221 = fsub double %220, %217\l  %222 = fsub double %220, %221\l  %223 = fsub double %217, %222\l  %224 = fsub double %209, %221\l  %225 = fadd double %224, %223\l  %226 = fadd double %219, %211\l  %227 = fsub double %226, %219\l  %228 = fsub double %226, %227\l  %229 = fsub double %219, %228\l  %230 = fsub double %211, %227\l  %231 = fadd double %230, %229\l  %232 = fadd double %226, %225\l  %233 = fadd double %220, %232\l  %234 = fsub double %233, %220\l  %235 = fsub double %232, %234\l  %236 = fadd double %231, %235\l  %237 = fadd double %233, %236\l  %238 = tail call double @llvm.fabs.f64(double %159) #4\l  %239 = fcmp oeq double %238, 0x7FF0000000000000\l  %240 = select i1 %239, double %159, double %237\l  %241 = fcmp olt double %159, 0.000000e+00\l  %242 = select i1 %241, double 0x7FF8000000000000, double %240\l  %243 = fcmp oeq double %159, 0.000000e+00\l  %244 = select i1 %243, double 0xFFF0000000000000, double %242\l  %245 = fsub contract double %160, %244\l  store double %245, double addrspace(1)* %28, align 8, !tbaa !16\l  br label %306\l}"];
	Node0x533a3f0 -> Node0x5333850;
	Node0x533a960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%246:\l246:                                              \l  %247 = phi i64 [ 0, %123 ], [ %303, %246 ]\l  %248 = phi double [ 0.000000e+00, %123 ], [ %302, %246 ]\l  %249 = phi i64 [ 0, %123 ], [ %304, %246 ]\l  %250 = trunc i64 %247 to i32\l  %251 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ12kernUpdatePimmPdS_E1A, i32 0, i32 %250\l  %252 = load double, double addrspace(3)* %251, align 16, !tbaa !16\l  %253 = fmul double %252, 0x3FF71547652B82FE\l  %254 = tail call double @llvm.rint.f64(double %253)\l  %255 = fneg double %254\l  %256 = tail call double @llvm.fma.f64(double %255, double\l... 0x3FE62E42FEFA39EF, double %252)\l  %257 = tail call double @llvm.fma.f64(double %255, double\l... 0x3C7ABC9E3B39803F, double %256)\l  %258 = tail call double @llvm.fma.f64(double %257, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %259 = tail call double @llvm.fma.f64(double %257, double %258, double\l... 0x3EC71DEE623FDE64)\l  %260 = tail call double @llvm.fma.f64(double %257, double %259, double\l... 0x3EFA01997C89E6B0)\l  %261 = tail call double @llvm.fma.f64(double %257, double %260, double\l... 0x3F2A01A014761F6E)\l  %262 = tail call double @llvm.fma.f64(double %257, double %261, double\l... 0x3F56C16C1852B7B0)\l  %263 = tail call double @llvm.fma.f64(double %257, double %262, double\l... 0x3F81111111122322)\l  %264 = tail call double @llvm.fma.f64(double %257, double %263, double\l... 0x3FA55555555502A1)\l  %265 = tail call double @llvm.fma.f64(double %257, double %264, double\l... 0x3FC5555555555511)\l  %266 = tail call double @llvm.fma.f64(double %257, double %265, double\l... 0x3FE000000000000B)\l  %267 = tail call double @llvm.fma.f64(double %257, double %266, double\l... 1.000000e+00)\l  %268 = tail call double @llvm.fma.f64(double %257, double %267, double\l... 1.000000e+00)\l  %269 = fptosi double %254 to i32\l  %270 = tail call double @llvm.amdgcn.ldexp.f64(double %268, i32 %269)\l  %271 = fcmp ogt double %252, 1.024000e+03\l  %272 = select i1 %271, double 0x7FF0000000000000, double %270\l  %273 = fcmp olt double %252, -1.075000e+03\l  %274 = select i1 %273, double 0.000000e+00, double %272\l  %275 = fadd contract double %248, %274\l  %276 = trunc i64 %247 to i32\l  %277 = or i32 %276, 1\l  %278 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ12kernUpdatePimmPdS_E1A, i32 0, i32 %277\l  %279 = load double, double addrspace(3)* %278, align 8, !tbaa !16\l  %280 = fmul double %279, 0x3FF71547652B82FE\l  %281 = tail call double @llvm.rint.f64(double %280)\l  %282 = fneg double %281\l  %283 = tail call double @llvm.fma.f64(double %282, double\l... 0x3FE62E42FEFA39EF, double %279)\l  %284 = tail call double @llvm.fma.f64(double %282, double\l... 0x3C7ABC9E3B39803F, double %283)\l  %285 = tail call double @llvm.fma.f64(double %284, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %286 = tail call double @llvm.fma.f64(double %284, double %285, double\l... 0x3EC71DEE623FDE64)\l  %287 = tail call double @llvm.fma.f64(double %284, double %286, double\l... 0x3EFA01997C89E6B0)\l  %288 = tail call double @llvm.fma.f64(double %284, double %287, double\l... 0x3F2A01A014761F6E)\l  %289 = tail call double @llvm.fma.f64(double %284, double %288, double\l... 0x3F56C16C1852B7B0)\l  %290 = tail call double @llvm.fma.f64(double %284, double %289, double\l... 0x3F81111111122322)\l  %291 = tail call double @llvm.fma.f64(double %284, double %290, double\l... 0x3FA55555555502A1)\l  %292 = tail call double @llvm.fma.f64(double %284, double %291, double\l... 0x3FC5555555555511)\l  %293 = tail call double @llvm.fma.f64(double %284, double %292, double\l... 0x3FE000000000000B)\l  %294 = tail call double @llvm.fma.f64(double %284, double %293, double\l... 1.000000e+00)\l  %295 = tail call double @llvm.fma.f64(double %284, double %294, double\l... 1.000000e+00)\l  %296 = fptosi double %281 to i32\l  %297 = tail call double @llvm.amdgcn.ldexp.f64(double %295, i32 %296)\l  %298 = fcmp ogt double %279, 1.024000e+03\l  %299 = select i1 %298, double 0x7FF0000000000000, double %297\l  %300 = fcmp olt double %279, -1.075000e+03\l  %301 = select i1 %300, double 0.000000e+00, double %299\l  %302 = fadd contract double %275, %301\l  %303 = add nuw i64 %247, 2\l  %304 = add i64 %249, 2\l  %305 = icmp eq i64 %304, %124\l  br i1 %305, label %125, label %246, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x533a960:s0 -> Node0x533aa20;
	Node0x533a960:s1 -> Node0x533a960;
	Node0x5333850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%306:\l306:                                              \l  ret void\l}"];
}
