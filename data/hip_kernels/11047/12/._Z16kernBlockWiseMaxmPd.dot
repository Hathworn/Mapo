digraph "CFG for '_Z16kernBlockWiseMaxmPd' function" {
	label="CFG for '_Z16kernBlockWiseMaxmPd' function";

	Node0x50de6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %6 = bitcast i8 addrspace(4)* %5 to i32 addrspace(4)*\l  %7 = load i32, i32 addrspace(4)* %6, align 4, !tbaa !4\l  %8 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !13, !invariant.load\l... !14\l  %11 = zext i16 %10 to i32\l  %12 = udiv i32 %7, %11\l  %13 = mul i32 %12, %11\l  %14 = icmp ugt i32 %7, %13\l  %15 = zext i1 %14 to i32\l  %16 = add i32 %12, %15\l  %17 = mul i32 %16, %3\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = add i32 %17, %18\l  %20 = mul i32 %19, %11\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = zext i32 %21 to i64\l  %24 = icmp ult i64 %23, %0\l  br i1 %24, label %25, label %29\l|{<s0>T|<s1>F}}"];
	Node0x50de6c0:s0 -> Node0x50e0fc0;
	Node0x50de6c0:s1 -> Node0x50e1050;
	Node0x50e0fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = sext i32 %22 to i64\l  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 %26\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %29\l}"];
	Node0x50e0fc0 -> Node0x50e1050;
	Node0x50e1050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%29:\l29:                                               \l  %30 = phi double [ %28, %25 ], [ 0xFFF0000000000000, %2 ]\l  %31 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ16kernBlockWiseMaxmPdE8blockMax, i32 0, i32 %21\l  store double %30, double addrspace(3)* %31, align 8\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = lshr i32 %11, 1\l  %33 = icmp ult i32 %21, %32\l  br i1 %33, label %36, label %34\l|{<s0>T|<s1>F}}"];
	Node0x50e1050:s0 -> Node0x50e07b0;
	Node0x50e1050:s1 -> Node0x50e2d10;
	Node0x50e2d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%34:\l34:                                               \l  %35 = icmp eq i32 %21, 0\l  br i1 %35, label %47, label %51\l|{<s0>T|<s1>F}}"];
	Node0x50e2d10:s0 -> Node0x50e2ee0;
	Node0x50e2d10:s1 -> Node0x50e2f30;
	Node0x50e07b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32 [ %45, %44 ], [ %32, %29 ]\l  %38 = load double, double addrspace(3)* %31, align 8, !tbaa !16\l  %39 = add nsw i32 %37, %21\l  %40 = getelementptr inbounds [1024 x double], [1024 x double] addrspace(3)*\l... @_ZZ16kernBlockWiseMaxmPdE8blockMax, i32 0, i32 %39\l  %41 = load double, double addrspace(3)* %40, align 8, !tbaa !16\l  %42 = fcmp contract olt double %38, %41\l  br i1 %42, label %43, label %44\l|{<s0>T|<s1>F}}"];
	Node0x50e07b0:s0 -> Node0x50e3910;
	Node0x50e07b0:s1 -> Node0x50e3070;
	Node0x50e3910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%43:\l43:                                               \l  store double %41, double addrspace(3)* %31, align 8, !tbaa !16\l  br label %44\l}"];
	Node0x50e3910 -> Node0x50e3070;
	Node0x50e3070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = sdiv i32 %37, 2\l  %46 = icmp ult i32 %21, %45\l  br i1 %46, label %36, label %34, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x50e3070:s0 -> Node0x50e07b0;
	Node0x50e3070:s1 -> Node0x50e2d10;
	Node0x50e2ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%47:\l47:                                               \l  %48 = load double, double addrspace(3)* getelementptr inbounds ([1024 x\l... double], [1024 x double] addrspace(3)* @_ZZ16kernBlockWiseMaxmPdE8blockMax,\l... i32 0, i32 0), align 16, !tbaa !16\l  %49 = sext i32 %22 to i64\l  %50 = getelementptr inbounds double, double addrspace(1)* %1, i64 %49\l  store double %48, double addrspace(1)* %50, align 8, !tbaa !16\l  br label %51\l}"];
	Node0x50e2ee0 -> Node0x50e2f30;
	Node0x50e2f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%51:\l51:                                               \l  ret void\l}"];
}
