digraph "CFG for '_Z3mulPiS_S_' function" {
	label="CFG for '_Z3mulPiS_S_' function";

	Node0x4779e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = shl nsw i32 %4, 23\l  %7 = or i32 %6, %5\l  %8 = sext i32 %7 to i64\l  %9 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %8\l  store i32 0, i32 addrspace(1)* %9, align 4, !tbaa !5\l  br label %11\l}"];
	Node0x4779e10 -> Node0x477a000;
	Node0x477b990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  ret void\l}"];
	Node0x477a000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = phi i32 [ 0, %3 ], [ %108, %11 ]\l  %13 = phi i32 [ 0, %3 ], [ %109, %11 ]\l  %14 = add nuw nsw i32 %13, %6\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %15\l  %17 = load i32, i32 addrspace(1)* %16, align 4, !tbaa !5\l  %18 = shl nsw i32 %13, 23\l  %19 = or i32 %18, %5\l  %20 = zext i32 %19 to i64\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %20\l  %22 = load i32, i32 addrspace(1)* %21, align 4, !tbaa !5\l  %23 = mul nsw i32 %22, %17\l  %24 = add nsw i32 %12, %23\l  store i32 %24, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %25 = or i32 %13, 1\l  %26 = add nuw nsw i32 %25, %6\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !5\l  %30 = shl nsw i32 %25, 23\l  %31 = or i32 %30, %5\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !5\l  %35 = mul nsw i32 %34, %29\l  %36 = add nsw i32 %24, %35\l  store i32 %36, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %37 = or i32 %13, 2\l  %38 = add nuw nsw i32 %37, %6\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !5\l  %42 = shl nsw i32 %37, 23\l  %43 = or i32 %42, %5\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !5\l  %47 = mul nsw i32 %46, %41\l  %48 = add nsw i32 %36, %47\l  store i32 %48, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %49 = or i32 %13, 3\l  %50 = add nuw nsw i32 %49, %6\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !5\l  %54 = shl nsw i32 %49, 23\l  %55 = or i32 %54, %5\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %56\l  %58 = load i32, i32 addrspace(1)* %57, align 4, !tbaa !5\l  %59 = mul nsw i32 %58, %53\l  %60 = add nsw i32 %48, %59\l  store i32 %60, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %61 = or i32 %13, 4\l  %62 = add nuw nsw i32 %61, %6\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !5\l  %66 = shl nsw i32 %61, 23\l  %67 = or i32 %66, %5\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %68\l  %70 = load i32, i32 addrspace(1)* %69, align 4, !tbaa !5\l  %71 = mul nsw i32 %70, %65\l  %72 = add nsw i32 %60, %71\l  store i32 %72, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %73 = or i32 %13, 5\l  %74 = add nuw nsw i32 %73, %6\l  %75 = sext i32 %74 to i64\l  %76 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %75\l  %77 = load i32, i32 addrspace(1)* %76, align 4, !tbaa !5\l  %78 = shl nsw i32 %73, 23\l  %79 = or i32 %78, %5\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %80\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !5\l  %83 = mul nsw i32 %82, %77\l  %84 = add nsw i32 %72, %83\l  store i32 %84, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %85 = or i32 %13, 6\l  %86 = add nuw nsw i32 %85, %6\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %87\l  %89 = load i32, i32 addrspace(1)* %88, align 4, !tbaa !5\l  %90 = shl nsw i32 %85, 23\l  %91 = or i32 %90, %5\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %92\l  %94 = load i32, i32 addrspace(1)* %93, align 4, !tbaa !5\l  %95 = mul nsw i32 %94, %89\l  %96 = add nsw i32 %84, %95\l  store i32 %96, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %97 = or i32 %13, 7\l  %98 = add nuw nsw i32 %97, %6\l  %99 = sext i32 %98 to i64\l  %100 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %99\l  %101 = load i32, i32 addrspace(1)* %100, align 4, !tbaa !5\l  %102 = shl nsw i32 %97, 23\l  %103 = or i32 %102, %5\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %104\l  %106 = load i32, i32 addrspace(1)* %105, align 4, !tbaa !5\l  %107 = mul nsw i32 %106, %101\l  %108 = add nsw i32 %96, %107\l  store i32 %108, i32 addrspace(1)* %9, align 4, !tbaa !5\l  %109 = add nuw nsw i32 %13, 8\l  %110 = icmp eq i32 %109, 8388608\l  br i1 %110, label %10, label %11, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x477a000:s0 -> Node0x477b990;
	Node0x477a000:s1 -> Node0x477a000;
}
