digraph "CFG for '_Z17convdw_gpu_kernelPfS_S_iii' function" {
	label="CFG for '_Z17convdw_gpu_kernelPfS_S_iii' function";

	Node0x45f93f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %5\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  %27 = icmp sgt i32 %3, 0\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %120\l|{<s0>T|<s1>F}}"];
	Node0x45f93f0:s0 -> Node0x45fcfe0;
	Node0x45f93f0:s1 -> Node0x45fd070;
	Node0x45fcfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %4\l  %31 = add nsw i32 %30, %23\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = and i32 %3, 3\l  %36 = icmp ult i32 %3, 4\l  br i1 %36, label %97, label %37\l|{<s0>T|<s1>F}}"];
	Node0x45fcfe0:s0 -> Node0x45fd7d0;
	Node0x45fcfe0:s1 -> Node0x45fd860;
	Node0x45fd860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%37:\l37:                                               \l  %38 = and i32 %3, -4\l  br label %39\l}"];
	Node0x45fd860 -> Node0x45fda60;
	Node0x45fda60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%39:\l39:                                               \l  %40 = phi float [ %34, %37 ], [ %93, %39 ]\l  %41 = phi i32 [ 0, %37 ], [ %94, %39 ]\l  %42 = phi i32 [ 0, %37 ], [ %95, %39 ]\l  %43 = mul nsw i32 %41, %3\l  %44 = add nsw i32 %43, %15\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7\l  %48 = mul nsw i32 %41, %4\l  %49 = add nsw i32 %48, %23\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fmul contract float %47, %52\l  %54 = fadd contract float %40, %53\l  store float %54, float addrspace(1)* %33, align 4, !tbaa !7\l  %55 = or i32 %41, 1\l  %56 = mul nsw i32 %55, %3\l  %57 = add nsw i32 %56, %15\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = mul nsw i32 %55, %4\l  %62 = add nsw i32 %61, %23\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds float, float addrspace(1)* %1, i64 %63\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7\l  %66 = fmul contract float %60, %65\l  %67 = fadd contract float %54, %66\l  store float %67, float addrspace(1)* %33, align 4, !tbaa !7\l  %68 = or i32 %41, 2\l  %69 = mul nsw i32 %68, %3\l  %70 = add nsw i32 %69, %15\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %2, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !7\l  %74 = mul nsw i32 %68, %4\l  %75 = add nsw i32 %74, %23\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %1, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !7\l  %79 = fmul contract float %73, %78\l  %80 = fadd contract float %67, %79\l  store float %80, float addrspace(1)* %33, align 4, !tbaa !7\l  %81 = or i32 %41, 3\l  %82 = mul nsw i32 %81, %3\l  %83 = add nsw i32 %82, %15\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %2, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = mul nsw i32 %81, %4\l  %88 = add nsw i32 %87, %23\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %1, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = fmul contract float %86, %91\l  %93 = fadd contract float %80, %92\l  store float %93, float addrspace(1)* %33, align 4, !tbaa !7\l  %94 = add nuw nsw i32 %41, 4\l  %95 = add i32 %42, 4\l  %96 = icmp eq i32 %95, %38\l  br i1 %96, label %97, label %39, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45fda60:s0 -> Node0x45fd7d0;
	Node0x45fda60:s1 -> Node0x45fda60;
	Node0x45fd7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%97:\l97:                                               \l  %98 = phi float [ %34, %29 ], [ %93, %39 ]\l  %99 = phi i32 [ 0, %29 ], [ %94, %39 ]\l  %100 = icmp eq i32 %35, 0\l  br i1 %100, label %120, label %101\l|{<s0>T|<s1>F}}"];
	Node0x45fd7d0:s0 -> Node0x45fd070;
	Node0x45fd7d0:s1 -> Node0x4600930;
	Node0x4600930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%101:\l101:                                              \l  %102 = phi float [ %116, %101 ], [ %98, %97 ]\l  %103 = phi i32 [ %117, %101 ], [ %99, %97 ]\l  %104 = phi i32 [ %118, %101 ], [ 0, %97 ]\l  %105 = mul nsw i32 %103, %3\l  %106 = add nsw i32 %105, %15\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %2, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !7\l  %110 = mul nsw i32 %103, %4\l  %111 = add nsw i32 %110, %23\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = fmul contract float %109, %114\l  %116 = fadd contract float %102, %115\l  store float %116, float addrspace(1)* %33, align 4, !tbaa !7\l  %117 = add nuw nsw i32 %103, 1\l  %118 = add i32 %104, 1\l  %119 = icmp eq i32 %118, %35\l  br i1 %119, label %120, label %101, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4600930:s0 -> Node0x45fd070;
	Node0x4600930:s1 -> Node0x4600930;
	Node0x45fd070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%120:\l120:                                              \l  ret void\l}"];
}
