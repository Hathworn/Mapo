digraph "CFG for '_Z17convdx_gpu_kernelPfS_S_iii' function" {
	label="CFG for '_Z17convdx_gpu_kernelPfS_S_iii' function";

	Node0x51bcbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %5\l  %25 = icmp slt i32 %23, %4\l  %26 = select i1 %24, i1 %25, i1 false\l  %27 = icmp sgt i32 %3, 0\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %156\l|{<s0>T|<s1>F}}"];
	Node0x51bcbd0:s0 -> Node0x51c07c0;
	Node0x51bcbd0:s1 -> Node0x51c0850;
	Node0x51c07c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%29:\l29:                                               \l  %30 = mul nsw i32 %15, %3\l  %31 = mul nsw i32 %23, %3\l  %32 = mul nsw i32 %15, %4\l  %33 = add nsw i32 %32, %23\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %0, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !7\l  %37 = and i32 %3, 7\l  %38 = icmp ult i32 %3, 8\l  br i1 %38, label %135, label %39\l|{<s0>T|<s1>F}}"];
	Node0x51c07c0:s0 -> Node0x51c10e0;
	Node0x51c07c0:s1 -> Node0x51c1170;
	Node0x51c1170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%39:\l39:                                               \l  %40 = and i32 %3, -8\l  br label %41\l}"];
	Node0x51c1170 -> Node0x51c1370;
	Node0x51c1370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%41:\l41:                                               \l  %42 = phi float [ %36, %39 ], [ %131, %41 ]\l  %43 = phi i32 [ 0, %39 ], [ %132, %41 ]\l  %44 = phi i32 [ 0, %39 ], [ %133, %41 ]\l  %45 = add nsw i32 %43, %30\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %1, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7\l  %49 = add nsw i32 %43, %31\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fmul contract float %48, %52\l  %54 = fadd contract float %42, %53\l  store float %54, float addrspace(1)* %35, align 4, !tbaa !7\l  %55 = or i32 %43, 1\l  %56 = add nsw i32 %55, %30\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = add nsw i32 %55, %31\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %2, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7\l  %64 = fmul contract float %59, %63\l  %65 = fadd contract float %54, %64\l  store float %65, float addrspace(1)* %35, align 4, !tbaa !7\l  %66 = or i32 %43, 2\l  %67 = add nsw i32 %66, %30\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7\l  %71 = add nsw i32 %66, %31\l  %72 = sext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fmul contract float %70, %74\l  %76 = fadd contract float %65, %75\l  store float %76, float addrspace(1)* %35, align 4, !tbaa !7\l  %77 = or i32 %43, 3\l  %78 = add nsw i32 %77, %30\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = add nsw i32 %77, %31\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %2, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !7\l  %86 = fmul contract float %81, %85\l  %87 = fadd contract float %76, %86\l  store float %87, float addrspace(1)* %35, align 4, !tbaa !7\l  %88 = or i32 %43, 4\l  %89 = add nsw i32 %88, %30\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %90\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = add nsw i32 %88, %31\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %2, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !7\l  %97 = fmul contract float %92, %96\l  %98 = fadd contract float %87, %97\l  store float %98, float addrspace(1)* %35, align 4, !tbaa !7\l  %99 = or i32 %43, 5\l  %100 = add nsw i32 %99, %30\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !7\l  %104 = add nsw i32 %99, %31\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds float, float addrspace(1)* %2, i64 %105\l  %107 = load float, float addrspace(1)* %106, align 4, !tbaa !7\l  %108 = fmul contract float %103, %107\l  %109 = fadd contract float %98, %108\l  store float %109, float addrspace(1)* %35, align 4, !tbaa !7\l  %110 = or i32 %43, 6\l  %111 = add nsw i32 %110, %30\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %112\l  %114 = load float, float addrspace(1)* %113, align 4, !tbaa !7\l  %115 = add nsw i32 %110, %31\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %116\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = fmul contract float %114, %118\l  %120 = fadd contract float %109, %119\l  store float %120, float addrspace(1)* %35, align 4, !tbaa !7\l  %121 = or i32 %43, 7\l  %122 = add nsw i32 %121, %30\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !7\l  %126 = add nsw i32 %121, %31\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds float, float addrspace(1)* %2, i64 %127\l  %129 = load float, float addrspace(1)* %128, align 4, !tbaa !7\l  %130 = fmul contract float %125, %129\l  %131 = fadd contract float %120, %130\l  store float %131, float addrspace(1)* %35, align 4, !tbaa !7\l  %132 = add nuw nsw i32 %43, 8\l  %133 = add i32 %44, 8\l  %134 = icmp eq i32 %133, %40\l  br i1 %134, label %135, label %41, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x51c1370:s0 -> Node0x51c10e0;
	Node0x51c1370:s1 -> Node0x51c1370;
	Node0x51c10e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%135:\l135:                                              \l  %136 = phi float [ %36, %29 ], [ %131, %41 ]\l  %137 = phi i32 [ 0, %29 ], [ %132, %41 ]\l  %138 = icmp eq i32 %37, 0\l  br i1 %138, label %156, label %139\l|{<s0>T|<s1>F}}"];
	Node0x51c10e0:s0 -> Node0x51c0850;
	Node0x51c10e0:s1 -> Node0x51c5c30;
	Node0x51c5c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%139:\l139:                                              \l  %140 = phi float [ %152, %139 ], [ %136, %135 ]\l  %141 = phi i32 [ %153, %139 ], [ %137, %135 ]\l  %142 = phi i32 [ %154, %139 ], [ 0, %135 ]\l  %143 = add nsw i32 %141, %30\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %1, i64 %144\l  %146 = load float, float addrspace(1)* %145, align 4, !tbaa !7\l  %147 = add nsw i32 %141, %31\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds float, float addrspace(1)* %2, i64 %148\l  %150 = load float, float addrspace(1)* %149, align 4, !tbaa !7\l  %151 = fmul contract float %146, %150\l  %152 = fadd contract float %140, %151\l  store float %152, float addrspace(1)* %35, align 4, !tbaa !7\l  %153 = add nuw nsw i32 %141, 1\l  %154 = add i32 %142, 1\l  %155 = icmp eq i32 %154, %37\l  br i1 %155, label %156, label %139, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x51c5c30:s0 -> Node0x51c0850;
	Node0x51c5c30:s1 -> Node0x51c5c30;
	Node0x51c0850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%156:\l156:                                              \l  ret void\l}"];
}
