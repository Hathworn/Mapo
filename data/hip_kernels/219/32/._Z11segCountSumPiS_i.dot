digraph "CFG for '_Z11segCountSumPiS_i' function" {
	label="CFG for '_Z11segCountSumPiS_i' function";

	Node0x56f3ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  %14 = icmp sgt i32 %2, 0\l  %15 = and i1 %13, %14\l  br i1 %15, label %16, label %103\l|{<s0>T|<s1>F}}"];
	Node0x56f3ee0:s0 -> Node0x56f5f00;
	Node0x56f3ee0:s1 -> Node0x56f5f90;
	Node0x56f5f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%16:\l16:                                               \l  %17 = zext i32 %12 to i64\l  %18 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %17\l  %19 = load i32, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %20 = and i32 %2, 7\l  %21 = icmp ult i32 %2, 8\l  br i1 %21, label %86, label %22\l|{<s0>T|<s1>F}}"];
	Node0x56f5f00:s0 -> Node0x56f6570;
	Node0x56f5f00:s1 -> Node0x56f6600;
	Node0x56f6600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%22:\l22:                                               \l  %23 = and i32 %2, -8\l  br label %24\l}"];
	Node0x56f6600 -> Node0x56f6800;
	Node0x56f6800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%24:\l24:                                               \l  %25 = phi i32 [ %19, %22 ], [ %82, %24 ]\l  %26 = phi i32 [ 0, %22 ], [ %83, %24 ]\l  %27 = phi i32 [ 0, %22 ], [ %84, %24 ]\l  %28 = mul nsw i32 %26, %2\l  %29 = add i32 %28, %12\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7\l  %33 = add nsw i32 %32, %25\l  store i32 %33, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %34 = or i32 %26, 1\l  %35 = mul nsw i32 %34, %2\l  %36 = add i32 %35, %12\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  %39 = load i32, i32 addrspace(1)* %38, align 4, !tbaa !7\l  %40 = add nsw i32 %39, %33\l  store i32 %40, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %41 = or i32 %26, 2\l  %42 = mul nsw i32 %41, %2\l  %43 = add i32 %42, %12\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = add nsw i32 %46, %40\l  store i32 %47, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %48 = or i32 %26, 3\l  %49 = mul nsw i32 %48, %2\l  %50 = add i32 %49, %12\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %51\l  %53 = load i32, i32 addrspace(1)* %52, align 4, !tbaa !7\l  %54 = add nsw i32 %53, %47\l  store i32 %54, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %55 = or i32 %26, 4\l  %56 = mul nsw i32 %55, %2\l  %57 = add i32 %56, %12\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7\l  %61 = add nsw i32 %60, %54\l  store i32 %61, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %62 = or i32 %26, 5\l  %63 = mul nsw i32 %62, %2\l  %64 = add i32 %63, %12\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %65\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !7\l  %68 = add nsw i32 %67, %61\l  store i32 %68, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %69 = or i32 %26, 6\l  %70 = mul nsw i32 %69, %2\l  %71 = add i32 %70, %12\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %72\l  %74 = load i32, i32 addrspace(1)* %73, align 4, !tbaa !7\l  %75 = add nsw i32 %74, %68\l  store i32 %75, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %76 = or i32 %26, 7\l  %77 = mul nsw i32 %76, %2\l  %78 = add i32 %77, %12\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %79\l  %81 = load i32, i32 addrspace(1)* %80, align 4, !tbaa !7\l  %82 = add nsw i32 %81, %75\l  store i32 %82, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %83 = add nuw nsw i32 %26, 8\l  %84 = add i32 %27, 8\l  %85 = icmp eq i32 %84, %23\l  br i1 %85, label %86, label %24, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x56f6800:s0 -> Node0x56f6570;
	Node0x56f6800:s1 -> Node0x56f6800;
	Node0x56f6570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%86:\l86:                                               \l  %87 = phi i32 [ %19, %16 ], [ %82, %24 ]\l  %88 = phi i32 [ 0, %16 ], [ %83, %24 ]\l  %89 = icmp eq i32 %20, 0\l  br i1 %89, label %103, label %90\l|{<s0>T|<s1>F}}"];
	Node0x56f6570:s0 -> Node0x56f5f90;
	Node0x56f6570:s1 -> Node0x56f9d50;
	Node0x56f9d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %99, %90 ], [ %87, %86 ]\l  %92 = phi i32 [ %100, %90 ], [ %88, %86 ]\l  %93 = phi i32 [ %101, %90 ], [ 0, %86 ]\l  %94 = mul nsw i32 %92, %2\l  %95 = add i32 %94, %12\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7\l  %99 = add nsw i32 %98, %91\l  store i32 %99, i32 addrspace(1)* %18, align 4, !tbaa !7\l  %100 = add nuw nsw i32 %92, 1\l  %101 = add i32 %93, 1\l  %102 = icmp eq i32 %101, %20\l  br i1 %102, label %103, label %90, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x56f9d50:s0 -> Node0x56f5f90;
	Node0x56f9d50:s1 -> Node0x56f9d50;
	Node0x56f5f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%103:\l103:                                              \l  ret void\l}"];
}
