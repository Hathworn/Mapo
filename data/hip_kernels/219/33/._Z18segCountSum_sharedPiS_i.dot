digraph "CFG for '_Z18segCountSum_sharedPiS_i' function" {
	label="CFG for '_Z18segCountSum_sharedPiS_i' function";

	Node0x5ff2680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%3:\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = mul i32 %9, %8\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp ult i32 %12, %2\l  %14 = icmp sgt i32 %2, 0\l  %15 = and i1 %13, %14\l  %16 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @s_counter,\l... i32 0, i32 %12\l  %17 = load i32, i32 addrspace(3)* %16, align 4, !tbaa !7\l  br i1 %15, label %18, label %105\l|{<s0>T|<s1>F}}"];
	Node0x5ff2680:s0 -> Node0x5ff49e0;
	Node0x5ff2680:s1 -> Node0x5ff4a70;
	Node0x5ff49e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = and i32 %2, 7\l  %20 = icmp ult i32 %2, 8\l  br i1 %20, label %85, label %21\l|{<s0>T|<s1>F}}"];
	Node0x5ff49e0:s0 -> Node0x5ff4d00;
	Node0x5ff49e0:s1 -> Node0x5ff4d50;
	Node0x5ff4d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%21:\l21:                                               \l  %22 = and i32 %2, -8\l  br label %23\l}"];
	Node0x5ff4d50 -> Node0x5ff4f50;
	Node0x5ff4f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%23:\l23:                                               \l  %24 = phi i32 [ %17, %21 ], [ %81, %23 ]\l  %25 = phi i32 [ 0, %21 ], [ %82, %23 ]\l  %26 = phi i32 [ 0, %21 ], [ %83, %23 ]\l  %27 = mul nsw i32 %25, %2\l  %28 = add i32 %27, %12\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %29\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = add nsw i32 %31, %24\l  %33 = or i32 %25, 1\l  %34 = mul nsw i32 %33, %2\l  %35 = add i32 %34, %12\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = add nsw i32 %38, %32\l  %40 = or i32 %25, 2\l  %41 = mul nsw i32 %40, %2\l  %42 = add i32 %41, %12\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = add nsw i32 %45, %39\l  %47 = or i32 %25, 3\l  %48 = mul nsw i32 %47, %2\l  %49 = add i32 %48, %12\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %50\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = add nsw i32 %52, %46\l  %54 = or i32 %25, 4\l  %55 = mul nsw i32 %54, %2\l  %56 = add i32 %55, %12\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %60 = add nsw i32 %59, %53\l  %61 = or i32 %25, 5\l  %62 = mul nsw i32 %61, %2\l  %63 = add i32 %62, %12\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %64\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %67 = add nsw i32 %66, %60\l  %68 = or i32 %25, 6\l  %69 = mul nsw i32 %68, %2\l  %70 = add i32 %69, %12\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = add nsw i32 %73, %67\l  %75 = or i32 %25, 7\l  %76 = mul nsw i32 %75, %2\l  %77 = add i32 %76, %12\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %81 = add nsw i32 %80, %74\l  %82 = add nuw nsw i32 %25, 8\l  %83 = add i32 %26, 8\l  %84 = icmp eq i32 %83, %22\l  br i1 %84, label %85, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ff4f50:s0 -> Node0x5ff4d00;
	Node0x5ff4f50:s1 -> Node0x5ff4f50;
	Node0x5ff4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%85:\l85:                                               \l  %86 = phi i32 [ undef, %18 ], [ %81, %23 ]\l  %87 = phi i32 [ %17, %18 ], [ %81, %23 ]\l  %88 = phi i32 [ 0, %18 ], [ %82, %23 ]\l  %89 = icmp eq i32 %19, 0\l  br i1 %89, label %103, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5ff4d00:s0 -> Node0x5ff8d00;
	Node0x5ff4d00:s1 -> Node0x5ff8d50;
	Node0x5ff8d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = phi i32 [ %99, %90 ], [ %87, %85 ]\l  %92 = phi i32 [ %100, %90 ], [ %88, %85 ]\l  %93 = phi i32 [ %101, %90 ], [ 0, %85 ]\l  %94 = mul nsw i32 %92, %2\l  %95 = add i32 %94, %12\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %99 = add nsw i32 %98, %91\l  %100 = add nuw nsw i32 %92, 1\l  %101 = add i32 %93, 1\l  %102 = icmp eq i32 %101, %19\l  br i1 %102, label %103, label %90, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ff8d50:s0 -> Node0x5ff8d00;
	Node0x5ff8d50:s1 -> Node0x5ff8d50;
	Node0x5ff8d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%103:\l103:                                              \l  %104 = phi i32 [ %86, %85 ], [ %99, %90 ]\l  store i32 %104, i32 addrspace(3)* %16, align 4, !tbaa !7\l  br label %105\l}"];
	Node0x5ff8d00 -> Node0x5ff4a70;
	Node0x5ff4a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%105:\l105:                                              \l  %106 = phi i32 [ %104, %103 ], [ %17, %3 ]\l  %107 = zext i32 %12 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %107\l  store i32 %106, i32 addrspace(1)* %108, align 4, !tbaa !7\l  ret void\l}"];
}
