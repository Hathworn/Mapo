digraph "CFG for '_Z18make_and_count_segPfPiS0_iiiiiifff' function" {
	label="CFG for '_Z18make_and_count_segPfPiS0_iiiiiifff' function";

	Node0x4623790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%12:\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %19 = mul i32 %18, %17\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = mul nsw i32 %21, %6\l  %23 = icmp sgt i32 %22, %5\l  %24 = sub nsw i32 %21, %7\l  %25 = add nsw i32 %24, 1\l  %26 = mul nsw i32 %25, %8\l  %27 = add nsw i32 %26, %5\l  %28 = icmp slt i32 %27, %3\l  %29 = and i1 %23, %28\l  %30 = mul nsw i32 %24, %8\l  %31 = add nsw i32 %30, %5\l  %32 = select i1 %29, i32 %8, i32 %6\l  %33 = select i1 %29, i32 %31, i32 %22\l  %34 = mul nsw i32 %21, %4\l  %35 = sext i32 %33 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %35\l  %38 = sext i32 %34 to i64\l  %39 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %38\l  %40 = icmp sgt i32 %32, 0\l  br i1 %40, label %41, label %180\l|{<s0>T|<s1>F}}"];
	Node0x4623790:s0 -> Node0x4626e70;
	Node0x4623790:s1 -> Node0x4626f00;
	Node0x4626e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%41:\l41:                                               \l  %42 = add nsw i32 %4, -1\l  %43 = and i32 %32, 3\l  %44 = icmp ult i32 %32, 4\l  br i1 %44, label %148, label %45\l|{<s0>T|<s1>F}}"];
	Node0x4626e70:s0 -> Node0x4627250;
	Node0x4626e70:s1 -> Node0x46272a0;
	Node0x46272a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%45:\l45:                                               \l  %46 = and i32 %32, -4\l  br label %47\l}"];
	Node0x46272a0 -> Node0x46274a0;
	Node0x46274a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %45 ], [ %145, %138 ]\l  %49 = phi i32 [ 0, %45 ], [ %146, %138 ]\l  %50 = zext i32 %48 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %36, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = tail call float @llvm.fabs.f32(float %52)\l  %54 = fcmp contract ogt float %53, %9\l  %55 = fcmp contract olt float %53, %10\l  %56 = and i1 %54, %55\l  br i1 %56, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x46274a0:s0 -> Node0x4627e50;
	Node0x46274a0:s1 -> Node0x4627ee0;
	Node0x4627e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%57:\l57:                                               \l  %58 = fsub contract float %10, %53\l  %59 = tail call float @llvm.fabs.f32(float %58)\l  %60 = fmul contract float %59, %11\l  %61 = tail call float @llvm.ceil.f32(float %60)\l  %62 = fptosi float %61 to i32\l  br label %66\l}"];
	Node0x4627e50 -> Node0x4628480;
	Node0x4627ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%63:\l63:                                               \l  %64 = fcmp contract ult float %53, %10\l  %65 = select i1 %64, i32 %42, i32 0\l  br label %66\l}"];
	Node0x4627ee0 -> Node0x4628480;
	Node0x4628480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%66:\l66:                                               \l  %67 = phi i32 [ %62, %57 ], [ %65, %63 ]\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %50\l  store i32 %67, i32 addrspace(1)* %68, align 4, !tbaa !11\l  %69 = sext i32 %67 to i64\l  %70 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %69\l  %71 = load i32, i32 addrspace(1)* %70, align 4, !tbaa !11\l  %72 = add nsw i32 %71, 1\l  store i32 %72, i32 addrspace(1)* %70, align 4, !tbaa !11\l  %73 = or i32 %48, 1\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %36, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = tail call float @llvm.fabs.f32(float %76)\l  %78 = fcmp contract ogt float %77, %9\l  %79 = fcmp contract olt float %77, %10\l  %80 = and i1 %78, %79\l  br i1 %80, label %84, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4628480:s0 -> Node0x4629ff0;
	Node0x4628480:s1 -> Node0x462a040;
	Node0x462a040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%81:\l81:                                               \l  %82 = fcmp contract ult float %77, %10\l  %83 = select i1 %82, i32 %42, i32 0\l  br label %90\l}"];
	Node0x462a040 -> Node0x462a2c0;
	Node0x4629ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%84:\l84:                                               \l  %85 = fsub contract float %10, %77\l  %86 = tail call float @llvm.fabs.f32(float %85)\l  %87 = fmul contract float %86, %11\l  %88 = tail call float @llvm.ceil.f32(float %87)\l  %89 = fptosi float %88 to i32\l  br label %90\l}"];
	Node0x4629ff0 -> Node0x462a2c0;
	Node0x462a2c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%90:\l90:                                               \l  %91 = phi i32 [ %89, %84 ], [ %83, %81 ]\l  %92 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %74\l  store i32 %91, i32 addrspace(1)* %92, align 4, !tbaa !11\l  %93 = sext i32 %91 to i64\l  %94 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %93\l  %95 = load i32, i32 addrspace(1)* %94, align 4, !tbaa !11\l  %96 = add nsw i32 %95, 1\l  store i32 %96, i32 addrspace(1)* %94, align 4, !tbaa !11\l  %97 = or i32 %48, 2\l  %98 = zext i32 %97 to i64\l  %99 = getelementptr inbounds float, float addrspace(1)* %36, i64 %98\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = tail call float @llvm.fabs.f32(float %100)\l  %102 = fcmp contract ogt float %101, %9\l  %103 = fcmp contract olt float %101, %10\l  %104 = and i1 %102, %103\l  br i1 %104, label %108, label %105\l|{<s0>T|<s1>F}}"];
	Node0x462a2c0:s0 -> Node0x462b0c0;
	Node0x462a2c0:s1 -> Node0x462b110;
	Node0x462b110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%105:\l105:                                              \l  %106 = fcmp contract ult float %101, %10\l  %107 = select i1 %106, i32 %42, i32 0\l  br label %114\l}"];
	Node0x462b110 -> Node0x462b350;
	Node0x462b0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%108:\l108:                                              \l  %109 = fsub contract float %10, %101\l  %110 = tail call float @llvm.fabs.f32(float %109)\l  %111 = fmul contract float %110, %11\l  %112 = tail call float @llvm.ceil.f32(float %111)\l  %113 = fptosi float %112 to i32\l  br label %114\l}"];
	Node0x462b0c0 -> Node0x462b350;
	Node0x462b350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%114:\l114:                                              \l  %115 = phi i32 [ %113, %108 ], [ %107, %105 ]\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %98\l  store i32 %115, i32 addrspace(1)* %116, align 4, !tbaa !11\l  %117 = sext i32 %115 to i64\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %117\l  %119 = load i32, i32 addrspace(1)* %118, align 4, !tbaa !11\l  %120 = add nsw i32 %119, 1\l  store i32 %120, i32 addrspace(1)* %118, align 4, !tbaa !11\l  %121 = or i32 %48, 3\l  %122 = zext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %36, i64 %122\l  %124 = load float, float addrspace(1)* %123, align 4, !tbaa !7\l  %125 = tail call float @llvm.fabs.f32(float %124)\l  %126 = fcmp contract ogt float %125, %9\l  %127 = fcmp contract olt float %125, %10\l  %128 = and i1 %126, %127\l  br i1 %128, label %132, label %129\l|{<s0>T|<s1>F}}"];
	Node0x462b350:s0 -> Node0x4628610;
	Node0x462b350:s1 -> Node0x4628660;
	Node0x4628660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%129:\l129:                                              \l  %130 = fcmp contract ult float %125, %10\l  %131 = select i1 %130, i32 %42, i32 0\l  br label %138\l}"];
	Node0x4628660 -> Node0x4627590;
	Node0x4628610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%132:\l132:                                              \l  %133 = fsub contract float %10, %125\l  %134 = tail call float @llvm.fabs.f32(float %133)\l  %135 = fmul contract float %134, %11\l  %136 = tail call float @llvm.ceil.f32(float %135)\l  %137 = fptosi float %136 to i32\l  br label %138\l}"];
	Node0x4628610 -> Node0x4627590;
	Node0x4627590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%138:\l138:                                              \l  %139 = phi i32 [ %137, %132 ], [ %131, %129 ]\l  %140 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %122\l  store i32 %139, i32 addrspace(1)* %140, align 4, !tbaa !11\l  %141 = sext i32 %139 to i64\l  %142 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %141\l  %143 = load i32, i32 addrspace(1)* %142, align 4, !tbaa !11\l  %144 = add nsw i32 %143, 1\l  store i32 %144, i32 addrspace(1)* %142, align 4, !tbaa !11\l  %145 = add nuw nsw i32 %48, 4\l  %146 = add i32 %49, 4\l  %147 = icmp eq i32 %146, %46\l  br i1 %147, label %148, label %47, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4627590:s0 -> Node0x4627250;
	Node0x4627590:s1 -> Node0x46274a0;
	Node0x4627250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%148:\l148:                                              \l  %149 = phi i32 [ 0, %41 ], [ %145, %138 ]\l  %150 = icmp eq i32 %43, 0\l  br i1 %150, label %180, label %151\l|{<s0>T|<s1>F}}"];
	Node0x4627250:s0 -> Node0x4626f00;
	Node0x4627250:s1 -> Node0x462d4d0;
	Node0x462d4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%151:\l151:                                              \l  %152 = phi i32 [ %177, %170 ], [ %149, %148 ]\l  %153 = phi i32 [ %178, %170 ], [ 0, %148 ]\l  %154 = zext i32 %152 to i64\l  %155 = getelementptr inbounds float, float addrspace(1)* %36, i64 %154\l  %156 = load float, float addrspace(1)* %155, align 4, !tbaa !7\l  %157 = tail call float @llvm.fabs.f32(float %156)\l  %158 = fcmp contract ogt float %157, %9\l  %159 = fcmp contract olt float %157, %10\l  %160 = and i1 %158, %159\l  br i1 %160, label %164, label %161\l|{<s0>T|<s1>F}}"];
	Node0x462d4d0:s0 -> Node0x462dba0;
	Node0x462d4d0:s1 -> Node0x462dc30;
	Node0x462dc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%161:\l161:                                              \l  %162 = fcmp contract ult float %157, %10\l  %163 = select i1 %162, i32 %42, i32 0\l  br label %170\l}"];
	Node0x462dc30 -> Node0x462d5d0;
	Node0x462dba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%164:\l164:                                              \l  %165 = fsub contract float %10, %157\l  %166 = tail call float @llvm.fabs.f32(float %165)\l  %167 = fmul contract float %166, %11\l  %168 = tail call float @llvm.ceil.f32(float %167)\l  %169 = fptosi float %168 to i32\l  br label %170\l}"];
	Node0x462dba0 -> Node0x462d5d0;
	Node0x462d5d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%170:\l170:                                              \l  %171 = phi i32 [ %169, %164 ], [ %163, %161 ]\l  %172 = getelementptr inbounds i32, i32 addrspace(1)* %37, i64 %154\l  store i32 %171, i32 addrspace(1)* %172, align 4, !tbaa !11\l  %173 = sext i32 %171 to i64\l  %174 = getelementptr inbounds i32, i32 addrspace(1)* %39, i64 %173\l  %175 = load i32, i32 addrspace(1)* %174, align 4, !tbaa !11\l  %176 = add nsw i32 %175, 1\l  store i32 %176, i32 addrspace(1)* %174, align 4, !tbaa !11\l  %177 = add nuw nsw i32 %152, 1\l  %178 = add i32 %153, 1\l  %179 = icmp eq i32 %178, %43\l  br i1 %179, label %180, label %151, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x462d5d0:s0 -> Node0x4626f00;
	Node0x462d5d0:s1 -> Node0x462d4d0;
	Node0x4626f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%180:\l180:                                              \l  ret void\l}"];
}
