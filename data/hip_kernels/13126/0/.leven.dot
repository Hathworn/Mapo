digraph "CFG for 'leven' function" {
	label="CFG for 'leven' function";

	Node0x52ea8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp sgt i32 %13, 0\l  %15 = icmp slt i32 %13, %3\l  %16 = select i1 %14, i1 %15, i1 false\l  br i1 %16, label %17, label %167\l|{<s0>T|<s1>F}}"];
	Node0x52ea8d0:s0 -> Node0x52eb490;
	Node0x52ea8d0:s1 -> Node0x52eca70;
	Node0x52eb490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%17:\l17:                                               \l  %18 = trunc i32 %13 to i8\l  store i8 %18, i8 addrspace(1)* %2, align 1, !tbaa !7\l  %19 = add nsw i32 %13, -1\l  %20 = icmp slt i32 %3, 1\l  br i1 %20, label %167, label %21\l|{<s0>T|<s1>F}}"];
	Node0x52eb490:s0 -> Node0x52eca70;
	Node0x52eb490:s1 -> Node0x52ecf30;
	Node0x52ecf30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%21:\l21:                                               \l  %22 = zext i32 %19 to i64\l  %23 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %22\l  %24 = load i8, i8 addrspace(1)* %2, align 1\l  %25 = and i32 %3, 3\l  %26 = icmp ult i32 %3, 4\l  br i1 %26, label %131, label %27\l|{<s0>T|<s1>F}}"];
	Node0x52ecf30:s0 -> Node0x52ed370;
	Node0x52ecf30:s1 -> Node0x52ed3c0;
	Node0x52ed3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%27:\l27:                                               \l  %28 = and i32 %3, -4\l  br label %29\l}"];
	Node0x52ed3c0 -> Node0x52ed5c0;
	Node0x52ed5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%29:\l29:                                               \l  %30 = phi i8 [ %24, %27 ], [ %125, %29 ]\l  %31 = phi i32 [ %19, %27 ], [ %124, %29 ]\l  %32 = phi i32 [ 1, %27 ], [ %126, %29 ]\l  %33 = phi i32 [ 0, %27 ], [ %127, %29 ]\l  %34 = zext i32 %32 to i64\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %34\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !7\l  %37 = add nsw i32 %32, -1\l  %38 = sext i32 %37 to i64\l  %39 = tail call i8 @llvm.smin.i8(i8 %36, i8 %30)\l  %40 = sext i8 %39 to i32\l  %41 = add nsw i32 %40, 1\l  %42 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7\l  %43 = sext i8 %42 to i32\l  %44 = icmp slt i32 %41, %43\l  %45 = zext i1 %44 to i32\l  %46 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %38\l  %47 = load i8, i8 addrspace(1)* %46, align 1, !tbaa !7\l  %48 = sext i8 %47 to i32\l  %49 = icmp eq i32 %45, %48\l  %50 = icmp eq i32 %31, -1\l  %51 = icmp eq i8 %42, %47\l  %52 = select i1 %51, i32 255, i32 0\l  %53 = select i1 %50, i32 %52, i32 %41\l  %54 = select i1 %49, i32 %31, i32 %53\l  %55 = zext i8 %36 to i32\l  %56 = trunc i32 %54 to i8\l  store i8 %56, i8 addrspace(1)* %35, align 1, !tbaa !7\l  %57 = add nuw nsw i32 %32, 1\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !7\l  %61 = sext i32 %32 to i64\l  %62 = tail call i8 @llvm.smin.i8(i8 %60, i8 %56)\l  %63 = sext i8 %62 to i32\l  %64 = add nsw i32 %63, 1\l  %65 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7\l  %66 = sext i8 %65 to i32\l  %67 = icmp slt i32 %64, %66\l  %68 = zext i1 %67 to i32\l  %69 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %61\l  %70 = load i8, i8 addrspace(1)* %69, align 1, !tbaa !7\l  %71 = sext i8 %70 to i32\l  %72 = icmp eq i32 %68, %71\l  %73 = icmp eq i8 %36, -1\l  %74 = icmp eq i8 %65, %70\l  %75 = select i1 %74, i32 255, i32 0\l  %76 = select i1 %73, i32 %75, i32 %64\l  %77 = select i1 %72, i32 %55, i32 %76\l  %78 = zext i8 %60 to i32\l  %79 = trunc i32 %77 to i8\l  store i8 %79, i8 addrspace(1)* %59, align 1, !tbaa !7\l  %80 = add nuw nsw i32 %32, 2\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %81\l  %83 = load i8, i8 addrspace(1)* %82, align 1, !tbaa !7\l  %84 = sext i32 %57 to i64\l  %85 = tail call i8 @llvm.smin.i8(i8 %83, i8 %79)\l  %86 = sext i8 %85 to i32\l  %87 = add nsw i32 %86, 1\l  %88 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7\l  %89 = sext i8 %88 to i32\l  %90 = icmp slt i32 %87, %89\l  %91 = zext i1 %90 to i32\l  %92 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %84\l  %93 = load i8, i8 addrspace(1)* %92, align 1, !tbaa !7\l  %94 = sext i8 %93 to i32\l  %95 = icmp eq i32 %91, %94\l  %96 = icmp eq i8 %60, -1\l  %97 = icmp eq i8 %88, %93\l  %98 = select i1 %97, i32 255, i32 0\l  %99 = select i1 %96, i32 %98, i32 %87\l  %100 = select i1 %95, i32 %78, i32 %99\l  %101 = zext i8 %83 to i32\l  %102 = trunc i32 %100 to i8\l  store i8 %102, i8 addrspace(1)* %82, align 1, !tbaa !7\l  %103 = add nuw i32 %32, 3\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %104\l  %106 = load i8, i8 addrspace(1)* %105, align 1, !tbaa !7\l  %107 = sext i32 %80 to i64\l  %108 = tail call i8 @llvm.smin.i8(i8 %106, i8 %102)\l  %109 = sext i8 %108 to i32\l  %110 = add nsw i32 %109, 1\l  %111 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7\l  %112 = sext i8 %111 to i32\l  %113 = icmp slt i32 %110, %112\l  %114 = zext i1 %113 to i32\l  %115 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %107\l  %116 = load i8, i8 addrspace(1)* %115, align 1, !tbaa !7\l  %117 = sext i8 %116 to i32\l  %118 = icmp eq i32 %114, %117\l  %119 = icmp eq i8 %83, -1\l  %120 = icmp eq i8 %111, %116\l  %121 = select i1 %120, i32 255, i32 0\l  %122 = select i1 %119, i32 %121, i32 %110\l  %123 = select i1 %118, i32 %101, i32 %122\l  %124 = sext i8 %106 to i32\l  %125 = trunc i32 %123 to i8\l  store i8 %125, i8 addrspace(1)* %105, align 1, !tbaa !7\l  %126 = add nuw i32 %32, 4\l  %127 = add i32 %33, 4\l  %128 = icmp eq i32 %127, %28\l  br i1 %128, label %129, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x52ed5c0:s0 -> Node0x52ec960;
	Node0x52ed5c0:s1 -> Node0x52ed5c0;
	Node0x52ec960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%129:\l129:                                              \l  %130 = sext i8 %106 to i32\l  br label %131\l}"];
	Node0x52ec960 -> Node0x52ed370;
	Node0x52ed370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%131:\l131:                                              \l  %132 = phi i8 [ %24, %21 ], [ %125, %129 ]\l  %133 = phi i32 [ %19, %21 ], [ %130, %129 ]\l  %134 = phi i32 [ 1, %21 ], [ %126, %129 ]\l  %135 = icmp eq i32 %25, 0\l  br i1 %135, label %167, label %136\l|{<s0>T|<s1>F}}"];
	Node0x52ed370:s0 -> Node0x52eca70;
	Node0x52ed370:s1 -> Node0x52f24b0;
	Node0x52f24b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%136:\l136:                                              \l  %137 = phi i8 [ %163, %136 ], [ %132, %131 ]\l  %138 = phi i32 [ %162, %136 ], [ %133, %131 ]\l  %139 = phi i32 [ %164, %136 ], [ %134, %131 ]\l  %140 = phi i32 [ %165, %136 ], [ 0, %131 ]\l  %141 = zext i32 %139 to i64\l  %142 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %141\l  %143 = load i8, i8 addrspace(1)* %142, align 1, !tbaa !7\l  %144 = add nsw i32 %139, -1\l  %145 = sext i32 %144 to i64\l  %146 = tail call i8 @llvm.smin.i8(i8 %143, i8 %137)\l  %147 = sext i8 %146 to i32\l  %148 = add nsw i32 %147, 1\l  %149 = load i8, i8 addrspace(1)* %23, align 1, !tbaa !7\l  %150 = sext i8 %149 to i32\l  %151 = icmp slt i32 %148, %150\l  %152 = zext i1 %151 to i32\l  %153 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %145\l  %154 = load i8, i8 addrspace(1)* %153, align 1, !tbaa !7\l  %155 = sext i8 %154 to i32\l  %156 = icmp eq i32 %152, %155\l  %157 = icmp eq i32 %138, -1\l  %158 = icmp eq i8 %149, %154\l  %159 = select i1 %158, i32 255, i32 0\l  %160 = select i1 %157, i32 %159, i32 %148\l  %161 = select i1 %156, i32 %138, i32 %160\l  %162 = sext i8 %143 to i32\l  %163 = trunc i32 %161 to i8\l  store i8 %163, i8 addrspace(1)* %142, align 1, !tbaa !7\l  %164 = add nuw i32 %139, 1\l  %165 = add i32 %140, 1\l  %166 = icmp eq i32 %165, %25\l  br i1 %166, label %167, label %136, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x52f24b0:s0 -> Node0x52eca70;
	Node0x52f24b0:s1 -> Node0x52f24b0;
	Node0x52eca70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%167:\l167:                                              \l  ret void\l}"];
}
