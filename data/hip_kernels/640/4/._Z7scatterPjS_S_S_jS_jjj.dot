digraph "CFG for '_Z7scatterPjS_S_S_jS_jjj' function" {
	label="CFG for '_Z7scatterPjS_S_S_jS_jjj' function";

	Node0x4f7df80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%9:\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = icmp ult i32 %10, %8\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br i1 %11, label %13, label %18\l|{<s0>T|<s1>F}}"];
	Node0x4f7df80:s0 -> Node0x4f7f660;
	Node0x4f7df80:s1 -> Node0x4f7f6f0;
	Node0x4f7f660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  br label %30\l}"];
	Node0x4f7f660 -> Node0x4f803b0;
	Node0x4f7f6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%18:\l18:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 4, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !7\l  %27 = mul i32 %19, %23\l  %28 = add i32 %27, %10\l  %29 = icmp ult i32 %28, %4\l  br i1 %29, label %35, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4f7f6f0:s0 -> Node0x4f81c50;
	Node0x4f7f6f0:s1 -> Node0x4f81ce0;
	Node0x4f803b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i32 [ %10, %13 ], [ %33, %30 ]\l  %32 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @min_Idx,\l... i32 0, i32 %31\l  store i32 %4, i32 addrspace(3)* %32, align 4, !tbaa !16\l  %33 = add i32 %31, %17\l  %34 = icmp ult i32 %33, %8\l  br i1 %34, label %30, label %18, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4f803b0:s0 -> Node0x4f803b0;
	Node0x4f803b0:s1 -> Node0x4f7f6f0;
	Node0x4f81c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = sext i32 %28 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %39 = lshr i32 %38, %7\l  %40 = and i32 %39, %6\l  %41 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @min_Idx,\l... i32 0, i32 %40\l  %42 = atomicrmw umin i32 addrspace(3)* %41, i32 %28\l... syncscope(\"agent-one-as\") monotonic, align 4\l  br label %43\l}"];
	Node0x4f81c50 -> Node0x4f81ce0;
	Node0x4f81ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%43:\l43:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %29, label %44, label %73\l|{<s0>T|<s1>F}}"];
	Node0x4f81ce0:s0 -> Node0x4f831c0;
	Node0x4f81ce0:s1 -> Node0x4f83210;
	Node0x4f831c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%44:\l44:                                               \l  %45 = sext i32 %28 to i64\l  %46 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %45\l  %47 = load i32, i32 addrspace(1)* %46, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %48 = lshr i32 %47, %7\l  %49 = and i32 %48, %6\l  %50 = udiv i32 %26, %23\l  %51 = mul i32 %50, %23\l  %52 = icmp ugt i32 %26, %51\l  %53 = zext i1 %52 to i32\l  %54 = add i32 %50, %53\l  %55 = mul i32 %54, %49\l  %56 = add i32 %55, %19\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !16, !amdgpu.noclobber\l... !6\l  %60 = add i32 %59, %28\l  %61 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @min_Idx,\l... i32 0, i32 %49\l  %62 = load i32, i32 addrspace(3)* %61, align 4, !tbaa !16\l  %63 = sub i32 %60, %62\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %64\l  store i32 %47, i32 addrspace(1)* %65, align 4, !tbaa !16\l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %45\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !16\l  %68 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !16\l  %69 = sub i32 %28, %62\l  %70 = add i32 %69, %68\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %71\l  store i32 %67, i32 addrspace(1)* %72, align 4, !tbaa !16\l  br label %73\l}"];
	Node0x4f831c0 -> Node0x4f83210;
	Node0x4f83210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%73:\l73:                                               \l  ret void\l}"];
}
