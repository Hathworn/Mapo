digraph "CFG for '_Z8pre_sortPjS_S_S_jjjjS_' function" {
	label="CFG for '_Z8pre_sortPjS_S_S_jjjjS_' function";

	Node0x5c6bcd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%9:\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %16 = mul i32 %15, %14\l  %17 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %14\l  %18 = shl nuw nsw i32 %14, 1\l  %19 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %18\l  %20 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %5\l  %21 = getelementptr inbounds i32, i32 addrspace(3)* %20, i32 %18\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %16, %22\l  %24 = icmp ult i32 %23, %4\l  br i1 %24, label %25, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5c6bcd0:s0 -> Node0x5c6e690;
	Node0x5c6bcd0:s1 -> Node0x5c6e720;
	Node0x5c6e690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%25:\l25:                                               \l  %26 = sext i32 %23 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %22\l  store i32 %28, i32 addrspace(3)* %29, align 4, !tbaa !7\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %26\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %32 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %22\l  store i32 %31, i32 addrspace(3)* %32, align 4, !tbaa !7\l  br label %33\l}"];
	Node0x5c6e690 -> Node0x5c6e720;
	Node0x5c6e720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = icmp ult i32 %22, %5\l  br i1 %34, label %45, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5c6e720:s0 -> Node0x5c70000;
	Node0x5c6e720:s1 -> Node0x5c70090;
	Node0x5c70090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%35:\l35:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %22\l  %37 = load i32, i32 addrspace(3)* %36, align 4, !tbaa !7\l  %38 = lshr i32 %37, %7\l  %39 = and i32 %38, %6\l  %40 = getelementptr inbounds i32, i32 addrspace(3)* %19, i32 %39\l  %41 = atomicrmw add i32 addrspace(3)* %40, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %42 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %39\l  %43 = atomicrmw add i32 addrspace(3)* %42, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %44 = icmp ugt i32 %5, 1\l  br i1 %44, label %51, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5c70090:s0 -> Node0x5c70a30;
	Node0x5c70090:s1 -> Node0x5c70a80;
	Node0x5c70000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%45:\l45:                                               \l  %46 = phi i32 [ %49, %45 ], [ %22, %33 ]\l  %47 = getelementptr inbounds i32, i32 addrspace(3)* %19, i32 %46\l  store i32 0, i32 addrspace(3)* %47, align 4, !tbaa !7\l  %48 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %46\l  store i32 0, i32 addrspace(3)* %48, align 4, !tbaa !7\l  %49 = add i32 %46, %14\l  %50 = icmp ult i32 %49, %5\l  br i1 %50, label %45, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5c70000:s0 -> Node0x5c70000;
	Node0x5c70000:s1 -> Node0x5c70090;
	Node0x5c70a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%51:\l51:                                               \l  %52 = phi i32 [ %56, %55 ], [ undef, %35 ]\l  %53 = phi i32 [ %57, %55 ], [ 1, %35 ]\l  br i1 %34, label %59, label %55\l|{<s0>T|<s1>F}}"];
	Node0x5c70a30:s0 -> Node0x5c71810;
	Node0x5c70a30:s1 -> Node0x5c711d0;
	Node0x5c70a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%54:\l54:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %34, label %83, label %76\l|{<s0>T|<s1>F}}"];
	Node0x5c70a80:s0 -> Node0x5c71af0;
	Node0x5c70a80:s1 -> Node0x5c71b40;
	Node0x5c711d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%55:\l55:                                               \l  %56 = phi i32 [ %52, %51 ], [ %68, %73 ]\l  %57 = shl nsw i32 %53, 1\l  %58 = icmp ult i32 %57, %5\l  br i1 %58, label %51, label %54, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c711d0:s0 -> Node0x5c70a30;
	Node0x5c711d0:s1 -> Node0x5c70a80;
	Node0x5c71810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %68, %73 ], [ %52, %51 ]\l  %61 = phi i32 [ %74, %73 ], [ %22, %51 ]\l  %62 = icmp slt i32 %61, %53\l  br i1 %62, label %67, label %63\l|{<s0>T|<s1>F}}"];
	Node0x5c71810:s0 -> Node0x5c72240;
	Node0x5c71810:s1 -> Node0x5c722d0;
	Node0x5c722d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%63:\l63:                                               \l  %64 = sub nsw i32 %61, %53\l  %65 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %64\l  %66 = load i32, i32 addrspace(3)* %65, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x5c722d0 -> Node0x5c72240;
	Node0x5c72240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %66, %63 ], [ %60, %59 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %62, label %73, label %69\l|{<s0>T|<s1>F}}"];
	Node0x5c72240:s0 -> Node0x5c71c80;
	Node0x5c72240:s1 -> Node0x5c72a80;
	Node0x5c72a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%69:\l69:                                               \l  %70 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %61\l  %71 = load i32, i32 addrspace(3)* %70, align 4, !tbaa !7\l  %72 = add i32 %71, %68\l  store i32 %72, i32 addrspace(3)* %70, align 4, !tbaa !7\l  br label %73\l}"];
	Node0x5c72a80 -> Node0x5c71c80;
	Node0x5c71c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = add i32 %61, %14\l  %75 = icmp ult i32 %74, %5\l  br i1 %75, label %59, label %55, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5c71c80:s0 -> Node0x5c71810;
	Node0x5c71c80:s1 -> Node0x5c711d0;
	Node0x5c71b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%76:\l76:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %77 = icmp eq i32 %22, 0\l  br i1 %77, label %78, label %175\l|{<s0>T|<s1>F}}"];
	Node0x5c71b40:s0 -> Node0x5c733e0;
	Node0x5c71b40:s1 -> Node0x5c73430;
	Node0x5c733e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%78:\l78:                                               \l  %79 = and i32 %14, 3\l  %80 = icmp ult i16 %13, 4\l  br i1 %80, label %153, label %81\l|{<s0>T|<s1>F}}"];
	Node0x5c733e0:s0 -> Node0x5c73650;
	Node0x5c733e0:s1 -> Node0x5c736a0;
	Node0x5c736a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%81:\l81:                                               \l  %82 = and i32 %14, 2044\l  br label %92\l}"];
	Node0x5c736a0 -> Node0x5c73830;
	Node0x5c71af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%83:\l83:                                               \l  %84 = phi i32 [ %90, %83 ], [ %22, %54 ]\l  %85 = getelementptr inbounds i32, i32 addrspace(3)* %19, i32 %84\l  %86 = load i32, i32 addrspace(3)* %85, align 4, !tbaa !7\l  %87 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %84\l  %88 = load i32, i32 addrspace(3)* %87, align 4, !tbaa !7\l  %89 = sub i32 %88, %86\l  store i32 %89, i32 addrspace(3)* %87, align 4, !tbaa !7\l  %90 = add i32 %84, %14\l  %91 = icmp ult i32 %90, %5\l  br i1 %91, label %83, label %76, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5c71af0:s0 -> Node0x5c71af0;
	Node0x5c71af0:s1 -> Node0x5c71b40;
	Node0x5c73830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%92:\l92:                                               \l  %93 = phi i32 [ 0, %81 ], [ %150, %92 ]\l  %94 = phi i32 [ 0, %81 ], [ %151, %92 ]\l  %95 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %93\l  %96 = load i32, i32 addrspace(3)* %95, align 4, !tbaa !7\l  %97 = lshr i32 %96, %7\l  %98 = and i32 %97, %6\l  %99 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %98\l  %100 = load i32, i32 addrspace(3)* %99, align 4, !tbaa !7\l  %101 = add i32 %100, %16\l  %102 = zext i32 %101 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %102\l  store i32 %96, i32 addrspace(1)* %103, align 4, !tbaa !7\l  %104 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %93\l  %105 = load i32, i32 addrspace(3)* %104, align 4, !tbaa !7\l  %106 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %102\l  store i32 %105, i32 addrspace(1)* %106, align 4, !tbaa !7\l  %107 = add i32 %100, 1\l  store i32 %107, i32 addrspace(3)* %99, align 4, !tbaa !7\l  %108 = or i32 %93, 1\l  %109 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %108\l  %110 = load i32, i32 addrspace(3)* %109, align 4, !tbaa !7\l  %111 = lshr i32 %110, %7\l  %112 = and i32 %111, %6\l  %113 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %112\l  %114 = load i32, i32 addrspace(3)* %113, align 4, !tbaa !7\l  %115 = add i32 %114, %16\l  %116 = zext i32 %115 to i64\l  %117 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %116\l  store i32 %110, i32 addrspace(1)* %117, align 4, !tbaa !7\l  %118 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %108\l  %119 = load i32, i32 addrspace(3)* %118, align 4, !tbaa !7\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %116\l  store i32 %119, i32 addrspace(1)* %120, align 4, !tbaa !7\l  %121 = add i32 %114, 1\l  store i32 %121, i32 addrspace(3)* %113, align 4, !tbaa !7\l  %122 = or i32 %93, 2\l  %123 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %122\l  %124 = load i32, i32 addrspace(3)* %123, align 4, !tbaa !7\l  %125 = lshr i32 %124, %7\l  %126 = and i32 %125, %6\l  %127 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %126\l  %128 = load i32, i32 addrspace(3)* %127, align 4, !tbaa !7\l  %129 = add i32 %128, %16\l  %130 = zext i32 %129 to i64\l  %131 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %130\l  store i32 %124, i32 addrspace(1)* %131, align 4, !tbaa !7\l  %132 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %122\l  %133 = load i32, i32 addrspace(3)* %132, align 4, !tbaa !7\l  %134 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %130\l  store i32 %133, i32 addrspace(1)* %134, align 4, !tbaa !7\l  %135 = add i32 %128, 1\l  store i32 %135, i32 addrspace(3)* %127, align 4, !tbaa !7\l  %136 = or i32 %93, 3\l  %137 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %136\l  %138 = load i32, i32 addrspace(3)* %137, align 4, !tbaa !7\l  %139 = lshr i32 %138, %7\l  %140 = and i32 %139, %6\l  %141 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %140\l  %142 = load i32, i32 addrspace(3)* %141, align 4, !tbaa !7\l  %143 = add i32 %142, %16\l  %144 = zext i32 %143 to i64\l  %145 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %144\l  store i32 %138, i32 addrspace(1)* %145, align 4, !tbaa !7\l  %146 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %136\l  %147 = load i32, i32 addrspace(3)* %146, align 4, !tbaa !7\l  %148 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %144\l  store i32 %147, i32 addrspace(1)* %148, align 4, !tbaa !7\l  %149 = add i32 %142, 1\l  store i32 %149, i32 addrspace(3)* %141, align 4, !tbaa !7\l  %150 = add nuw nsw i32 %93, 4\l  %151 = add nuw i32 %94, 4\l  %152 = icmp eq i32 %151, %82\l  br i1 %152, label %153, label %92, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5c73830:s0 -> Node0x5c73650;
	Node0x5c73830:s1 -> Node0x5c73830;
	Node0x5c73650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%153:\l153:                                              \l  %154 = phi i32 [ 0, %78 ], [ %150, %92 ]\l  %155 = icmp eq i32 %79, 0\l  br i1 %155, label %175, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5c73650:s0 -> Node0x5c73430;
	Node0x5c73650:s1 -> Node0x5c76fd0;
	Node0x5c76fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%156:\l156:                                              \l  %157 = phi i32 [ %172, %156 ], [ %154, %153 ]\l  %158 = phi i32 [ %173, %156 ], [ 0, %153 ]\l  %159 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)*\l... @pre_sort_blk_data, i32 0, i32 %157\l  %160 = load i32, i32 addrspace(3)* %159, align 4, !tbaa !7\l  %161 = lshr i32 %160, %7\l  %162 = and i32 %161, %6\l  %163 = getelementptr inbounds i32, i32 addrspace(3)* %21, i32 %162\l  %164 = load i32, i32 addrspace(3)* %163, align 4, !tbaa !7\l  %165 = add i32 %164, %16\l  %166 = zext i32 %165 to i64\l  %167 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %166\l  store i32 %160, i32 addrspace(1)* %167, align 4, !tbaa !7\l  %168 = getelementptr inbounds i32, i32 addrspace(3)* %17, i32 %157\l  %169 = load i32, i32 addrspace(3)* %168, align 4, !tbaa !7\l  %170 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %166\l  store i32 %169, i32 addrspace(1)* %170, align 4, !tbaa !7\l  %171 = add i32 %164, 1\l  store i32 %171, i32 addrspace(3)* %163, align 4, !tbaa !7\l  %172 = add nuw nsw i32 %157, 1\l  %173 = add i32 %158, 1\l  %174 = icmp eq i32 %173, %79\l  br i1 %174, label %175, label %156, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5c76fd0:s0 -> Node0x5c73430;
	Node0x5c76fd0:s1 -> Node0x5c76fd0;
	Node0x5c73430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%175:\l175:                                              \l  ret void\l}"];
}
