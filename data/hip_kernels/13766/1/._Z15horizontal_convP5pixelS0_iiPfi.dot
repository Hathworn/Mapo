digraph "CFG for '_Z15horizontal_convP5pixelS0_iiPfi' function" {
	label="CFG for '_Z15horizontal_convP5pixelS0_iiPfi' function";

	Node0x617fe80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = zext i32 %15 to i64\l  %17 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %18 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %19 = bitcast i8 addrspace(4)* %18 to i16 addrspace(4)*\l  %20 = load i16, i16 addrspace(4)* %19, align 2, !range !4, !invariant.load !5\l  %21 = zext i16 %20 to i32\l  %22 = mul i32 %17, %21\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = zext i32 %24 to i64\l  %26 = sext i32 %2 to i64\l  %27 = mul nsw i64 %25, %26\l  %28 = add nsw i64 %27, %16\l  %29 = sext i32 %3 to i64\l  %30 = icmp ult i64 %25, %29\l  %31 = icmp ult i64 %16, %26\l  %32 = select i1 %30, i1 %31, i1 false\l  br i1 %32, label %33, label %195\l|{<s0>T|<s1>F}}"];
	Node0x617fe80:s0 -> Node0x61845f0;
	Node0x617fe80:s1 -> Node0x6184680;
	Node0x61845f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%33:\l33:                                               \l  %34 = icmp sgt i32 %5, 0\l  br i1 %34, label %35, label %100\l|{<s0>T|<s1>F}}"];
	Node0x61845f0:s0 -> Node0x6186820;
	Node0x61845f0:s1 -> Node0x6186870;
	Node0x6186820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%35:\l35:                                               \l  %36 = add nsw i32 %5, -1\l  %37 = lshr i32 %36, 1\l  %38 = sub i32 %15, %37\l  %39 = icmp slt i32 %24, %3\l  %40 = mul nsw i32 %24, %2\l  %41 = and i32 %5, 1\l  %42 = icmp eq i32 %36, 0\l  br i1 %42, label %45, label %43\l|{<s0>T|<s1>F}}"];
	Node0x6186820:s0 -> Node0x6186e00;
	Node0x6186820:s1 -> Node0x6186e50;
	Node0x6186e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%43:\l43:                                               \l  %44 = and i32 %5, -2\l  br label %107\l}"];
	Node0x6186e50 -> Node0x6187050;
	Node0x6186e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%45:\l45:                                               \l  %46 = phi float [ undef, %35 ], [ %185, %174 ]\l  %47 = phi float [ undef, %35 ], [ %188, %174 ]\l  %48 = phi float [ undef, %35 ], [ %191, %174 ]\l  %49 = phi float [ 0.000000e+00, %35 ], [ %185, %174 ]\l  %50 = phi float [ 0.000000e+00, %35 ], [ %191, %174 ]\l  %51 = phi float [ 0.000000e+00, %35 ], [ %188, %174 ]\l  %52 = phi i32 [ 0, %35 ], [ %192, %174 ]\l  %53 = icmp eq i32 %41, 0\l  br i1 %53, label %93, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6186e00:s0 -> Node0x61886f0;
	Node0x6186e00:s1 -> Node0x6188780;
	Node0x6188780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%54:\l54:                                               \l  %55 = zext i32 %52 to i64\l  %56 = add i32 %38, %52\l  %57 = icmp slt i32 %56, %2\l  br i1 %57, label %58, label %76\l|{<s0>T|<s1>F}}"];
	Node0x6188780:s0 -> Node0x6188a50;
	Node0x6188780:s1 -> Node0x6188aa0;
	Node0x6188a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%58:\l58:                                               \l  %59 = or i32 %56, %24\l  %60 = icmp sgt i32 %59, -1\l  %61 = select i1 %39, i1 %60, i1 false\l  br i1 %61, label %62, label %76\l|{<s0>T|<s1>F}}"];
	Node0x6188a50:s0 -> Node0x6188db0;
	Node0x6188a50:s1 -> Node0x6188aa0;
	Node0x6188db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%62:\l62:                                               \l  %63 = add nsw i32 %56, %40\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %64, i32 0\l  %66 = load i8, i8 addrspace(1)* %65, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %67 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %64, i32 1\l  %68 = load i8, i8 addrspace(1)* %67, align 1, !tbaa.struct !11,\l... !amdgpu.noclobber !5\l  %69 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %64, i32 2\l  %70 = load i8, i8 addrspace(1)* %69, align 1, !tbaa.struct !12,\l... !amdgpu.noclobber !5\l  %71 = zext i8 %70 to i32\l  %72 = shl nuw nsw i32 %71, 16\l  %73 = zext i8 %68 to i32\l  %74 = shl nuw nsw i32 %73, 8\l  %75 = uitofp i8 %66 to float\l  br label %76\l}"];
	Node0x6188db0 -> Node0x6188aa0;
	Node0x6188aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%76:\l76:                                               \l  %77 = phi float [ %75, %62 ], [ 0.000000e+00, %58 ], [ 0.000000e+00, %54 ]\l  %78 = phi i32 [ %74, %62 ], [ 0, %58 ], [ 0, %54 ]\l  %79 = phi i32 [ %72, %62 ], [ 0, %58 ], [ 0, %54 ]\l  %80 = or i32 %79, %78\l  %81 = lshr exact i32 %78, 8\l  %82 = lshr i32 %80, 16\l  %83 = getelementptr inbounds float, float addrspace(1)* %4, i64 %55\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %85 = fmul contract float %84, %77\l  %86 = fadd contract float %49, %85\l  %87 = sitofp i32 %81 to float\l  %88 = fmul contract float %84, %87\l  %89 = fadd contract float %51, %88\l  %90 = sitofp i32 %82 to float\l  %91 = fmul contract float %84, %90\l  %92 = fadd contract float %50, %91\l  br label %93\l}"];
	Node0x6188aa0 -> Node0x61886f0;
	Node0x61886f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%93:\l93:                                               \l  %94 = phi float [ %46, %45 ], [ %86, %76 ]\l  %95 = phi float [ %47, %45 ], [ %89, %76 ]\l  %96 = phi float [ %48, %45 ], [ %92, %76 ]\l  %97 = fptoui float %94 to i8\l  %98 = fptoui float %95 to i8\l  %99 = fptoui float %96 to i8\l  br label %100\l}"];
	Node0x61886f0 -> Node0x6186870;
	Node0x6186870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%100:\l100:                                              \l  %101 = phi i8 [ 0, %33 ], [ %98, %93 ]\l  %102 = phi i8 [ 0, %33 ], [ %99, %93 ]\l  %103 = phi i8 [ 0, %33 ], [ %97, %93 ]\l  %104 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %1,\l... i64 %28, i32 0\l  store i8 %103, i8 addrspace(1)* %104, align 1, !tbaa !15\l  %105 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %1,\l... i64 %28, i32 1\l  store i8 %101, i8 addrspace(1)* %105, align 1, !tbaa !17\l  %106 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %1,\l... i64 %28, i32 2\l  store i8 %102, i8 addrspace(1)* %106, align 1, !tbaa !18\l  br label %195\l}"];
	Node0x6186870 -> Node0x6184680;
	Node0x6187050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%107:\l107:                                              \l  %108 = phi float [ 0.000000e+00, %43 ], [ %185, %174 ]\l  %109 = phi float [ 0.000000e+00, %43 ], [ %191, %174 ]\l  %110 = phi float [ 0.000000e+00, %43 ], [ %188, %174 ]\l  %111 = phi i32 [ 0, %43 ], [ %192, %174 ]\l  %112 = phi i32 [ 0, %43 ], [ %193, %174 ]\l  %113 = zext i32 %111 to i64\l  %114 = add i32 %38, %111\l  %115 = icmp slt i32 %114, %2\l  br i1 %115, label %116, label %134\l|{<s0>T|<s1>F}}"];
	Node0x6187050:s0 -> Node0x618bb50;
	Node0x6187050:s1 -> Node0x618bbe0;
	Node0x618bb50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%116:\l116:                                              \l  %117 = or i32 %114, %24\l  %118 = icmp sgt i32 %117, -1\l  %119 = select i1 %39, i1 %118, i1 false\l  br i1 %119, label %120, label %134\l|{<s0>T|<s1>F}}"];
	Node0x618bb50:s0 -> Node0x618bef0;
	Node0x618bb50:s1 -> Node0x618bbe0;
	Node0x618bef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%120:\l120:                                              \l  %121 = add nsw i32 %114, %40\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %122, i32 0\l  %124 = load i8, i8 addrspace(1)* %123, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %125 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %122, i32 1\l  %126 = load i8, i8 addrspace(1)* %125, align 1, !tbaa.struct !11,\l... !amdgpu.noclobber !5\l  %127 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %122, i32 2\l  %128 = load i8, i8 addrspace(1)* %127, align 1, !tbaa.struct !12,\l... !amdgpu.noclobber !5\l  %129 = zext i8 %128 to i32\l  %130 = shl nuw nsw i32 %129, 16\l  %131 = zext i8 %126 to i32\l  %132 = shl nuw nsw i32 %131, 8\l  %133 = zext i8 %124 to i32\l  br label %134\l}"];
	Node0x618bef0 -> Node0x618bbe0;
	Node0x618bbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%134:\l134:                                              \l  %135 = phi i32 [ %133, %120 ], [ 0, %116 ], [ 0, %107 ]\l  %136 = phi i32 [ %132, %120 ], [ 0, %116 ], [ 0, %107 ]\l  %137 = phi i32 [ %130, %120 ], [ 0, %116 ], [ 0, %107 ]\l  %138 = or i32 %137, %136\l  %139 = lshr exact i32 %136, 8\l  %140 = lshr i32 %138, 16\l  %141 = sitofp i32 %135 to float\l  %142 = getelementptr inbounds float, float addrspace(1)* %4, i64 %113\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %144 = fmul contract float %143, %141\l  %145 = fadd contract float %108, %144\l  %146 = sitofp i32 %139 to float\l  %147 = fmul contract float %143, %146\l  %148 = fadd contract float %110, %147\l  %149 = sitofp i32 %140 to float\l  %150 = fmul contract float %143, %149\l  %151 = fadd contract float %109, %150\l  %152 = or i32 %111, 1\l  %153 = zext i32 %152 to i64\l  %154 = add i32 %38, %152\l  %155 = icmp slt i32 %154, %2\l  br i1 %155, label %156, label %174\l|{<s0>T|<s1>F}}"];
	Node0x618bbe0:s0 -> Node0x618f030;
	Node0x618bbe0:s1 -> Node0x6187560;
	Node0x618f030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%156:\l156:                                              \l  %157 = or i32 %154, %24\l  %158 = icmp sgt i32 %157, -1\l  %159 = select i1 %39, i1 %158, i1 false\l  br i1 %159, label %160, label %174\l|{<s0>T|<s1>F}}"];
	Node0x618f030:s0 -> Node0x618f340;
	Node0x618f030:s1 -> Node0x6187560;
	Node0x618f340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%160:\l160:                                              \l  %161 = add nsw i32 %154, %40\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %162, i32 0\l  %164 = load i8, i8 addrspace(1)* %163, align 1, !tbaa.struct !7,\l... !amdgpu.noclobber !5\l  %165 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %162, i32 1\l  %166 = load i8, i8 addrspace(1)* %165, align 1, !tbaa.struct !11,\l... !amdgpu.noclobber !5\l  %167 = getelementptr inbounds %struct.pixel, %struct.pixel addrspace(1)* %0,\l... i64 %162, i32 2\l  %168 = load i8, i8 addrspace(1)* %167, align 1, !tbaa.struct !12,\l... !amdgpu.noclobber !5\l  %169 = zext i8 %168 to i32\l  %170 = shl nuw nsw i32 %169, 16\l  %171 = zext i8 %166 to i32\l  %172 = shl nuw nsw i32 %171, 8\l  %173 = zext i8 %164 to i32\l  br label %174\l}"];
	Node0x618f340 -> Node0x6187560;
	Node0x6187560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%174:\l174:                                              \l  %175 = phi i32 [ %173, %160 ], [ 0, %156 ], [ 0, %134 ]\l  %176 = phi i32 [ %172, %160 ], [ 0, %156 ], [ 0, %134 ]\l  %177 = phi i32 [ %170, %160 ], [ 0, %156 ], [ 0, %134 ]\l  %178 = or i32 %177, %176\l  %179 = lshr exact i32 %176, 8\l  %180 = lshr i32 %178, 16\l  %181 = sitofp i32 %175 to float\l  %182 = getelementptr inbounds float, float addrspace(1)* %4, i64 %153\l  %183 = load float, float addrspace(1)* %182, align 4, !tbaa !13,\l... !amdgpu.noclobber !5\l  %184 = fmul contract float %183, %181\l  %185 = fadd contract float %145, %184\l  %186 = sitofp i32 %179 to float\l  %187 = fmul contract float %183, %186\l  %188 = fadd contract float %148, %187\l  %189 = sitofp i32 %180 to float\l  %190 = fmul contract float %183, %189\l  %191 = fadd contract float %151, %190\l  %192 = add nuw nsw i32 %111, 2\l  %193 = add i32 %112, 2\l  %194 = icmp eq i32 %193, %44\l  br i1 %194, label %45, label %107, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x6187560:s0 -> Node0x6186e00;
	Node0x6187560:s1 -> Node0x6187050;
	Node0x6184680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%195:\l195:                                              \l  ret void\l}"];
}
