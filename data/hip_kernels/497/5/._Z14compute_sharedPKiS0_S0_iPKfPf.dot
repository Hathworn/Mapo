digraph "CFG for '_Z14compute_sharedPKiS0_S0_iPKfPf' function" {
	label="CFG for '_Z14compute_sharedPKiS0_S0_iPKfPf' function";

	Node0x45f4840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = icmp slt i32 %15, %3\l  br i1 %16, label %17, label %63\l|{<s0>T|<s1>F}}"];
	Node0x45f4840:s0 -> Node0x45f5160;
	Node0x45f4840:s1 -> Node0x45f6850;
	Node0x45f5160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%17:\l17:                                               \l  %18 = sext i32 %15 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = getelementptr inbounds [1025 x i32], [1025 x i32] addrspace(3)*\l... @_ZZ14compute_sharedPKiS0_S0_iPKfPfE10s_dest_off, i32 0, i32 %14\l  store i32 %20, i32 addrspace(3)* %21, align 4, !tbaa !7\l  %22 = icmp eq i32 %14, 1023\l  %23 = add nsw i32 %3, -1\l  %24 = icmp eq i32 %15, %23\l  %25 = select i1 %22, i1 true, i1 %24\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x45f5160:s0 -> Node0x45f7d10;
	Node0x45f5160:s1 -> Node0x45f7da0;
	Node0x45f7da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%26:\l26:                                               \l  %27 = add nuw nsw i32 %14, 1\l  br label %35\l}"];
	Node0x45f7da0 -> Node0x45f7fa0;
	Node0x45f7d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = add nsw i32 %15, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %33 = add nuw nsw i32 %14, 1\l  %34 = getelementptr inbounds [1025 x i32], [1025 x i32] addrspace(3)*\l... @_ZZ14compute_sharedPKiS0_S0_iPKfPfE10s_dest_off, i32 0, i32 %33\l  store i32 %32, i32 addrspace(3)* %34, align 4, !tbaa !7\l  br label %35\l}"];
	Node0x45f7d10 -> Node0x45f7fa0;
	Node0x45f7fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%35:\l35:                                               \l  %36 = phi i32 [ %27, %26 ], [ %33, %28 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = load i32, i32 addrspace(3)* %21, align 4, !tbaa !7\l  %38 = getelementptr inbounds [1025 x i32], [1025 x i32] addrspace(3)*\l... @_ZZ14compute_sharedPKiS0_S0_iPKfPfE10s_dest_off, i32 0, i32 %36\l  %39 = load i32, i32 addrspace(3)* %38, align 4, !tbaa !7\l  %40 = icmp sgt i32 %39, %37\l  br i1 %40, label %41, label %60\l|{<s0>T|<s1>F}}"];
	Node0x45f7fa0:s0 -> Node0x45f8c30;
	Node0x45f7fa0:s1 -> Node0x45f8cc0;
	Node0x45f8c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%41:\l41:                                               \l  %42 = phi float [ %55, %41 ], [ 0.000000e+00, %35 ]\l  %43 = phi i32 [ %56, %41 ], [ %37, %35 ]\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !11,\l... !amdgpu.noclobber !5\l  %50 = fmul contract float %49, 0x3FEB333340000000\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %47\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %53 = sitofp i32 %52 to float\l  %54 = fdiv contract float %50, %53\l  %55 = fadd contract float %42, %54\l  %56 = add nsw i32 %43, 1\l  %57 = icmp slt i32 %56, %39\l  br i1 %57, label %41, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x45f8c30:s0 -> Node0x45f8c30;
	Node0x45f8c30:s1 -> Node0x45fa370;
	Node0x45fa370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%58:\l58:                                               \l  %59 = fadd contract float %55, 0x3FC3333300000000\l  br label %60\l}"];
	Node0x45fa370 -> Node0x45f8cc0;
	Node0x45f8cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%60:\l60:                                               \l  %61 = phi float [ 0x3FC3333300000000, %35 ], [ %59, %58 ]\l  %62 = getelementptr inbounds float, float addrspace(1)* %5, i64 %18\l  store float %61, float addrspace(1)* %62, align 4, !tbaa !11\l  br label %63\l}"];
	Node0x45f8cc0 -> Node0x45f6850;
	Node0x45f6850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%63:\l63:                                               \l  ret void\l}"];
}
