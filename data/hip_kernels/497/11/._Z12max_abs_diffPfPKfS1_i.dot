digraph "CFG for '_Z12max_abs_diffPfPKfS1_i' function" {
	label="CFG for '_Z12max_abs_diffPfPKfS1_i' function";

	Node0x4afe270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4afe270:s0 -> Node0x4b00170;
	Node0x4afe270:s1 -> Node0x4b00200;
	Node0x4b00170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = fcmp contract oeq float %18, -1.000000e+00\l  br i1 %19, label %25, label %20\l|{<s0>T|<s1>F}}"];
	Node0x4b00170:s0 -> Node0x4b00200;
	Node0x4b00170:s1 -> Node0x4b017d0;
	Node0x4b017d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%20:\l20:                                               \l  %21 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = fsub contract float %18, %22\l  %24 = tail call float @llvm.fabs.f32(float %23)\l  br label %25\l}"];
	Node0x4b017d0 -> Node0x4b00200;
	Node0x4b00200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%25:\l25:                                               \l  %26 = phi float [ %24, %20 ], [ -1.000000e+00, %15 ], [ -1.000000e+00, %4 ]\l  %27 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_max,\l... i32 0, i32 %12\l  store float %26, float addrspace(3)* %27, align 4, !tbaa !7\l  %28 = icmp ult i16 %8, 2\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4b00200:s0 -> Node0x4b02630;
	Node0x4b00200:s1 -> Node0x4b02680;
	Node0x4b02680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_max,\l... i32 0, i32 %12\l  br label %33\l}"];
	Node0x4b02680 -> Node0x4b028b0;
	Node0x4b02630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%31:\l31:                                               \l  %32 = icmp eq i32 %12, 0\l  br i1 %32, label %45, label %49\l|{<s0>T|<s1>F}}"];
	Node0x4b02630:s0 -> Node0x4b003b0;
	Node0x4b02630:s1 -> Node0x4b00400;
	Node0x4b028b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %9, %29 ], [ %35, %43 ]\l  %35 = lshr i32 %34, 1\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %36 = icmp ult i32 %12, %35\l  br i1 %36, label %37, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4b028b0:s0 -> Node0x4b031c0;
	Node0x4b028b0:s1 -> Node0x4b02cc0;
	Node0x4b031c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%37:\l37:                                               \l  %38 = load float, float addrspace(3)* %30, align 4, !tbaa !7\l  %39 = add nuw nsw i32 %35, %12\l  %40 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @s_max,\l... i32 0, i32 %39\l  %41 = load float, float addrspace(3)* %40, align 4, !tbaa !7\l  %42 = tail call float @llvm.maxnum.f32(float %38, float %41)\l  store float %42, float addrspace(3)* %30, align 4, !tbaa !7\l  br label %43\l}"];
	Node0x4b031c0 -> Node0x4b02cc0;
	Node0x4b02cc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = icmp ult i32 %34, 4\l  br i1 %44, label %31, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4b02cc0:s0 -> Node0x4b02630;
	Node0x4b02cc0:s1 -> Node0x4b028b0;
	Node0x4b003b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%45:\l45:                                               \l  %46 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @s_max, i32 0, i32 0), align 4, !tbaa !7\l  %47 = zext i32 %10 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %46, float addrspace(1)* %48, align 4, !tbaa !7\l  br label %49\l}"];
	Node0x4b003b0 -> Node0x4b00400;
	Node0x4b00400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%49:\l49:                                               \l  ret void\l}"];
}
