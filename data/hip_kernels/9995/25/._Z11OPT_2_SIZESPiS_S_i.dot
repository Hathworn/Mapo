digraph "CFG for '_Z11OPT_2_SIZESPiS_S_i' function" {
	label="CFG for '_Z11OPT_2_SIZESPiS_S_i' function";

	Node0x5ebdff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %86\l|{<s0>T|<s1>F}}"];
	Node0x5ebdff0:s0 -> Node0x5ebfec0;
	Node0x5ebdff0:s1 -> Node0x5ebff50;
	Node0x5ebfec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %13, 0\l  br i1 %16, label %17, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5ebfec0:s0 -> Node0x5ebf6f0;
	Node0x5ebfec0:s1 -> Node0x5ec0230;
	Node0x5ebf6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%17:\l17:                                               \l  %18 = add nsw i32 %13, -1\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %22\l}"];
	Node0x5ebf6f0 -> Node0x5ec0230;
	Node0x5ec0230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%22:\l22:                                               \l  %23 = phi i32 [ %21, %17 ], [ 0, %15 ]\l  %24 = sext i32 %13 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp sgt i32 %3, 0\l  br i1 %27, label %28, label %30\l|{<s0>T|<s1>F}}"];
	Node0x5ec0230:s0 -> Node0x5ec1980;
	Node0x5ec0230:s1 -> Node0x5ec1a10;
	Node0x5ec1980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%28:\l28:                                               \l  %29 = icmp slt i32 %23, %26\l  br label %33\l}"];
	Node0x5ec1980 -> Node0x5ec1be0;
	Node0x5ec1a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %22 ], [ %83, %82 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %24\l  store i32 %31, i32 addrspace(1)* %32, align 4, !tbaa !7\l  br label %86\l}"];
	Node0x5ec1a10 -> Node0x5ebff50;
	Node0x5ec1be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %28 ], [ %84, %82 ]\l  %35 = phi i32 [ 0, %28 ], [ %83, %82 ]\l  %36 = icmp eq i32 %13, %34\l  br i1 %36, label %82, label %37\l|{<s0>T|<s1>F}}"];
	Node0x5ec1be0:s0 -> Node0x5ec1ca0;
	Node0x5ec1be0:s1 -> Node0x5ec24a0;
	Node0x5ec24a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %34, 0\l  br i1 %38, label %44, label %39\l|{<s0>T|<s1>F}}"];
	Node0x5ec24a0:s0 -> Node0x5ec2630;
	Node0x5ec24a0:s1 -> Node0x5ec2680;
	Node0x5ec2680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%39:\l39:                                               \l  %40 = add nsw i32 %34, -1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %44\l}"];
	Node0x5ec2680 -> Node0x5ec2630;
	Node0x5ec2630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%44:\l44:                                               \l  %45 = phi i32 [ %43, %39 ], [ 0, %37 ]\l  %46 = zext i32 %34 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = icmp slt i32 %45, %48\l  %50 = select i1 %29, i1 %49, i1 false\l  br i1 %50, label %51, label %77\l|{<s0>T|<s1>F}}"];
	Node0x5ec2630:s0 -> Node0x5ec2db0;
	Node0x5ec2630:s1 -> Node0x5ec2e40;
	Node0x5ec2db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %73, %70 ], [ 0, %44 ]\l  %53 = phi i32 [ %72, %70 ], [ %45, %44 ]\l  %54 = phi i32 [ %71, %70 ], [ %23, %44 ]\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %55\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %58 = sext i32 %53 to i64\l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %58\l  %60 = load i32, i32 addrspace(1)* %59, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %61 = icmp slt i32 %57, %60\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x5ec2db0:s0 -> Node0x5ec3770;
	Node0x5ec2db0:s1 -> Node0x5ec3800;
	Node0x5ec3770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%62:\l62:                                               \l  %63 = add nsw i32 %54, 1\l  br label %70\l}"];
	Node0x5ec3770 -> Node0x5ec2fb0;
	Node0x5ec3800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%64:\l64:                                               \l  %65 = icmp slt i32 %60, %57\l  %66 = add nsw i32 %53, 1\l  br i1 %65, label %70, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5ec3800:s0 -> Node0x5ec2fb0;
	Node0x5ec3800:s1 -> Node0x5ec21c0;
	Node0x5ec21c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%67:\l67:                                               \l  %68 = add nsw i32 %54, 1\l  %69 = add nsw i32 %52, 1\l  br label %70\l}"];
	Node0x5ec21c0 -> Node0x5ec2fb0;
	Node0x5ec2fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i32 [ %63, %62 ], [ %68, %67 ], [ %54, %64 ]\l  %72 = phi i32 [ %53, %62 ], [ %66, %67 ], [ %66, %64 ]\l  %73 = phi i32 [ %52, %62 ], [ %69, %67 ], [ %52, %64 ]\l  %74 = icmp slt i32 %71, %26\l  %75 = icmp slt i32 %72, %48\l  %76 = select i1 %74, i1 %75, i1 false\l  br i1 %76, label %51, label %77, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5ec2fb0:s0 -> Node0x5ec2db0;
	Node0x5ec2fb0:s1 -> Node0x5ec2e40;
	Node0x5ec2e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%77:\l77:                                               \l  %78 = phi i32 [ 0, %44 ], [ %73, %70 ]\l  %79 = icmp sgt i32 %78, 0\l  %80 = zext i1 %79 to i32\l  %81 = add nsw i32 %35, %80\l  br label %82\l}"];
	Node0x5ec2e40 -> Node0x5ec1ca0;
	Node0x5ec1ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%82:\l82:                                               \l  %83 = phi i32 [ %35, %33 ], [ %81, %77 ]\l  %84 = add nuw nsw i32 %34, 1\l  %85 = icmp eq i32 %84, %3\l  br i1 %85, label %30, label %33, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5ec1ca0:s0 -> Node0x5ec1a10;
	Node0x5ec1ca0:s1 -> Node0x5ec1be0;
	Node0x5ebff50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%86:\l86:                                               \l  ret void\l}"];
}
