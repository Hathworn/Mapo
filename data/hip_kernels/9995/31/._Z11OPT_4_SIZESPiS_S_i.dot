digraph "CFG for '_Z11OPT_4_SIZESPiS_S_i' function" {
	label="CFG for '_Z11OPT_4_SIZESPiS_S_i' function";

	Node0x6308f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %80\l|{<s0>T|<s1>F}}"];
	Node0x6308f10:s0 -> Node0x630ade0;
	Node0x6308f10:s1 -> Node0x630ae70;
	Node0x630ade0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%15:\l15:                                               \l  %16 = icmp sgt i32 %13, 0\l  br i1 %16, label %17, label %22\l|{<s0>T|<s1>F}}"];
	Node0x630ade0:s0 -> Node0x630a610;
	Node0x630ade0:s1 -> Node0x630b150;
	Node0x630a610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%17:\l17:                                               \l  %18 = add nsw i32 %13, -1\l  %19 = zext i32 %18 to i64\l  %20 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %19\l  %21 = load i32, i32 addrspace(1)* %20, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %22\l}"];
	Node0x630a610 -> Node0x630b150;
	Node0x630b150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%22:\l22:                                               \l  %23 = phi i32 [ %21, %17 ], [ 0, %15 ]\l  %24 = sext i32 %13 to i64\l  %25 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %24\l  %26 = load i32, i32 addrspace(1)* %25, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %27 = icmp sgt i32 %3, 0\l  br i1 %27, label %28, label %30\l|{<s0>T|<s1>F}}"];
	Node0x630b150:s0 -> Node0x630c8a0;
	Node0x630b150:s1 -> Node0x630c930;
	Node0x630c8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%28:\l28:                                               \l  %29 = icmp slt i32 %23, %26\l  br label %33\l}"];
	Node0x630c8a0 -> Node0x630cb00;
	Node0x630c930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%30:\l30:                                               \l  %31 = phi i32 [ 0, %22 ], [ %77, %76 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %24\l  store i32 %31, i32 addrspace(1)* %32, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x630c930 -> Node0x630ae70;
	Node0x630cb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %28 ], [ %78, %76 ]\l  %35 = phi i32 [ 0, %28 ], [ %77, %76 ]\l  %36 = icmp eq i32 %13, %34\l  br i1 %36, label %76, label %37\l|{<s0>T|<s1>F}}"];
	Node0x630cb00:s0 -> Node0x630cbc0;
	Node0x630cb00:s1 -> Node0x630d3c0;
	Node0x630d3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%37:\l37:                                               \l  %38 = icmp eq i32 %34, 0\l  br i1 %38, label %44, label %39\l|{<s0>T|<s1>F}}"];
	Node0x630d3c0:s0 -> Node0x630d550;
	Node0x630d3c0:s1 -> Node0x630d5a0;
	Node0x630d5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%39:\l39:                                               \l  %40 = add nsw i32 %34, -1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %41\l  %43 = load i32, i32 addrspace(1)* %42, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  br label %44\l}"];
	Node0x630d5a0 -> Node0x630d550;
	Node0x630d550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%44:\l44:                                               \l  %45 = phi i32 [ %43, %39 ], [ 0, %37 ]\l  %46 = zext i32 %34 to i64\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %46\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %49 = icmp slt i32 %45, %48\l  %50 = select i1 %29, i1 %49, i1 false\l  br i1 %50, label %51, label %73\l|{<s0>T|<s1>F}}"];
	Node0x630d550:s0 -> Node0x630dcd0;
	Node0x630d550:s1 -> Node0x630dd60;
	Node0x630dcd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %69, %67 ], [ %45, %44 ]\l  %53 = phi i32 [ %68, %67 ], [ %23, %44 ]\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %54\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %57 = sext i32 %52 to i64\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %57\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !7, !amdgpu.noclobber\l... !6\l  %60 = icmp slt i32 %56, %59\l  br i1 %60, label %61, label %63\l|{<s0>T|<s1>F}}"];
	Node0x630dcd0:s0 -> Node0x630e570;
	Node0x630dcd0:s1 -> Node0x630e600;
	Node0x630e570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%61:\l61:                                               \l  %62 = add nsw i32 %53, 1\l  br label %67\l}"];
	Node0x630e570 -> Node0x630ded0;
	Node0x630e600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%63:\l63:                                               \l  %64 = icmp slt i32 %59, %56\l  br i1 %64, label %65, label %73\l|{<s0>T|<s1>F}}"];
	Node0x630e600:s0 -> Node0x630cfc0;
	Node0x630e600:s1 -> Node0x630dd60;
	Node0x630cfc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%65:\l65:                                               \l  %66 = add nsw i32 %52, 1\l  br label %67\l}"];
	Node0x630cfc0 -> Node0x630ded0;
	Node0x630ded0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%67:\l67:                                               \l  %68 = phi i32 [ %62, %61 ], [ %53, %65 ]\l  %69 = phi i32 [ %52, %61 ], [ %66, %65 ]\l  %70 = icmp slt i32 %68, %26\l  %71 = icmp slt i32 %69, %48\l  %72 = select i1 %70, i1 %71, i1 false\l  br i1 %72, label %51, label %73, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x630ded0:s0 -> Node0x630dcd0;
	Node0x630ded0:s1 -> Node0x630dd60;
	Node0x630dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%73:\l73:                                               \l  %74 = phi i32 [ 0, %44 ], [ 0, %67 ], [ 1, %63 ]\l  %75 = add nsw i32 %35, %74\l  br label %76\l}"];
	Node0x630dd60 -> Node0x630cbc0;
	Node0x630cbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%76:\l76:                                               \l  %77 = phi i32 [ %35, %33 ], [ %75, %73 ]\l  %78 = add nuw nsw i32 %34, 1\l  %79 = icmp eq i32 %78, %3\l  br i1 %79, label %30, label %33, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x630cbc0:s0 -> Node0x630c930;
	Node0x630cbc0:s1 -> Node0x630cb00;
	Node0x630ae70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%80:\l80:                                               \l  ret void\l}"];
}
