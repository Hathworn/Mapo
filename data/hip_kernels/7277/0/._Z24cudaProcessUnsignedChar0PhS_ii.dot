digraph "CFG for '_Z24cudaProcessUnsignedChar0PhS_ii' function" {
	label="CFG for '_Z24cudaProcessUnsignedChar0PhS_ii' function";

	Node0x5ada1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !5, !invariant.load !6\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %15 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 2, !range !5, !invariant.load !6\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = shl nuw nsw i32 %5, 1\l  %21 = add i32 %13, %20\l  %22 = shl nuw nsw i32 %6, 1\l  %23 = add i32 %19, %22\l  %24 = mul nsw i32 %23, %2\l  %25 = add nsw i32 %24, %21\l  %26 = icmp sgt i32 %23, 0\l  br i1 %26, label %27, label %35\l|{<s0>T|<s1>F}}"];
	Node0x5ada1e0:s0 -> Node0x5adde20;
	Node0x5ada1e0:s1 -> Node0x5addeb0;
	Node0x5adde20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e97a5f70",label="{%27:\l27:                                               \l  %28 = add nsw i32 %3, -2\l  %29 = icmp slt i32 %23, %28\l  %30 = icmp sgt i32 %21, 0\l  %31 = select i1 %29, i1 %30, i1 false\l  %32 = add nsw i32 %2, -2\l  %33 = icmp slt i32 %21, %32\l  %34 = select i1 %31, i1 %33, i1 false\l  br label %35\l}"];
	Node0x5adde20 -> Node0x5addeb0;
	Node0x5addeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%35:\l35:                                               \l  %36 = phi i1 [ false, %4 ], [ %34, %27 ]\l  %37 = sub nsw i32 %25, %2\l  %38 = add nsw i32 %25, %2\l  %39 = shl nsw i32 %2, 1\l  %40 = add nsw i32 %25, %39\l  br i1 %36, label %41, label %66\l|{<s0>T|<s1>F}}"];
	Node0x5addeb0:s0 -> Node0x5ade8f0;
	Node0x5addeb0:s1 -> Node0x5ade940;
	Node0x5ade8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%41:\l41:                                               \l  %42 = sext i32 %40 to i64\l  %43 = add nsw i32 %40, -1\l  %44 = sext i32 %43 to i64\l  %45 = add nsw i32 %38, 2\l  %46 = add nsw i32 %38, 1\l  %47 = add nsw i32 %38, -1\l  %48 = add nsw i32 %25, 2\l  %49 = add nsw i32 %25, 1\l  %50 = add nsw i32 %25, -1\l  %51 = add nsw i32 %37, 2\l  %52 = add nsw i32 %37, 1\l  %53 = add nsw i32 %40, 1\l  %54 = sext i32 %52 to i64\l  %55 = sext i32 %25 to i64\l  %56 = sext i32 %48 to i64\l  %57 = sext i32 %47 to i64\l  %58 = sext i32 %46 to i64\l  %59 = sext i32 %50 to i64\l  %60 = sext i32 %49 to i64\l  %61 = sext i32 %53 to i64\l  %62 = sext i32 %37 to i64\l  %63 = sext i32 %51 to i64\l  %64 = sext i32 %38 to i64\l  %65 = sext i32 %45 to i64\l  br label %66\l}"];
	Node0x5ade8f0 -> Node0x5ade940;
	Node0x5ade940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i64 [ 0, %35 ], [ %42, %41 ]\l  %68 = phi i64 [ 0, %35 ], [ %44, %41 ]\l  %69 = phi i64 [ 0, %35 ], [ %65, %41 ]\l  %70 = phi i64 [ 0, %35 ], [ %58, %41 ]\l  %71 = phi i64 [ 0, %35 ], [ %64, %41 ]\l  %72 = phi i64 [ 0, %35 ], [ %57, %41 ]\l  %73 = phi i64 [ 0, %35 ], [ %56, %41 ]\l  %74 = phi i64 [ 0, %35 ], [ %60, %41 ]\l  %75 = phi i64 [ 0, %35 ], [ %55, %41 ]\l  %76 = phi i64 [ 0, %35 ], [ %59, %41 ]\l  %77 = phi i64 [ 0, %35 ], [ %63, %41 ]\l  %78 = phi i64 [ 0, %35 ], [ %54, %41 ]\l  %79 = phi i64 [ 0, %35 ], [ %62, %41 ]\l  %80 = phi i64 [ 0, %35 ], [ %61, %41 ]\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %78\l  %82 = load i8, i8 addrspace(1)* %81, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %83 = zext i8 %82 to i32\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %75\l  %85 = load i8, i8 addrspace(1)* %84, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %86 = zext i8 %85 to i32\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %73\l  %88 = load i8, i8 addrspace(1)* %87, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %89 = zext i8 %88 to i32\l  %90 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %72\l  %91 = load i8, i8 addrspace(1)* %90, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %92 = zext i8 %91 to i32\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %70\l  %94 = load i8, i8 addrspace(1)* %93, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %95 = zext i8 %94 to i32\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %67\l  %97 = load i8, i8 addrspace(1)* %96, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %98 = zext i8 %97 to i32\l  %99 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %76\l  %100 = load i8, i8 addrspace(1)* %99, align 1, !tbaa !7, !amdgpu.noclobber !6\l  %101 = zext i8 %100 to i32\l  %102 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %74\l  %103 = load i8, i8 addrspace(1)* %102, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %104 = zext i8 %103 to i32\l  %105 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %68\l  %106 = load i8, i8 addrspace(1)* %105, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %107 = zext i8 %106 to i32\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %80\l  %109 = load i8, i8 addrspace(1)* %108, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %110 = zext i8 %109 to i32\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %79\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %113 = zext i8 %112 to i32\l  %114 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %77\l  %115 = load i8, i8 addrspace(1)* %114, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %116 = zext i8 %115 to i32\l  %117 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %71\l  %118 = load i8, i8 addrspace(1)* %117, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %119 = zext i8 %118 to i32\l  %120 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %69\l  %121 = load i8, i8 addrspace(1)* %120, align 1, !tbaa !7, !amdgpu.noclobber\l... !6\l  %122 = zext i8 %121 to i32\l  %123 = add nuw nsw i32 %104, %101\l  %124 = lshr i32 %123, 1\l  %125 = add nuw nsw i32 %116, %113\l  %126 = lshr i32 %125, 1\l  %127 = add nuw nsw i32 %95, %86\l  %128 = add nuw nsw i32 %127, %83\l  %129 = add nuw nsw i32 %128, %89\l  %130 = lshr i32 %129, 2\l  %131 = add nuw nsw i32 %122, %119\l  %132 = add nuw nsw i32 %131, %125\l  %133 = lshr i32 %132, 2\l  %134 = add nuw nsw i32 %123, %107\l  %135 = add nuw nsw i32 %134, %110\l  %136 = lshr i32 %135, 2\l  %137 = add nuw nsw i32 %127, %92\l  %138 = add nuw nsw i32 %137, %98\l  %139 = lshr i32 %138, 2\l  %140 = add nuw nsw i32 %110, %104\l  %141 = lshr i32 %140, 1\l  %142 = lshr i32 %131, 1\l  %143 = mul nsw i32 %25, 3\l  %144 = add nsw i32 %143, 3\l  %145 = mul i32 %2, 3\l  %146 = add i32 %143, %145\l  %147 = add i32 %146, 3\l  %148 = trunc i32 %124 to i8\l  %149 = mul i32 %145, %3\l  %150 = icmp slt i32 %143, %149\l  %151 = select i1 %150, i32 %143, i32 0\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %152\l  store i8 %148, i8 addrspace(1)* %153, align 1, !tbaa !7\l  %154 = add nsw i32 %143, 1\l  %155 = icmp slt i32 %154, %149\l  %156 = select i1 %155, i32 %154, i32 0\l  %157 = sext i32 %156 to i64\l  %158 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %157\l  store i8 %85, i8 addrspace(1)* %158, align 1, !tbaa !7\l  %159 = trunc i32 %126 to i8\l  %160 = add nsw i32 %143, 2\l  %161 = icmp slt i32 %160, %149\l  %162 = select i1 %161, i32 %160, i32 0\l  %163 = sext i32 %162 to i64\l  %164 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %163\l  store i8 %159, i8 addrspace(1)* %164, align 1, !tbaa !7\l  %165 = icmp slt i32 %144, %149\l  %166 = select i1 %165, i32 %144, i32 0\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %167\l  store i8 %103, i8 addrspace(1)* %168, align 1, !tbaa !7\l  %169 = trunc i32 %130 to i8\l  %170 = add nsw i32 %143, 4\l  %171 = icmp slt i32 %170, %149\l  %172 = select i1 %171, i32 %170, i32 0\l  %173 = sext i32 %172 to i64\l  %174 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %173\l  store i8 %169, i8 addrspace(1)* %174, align 1, !tbaa !7\l  %175 = trunc i32 %133 to i8\l  %176 = add nsw i32 %143, 5\l  %177 = icmp slt i32 %176, %149\l  %178 = select i1 %177, i32 %176, i32 0\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %179\l  store i8 %175, i8 addrspace(1)* %180, align 1, !tbaa !7\l  %181 = trunc i32 %136 to i8\l  %182 = icmp slt i32 %146, %149\l  %183 = select i1 %182, i32 %146, i32 0\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %184\l  store i8 %181, i8 addrspace(1)* %185, align 1, !tbaa !7\l  %186 = trunc i32 %139 to i8\l  %187 = add nsw i32 %146, 1\l  %188 = icmp slt i32 %187, %149\l  %189 = select i1 %188, i32 %187, i32 0\l  %190 = sext i32 %189 to i64\l  %191 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %190\l  store i8 %186, i8 addrspace(1)* %191, align 1, !tbaa !7\l  %192 = add nsw i32 %146, 2\l  %193 = icmp slt i32 %192, %149\l  %194 = select i1 %193, i32 %192, i32 0\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %195\l  store i8 %118, i8 addrspace(1)* %196, align 1, !tbaa !7\l  %197 = trunc i32 %141 to i8\l  %198 = icmp slt i32 %147, %149\l  %199 = select i1 %198, i32 %147, i32 0\l  %200 = sext i32 %199 to i64\l  %201 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %200\l  store i8 %197, i8 addrspace(1)* %201, align 1, !tbaa !7\l  %202 = add i32 %146, 4\l  %203 = icmp slt i32 %202, %149\l  %204 = select i1 %203, i32 %202, i32 0\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %205\l  store i8 %94, i8 addrspace(1)* %206, align 1, !tbaa !7\l  %207 = trunc i32 %142 to i8\l  %208 = add i32 %146, 5\l  %209 = icmp slt i32 %208, %149\l  %210 = select i1 %209, i32 %208, i32 0\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %211\l  store i8 %207, i8 addrspace(1)* %212, align 1, !tbaa !7\l  ret void\l}"];
}
