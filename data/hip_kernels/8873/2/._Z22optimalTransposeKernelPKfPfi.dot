digraph "CFG for '_Z22optimalTransposeKernelPKfPfi' function" {
	label="CFG for '_Z22optimalTransposeKernelPKfPfi' function";

	Node0x6241350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = shl i32 %4, 6\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = add i32 %5, %6\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %9 = shl i32 %8, 6\l  %10 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %11 = add i32 %9, %10\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %14 = bitcast i8 addrspace(4)* %13 to i32 addrspace(4)*\l  %15 = load i32, i32 addrspace(4)* %14, align 4, !tbaa !5\l  %16 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 4, !range !14, !invariant.load\l... !15\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %15, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %15, %21\l  %23 = zext i1 %22 to i32\l  %24 = add i32 %20, %23\l  %25 = shl i32 %24, 6\l  %26 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 16\l  %27 = bitcast i8 addrspace(4)* %26 to i32 addrspace(4)*\l  %28 = load i32, i32 addrspace(4)* %27, align 8, !tbaa !16\l  %29 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 2, !range !14, !invariant.load\l... !15\l  %32 = zext i16 %31 to i32\l  %33 = udiv i32 %28, %32\l  %34 = mul i32 %33, %32\l  %35 = icmp ugt i32 %28, %34\l  %36 = zext i1 %35 to i32\l  %37 = add i32 %33, %36\l  %38 = shl i32 %37, 6\l  %39 = icmp slt i32 %7, %25\l  %40 = icmp slt i32 %11, %38\l  %41 = select i1 %39, i1 %40, i1 false\l  br i1 %41, label %42, label %73\l|{<s0>T|<s1>F}}"];
	Node0x6241350:s0 -> Node0x6245bf0;
	Node0x6241350:s1 -> Node0x6245c80;
	Node0x6245bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = mul nsw i32 %25, %11\l  %44 = add nsw i32 %43, %7\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !17,\l... !amdgpu.noclobber !15\l  %48 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %10, i32 %6\l  store float %47, float addrspace(3)* %48, align 4, !tbaa !17\l  %49 = add nsw i32 %11, 16\l  %50 = mul nsw i32 %25, %49\l  %51 = add nsw i32 %50, %7\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !17,\l... !amdgpu.noclobber !15\l  %55 = add nuw nsw i32 %10, 16\l  %56 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %55, i32 %6\l  store float %54, float addrspace(3)* %56, align 4, !tbaa !17\l  %57 = add nsw i32 %11, 32\l  %58 = mul nsw i32 %25, %57\l  %59 = add nsw i32 %58, %7\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !17,\l... !amdgpu.noclobber !15\l  %63 = add nuw nsw i32 %10, 32\l  %64 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %63, i32 %6\l  store float %62, float addrspace(3)* %64, align 4, !tbaa !17\l  %65 = add nsw i32 %11, 48\l  %66 = mul nsw i32 %25, %65\l  %67 = add nsw i32 %66, %7\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !17,\l... !amdgpu.noclobber !15\l  %71 = add nuw nsw i32 %10, 48\l  %72 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %71, i32 %6\l  store float %70, float addrspace(3)* %72, align 4, !tbaa !17\l  br label %73\l}"];
	Node0x6245bf0 -> Node0x6245c80;
	Node0x6245c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %74 = add i32 %9, %6\l  %75 = add i32 %5, %10\l  %76 = icmp slt i32 %75, %25\l  %77 = icmp slt i32 %74, %38\l  %78 = select i1 %76, i1 %77, i1 false\l  br i1 %78, label %79, label %110\l|{<s0>T|<s1>F}}"];
	Node0x6245c80:s0 -> Node0x6248300;
	Node0x6245c80:s1 -> Node0x6248390;
	Node0x6248300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%79:\l79:                                               \l  %80 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %6, i32 %10\l  %81 = load float, float addrspace(3)* %80, align 4, !tbaa !17\l  %82 = mul nsw i32 %38, %75\l  %83 = add nsw i32 %82, %74\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  store float %81, float addrspace(1)* %85, align 4, !tbaa !17\l  %86 = add nuw nsw i32 %10, 16\l  %87 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %6, i32 %86\l  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !17\l  %89 = add nsw i32 %75, 16\l  %90 = mul nsw i32 %38, %89\l  %91 = add nsw i32 %90, %74\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds float, float addrspace(1)* %1, i64 %92\l  store float %88, float addrspace(1)* %93, align 4, !tbaa !17\l  %94 = add nuw nsw i32 %10, 32\l  %95 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %6, i32 %94\l  %96 = load float, float addrspace(3)* %95, align 4, !tbaa !17\l  %97 = add nsw i32 %75, 32\l  %98 = mul nsw i32 %38, %97\l  %99 = add nsw i32 %98, %74\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  store float %96, float addrspace(1)* %101, align 4, !tbaa !17\l  %102 = add nuw nsw i32 %10, 48\l  %103 = getelementptr inbounds [64 x [65 x float]], [64 x [65 x float]]\l... addrspace(3)* @_ZZ22optimalTransposeKernelPKfPfiE4tile, i32 0, i32 %6, i32\l... %102\l  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !17\l  %105 = add nsw i32 %75, 48\l  %106 = mul nsw i32 %38, %105\l  %107 = add nsw i32 %106, %74\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds float, float addrspace(1)* %1, i64 %108\l  store float %104, float addrspace(1)* %109, align 4, !tbaa !17\l  br label %110\l}"];
	Node0x6248300 -> Node0x6248390;
	Node0x6248390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  ret void\l}"];
}
