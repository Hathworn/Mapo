digraph "CFG for '_Z20polynomial_expansionPfiiS_' function" {
	label="CFG for '_Z20polynomial_expansionPfiiS_' function";

	Node0x457f1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %112\l|{<s0>T|<s1>F}}"];
	Node0x457f1d0:s0 -> Node0x45810e0;
	Node0x457f1d0:s1 -> Node0x4581170;
	Node0x45810e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%15:\l15:                                               \l  %16 = icmp slt i32 %1, 0\l  %17 = sext i32 %13 to i64\l  br i1 %16, label %46, label %18\l|{<s0>T|<s1>F}}"];
	Node0x45810e0:s0 -> Node0x4581450;
	Node0x45810e0:s1 -> Node0x45814a0;
	Node0x45814a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%18:\l18:                                               \l  %19 = getelementptr inbounds float, float addrspace(1)* %3, i64 %17\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %21 = add i32 %1, 1\l  %22 = and i32 %21, 7\l  %23 = icmp ult i32 %1, 7\l  br i1 %23, label %26, label %24\l|{<s0>T|<s1>F}}"];
	Node0x45814a0:s0 -> Node0x4582090;
	Node0x45814a0:s1 -> Node0x4582120;
	Node0x4582120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%24:\l24:                                               \l  %25 = and i32 %21, -8\l  br label %49\l}"];
	Node0x4582120 -> Node0x4582320;
	Node0x4582090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%26:\l26:                                               \l  %27 = phi float [ undef, %18 ], [ %107, %49 ]\l  %28 = phi i32 [ 0, %18 ], [ %109, %49 ]\l  %29 = phi float [ 1.000000e+00, %18 ], [ %108, %49 ]\l  %30 = phi float [ 0.000000e+00, %18 ], [ %107, %49 ]\l  %31 = icmp eq i32 %22, 0\l  br i1 %31, label %46, label %32\l|{<s0>T|<s1>F}}"];
	Node0x4582090:s0 -> Node0x4581450;
	Node0x4582090:s1 -> Node0x45836f0;
	Node0x45836f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i32 [ %43, %32 ], [ %28, %26 ]\l  %34 = phi float [ %42, %32 ], [ %29, %26 ]\l  %35 = phi float [ %41, %32 ], [ %30, %26 ]\l  %36 = phi i32 [ %44, %32 ], [ 0, %26 ]\l  %37 = zext i32 %33 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fmul contract float %34, %39\l  %41 = fadd contract float %35, %40\l  %42 = fmul contract float %34, %20\l  %43 = add nuw i32 %33, 1\l  %44 = add i32 %36, 1\l  %45 = icmp eq i32 %44, %22\l  br i1 %45, label %46, label %32, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45836f0:s0 -> Node0x4581450;
	Node0x45836f0:s1 -> Node0x45836f0;
	Node0x4581450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%46:\l46:                                               \l  %47 = phi float [ 0.000000e+00, %15 ], [ %27, %26 ], [ %41, %32 ]\l  %48 = getelementptr inbounds float, float addrspace(1)* %3, i64 %17\l  store float %47, float addrspace(1)* %48, align 4, !tbaa !7\l  br label %112\l}"];
	Node0x4581450 -> Node0x4581170;
	Node0x4582320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%49:\l49:                                               \l  %50 = phi i32 [ 0, %24 ], [ %109, %49 ]\l  %51 = phi float [ 1.000000e+00, %24 ], [ %108, %49 ]\l  %52 = phi float [ 0.000000e+00, %24 ], [ %107, %49 ]\l  %53 = phi i32 [ 0, %24 ], [ %110, %49 ]\l  %54 = zext i32 %50 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %0, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %57 = fmul contract float %51, %56\l  %58 = fadd contract float %52, %57\l  %59 = fmul contract float %51, %20\l  %60 = or i32 %50, 1\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = fmul contract float %59, %63\l  %65 = fadd contract float %58, %64\l  %66 = fmul contract float %59, %20\l  %67 = or i32 %50, 2\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %71 = fmul contract float %66, %70\l  %72 = fadd contract float %65, %71\l  %73 = fmul contract float %66, %20\l  %74 = or i32 %50, 3\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds float, float addrspace(1)* %0, i64 %75\l  %77 = load float, float addrspace(1)* %76, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %78 = fmul contract float %73, %77\l  %79 = fadd contract float %72, %78\l  %80 = fmul contract float %73, %20\l  %81 = or i32 %50, 4\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %82\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %85 = fmul contract float %80, %84\l  %86 = fadd contract float %79, %85\l  %87 = fmul contract float %80, %20\l  %88 = or i32 %50, 5\l  %89 = zext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %0, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %92 = fmul contract float %87, %91\l  %93 = fadd contract float %86, %92\l  %94 = fmul contract float %87, %20\l  %95 = or i32 %50, 6\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %0, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %99 = fmul contract float %94, %98\l  %100 = fadd contract float %93, %99\l  %101 = fmul contract float %94, %20\l  %102 = or i32 %50, 7\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = fmul contract float %101, %105\l  %107 = fadd contract float %100, %106\l  %108 = fmul contract float %101, %20\l  %109 = add nuw i32 %50, 8\l  %110 = add i32 %53, 8\l  %111 = icmp eq i32 %110, %25\l  br i1 %111, label %26, label %49, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4582320:s0 -> Node0x4582090;
	Node0x4582320:s1 -> Node0x4582320;
	Node0x4581170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%112:\l112:                                              \l  ret void\l}"];
}
