digraph "CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiPfS_Pi' function" {
	label="CFG for '_Z28forward_maxpool_layer_kerneliiiiiiiPfS_Pi' function";

	Node0x582b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l  %11 = sub i32 %1, %5\l  %12 = add i32 %11, %6\l  %13 = sdiv i32 %12, %4\l  %14 = add nsw i32 %13, 1\l  %15 = sub i32 %2, %5\l  %16 = add i32 %15, %6\l  %17 = sdiv i32 %16, %4\l  %18 = add nsw i32 %17, 1\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %21, i64 12\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !4\l  %25 = getelementptr i8, i8 addrspace(4)* %21, i64 4\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !13, !invariant.load\l... !14\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %24, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = mul i32 %33, %20\l  %35 = add i32 %34, %19\l  %36 = mul i32 %35, %28\l  %37 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %38 = add i32 %36, %37\l  %39 = icmp slt i32 %38, %0\l  br i1 %39, label %40, label %192\l|{<s0>T|<s1>F}}"];
	Node0x582b950:s0 -> Node0x582f2b0;
	Node0x582b950:s1 -> Node0x582f340;
	Node0x582f2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%40:\l40:                                               \l  %41 = freeze i32 %38\l  %42 = freeze i32 %18\l  %43 = sdiv i32 %41, %42\l  %44 = mul i32 %43, %42\l  %45 = sub i32 %41, %44\l  %46 = freeze i32 %14\l  %47 = sdiv i32 %43, %46\l  %48 = mul i32 %47, %46\l  %49 = sub i32 %43, %48\l  %50 = freeze i32 %47\l  %51 = sdiv i32 %6, -2\l  %52 = mul nsw i32 %50, %14\l  %53 = add nsw i32 %52, %49\l  %54 = mul nsw i32 %53, %18\l  %55 = add nsw i32 %54, %45\l  %56 = icmp sgt i32 %5, 0\l  br i1 %56, label %57, label %186\l|{<s0>T|<s1>F}}"];
	Node0x582f2b0:s0 -> Node0x582fd30;
	Node0x582f2b0:s1 -> Node0x582fd80;
	Node0x582fd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%57:\l57:                                               \l  %58 = mul nsw i32 %49, %4\l  %59 = add nsw i32 %58, %51\l  %60 = mul nsw i32 %45, %4\l  %61 = add nsw i32 %60, %51\l  %62 = mul nsw i32 %50, %1\l  %63 = and i32 %5, 3\l  %64 = icmp ult i32 %5, 4\l  %65 = and i32 %5, -4\l  %66 = icmp eq i32 %63, 0\l  br label %67\l}"];
	Node0x582fd30 -> Node0x582ec50;
	Node0x582ec50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%67:\l67:                                               \l  %68 = phi float [ 0xFFF0000000000000, %57 ], [ %183, %181 ]\l  %69 = phi i32 [ -1, %57 ], [ %182, %181 ]\l  %70 = phi i32 [ 0, %57 ], [ %184, %181 ]\l  %71 = add nsw i32 %59, %70\l  %72 = add nsw i32 %71, %62\l  %73 = mul nsw i32 %72, %2\l  %74 = icmp sgt i32 %71, -1\l  %75 = icmp slt i32 %71, %1\l  br i1 %64, label %151, label %76\l|{<s0>T|<s1>F}}"];
	Node0x582ec50:s0 -> Node0x5831830;
	Node0x582ec50:s1 -> Node0x58318c0;
	Node0x58318c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%76:\l76:                                               \l  %77 = phi float [ %147, %143 ], [ %68, %67 ]\l  %78 = phi i32 [ %146, %143 ], [ %69, %67 ]\l  %79 = phi i32 [ %148, %143 ], [ 0, %67 ]\l  %80 = phi i32 [ %149, %143 ], [ 0, %67 ]\l  %81 = add nsw i32 %61, %79\l  %82 = add nsw i32 %81, %73\l  br i1 %74, label %83, label %92\l|{<s0>T|<s1>F}}"];
	Node0x58318c0:s0 -> Node0x5831ff0;
	Node0x58318c0:s1 -> Node0x5832080;
	Node0x5831ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%83:\l83:                                               \l  %84 = icmp sgt i32 %81, -1\l  %85 = select i1 %75, i1 %84, i1 false\l  %86 = icmp slt i32 %81, %2\l  %87 = select i1 %85, i1 %86, i1 false\l  br i1 %87, label %88, label %92\l|{<s0>T|<s1>F}}"];
	Node0x5831ff0:s0 -> Node0x5832470;
	Node0x5831ff0:s1 -> Node0x5832080;
	Node0x5832470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%88:\l88:                                               \l  %89 = sext i32 %82 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %7, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %92\l}"];
	Node0x5832470 -> Node0x5832080;
	Node0x5832080 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%92:\l92:                                               \l  %93 = phi contract float [ %91, %88 ], [ 0xFFF0000000000000, %83 ], [\l... 0xFFF0000000000000, %76 ]\l  %94 = fcmp contract ogt float %93, %77\l  %95 = select i1 %94, i32 %82, i32 %78\l  %96 = select contract i1 %94, float %93, float %77\l  %97 = or i32 %79, 1\l  %98 = add nsw i32 %61, %97\l  %99 = add nsw i32 %98, %73\l  br i1 %74, label %100, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5832080:s0 -> Node0x5833390;
	Node0x5832080:s1 -> Node0x58333e0;
	Node0x5833390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%100:\l100:                                              \l  %101 = icmp sgt i32 %98, -1\l  %102 = select i1 %75, i1 %101, i1 false\l  %103 = icmp slt i32 %98, %2\l  %104 = select i1 %102, i1 %103, i1 false\l  br i1 %104, label %105, label %109\l|{<s0>T|<s1>F}}"];
	Node0x5833390:s0 -> Node0x58337a0;
	Node0x5833390:s1 -> Node0x58333e0;
	Node0x58337a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%105:\l105:                                              \l  %106 = sext i32 %99 to i64\l  %107 = getelementptr inbounds float, float addrspace(1)* %7, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %109\l}"];
	Node0x58337a0 -> Node0x58333e0;
	Node0x58333e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%109:\l109:                                              \l  %110 = phi contract float [ %108, %105 ], [ 0xFFF0000000000000, %100 ], [\l... 0xFFF0000000000000, %92 ]\l  %111 = fcmp contract ogt float %110, %96\l  %112 = select i1 %111, i32 %99, i32 %95\l  %113 = select contract i1 %111, float %110, float %96\l  %114 = or i32 %79, 2\l  %115 = add nsw i32 %61, %114\l  %116 = add nsw i32 %115, %73\l  br i1 %74, label %117, label %126\l|{<s0>T|<s1>F}}"];
	Node0x58333e0:s0 -> Node0x5834510;
	Node0x58333e0:s1 -> Node0x5834560;
	Node0x5834510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%117:\l117:                                              \l  %118 = icmp sgt i32 %115, -1\l  %119 = select i1 %75, i1 %118, i1 false\l  %120 = icmp slt i32 %115, %2\l  %121 = select i1 %119, i1 %120, i1 false\l  br i1 %121, label %122, label %126\l|{<s0>T|<s1>F}}"];
	Node0x5834510:s0 -> Node0x5834920;
	Node0x5834510:s1 -> Node0x5834560;
	Node0x5834920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%122:\l122:                                              \l  %123 = sext i32 %116 to i64\l  %124 = getelementptr inbounds float, float addrspace(1)* %7, i64 %123\l  %125 = load float, float addrspace(1)* %124, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %126\l}"];
	Node0x5834920 -> Node0x5834560;
	Node0x5834560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%126:\l126:                                              \l  %127 = phi contract float [ %125, %122 ], [ 0xFFF0000000000000, %117 ], [\l... 0xFFF0000000000000, %109 ]\l  %128 = fcmp contract ogt float %127, %113\l  %129 = select i1 %128, i32 %116, i32 %112\l  %130 = select contract i1 %128, float %127, float %113\l  %131 = or i32 %79, 3\l  %132 = add nsw i32 %61, %131\l  %133 = add nsw i32 %132, %73\l  br i1 %74, label %134, label %143\l|{<s0>T|<s1>F}}"];
	Node0x5834560:s0 -> Node0x5830620;
	Node0x5834560:s1 -> Node0x5831a30;
	Node0x5830620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%134:\l134:                                              \l  %135 = icmp sgt i32 %132, -1\l  %136 = select i1 %75, i1 %135, i1 false\l  %137 = icmp slt i32 %132, %2\l  %138 = select i1 %136, i1 %137, i1 false\l  br i1 %138, label %139, label %143\l|{<s0>T|<s1>F}}"];
	Node0x5830620:s0 -> Node0x5835830;
	Node0x5830620:s1 -> Node0x5831a30;
	Node0x5835830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%139:\l139:                                              \l  %140 = sext i32 %133 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %7, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %143\l}"];
	Node0x5835830 -> Node0x5831a30;
	Node0x5831a30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%143:\l143:                                              \l  %144 = phi contract float [ %142, %139 ], [ 0xFFF0000000000000, %134 ], [\l... 0xFFF0000000000000, %126 ]\l  %145 = fcmp contract ogt float %144, %130\l  %146 = select i1 %145, i32 %133, i32 %129\l  %147 = select contract i1 %145, float %144, float %130\l  %148 = add nuw nsw i32 %79, 4\l  %149 = add i32 %80, 4\l  %150 = icmp eq i32 %149, %65\l  br i1 %150, label %151, label %76, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5831a30:s0 -> Node0x5831830;
	Node0x5831a30:s1 -> Node0x58318c0;
	Node0x5831830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%151:\l151:                                              \l  %152 = phi i32 [ undef, %67 ], [ %146, %143 ]\l  %153 = phi float [ undef, %67 ], [ %147, %143 ]\l  %154 = phi float [ %68, %67 ], [ %147, %143 ]\l  %155 = phi i32 [ %69, %67 ], [ %146, %143 ]\l  %156 = phi i32 [ 0, %67 ], [ %148, %143 ]\l  br i1 %66, label %181, label %157\l|{<s0>T|<s1>F}}"];
	Node0x5831830:s0 -> Node0x58311e0;
	Node0x5831830:s1 -> Node0x58367f0;
	Node0x58367f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%157:\l157:                                              \l  %158 = phi float [ %177, %173 ], [ %154, %151 ]\l  %159 = phi i32 [ %176, %173 ], [ %155, %151 ]\l  %160 = phi i32 [ %178, %173 ], [ %156, %151 ]\l  %161 = phi i32 [ %179, %173 ], [ 0, %151 ]\l  %162 = add nsw i32 %61, %160\l  %163 = add nsw i32 %162, %73\l  br i1 %74, label %164, label %173\l|{<s0>T|<s1>F}}"];
	Node0x58367f0:s0 -> Node0x5836de0;
	Node0x58367f0:s1 -> Node0x58368f0;
	Node0x5836de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%164:\l164:                                              \l  %165 = icmp sgt i32 %162, -1\l  %166 = select i1 %75, i1 %165, i1 false\l  %167 = icmp slt i32 %162, %2\l  %168 = select i1 %166, i1 %167, i1 false\l  br i1 %168, label %169, label %173\l|{<s0>T|<s1>F}}"];
	Node0x5836de0:s0 -> Node0x58371a0;
	Node0x5836de0:s1 -> Node0x58368f0;
	Node0x58371a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%169:\l169:                                              \l  %170 = sext i32 %163 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %7, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !16,\l... !amdgpu.noclobber !14\l  br label %173\l}"];
	Node0x58371a0 -> Node0x58368f0;
	Node0x58368f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%173:\l173:                                              \l  %174 = phi contract float [ %172, %169 ], [ 0xFFF0000000000000, %164 ], [\l... 0xFFF0000000000000, %157 ]\l  %175 = fcmp contract ogt float %174, %158\l  %176 = select i1 %175, i32 %163, i32 %159\l  %177 = select contract i1 %175, float %174, float %158\l  %178 = add nuw nsw i32 %160, 1\l  %179 = add i32 %161, 1\l  %180 = icmp eq i32 %179, %63\l  br i1 %180, label %181, label %157, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x58368f0:s0 -> Node0x58311e0;
	Node0x58368f0:s1 -> Node0x58367f0;
	Node0x58311e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%181:\l181:                                              \l  %182 = phi i32 [ %152, %151 ], [ %176, %173 ]\l  %183 = phi float [ %153, %151 ], [ %177, %173 ]\l  %184 = add nuw nsw i32 %70, 1\l  %185 = icmp eq i32 %184, %5\l  br i1 %185, label %186, label %67, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x58311e0:s0 -> Node0x582fd80;
	Node0x58311e0:s1 -> Node0x582ec50;
	Node0x582fd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%186:\l186:                                              \l  %187 = phi i32 [ -1, %40 ], [ %182, %181 ]\l  %188 = phi float [ 0xFFF0000000000000, %40 ], [ %183, %181 ]\l  %189 = sext i32 %55 to i64\l  %190 = getelementptr inbounds float, float addrspace(1)* %8, i64 %189\l  store float %188, float addrspace(1)* %190, align 4, !tbaa !16\l  %191 = getelementptr inbounds i32, i32 addrspace(1)* %9, i64 %189\l  store i32 %187, i32 addrspace(1)* %191, align 4, !tbaa !25\l  br label %192\l}"];
	Node0x582fd80 -> Node0x582f340;
	Node0x582f340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%192:\l192:                                              \l  ret void\l}"];
}
