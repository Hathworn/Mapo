digraph "CFG for '_Z9pi_doublePK6point2Piif' function" {
	label="CFG for '_Z9pi_doublePK6point2Piif' function";

	Node0x6070cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = shl nuw nsw i32 %9, 5\l  %12 = mul i32 %11, %10\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = sub i32 %2, %11\l  %16 = icmp ult i32 %14, %15\l  %17 = icmp slt i32 %14, %15\l  %18 = and i1 %16, %17\l  br i1 %18, label %19, label %248\l|{<s0>T|<s1>F}}"];
	Node0x6070cd0:s0 -> Node0x60756d0;
	Node0x6070cd0:s1 -> Node0x6075760;
	Node0x60756d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%19:\l19:                                               \l  %20 = fpext float %3 to double\l  br label %21\l}"];
	Node0x60756d0 -> Node0x6075910;
	Node0x6075910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %19 ], [ %246, %21 ]\l  %23 = mul nuw nsw i32 %22, %9\l  %24 = add i32 %23, %14\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %25, i32 0\l  %27 = load double, double addrspace(1)* %26, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %28 = fmul contract double %27, %27\l  %29 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %25, i32 1\l  %30 = load double, double addrspace(1)* %29, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %31 = fmul contract double %30, %30\l  %32 = fadd contract double %28, %31\l  %33 = fcmp contract ole double %32, %20\l  %34 = zext i1 %33 to i32\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %25\l  store i32 %34, i32 addrspace(1)* %35, align 4, !tbaa !13\l  %36 = or i32 %22, 1\l  %37 = mul nuw nsw i32 %36, %9\l  %38 = add i32 %37, %14\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %39, i32 0\l  %41 = load double, double addrspace(1)* %40, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = fmul contract double %41, %41\l  %43 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %39, i32 1\l  %44 = load double, double addrspace(1)* %43, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %45 = fmul contract double %44, %44\l  %46 = fadd contract double %42, %45\l  %47 = fcmp contract ole double %46, %20\l  %48 = zext i1 %47 to i32\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %39\l  store i32 %48, i32 addrspace(1)* %49, align 4, !tbaa !13\l  %50 = or i32 %22, 2\l  %51 = mul nuw nsw i32 %50, %9\l  %52 = add i32 %51, %14\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %53, i32 0\l  %55 = load double, double addrspace(1)* %54, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %56 = fmul contract double %55, %55\l  %57 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %53, i32 1\l  %58 = load double, double addrspace(1)* %57, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %59 = fmul contract double %58, %58\l  %60 = fadd contract double %56, %59\l  %61 = fcmp contract ole double %60, %20\l  %62 = zext i1 %61 to i32\l  %63 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %53\l  store i32 %62, i32 addrspace(1)* %63, align 4, !tbaa !13\l  %64 = or i32 %22, 3\l  %65 = mul nuw nsw i32 %64, %9\l  %66 = add i32 %65, %14\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %67, i32 0\l  %69 = load double, double addrspace(1)* %68, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %70 = fmul contract double %69, %69\l  %71 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %67, i32 1\l  %72 = load double, double addrspace(1)* %71, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %73 = fmul contract double %72, %72\l  %74 = fadd contract double %70, %73\l  %75 = fcmp contract ole double %74, %20\l  %76 = zext i1 %75 to i32\l  %77 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %67\l  store i32 %76, i32 addrspace(1)* %77, align 4, !tbaa !13\l  %78 = or i32 %22, 4\l  %79 = mul nuw nsw i32 %78, %9\l  %80 = add i32 %79, %14\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %81, i32 0\l  %83 = load double, double addrspace(1)* %82, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %84 = fmul contract double %83, %83\l  %85 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %81, i32 1\l  %86 = load double, double addrspace(1)* %85, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %87 = fmul contract double %86, %86\l  %88 = fadd contract double %84, %87\l  %89 = fcmp contract ole double %88, %20\l  %90 = zext i1 %89 to i32\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %81\l  store i32 %90, i32 addrspace(1)* %91, align 4, !tbaa !13\l  %92 = or i32 %22, 5\l  %93 = mul nuw nsw i32 %92, %9\l  %94 = add i32 %93, %14\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %95, i32 0\l  %97 = load double, double addrspace(1)* %96, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %98 = fmul contract double %97, %97\l  %99 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %95, i32 1\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %101 = fmul contract double %100, %100\l  %102 = fadd contract double %98, %101\l  %103 = fcmp contract ole double %102, %20\l  %104 = zext i1 %103 to i32\l  %105 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  store i32 %104, i32 addrspace(1)* %105, align 4, !tbaa !13\l  %106 = or i32 %22, 6\l  %107 = mul nuw nsw i32 %106, %9\l  %108 = add i32 %107, %14\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %109, i32 0\l  %111 = load double, double addrspace(1)* %110, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %112 = fmul contract double %111, %111\l  %113 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %109, i32 1\l  %114 = load double, double addrspace(1)* %113, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %115 = fmul contract double %114, %114\l  %116 = fadd contract double %112, %115\l  %117 = fcmp contract ole double %116, %20\l  %118 = zext i1 %117 to i32\l  %119 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %109\l  store i32 %118, i32 addrspace(1)* %119, align 4, !tbaa !13\l  %120 = or i32 %22, 7\l  %121 = mul nuw nsw i32 %120, %9\l  %122 = add i32 %121, %14\l  %123 = sext i32 %122 to i64\l  %124 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %123, i32 0\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %126 = fmul contract double %125, %125\l  %127 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %123, i32 1\l  %128 = load double, double addrspace(1)* %127, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %129 = fmul contract double %128, %128\l  %130 = fadd contract double %126, %129\l  %131 = fcmp contract ole double %130, %20\l  %132 = zext i1 %131 to i32\l  %133 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %123\l  store i32 %132, i32 addrspace(1)* %133, align 4, !tbaa !13\l  %134 = or i32 %22, 8\l  %135 = mul nuw nsw i32 %134, %9\l  %136 = add i32 %135, %14\l  %137 = sext i32 %136 to i64\l  %138 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %137, i32 0\l  %139 = load double, double addrspace(1)* %138, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %140 = fmul contract double %139, %139\l  %141 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %137, i32 1\l  %142 = load double, double addrspace(1)* %141, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %143 = fmul contract double %142, %142\l  %144 = fadd contract double %140, %143\l  %145 = fcmp contract ole double %144, %20\l  %146 = zext i1 %145 to i32\l  %147 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %137\l  store i32 %146, i32 addrspace(1)* %147, align 4, !tbaa !13\l  %148 = or i32 %22, 9\l  %149 = mul nuw nsw i32 %148, %9\l  %150 = add i32 %149, %14\l  %151 = sext i32 %150 to i64\l  %152 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %151, i32 0\l  %153 = load double, double addrspace(1)* %152, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %154 = fmul contract double %153, %153\l  %155 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %151, i32 1\l  %156 = load double, double addrspace(1)* %155, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %157 = fmul contract double %156, %156\l  %158 = fadd contract double %154, %157\l  %159 = fcmp contract ole double %158, %20\l  %160 = zext i1 %159 to i32\l  %161 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %151\l  store i32 %160, i32 addrspace(1)* %161, align 4, !tbaa !13\l  %162 = or i32 %22, 10\l  %163 = mul nuw nsw i32 %162, %9\l  %164 = add i32 %163, %14\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %165, i32 0\l  %167 = load double, double addrspace(1)* %166, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %168 = fmul contract double %167, %167\l  %169 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %165, i32 1\l  %170 = load double, double addrspace(1)* %169, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %171 = fmul contract double %170, %170\l  %172 = fadd contract double %168, %171\l  %173 = fcmp contract ole double %172, %20\l  %174 = zext i1 %173 to i32\l  %175 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %165\l  store i32 %174, i32 addrspace(1)* %175, align 4, !tbaa !13\l  %176 = or i32 %22, 11\l  %177 = mul nuw nsw i32 %176, %9\l  %178 = add i32 %177, %14\l  %179 = sext i32 %178 to i64\l  %180 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %179, i32 0\l  %181 = load double, double addrspace(1)* %180, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %182 = fmul contract double %181, %181\l  %183 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %179, i32 1\l  %184 = load double, double addrspace(1)* %183, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %185 = fmul contract double %184, %184\l  %186 = fadd contract double %182, %185\l  %187 = fcmp contract ole double %186, %20\l  %188 = zext i1 %187 to i32\l  %189 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %179\l  store i32 %188, i32 addrspace(1)* %189, align 4, !tbaa !13\l  %190 = or i32 %22, 12\l  %191 = mul nuw nsw i32 %190, %9\l  %192 = add i32 %191, %14\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %193, i32 0\l  %195 = load double, double addrspace(1)* %194, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %196 = fmul contract double %195, %195\l  %197 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %193, i32 1\l  %198 = load double, double addrspace(1)* %197, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %199 = fmul contract double %198, %198\l  %200 = fadd contract double %196, %199\l  %201 = fcmp contract ole double %200, %20\l  %202 = zext i1 %201 to i32\l  %203 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %193\l  store i32 %202, i32 addrspace(1)* %203, align 4, !tbaa !13\l  %204 = or i32 %22, 13\l  %205 = mul nuw nsw i32 %204, %9\l  %206 = add i32 %205, %14\l  %207 = sext i32 %206 to i64\l  %208 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %207, i32 0\l  %209 = load double, double addrspace(1)* %208, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %210 = fmul contract double %209, %209\l  %211 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %207, i32 1\l  %212 = load double, double addrspace(1)* %211, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %213 = fmul contract double %212, %212\l  %214 = fadd contract double %210, %213\l  %215 = fcmp contract ole double %214, %20\l  %216 = zext i1 %215 to i32\l  %217 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %207\l  store i32 %216, i32 addrspace(1)* %217, align 4, !tbaa !13\l  %218 = or i32 %22, 14\l  %219 = mul nuw nsw i32 %218, %9\l  %220 = add i32 %219, %14\l  %221 = sext i32 %220 to i64\l  %222 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %221, i32 0\l  %223 = load double, double addrspace(1)* %222, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %224 = fmul contract double %223, %223\l  %225 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %221, i32 1\l  %226 = load double, double addrspace(1)* %225, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %227 = fmul contract double %226, %226\l  %228 = fadd contract double %224, %227\l  %229 = fcmp contract ole double %228, %20\l  %230 = zext i1 %229 to i32\l  %231 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %221\l  store i32 %230, i32 addrspace(1)* %231, align 4, !tbaa !13\l  %232 = or i32 %22, 15\l  %233 = mul nuw nsw i32 %232, %9\l  %234 = add i32 %233, %14\l  %235 = sext i32 %234 to i64\l  %236 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %235, i32 0\l  %237 = load double, double addrspace(1)* %236, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %238 = fmul contract double %237, %237\l  %239 = getelementptr inbounds %struct.point2, %struct.point2 addrspace(1)*\l... %0, i64 %235, i32 1\l  %240 = load double, double addrspace(1)* %239, align 8, !tbaa !12,\l... !amdgpu.noclobber !5\l  %241 = fmul contract double %240, %240\l  %242 = fadd contract double %238, %241\l  %243 = fcmp contract ole double %242, %20\l  %244 = zext i1 %243 to i32\l  %245 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %235\l  store i32 %244, i32 addrspace(1)* %245, align 4, !tbaa !13\l  %246 = add nuw nsw i32 %22, 16\l  %247 = icmp eq i32 %246, 32\l  br i1 %247, label %248, label %21, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x6075910:s0 -> Node0x6075760;
	Node0x6075910:s1 -> Node0x6075910;
	Node0x6075760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%248:\l248:                                              \l  ret void\l}"];
}
