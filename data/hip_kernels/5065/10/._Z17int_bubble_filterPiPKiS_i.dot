digraph "CFG for '_Z17int_bubble_filterPiPKiS_i' function" {
	label="CFG for '_Z17int_bubble_filterPiPKiS_i' function";

	Node0x5f5dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = sdiv i32 %3, 2\l  %15 = icmp sgt i32 %13, %14\l  br i1 %15, label %65, label %16\l|{<s0>T|<s1>F}}"];
	Node0x5f5dd60:s0 -> Node0x5f5fcf0;
	Node0x5f5dd60:s1 -> Node0x5f5fd80;
	Node0x5f5fd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%16:\l16:                                               \l  %17 = shl nsw i32 %13, 1\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %18\l  %20 = load i32, i32 addrspace(1)* %19, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %21 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %18\l  store i32 %20, i32 addrspace(1)* %21, align 4, !tbaa !7\l  %22 = add nuw nsw i32 %17, 1\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %23\l  %25 = load i32, i32 addrspace(1)* %24, align 4, !tbaa !7\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %23\l  store i32 %25, i32 addrspace(1)* %26, align 4, !tbaa !7\l  %27 = icmp sgt i32 %3, 0\l  br i1 %27, label %28, label %65\l|{<s0>T|<s1>F}}"];
	Node0x5f5fd80:s0 -> Node0x5f61470;
	Node0x5f5fd80:s1 -> Node0x5f5fcf0;
	Node0x5f61470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = shl nuw i32 %3, 1\l  %30 = tail call i32 @llvm.smax.i32(i32 %29, i32 1)\l  br label %31\l}"];
	Node0x5f61470 -> Node0x5f61810;
	Node0x5f61810 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%31:\l31:                                               \l  %32 = phi i32 [ %63, %62 ], [ 0, %28 ]\l  %33 = phi i32 [ %34, %62 ], [ 1, %28 ]\l  %34 = xor i32 %33, 1\l  %35 = add nsw i32 %34, %17\l  %36 = add nsw i32 %35, 1\l  %37 = icmp slt i32 %36, %3\l  br i1 %37, label %38, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5f61810:s0 -> Node0x5f5ff80;
	Node0x5f61810:s1 -> Node0x5f61940;
	Node0x5f5ff80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = sext i32 %35 to i64\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %39\l  %41 = load i32, i32 addrspace(1)* %40, align 4, !tbaa !7\l  %42 = icmp eq i32 %41, 0\l  %43 = sext i32 %36 to i64\l  br i1 %42, label %44, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5f5ff80:s0 -> Node0x5f62290;
	Node0x5f5ff80:s1 -> Node0x5f622e0;
	Node0x5f62290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%44:\l44:                                               \l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %43\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %47 = icmp eq i32 %46, 0\l  br i1 %47, label %52, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5f62290:s0 -> Node0x5f625c0;
	Node0x5f62290:s1 -> Node0x5f62610;
	Node0x5f62610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%48:\l48:                                               \l  store i32 1, i32 addrspace(1)* %40, align 4, !tbaa !7\l  store i32 0, i32 addrspace(1)* %45, align 4, !tbaa !7\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %39\l  store i32 %50, i32 addrspace(1)* %51, align 4, !tbaa !7\l  br label %60\l}"];
	Node0x5f62610 -> Node0x5f62ab0;
	Node0x5f625c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%52:\l52:                                               \l  %53 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %39\l  store i32 0, i32 addrspace(1)* %53, align 4, !tbaa !7\l  br label %54\l}"];
	Node0x5f625c0 -> Node0x5f622e0;
	Node0x5f622e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %43\l  %56 = load i32, i32 addrspace(1)* %55, align 4, !tbaa !7\l  %57 = icmp eq i32 %56, 0\l  br i1 %57, label %58, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5f622e0:s0 -> Node0x5f62eb0;
	Node0x5f622e0:s1 -> Node0x5f61940;
	Node0x5f62eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %43\l  br label %60\l}"];
	Node0x5f62eb0 -> Node0x5f62ab0;
	Node0x5f62ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%60:\l60:                                               \l  %61 = phi i32 addrspace(1)* [ %49, %48 ], [ %59, %58 ]\l  store i32 0, i32 addrspace(1)* %61, align 4, !tbaa !7\l  br label %62\l}"];
	Node0x5f62ab0 -> Node0x5f61940;
	Node0x5f61940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = add nuw nsw i32 %32, 1\l  %64 = icmp eq i32 %63, %30\l  br i1 %64, label %65, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5f61940:s0 -> Node0x5f5fcf0;
	Node0x5f61940:s1 -> Node0x5f61810;
	Node0x5f5fcf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%65:\l65:                                               \l  ret void\l}"];
}
