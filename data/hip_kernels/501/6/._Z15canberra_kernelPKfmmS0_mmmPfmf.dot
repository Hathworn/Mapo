digraph "CFG for '_Z15canberra_kernelPKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z15canberra_kernelPKfmmS0_mmmPfmf' function";

	Node0x6356790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp ult i64 %12, %2\l  %16 = icmp ult i64 %14, %5\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %82\l|{<s0>T|<s1>F}}"];
	Node0x6356790:s0 -> Node0x6356460;
	Node0x6356790:s1 -> Node0x6357c80;
	Node0x6356460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ15canberra_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %19\l  store float 0.000000e+00, float addrspace(3)* %20, align 4, !tbaa !5\l  %21 = zext i32 %19 to i64\l  %22 = icmp ult i64 %21, %6\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x6356460:s0 -> Node0x6359980;
	Node0x6356460:s1 -> Node0x6359a10;
	Node0x6359a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%23:\l23:                                               \l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %33\l}"];
	Node0x6359a10 -> Node0x6359d00;
	Node0x6359980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = mul i64 %12, %1\l  %27 = mul i64 %14, %4\l  %28 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %29 = getelementptr i8, i8 addrspace(4)* %28, i64 4\l  %30 = bitcast i8 addrspace(4)* %29 to i16 addrspace(4)*\l  %31 = load i16, i16 addrspace(4)* %30, align 4, !range !9, !invariant.load\l... !10\l  %32 = zext i16 %31 to i64\l  br label %42\l}"];
	Node0x6359980 -> Node0x6357470;
	Node0x6359d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%33:\l33:                                               \l  %34 = phi i8 addrspace(4)* [ %24, %23 ], [ %28, %58 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %35 = getelementptr i8, i8 addrspace(4)* %34, i64 4\l  %36 = bitcast i8 addrspace(4)* %35 to i16 addrspace(4)*\l  %37 = load i16, i16 addrspace(4)* %36, align 4, !range !9, !invariant.load\l... !10\l  %38 = icmp ult i16 %37, 2\l  br i1 %38, label %62, label %39\l|{<s0>T|<s1>F}}"];
	Node0x6359d00:s0 -> Node0x635b980;
	Node0x6359d00:s1 -> Node0x635ba10;
	Node0x635ba10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%39:\l39:                                               \l  %40 = lshr i16 %37, 1\l  %41 = zext i16 %40 to i64\l  br label %64\l}"];
	Node0x635ba10 -> Node0x635bc80;
	Node0x6357470 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%42:\l42:                                               \l  %43 = phi float [ 0.000000e+00, %25 ], [ %59, %58 ]\l  %44 = phi i64 [ %21, %25 ], [ %60, %58 ]\l  %45 = add i64 %44, %26\l  %46 = getelementptr inbounds float, float addrspace(1)* %0, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %48 = add i64 %44, %27\l  %49 = getelementptr inbounds float, float addrspace(1)* %3, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %51 = fadd contract float %47, %50\l  %52 = fcmp contract une float %51, 0.000000e+00\l  br i1 %52, label %53, label %58\l|{<s0>T|<s1>F}}"];
	Node0x6357470:s0 -> Node0x635ca90;
	Node0x6357470:s1 -> Node0x635a710;
	Node0x635ca90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  %54 = fsub contract float %47, %50\l  %55 = fdiv contract float %54, %51\l  %56 = tail call contract float @llvm.fabs.f32(float %55)\l  %57 = fadd contract float %56, %43\l  store float %57, float addrspace(3)* %20, align 4, !tbaa !5\l  br label %58\l}"];
	Node0x635ca90 -> Node0x635a710;
	Node0x635a710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi float [ %57, %53 ], [ %43, %42 ]\l  %60 = add i64 %44, %32\l  %61 = icmp ult i64 %60, %6\l  br i1 %61, label %42, label %33, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x635a710:s0 -> Node0x6357470;
	Node0x635a710:s1 -> Node0x6359d00;
	Node0x635b980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%62:\l62:                                               \l  %63 = icmp eq i32 %19, 0\l  br i1 %63, label %77, label %82\l|{<s0>T|<s1>F}}"];
	Node0x635b980:s0 -> Node0x635d3f0;
	Node0x635b980:s1 -> Node0x6357c80;
	Node0x635bc80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i64 [ %75, %74 ], [ %41, %39 ]\l  %66 = icmp ugt i64 %65, %21\l  br i1 %66, label %67, label %74\l|{<s0>T|<s1>F}}"];
	Node0x635bc80:s0 -> Node0x635d900;
	Node0x635bc80:s1 -> Node0x635a500;
	Node0x635d900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%67:\l67:                                               \l  %68 = trunc i64 %65 to i32\l  %69 = add nuw nsw i32 %19, %68\l  %70 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ15canberra_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %69\l  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !5\l  %72 = load float, float addrspace(3)* %20, align 4, !tbaa !5\l  %73 = fadd contract float %71, %72\l  store float %73, float addrspace(3)* %20, align 4, !tbaa !5\l  br label %74\l}"];
	Node0x635d900 -> Node0x635a500;
	Node0x635a500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %75 = lshr i64 %65, 1\l  %76 = icmp ult i64 %65, 2\l  br i1 %76, label %62, label %64, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x635a500:s0 -> Node0x635b980;
	Node0x635a500:s1 -> Node0x635bc80;
	Node0x635d3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%77:\l77:                                               \l  %78 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ15canberra_kernelPKfmmS0_mmmPfmfE4temp, i32 0,\l... i32 0), align 16, !tbaa !5\l  %79 = mul i64 %14, %8\l  %80 = add i64 %79, %12\l  %81 = getelementptr inbounds float, float addrspace(1)* %7, i64 %80\l  store float %78, float addrspace(1)* %81, align 4, !tbaa !5\l  br label %82\l}"];
	Node0x635d3f0 -> Node0x6357c80;
	Node0x6357c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%82:\l82:                                               \l  ret void\l}"];
}
