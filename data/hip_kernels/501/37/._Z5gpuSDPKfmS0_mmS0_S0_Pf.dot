digraph "CFG for '_Z5gpuSDPKfmS0_mmS0_S0_Pf' function" {
	label="CFG for '_Z5gpuSDPKfmS0_mmS0_S0_Pf' function";

	Node0x52ebc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = zext i32 %9 to i64\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp ult i64 %12, %1\l  %16 = icmp ult i64 %14, %3\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %169\l|{<s0>T|<s1>F}}"];
	Node0x52ebc80:s0 -> Node0x52ebd00;
	Node0x52ebc80:s1 -> Node0x52ed830;
	Node0x52ebd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = icmp eq i32 %9, 0\l  br i1 %19, label %20, label %31\l|{<s0>T|<s1>F}}"];
	Node0x52ebd00:s0 -> Node0x52eda30;
	Node0x52ebd00:s1 -> Node0x52eda80;
	Node0x52eda30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%20:\l20:                                               \l  %21 = mul i64 %12, %3\l  %22 = add i64 %21, %14\l  %23 = shl i64 %22, 1\l  %24 = getelementptr inbounds float, float addrspace(1)* %5, i64 %23\l  %25 = load float, float addrspace(1)* %24, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %25, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE5meanA,\l... align 4, !tbaa !5\l  %26 = add nuw nsw i64 %23, 1\l  %27 = getelementptr inbounds float, float addrspace(1)* %5, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %28, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE5meanB,\l... align 4, !tbaa !5\l  %29 = getelementptr inbounds float, float addrspace(1)* %6, i64 %22\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %30, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE1n, align\l... 4, !tbaa !5\l  br label %31\l}"];
	Node0x52eda30 -> Node0x52eda80;
	Node0x52eda80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%31:\l31:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %32 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %9\l  store float 0.000000e+00, float addrspace(3)* %32, align 4, !tbaa !5\l  %33 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %9\l  store float 0.000000e+00, float addrspace(3)* %33, align 4, !tbaa !5\l  %34 = icmp ult i64 %10, %4\l  br i1 %34, label %35, label %65\l|{<s0>T|<s1>F}}"];
	Node0x52eda80:s0 -> Node0x52ef670;
	Node0x52eda80:s1 -> Node0x52ef570;
	Node0x52ef670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%35:\l35:                                               \l  %36 = mul i64 %12, %4\l  %37 = mul i64 %14, %4\l  %38 = load float, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE5meanA,\l... align 4\l  %39 = load float, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE5meanB,\l... align 4\l  br label %40\l}"];
	Node0x52ef670 -> Node0x52ed0e0;
	Node0x52ed0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = phi float [ 0.000000e+00, %35 ], [ %61, %60 ]\l  %42 = phi float [ 0.000000e+00, %35 ], [ %62, %60 ]\l  %43 = phi i64 [ %10, %35 ], [ %63, %60 ]\l  %44 = add i64 %43, %36\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %47 = add i64 %43, %37\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %50 = fcmp uno float %46, 0.000000e+00\l  %51 = fcmp uno float %49, 0.000000e+00\l  %52 = select i1 %50, i1 true, i1 %51\l  br i1 %52, label %60, label %53\l|{<s0>T|<s1>F}}"];
	Node0x52ed0e0:s0 -> Node0x52f0920;
	Node0x52ed0e0:s1 -> Node0x52f1260;
	Node0x52f1260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = fsub contract float %46, %38\l  %55 = fsub contract float %49, %39\l  %56 = fmul contract float %54, %54\l  %57 = fadd contract float %42, %56\l  store float %57, float addrspace(3)* %32, align 4, !tbaa !5\l  %58 = fmul contract float %55, %55\l  %59 = fadd contract float %58, %41\l  store float %59, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %60\l}"];
	Node0x52f1260 -> Node0x52f0920;
	Node0x52f0920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%60:\l60:                                               \l  %61 = phi float [ %41, %40 ], [ %59, %53 ]\l  %62 = phi float [ %42, %40 ], [ %57, %53 ]\l  %63 = add i64 %43, 16\l  %64 = icmp ult i64 %63, %4\l  br i1 %64, label %40, label %65, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x52f0920:s0 -> Node0x52ed0e0;
	Node0x52f0920:s1 -> Node0x52ef570;
	Node0x52ef570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%65:\l65:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %66 = icmp ult i32 %9, 8\l  br i1 %66, label %67, label %77\l|{<s0>T|<s1>F}}"];
	Node0x52ef570:s0 -> Node0x52f2030;
	Node0x52ef570:s1 -> Node0x52f2080;
	Node0x52f2030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%67:\l67:                                               \l  %68 = add nuw nsw i32 %9, 8\l  %69 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %68\l  %70 = load float, float addrspace(3)* %69, align 4, !tbaa !5\l  %71 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %72 = fadd contract float %70, %71\l  store float %72, float addrspace(3)* %32, align 4, !tbaa !5\l  %73 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %68\l  %74 = load float, float addrspace(3)* %73, align 4, !tbaa !5\l  %75 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %76 = fadd contract float %74, %75\l  store float %76, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %77\l}"];
	Node0x52f2030 -> Node0x52f2080;
	Node0x52f2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%77:\l77:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = icmp ult i32 %9, 4\l  br i1 %78, label %79, label %89\l|{<s0>T|<s1>F}}"];
	Node0x52f2080:s0 -> Node0x52f2a00;
	Node0x52f2080:s1 -> Node0x52f2a50;
	Node0x52f2a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%79:\l79:                                               \l  %80 = add nuw nsw i32 %9, 4\l  %81 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %80\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !5\l  %83 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %84 = fadd contract float %82, %83\l  store float %84, float addrspace(3)* %32, align 4, !tbaa !5\l  %85 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %80\l  %86 = load float, float addrspace(3)* %85, align 4, !tbaa !5\l  %87 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %88 = fadd contract float %86, %87\l  store float %88, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %89\l}"];
	Node0x52f2a00 -> Node0x52f2a50;
	Node0x52f2a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%89:\l89:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %90 = icmp ult i32 %9, 2\l  br i1 %90, label %91, label %101\l|{<s0>T|<s1>F}}"];
	Node0x52f2a50:s0 -> Node0x52f3400;
	Node0x52f2a50:s1 -> Node0x52f3450;
	Node0x52f3400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%91:\l91:                                               \l  %92 = add nuw nsw i32 %9, 2\l  %93 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %92\l  %94 = load float, float addrspace(3)* %93, align 4, !tbaa !5\l  %95 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %96 = fadd contract float %94, %95\l  store float %96, float addrspace(3)* %32, align 4, !tbaa !5\l  %97 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %92\l  %98 = load float, float addrspace(3)* %97, align 4, !tbaa !5\l  %99 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %100 = fadd contract float %98, %99\l  store float %100, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %101\l}"];
	Node0x52f3400 -> Node0x52f3450;
	Node0x52f3450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%101:\l101:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %102 = icmp eq i32 %9, 0\l  br i1 %102, label %103, label %113\l|{<s0>T|<s1>F}}"];
	Node0x52f3450:s0 -> Node0x52f3e00;
	Node0x52f3450:s1 -> Node0x52f3e50;
	Node0x52f3e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%103:\l103:                                              \l  %104 = add nuw nsw i32 %9, 1\l  %105 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0, i32 %104\l  %106 = load float, float addrspace(3)* %105, align 4, !tbaa !5\l  %107 = load float, float addrspace(3)* %32, align 4, !tbaa !5\l  %108 = fadd contract float %106, %107\l  store float %108, float addrspace(3)* %32, align 4, !tbaa !5\l  %109 = getelementptr inbounds [16 x float], [16 x float] addrspace(3)*\l... @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0, i32 %104\l  %110 = load float, float addrspace(3)* %109, align 4, !tbaa !5\l  %111 = load float, float addrspace(3)* %33, align 4, !tbaa !5\l  %112 = fadd contract float %110, %111\l  store float %112, float addrspace(3)* %33, align 4, !tbaa !5\l  br label %113\l}"];
	Node0x52f3e00 -> Node0x52f3e50;
	Node0x52f3e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%113:\l113:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br i1 %19, label %114, label %169\l|{<s0>T|<s1>F}}"];
	Node0x52f3e50:s0 -> Node0x52f4770;
	Node0x52f3e50:s1 -> Node0x52ed830;
	Node0x52f4770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%114:\l114:                                              \l  %115 = load float, float addrspace(3)* getelementptr inbounds ([16 x float],\l... [16 x float] addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsA, i32 0,\l... i32 0), align 16, !tbaa !5\l  %116 = load float, float addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE1n, align\l... 4, !tbaa !5\l  %117 = fadd contract float %116, -1.000000e+00\l  %118 = fdiv contract float %115, %117\l  %119 = fcmp olt float %118, 0x39F0000000000000\l  %120 = select i1 %119, float 0x41F0000000000000, float 1.000000e+00\l  %121 = fmul float %118, %120\l  %122 = tail call float @llvm.sqrt.f32(float %121)\l  %123 = bitcast float %122 to i32\l  %124 = add nsw i32 %123, -1\l  %125 = bitcast i32 %124 to float\l  %126 = add nsw i32 %123, 1\l  %127 = bitcast i32 %126 to float\l  %128 = tail call i1 @llvm.amdgcn.class.f32(float %121, i32 608)\l  %129 = select i1 %119, float 0x3EF0000000000000, float 1.000000e+00\l  %130 = fneg float %127\l  %131 = tail call float @llvm.fma.f32(float %130, float %122, float %121)\l  %132 = fcmp ogt float %131, 0.000000e+00\l  %133 = fneg float %125\l  %134 = tail call float @llvm.fma.f32(float %133, float %122, float %121)\l  %135 = fcmp ole float %134, 0.000000e+00\l  %136 = select i1 %135, float %125, float %122\l  %137 = select i1 %132, float %127, float %136\l  %138 = fmul float %129, %137\l  %139 = select i1 %128, float %121, float %138\l  %140 = mul i64 %12, %3\l  %141 = add i64 %140, %14\l  %142 = shl i64 %141, 1\l  %143 = getelementptr inbounds float, float addrspace(1)* %7, i64 %142\l  store float %139, float addrspace(1)* %143, align 4, !tbaa !5\l  %144 = load float, float addrspace(3)* getelementptr inbounds ([16 x float],\l... [16 x float] addrspace(3)* @_ZZ5gpuSDPKfmS0_mmS0_S0_PfE11threadSumsB, i32 0,\l... i32 0), align 16, !tbaa !5\l  %145 = fdiv contract float %144, %117\l  %146 = fcmp olt float %145, 0x39F0000000000000\l  %147 = select i1 %146, float 0x41F0000000000000, float 1.000000e+00\l  %148 = fmul float %145, %147\l  %149 = tail call float @llvm.sqrt.f32(float %148)\l  %150 = bitcast float %149 to i32\l  %151 = add nsw i32 %150, -1\l  %152 = bitcast i32 %151 to float\l  %153 = add nsw i32 %150, 1\l  %154 = bitcast i32 %153 to float\l  %155 = tail call i1 @llvm.amdgcn.class.f32(float %148, i32 608)\l  %156 = select i1 %146, float 0x3EF0000000000000, float 1.000000e+00\l  %157 = fneg float %154\l  %158 = tail call float @llvm.fma.f32(float %157, float %149, float %148)\l  %159 = fcmp ogt float %158, 0.000000e+00\l  %160 = fneg float %152\l  %161 = tail call float @llvm.fma.f32(float %160, float %149, float %148)\l  %162 = fcmp ole float %161, 0.000000e+00\l  %163 = select i1 %162, float %152, float %149\l  %164 = select i1 %159, float %154, float %163\l  %165 = fmul float %156, %164\l  %166 = select i1 %155, float %148, float %165\l  %167 = add nuw nsw i64 %142, 1\l  %168 = getelementptr inbounds float, float addrspace(1)* %7, i64 %167\l  store float %166, float addrspace(1)* %168, align 4, !tbaa !5\l  br label %169\l}"];
	Node0x52f4770 -> Node0x52ed830;
	Node0x52ed830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%169:\l169:                                              \l  ret void\l}"];
}
