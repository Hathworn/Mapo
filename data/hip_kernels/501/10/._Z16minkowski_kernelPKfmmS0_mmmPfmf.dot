digraph "CFG for '_Z16minkowski_kernelPKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z16minkowski_kernelPKfmmS0_mmmPfmf' function";

	Node0x5bfb9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp ult i64 %12, %2\l  %16 = icmp ult i64 %14, %5\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %461\l|{<s0>T|<s1>F}}"];
	Node0x5bfb9f0:s0 -> Node0x5bfb6c0;
	Node0x5bfb9f0:s1 -> Node0x5bfcee0;
	Node0x5bfb6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ16minkowski_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %19\l  store float 0.000000e+00, float addrspace(3)* %20, align 4, !tbaa !5\l  %21 = zext i32 %19 to i64\l  %22 = icmp ult i64 %21, %6\l  br i1 %22, label %25, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5bfb6c0:s0 -> Node0x5bfebe0;
	Node0x5bfb6c0:s1 -> Node0x5bfec70;
	Node0x5bfec70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%23:\l23:                                               \l  %24 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %40\l}"];
	Node0x5bfec70 -> Node0x5bfef60;
	Node0x5bfebe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%25:\l25:                                               \l  %26 = mul i64 %12, %1\l  %27 = mul i64 %14, %4\l  %28 = tail call float @llvm.fabs.f32(float %9)\l  %29 = fcmp oeq float %28, 0x7FF0000000000000\l  %30 = bitcast float %9 to i32\l  %31 = fcmp olt float %9, 0.000000e+00\l  %32 = fcmp oeq float %9, 0.000000e+00\l  %33 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %34 = getelementptr i8, i8 addrspace(4)* %33, i64 4\l  %35 = bitcast i8 addrspace(4)* %34 to i16 addrspace(4)*\l  %36 = load i16, i16 addrspace(4)* %35, align 4, !range !9, !invariant.load\l... !10\l  %37 = zext i16 %36 to i64\l  br i1 %29, label %217, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5bfebe0:s0 -> Node0x5bffcf0;
	Node0x5bfebe0:s1 -> Node0x5bffd80;
	Node0x5bffec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%38:\l38:                                               \l  %39 = phi float [ %246, %217 ], [ %214, %49 ]\l  store float %39, float addrspace(3)* %20, align 4, !tbaa !5\l  br label %40\l}"];
	Node0x5bffec0 -> Node0x5bfef60;
	Node0x5bfef60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%40:\l40:                                               \l  %41 = phi i8 addrspace(4)* [ %24, %23 ], [ %33, %38 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = getelementptr i8, i8 addrspace(4)* %41, i64 4\l  %43 = bitcast i8 addrspace(4)* %42 to i16 addrspace(4)*\l  %44 = load i16, i16 addrspace(4)* %43, align 4, !range !9, !invariant.load\l... !10\l  %45 = icmp ult i16 %44, 2\l  br i1 %45, label %249, label %46\l|{<s0>T|<s1>F}}"];
	Node0x5bfef60:s0 -> Node0x5c01990;
	Node0x5bfef60:s1 -> Node0x5c01a20;
	Node0x5c01a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%46:\l46:                                               \l  %47 = lshr i16 %44, 1\l  %48 = zext i16 %47 to i64\l  br label %251\l}"];
	Node0x5c01a20 -> Node0x5c01c90;
	Node0x5bffd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%49:\l49:                                               \l  %50 = phi float [ %214, %49 ], [ 0.000000e+00, %25 ]\l  %51 = phi i64 [ %215, %49 ], [ %21, %25 ]\l  %52 = add i64 %51, %26\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %55 = add i64 %51, %27\l  %56 = getelementptr inbounds float, float addrspace(1)* %3, i64 %55\l  %57 = load float, float addrspace(1)* %56, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %58 = fsub contract float %54, %57\l  %59 = tail call float @llvm.fabs.f32(float %58)\l  %60 = tail call float @llvm.amdgcn.frexp.mant.f32(float %59)\l  %61 = fcmp olt float %60, 0x3FE5555560000000\l  %62 = zext i1 %61 to i32\l  %63 = tail call float @llvm.amdgcn.ldexp.f32(float %60, i32 %62)\l  %64 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %59)\l  %65 = sub nsw i32 %64, %62\l  %66 = fadd float %63, -1.000000e+00\l  %67 = fadd float %63, 1.000000e+00\l  %68 = fadd float %67, -1.000000e+00\l  %69 = fsub float %63, %68\l  %70 = tail call float @llvm.amdgcn.rcp.f32(float %67)\l  %71 = fmul float %66, %70\l  %72 = fmul float %67, %71\l  %73 = fneg float %72\l  %74 = tail call float @llvm.fma.f32(float %71, float %67, float %73)\l  %75 = tail call float @llvm.fma.f32(float %71, float %69, float %74)\l  %76 = fadd float %72, %75\l  %77 = fsub float %76, %72\l  %78 = fsub float %75, %77\l  %79 = fsub float %66, %76\l  %80 = fsub float %66, %79\l  %81 = fsub float %80, %76\l  %82 = fsub float %81, %78\l  %83 = fadd float %79, %82\l  %84 = fmul float %70, %83\l  %85 = fadd float %71, %84\l  %86 = fsub float %85, %71\l  %87 = fsub float %84, %86\l  %88 = fmul float %85, %85\l  %89 = fneg float %88\l  %90 = tail call float @llvm.fma.f32(float %85, float %85, float %89)\l  %91 = fmul float %87, 2.000000e+00\l  %92 = tail call float @llvm.fma.f32(float %85, float %91, float %90)\l  %93 = fadd float %88, %92\l  %94 = fsub float %93, %88\l  %95 = fsub float %92, %94\l  %96 = tail call float @llvm.fmuladd.f32(float %93, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %97 = tail call float @llvm.fmuladd.f32(float %93, float %96, float\l... 0x3FD999BDE0000000)\l  %98 = sitofp i32 %65 to float\l  %99 = fmul float %98, 0x3FE62E4300000000\l  %100 = fneg float %99\l  %101 = tail call float @llvm.fma.f32(float %98, float 0x3FE62E4300000000,\l... float %100)\l  %102 = tail call float @llvm.fma.f32(float %98, float 0xBE205C6100000000,\l... float %101)\l  %103 = fadd float %99, %102\l  %104 = fsub float %103, %99\l  %105 = fsub float %102, %104\l  %106 = tail call float @llvm.amdgcn.ldexp.f32(float %85, i32 1)\l  %107 = fmul float %85, %93\l  %108 = fneg float %107\l  %109 = tail call float @llvm.fma.f32(float %93, float %85, float %108)\l  %110 = tail call float @llvm.fma.f32(float %93, float %87, float %109)\l  %111 = tail call float @llvm.fma.f32(float %95, float %85, float %110)\l  %112 = fadd float %107, %111\l  %113 = fsub float %112, %107\l  %114 = fsub float %111, %113\l  %115 = fmul float %93, %97\l  %116 = fneg float %115\l  %117 = tail call float @llvm.fma.f32(float %93, float %97, float %116)\l  %118 = tail call float @llvm.fma.f32(float %95, float %97, float %117)\l  %119 = fadd float %115, %118\l  %120 = fsub float %119, %115\l  %121 = fsub float %118, %120\l  %122 = fadd float %119, 0x3FE5555540000000\l  %123 = fadd float %122, 0xBFE5555540000000\l  %124 = fsub float %119, %123\l  %125 = fadd float %121, 0x3E2E720200000000\l  %126 = fadd float %125, %124\l  %127 = fadd float %122, %126\l  %128 = fsub float %127, %122\l  %129 = fsub float %126, %128\l  %130 = fmul float %112, %127\l  %131 = fneg float %130\l  %132 = tail call float @llvm.fma.f32(float %112, float %127, float %131)\l  %133 = tail call float @llvm.fma.f32(float %112, float %129, float %132)\l  %134 = tail call float @llvm.fma.f32(float %114, float %127, float %133)\l  %135 = tail call float @llvm.amdgcn.ldexp.f32(float %87, i32 1)\l  %136 = fadd float %130, %134\l  %137 = fsub float %136, %130\l  %138 = fsub float %134, %137\l  %139 = fadd float %106, %136\l  %140 = fsub float %139, %106\l  %141 = fsub float %136, %140\l  %142 = fadd float %135, %138\l  %143 = fadd float %142, %141\l  %144 = fadd float %139, %143\l  %145 = fsub float %144, %139\l  %146 = fsub float %143, %145\l  %147 = fadd float %103, %144\l  %148 = fsub float %147, %103\l  %149 = fsub float %147, %148\l  %150 = fsub float %103, %149\l  %151 = fsub float %144, %148\l  %152 = fadd float %151, %150\l  %153 = fadd float %105, %146\l  %154 = fsub float %153, %105\l  %155 = fsub float %153, %154\l  %156 = fsub float %105, %155\l  %157 = fsub float %146, %154\l  %158 = fadd float %157, %156\l  %159 = fadd float %153, %152\l  %160 = fadd float %147, %159\l  %161 = fsub float %160, %147\l  %162 = fsub float %159, %161\l  %163 = fadd float %158, %162\l  %164 = fadd float %160, %163\l  %165 = fsub float %164, %160\l  %166 = fsub float %163, %165\l  %167 = fmul float %164, %9\l  %168 = fneg float %167\l  %169 = tail call float @llvm.fma.f32(float %9, float %164, float %168)\l  %170 = tail call float @llvm.fma.f32(float %9, float %166, float %169)\l  %171 = fadd float %167, %170\l  %172 = fsub float %171, %167\l  %173 = fsub float %170, %172\l  %174 = tail call float @llvm.fabs.f32(float %167) #4\l  %175 = fcmp oeq float %174, 0x7FF0000000000000\l  %176 = select i1 %175, float %167, float %171\l  %177 = tail call float @llvm.fabs.f32(float %176) #4\l  %178 = fcmp oeq float %177, 0x7FF0000000000000\l  %179 = select i1 %178, float 0.000000e+00, float %173\l  %180 = fcmp oeq float %176, 0x40562E4300000000\l  %181 = select i1 %180, float 0x3EE0000000000000, float 0.000000e+00\l  %182 = fsub float %176, %181\l  %183 = fadd float %181, %179\l  %184 = fmul float %182, 0x3FF7154760000000\l  %185 = tail call float @llvm.rint.f32(float %184)\l  %186 = fcmp ogt float %182, 0x40562E4300000000\l  %187 = fcmp olt float %182, 0xC059D1DA00000000\l  %188 = fneg float %184\l  %189 = tail call float @llvm.fma.f32(float %182, float 0x3FF7154760000000,\l... float %188)\l  %190 = tail call float @llvm.fma.f32(float %182, float 0x3E54AE0BE0000000,\l... float %189)\l  %191 = fsub float %184, %185\l  %192 = fadd float %190, %191\l  %193 = tail call float @llvm.exp2.f32(float %192)\l  %194 = fptosi float %185 to i32\l  %195 = tail call float @llvm.amdgcn.ldexp.f32(float %193, i32 %194)\l  %196 = select i1 %187, float 0.000000e+00, float %195\l  %197 = select i1 %186, float 0x7FF0000000000000, float %196\l  %198 = tail call float @llvm.fma.f32(float %197, float %183, float %197)\l  %199 = tail call float @llvm.fabs.f32(float %197) #4\l  %200 = fcmp oeq float %199, 0x7FF0000000000000\l  %201 = select i1 %200, float %197, float %198\l  %202 = tail call float @llvm.fabs.f32(float %201)\l  %203 = fcmp oeq float %59, 0x7FF0000000000000\l  %204 = fcmp oeq float %58, 0.000000e+00\l  %205 = or i1 %204, %203\l  %206 = xor i1 %31, %204\l  %207 = select i1 %206, float 0.000000e+00, float 0x7FF0000000000000\l  %208 = select i1 %205, float %207, float %202\l  %209 = fcmp uno float %59, %9\l  %210 = select i1 %209, float 0x7FF8000000000000, float %208\l  %211 = fcmp oeq float %59, 1.000000e+00\l  %212 = or i1 %32, %211\l  %213 = select i1 %212, float 1.000000e+00, float %210\l  %214 = fadd contract float %50, %213\l  %215 = add i64 %51, %37\l  %216 = icmp ult i64 %215, %6\l  br i1 %216, label %49, label %38, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bffd80:s0 -> Node0x5bffd80;
	Node0x5bffd80:s1 -> Node0x5bffec0;
	Node0x5bffcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%217:\l217:                                              \l  %218 = phi float [ %246, %217 ], [ 0.000000e+00, %25 ]\l  %219 = phi i64 [ %247, %217 ], [ %21, %25 ]\l  %220 = add i64 %219, %26\l  %221 = getelementptr inbounds float, float addrspace(1)* %0, i64 %220\l  %222 = load float, float addrspace(1)* %221, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %223 = add i64 %219, %27\l  %224 = getelementptr inbounds float, float addrspace(1)* %3, i64 %223\l  %225 = load float, float addrspace(1)* %224, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %226 = fsub contract float %222, %225\l  %227 = tail call float @llvm.fabs.f32(float %226)\l  %228 = fcmp oeq float %227, 1.000000e+00\l  %229 = fadd float %227, -1.000000e+00\l  %230 = bitcast float %229 to i32\l  %231 = xor i32 %230, %30\l  %232 = icmp sgt i32 %231, -1\l  %233 = select i1 %232, float 0x7FF0000000000000, float 0.000000e+00\l  %234 = select i1 %228, float %227, float %233\l  %235 = fcmp oeq float %227, 0x7FF0000000000000\l  %236 = fcmp oeq float %226, 0.000000e+00\l  %237 = or i1 %236, %235\l  %238 = xor i1 %31, %236\l  %239 = select i1 %238, float 0.000000e+00, float 0x7FF0000000000000\l  %240 = select i1 %237, float %239, float %234\l  %241 = fcmp uno float %227, %9\l  %242 = select i1 %241, float 0x7FF8000000000000, float %240\l  %243 = fcmp oeq float %227, 1.000000e+00\l  %244 = or i1 %32, %243\l  %245 = select i1 %244, float 1.000000e+00, float %242\l  %246 = fadd contract float %218, %245\l  %247 = add i64 %219, %37\l  %248 = icmp ult i64 %247, %6\l  br i1 %248, label %217, label %38, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5bffcf0:s0 -> Node0x5bffcf0;
	Node0x5bffcf0:s1 -> Node0x5bffec0;
	Node0x5c01990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%249:\l249:                                              \l  %250 = icmp eq i32 %19, 0\l  br i1 %250, label %264, label %461\l|{<s0>T|<s1>F}}"];
	Node0x5c01990:s0 -> Node0x5c0bff0;
	Node0x5c01990:s1 -> Node0x5bfcee0;
	Node0x5c01c90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%251:\l251:                                              \l  %252 = phi i64 [ %262, %261 ], [ %48, %46 ]\l  %253 = icmp ugt i64 %252, %21\l  br i1 %253, label %254, label %261\l|{<s0>T|<s1>F}}"];
	Node0x5c01c90:s0 -> Node0x5c0c280;
	Node0x5c01c90:s1 -> Node0x5c0c0f0;
	Node0x5c0c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%254:\l254:                                              \l  %255 = trunc i64 %252 to i32\l  %256 = add nuw nsw i32 %19, %255\l  %257 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ16minkowski_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %256\l  %258 = load float, float addrspace(3)* %257, align 4, !tbaa !5\l  %259 = load float, float addrspace(3)* %20, align 4, !tbaa !5\l  %260 = fadd contract float %258, %259\l  store float %260, float addrspace(3)* %20, align 4, !tbaa !5\l  br label %261\l}"];
	Node0x5c0c280 -> Node0x5c0c0f0;
	Node0x5c0c0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%261:\l261:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %262 = lshr i64 %252, 1\l  %263 = icmp ult i64 %252, 2\l  br i1 %263, label %249, label %251, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5c0c0f0:s0 -> Node0x5c01990;
	Node0x5c0c0f0:s1 -> Node0x5c01c90;
	Node0x5c0bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%264:\l264:                                              \l  %265 = fdiv contract float 1.000000e+00, %9\l  %266 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ16minkowski_kernelPKfmmS0_mmmPfmfE4temp, i32\l... 0, i32 0), align 16, !tbaa !5\l  %267 = tail call float @llvm.fabs.f32(float %266)\l  %268 = tail call float @llvm.amdgcn.frexp.mant.f32(float %267)\l  %269 = fcmp olt float %268, 0x3FE5555560000000\l  %270 = zext i1 %269 to i32\l  %271 = tail call float @llvm.amdgcn.ldexp.f32(float %268, i32 %270)\l  %272 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %267)\l  %273 = sub nsw i32 %272, %270\l  %274 = fadd float %271, -1.000000e+00\l  %275 = fadd float %271, 1.000000e+00\l  %276 = fadd float %275, -1.000000e+00\l  %277 = fsub float %271, %276\l  %278 = tail call float @llvm.amdgcn.rcp.f32(float %275)\l  %279 = fmul float %274, %278\l  %280 = fmul float %275, %279\l  %281 = fneg float %280\l  %282 = tail call float @llvm.fma.f32(float %279, float %275, float %281)\l  %283 = tail call float @llvm.fma.f32(float %279, float %277, float %282)\l  %284 = fadd float %280, %283\l  %285 = fsub float %284, %280\l  %286 = fsub float %283, %285\l  %287 = fsub float %274, %284\l  %288 = fsub float %274, %287\l  %289 = fsub float %288, %284\l  %290 = fsub float %289, %286\l  %291 = fadd float %287, %290\l  %292 = fmul float %278, %291\l  %293 = fadd float %279, %292\l  %294 = fsub float %293, %279\l  %295 = fsub float %292, %294\l  %296 = fmul float %293, %293\l  %297 = fneg float %296\l  %298 = tail call float @llvm.fma.f32(float %293, float %293, float %297)\l  %299 = fmul float %295, 2.000000e+00\l  %300 = tail call float @llvm.fma.f32(float %293, float %299, float %298)\l  %301 = fadd float %296, %300\l  %302 = fsub float %301, %296\l  %303 = fsub float %300, %302\l  %304 = tail call float @llvm.fmuladd.f32(float %301, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %305 = tail call float @llvm.fmuladd.f32(float %301, float %304, float\l... 0x3FD999BDE0000000)\l  %306 = sitofp i32 %273 to float\l  %307 = fmul float %306, 0x3FE62E4300000000\l  %308 = fneg float %307\l  %309 = tail call float @llvm.fma.f32(float %306, float 0x3FE62E4300000000,\l... float %308)\l  %310 = tail call float @llvm.fma.f32(float %306, float 0xBE205C6100000000,\l... float %309)\l  %311 = fadd float %307, %310\l  %312 = fsub float %311, %307\l  %313 = fsub float %310, %312\l  %314 = tail call float @llvm.amdgcn.ldexp.f32(float %293, i32 1)\l  %315 = fmul float %293, %301\l  %316 = fneg float %315\l  %317 = tail call float @llvm.fma.f32(float %301, float %293, float %316)\l  %318 = tail call float @llvm.fma.f32(float %301, float %295, float %317)\l  %319 = tail call float @llvm.fma.f32(float %303, float %293, float %318)\l  %320 = fadd float %315, %319\l  %321 = fsub float %320, %315\l  %322 = fsub float %319, %321\l  %323 = fmul float %301, %305\l  %324 = fneg float %323\l  %325 = tail call float @llvm.fma.f32(float %301, float %305, float %324)\l  %326 = tail call float @llvm.fma.f32(float %303, float %305, float %325)\l  %327 = fadd float %323, %326\l  %328 = fsub float %327, %323\l  %329 = fsub float %326, %328\l  %330 = fadd float %327, 0x3FE5555540000000\l  %331 = fadd float %330, 0xBFE5555540000000\l  %332 = fsub float %327, %331\l  %333 = fadd float %329, 0x3E2E720200000000\l  %334 = fadd float %333, %332\l  %335 = fadd float %330, %334\l  %336 = fsub float %335, %330\l  %337 = fsub float %334, %336\l  %338 = fmul float %320, %335\l  %339 = fneg float %338\l  %340 = tail call float @llvm.fma.f32(float %320, float %335, float %339)\l  %341 = tail call float @llvm.fma.f32(float %320, float %337, float %340)\l  %342 = tail call float @llvm.fma.f32(float %322, float %335, float %341)\l  %343 = tail call float @llvm.amdgcn.ldexp.f32(float %295, i32 1)\l  %344 = fadd float %338, %342\l  %345 = fsub float %344, %338\l  %346 = fsub float %342, %345\l  %347 = fadd float %314, %344\l  %348 = fsub float %347, %314\l  %349 = fsub float %344, %348\l  %350 = fadd float %343, %346\l  %351 = fadd float %350, %349\l  %352 = fadd float %347, %351\l  %353 = fsub float %352, %347\l  %354 = fsub float %351, %353\l  %355 = fadd float %311, %352\l  %356 = fsub float %355, %311\l  %357 = fsub float %355, %356\l  %358 = fsub float %311, %357\l  %359 = fsub float %352, %356\l  %360 = fadd float %359, %358\l  %361 = fadd float %313, %354\l  %362 = fsub float %361, %313\l  %363 = fsub float %361, %362\l  %364 = fsub float %313, %363\l  %365 = fsub float %354, %362\l  %366 = fadd float %365, %364\l  %367 = fadd float %361, %360\l  %368 = fadd float %355, %367\l  %369 = fsub float %368, %355\l  %370 = fsub float %367, %369\l  %371 = fadd float %366, %370\l  %372 = fadd float %368, %371\l  %373 = fsub float %372, %368\l  %374 = fsub float %371, %373\l  %375 = fmul float %265, %372\l  %376 = fneg float %375\l  %377 = tail call float @llvm.fma.f32(float %265, float %372, float %376)\l  %378 = tail call float @llvm.fma.f32(float %265, float %374, float %377)\l  %379 = fadd float %375, %378\l  %380 = fsub float %379, %375\l  %381 = fsub float %378, %380\l  %382 = tail call float @llvm.fabs.f32(float %375) #4\l  %383 = fcmp oeq float %382, 0x7FF0000000000000\l  %384 = select i1 %383, float %375, float %379\l  %385 = tail call float @llvm.fabs.f32(float %384) #4\l  %386 = fcmp oeq float %385, 0x7FF0000000000000\l  %387 = select i1 %386, float 0.000000e+00, float %381\l  %388 = fcmp oeq float %384, 0x40562E4300000000\l  %389 = select i1 %388, float 0x3EE0000000000000, float 0.000000e+00\l  %390 = fsub float %384, %389\l  %391 = fadd float %389, %387\l  %392 = fmul float %390, 0x3FF7154760000000\l  %393 = tail call float @llvm.rint.f32(float %392)\l  %394 = fcmp ogt float %390, 0x40562E4300000000\l  %395 = fcmp olt float %390, 0xC059D1DA00000000\l  %396 = fneg float %392\l  %397 = tail call float @llvm.fma.f32(float %390, float 0x3FF7154760000000,\l... float %396)\l  %398 = tail call float @llvm.fma.f32(float %390, float 0x3E54AE0BE0000000,\l... float %397)\l  %399 = fsub float %392, %393\l  %400 = fadd float %398, %399\l  %401 = tail call float @llvm.exp2.f32(float %400)\l  %402 = fptosi float %393 to i32\l  %403 = tail call float @llvm.amdgcn.ldexp.f32(float %401, i32 %402)\l  %404 = select i1 %395, float 0.000000e+00, float %403\l  %405 = select i1 %394, float 0x7FF0000000000000, float %404\l  %406 = tail call float @llvm.fma.f32(float %405, float %391, float %405)\l  %407 = tail call float @llvm.fabs.f32(float %405) #4\l  %408 = fcmp oeq float %407, 0x7FF0000000000000\l  %409 = select i1 %408, float %405, float %406\l  %410 = tail call float @llvm.fabs.f32(float %265)\l  %411 = tail call float @llvm.trunc.f32(float %410)\l  %412 = fcmp oeq float %410, %411\l  %413 = zext i1 %412 to i32\l  %414 = fmul float %411, 5.000000e-01\l  %415 = tail call float @llvm.amdgcn.fract.f32(float %414)\l  %416 = tail call i1 @llvm.amdgcn.class.f32(float %414, i32 516)\l  %417 = select i1 %416, float 0.000000e+00, float %415\l  %418 = fcmp oeq float %417, 0.000000e+00\l  %419 = and i1 %412, %418\l  %420 = zext i1 %419 to i32\l  %421 = add nuw nsw i32 %420, %413\l  %422 = icmp eq i32 %421, 1\l  %423 = fcmp olt float %266, 0.000000e+00\l  %424 = and i1 %422, %423\l  %425 = select i1 %424, float -0.000000e+00, float 0.000000e+00\l  %426 = tail call float @llvm.copysign.f32(float %409, float %425)\l  %427 = fcmp uge float %266, 0.000000e+00\l  %428 = icmp ne i32 %421, 0\l  %429 = select i1 %427, i1 true, i1 %428\l  %430 = select i1 %429, float %426, float 0x7FF8000000000000\l  %431 = fcmp oeq float %410, 0x7FF0000000000000\l  br i1 %431, label %432, label %441\l|{<s0>T|<s1>F}}"];
	Node0x5c0bff0:s0 -> Node0x5c14de0;
	Node0x5c0bff0:s1 -> Node0x5c14e70;
	Node0x5c14de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%432:\l432:                                              \l  %433 = fcmp oeq float %267, 1.000000e+00\l  %434 = fadd float %267, -1.000000e+00\l  %435 = bitcast float %265 to i32\l  %436 = bitcast float %434 to i32\l  %437 = xor i32 %436, %435\l  %438 = icmp sgt i32 %437, -1\l  %439 = select i1 %438, float 0x7FF0000000000000, float 0.000000e+00\l  %440 = select i1 %433, float %267, float %439\l  br label %441\l}"];
	Node0x5c14de0 -> Node0x5c14e70;
	Node0x5c14e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%441:\l441:                                              \l  %442 = phi float [ %430, %264 ], [ %440, %432 ]\l  %443 = fcmp oeq float %267, 0x7FF0000000000000\l  %444 = fcmp oeq float %266, 0.000000e+00\l  %445 = or i1 %444, %443\l  %446 = fcmp olt float %265, 0.000000e+00\l  %447 = xor i1 %446, %444\l  %448 = select i1 %447, float 0.000000e+00, float 0x7FF0000000000000\l  %449 = select i1 %422, float %266, float 0.000000e+00\l  %450 = tail call float @llvm.copysign.f32(float %448, float %449)\l  %451 = select i1 %445, float %450, float %442\l  %452 = fcmp uno float %266, %265\l  %453 = select i1 %452, float 0x7FF8000000000000, float %451\l  %454 = fcmp oeq float %266, 1.000000e+00\l  %455 = fcmp oeq float %265, 0.000000e+00\l  %456 = or i1 %455, %454\l  %457 = select i1 %456, float 1.000000e+00, float %453\l  %458 = mul i64 %14, %8\l  %459 = add i64 %458, %12\l  %460 = getelementptr inbounds float, float addrspace(1)* %7, i64 %459\l  store float %457, float addrspace(1)* %460, align 4, !tbaa !5\l  br label %461\l}"];
	Node0x5c14e70 -> Node0x5bfcee0;
	Node0x5bfcee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%461:\l461:                                              \l  ret void\l}"];
}
