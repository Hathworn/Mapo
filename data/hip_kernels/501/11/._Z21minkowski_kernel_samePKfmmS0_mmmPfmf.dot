digraph "CFG for '_Z21minkowski_kernel_samePKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z21minkowski_kernel_samePKfmmS0_mmmPfmf' function";

	Node0x5cd3a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp eq i32 %11, %13\l  %16 = icmp ult i64 %12, %2\l  %17 = select i1 %15, i1 %16, i1 false\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %19 = icmp eq i32 %18, 0\l  %20 = select i1 %17, i1 %19, i1 false\l  br i1 %20, label %21, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5cd3a40:s0 -> Node0x5cd5240;
	Node0x5cd3a40:s1 -> Node0x5cd52d0;
	Node0x5cd5240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%21:\l21:                                               \l  %22 = mul i64 %14, %8\l  %23 = add i64 %22, %12\l  %24 = getelementptr inbounds float, float addrspace(1)* %7, i64 %23\l  store float 0.000000e+00, float addrspace(1)* %24, align 4, !tbaa !4\l  br label %25\l}"];
	Node0x5cd5240 -> Node0x5cd52d0;
	Node0x5cd52d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%25:\l25:                                               \l  %26 = icmp ult i64 %14, %2\l  %27 = icmp ult i32 %11, %13\l  %28 = select i1 %26, i1 %27, i1 false\l  br i1 %28, label %29, label %473\l|{<s0>T|<s1>F}}"];
	Node0x5cd52d0:s0 -> Node0x5cd6e60;
	Node0x5cd52d0:s1 -> Node0x5cd6eb0;
	Node0x5cd6e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%29:\l29:                                               \l  %30 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ21minkowski_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %18\l  store float 0.000000e+00, float addrspace(3)* %30, align 4, !tbaa !4\l  %31 = zext i32 %18 to i64\l  %32 = icmp ult i64 %31, %6\l  br i1 %32, label %35, label %33\l|{<s0>T|<s1>F}}"];
	Node0x5cd6e60:s0 -> Node0x5cd7040;
	Node0x5cd6e60:s1 -> Node0x5cd4730;
	Node0x5cd4730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%33:\l33:                                               \l  %34 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %50\l}"];
	Node0x5cd4730 -> Node0x5cd7d20;
	Node0x5cd7040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%35:\l35:                                               \l  %36 = mul i64 %12, %1\l  %37 = mul i64 %14, %1\l  %38 = tail call float @llvm.fabs.f32(float %9)\l  %39 = fcmp oeq float %38, 0x7FF0000000000000\l  %40 = bitcast float %9 to i32\l  %41 = fcmp olt float %9, 0.000000e+00\l  %42 = fcmp oeq float %9, 0.000000e+00\l  %43 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %44 = getelementptr i8, i8 addrspace(4)* %43, i64 4\l  %45 = bitcast i8 addrspace(4)* %44 to i16 addrspace(4)*\l  %46 = load i16, i16 addrspace(4)* %45, align 4, !range !8, !invariant.load !9\l  %47 = zext i16 %46 to i64\l  br i1 %39, label %227, label %59\l|{<s0>T|<s1>F}}"];
	Node0x5cd7040:s0 -> Node0x5cd8940;
	Node0x5cd7040:s1 -> Node0x5cd89d0;
	Node0x5cd8b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%48:\l48:                                               \l  %49 = phi float [ %256, %227 ], [ %224, %59 ]\l  store float %49, float addrspace(3)* %30, align 4, !tbaa !4\l  br label %50\l}"];
	Node0x5cd8b10 -> Node0x5cd7d20;
	Node0x5cd7d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = phi i8 addrspace(4)* [ %34, %33 ], [ %43, %48 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %52 = getelementptr i8, i8 addrspace(4)* %51, i64 4\l  %53 = bitcast i8 addrspace(4)* %52 to i16 addrspace(4)*\l  %54 = load i16, i16 addrspace(4)* %53, align 4, !range !8, !invariant.load !9\l  %55 = icmp ult i16 %54, 2\l  br i1 %55, label %259, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5cd7d20:s0 -> Node0x5cd9fd0;
	Node0x5cd7d20:s1 -> Node0x5cda060;
	Node0x5cda060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%56:\l56:                                               \l  %57 = lshr i16 %54, 1\l  %58 = zext i16 %57 to i64\l  br label %260\l}"];
	Node0x5cda060 -> Node0x5cda2d0;
	Node0x5cd89d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%59:\l59:                                               \l  %60 = phi float [ %224, %59 ], [ 0.000000e+00, %35 ]\l  %61 = phi i64 [ %225, %59 ], [ %31, %35 ]\l  %62 = add i64 %61, %36\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !4\l  %65 = add i64 %61, %37\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !4\l  %68 = fsub contract float %64, %67\l  %69 = tail call float @llvm.fabs.f32(float %68)\l  %70 = tail call float @llvm.amdgcn.frexp.mant.f32(float %69)\l  %71 = fcmp olt float %70, 0x3FE5555560000000\l  %72 = zext i1 %71 to i32\l  %73 = tail call float @llvm.amdgcn.ldexp.f32(float %70, i32 %72)\l  %74 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %69)\l  %75 = sub nsw i32 %74, %72\l  %76 = fadd float %73, -1.000000e+00\l  %77 = fadd float %73, 1.000000e+00\l  %78 = fadd float %77, -1.000000e+00\l  %79 = fsub float %73, %78\l  %80 = tail call float @llvm.amdgcn.rcp.f32(float %77)\l  %81 = fmul float %76, %80\l  %82 = fmul float %77, %81\l  %83 = fneg float %82\l  %84 = tail call float @llvm.fma.f32(float %81, float %77, float %83)\l  %85 = tail call float @llvm.fma.f32(float %81, float %79, float %84)\l  %86 = fadd float %82, %85\l  %87 = fsub float %86, %82\l  %88 = fsub float %85, %87\l  %89 = fsub float %76, %86\l  %90 = fsub float %76, %89\l  %91 = fsub float %90, %86\l  %92 = fsub float %91, %88\l  %93 = fadd float %89, %92\l  %94 = fmul float %80, %93\l  %95 = fadd float %81, %94\l  %96 = fsub float %95, %81\l  %97 = fsub float %94, %96\l  %98 = fmul float %95, %95\l  %99 = fneg float %98\l  %100 = tail call float @llvm.fma.f32(float %95, float %95, float %99)\l  %101 = fmul float %97, 2.000000e+00\l  %102 = tail call float @llvm.fma.f32(float %95, float %101, float %100)\l  %103 = fadd float %98, %102\l  %104 = fsub float %103, %98\l  %105 = fsub float %102, %104\l  %106 = tail call float @llvm.fmuladd.f32(float %103, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %107 = tail call float @llvm.fmuladd.f32(float %103, float %106, float\l... 0x3FD999BDE0000000)\l  %108 = sitofp i32 %75 to float\l  %109 = fmul float %108, 0x3FE62E4300000000\l  %110 = fneg float %109\l  %111 = tail call float @llvm.fma.f32(float %108, float 0x3FE62E4300000000,\l... float %110)\l  %112 = tail call float @llvm.fma.f32(float %108, float 0xBE205C6100000000,\l... float %111)\l  %113 = fadd float %109, %112\l  %114 = fsub float %113, %109\l  %115 = fsub float %112, %114\l  %116 = tail call float @llvm.amdgcn.ldexp.f32(float %95, i32 1)\l  %117 = fmul float %95, %103\l  %118 = fneg float %117\l  %119 = tail call float @llvm.fma.f32(float %103, float %95, float %118)\l  %120 = tail call float @llvm.fma.f32(float %103, float %97, float %119)\l  %121 = tail call float @llvm.fma.f32(float %105, float %95, float %120)\l  %122 = fadd float %117, %121\l  %123 = fsub float %122, %117\l  %124 = fsub float %121, %123\l  %125 = fmul float %103, %107\l  %126 = fneg float %125\l  %127 = tail call float @llvm.fma.f32(float %103, float %107, float %126)\l  %128 = tail call float @llvm.fma.f32(float %105, float %107, float %127)\l  %129 = fadd float %125, %128\l  %130 = fsub float %129, %125\l  %131 = fsub float %128, %130\l  %132 = fadd float %129, 0x3FE5555540000000\l  %133 = fadd float %132, 0xBFE5555540000000\l  %134 = fsub float %129, %133\l  %135 = fadd float %131, 0x3E2E720200000000\l  %136 = fadd float %135, %134\l  %137 = fadd float %132, %136\l  %138 = fsub float %137, %132\l  %139 = fsub float %136, %138\l  %140 = fmul float %122, %137\l  %141 = fneg float %140\l  %142 = tail call float @llvm.fma.f32(float %122, float %137, float %141)\l  %143 = tail call float @llvm.fma.f32(float %122, float %139, float %142)\l  %144 = tail call float @llvm.fma.f32(float %124, float %137, float %143)\l  %145 = tail call float @llvm.amdgcn.ldexp.f32(float %97, i32 1)\l  %146 = fadd float %140, %144\l  %147 = fsub float %146, %140\l  %148 = fsub float %144, %147\l  %149 = fadd float %116, %146\l  %150 = fsub float %149, %116\l  %151 = fsub float %146, %150\l  %152 = fadd float %145, %148\l  %153 = fadd float %152, %151\l  %154 = fadd float %149, %153\l  %155 = fsub float %154, %149\l  %156 = fsub float %153, %155\l  %157 = fadd float %113, %154\l  %158 = fsub float %157, %113\l  %159 = fsub float %157, %158\l  %160 = fsub float %113, %159\l  %161 = fsub float %154, %158\l  %162 = fadd float %161, %160\l  %163 = fadd float %115, %156\l  %164 = fsub float %163, %115\l  %165 = fsub float %163, %164\l  %166 = fsub float %115, %165\l  %167 = fsub float %156, %164\l  %168 = fadd float %167, %166\l  %169 = fadd float %163, %162\l  %170 = fadd float %157, %169\l  %171 = fsub float %170, %157\l  %172 = fsub float %169, %171\l  %173 = fadd float %168, %172\l  %174 = fadd float %170, %173\l  %175 = fsub float %174, %170\l  %176 = fsub float %173, %175\l  %177 = fmul float %174, %9\l  %178 = fneg float %177\l  %179 = tail call float @llvm.fma.f32(float %9, float %174, float %178)\l  %180 = tail call float @llvm.fma.f32(float %9, float %176, float %179)\l  %181 = fadd float %177, %180\l  %182 = fsub float %181, %177\l  %183 = fsub float %180, %182\l  %184 = tail call float @llvm.fabs.f32(float %177) #4\l  %185 = fcmp oeq float %184, 0x7FF0000000000000\l  %186 = select i1 %185, float %177, float %181\l  %187 = tail call float @llvm.fabs.f32(float %186) #4\l  %188 = fcmp oeq float %187, 0x7FF0000000000000\l  %189 = select i1 %188, float 0.000000e+00, float %183\l  %190 = fcmp oeq float %186, 0x40562E4300000000\l  %191 = select i1 %190, float 0x3EE0000000000000, float 0.000000e+00\l  %192 = fsub float %186, %191\l  %193 = fadd float %191, %189\l  %194 = fmul float %192, 0x3FF7154760000000\l  %195 = tail call float @llvm.rint.f32(float %194)\l  %196 = fcmp ogt float %192, 0x40562E4300000000\l  %197 = fcmp olt float %192, 0xC059D1DA00000000\l  %198 = fneg float %194\l  %199 = tail call float @llvm.fma.f32(float %192, float 0x3FF7154760000000,\l... float %198)\l  %200 = tail call float @llvm.fma.f32(float %192, float 0x3E54AE0BE0000000,\l... float %199)\l  %201 = fsub float %194, %195\l  %202 = fadd float %200, %201\l  %203 = tail call float @llvm.exp2.f32(float %202)\l  %204 = fptosi float %195 to i32\l  %205 = tail call float @llvm.amdgcn.ldexp.f32(float %203, i32 %204)\l  %206 = select i1 %197, float 0.000000e+00, float %205\l  %207 = select i1 %196, float 0x7FF0000000000000, float %206\l  %208 = tail call float @llvm.fma.f32(float %207, float %193, float %207)\l  %209 = tail call float @llvm.fabs.f32(float %207) #4\l  %210 = fcmp oeq float %209, 0x7FF0000000000000\l  %211 = select i1 %210, float %207, float %208\l  %212 = tail call float @llvm.fabs.f32(float %211)\l  %213 = fcmp oeq float %69, 0x7FF0000000000000\l  %214 = fcmp oeq float %68, 0.000000e+00\l  %215 = or i1 %214, %213\l  %216 = xor i1 %41, %214\l  %217 = select i1 %216, float 0.000000e+00, float 0x7FF0000000000000\l  %218 = select i1 %215, float %217, float %212\l  %219 = fcmp uno float %69, %9\l  %220 = select i1 %219, float 0x7FF8000000000000, float %218\l  %221 = fcmp oeq float %69, 1.000000e+00\l  %222 = or i1 %42, %221\l  %223 = select i1 %222, float 1.000000e+00, float %220\l  %224 = fadd contract float %60, %223\l  %225 = add i64 %61, %47\l  %226 = icmp ult i64 %225, %6\l  br i1 %226, label %59, label %48, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5cd89d0:s0 -> Node0x5cd89d0;
	Node0x5cd89d0:s1 -> Node0x5cd8b10;
	Node0x5cd8940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%227:\l227:                                              \l  %228 = phi float [ %256, %227 ], [ 0.000000e+00, %35 ]\l  %229 = phi i64 [ %257, %227 ], [ %31, %35 ]\l  %230 = add i64 %229, %36\l  %231 = getelementptr inbounds float, float addrspace(1)* %0, i64 %230\l  %232 = load float, float addrspace(1)* %231, align 4, !tbaa !4\l  %233 = add i64 %229, %37\l  %234 = getelementptr inbounds float, float addrspace(1)* %0, i64 %233\l  %235 = load float, float addrspace(1)* %234, align 4, !tbaa !4\l  %236 = fsub contract float %232, %235\l  %237 = tail call float @llvm.fabs.f32(float %236)\l  %238 = fcmp oeq float %237, 1.000000e+00\l  %239 = fadd float %237, -1.000000e+00\l  %240 = bitcast float %239 to i32\l  %241 = xor i32 %240, %40\l  %242 = icmp sgt i32 %241, -1\l  %243 = select i1 %242, float 0x7FF0000000000000, float 0.000000e+00\l  %244 = select i1 %238, float %237, float %243\l  %245 = fcmp oeq float %237, 0x7FF0000000000000\l  %246 = fcmp oeq float %236, 0.000000e+00\l  %247 = or i1 %246, %245\l  %248 = xor i1 %41, %246\l  %249 = select i1 %248, float 0.000000e+00, float 0x7FF0000000000000\l  %250 = select i1 %247, float %249, float %244\l  %251 = fcmp uno float %237, %9\l  %252 = select i1 %251, float 0x7FF8000000000000, float %250\l  %253 = fcmp oeq float %237, 1.000000e+00\l  %254 = or i1 %42, %253\l  %255 = select i1 %254, float 1.000000e+00, float %252\l  %256 = fadd contract float %228, %255\l  %257 = add i64 %229, %47\l  %258 = icmp ult i64 %257, %6\l  br i1 %258, label %227, label %48, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5cd8940:s0 -> Node0x5cd8940;
	Node0x5cd8940:s1 -> Node0x5cd8b10;
	Node0x5cd9fd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%259:\l259:                                              \l  br i1 %19, label %273, label %473\l|{<s0>T|<s1>F}}"];
	Node0x5cd9fd0:s0 -> Node0x5ce4c80;
	Node0x5cd9fd0:s1 -> Node0x5cd6eb0;
	Node0x5cda2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%260:\l260:                                              \l  %261 = phi i64 [ %271, %270 ], [ %58, %56 ]\l  %262 = icmp ugt i64 %261, %31\l  br i1 %262, label %263, label %270\l|{<s0>T|<s1>F}}"];
	Node0x5cda2d0:s0 -> Node0x5ce4f10;
	Node0x5cda2d0:s1 -> Node0x5ce4d80;
	Node0x5ce4f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%263:\l263:                                              \l  %264 = trunc i64 %261 to i32\l  %265 = add nuw nsw i32 %18, %264\l  %266 = getelementptr inbounds [32 x float], [32 x float] addrspace(3)*\l... @_ZZ21minkowski_kernel_samePKfmmS0_mmmPfmfE4temp, i32 0, i32 %265\l  %267 = load float, float addrspace(3)* %266, align 4, !tbaa !4\l  %268 = load float, float addrspace(3)* %30, align 4, !tbaa !4\l  %269 = fadd contract float %267, %268\l  store float %269, float addrspace(3)* %30, align 4, !tbaa !4\l  br label %270\l}"];
	Node0x5ce4f10 -> Node0x5ce4d80;
	Node0x5ce4d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%270:\l270:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %271 = lshr i64 %261, 1\l  %272 = icmp ult i64 %261, 2\l  br i1 %272, label %259, label %260, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5ce4d80:s0 -> Node0x5cd9fd0;
	Node0x5ce4d80:s1 -> Node0x5cda2d0;
	Node0x5ce4c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%273:\l273:                                              \l  %274 = fdiv contract float 1.000000e+00, %9\l  %275 = load float, float addrspace(3)* getelementptr inbounds ([32 x float],\l... [32 x float] addrspace(3)* @_ZZ21minkowski_kernel_samePKfmmS0_mmmPfmfE4temp,\l... i32 0, i32 0), align 16, !tbaa !4\l  %276 = tail call float @llvm.fabs.f32(float %275)\l  %277 = tail call float @llvm.amdgcn.frexp.mant.f32(float %276)\l  %278 = fcmp olt float %277, 0x3FE5555560000000\l  %279 = zext i1 %278 to i32\l  %280 = tail call float @llvm.amdgcn.ldexp.f32(float %277, i32 %279)\l  %281 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %276)\l  %282 = sub nsw i32 %281, %279\l  %283 = fadd float %280, -1.000000e+00\l  %284 = fadd float %280, 1.000000e+00\l  %285 = fadd float %284, -1.000000e+00\l  %286 = fsub float %280, %285\l  %287 = tail call float @llvm.amdgcn.rcp.f32(float %284)\l  %288 = fmul float %283, %287\l  %289 = fmul float %284, %288\l  %290 = fneg float %289\l  %291 = tail call float @llvm.fma.f32(float %288, float %284, float %290)\l  %292 = tail call float @llvm.fma.f32(float %288, float %286, float %291)\l  %293 = fadd float %289, %292\l  %294 = fsub float %293, %289\l  %295 = fsub float %292, %294\l  %296 = fsub float %283, %293\l  %297 = fsub float %283, %296\l  %298 = fsub float %297, %293\l  %299 = fsub float %298, %295\l  %300 = fadd float %296, %299\l  %301 = fmul float %287, %300\l  %302 = fadd float %288, %301\l  %303 = fsub float %302, %288\l  %304 = fsub float %301, %303\l  %305 = fmul float %302, %302\l  %306 = fneg float %305\l  %307 = tail call float @llvm.fma.f32(float %302, float %302, float %306)\l  %308 = fmul float %304, 2.000000e+00\l  %309 = tail call float @llvm.fma.f32(float %302, float %308, float %307)\l  %310 = fadd float %305, %309\l  %311 = fsub float %310, %305\l  %312 = fsub float %309, %311\l  %313 = tail call float @llvm.fmuladd.f32(float %310, float\l... 0x3FCED89C20000000, float 0x3FD23E9880000000)\l  %314 = tail call float @llvm.fmuladd.f32(float %310, float %313, float\l... 0x3FD999BDE0000000)\l  %315 = sitofp i32 %282 to float\l  %316 = fmul float %315, 0x3FE62E4300000000\l  %317 = fneg float %316\l  %318 = tail call float @llvm.fma.f32(float %315, float 0x3FE62E4300000000,\l... float %317)\l  %319 = tail call float @llvm.fma.f32(float %315, float 0xBE205C6100000000,\l... float %318)\l  %320 = fadd float %316, %319\l  %321 = fsub float %320, %316\l  %322 = fsub float %319, %321\l  %323 = tail call float @llvm.amdgcn.ldexp.f32(float %302, i32 1)\l  %324 = fmul float %302, %310\l  %325 = fneg float %324\l  %326 = tail call float @llvm.fma.f32(float %310, float %302, float %325)\l  %327 = tail call float @llvm.fma.f32(float %310, float %304, float %326)\l  %328 = tail call float @llvm.fma.f32(float %312, float %302, float %327)\l  %329 = fadd float %324, %328\l  %330 = fsub float %329, %324\l  %331 = fsub float %328, %330\l  %332 = fmul float %310, %314\l  %333 = fneg float %332\l  %334 = tail call float @llvm.fma.f32(float %310, float %314, float %333)\l  %335 = tail call float @llvm.fma.f32(float %312, float %314, float %334)\l  %336 = fadd float %332, %335\l  %337 = fsub float %336, %332\l  %338 = fsub float %335, %337\l  %339 = fadd float %336, 0x3FE5555540000000\l  %340 = fadd float %339, 0xBFE5555540000000\l  %341 = fsub float %336, %340\l  %342 = fadd float %338, 0x3E2E720200000000\l  %343 = fadd float %342, %341\l  %344 = fadd float %339, %343\l  %345 = fsub float %344, %339\l  %346 = fsub float %343, %345\l  %347 = fmul float %329, %344\l  %348 = fneg float %347\l  %349 = tail call float @llvm.fma.f32(float %329, float %344, float %348)\l  %350 = tail call float @llvm.fma.f32(float %329, float %346, float %349)\l  %351 = tail call float @llvm.fma.f32(float %331, float %344, float %350)\l  %352 = tail call float @llvm.amdgcn.ldexp.f32(float %304, i32 1)\l  %353 = fadd float %347, %351\l  %354 = fsub float %353, %347\l  %355 = fsub float %351, %354\l  %356 = fadd float %323, %353\l  %357 = fsub float %356, %323\l  %358 = fsub float %353, %357\l  %359 = fadd float %352, %355\l  %360 = fadd float %359, %358\l  %361 = fadd float %356, %360\l  %362 = fsub float %361, %356\l  %363 = fsub float %360, %362\l  %364 = fadd float %320, %361\l  %365 = fsub float %364, %320\l  %366 = fsub float %364, %365\l  %367 = fsub float %320, %366\l  %368 = fsub float %361, %365\l  %369 = fadd float %368, %367\l  %370 = fadd float %322, %363\l  %371 = fsub float %370, %322\l  %372 = fsub float %370, %371\l  %373 = fsub float %322, %372\l  %374 = fsub float %363, %371\l  %375 = fadd float %374, %373\l  %376 = fadd float %370, %369\l  %377 = fadd float %364, %376\l  %378 = fsub float %377, %364\l  %379 = fsub float %376, %378\l  %380 = fadd float %375, %379\l  %381 = fadd float %377, %380\l  %382 = fsub float %381, %377\l  %383 = fsub float %380, %382\l  %384 = fmul float %274, %381\l  %385 = fneg float %384\l  %386 = tail call float @llvm.fma.f32(float %274, float %381, float %385)\l  %387 = tail call float @llvm.fma.f32(float %274, float %383, float %386)\l  %388 = fadd float %384, %387\l  %389 = fsub float %388, %384\l  %390 = fsub float %387, %389\l  %391 = tail call float @llvm.fabs.f32(float %384) #4\l  %392 = fcmp oeq float %391, 0x7FF0000000000000\l  %393 = select i1 %392, float %384, float %388\l  %394 = tail call float @llvm.fabs.f32(float %393) #4\l  %395 = fcmp oeq float %394, 0x7FF0000000000000\l  %396 = select i1 %395, float 0.000000e+00, float %390\l  %397 = fcmp oeq float %393, 0x40562E4300000000\l  %398 = select i1 %397, float 0x3EE0000000000000, float 0.000000e+00\l  %399 = fsub float %393, %398\l  %400 = fadd float %398, %396\l  %401 = fmul float %399, 0x3FF7154760000000\l  %402 = tail call float @llvm.rint.f32(float %401)\l  %403 = fcmp ogt float %399, 0x40562E4300000000\l  %404 = fcmp olt float %399, 0xC059D1DA00000000\l  %405 = fneg float %401\l  %406 = tail call float @llvm.fma.f32(float %399, float 0x3FF7154760000000,\l... float %405)\l  %407 = tail call float @llvm.fma.f32(float %399, float 0x3E54AE0BE0000000,\l... float %406)\l  %408 = fsub float %401, %402\l  %409 = fadd float %407, %408\l  %410 = tail call float @llvm.exp2.f32(float %409)\l  %411 = fptosi float %402 to i32\l  %412 = tail call float @llvm.amdgcn.ldexp.f32(float %410, i32 %411)\l  %413 = select i1 %404, float 0.000000e+00, float %412\l  %414 = select i1 %403, float 0x7FF0000000000000, float %413\l  %415 = tail call float @llvm.fma.f32(float %414, float %400, float %414)\l  %416 = tail call float @llvm.fabs.f32(float %414) #4\l  %417 = fcmp oeq float %416, 0x7FF0000000000000\l  %418 = select i1 %417, float %414, float %415\l  %419 = tail call float @llvm.fabs.f32(float %274)\l  %420 = tail call float @llvm.trunc.f32(float %419)\l  %421 = fcmp oeq float %419, %420\l  %422 = zext i1 %421 to i32\l  %423 = fmul float %420, 5.000000e-01\l  %424 = tail call float @llvm.amdgcn.fract.f32(float %423)\l  %425 = tail call i1 @llvm.amdgcn.class.f32(float %423, i32 516)\l  %426 = select i1 %425, float 0.000000e+00, float %424\l  %427 = fcmp oeq float %426, 0.000000e+00\l  %428 = and i1 %421, %427\l  %429 = zext i1 %428 to i32\l  %430 = add nuw nsw i32 %429, %422\l  %431 = icmp eq i32 %430, 1\l  %432 = fcmp olt float %275, 0.000000e+00\l  %433 = and i1 %431, %432\l  %434 = select i1 %433, float -0.000000e+00, float 0.000000e+00\l  %435 = tail call float @llvm.copysign.f32(float %418, float %434)\l  %436 = fcmp uge float %275, 0.000000e+00\l  %437 = icmp ne i32 %430, 0\l  %438 = select i1 %436, i1 true, i1 %437\l  %439 = select i1 %438, float %435, float 0x7FF8000000000000\l  %440 = fcmp oeq float %419, 0x7FF0000000000000\l  br i1 %440, label %441, label %450\l|{<s0>T|<s1>F}}"];
	Node0x5ce4c80:s0 -> Node0x5ced2a0;
	Node0x5ce4c80:s1 -> Node0x5ced330;
	Node0x5ced2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%441:\l441:                                              \l  %442 = fcmp oeq float %276, 1.000000e+00\l  %443 = fadd float %276, -1.000000e+00\l  %444 = bitcast float %274 to i32\l  %445 = bitcast float %443 to i32\l  %446 = xor i32 %445, %444\l  %447 = icmp sgt i32 %446, -1\l  %448 = select i1 %447, float 0x7FF0000000000000, float 0.000000e+00\l  %449 = select i1 %442, float %276, float %448\l  br label %450\l}"];
	Node0x5ced2a0 -> Node0x5ced330;
	Node0x5ced330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%450:\l450:                                              \l  %451 = phi float [ %439, %273 ], [ %449, %441 ]\l  %452 = fcmp oeq float %276, 0x7FF0000000000000\l  %453 = fcmp oeq float %275, 0.000000e+00\l  %454 = or i1 %453, %452\l  %455 = fcmp olt float %274, 0.000000e+00\l  %456 = xor i1 %455, %453\l  %457 = select i1 %456, float 0.000000e+00, float 0x7FF0000000000000\l  %458 = select i1 %431, float %275, float 0.000000e+00\l  %459 = tail call float @llvm.copysign.f32(float %457, float %458)\l  %460 = select i1 %454, float %459, float %451\l  %461 = fcmp uno float %275, %274\l  %462 = select i1 %461, float 0x7FF8000000000000, float %460\l  %463 = fcmp oeq float %275, 1.000000e+00\l  %464 = fcmp oeq float %274, 0.000000e+00\l  %465 = or i1 %464, %463\l  %466 = select i1 %465, float 1.000000e+00, float %462\l  %467 = mul i64 %14, %8\l  %468 = add i64 %467, %12\l  %469 = getelementptr inbounds float, float addrspace(1)* %7, i64 %468\l  store float %466, float addrspace(1)* %469, align 4, !tbaa !4\l  %470 = mul i64 %12, %8\l  %471 = add i64 %470, %14\l  %472 = getelementptr inbounds float, float addrspace(1)* %7, i64 %471\l  store float %466, float addrspace(1)* %472, align 4, !tbaa !4\l  br label %473\l}"];
	Node0x5ced330 -> Node0x5cd6eb0;
	Node0x5cd6eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%473:\l473:                                              \l  ret void\l}"];
}
