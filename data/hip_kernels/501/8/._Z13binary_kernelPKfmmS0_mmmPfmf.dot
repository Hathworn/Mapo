digraph "CFG for '_Z13binary_kernelPKfmmS0_mmmPfmf' function" {
	label="CFG for '_Z13binary_kernelPKfmmS0_mmmPfmf' function";

	Node0x4c12ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = zext i32 %11 to i64\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = zext i32 %13 to i64\l  %15 = icmp ult i64 %12, %2\l  %16 = icmp ult i64 %14, %5\l  %17 = select i1 %15, i1 %16, i1 false\l  br i1 %17, label %18, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4c12ba0:s0 -> Node0x4c12870;
	Node0x4c12ba0:s1 -> Node0x4c14090;
	Node0x4c12870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%18:\l18:                                               \l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %20 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %19\l  store float 0.000000e+00, float addrspace(3)* %20, align 4, !tbaa !5\l  %21 = add nuw nsw i32 %19, 32\l  %22 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %21\l  store float 0.000000e+00, float addrspace(3)* %22, align 4, !tbaa !5\l  %23 = zext i32 %19 to i64\l  %24 = icmp ult i64 %23, %6\l  br i1 %24, label %27, label %25\l|{<s0>T|<s1>F}}"];
	Node0x4c12870:s0 -> Node0x4c15d20;
	Node0x4c12870:s1 -> Node0x4c16610;
	Node0x4c16610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%25:\l25:                                               \l  %26 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  br label %35\l}"];
	Node0x4c16610 -> Node0x4c16930;
	Node0x4c15d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%27:\l27:                                               \l  %28 = mul i64 %12, %1\l  %29 = mul i64 %14, %4\l  %30 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %31 = getelementptr i8, i8 addrspace(4)* %30, i64 4\l  %32 = bitcast i8 addrspace(4)* %31 to i16 addrspace(4)*\l  %33 = load i16, i16 addrspace(4)* %32, align 4, !range !9, !invariant.load\l... !10\l  %34 = zext i16 %33 to i64\l  br label %44\l}"];
	Node0x4c15d20 -> Node0x4c17260;
	Node0x4c16930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%35:\l35:                                               \l  %36 = phi i8 addrspace(4)* [ %26, %25 ], [ %30, %64 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = getelementptr i8, i8 addrspace(4)* %36, i64 4\l  %38 = bitcast i8 addrspace(4)* %37 to i16 addrspace(4)*\l  %39 = load i16, i16 addrspace(4)* %38, align 4, !range !9, !invariant.load\l... !10\l  %40 = icmp ult i16 %39, 2\l  br i1 %40, label %68, label %41\l|{<s0>T|<s1>F}}"];
	Node0x4c16930:s0 -> Node0x4c185a0;
	Node0x4c16930:s1 -> Node0x4c18630;
	Node0x4c18630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%41:\l41:                                               \l  %42 = lshr i16 %39, 1\l  %43 = zext i16 %42 to i64\l  br label %70\l}"];
	Node0x4c18630 -> Node0x4c188a0;
	Node0x4c17260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%44:\l44:                                               \l  %45 = phi float [ 0.000000e+00, %27 ], [ %65, %64 ]\l  %46 = phi float [ 0.000000e+00, %27 ], [ %60, %64 ]\l  %47 = phi i64 [ %23, %27 ], [ %66, %64 ]\l  %48 = add i64 %47, %28\l  %49 = getelementptr inbounds float, float addrspace(1)* %0, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %51 = fcmp contract une float %50, 0.000000e+00\l  %52 = add i64 %47, %29\l  %53 = getelementptr inbounds float, float addrspace(1)* %3, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !5,\l... !amdgpu.noclobber !10\l  %55 = fcmp contract une float %54, 0.000000e+00\l  %56 = xor i1 %51, %55\l  br i1 %56, label %57, label %59\l|{<s0>T|<s1>F}}"];
	Node0x4c17260:s0 -> Node0x4c19250;
	Node0x4c17260:s1 -> Node0x4c192e0;
	Node0x4c19250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%57:\l57:                                               \l  %58 = fadd contract float %46, 1.000000e+00\l  store float %58, float addrspace(3)* %20, align 4, !tbaa !5\l  br label %59\l}"];
	Node0x4c19250 -> Node0x4c192e0;
	Node0x4c192e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi float [ %58, %57 ], [ %46, %44 ]\l  %61 = select i1 %51, i1 true, i1 %55\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x4c192e0:s0 -> Node0x4c19710;
	Node0x4c192e0:s1 -> Node0x4c17360;
	Node0x4c19710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%62:\l62:                                               \l  %63 = fadd contract float %45, 1.000000e+00\l  store float %63, float addrspace(3)* %22, align 4, !tbaa !5\l  br label %64\l}"];
	Node0x4c19710 -> Node0x4c17360;
	Node0x4c17360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi float [ %45, %59 ], [ %63, %62 ]\l  %66 = add i64 %47, %34\l  %67 = icmp ult i64 %66, %6\l  br i1 %67, label %44, label %35, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c17360:s0 -> Node0x4c17260;
	Node0x4c17360:s1 -> Node0x4c16930;
	Node0x4c185a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%68:\l68:                                               \l  %69 = icmp eq i32 %19, 0\l  br i1 %69, label %88, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4c185a0:s0 -> Node0x4c19f70;
	Node0x4c185a0:s1 -> Node0x4c14090;
	Node0x4c188a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%70:\l70:                                               \l  %71 = phi i64 [ %86, %85 ], [ %43, %41 ]\l  %72 = icmp ugt i64 %71, %23\l  br i1 %72, label %73, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4c188a0:s0 -> Node0x4c1a200;
	Node0x4c188a0:s1 -> Node0x4c1a070;
	Node0x4c1a200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = trunc i64 %71 to i32\l  %75 = add nuw nsw i32 %19, %74\l  %76 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %75\l  %77 = load float, float addrspace(3)* %76, align 4, !tbaa !5\l  %78 = load float, float addrspace(3)* %20, align 4, !tbaa !5\l  %79 = fadd contract float %77, %78\l  store float %79, float addrspace(3)* %20, align 4, !tbaa !5\l  %80 = add nuw nsw i32 %75, 32\l  %81 = getelementptr inbounds [64 x float], [64 x float] addrspace(3)*\l... @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0, i32 %80\l  %82 = load float, float addrspace(3)* %81, align 4, !tbaa !5\l  %83 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %84 = fadd contract float %82, %83\l  store float %84, float addrspace(3)* %22, align 4, !tbaa !5\l  br label %85\l}"];
	Node0x4c1a200 -> Node0x4c1a070;
	Node0x4c1a070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%85:\l85:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %86 = lshr i64 %71, 1\l  %87 = icmp ult i64 %71, 2\l  br i1 %87, label %68, label %70, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c1a070:s0 -> Node0x4c185a0;
	Node0x4c1a070:s1 -> Node0x4c188a0;
	Node0x4c19f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%88:\l88:                                               \l  %89 = load float, float addrspace(3)* getelementptr inbounds ([64 x float],\l... [64 x float] addrspace(3)* @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0,\l... i32 0), align 16, !tbaa !5\l  %90 = load float, float addrspace(3)* getelementptr inbounds ([64 x float],\l... [64 x float] addrspace(3)* @_ZZ13binary_kernelPKfmmS0_mmmPfmfE4temp, i32 0,\l... i32 32), align 16, !tbaa !5\l  %91 = fcmp contract une float %90, 0.000000e+00\l  %92 = select i1 %91, float %90, float 1.000000e+00\l  %93 = fdiv contract float %89, %92\l  %94 = mul i64 %14, %8\l  %95 = add i64 %94, %12\l  %96 = getelementptr inbounds float, float addrspace(1)* %7, i64 %95\l  store float %93, float addrspace(1)* %96, align 4, !tbaa !5\l  br label %97\l}"];
	Node0x4c19f70 -> Node0x4c14090;
	Node0x4c14090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%97:\l97:                                               \l  ret void\l}"];
}
