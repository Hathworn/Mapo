digraph "CFG for '_Z11mish_kernelPKfPfi' function" {
	label="CFG for '_Z11mish_kernelPKfPfi' function";

	Node0x48a6f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !5, !invariant.load !6\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = add i32 %11, %4\l  %13 = icmp slt i32 %12, %2\l  br i1 %13, label %14, label %75\l|{<s0>T|<s1>F}}"];
	Node0x48a6f40:s0 -> Node0x48a8e10;
	Node0x48a6f40:s1 -> Node0x48a8ea0;
	Node0x48a8e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !6\l  %18 = fcmp contract ogt float %17, 2.000000e+01\l  br i1 %18, label %53, label %19\l|{<s0>T|<s1>F}}"];
	Node0x48a8e10:s0 -> Node0x48aa4a0;
	Node0x48a8e10:s1 -> Node0x48aa530;
	Node0x48aa530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%19:\l19:                                               \l  %20 = fcmp contract olt float %17, -2.000000e+01\l  %21 = fmul float %17, 0x3FF7154760000000\l  %22 = tail call float @llvm.rint.f32(float %21)\l  %23 = fcmp ogt float %17, 0x40562E4300000000\l  %24 = fcmp olt float %17, 0xC059D1DA00000000\l  %25 = fneg float %21\l  %26 = tail call float @llvm.fma.f32(float %17, float 0x3FF7154760000000,\l... float %25)\l  %27 = tail call float @llvm.fma.f32(float %17, float 0x3E54AE0BE0000000,\l... float %26)\l  %28 = fsub float %21, %22\l  %29 = fadd float %27, %28\l  %30 = tail call float @llvm.exp2.f32(float %29)\l  %31 = fptosi float %22 to i32\l  %32 = tail call float @llvm.amdgcn.ldexp.f32(float %30, i32 %31)\l  br i1 %20, label %33, label %36\l|{<s0>T|<s1>F}}"];
	Node0x48aa530:s0 -> Node0x48a90f0;
	Node0x48aa530:s1 -> Node0x48a9180;
	Node0x48a90f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%33:\l33:                                               \l  %34 = select i1 %24, float 0.000000e+00, float %32\l  %35 = select i1 %23, float 0x7FF0000000000000, float %34\l  br label %53\l}"];
	Node0x48a90f0 -> Node0x48aa4a0;
	Node0x48a9180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%36:\l36:                                               \l  %37 = fadd contract float %32, 1.000000e+00\l  %38 = select i1 %24, float 1.000000e+00, float %37\l  %39 = select i1 %23, float 0x7FF0000000000000, float %38\l  %40 = tail call i1 @llvm.amdgcn.class.f32(float %39, i32 144)\l  %41 = select i1 %40, float 0x41F0000000000000, float 1.000000e+00\l  %42 = fmul float %39, %41\l  %43 = tail call float @llvm.log2.f32(float %42)\l  %44 = fmul float %43, 0x3FE62E42E0000000\l  %45 = tail call i1 @llvm.amdgcn.class.f32(float %43, i32 519)\l  %46 = fneg float %44\l  %47 = tail call float @llvm.fma.f32(float %43, float 0x3FE62E42E0000000,\l... float %46)\l  %48 = tail call float @llvm.fma.f32(float %43, float 0x3E6EFA39E0000000,\l... float %47)\l  %49 = fadd float %44, %48\l  %50 = select i1 %45, float %43, float %49\l  %51 = select i1 %40, float 0x40362E4300000000, float 0.000000e+00\l  %52 = fsub float %50, %51\l  br label %53\l}"];
	Node0x48a9180 -> Node0x48aa4a0;
	Node0x48aa4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  %54 = phi float [ %35, %33 ], [ %52, %36 ], [ %17, %14 ]\l  %55 = fmul contract float %54, -2.000000e+00\l  %56 = fmul float %55, 0x3FF7154760000000\l  %57 = tail call float @llvm.rint.f32(float %56)\l  %58 = fcmp ogt float %55, 0x40562E4300000000\l  %59 = fcmp olt float %55, 0xC059D1DA00000000\l  %60 = fneg float %56\l  %61 = tail call float @llvm.fma.f32(float %55, float 0x3FF7154760000000,\l... float %60)\l  %62 = tail call float @llvm.fma.f32(float %55, float 0x3E54AE0BE0000000,\l... float %61)\l  %63 = fsub float %56, %57\l  %64 = fadd float %62, %63\l  %65 = tail call float @llvm.exp2.f32(float %64)\l  %66 = fptosi float %57 to i32\l  %67 = tail call float @llvm.amdgcn.ldexp.f32(float %65, i32 %66)\l  %68 = fadd contract float %67, 1.000000e+00\l  %69 = fdiv contract float 2.000000e+00, %68\l  %70 = fadd contract float %69, -1.000000e+00\l  %71 = select i1 %59, float 1.000000e+00, float %70\l  %72 = select i1 %58, float -1.000000e+00, float %71\l  %73 = fmul contract float %17, %72\l  %74 = getelementptr inbounds float, float addrspace(1)* %1, i64 %15\l  store float %73, float addrspace(1)* %74, align 4, !tbaa !7\l  br label %75\l}"];
	Node0x48aa4a0 -> Node0x48a8ea0;
	Node0x48a8ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  ret void\l}"];
}
