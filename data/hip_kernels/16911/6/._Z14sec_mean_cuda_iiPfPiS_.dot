digraph "CFG for '_Z14sec_mean_cuda_iiPfPiS_' function" {
	label="CFG for '_Z14sec_mean_cuda_iiPfPiS_' function";

	Node0x63d3b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = icmp slt i32 %6, %0\l  br i1 %7, label %8, label %23\l|{<s0>T|<s1>F}}"];
	Node0x63d3b10:s0 -> Node0x63d3d50;
	Node0x63d3b10:s1 -> Node0x63d3de0;
	Node0x63d3d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%8:\l8:                                                \l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = icmp slt i32 %9, %1\l  %11 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %15 = bitcast i8 addrspace(4)* %14 to i32 addrspace(4)*\l  %16 = load i32, i32 addrspace(4)* %15, align 4, !tbaa !5\l  %17 = load i16, i16 addrspace(4)* %13, align 4, !range !14, !invariant.load\l... !15\l  %18 = zext i16 %17 to i32\l  %19 = udiv i32 %16, %18\l  %20 = mul i32 %19, %18\l  %21 = icmp ugt i32 %16, %20\l  %22 = zext i1 %21 to i32\l  br label %24\l}"];
	Node0x63d3d50 -> Node0x63d60a0;
	Node0x63d3de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%23:\l23:                                               \l  ret void\l}"];
	Node0x63d60a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%24:\l24:                                               \l  %25 = phi i32 [ %6, %8 ], [ %42, %40 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %29 = add nsw i32 %25, 1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %30\l  %32 = load i32, i32 addrspace(1)* %31, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %33 = sub nsw i32 %32, %28\l  %34 = sitofp i32 %33 to float\l  br i1 %10, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x63d60a0:s0 -> Node0x63d76a0;
	Node0x63d60a0:s1 -> Node0x63d61f0;
	Node0x63d76a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%35:\l35:                                               \l  %36 = icmp sgt i32 %32, %28\l  %37 = mul nsw i32 %25, %1\l  br label %38\l}"];
	Node0x63d76a0 -> Node0x63d7900;
	Node0x63d7900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%38:\l38:                                               \l  %39 = phi i32 [ %9, %35 ], [ %49, %44 ]\l  br i1 %36, label %51, label %44\l|{<s0>T|<s1>F}}"];
	Node0x63d7900:s0 -> Node0x63d7b30;
	Node0x63d7900:s1 -> Node0x63d79f0;
	Node0x63d61f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%40:\l40:                                               \l  %41 = add i32 %19, %25\l  %42 = add i32 %41, %22\l  %43 = icmp slt i32 %42, %0\l  br i1 %43, label %24, label %23, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x63d61f0:s0 -> Node0x63d60a0;
	Node0x63d61f0:s1 -> Node0x63d3de0;
	Node0x63d79f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%44:\l44:                                               \l  %45 = phi float [ 0.000000e+00, %38 ], [ %60, %51 ]\l  %46 = add nsw i32 %39, %37\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  store float %45, float addrspace(1)* %48, align 4, !tbaa !22\l  %49 = add i32 %39, %18\l  %50 = icmp slt i32 %49, %1\l  br i1 %50, label %38, label %40, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x63d79f0:s0 -> Node0x63d7900;
	Node0x63d79f0:s1 -> Node0x63d61f0;
	Node0x63d7b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%51:\l51:                                               \l  %52 = phi i32 [ %61, %51 ], [ %28, %38 ]\l  %53 = phi float [ %60, %51 ], [ 0.000000e+00, %38 ]\l  %54 = mul nsw i32 %52, %1\l  %55 = add nsw i32 %54, %39\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !22\l  %59 = fdiv contract float %58, %34\l  %60 = fadd contract float %53, %59\l  %61 = add nsw i32 %52, 1\l  %62 = icmp slt i32 %61, %32\l  br i1 %62, label %51, label %44, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x63d7b30:s0 -> Node0x63d7b30;
	Node0x63d7b30:s1 -> Node0x63d79f0;
}
