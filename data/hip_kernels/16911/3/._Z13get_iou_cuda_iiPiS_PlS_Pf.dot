digraph "CFG for '_Z13get_iou_cuda_iiPiS_PlS_Pf' function" {
	label="CFG for '_Z13get_iou_cuda_iiPiS_PlS_Pf' function";

	Node0x5f83e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = icmp slt i32 %8, %1\l  br i1 %9, label %10, label %25\l|{<s0>T|<s1>F}}"];
	Node0x5f83e40:s0 -> Node0x5f83050;
	Node0x5f83e40:s1 -> Node0x5f84150;
	Node0x5f83050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%10:\l10:                                               \l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = icmp slt i32 %11, %0\l  %13 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !5\l  %19 = load i16, i16 addrspace(4)* %15, align 4, !range !14, !invariant.load\l... !15\l  %20 = zext i16 %19 to i32\l  %21 = udiv i32 %18, %20\l  %22 = mul i32 %21, %20\l  %23 = icmp ugt i32 %18, %22\l  %24 = zext i1 %23 to i32\l  br label %26\l}"];
	Node0x5f83050 -> Node0x5f863d0;
	Node0x5f84150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%25:\l25:                                               \l  ret void\l}"];
	Node0x5f863d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%26:\l26:                                               \l  %27 = phi i32 [ %8, %10 ], [ %40, %38 ]\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %28\l  %30 = load i32, i32 addrspace(1)* %29, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %31 = add nsw i32 %27, 1\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %32\l  %34 = load i32, i32 addrspace(1)* %33, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  br i1 %12, label %35, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5f863d0:s0 -> Node0x5f878c0;
	Node0x5f863d0:s1 -> Node0x5f86520;
	Node0x5f878c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%35:\l35:                                               \l  %36 = icmp slt i32 %30, %34\l  %37 = mul nsw i32 %27, %0\l  br label %42\l}"];
	Node0x5f878c0 -> Node0x5f87b20;
	Node0x5f86520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%38:\l38:                                               \l  %39 = add i32 %21, %27\l  %40 = add i32 %39, %24\l  %41 = icmp slt i32 %40, %1\l  br i1 %41, label %26, label %25, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x5f86520:s0 -> Node0x5f863d0;
	Node0x5f86520:s1 -> Node0x5f84150;
	Node0x5f87b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%42:\l42:                                               \l  %43 = phi i32 [ %11, %35 ], [ %62, %47 ]\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %44\l  %46 = load i32, i32 addrspace(1)* %45, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  br i1 %36, label %64, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5f87b20:s0 -> Node0x5f88230;
	Node0x5f87b20:s1 -> Node0x5f87f00;
	Node0x5f87f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%47:\l47:                                               \l  %48 = phi i32 [ 0, %42 ], [ %76, %64 ]\l  %49 = sitofp i32 %48 to float\l  %50 = fpext float %49 to double\l  %51 = add i32 %34, %46\l  %52 = add i32 %30, %48\l  %53 = sub i32 %51, %52\l  %54 = sitofp i32 %53 to float\l  %55 = fpext float %54 to double\l  %56 = fadd contract double %55, 1.000000e-05\l  %57 = fdiv contract double %50, %56\l  %58 = fptrunc double %57 to float\l  %59 = add nsw i32 %43, %37\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %6, i64 %60\l  store float %58, float addrspace(1)* %61, align 4, !tbaa !22\l  %62 = add i32 %43, %20\l  %63 = icmp slt i32 %62, %0\l  br i1 %63, label %42, label %38, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x5f87f00:s0 -> Node0x5f87b20;
	Node0x5f87f00:s1 -> Node0x5f86520;
	Node0x5f88230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = phi i32 [ %77, %64 ], [ %30, %42 ]\l  %66 = phi i32 [ %76, %64 ], [ 0, %42 ]\l  %67 = sext i32 %65 to i64\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %67\l  %69 = load i32, i32 addrspace(1)* %68, align 4, !tbaa !16, !amdgpu.noclobber\l... !15\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i64, i64 addrspace(1)* %4, i64 %70\l  %72 = load i64, i64 addrspace(1)* %71, align 8, !tbaa !25, !amdgpu.noclobber\l... !15\l  %73 = trunc i64 %72 to i32\l  %74 = icmp eq i32 %43, %73\l  %75 = zext i1 %74 to i32\l  %76 = add nuw nsw i32 %66, %75\l  %77 = add nsw i32 %65, 1\l  %78 = icmp slt i32 %77, %34\l  br i1 %78, label %64, label %47, !llvm.loop !27\l|{<s0>T|<s1>F}}"];
	Node0x5f88230:s0 -> Node0x5f88230;
	Node0x5f88230:s1 -> Node0x5f87f00;
}
