digraph "CFG for '_Z16roipool_fp_cuda_iiPfPiS_S0_' function" {
	label="CFG for '_Z16roipool_fp_cuda_iiPfPiS_S0_' function";

	Node0x4c2fc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = icmp slt i32 %7, %0\l  br i1 %8, label %9, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4c2fc20:s0 -> Node0x4c2ee50;
	Node0x4c2fc20:s1 -> Node0x4c2ff30;
	Node0x4c2ee50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7a9df870",label="{%9:\l9:                                                \l  %10 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %11 = icmp slt i32 %10, %1\l  %12 = tail call align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %16 = bitcast i8 addrspace(4)* %15 to i32 addrspace(4)*\l  %17 = load i32, i32 addrspace(4)* %16, align 4, !tbaa !5\l  %18 = load i16, i16 addrspace(4)* %14, align 4, !range !14, !invariant.load\l... !15\l  %19 = zext i16 %18 to i32\l  %20 = udiv i32 %17, %19\l  %21 = mul i32 %20, %19\l  %22 = icmp ugt i32 %17, %21\l  %23 = zext i1 %22 to i32\l  br label %25\l}"];
	Node0x4c2ee50 -> Node0x4c321c0;
	Node0x4c2ff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x4c321c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%25:\l25:                                               \l  %26 = phi i32 [ %7, %9 ], [ %41, %39 ]\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %27\l  %29 = load i32, i32 addrspace(1)* %28, align 4, !tbaa !16\l  %30 = add nsw i32 %26, 1\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %31\l  %33 = load i32, i32 addrspace(1)* %32, align 4, !tbaa !16\l  br i1 %11, label %34, label %39\l|{<s0>T|<s1>F}}"];
	Node0x4c321c0:s0 -> Node0x4c31970;
	Node0x4c321c0:s1 -> Node0x4c32310;
	Node0x4c31970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%34:\l34:                                               \l  %35 = icmp slt i32 %29, %33\l  %36 = mul nsw i32 %26, %1\l  br label %37\l}"];
	Node0x4c31970 -> Node0x4c319c0;
	Node0x4c319c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%37:\l37:                                               \l  %38 = phi i32 [ %10, %34 ], [ %50, %43 ]\l  br i1 %35, label %52, label %43\l|{<s0>T|<s1>F}}"];
	Node0x4c319c0:s0 -> Node0x4c33450;
	Node0x4c319c0:s1 -> Node0x4c33310;
	Node0x4c32310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%39:\l39:                                               \l  %40 = add i32 %20, %26\l  %41 = add i32 %40, %23\l  %42 = icmp slt i32 %41, %0\l  br i1 %42, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4c32310:s0 -> Node0x4c321c0;
	Node0x4c32310:s1 -> Node0x4c2ff30;
	Node0x4c33310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%43:\l43:                                               \l  %44 = phi i32 [ -1, %37 ], [ %62, %52 ]\l  %45 = phi float [ 0xFFF0000000000000, %37 ], [ %63, %52 ]\l  %46 = add nsw i32 %38, %36\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %5, i64 %47\l  store i32 %44, i32 addrspace(1)* %48, align 4, !tbaa !16\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %47\l  store float %45, float addrspace(1)* %49, align 4, !tbaa !22\l  %50 = add i32 %38, %19\l  %51 = icmp slt i32 %50, %1\l  br i1 %51, label %37, label %39, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4c33310:s0 -> Node0x4c319c0;
	Node0x4c33310:s1 -> Node0x4c32310;
	Node0x4c33450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ %64, %52 ], [ %29, %37 ]\l  %54 = phi float [ %63, %52 ], [ 0xFFF0000000000000, %37 ]\l  %55 = phi i32 [ %62, %52 ], [ -1, %37 ]\l  %56 = mul nsw i32 %53, %1\l  %57 = add nsw i32 %56, %38\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !22\l  %61 = fcmp contract ogt float %60, %54\l  %62 = select i1 %61, i32 %53, i32 %55\l  %63 = select i1 %61, float %60, float %54\l  %64 = add nsw i32 %53, 1\l  %65 = icmp slt i32 %64, %33\l  br i1 %65, label %52, label %43, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4c33450:s0 -> Node0x4c33450;
	Node0x4c33450:s1 -> Node0x4c33310;
}
