digraph "CFG for '_Z20cudaComputeSignaturePdS_PiPbPl' function" {
	label="CFG for '_Z20cudaComputeSignaturePdS_PiPbPl' function";

	Node0x462d930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = mul i32 %12, %11\l  %14 = add i32 %13, %6\l  %15 = zext i32 %14 to i64\l  %16 = load i64, i64 addrspace(1)* %4, align 8, !tbaa !7, !amdgpu.noclobber !6\l  %17 = icmp sgt i64 %16, %15\l  br i1 %17, label %18, label %133\l|{<s0>T|<s1>F}}"];
	Node0x462d930:s0 -> Node0x4630150;
	Node0x462d930:s1 -> Node0x46301e0;
	Node0x4630150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%18:\l18:                                               \l  %19 = load i32, i32 addrspace(1)* %2, align 4, !tbaa !11, !amdgpu.noclobber\l... !6\l  %20 = sext i32 %19 to i64\l  %21 = mul nsw i64 %20, %15\l  %22 = icmp sgt i32 %19, 0\l  br i1 %22, label %23, label %51\l|{<s0>T|<s1>F}}"];
	Node0x4630150:s0 -> Node0x4630660;
	Node0x4630150:s1 -> Node0x46306f0;
	Node0x4630660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%23:\l23:                                               \l  %24 = and i32 %19, 7\l  %25 = icmp ult i32 %19, 8\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x4630660:s0 -> Node0x46309b0;
	Node0x4630660:s1 -> Node0x4630a00;
	Node0x4630a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%26:\l26:                                               \l  %27 = and i32 %19, -8\l  br label %55\l}"];
	Node0x4630a00 -> Node0x4630c00;
	Node0x46309b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = phi double [ undef, %23 ], [ %129, %55 ]\l  %30 = phi i32 [ 0, %23 ], [ %130, %55 ]\l  %31 = phi double [ 0.000000e+00, %23 ], [ %129, %55 ]\l  %32 = icmp eq i32 %24, 0\l  br i1 %32, label %48, label %33\l|{<s0>T|<s1>F}}"];
	Node0x46309b0:s0 -> Node0x4630040;
	Node0x46309b0:s1 -> Node0x46300d0;
	Node0x46300d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ %45, %33 ], [ %30, %28 ]\l  %35 = phi double [ %44, %33 ], [ %31, %28 ]\l  %36 = phi i32 [ %46, %33 ], [ 0, %28 ]\l  %37 = zext i32 %34 to i64\l  %38 = add nsw i64 %21, %37\l  %39 = getelementptr inbounds double, double addrspace(1)* %0, i64 %38\l  %40 = load double, double addrspace(1)* %39, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 %37\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %43 = fmul contract double %40, %42\l  %44 = fadd contract double %35, %43\l  %45 = add nuw nsw i32 %34, 1\l  %46 = add i32 %36, 1\l  %47 = icmp eq i32 %46, %24\l  br i1 %47, label %48, label %33, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x46300d0:s0 -> Node0x4630040;
	Node0x46300d0:s1 -> Node0x46300d0;
	Node0x4630040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%48:\l48:                                               \l  %49 = phi double [ %29, %28 ], [ %44, %33 ]\l  %50 = fcmp contract oge double %49, 0.000000e+00\l  br label %51\l}"];
	Node0x4630040 -> Node0x46306f0;
	Node0x46306f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%51:\l51:                                               \l  %52 = phi i1 [ true, %18 ], [ %50, %48 ]\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %15\l  %54 = zext i1 %52 to i8\l  store i8 %54, i8 addrspace(1)* %53, align 1, !tbaa !17\l  br label %133\l}"];
	Node0x46306f0 -> Node0x46301e0;
	Node0x4630c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %26 ], [ %130, %55 ]\l  %57 = phi double [ 0.000000e+00, %26 ], [ %129, %55 ]\l  %58 = phi i32 [ 0, %26 ], [ %131, %55 ]\l  %59 = zext i32 %56 to i64\l  %60 = add nsw i64 %21, %59\l  %61 = getelementptr inbounds double, double addrspace(1)* %0, i64 %60\l  %62 = load double, double addrspace(1)* %61, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %63 = getelementptr inbounds double, double addrspace(1)* %1, i64 %59\l  %64 = load double, double addrspace(1)* %63, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %65 = fmul contract double %62, %64\l  %66 = fadd contract double %57, %65\l  %67 = or i32 %56, 1\l  %68 = zext i32 %67 to i64\l  %69 = add nsw i64 %21, %68\l  %70 = getelementptr inbounds double, double addrspace(1)* %0, i64 %69\l  %71 = load double, double addrspace(1)* %70, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %72 = getelementptr inbounds double, double addrspace(1)* %1, i64 %68\l  %73 = load double, double addrspace(1)* %72, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %74 = fmul contract double %71, %73\l  %75 = fadd contract double %66, %74\l  %76 = or i32 %56, 2\l  %77 = zext i32 %76 to i64\l  %78 = add nsw i64 %21, %77\l  %79 = getelementptr inbounds double, double addrspace(1)* %0, i64 %78\l  %80 = load double, double addrspace(1)* %79, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %81 = getelementptr inbounds double, double addrspace(1)* %1, i64 %77\l  %82 = load double, double addrspace(1)* %81, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %83 = fmul contract double %80, %82\l  %84 = fadd contract double %75, %83\l  %85 = or i32 %56, 3\l  %86 = zext i32 %85 to i64\l  %87 = add nsw i64 %21, %86\l  %88 = getelementptr inbounds double, double addrspace(1)* %0, i64 %87\l  %89 = load double, double addrspace(1)* %88, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %90 = getelementptr inbounds double, double addrspace(1)* %1, i64 %86\l  %91 = load double, double addrspace(1)* %90, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %92 = fmul contract double %89, %91\l  %93 = fadd contract double %84, %92\l  %94 = or i32 %56, 4\l  %95 = zext i32 %94 to i64\l  %96 = add nsw i64 %21, %95\l  %97 = getelementptr inbounds double, double addrspace(1)* %0, i64 %96\l  %98 = load double, double addrspace(1)* %97, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %99 = getelementptr inbounds double, double addrspace(1)* %1, i64 %95\l  %100 = load double, double addrspace(1)* %99, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %101 = fmul contract double %98, %100\l  %102 = fadd contract double %93, %101\l  %103 = or i32 %56, 5\l  %104 = zext i32 %103 to i64\l  %105 = add nsw i64 %21, %104\l  %106 = getelementptr inbounds double, double addrspace(1)* %0, i64 %105\l  %107 = load double, double addrspace(1)* %106, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %108 = getelementptr inbounds double, double addrspace(1)* %1, i64 %104\l  %109 = load double, double addrspace(1)* %108, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %110 = fmul contract double %107, %109\l  %111 = fadd contract double %102, %110\l  %112 = or i32 %56, 6\l  %113 = zext i32 %112 to i64\l  %114 = add nsw i64 %21, %113\l  %115 = getelementptr inbounds double, double addrspace(1)* %0, i64 %114\l  %116 = load double, double addrspace(1)* %115, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %117 = getelementptr inbounds double, double addrspace(1)* %1, i64 %113\l  %118 = load double, double addrspace(1)* %117, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %119 = fmul contract double %116, %118\l  %120 = fadd contract double %111, %119\l  %121 = or i32 %56, 7\l  %122 = zext i32 %121 to i64\l  %123 = add nsw i64 %21, %122\l  %124 = getelementptr inbounds double, double addrspace(1)* %0, i64 %123\l  %125 = load double, double addrspace(1)* %124, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %126 = getelementptr inbounds double, double addrspace(1)* %1, i64 %122\l  %127 = load double, double addrspace(1)* %126, align 8, !tbaa !13,\l... !amdgpu.noclobber !6\l  %128 = fmul contract double %125, %127\l  %129 = fadd contract double %120, %128\l  %130 = add nuw nsw i32 %56, 8\l  %131 = add i32 %58, 8\l  %132 = icmp eq i32 %131, %27\l  br i1 %132, label %28, label %55, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x4630c00:s0 -> Node0x46309b0;
	Node0x4630c00:s1 -> Node0x4630c00;
	Node0x46301e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%133:\l133:                                              \l  ret void\l}"];
}
