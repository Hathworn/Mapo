digraph "CFG for '_Z30kernel_colorSpaceRGBAToYUV420PPmS_iiii' function" {
	label="CFG for '_Z30kernel_colorSpaceRGBAToYUV420PPmS_iiii' function";

	Node0x5ad4ec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp ult i32 %15, %4\l  %25 = icmp ult i32 %23, %5\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %99\l|{<s0>T|<s1>F}}"];
	Node0x5ad4ec0:s0 -> Node0x5ad8980;
	Node0x5ad4ec0:s1 -> Node0x5ad8a10;
	Node0x5ad8980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = bitcast i64 addrspace(1)* %1 to i32 addrspace(1)*\l  %29 = mul i32 %23, %3\l  %30 = lshr i32 %29, 2\l  %31 = zext i32 %30 to i64\l  %32 = getelementptr inbounds i32, i32 addrspace(1)* %28, i64 %31\l  %33 = zext i32 %15 to i64\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %32, i64 %33\l  %35 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %36 = lshr i32 %35, 24\l  %37 = lshr i32 %35, 16\l  %38 = and i32 %37, 255\l  %39 = lshr i32 %35, 8\l  %40 = and i32 %39, 255\l  %41 = sitofp i32 %36 to double\l  %42 = fmul contract double %41, 2.990000e-01\l  %43 = sitofp i32 %38 to double\l  %44 = fmul contract double %43, 5.870000e-01\l  %45 = fadd contract double %42, %44\l  %46 = sitofp i32 %40 to double\l  %47 = fmul contract double %46, 1.140000e-01\l  %48 = fadd contract double %47, %45\l  %49 = fptrunc double %48 to float\l  %50 = fcmp contract olt float %49, 0.000000e+00\l  %51 = fcmp contract oge float %49, 2.550000e+02\l  %52 = select contract i1 %51, float 2.550000e+02, float %49\l  %53 = fptoui float %52 to i8\l  %54 = select i1 %50, i8 0, i8 %53\l  %55 = bitcast i64 addrspace(1)* %0 to i8 addrspace(1)*\l  %56 = mul i32 %23, %2\l  %57 = zext i32 %56 to i64\l  %58 = getelementptr inbounds i8, i8 addrspace(1)* %55, i64 %57\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %58, i64 %33\l  store i8 %54, i8 addrspace(1)* %59, align 1, !tbaa !11\l  %60 = fmul contract double %41, -1.687000e-01\l  %61 = fmul contract double %43, 3.313000e-01\l  %62 = fsub contract double %60, %61\l  %63 = fmul contract double %46, 5.000000e-01\l  %64 = fadd contract double %63, %62\l  %65 = fadd contract double %64, 1.280000e+02\l  %66 = fptrunc double %65 to float\l  %67 = fcmp contract olt float %66, 0.000000e+00\l  %68 = fcmp contract oge float %66, 2.550000e+02\l  %69 = select contract i1 %68, float 2.550000e+02, float %66\l  %70 = fptoui float %69 to i8\l  %71 = select i1 %67, i8 0, i8 %70\l  %72 = lshr i32 %23, 2\l  %73 = add i32 %72, %5\l  %74 = mul i32 %73, %2\l  %75 = zext i32 %74 to i64\l  %76 = getelementptr inbounds i8, i8 addrspace(1)* %55, i64 %75\l  %77 = lshr i32 %15, 1\l  %78 = zext i32 %77 to i64\l  %79 = getelementptr inbounds i8, i8 addrspace(1)* %76, i64 %78\l  store i8 %71, i8 addrspace(1)* %79, align 1, !tbaa !11\l  %80 = fmul contract double %41, 5.000000e-01\l  %81 = fmul contract double %43, 4.187000e-01\l  %82 = fsub contract double %80, %81\l  %83 = fmul contract double %46, 0x3FB4D013A92A3055\l  %84 = fsub contract double %82, %83\l  %85 = fadd contract double %84, 1.280000e+02\l  %86 = fptrunc double %85 to float\l  %87 = fcmp contract olt float %86, 0.000000e+00\l  %88 = fcmp contract oge float %86, 2.550000e+02\l  %89 = select contract i1 %88, float 2.550000e+02, float %86\l  %90 = fptoui float %89 to i8\l  %91 = select i1 %87, i8 0, i8 %90\l  %92 = mul nsw i32 %5, 5\l  %93 = add i32 %23, %92\l  %94 = lshr i32 %93, 2\l  %95 = mul i32 %94, %2\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %55, i64 %96\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %97, i64 %78\l  store i8 %91, i8 addrspace(1)* %98, align 1, !tbaa !11\l  br label %99\l}"];
	Node0x5ad8980 -> Node0x5ad8a10;
	Node0x5ad8a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  ret void\l}"];
}
