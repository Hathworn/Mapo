digraph "CFG for '_Z30kernel_colorSpaceYUV420PToRGBAPmS_iiii' function" {
	label="CFG for '_Z30kernel_colorSpaceYUV420PToRGBAPmS_iiii' function";

	Node0x5ec1f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %8, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp ult i32 %15, %4\l  %25 = icmp ult i32 %23, %5\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %98\l|{<s0>T|<s1>F}}"];
	Node0x5ec1f10:s0 -> Node0x5ec59d0;
	Node0x5ec1f10:s1 -> Node0x5ec5a60;
	Node0x5ec59d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%27:\l27:                                               \l  %28 = bitcast i64 addrspace(1)* %0 to i8 addrspace(1)*\l  %29 = mul i32 %23, %2\l  %30 = zext i32 %29 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 %30\l  %32 = zext i32 %15 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %31, i64 %32\l  %34 = load i8, i8 addrspace(1)* %33, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %35 = lshr i32 %23, 2\l  %36 = add i32 %35, %5\l  %37 = mul i32 %36, %2\l  %38 = zext i32 %37 to i64\l  %39 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 %38\l  %40 = lshr i32 %15, 1\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds i8, i8 addrspace(1)* %39, i64 %41\l  %43 = load i8, i8 addrspace(1)* %42, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %44 = zext i8 %43 to i32\l  %45 = mul nsw i32 %5, 5\l  %46 = add i32 %23, %45\l  %47 = lshr i32 %46, 2\l  %48 = mul i32 %47, %2\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds i8, i8 addrspace(1)* %28, i64 %49\l  %51 = getelementptr inbounds i8, i8 addrspace(1)* %50, i64 %41\l  %52 = load i8, i8 addrspace(1)* %51, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %53 = zext i8 %52 to i32\l  %54 = uitofp i8 %34 to double\l  %55 = add nsw i32 %53, -128\l  %56 = sitofp i32 %55 to double\l  %57 = fmul contract double %56, 1.402000e+00\l  %58 = fadd contract double %57, %54\l  %59 = fadd contract double %58, 5.000000e-01\l  %60 = fptrunc double %59 to float\l  %61 = fcmp contract olt float %60, 0.000000e+00\l  %62 = fcmp contract oge float %60, 2.550000e+02\l  %63 = select contract i1 %62, float 2.550000e+02, float %60\l  %64 = fptoui float %63 to i8\l  %65 = select i1 %61, i8 0, i8 %64\l  %66 = add nsw i32 %44, -128\l  %67 = sitofp i32 %66 to double\l  %68 = fmul contract double %67, 3.441400e-01\l  %69 = fsub contract double %54, %68\l  %70 = fmul contract double %56, 7.141400e-01\l  %71 = fsub contract double %69, %70\l  %72 = fadd contract double %71, 5.000000e-01\l  %73 = fptrunc double %72 to float\l  %74 = fcmp contract olt float %73, 0.000000e+00\l  %75 = fcmp contract oge float %73, 2.550000e+02\l  %76 = select contract i1 %75, float 2.550000e+02, float %73\l  %77 = fptoui float %76 to i8\l  %78 = select i1 %74, i8 0, i8 %77\l  %79 = fmul contract double %67, 1.772000e+00\l  %80 = fadd contract double %79, %54\l  %81 = fadd contract double %80, 5.000000e-01\l  %82 = fptrunc double %81 to float\l  %83 = fcmp contract olt float %82, 0.000000e+00\l  %84 = fcmp contract oge float %82, 2.550000e+02\l  %85 = select contract i1 %84, float 2.550000e+02, float %82\l  %86 = fptoui float %85 to i8\l  %87 = select i1 %83, i8 0, i8 %86\l  %88 = bitcast i64 addrspace(1)* %1 to i8 addrspace(1)*\l  %89 = mul i32 %23, %3\l  %90 = zext i32 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %88, i64 %90\l  %92 = shl i32 %15, 2\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(1)* %91, i64 %93\l  store i8 %65, i8 addrspace(1)* %94, align 1, !tbaa !7\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %94, i64 1\l  store i8 %78, i8 addrspace(1)* %95, align 1, !tbaa !7\l  %96 = getelementptr inbounds i8, i8 addrspace(1)* %94, i64 2\l  store i8 %87, i8 addrspace(1)* %96, align 1, !tbaa !7\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %94, i64 3\l  store i8 -1, i8 addrspace(1)* %97, align 1, !tbaa !7\l  br label %98\l}"];
	Node0x5ec59d0 -> Node0x5ec5a60;
	Node0x5ec5a60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%98:\l98:                                               \l  ret void\l}"];
}
