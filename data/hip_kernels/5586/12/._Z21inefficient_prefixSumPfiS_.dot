digraph "CFG for '_Z21inefficient_prefixSumPfiS_' function" {
	label="CFG for '_Z21inefficient_prefixSumPfiS_' function";

	Node0x45f2bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %1\l  br i1 %13, label %14, label %32\l|{<s0>T|<s1>F}}"];
	Node0x45f2bd0:s0 -> Node0x45f4ad0;
	Node0x45f2bd0:s1 -> Node0x45f4b60;
	Node0x45f4ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %0, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %11\l  store float %17, float addrspace(3)* %18, align 4, !tbaa !7\l  %19 = icmp eq i32 %11, 0\l  br i1 %19, label %20, label %23\l|{<s0>T|<s1>F}}"];
	Node0x45f4ad0:s0 -> Node0x45f5e40;
	Node0x45f4ad0:s1 -> Node0x45f5ed0;
	Node0x45f5e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%20:\l20:                                               \l  %21 = phi float [ %17, %14 ], [ %29, %23 ]\l  %22 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  store float %21, float addrspace(1)* %22, align 4, !tbaa !7\l  br label %32\l}"];
	Node0x45f5e40 -> Node0x45f4b60;
	Node0x45f5ed0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  %24 = phi i32 [ %30, %23 ], [ 1, %14 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %25 = load float, float addrspace(3)* %18, align 4, !tbaa !7\l  %26 = sub i32 %11, %24\l  %27 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %26\l  %28 = load float, float addrspace(3)* %27, align 4, !tbaa !7\l  %29 = fadd contract float %25, %28\l  store float %29, float addrspace(3)* %18, align 4, !tbaa !7\l  %30 = shl nuw nsw i32 %24, 1\l  %31 = icmp ult i32 %11, %30\l  br i1 %31, label %20, label %23, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x45f5ed0:s0 -> Node0x45f5e40;
	Node0x45f5ed0:s1 -> Node0x45f5ed0;
	Node0x45f4b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%32:\l32:                                               \l  ret void\l}"];
}
