digraph "CFG for '_Z21prefixSum_multiBlocksPfiS_S_' function" {
	label="CFG for '_Z21prefixSum_multiBlocksPfiS_S_' function";

	Node0x61fc530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %1\l  br i1 %14, label %15, label %67\l|{<s0>T|<s1>F}}"];
	Node0x61fc530:s0 -> Node0x61fe480;
	Node0x61fc530:s1 -> Node0x61fe510;
	Node0x61fe480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %0, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %12\l  store float %18, float addrspace(3)* %19, align 4, !tbaa !7\l  %20 = shl nuw nsw i32 %12, 1\l  %21 = add nuw nsw i32 %20, 2\l  br label %26\l}"];
	Node0x61fe480 -> Node0x61ff8e0;
	Node0x61ff9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%22:\l22:                                               \l  %23 = icmp ult i16 %9, 4\l  br i1 %23, label %41, label %24\l|{<s0>T|<s1>F}}"];
	Node0x61ff9e0:s0 -> Node0x61ffb30;
	Node0x61ff9e0:s1 -> Node0x61ffb80;
	Node0x61ffb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%24:\l24:                                               \l  %25 = lshr i32 %10, 2\l  br label %43\l}"];
	Node0x61ffb80 -> Node0x61ffd50;
	Node0x61ff8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = phi i32 [ 1, %15 ], [ %39, %38 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = mul i32 %27, %21\l  %29 = add i32 %28, -1\l  %30 = icmp ult i32 %29, %10\l  br i1 %30, label %31, label %38\l|{<s0>T|<s1>F}}"];
	Node0x61ff8e0:s0 -> Node0x6200440;
	Node0x61ff8e0:s1 -> Node0x61ffe40;
	Node0x6200440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%31:\l31:                                               \l  %32 = sub nsw i32 %29, %27\l  %33 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %32\l  %34 = load float, float addrspace(3)* %33, align 4, !tbaa !7\l  %35 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %29\l  %36 = load float, float addrspace(3)* %35, align 4, !tbaa !7\l  %37 = fadd contract float %34, %36\l  store float %37, float addrspace(3)* %35, align 4, !tbaa !7\l  br label %38\l}"];
	Node0x6200440 -> Node0x61ffe40;
	Node0x61ffe40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = shl nsw i32 %27, 1\l  %40 = icmp ugt i32 %39, %10\l  br i1 %40, label %22, label %26, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x61ffe40:s0 -> Node0x61ff9e0;
	Node0x61ffe40:s1 -> Node0x61ff8e0;
	Node0x61ffb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%41:\l41:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %42 = icmp eq i32 %12, 0\l  br i1 %42, label %58, label %64\l|{<s0>T|<s1>F}}"];
	Node0x61ffb30:s0 -> Node0x6200fe0;
	Node0x61ffb30:s1 -> Node0x6201030;
	Node0x61ffd50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%43:\l43:                                               \l  %44 = phi i32 [ %25, %24 ], [ %56, %55 ]\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %45 = mul nuw nsw i32 %44, %21\l  %46 = add nsw i32 %45, -1\l  %47 = add nsw i32 %46, %44\l  %48 = icmp ult i32 %47, %10\l  br i1 %48, label %49, label %55\l|{<s0>T|<s1>F}}"];
	Node0x61ffd50:s0 -> Node0x62016a0;
	Node0x61ffd50:s1 -> Node0x6201170;
	Node0x62016a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %46\l  %51 = load float, float addrspace(3)* %50, align 4, !tbaa !7\l  %52 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %47\l  %53 = load float, float addrspace(3)* %52, align 4, !tbaa !7\l  %54 = fadd contract float %51, %53\l  store float %54, float addrspace(3)* %52, align 4, !tbaa !7\l  br label %55\l}"];
	Node0x62016a0 -> Node0x6201170;
	Node0x6201170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%55:\l55:                                               \l  %56 = lshr i32 %44, 1\l  %57 = icmp ult i32 %44, 2\l  br i1 %57, label %41, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6201170:s0 -> Node0x61ffb30;
	Node0x6201170:s1 -> Node0x61ffd50;
	Node0x6200fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%58:\l58:                                               \l  %59 = add nsw i32 %10, -1\l  %60 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @DSM,\l... i32 0, i32 %59\l  %61 = load float, float addrspace(3)* %60, align 4, !tbaa !7\l  %62 = zext i32 %5 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %3, i64 %62\l  store float %61, float addrspace(1)* %63, align 4, !tbaa !7\l  br label %64\l}"];
	Node0x6200fe0 -> Node0x6201030;
	Node0x6201030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%64:\l64:                                               \l  %65 = load float, float addrspace(3)* %19, align 4, !tbaa !7\l  %66 = getelementptr inbounds float, float addrspace(1)* %2, i64 %16\l  store float %65, float addrspace(1)* %66, align 4, !tbaa !7\l  br label %67\l}"];
	Node0x6201030 -> Node0x61fe510;
	Node0x61fe510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%67:\l67:                                               \l  ret void\l}"];
}
