digraph "CFG for '_Z13hist_inSharedPKiiPi' function" {
	label="CFG for '_Z13hist_inSharedPKiiPi' function";

	Node0x4d58df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shHist, i32\l... 0, i32 %4\l  store i32 0, i32 addrspace(3)* %5, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !9, !invariant.load !10\l  %10 = zext i16 %9 to i32\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !11\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = mul i32 %14, %10\l  %16 = add i32 %15, %4\l  %17 = udiv i32 %13, %10\l  %18 = mul i32 %17, %10\l  %19 = icmp ugt i32 %13, %18\l  %20 = zext i1 %19 to i32\l  %21 = add i32 %17, %20\l  %22 = mul i32 %21, %10\l  %23 = icmp slt i32 %16, %1\l  br i1 %23, label %24, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4d58df0:s0 -> Node0x4d5b910;
	Node0x4d58df0:s1 -> Node0x4d5b9a0;
	Node0x4d5b910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i32 [ %31, %24 ], [ %16, %3 ]\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %26\l  %28 = load i32, i32 addrspace(1)* %27, align 4, !tbaa !5, !amdgpu.noclobber\l... !10\l  %29 = getelementptr inbounds [0 x i32], [0 x i32] addrspace(3)* @shHist, i32\l... 0, i32 %28\l  %30 = atomicrmw add i32 addrspace(3)* %29, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  %31 = add nsw i32 %25, %22\l  %32 = icmp slt i32 %31, %1\l  br i1 %32, label %24, label %33, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4d5b910:s0 -> Node0x4d5b910;
	Node0x4d5b910:s1 -> Node0x4d5b9a0;
	Node0x4d5b9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%33:\l33:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %34 = zext i32 %4 to i64\l  %35 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %34\l  %36 = load i32, i32 addrspace(3)* %5, align 4, !tbaa !5\l  %37 = atomicrmw add i32 addrspace(1)* %35, i32 %36 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  ret void\l}"];
}
