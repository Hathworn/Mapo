digraph "CFG for '_Z20evovle_kernel_sharediPcS_PiS0_' function" {
	label="CFG for '_Z20evovle_kernel_sharediPcS_PiS0_' function";

	Node0x619b300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%5:\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = add nsw i32 %11, -2\l  %13 = mul i32 %12, %7\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = add nsw i32 %20, -2\l  %22 = mul i32 %21, %16\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %24 = add i32 %22, %23\l  %25 = add nsw i32 %0, 2\l  %26 = mul nsw i32 %15, %25\l  %27 = add nsw i32 %26, %24\l  %28 = add nsw i32 %0, 1\l  %29 = icmp sgt i32 %15, %28\l  %30 = icmp sgt i32 %24, %28\l  %31 = select i1 %29, i1 true, i1 %30\l  br i1 %31, label %37, label %32\l|{<s0>T|<s1>F}}"];
	Node0x619b300:s0 -> Node0x619f1a0;
	Node0x619b300:s1 -> Node0x619f230;
	Node0x619f230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%32:\l32:                                               \l  %33 = sext i32 %27 to i64\l  %34 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %33\l  %35 = load i8, i8 addrspace(1)* %34, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %36 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %14, i32 %23\l  store i8 %35, i8 addrspace(3)* %36, align 1, !tbaa !7\l  br label %37\l}"];
	Node0x619f230 -> Node0x619f1a0;
	Node0x619f1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %38 = icmp sgt i32 %15, %0\l  br i1 %38, label %111, label %39\l|{<s0>T|<s1>F}}"];
	Node0x619f1a0:s0 -> Node0x61a0340;
	Node0x619f1a0:s1 -> Node0x61a0390;
	Node0x61a0390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%39:\l39:                                               \l  %40 = icmp sle i32 %24, %0\l  %41 = icmp ne i32 %14, 0\l  %42 = select i1 %40, i1 %41, i1 false\l  br i1 %42, label %43, label %111\l|{<s0>T|<s1>F}}"];
	Node0x61a0390:s0 -> Node0x61a06a0;
	Node0x61a0390:s1 -> Node0x61a0340;
	Node0x61a06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%43:\l43:                                               \l  %44 = add nsw i32 %20, -1\l  %45 = icmp eq i32 %14, %44\l  %46 = icmp eq i32 %23, 0\l  %47 = select i1 %45, i1 true, i1 %46\l  %48 = add nsw i32 %11, -1\l  %49 = icmp eq i32 %23, %48\l  %50 = select i1 %47, i1 true, i1 %49\l  br i1 %50, label %111, label %51\l|{<s0>T|<s1>F}}"];
	Node0x61a06a0:s0 -> Node0x61a0340;
	Node0x61a06a0:s1 -> Node0x61a0c00;
	Node0x61a0c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%51:\l51:                                               \l  %52 = add nuw nsw i32 %14, 1\l  %53 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %52, i32 %23\l  %54 = load i8, i8 addrspace(3)* %53, align 1, !tbaa !7\l  %55 = sext i8 %54 to i32\l  %56 = add nsw i32 %14, -1\l  %57 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %56, i32 %23\l  %58 = load i8, i8 addrspace(3)* %57, align 1, !tbaa !7\l  %59 = sext i8 %58 to i32\l  %60 = add nsw i32 %59, %55\l  %61 = add nuw nsw i32 %23, 1\l  %62 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %14, i32 %61\l  %63 = load i8, i8 addrspace(3)* %62, align 1, !tbaa !7\l  %64 = sext i8 %63 to i32\l  %65 = add nsw i32 %60, %64\l  %66 = add nsw i32 %23, -1\l  %67 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %14, i32 %66\l  %68 = load i8, i8 addrspace(3)* %67, align 1, !tbaa !7\l  %69 = sext i8 %68 to i32\l  %70 = add nsw i32 %65, %69\l  %71 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %52, i32 %61\l  %72 = load i8, i8 addrspace(3)* %71, align 1, !tbaa !7\l  %73 = sext i8 %72 to i32\l  %74 = add nsw i32 %70, %73\l  %75 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %56, i32 %66\l  %76 = load i8, i8 addrspace(3)* %75, align 1, !tbaa !7\l  %77 = sext i8 %76 to i32\l  %78 = add nsw i32 %74, %77\l  %79 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %56, i32 %61\l  %80 = load i8, i8 addrspace(3)* %79, align 1, !tbaa !7\l  %81 = sext i8 %80 to i32\l  %82 = add nsw i32 %78, %81\l  %83 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %52, i32 %66\l  %84 = load i8, i8 addrspace(3)* %83, align 1, !tbaa !7\l  %85 = sext i8 %84 to i32\l  %86 = add nsw i32 %82, %85\l  %87 = icmp eq i32 %86, 3\l  br i1 %87, label %94, label %88\l|{<s0>T|<s1>F}}"];
	Node0x61a0c00:s0 -> Node0x61a2490;
	Node0x61a0c00:s1 -> Node0x61a24e0;
	Node0x61a24e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%88:\l88:                                               \l  %89 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]\l... addrspace(3)* @_ZZ20evovle_kernel_sharediPcS_PiS0_E13oldGen_shared, i32 0,\l... i32 %14, i32 %23\l  %90 = load i8, i8 addrspace(3)* %89, align 1, !tbaa !7\l  %91 = icmp eq i32 %86, 2\l  %92 = icmp ne i8 %90, 0\l  %93 = select i1 %91, i1 %92, i1 false\l  br label %94\l}"];
	Node0x61a24e0 -> Node0x61a2490;
	Node0x61a2490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%94:\l94:                                               \l  %95 = phi i1 [ true, %51 ], [ %93, %88 ]\l  %96 = zext i1 %95 to i8\l  %97 = sext i32 %27 to i64\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 %97\l  store i8 %96, i8 addrspace(1)* %98, align 1, !tbaa !7\l  br i1 %95, label %99, label %103\l|{<s0>T|<s1>F}}"];
	Node0x61a2490:s0 -> Node0x61a2c70;
	Node0x61a2490:s1 -> Node0x61a2cc0;
	Node0x61a2c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%99:\l99:                                               \l  %100 = load i32, i32 addrspace(1)* %3, align 4, !tbaa !10\l  %101 = add nsw i32 %100, 1\l  store i32 %101, i32 addrspace(1)* %3, align 4, !tbaa !10\l  %102 = load i8, i8 addrspace(1)* %98, align 1, !tbaa !7\l  br label %103\l}"];
	Node0x61a2c70 -> Node0x61a2cc0;
	Node0x61a2cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%103:\l103:                                              \l  %104 = phi i8 [ %102, %99 ], [ 0, %94 ]\l  %105 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %97\l  %106 = load i8, i8 addrspace(1)* %105, align 1, !tbaa !7\l  %107 = icmp eq i8 %104, %106\l  br i1 %107, label %111, label %108\l|{<s0>T|<s1>F}}"];
	Node0x61a2cc0:s0 -> Node0x61a0340;
	Node0x61a2cc0:s1 -> Node0x61a3990;
	Node0x61a3990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%108:\l108:                                              \l  %109 = load i32, i32 addrspace(1)* %4, align 4, !tbaa !10\l  %110 = add nsw i32 %109, 1\l  store i32 %110, i32 addrspace(1)* %4, align 4, !tbaa !10\l  br label %111\l}"];
	Node0x61a3990 -> Node0x61a0340;
	Node0x61a0340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%111:\l111:                                              \l  ret void\l}"];
}
