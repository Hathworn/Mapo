digraph "CFG for '_Z26periodicityPreservationGPUiPc' function" {
	label="CFG for '_Z26periodicityPreservationGPUiPc' function";

	Node0x453df50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%2:\l  %3 = icmp slt i32 %0, 1\l  br i1 %3, label %35, label %4\l|{<s0>T|<s1>F}}"];
	Node0x453df50:s0 -> Node0x453e6b0;
	Node0x453df50:s1 -> Node0x453e740;
	Node0x453e740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l4:                                                \l  %5 = add nuw nsw i32 %0, 2\l  %6 = add nuw nsw i32 %0, 1\l  %7 = mul nsw i32 %5, %6\l  %8 = mul nsw i32 %5, %0\l  %9 = and i32 %0, 3\l  %10 = icmp ult i32 %0, 4\l  br i1 %10, label %13, label %11\l|{<s0>T|<s1>F}}"];
	Node0x453e740:s0 -> Node0x453e880;
	Node0x453e740:s1 -> Node0x453ed20;
	Node0x453ed20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%11:\l11:                                               \l  %12 = and i32 %0, -4\l  br label %44\l}"];
	Node0x453ed20 -> Node0x453ef20;
	Node0x453e880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%13:\l13:                                               \l  %14 = phi i32 [ 1, %4 ], [ %102, %44 ]\l  %15 = icmp eq i32 %9, 0\l  br i1 %15, label %35, label %16\l|{<s0>T|<s1>F}}"];
	Node0x453e880:s0 -> Node0x453e6b0;
	Node0x453e880:s1 -> Node0x453f180;
	Node0x453f180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %32, %16 ], [ %14, %13 ]\l  %18 = phi i32 [ %33, %16 ], [ 0, %13 ]\l  %19 = add nsw i32 %17, %5\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %20\l  %22 = load i8, i8 addrspace(1)* %21, align 1, !tbaa !4\l  %23 = add nsw i32 %17, %7\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %24\l  store i8 %22, i8 addrspace(1)* %25, align 1, !tbaa !4\l  %26 = add nsw i32 %17, %8\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %27\l  %29 = load i8, i8 addrspace(1)* %28, align 1, !tbaa !4\l  %30 = zext i32 %17 to i64\l  %31 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %30\l  store i8 %29, i8 addrspace(1)* %31, align 1, !tbaa !4\l  %32 = add nuw i32 %17, 1\l  %33 = add i32 %18, 1\l  %34 = icmp eq i32 %33, %9\l  br i1 %34, label %35, label %16, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x453f180:s0 -> Node0x453e6b0;
	Node0x453f180:s1 -> Node0x453f180;
	Node0x453e6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%35:\l35:                                               \l  %36 = icmp slt i32 %0, -1\l  br i1 %36, label %193, label %37\l|{<s0>T|<s1>F}}"];
	Node0x453e6b0:s0 -> Node0x45413c0;
	Node0x453e6b0:s1 -> Node0x4541410;
	Node0x4541410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%37:\l37:                                               \l  %38 = add nsw i32 %0, 2\l  %39 = add i32 %0, 1\l  %40 = and i32 %38, 3\l  %41 = icmp ult i32 %39, 3\l  br i1 %41, label %170, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4541410:s0 -> Node0x4541750;
	Node0x4541410:s1 -> Node0x45417a0;
	Node0x45417a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%42:\l42:                                               \l  %43 = and i32 %38, -4\l  br label %105\l}"];
	Node0x45417a0 -> Node0x4541970;
	Node0x453ef20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%44:\l44:                                               \l  %45 = phi i32 [ 1, %11 ], [ %102, %44 ]\l  %46 = phi i32 [ 0, %11 ], [ %103, %44 ]\l  %47 = add nsw i32 %45, %5\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %48\l  %50 = load i8, i8 addrspace(1)* %49, align 1, !tbaa !4\l  %51 = add nsw i32 %45, %7\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %52\l  store i8 %50, i8 addrspace(1)* %53, align 1, !tbaa !4\l  %54 = add nsw i32 %45, %8\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %55\l  %57 = load i8, i8 addrspace(1)* %56, align 1, !tbaa !4\l  %58 = zext i32 %45 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %58\l  store i8 %57, i8 addrspace(1)* %59, align 1, !tbaa !4\l  %60 = add nuw nsw i32 %45, 1\l  %61 = add nsw i32 %60, %5\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %62\l  %64 = load i8, i8 addrspace(1)* %63, align 1, !tbaa !4\l  %65 = add nsw i32 %60, %7\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %66\l  store i8 %64, i8 addrspace(1)* %67, align 1, !tbaa !4\l  %68 = add nsw i32 %60, %8\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %69\l  %71 = load i8, i8 addrspace(1)* %70, align 1, !tbaa !4\l  %72 = zext i32 %60 to i64\l  %73 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %72\l  store i8 %71, i8 addrspace(1)* %73, align 1, !tbaa !4\l  %74 = add nuw nsw i32 %45, 2\l  %75 = add nsw i32 %74, %5\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %76\l  %78 = load i8, i8 addrspace(1)* %77, align 1, !tbaa !4\l  %79 = add nsw i32 %74, %7\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %80\l  store i8 %78, i8 addrspace(1)* %81, align 1, !tbaa !4\l  %82 = add nsw i32 %74, %8\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %83\l  %85 = load i8, i8 addrspace(1)* %84, align 1, !tbaa !4\l  %86 = zext i32 %74 to i64\l  %87 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %86\l  store i8 %85, i8 addrspace(1)* %87, align 1, !tbaa !4\l  %88 = add nuw i32 %45, 3\l  %89 = add nsw i32 %88, %5\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %90\l  %92 = load i8, i8 addrspace(1)* %91, align 1, !tbaa !4\l  %93 = add nsw i32 %88, %7\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %94\l  store i8 %92, i8 addrspace(1)* %95, align 1, !tbaa !4\l  %96 = add nsw i32 %88, %8\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %97\l  %99 = load i8, i8 addrspace(1)* %98, align 1, !tbaa !4\l  %100 = zext i32 %88 to i64\l  %101 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %100\l  store i8 %99, i8 addrspace(1)* %101, align 1, !tbaa !4\l  %102 = add nuw i32 %45, 4\l  %103 = add i32 %46, 4\l  %104 = icmp eq i32 %103, %12\l  br i1 %104, label %13, label %44, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x453ef20:s0 -> Node0x453e880;
	Node0x453ef20:s1 -> Node0x453ef20;
	Node0x4541970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d0473d70",label="{%105:\l105:                                              \l  %106 = phi i32 [ 0, %42 ], [ %167, %105 ]\l  %107 = phi i32 [ 0, %42 ], [ %168, %105 ]\l  %108 = mul nsw i32 %106, %38\l  %109 = or i32 %108, 1\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %110\l  %112 = load i8, i8 addrspace(1)* %111, align 1, !tbaa !4\l  %113 = add nsw i32 %108, %0\l  %114 = add nsw i32 %113, 1\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %115\l  store i8 %112, i8 addrspace(1)* %116, align 1, !tbaa !4\l  %117 = sext i32 %113 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %117\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !4\l  %120 = sext i32 %108 to i64\l  %121 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %120\l  store i8 %119, i8 addrspace(1)* %121, align 1, !tbaa !4\l  %122 = or i32 %106, 1\l  %123 = mul nsw i32 %122, %38\l  %124 = add nsw i32 %123, 1\l  %125 = sext i32 %124 to i64\l  %126 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %125\l  %127 = load i8, i8 addrspace(1)* %126, align 1, !tbaa !4\l  %128 = add nsw i32 %123, %0\l  %129 = add nsw i32 %128, 1\l  %130 = sext i32 %129 to i64\l  %131 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %130\l  store i8 %127, i8 addrspace(1)* %131, align 1, !tbaa !4\l  %132 = sext i32 %128 to i64\l  %133 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %132\l  %134 = load i8, i8 addrspace(1)* %133, align 1, !tbaa !4\l  %135 = sext i32 %123 to i64\l  %136 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %135\l  store i8 %134, i8 addrspace(1)* %136, align 1, !tbaa !4\l  %137 = or i32 %106, 2\l  %138 = mul nsw i32 %137, %38\l  %139 = or i32 %138, 1\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %140\l  %142 = load i8, i8 addrspace(1)* %141, align 1, !tbaa !4\l  %143 = add nsw i32 %138, %0\l  %144 = add nsw i32 %143, 1\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %145\l  store i8 %142, i8 addrspace(1)* %146, align 1, !tbaa !4\l  %147 = sext i32 %143 to i64\l  %148 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %147\l  %149 = load i8, i8 addrspace(1)* %148, align 1, !tbaa !4\l  %150 = sext i32 %138 to i64\l  %151 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %150\l  store i8 %149, i8 addrspace(1)* %151, align 1, !tbaa !4\l  %152 = or i32 %106, 3\l  %153 = mul nsw i32 %152, %38\l  %154 = add nsw i32 %153, 1\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %155\l  %157 = load i8, i8 addrspace(1)* %156, align 1, !tbaa !4\l  %158 = add nsw i32 %153, %0\l  %159 = add nsw i32 %158, 1\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %160\l  store i8 %157, i8 addrspace(1)* %161, align 1, !tbaa !4\l  %162 = sext i32 %158 to i64\l  %163 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %162\l  %164 = load i8, i8 addrspace(1)* %163, align 1, !tbaa !4\l  %165 = sext i32 %153 to i64\l  %166 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %165\l  store i8 %164, i8 addrspace(1)* %166, align 1, !tbaa !4\l  %167 = add nuw i32 %106, 4\l  %168 = add i32 %107, 4\l  %169 = icmp eq i32 %168, %43\l  br i1 %169, label %170, label %105, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4541970:s0 -> Node0x4541750;
	Node0x4541970:s1 -> Node0x4541970;
	Node0x4541750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%170:\l170:                                              \l  %171 = phi i32 [ 0, %37 ], [ %167, %105 ]\l  %172 = icmp eq i32 %40, 0\l  br i1 %172, label %193, label %173\l|{<s0>T|<s1>F}}"];
	Node0x4541750:s0 -> Node0x45413c0;
	Node0x4541750:s1 -> Node0x4546ff0;
	Node0x4546ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%173:\l173:                                              \l  %174 = phi i32 [ %190, %173 ], [ %171, %170 ]\l  %175 = phi i32 [ %191, %173 ], [ 0, %170 ]\l  %176 = mul nsw i32 %174, %38\l  %177 = add nsw i32 %176, 1\l  %178 = sext i32 %177 to i64\l  %179 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %178\l  %180 = load i8, i8 addrspace(1)* %179, align 1, !tbaa !4\l  %181 = add nsw i32 %176, %0\l  %182 = add nsw i32 %181, 1\l  %183 = sext i32 %182 to i64\l  %184 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %183\l  store i8 %180, i8 addrspace(1)* %184, align 1, !tbaa !4\l  %185 = sext i32 %181 to i64\l  %186 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %185\l  %187 = load i8, i8 addrspace(1)* %186, align 1, !tbaa !4\l  %188 = sext i32 %176 to i64\l  %189 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %188\l  store i8 %187, i8 addrspace(1)* %189, align 1, !tbaa !4\l  %190 = add nuw i32 %174, 1\l  %191 = add i32 %175, 1\l  %192 = icmp eq i32 %191, %40\l  br i1 %192, label %193, label %173, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x4546ff0:s0 -> Node0x45413c0;
	Node0x4546ff0:s1 -> Node0x4546ff0;
	Node0x45413c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%193:\l193:                                              \l  ret void\l}"];
}
