digraph "CFG for 'CudaKernelTextureCubeStrobelight' function" {
	label="CFG for 'CudaKernelTextureCubeStrobelight' function";

	Node0x4e6c920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 4, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 2, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %23 = add i32 %21, %22\l  %24 = icmp slt i32 %15, %1\l  %25 = icmp slt i32 %23, %2\l  %26 = select i1 %24, i1 %25, i1 false\l  br i1 %26, label %27, label %220\l|{<s0>T|<s1>F}}"];
	Node0x4e6c920:s0 -> Node0x4e703a0;
	Node0x4e6c920:s1 -> Node0x4e70430;
	Node0x4e703a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%27:\l27:                                               \l  %28 = sext i32 %23 to i64\l  %29 = mul i64 %28, %3\l  %30 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %29\l  %31 = shl nsw i32 %15, 2\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i8, i8 addrspace(1)* %30, i64 %32\l  %34 = sitofp i32 %15 to float\l  %35 = fmul contract float %34, 2.000000e+00\l  %36 = sitofp i32 %1 to float\l  %37 = fdiv contract float %35, %36\l  %38 = fadd contract float %37, -1.000000e+00\l  %39 = sitofp i32 %23 to float\l  %40 = fmul contract float %39, 2.000000e+00\l  %41 = sitofp i32 %2 to float\l  %42 = fdiv contract float %40, %41\l  %43 = fadd contract float %42, -1.000000e+00\l  %44 = fmul contract float %38, %38\l  %45 = fmul contract float %43, %43\l  %46 = fadd contract float %44, %45\l  %47 = fcmp olt float %46, 0x39F0000000000000\l  %48 = select i1 %47, float 0x41F0000000000000, float 1.000000e+00\l  %49 = fmul float %46, %48\l  %50 = tail call float @llvm.sqrt.f32(float %49)\l  %51 = bitcast float %50 to i32\l  %52 = add nsw i32 %51, -1\l  %53 = bitcast i32 %52 to float\l  %54 = add nsw i32 %51, 1\l  %55 = bitcast i32 %54 to float\l  %56 = tail call i1 @llvm.amdgcn.class.f32(float %49, i32 608)\l  %57 = select i1 %47, float 0x3EF0000000000000, float 1.000000e+00\l  %58 = fneg float %55\l  %59 = tail call float @llvm.fma.f32(float %58, float %50, float %49)\l  %60 = fcmp ogt float %59, 0.000000e+00\l  %61 = fneg float %53\l  %62 = tail call float @llvm.fma.f32(float %61, float %50, float %49)\l  %63 = fcmp ole float %62, 0.000000e+00\l  %64 = select i1 %63, float %53, float %50\l  %65 = select i1 %60, float %55, float %64\l  %66 = fmul float %57, %65\l  %67 = select i1 %56, float %49, float %66\l  %68 = fmul contract float %67, 0x401921FB60000000\l  %69 = fadd contract float %68, %5\l  %70 = tail call float @llvm.fabs.f32(float %69)\l  %71 = fcmp olt float %70, 1.310720e+05\l  br i1 %71, label %72, label %79\l|{<s0>T|<s1>F}}"];
	Node0x4e703a0:s0 -> Node0x4e734e0;
	Node0x4e703a0:s1 -> Node0x4e73570;
	Node0x4e734e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%72:\l72:                                               \l  %73 = fmul float %70, 0x3FE45F3060000000\l  %74 = tail call float @llvm.rint.f32(float %73)\l  %75 = tail call float @llvm.fma.f32(float %74, float 0xBFF921FB40000000,\l... float %70)\l  %76 = tail call float @llvm.fma.f32(float %74, float 0xBE74442D00000000,\l... float %75)\l  %77 = tail call float @llvm.fma.f32(float %74, float 0xBCF8469880000000,\l... float %76)\l  %78 = fptosi float %74 to i32\l  br label %185\l}"];
	Node0x4e734e0 -> Node0x4e73e50;
	Node0x4e73570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%79:\l79:                                               \l  %80 = bitcast float %70 to i32\l  %81 = lshr i32 %80, 23\l  %82 = and i32 %80, 8388607\l  %83 = or i32 %82, 8388608\l  %84 = zext i32 %83 to i64\l  %85 = mul nuw nsw i64 %84, 4266746795\l  %86 = trunc i64 %85 to i32\l  %87 = lshr i64 %85, 32\l  %88 = mul nuw nsw i64 %84, 1011060801\l  %89 = add nuw nsw i64 %87, %88\l  %90 = trunc i64 %89 to i32\l  %91 = lshr i64 %89, 32\l  %92 = mul nuw nsw i64 %84, 3680671129\l  %93 = add nuw nsw i64 %91, %92\l  %94 = trunc i64 %93 to i32\l  %95 = lshr i64 %93, 32\l  %96 = mul nuw nsw i64 %84, 4113882560\l  %97 = add nuw nsw i64 %95, %96\l  %98 = trunc i64 %97 to i32\l  %99 = lshr i64 %97, 32\l  %100 = mul nuw nsw i64 %84, 4230436817\l  %101 = add nuw nsw i64 %99, %100\l  %102 = trunc i64 %101 to i32\l  %103 = lshr i64 %101, 32\l  %104 = mul nuw nsw i64 %84, 1313084713\l  %105 = add nuw nsw i64 %103, %104\l  %106 = trunc i64 %105 to i32\l  %107 = lshr i64 %105, 32\l  %108 = mul nuw nsw i64 %84, 2734261102\l  %109 = add nuw nsw i64 %107, %108\l  %110 = trunc i64 %109 to i32\l  %111 = lshr i64 %109, 32\l  %112 = trunc i64 %111 to i32\l  %113 = add nsw i32 %81, -120\l  %114 = icmp ugt i32 %113, 63\l  %115 = select i1 %114, i32 %106, i32 %112\l  %116 = select i1 %114, i32 %102, i32 %110\l  %117 = select i1 %114, i32 %98, i32 %106\l  %118 = select i1 %114, i32 %94, i32 %102\l  %119 = select i1 %114, i32 %90, i32 %98\l  %120 = select i1 %114, i32 %86, i32 %94\l  %121 = select i1 %114, i32 -64, i32 0\l  %122 = add nsw i32 %121, %113\l  %123 = icmp ugt i32 %122, 31\l  %124 = select i1 %123, i32 %116, i32 %115\l  %125 = select i1 %123, i32 %117, i32 %116\l  %126 = select i1 %123, i32 %118, i32 %117\l  %127 = select i1 %123, i32 %119, i32 %118\l  %128 = select i1 %123, i32 %120, i32 %119\l  %129 = select i1 %123, i32 -32, i32 0\l  %130 = add nsw i32 %129, %122\l  %131 = icmp ugt i32 %130, 31\l  %132 = select i1 %131, i32 %125, i32 %124\l  %133 = select i1 %131, i32 %126, i32 %125\l  %134 = select i1 %131, i32 %127, i32 %126\l  %135 = select i1 %131, i32 %128, i32 %127\l  %136 = select i1 %131, i32 -32, i32 0\l  %137 = add nsw i32 %136, %130\l  %138 = icmp eq i32 %137, 0\l  %139 = sub nsw i32 32, %137\l  %140 = tail call i32 @llvm.fshr.i32(i32 %132, i32 %133, i32 %139)\l  %141 = tail call i32 @llvm.fshr.i32(i32 %133, i32 %134, i32 %139)\l  %142 = tail call i32 @llvm.fshr.i32(i32 %134, i32 %135, i32 %139)\l  %143 = select i1 %138, i32 %132, i32 %140\l  %144 = select i1 %138, i32 %133, i32 %141\l  %145 = select i1 %138, i32 %134, i32 %142\l  %146 = lshr i32 %143, 29\l  %147 = tail call i32 @llvm.fshl.i32(i32 %143, i32 %144, i32 2)\l  %148 = tail call i32 @llvm.fshl.i32(i32 %144, i32 %145, i32 2)\l  %149 = tail call i32 @llvm.fshl.i32(i32 %145, i32 %135, i32 2)\l  %150 = and i32 %146, 1\l  %151 = sub nsw i32 0, %150\l  %152 = shl i32 %146, 31\l  %153 = xor i32 %147, %151\l  %154 = xor i32 %148, %151\l  %155 = xor i32 %149, %151\l  %156 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 false), !range !7\l  %157 = sub nsw i32 31, %156\l  %158 = tail call i32 @llvm.fshr.i32(i32 %153, i32 %154, i32 %157)\l  %159 = tail call i32 @llvm.fshr.i32(i32 %154, i32 %155, i32 %157)\l  %160 = shl nuw nsw i32 %156, 23\l  %161 = sub nuw nsw i32 1056964608, %160\l  %162 = lshr i32 %158, 9\l  %163 = or i32 %162, %161\l  %164 = or i32 %163, %152\l  %165 = bitcast i32 %164 to float\l  %166 = tail call i32 @llvm.fshl.i32(i32 %158, i32 %159, i32 23)\l  %167 = tail call i32 @llvm.ctlz.i32(i32 %166, i1 false), !range !7\l  %168 = fmul float %165, 0x3FF921FB40000000\l  %169 = add nuw nsw i32 %167, %156\l  %170 = shl nuw nsw i32 %169, 23\l  %171 = sub nuw nsw i32 855638016, %170\l  %172 = sub nsw i32 31, %167\l  %173 = tail call i32 @llvm.fshr.i32(i32 %166, i32 %159, i32 %172)\l  %174 = lshr i32 %173, 9\l  %175 = or i32 %171, %174\l  %176 = or i32 %175, %152\l  %177 = bitcast i32 %176 to float\l  %178 = fneg float %168\l  %179 = tail call float @llvm.fma.f32(float %165, float 0x3FF921FB40000000,\l... float %178)\l  %180 = tail call float @llvm.fma.f32(float %165, float 0x3E74442D00000000,\l... float %179)\l  %181 = tail call float @llvm.fma.f32(float %177, float 0x3FF921FB40000000,\l... float %180)\l  %182 = fadd float %168, %181\l  %183 = lshr i32 %143, 30\l  %184 = add nuw nsw i32 %150, %183\l  br label %185\l}"];
	Node0x4e73570 -> Node0x4e73e50;
	Node0x4e73e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%185:\l185:                                              \l  %186 = phi float [ %77, %72 ], [ %182, %79 ]\l  %187 = phi i32 [ %78, %72 ], [ %184, %79 ]\l  %188 = fmul float %186, %186\l  %189 = tail call float @llvm.fmuladd.f32(float %188, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %190 = tail call float @llvm.fmuladd.f32(float %188, float %189, float\l... 0xBFC55553A0000000)\l  %191 = fmul float %188, %190\l  %192 = tail call float @llvm.fmuladd.f32(float %186, float %191, float %186)\l  %193 = tail call float @llvm.fmuladd.f32(float %188, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %194 = tail call float @llvm.fmuladd.f32(float %188, float %193, float\l... 0x3FA5557EE0000000)\l  %195 = tail call float @llvm.fmuladd.f32(float %188, float %194, float\l... 0xBFE0000080000000)\l  %196 = tail call float @llvm.fmuladd.f32(float %188, float %195, float\l... 1.000000e+00)\l  %197 = fneg float %192\l  %198 = and i32 %187, 1\l  %199 = icmp eq i32 %198, 0\l  %200 = select i1 %199, float %196, float %197\l  %201 = bitcast float %200 to i32\l  %202 = shl i32 %187, 30\l  %203 = and i32 %202, -2147483648\l  %204 = xor i32 %203, %201\l  %205 = bitcast i32 %204 to float\l  %206 = fmul contract float %205, 0x3FD99999A0000000\l  %207 = fadd contract float %206, 0x3FE3333340000000\l  %208 = fmul contract float %207, 2.550000e+02\l  %209 = fptoui float %208 to i8\l  %210 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 3\l  store i8 -1, i8 addrspace(1)* %210, align 1, !tbaa !8\l  %211 = and i32 %4, 1\l  %212 = icmp eq i32 %211, 0\l  %213 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 2\l  %214 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 1\l  %215 = sdiv i32 %4, 2\l  %216 = sext i32 %215 to i64\l  %217 = getelementptr inbounds i8, i8 addrspace(1)* %33, i64 %216\l  %218 = select i1 %212, i8 %209, i8 0\l  %219 = select i1 %212, i8 0, i8 %209\l  store i8 %218, i8 addrspace(1)* %213, align 1, !tbaa !8\l  store i8 %218, i8 addrspace(1)* %214, align 1, !tbaa !8\l  store i8 %218, i8 addrspace(1)* %33, align 1, !tbaa !8\l  store i8 %219, i8 addrspace(1)* %217, align 1, !tbaa !8\l  br label %220\l}"];
	Node0x4e73e50 -> Node0x4e70430;
	Node0x4e70430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%220:\l220:                                              \l  ret void\l}"];
}
