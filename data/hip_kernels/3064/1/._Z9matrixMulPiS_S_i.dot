digraph "CFG for '_Z9matrixMulPiS_S_i' function" {
	label="CFG for '_Z9matrixMulPiS_S_i' function";

	Node0x5a94ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = icmp slt i32 %13, %3\l  %23 = icmp slt i32 %21, %3\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %163\l|{<s0>T|<s1>F}}"];
	Node0x5a94ad0:s0 -> Node0x5a98570;
	Node0x5a94ad0:s1 -> Node0x5a98600;
	Node0x5a98570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%25:\l25:                                               \l  %26 = icmp sgt i32 %3, 0\l  %27 = mul nsw i32 %13, %3\l  br i1 %26, label %28, label %56\l|{<s0>T|<s1>F}}"];
	Node0x5a98570:s0 -> Node0x5a98890;
	Node0x5a98570:s1 -> Node0x5a988e0;
	Node0x5a98890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = and i32 %3, 7\l  %30 = icmp ult i32 %3, 8\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x5a98890:s0 -> Node0x5a98ba0;
	Node0x5a98890:s1 -> Node0x5a98bf0;
	Node0x5a98bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%31:\l31:                                               \l  %32 = and i32 %3, -8\l  br label %61\l}"];
	Node0x5a98bf0 -> Node0x5a96c40;
	Node0x5a98ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%33:\l33:                                               \l  %34 = phi i32 [ undef, %28 ], [ %159, %61 ]\l  %35 = phi i32 [ 0, %28 ], [ %160, %61 ]\l  %36 = phi i32 [ 0, %28 ], [ %159, %61 ]\l  %37 = icmp eq i32 %29, 0\l  br i1 %37, label %56, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5a98ba0:s0 -> Node0x5a988e0;
	Node0x5a98ba0:s1 -> Node0x5a99720;
	Node0x5a99720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %53, %38 ], [ %35, %33 ]\l  %40 = phi i32 [ %52, %38 ], [ %36, %33 ]\l  %41 = phi i32 [ %54, %38 ], [ 0, %33 ]\l  %42 = add nsw i32 %39, %27\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %43\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %46 = mul nsw i32 %39, %3\l  %47 = add nsw i32 %46, %21\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %48\l  %50 = load i32, i32 addrspace(1)* %49, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %51 = mul nsw i32 %50, %45\l  %52 = add nsw i32 %51, %40\l  %53 = add nuw nsw i32 %39, 1\l  %54 = add i32 %41, 1\l  %55 = icmp eq i32 %54, %29\l  br i1 %55, label %56, label %38, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5a99720:s0 -> Node0x5a988e0;
	Node0x5a99720:s1 -> Node0x5a99720;
	Node0x5a988e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%56:\l56:                                               \l  %57 = phi i32 [ 0, %25 ], [ %34, %33 ], [ %52, %38 ]\l  %58 = add nsw i32 %27, %21\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %59\l  store i32 %57, i32 addrspace(1)* %60, align 4, !tbaa !7\l  br label %163\l}"];
	Node0x5a988e0 -> Node0x5a98600;
	Node0x5a96c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%61:\l61:                                               \l  %62 = phi i32 [ 0, %31 ], [ %160, %61 ]\l  %63 = phi i32 [ 0, %31 ], [ %159, %61 ]\l  %64 = phi i32 [ 0, %31 ], [ %161, %61 ]\l  %65 = add nsw i32 %62, %27\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %69 = mul nsw i32 %62, %3\l  %70 = add nsw i32 %69, %21\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %71\l  %73 = load i32, i32 addrspace(1)* %72, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %74 = mul nsw i32 %73, %68\l  %75 = add nsw i32 %74, %63\l  %76 = or i32 %62, 1\l  %77 = add nsw i32 %76, %27\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %78\l  %80 = load i32, i32 addrspace(1)* %79, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %81 = mul nsw i32 %76, %3\l  %82 = add nsw i32 %81, %21\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %83\l  %85 = load i32, i32 addrspace(1)* %84, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %86 = mul nsw i32 %85, %80\l  %87 = add nsw i32 %86, %75\l  %88 = or i32 %62, 2\l  %89 = add nsw i32 %88, %27\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %90\l  %92 = load i32, i32 addrspace(1)* %91, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %93 = mul nsw i32 %88, %3\l  %94 = add nsw i32 %93, %21\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %95\l  %97 = load i32, i32 addrspace(1)* %96, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %98 = mul nsw i32 %97, %92\l  %99 = add nsw i32 %98, %87\l  %100 = or i32 %62, 3\l  %101 = add nsw i32 %100, %27\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %102\l  %104 = load i32, i32 addrspace(1)* %103, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %105 = mul nsw i32 %100, %3\l  %106 = add nsw i32 %105, %21\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %107\l  %109 = load i32, i32 addrspace(1)* %108, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %110 = mul nsw i32 %109, %104\l  %111 = add nsw i32 %110, %99\l  %112 = or i32 %62, 4\l  %113 = add nsw i32 %112, %27\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = mul nsw i32 %112, %3\l  %118 = add nsw i32 %117, %21\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %119\l  %121 = load i32, i32 addrspace(1)* %120, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %122 = mul nsw i32 %121, %116\l  %123 = add nsw i32 %122, %111\l  %124 = or i32 %62, 5\l  %125 = add nsw i32 %124, %27\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %126\l  %128 = load i32, i32 addrspace(1)* %127, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %129 = mul nsw i32 %124, %3\l  %130 = add nsw i32 %129, %21\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %131\l  %133 = load i32, i32 addrspace(1)* %132, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %134 = mul nsw i32 %133, %128\l  %135 = add nsw i32 %134, %123\l  %136 = or i32 %62, 6\l  %137 = add nsw i32 %136, %27\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %138\l  %140 = load i32, i32 addrspace(1)* %139, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %141 = mul nsw i32 %136, %3\l  %142 = add nsw i32 %141, %21\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %143\l  %145 = load i32, i32 addrspace(1)* %144, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %146 = mul nsw i32 %145, %140\l  %147 = add nsw i32 %146, %135\l  %148 = or i32 %62, 7\l  %149 = add nsw i32 %148, %27\l  %150 = sext i32 %149 to i64\l  %151 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %150\l  %152 = load i32, i32 addrspace(1)* %151, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %153 = mul nsw i32 %148, %3\l  %154 = add nsw i32 %153, %21\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %155\l  %157 = load i32, i32 addrspace(1)* %156, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %158 = mul nsw i32 %157, %152\l  %159 = add nsw i32 %158, %147\l  %160 = add nuw nsw i32 %62, 8\l  %161 = add i32 %64, 8\l  %162 = icmp eq i32 %161, %32\l  br i1 %162, label %33, label %61, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5a96c40:s0 -> Node0x5a98ba0;
	Node0x5a96c40:s1 -> Node0x5a96c40;
	Node0x5a98600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%163:\l163:                                              \l  ret void\l}"];
}
