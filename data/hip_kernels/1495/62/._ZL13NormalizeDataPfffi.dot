digraph "CFG for '_ZL13NormalizeDataPfffi' function" {
	label="CFG for '_ZL13NormalizeDataPfffi' function";

	Node0x64812f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 12\l  %8 = bitcast i8 addrspace(4)* %7 to i32 addrspace(4)*\l  %9 = load i32, i32 addrspace(4)* %8, align 4, !tbaa !4\l  %10 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !13, !invariant.load\l... !14\l  %13 = zext i16 %12 to i32\l  %14 = udiv i32 %9, %13\l  %15 = mul i32 %14, %13\l  %16 = icmp ugt i32 %9, %15\l  %17 = zext i1 %16 to i32\l  %18 = add i32 %14, %17\l  %19 = mul i32 %18, %5\l  %20 = getelementptr inbounds i8, i8 addrspace(4)* %6, i64 20\l  %21 = bitcast i8 addrspace(4)* %20 to i32 addrspace(4)*\l  %22 = load i32, i32 addrspace(4)* %21, align 4, !tbaa !15\l  %23 = getelementptr i8, i8 addrspace(4)* %6, i64 8\l  %24 = bitcast i8 addrspace(4)* %23 to i16 addrspace(4)*\l  %25 = load i16, i16 addrspace(4)* %24, align 4, !range !13, !invariant.load\l... !14\l  %26 = zext i16 %25 to i32\l  %27 = udiv i32 %22, %26\l  %28 = mul i32 %27, %26\l  %29 = icmp ugt i32 %22, %28\l  %30 = zext i1 %29 to i32\l  %31 = add i32 %27, %30\l  %32 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %33 = add i32 %19, %32\l  %34 = mul i32 %31, %33\l  %35 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %36 = add i32 %34, %35\l  %37 = mul i32 %36, %13\l  %38 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %39 = add i32 %37, %38\l  %40 = icmp slt i32 %39, %3\l  br i1 %40, label %494, label %41\l|{<s0>T|<s1>F}}"];
	Node0x64812f0:s0 -> Node0x64853f0;
	Node0x64812f0:s1 -> Node0x6485480;
	Node0x6485480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%41:\l41:                                               \l  %42 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %43 = getelementptr inbounds i8, i8 addrspace(4)* %42, i64 24\l  %44 = bitcast i8 addrspace(4)* %43 to i64 addrspace(4)*\l  %45 = load i64, i64 addrspace(4)* %44, align 8, !tbaa !17\l  %46 = inttoptr i64 %45 to i8 addrspace(1)*\l  %47 = addrspacecast i8 addrspace(1)* %46 to i8*\l  %48 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %49 = extractelement \<2 x i64\> %48, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([29 x i8], [29 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %50, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6485480:s0 -> Node0x64863b0;
	Node0x6485480:s1 -> Node0x6486da0;
	Node0x64863b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%50:\l50:                                               \l  %51 = and i64 %49, -227\l  %52 = or i64 %51, 34\l  %53 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %52, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %507\l}"];
	Node0x64863b0 -> Node0x6487060;
	Node0x6486da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%54:\l54:                                               \l  %55 = and i64 %49, -3\l  %56 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %55, i64 0\l  br label %57\l}"];
	Node0x6486da0 -> Node0x6487b10;
	Node0x6487b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%57:\l57:                                               \l  %58 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([29 x i8], [29 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([29 x i8], [29 x i8] addrspace(4)*\l... @.str, i64 0, i64 28) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([29 x i8]* addrspacecast ([29 x i8] addrspace(4)* @.str to [29 x i8]*) to\l... i64)), i64 1))), %54 ], [ %491, %483 ]\l  %59 = phi i8 addrspace(4)* [ getelementptr inbounds ([29 x i8], [29 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %54 ], [ %492, %483 ]\l  %60 = phi \<2 x i64\> [ %56, %54 ], [ %490, %483 ]\l  %61 = icmp ugt i64 %58, 56\l  %62 = extractelement \<2 x i64\> %60, i64 0\l  %63 = or i64 %62, 2\l  %64 = insertelement \<2 x i64\> poison, i64 %63, i64 0\l  %65 = select i1 %61, \<2 x i64\> %60, \<2 x i64\> %64\l  %66 = tail call i64 @llvm.umin.i64(i64 %58, i64 56)\l  %67 = trunc i64 %66 to i32\l  %68 = extractelement \<2 x i64\> %65, i64 0\l  %69 = icmp ugt i32 %67, 7\l  br i1 %69, label %72, label %70\l|{<s0>T|<s1>F}}"];
	Node0x6487b10:s0 -> Node0x6488cd0;
	Node0x6487b10:s1 -> Node0x6488d60;
	Node0x6488d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%70:\l70:                                               \l  %71 = icmp eq i32 %67, 0\l  br i1 %71, label %125, label %112\l|{<s0>T|<s1>F}}"];
	Node0x6488d60:s0 -> Node0x6488f60;
	Node0x6488d60:s1 -> Node0x6488fb0;
	Node0x6488cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%72:\l72:                                               \l  %73 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !18\l  %74 = zext i8 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 1\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !18\l  %77 = zext i8 %76 to i64\l  %78 = shl nuw nsw i64 %77, 8\l  %79 = or i64 %78, %74\l  %80 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 2\l  %81 = load i8, i8 addrspace(4)* %80, align 1, !tbaa !18\l  %82 = zext i8 %81 to i64\l  %83 = shl nuw nsw i64 %82, 16\l  %84 = or i64 %79, %83\l  %85 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 3\l  %86 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !18\l  %87 = zext i8 %86 to i64\l  %88 = shl nuw nsw i64 %87, 24\l  %89 = or i64 %84, %88\l  %90 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 4\l  %91 = load i8, i8 addrspace(4)* %90, align 1, !tbaa !18\l  %92 = zext i8 %91 to i64\l  %93 = shl nuw nsw i64 %92, 32\l  %94 = or i64 %89, %93\l  %95 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 5\l  %96 = load i8, i8 addrspace(4)* %95, align 1, !tbaa !18\l  %97 = zext i8 %96 to i64\l  %98 = shl nuw nsw i64 %97, 40\l  %99 = or i64 %94, %98\l  %100 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 6\l  %101 = load i8, i8 addrspace(4)* %100, align 1, !tbaa !18\l  %102 = zext i8 %101 to i64\l  %103 = shl nuw nsw i64 %102, 48\l  %104 = or i64 %99, %103\l  %105 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 7\l  %106 = load i8, i8 addrspace(4)* %105, align 1, !tbaa !18\l  %107 = zext i8 %106 to i64\l  %108 = shl nuw i64 %107, 56\l  %109 = or i64 %104, %108\l  %110 = add nsw i32 %67, -8\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 8\l  br label %125\l}"];
	Node0x6488cd0 -> Node0x6488f60;
	Node0x6488fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%112:\l112:                                              \l  %113 = phi i32 [ %123, %112 ], [ 0, %70 ]\l  %114 = phi i64 [ %122, %112 ], [ 0, %70 ]\l  %115 = zext i32 %113 to i64\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 %115\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !18\l  %118 = zext i8 %117 to i64\l  %119 = shl i32 %113, 3\l  %120 = zext i32 %119 to i64\l  %121 = shl nuw i64 %118, %120\l  %122 = or i64 %121, %114\l  %123 = add nuw nsw i32 %113, 1\l  %124 = icmp eq i32 %123, %67\l  br i1 %124, label %125, label %112, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x6488fb0:s0 -> Node0x6488f60;
	Node0x6488fb0:s1 -> Node0x6488fb0;
	Node0x6488f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%125:\l125:                                              \l  %126 = phi i8 addrspace(4)* [ %111, %72 ], [ %59, %70 ], [ %59, %112 ]\l  %127 = phi i32 [ %110, %72 ], [ 0, %70 ], [ 0, %112 ]\l  %128 = phi i64 [ %109, %72 ], [ 0, %70 ], [ %122, %112 ]\l  %129 = icmp ugt i32 %127, 7\l  br i1 %129, label %132, label %130\l|{<s0>T|<s1>F}}"];
	Node0x6488f60:s0 -> Node0x6488680;
	Node0x6488f60:s1 -> Node0x64886d0;
	Node0x64886d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%130:\l130:                                              \l  %131 = icmp eq i32 %127, 0\l  br i1 %131, label %185, label %172\l|{<s0>T|<s1>F}}"];
	Node0x64886d0:s0 -> Node0x64888a0;
	Node0x64886d0:s1 -> Node0x64888f0;
	Node0x6488680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%132:\l132:                                              \l  %133 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !18\l  %134 = zext i8 %133 to i64\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 1\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !18\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw nsw i64 %137, 8\l  %139 = or i64 %138, %134\l  %140 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 2\l  %141 = load i8, i8 addrspace(4)* %140, align 1, !tbaa !18\l  %142 = zext i8 %141 to i64\l  %143 = shl nuw nsw i64 %142, 16\l  %144 = or i64 %139, %143\l  %145 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 3\l  %146 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !18\l  %147 = zext i8 %146 to i64\l  %148 = shl nuw nsw i64 %147, 24\l  %149 = or i64 %144, %148\l  %150 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 4\l  %151 = load i8, i8 addrspace(4)* %150, align 1, !tbaa !18\l  %152 = zext i8 %151 to i64\l  %153 = shl nuw nsw i64 %152, 32\l  %154 = or i64 %149, %153\l  %155 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 5\l  %156 = load i8, i8 addrspace(4)* %155, align 1, !tbaa !18\l  %157 = zext i8 %156 to i64\l  %158 = shl nuw nsw i64 %157, 40\l  %159 = or i64 %154, %158\l  %160 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 6\l  %161 = load i8, i8 addrspace(4)* %160, align 1, !tbaa !18\l  %162 = zext i8 %161 to i64\l  %163 = shl nuw nsw i64 %162, 48\l  %164 = or i64 %159, %163\l  %165 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 7\l  %166 = load i8, i8 addrspace(4)* %165, align 1, !tbaa !18\l  %167 = zext i8 %166 to i64\l  %168 = shl nuw i64 %167, 56\l  %169 = or i64 %164, %168\l  %170 = add nsw i32 %127, -8\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 8\l  br label %185\l}"];
	Node0x6488680 -> Node0x64888a0;
	Node0x64888f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%172:\l172:                                              \l  %173 = phi i32 [ %183, %172 ], [ 0, %130 ]\l  %174 = phi i64 [ %182, %172 ], [ 0, %130 ]\l  %175 = zext i32 %173 to i64\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %126, i64 %175\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !18\l  %178 = zext i8 %177 to i64\l  %179 = shl i32 %173, 3\l  %180 = zext i32 %179 to i64\l  %181 = shl nuw i64 %178, %180\l  %182 = or i64 %181, %174\l  %183 = add nuw nsw i32 %173, 1\l  %184 = icmp eq i32 %183, %127\l  br i1 %184, label %185, label %172\l|{<s0>T|<s1>F}}"];
	Node0x64888f0:s0 -> Node0x64888a0;
	Node0x64888f0:s1 -> Node0x64888f0;
	Node0x64888a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%185:\l185:                                              \l  %186 = phi i8 addrspace(4)* [ %171, %132 ], [ %126, %130 ], [ %126, %172 ]\l  %187 = phi i32 [ %170, %132 ], [ 0, %130 ], [ 0, %172 ]\l  %188 = phi i64 [ %169, %132 ], [ 0, %130 ], [ %182, %172 ]\l  %189 = icmp ugt i32 %187, 7\l  br i1 %189, label %192, label %190\l|{<s0>T|<s1>F}}"];
	Node0x64888a0:s0 -> Node0x648e1a0;
	Node0x64888a0:s1 -> Node0x648e1f0;
	Node0x648e1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%190:\l190:                                              \l  %191 = icmp eq i32 %187, 0\l  br i1 %191, label %245, label %232\l|{<s0>T|<s1>F}}"];
	Node0x648e1f0:s0 -> Node0x648e380;
	Node0x648e1f0:s1 -> Node0x648e3d0;
	Node0x648e1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%192:\l192:                                              \l  %193 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !18\l  %194 = zext i8 %193 to i64\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 1\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !18\l  %197 = zext i8 %196 to i64\l  %198 = shl nuw nsw i64 %197, 8\l  %199 = or i64 %198, %194\l  %200 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 2\l  %201 = load i8, i8 addrspace(4)* %200, align 1, !tbaa !18\l  %202 = zext i8 %201 to i64\l  %203 = shl nuw nsw i64 %202, 16\l  %204 = or i64 %199, %203\l  %205 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 3\l  %206 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !18\l  %207 = zext i8 %206 to i64\l  %208 = shl nuw nsw i64 %207, 24\l  %209 = or i64 %204, %208\l  %210 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 4\l  %211 = load i8, i8 addrspace(4)* %210, align 1, !tbaa !18\l  %212 = zext i8 %211 to i64\l  %213 = shl nuw nsw i64 %212, 32\l  %214 = or i64 %209, %213\l  %215 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 5\l  %216 = load i8, i8 addrspace(4)* %215, align 1, !tbaa !18\l  %217 = zext i8 %216 to i64\l  %218 = shl nuw nsw i64 %217, 40\l  %219 = or i64 %214, %218\l  %220 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 6\l  %221 = load i8, i8 addrspace(4)* %220, align 1, !tbaa !18\l  %222 = zext i8 %221 to i64\l  %223 = shl nuw nsw i64 %222, 48\l  %224 = or i64 %219, %223\l  %225 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 7\l  %226 = load i8, i8 addrspace(4)* %225, align 1, !tbaa !18\l  %227 = zext i8 %226 to i64\l  %228 = shl nuw i64 %227, 56\l  %229 = or i64 %224, %228\l  %230 = add nsw i32 %187, -8\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 8\l  br label %245\l}"];
	Node0x648e1a0 -> Node0x648e380;
	Node0x648e3d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%232:\l232:                                              \l  %233 = phi i32 [ %243, %232 ], [ 0, %190 ]\l  %234 = phi i64 [ %242, %232 ], [ 0, %190 ]\l  %235 = zext i32 %233 to i64\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %186, i64 %235\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !18\l  %238 = zext i8 %237 to i64\l  %239 = shl i32 %233, 3\l  %240 = zext i32 %239 to i64\l  %241 = shl nuw i64 %238, %240\l  %242 = or i64 %241, %234\l  %243 = add nuw nsw i32 %233, 1\l  %244 = icmp eq i32 %243, %187\l  br i1 %244, label %245, label %232\l|{<s0>T|<s1>F}}"];
	Node0x648e3d0:s0 -> Node0x648e380;
	Node0x648e3d0:s1 -> Node0x648e3d0;
	Node0x648e380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%245:\l245:                                              \l  %246 = phi i8 addrspace(4)* [ %231, %192 ], [ %186, %190 ], [ %186, %232 ]\l  %247 = phi i32 [ %230, %192 ], [ 0, %190 ], [ 0, %232 ]\l  %248 = phi i64 [ %229, %192 ], [ 0, %190 ], [ %242, %232 ]\l  %249 = icmp ugt i32 %247, 7\l  br i1 %249, label %252, label %250\l|{<s0>T|<s1>F}}"];
	Node0x648e380:s0 -> Node0x64903f0;
	Node0x648e380:s1 -> Node0x6490440;
	Node0x6490440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%250:\l250:                                              \l  %251 = icmp eq i32 %247, 0\l  br i1 %251, label %305, label %292\l|{<s0>T|<s1>F}}"];
	Node0x6490440:s0 -> Node0x64905d0;
	Node0x6490440:s1 -> Node0x6490620;
	Node0x64903f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%252:\l252:                                              \l  %253 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !18\l  %254 = zext i8 %253 to i64\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 1\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !18\l  %257 = zext i8 %256 to i64\l  %258 = shl nuw nsw i64 %257, 8\l  %259 = or i64 %258, %254\l  %260 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 2\l  %261 = load i8, i8 addrspace(4)* %260, align 1, !tbaa !18\l  %262 = zext i8 %261 to i64\l  %263 = shl nuw nsw i64 %262, 16\l  %264 = or i64 %259, %263\l  %265 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 3\l  %266 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !18\l  %267 = zext i8 %266 to i64\l  %268 = shl nuw nsw i64 %267, 24\l  %269 = or i64 %264, %268\l  %270 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 4\l  %271 = load i8, i8 addrspace(4)* %270, align 1, !tbaa !18\l  %272 = zext i8 %271 to i64\l  %273 = shl nuw nsw i64 %272, 32\l  %274 = or i64 %269, %273\l  %275 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 5\l  %276 = load i8, i8 addrspace(4)* %275, align 1, !tbaa !18\l  %277 = zext i8 %276 to i64\l  %278 = shl nuw nsw i64 %277, 40\l  %279 = or i64 %274, %278\l  %280 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 6\l  %281 = load i8, i8 addrspace(4)* %280, align 1, !tbaa !18\l  %282 = zext i8 %281 to i64\l  %283 = shl nuw nsw i64 %282, 48\l  %284 = or i64 %279, %283\l  %285 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 7\l  %286 = load i8, i8 addrspace(4)* %285, align 1, !tbaa !18\l  %287 = zext i8 %286 to i64\l  %288 = shl nuw i64 %287, 56\l  %289 = or i64 %284, %288\l  %290 = add nsw i32 %247, -8\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 8\l  br label %305\l}"];
	Node0x64903f0 -> Node0x64905d0;
	Node0x6490620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%292:\l292:                                              \l  %293 = phi i32 [ %303, %292 ], [ 0, %250 ]\l  %294 = phi i64 [ %302, %292 ], [ 0, %250 ]\l  %295 = zext i32 %293 to i64\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %246, i64 %295\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !18\l  %298 = zext i8 %297 to i64\l  %299 = shl i32 %293, 3\l  %300 = zext i32 %299 to i64\l  %301 = shl nuw i64 %298, %300\l  %302 = or i64 %301, %294\l  %303 = add nuw nsw i32 %293, 1\l  %304 = icmp eq i32 %303, %247\l  br i1 %304, label %305, label %292\l|{<s0>T|<s1>F}}"];
	Node0x6490620:s0 -> Node0x64905d0;
	Node0x6490620:s1 -> Node0x6490620;
	Node0x64905d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%305:\l305:                                              \l  %306 = phi i8 addrspace(4)* [ %291, %252 ], [ %246, %250 ], [ %246, %292 ]\l  %307 = phi i32 [ %290, %252 ], [ 0, %250 ], [ 0, %292 ]\l  %308 = phi i64 [ %289, %252 ], [ 0, %250 ], [ %302, %292 ]\l  %309 = icmp ugt i32 %307, 7\l  br i1 %309, label %312, label %310\l|{<s0>T|<s1>F}}"];
	Node0x64905d0:s0 -> Node0x6492e70;
	Node0x64905d0:s1 -> Node0x6492ec0;
	Node0x6492ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%310:\l310:                                              \l  %311 = icmp eq i32 %307, 0\l  br i1 %311, label %365, label %352\l|{<s0>T|<s1>F}}"];
	Node0x6492ec0:s0 -> Node0x6493050;
	Node0x6492ec0:s1 -> Node0x64930a0;
	Node0x6492e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%312:\l312:                                              \l  %313 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !18\l  %314 = zext i8 %313 to i64\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 1\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !18\l  %317 = zext i8 %316 to i64\l  %318 = shl nuw nsw i64 %317, 8\l  %319 = or i64 %318, %314\l  %320 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 2\l  %321 = load i8, i8 addrspace(4)* %320, align 1, !tbaa !18\l  %322 = zext i8 %321 to i64\l  %323 = shl nuw nsw i64 %322, 16\l  %324 = or i64 %319, %323\l  %325 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 3\l  %326 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !18\l  %327 = zext i8 %326 to i64\l  %328 = shl nuw nsw i64 %327, 24\l  %329 = or i64 %324, %328\l  %330 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 4\l  %331 = load i8, i8 addrspace(4)* %330, align 1, !tbaa !18\l  %332 = zext i8 %331 to i64\l  %333 = shl nuw nsw i64 %332, 32\l  %334 = or i64 %329, %333\l  %335 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 5\l  %336 = load i8, i8 addrspace(4)* %335, align 1, !tbaa !18\l  %337 = zext i8 %336 to i64\l  %338 = shl nuw nsw i64 %337, 40\l  %339 = or i64 %334, %338\l  %340 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 6\l  %341 = load i8, i8 addrspace(4)* %340, align 1, !tbaa !18\l  %342 = zext i8 %341 to i64\l  %343 = shl nuw nsw i64 %342, 48\l  %344 = or i64 %339, %343\l  %345 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 7\l  %346 = load i8, i8 addrspace(4)* %345, align 1, !tbaa !18\l  %347 = zext i8 %346 to i64\l  %348 = shl nuw i64 %347, 56\l  %349 = or i64 %344, %348\l  %350 = add nsw i32 %307, -8\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 8\l  br label %365\l}"];
	Node0x6492e70 -> Node0x6493050;
	Node0x64930a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%352:\l352:                                              \l  %353 = phi i32 [ %363, %352 ], [ 0, %310 ]\l  %354 = phi i64 [ %362, %352 ], [ 0, %310 ]\l  %355 = zext i32 %353 to i64\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %306, i64 %355\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !18\l  %358 = zext i8 %357 to i64\l  %359 = shl i32 %353, 3\l  %360 = zext i32 %359 to i64\l  %361 = shl nuw i64 %358, %360\l  %362 = or i64 %361, %354\l  %363 = add nuw nsw i32 %353, 1\l  %364 = icmp eq i32 %363, %307\l  br i1 %364, label %365, label %352\l|{<s0>T|<s1>F}}"];
	Node0x64930a0:s0 -> Node0x6493050;
	Node0x64930a0:s1 -> Node0x64930a0;
	Node0x6493050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%365:\l365:                                              \l  %366 = phi i8 addrspace(4)* [ %351, %312 ], [ %306, %310 ], [ %306, %352 ]\l  %367 = phi i32 [ %350, %312 ], [ 0, %310 ], [ 0, %352 ]\l  %368 = phi i64 [ %349, %312 ], [ 0, %310 ], [ %362, %352 ]\l  %369 = icmp ugt i32 %367, 7\l  br i1 %369, label %372, label %370\l|{<s0>T|<s1>F}}"];
	Node0x6493050:s0 -> Node0x6495ad0;
	Node0x6493050:s1 -> Node0x6495b20;
	Node0x6495b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%370:\l370:                                              \l  %371 = icmp eq i32 %367, 0\l  br i1 %371, label %425, label %412\l|{<s0>T|<s1>F}}"];
	Node0x6495b20:s0 -> Node0x6495cb0;
	Node0x6495b20:s1 -> Node0x6495d00;
	Node0x6495ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%372:\l372:                                              \l  %373 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !18\l  %374 = zext i8 %373 to i64\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 1\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !18\l  %377 = zext i8 %376 to i64\l  %378 = shl nuw nsw i64 %377, 8\l  %379 = or i64 %378, %374\l  %380 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 2\l  %381 = load i8, i8 addrspace(4)* %380, align 1, !tbaa !18\l  %382 = zext i8 %381 to i64\l  %383 = shl nuw nsw i64 %382, 16\l  %384 = or i64 %379, %383\l  %385 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 3\l  %386 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !18\l  %387 = zext i8 %386 to i64\l  %388 = shl nuw nsw i64 %387, 24\l  %389 = or i64 %384, %388\l  %390 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 4\l  %391 = load i8, i8 addrspace(4)* %390, align 1, !tbaa !18\l  %392 = zext i8 %391 to i64\l  %393 = shl nuw nsw i64 %392, 32\l  %394 = or i64 %389, %393\l  %395 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 5\l  %396 = load i8, i8 addrspace(4)* %395, align 1, !tbaa !18\l  %397 = zext i8 %396 to i64\l  %398 = shl nuw nsw i64 %397, 40\l  %399 = or i64 %394, %398\l  %400 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 6\l  %401 = load i8, i8 addrspace(4)* %400, align 1, !tbaa !18\l  %402 = zext i8 %401 to i64\l  %403 = shl nuw nsw i64 %402, 48\l  %404 = or i64 %399, %403\l  %405 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 7\l  %406 = load i8, i8 addrspace(4)* %405, align 1, !tbaa !18\l  %407 = zext i8 %406 to i64\l  %408 = shl nuw i64 %407, 56\l  %409 = or i64 %404, %408\l  %410 = add nsw i32 %367, -8\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 8\l  br label %425\l}"];
	Node0x6495ad0 -> Node0x6495cb0;
	Node0x6495d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%412:\l412:                                              \l  %413 = phi i32 [ %423, %412 ], [ 0, %370 ]\l  %414 = phi i64 [ %422, %412 ], [ 0, %370 ]\l  %415 = zext i32 %413 to i64\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %366, i64 %415\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !18\l  %418 = zext i8 %417 to i64\l  %419 = shl i32 %413, 3\l  %420 = zext i32 %419 to i64\l  %421 = shl nuw i64 %418, %420\l  %422 = or i64 %421, %414\l  %423 = add nuw nsw i32 %413, 1\l  %424 = icmp eq i32 %423, %367\l  br i1 %424, label %425, label %412\l|{<s0>T|<s1>F}}"];
	Node0x6495d00:s0 -> Node0x6495cb0;
	Node0x6495d00:s1 -> Node0x6495d00;
	Node0x6495cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%425:\l425:                                              \l  %426 = phi i8 addrspace(4)* [ %411, %372 ], [ %366, %370 ], [ %366, %412 ]\l  %427 = phi i32 [ %410, %372 ], [ 0, %370 ], [ 0, %412 ]\l  %428 = phi i64 [ %409, %372 ], [ 0, %370 ], [ %422, %412 ]\l  %429 = icmp ugt i32 %427, 7\l  br i1 %429, label %432, label %430\l|{<s0>T|<s1>F}}"];
	Node0x6495cb0:s0 -> Node0x6498330;
	Node0x6495cb0:s1 -> Node0x6498380;
	Node0x6498380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%430:\l430:                                              \l  %431 = icmp eq i32 %427, 0\l  br i1 %431, label %483, label %470\l|{<s0>T|<s1>F}}"];
	Node0x6498380:s0 -> Node0x6487fb0;
	Node0x6498380:s1 -> Node0x6498510;
	Node0x6498330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%432:\l432:                                              \l  %433 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !18\l  %434 = zext i8 %433 to i64\l  %435 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 1\l  %436 = load i8, i8 addrspace(4)* %435, align 1, !tbaa !18\l  %437 = zext i8 %436 to i64\l  %438 = shl nuw nsw i64 %437, 8\l  %439 = or i64 %438, %434\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 2\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !18\l  %442 = zext i8 %441 to i64\l  %443 = shl nuw nsw i64 %442, 16\l  %444 = or i64 %439, %443\l  %445 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 3\l  %446 = load i8, i8 addrspace(4)* %445, align 1, !tbaa !18\l  %447 = zext i8 %446 to i64\l  %448 = shl nuw nsw i64 %447, 24\l  %449 = or i64 %444, %448\l  %450 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 4\l  %451 = load i8, i8 addrspace(4)* %450, align 1, !tbaa !18\l  %452 = zext i8 %451 to i64\l  %453 = shl nuw nsw i64 %452, 32\l  %454 = or i64 %449, %453\l  %455 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 5\l  %456 = load i8, i8 addrspace(4)* %455, align 1, !tbaa !18\l  %457 = zext i8 %456 to i64\l  %458 = shl nuw nsw i64 %457, 40\l  %459 = or i64 %454, %458\l  %460 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 6\l  %461 = load i8, i8 addrspace(4)* %460, align 1, !tbaa !18\l  %462 = zext i8 %461 to i64\l  %463 = shl nuw nsw i64 %462, 48\l  %464 = or i64 %459, %463\l  %465 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 7\l  %466 = load i8, i8 addrspace(4)* %465, align 1, !tbaa !18\l  %467 = zext i8 %466 to i64\l  %468 = shl nuw i64 %467, 56\l  %469 = or i64 %464, %468\l  br label %483\l}"];
	Node0x6498330 -> Node0x6487fb0;
	Node0x6498510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%470:\l470:                                              \l  %471 = phi i32 [ %481, %470 ], [ 0, %430 ]\l  %472 = phi i64 [ %480, %470 ], [ 0, %430 ]\l  %473 = zext i32 %471 to i64\l  %474 = getelementptr inbounds i8, i8 addrspace(4)* %426, i64 %473\l  %475 = load i8, i8 addrspace(4)* %474, align 1, !tbaa !18\l  %476 = zext i8 %475 to i64\l  %477 = shl i32 %471, 3\l  %478 = zext i32 %477 to i64\l  %479 = shl nuw i64 %476, %478\l  %480 = or i64 %479, %472\l  %481 = add nuw nsw i32 %471, 1\l  %482 = icmp eq i32 %481, %427\l  br i1 %482, label %483, label %470\l|{<s0>T|<s1>F}}"];
	Node0x6498510:s0 -> Node0x6487fb0;
	Node0x6498510:s1 -> Node0x6498510;
	Node0x6487fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%483:\l483:                                              \l  %484 = phi i64 [ %469, %432 ], [ 0, %430 ], [ %480, %470 ]\l  %485 = shl nuw nsw i64 %66, 2\l  %486 = add nuw nsw i64 %485, 28\l  %487 = and i64 %486, 480\l  %488 = and i64 %68, -225\l  %489 = or i64 %488, %487\l  %490 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %47,\l... i64 noundef %489, i64 noundef %128, i64 noundef %188, i64 noundef %248, i64\l... noundef %308, i64 noundef %368, i64 noundef %428, i64 noundef %484) #10\l  %491 = sub i64 %58, %66\l  %492 = getelementptr inbounds i8, i8 addrspace(4)* %59, i64 %66\l  %493 = icmp eq i64 %491, 0\l  br i1 %493, label %507, label %57\l|{<s0>T|<s1>F}}"];
	Node0x6487fb0:s0 -> Node0x6487060;
	Node0x6487fb0:s1 -> Node0x6487b10;
	Node0x64853f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%494:\l494:                                              \l  %495 = sext i32 %39 to i64\l  %496 = getelementptr inbounds float, float addrspace(1)* %0, i64 %495\l  %497 = load float, float addrspace(1)* %496, align 4, !tbaa !21,\l... !amdgpu.noclobber !14\l  %498 = fcmp contract olt float %497, %2\l  br i1 %498, label %499, label %500\l|{<s0>T|<s1>F}}"];
	Node0x64853f0:s0 -> Node0x649afa0;
	Node0x64853f0:s1 -> Node0x649aff0;
	Node0x649afa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%499:\l499:                                              \l  store float 0.000000e+00, float addrspace(1)* %496, align 4, !tbaa !21\l  br label %507\l}"];
	Node0x649afa0 -> Node0x6487060;
	Node0x649aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%500:\l500:                                              \l  %501 = fcmp contract ogt float %497, %1\l  br i1 %501, label %502, label %503\l|{<s0>T|<s1>F}}"];
	Node0x649aff0:s0 -> Node0x649c2a0;
	Node0x649aff0:s1 -> Node0x649c2f0;
	Node0x649c2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%502:\l502:                                              \l  store float 1.000000e+00, float addrspace(1)* %496, align 4, !tbaa !21\l  br label %507\l}"];
	Node0x649c2a0 -> Node0x6487060;
	Node0x649c2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%503:\l503:                                              \l  %504 = fsub contract float %497, %2\l  %505 = fsub contract float %1, %2\l  %506 = fdiv contract float %504, %505\l  store float %506, float addrspace(1)* %496, align 4, !tbaa !21\l  br label %507\l}"];
	Node0x649c2f0 -> Node0x6487060;
	Node0x6487060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%507:\l507:                                              \l  ret void\l}"];
}
