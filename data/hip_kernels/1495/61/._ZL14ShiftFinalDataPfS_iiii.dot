digraph "CFG for '_ZL14ShiftFinalDataPfS_iiii' function" {
	label="CFG for '_ZL14ShiftFinalDataPfS_iiii' function";

	Node0x54ec420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = mul i32 %20, %7\l  %22 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 20\l  %23 = bitcast i8 addrspace(4)* %22 to i32 addrspace(4)*\l  %24 = load i32, i32 addrspace(4)* %23, align 4, !tbaa !15\l  %25 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %26 = bitcast i8 addrspace(4)* %25 to i16 addrspace(4)*\l  %27 = load i16, i16 addrspace(4)* %26, align 4, !range !13, !invariant.load\l... !14\l  %28 = zext i16 %27 to i32\l  %29 = udiv i32 %24, %28\l  %30 = mul i32 %29, %28\l  %31 = icmp ugt i32 %24, %30\l  %32 = zext i1 %31 to i32\l  %33 = add i32 %29, %32\l  %34 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %35 = add i32 %21, %34\l  %36 = mul i32 %33, %35\l  %37 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %38 = add i32 %36, %37\l  %39 = mul i32 %38, %15\l  %40 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %41 = add i32 %39, %40\l  %42 = icmp slt i32 %41, %5\l  br i1 %42, label %496, label %43\l|{<s0>T|<s1>F}}"];
	Node0x54ec420:s0 -> Node0x54f04a0;
	Node0x54ec420:s1 -> Node0x54f0530;
	Node0x54f0530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%43:\l43:                                               \l  %44 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %45 = getelementptr inbounds i8, i8 addrspace(4)* %44, i64 24\l  %46 = bitcast i8 addrspace(4)* %45 to i64 addrspace(4)*\l  %47 = load i64, i64 addrspace(4)* %46, align 8, !tbaa !17\l  %48 = inttoptr i64 %47 to i8 addrspace(1)*\l  %49 = addrspacecast i8 addrspace(1)* %48 to i8*\l  %50 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %49,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %51 = extractelement \<2 x i64\> %50, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([24 x i8], [24 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %52, label %56\l|{<s0>T|<s1>F}}"];
	Node0x54f0530:s0 -> Node0x54f1460;
	Node0x54f0530:s1 -> Node0x54f1e50;
	Node0x54f1460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%52:\l52:                                               \l  %53 = and i64 %51, -227\l  %54 = or i64 %53, 34\l  %55 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %49,\l... i64 noundef %54, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %518\l}"];
	Node0x54f1460 -> Node0x54f2110;
	Node0x54f1e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%56:\l56:                                               \l  %57 = and i64 %51, -3\l  %58 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %57, i64 0\l  br label %59\l}"];
	Node0x54f1e50 -> Node0x54f2c20;
	Node0x54f2c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%59:\l59:                                               \l  %60 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([24 x i8], [24 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([24 x i8], [24 x i8] addrspace(4)*\l... @.str, i64 0, i64 23) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([24 x i8]* addrspacecast ([24 x i8] addrspace(4)* @.str to [24 x i8]*) to\l... i64)), i64 1))), %56 ], [ %493, %485 ]\l  %61 = phi i8 addrspace(4)* [ getelementptr inbounds ([24 x i8], [24 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %56 ], [ %494, %485 ]\l  %62 = phi \<2 x i64\> [ %58, %56 ], [ %492, %485 ]\l  %63 = icmp ugt i64 %60, 56\l  %64 = extractelement \<2 x i64\> %62, i64 0\l  %65 = or i64 %64, 2\l  %66 = insertelement \<2 x i64\> poison, i64 %65, i64 0\l  %67 = select i1 %63, \<2 x i64\> %62, \<2 x i64\> %66\l  %68 = tail call i64 @llvm.umin.i64(i64 %60, i64 56)\l  %69 = trunc i64 %68 to i32\l  %70 = extractelement \<2 x i64\> %67, i64 0\l  %71 = icmp ugt i32 %69, 7\l  br i1 %71, label %74, label %72\l|{<s0>T|<s1>F}}"];
	Node0x54f2c20:s0 -> Node0x54f3d90;
	Node0x54f2c20:s1 -> Node0x54f3e20;
	Node0x54f3e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%72:\l72:                                               \l  %73 = icmp eq i32 %69, 0\l  br i1 %73, label %127, label %114\l|{<s0>T|<s1>F}}"];
	Node0x54f3e20:s0 -> Node0x54f4020;
	Node0x54f3e20:s1 -> Node0x54f4070;
	Node0x54f3d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%74:\l74:                                               \l  %75 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !18\l  %76 = zext i8 %75 to i64\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 1\l  %78 = load i8, i8 addrspace(4)* %77, align 1, !tbaa !18\l  %79 = zext i8 %78 to i64\l  %80 = shl nuw nsw i64 %79, 8\l  %81 = or i64 %80, %76\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 2\l  %83 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !18\l  %84 = zext i8 %83 to i64\l  %85 = shl nuw nsw i64 %84, 16\l  %86 = or i64 %81, %85\l  %87 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 3\l  %88 = load i8, i8 addrspace(4)* %87, align 1, !tbaa !18\l  %89 = zext i8 %88 to i64\l  %90 = shl nuw nsw i64 %89, 24\l  %91 = or i64 %86, %90\l  %92 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 4\l  %93 = load i8, i8 addrspace(4)* %92, align 1, !tbaa !18\l  %94 = zext i8 %93 to i64\l  %95 = shl nuw nsw i64 %94, 32\l  %96 = or i64 %91, %95\l  %97 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 5\l  %98 = load i8, i8 addrspace(4)* %97, align 1, !tbaa !18\l  %99 = zext i8 %98 to i64\l  %100 = shl nuw nsw i64 %99, 40\l  %101 = or i64 %96, %100\l  %102 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 6\l  %103 = load i8, i8 addrspace(4)* %102, align 1, !tbaa !18\l  %104 = zext i8 %103 to i64\l  %105 = shl nuw nsw i64 %104, 48\l  %106 = or i64 %101, %105\l  %107 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 7\l  %108 = load i8, i8 addrspace(4)* %107, align 1, !tbaa !18\l  %109 = zext i8 %108 to i64\l  %110 = shl nuw i64 %109, 56\l  %111 = or i64 %106, %110\l  %112 = add nsw i32 %69, -8\l  %113 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 8\l  br label %127\l}"];
	Node0x54f3d90 -> Node0x54f4020;
	Node0x54f4070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%114:\l114:                                              \l  %115 = phi i32 [ %125, %114 ], [ 0, %72 ]\l  %116 = phi i64 [ %124, %114 ], [ 0, %72 ]\l  %117 = zext i32 %115 to i64\l  %118 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 %117\l  %119 = load i8, i8 addrspace(4)* %118, align 1, !tbaa !18\l  %120 = zext i8 %119 to i64\l  %121 = shl i32 %115, 3\l  %122 = zext i32 %121 to i64\l  %123 = shl nuw i64 %120, %122\l  %124 = or i64 %123, %116\l  %125 = add nuw nsw i32 %115, 1\l  %126 = icmp eq i32 %125, %69\l  br i1 %126, label %127, label %114, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x54f4070:s0 -> Node0x54f4020;
	Node0x54f4070:s1 -> Node0x54f4070;
	Node0x54f4020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%127:\l127:                                              \l  %128 = phi i8 addrspace(4)* [ %113, %74 ], [ %61, %72 ], [ %61, %114 ]\l  %129 = phi i32 [ %112, %74 ], [ 0, %72 ], [ 0, %114 ]\l  %130 = phi i64 [ %111, %74 ], [ 0, %72 ], [ %124, %114 ]\l  %131 = icmp ugt i32 %129, 7\l  br i1 %131, label %134, label %132\l|{<s0>T|<s1>F}}"];
	Node0x54f4020:s0 -> Node0x54f3790;
	Node0x54f4020:s1 -> Node0x54f37e0;
	Node0x54f37e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%132:\l132:                                              \l  %133 = icmp eq i32 %129, 0\l  br i1 %133, label %187, label %174\l|{<s0>T|<s1>F}}"];
	Node0x54f37e0:s0 -> Node0x54f3920;
	Node0x54f37e0:s1 -> Node0x54f7190;
	Node0x54f3790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%134:\l134:                                              \l  %135 = load i8, i8 addrspace(4)* %128, align 1, !tbaa !18\l  %136 = zext i8 %135 to i64\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 1\l  %138 = load i8, i8 addrspace(4)* %137, align 1, !tbaa !18\l  %139 = zext i8 %138 to i64\l  %140 = shl nuw nsw i64 %139, 8\l  %141 = or i64 %140, %136\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 2\l  %143 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !18\l  %144 = zext i8 %143 to i64\l  %145 = shl nuw nsw i64 %144, 16\l  %146 = or i64 %141, %145\l  %147 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 3\l  %148 = load i8, i8 addrspace(4)* %147, align 1, !tbaa !18\l  %149 = zext i8 %148 to i64\l  %150 = shl nuw nsw i64 %149, 24\l  %151 = or i64 %146, %150\l  %152 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 4\l  %153 = load i8, i8 addrspace(4)* %152, align 1, !tbaa !18\l  %154 = zext i8 %153 to i64\l  %155 = shl nuw nsw i64 %154, 32\l  %156 = or i64 %151, %155\l  %157 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 5\l  %158 = load i8, i8 addrspace(4)* %157, align 1, !tbaa !18\l  %159 = zext i8 %158 to i64\l  %160 = shl nuw nsw i64 %159, 40\l  %161 = or i64 %156, %160\l  %162 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 6\l  %163 = load i8, i8 addrspace(4)* %162, align 1, !tbaa !18\l  %164 = zext i8 %163 to i64\l  %165 = shl nuw nsw i64 %164, 48\l  %166 = or i64 %161, %165\l  %167 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 7\l  %168 = load i8, i8 addrspace(4)* %167, align 1, !tbaa !18\l  %169 = zext i8 %168 to i64\l  %170 = shl nuw i64 %169, 56\l  %171 = or i64 %166, %170\l  %172 = add nsw i32 %129, -8\l  %173 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 8\l  br label %187\l}"];
	Node0x54f3790 -> Node0x54f3920;
	Node0x54f7190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%174:\l174:                                              \l  %175 = phi i32 [ %185, %174 ], [ 0, %132 ]\l  %176 = phi i64 [ %184, %174 ], [ 0, %132 ]\l  %177 = zext i32 %175 to i64\l  %178 = getelementptr inbounds i8, i8 addrspace(4)* %128, i64 %177\l  %179 = load i8, i8 addrspace(4)* %178, align 1, !tbaa !18\l  %180 = zext i8 %179 to i64\l  %181 = shl i32 %175, 3\l  %182 = zext i32 %181 to i64\l  %183 = shl nuw i64 %180, %182\l  %184 = or i64 %183, %176\l  %185 = add nuw nsw i32 %175, 1\l  %186 = icmp eq i32 %185, %129\l  br i1 %186, label %187, label %174\l|{<s0>T|<s1>F}}"];
	Node0x54f7190:s0 -> Node0x54f3920;
	Node0x54f7190:s1 -> Node0x54f7190;
	Node0x54f3920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%187:\l187:                                              \l  %188 = phi i8 addrspace(4)* [ %173, %134 ], [ %128, %132 ], [ %128, %174 ]\l  %189 = phi i32 [ %172, %134 ], [ 0, %132 ], [ 0, %174 ]\l  %190 = phi i64 [ %171, %134 ], [ 0, %132 ], [ %184, %174 ]\l  %191 = icmp ugt i32 %189, 7\l  br i1 %191, label %194, label %192\l|{<s0>T|<s1>F}}"];
	Node0x54f3920:s0 -> Node0x54f9250;
	Node0x54f3920:s1 -> Node0x54f92a0;
	Node0x54f92a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%192:\l192:                                              \l  %193 = icmp eq i32 %189, 0\l  br i1 %193, label %247, label %234\l|{<s0>T|<s1>F}}"];
	Node0x54f92a0:s0 -> Node0x54f9430;
	Node0x54f92a0:s1 -> Node0x54f9480;
	Node0x54f9250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%194:\l194:                                              \l  %195 = load i8, i8 addrspace(4)* %188, align 1, !tbaa !18\l  %196 = zext i8 %195 to i64\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 1\l  %198 = load i8, i8 addrspace(4)* %197, align 1, !tbaa !18\l  %199 = zext i8 %198 to i64\l  %200 = shl nuw nsw i64 %199, 8\l  %201 = or i64 %200, %196\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 2\l  %203 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !18\l  %204 = zext i8 %203 to i64\l  %205 = shl nuw nsw i64 %204, 16\l  %206 = or i64 %201, %205\l  %207 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 3\l  %208 = load i8, i8 addrspace(4)* %207, align 1, !tbaa !18\l  %209 = zext i8 %208 to i64\l  %210 = shl nuw nsw i64 %209, 24\l  %211 = or i64 %206, %210\l  %212 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 4\l  %213 = load i8, i8 addrspace(4)* %212, align 1, !tbaa !18\l  %214 = zext i8 %213 to i64\l  %215 = shl nuw nsw i64 %214, 32\l  %216 = or i64 %211, %215\l  %217 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 5\l  %218 = load i8, i8 addrspace(4)* %217, align 1, !tbaa !18\l  %219 = zext i8 %218 to i64\l  %220 = shl nuw nsw i64 %219, 40\l  %221 = or i64 %216, %220\l  %222 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 6\l  %223 = load i8, i8 addrspace(4)* %222, align 1, !tbaa !18\l  %224 = zext i8 %223 to i64\l  %225 = shl nuw nsw i64 %224, 48\l  %226 = or i64 %221, %225\l  %227 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 7\l  %228 = load i8, i8 addrspace(4)* %227, align 1, !tbaa !18\l  %229 = zext i8 %228 to i64\l  %230 = shl nuw i64 %229, 56\l  %231 = or i64 %226, %230\l  %232 = add nsw i32 %189, -8\l  %233 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 8\l  br label %247\l}"];
	Node0x54f9250 -> Node0x54f9430;
	Node0x54f9480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%234:\l234:                                              \l  %235 = phi i32 [ %245, %234 ], [ 0, %192 ]\l  %236 = phi i64 [ %244, %234 ], [ 0, %192 ]\l  %237 = zext i32 %235 to i64\l  %238 = getelementptr inbounds i8, i8 addrspace(4)* %188, i64 %237\l  %239 = load i8, i8 addrspace(4)* %238, align 1, !tbaa !18\l  %240 = zext i8 %239 to i64\l  %241 = shl i32 %235, 3\l  %242 = zext i32 %241 to i64\l  %243 = shl nuw i64 %240, %242\l  %244 = or i64 %243, %236\l  %245 = add nuw nsw i32 %235, 1\l  %246 = icmp eq i32 %245, %189\l  br i1 %246, label %247, label %234\l|{<s0>T|<s1>F}}"];
	Node0x54f9480:s0 -> Node0x54f9430;
	Node0x54f9480:s1 -> Node0x54f9480;
	Node0x54f9430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%247:\l247:                                              \l  %248 = phi i8 addrspace(4)* [ %233, %194 ], [ %188, %192 ], [ %188, %234 ]\l  %249 = phi i32 [ %232, %194 ], [ 0, %192 ], [ 0, %234 ]\l  %250 = phi i64 [ %231, %194 ], [ 0, %192 ], [ %244, %234 ]\l  %251 = icmp ugt i32 %249, 7\l  br i1 %251, label %254, label %252\l|{<s0>T|<s1>F}}"];
	Node0x54f9430:s0 -> Node0x54fb4a0;
	Node0x54f9430:s1 -> Node0x54fb4f0;
	Node0x54fb4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%252:\l252:                                              \l  %253 = icmp eq i32 %249, 0\l  br i1 %253, label %307, label %294\l|{<s0>T|<s1>F}}"];
	Node0x54fb4f0:s0 -> Node0x54fb680;
	Node0x54fb4f0:s1 -> Node0x54fb6d0;
	Node0x54fb4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%254:\l254:                                              \l  %255 = load i8, i8 addrspace(4)* %248, align 1, !tbaa !18\l  %256 = zext i8 %255 to i64\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 1\l  %258 = load i8, i8 addrspace(4)* %257, align 1, !tbaa !18\l  %259 = zext i8 %258 to i64\l  %260 = shl nuw nsw i64 %259, 8\l  %261 = or i64 %260, %256\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 2\l  %263 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !18\l  %264 = zext i8 %263 to i64\l  %265 = shl nuw nsw i64 %264, 16\l  %266 = or i64 %261, %265\l  %267 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 3\l  %268 = load i8, i8 addrspace(4)* %267, align 1, !tbaa !18\l  %269 = zext i8 %268 to i64\l  %270 = shl nuw nsw i64 %269, 24\l  %271 = or i64 %266, %270\l  %272 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 4\l  %273 = load i8, i8 addrspace(4)* %272, align 1, !tbaa !18\l  %274 = zext i8 %273 to i64\l  %275 = shl nuw nsw i64 %274, 32\l  %276 = or i64 %271, %275\l  %277 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 5\l  %278 = load i8, i8 addrspace(4)* %277, align 1, !tbaa !18\l  %279 = zext i8 %278 to i64\l  %280 = shl nuw nsw i64 %279, 40\l  %281 = or i64 %276, %280\l  %282 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 6\l  %283 = load i8, i8 addrspace(4)* %282, align 1, !tbaa !18\l  %284 = zext i8 %283 to i64\l  %285 = shl nuw nsw i64 %284, 48\l  %286 = or i64 %281, %285\l  %287 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 7\l  %288 = load i8, i8 addrspace(4)* %287, align 1, !tbaa !18\l  %289 = zext i8 %288 to i64\l  %290 = shl nuw i64 %289, 56\l  %291 = or i64 %286, %290\l  %292 = add nsw i32 %249, -8\l  %293 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 8\l  br label %307\l}"];
	Node0x54fb4a0 -> Node0x54fb680;
	Node0x54fb6d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%294:\l294:                                              \l  %295 = phi i32 [ %305, %294 ], [ 0, %252 ]\l  %296 = phi i64 [ %304, %294 ], [ 0, %252 ]\l  %297 = zext i32 %295 to i64\l  %298 = getelementptr inbounds i8, i8 addrspace(4)* %248, i64 %297\l  %299 = load i8, i8 addrspace(4)* %298, align 1, !tbaa !18\l  %300 = zext i8 %299 to i64\l  %301 = shl i32 %295, 3\l  %302 = zext i32 %301 to i64\l  %303 = shl nuw i64 %300, %302\l  %304 = or i64 %303, %296\l  %305 = add nuw nsw i32 %295, 1\l  %306 = icmp eq i32 %305, %249\l  br i1 %306, label %307, label %294\l|{<s0>T|<s1>F}}"];
	Node0x54fb6d0:s0 -> Node0x54fb680;
	Node0x54fb6d0:s1 -> Node0x54fb6d0;
	Node0x54fb680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%307:\l307:                                              \l  %308 = phi i8 addrspace(4)* [ %293, %254 ], [ %248, %252 ], [ %248, %294 ]\l  %309 = phi i32 [ %292, %254 ], [ 0, %252 ], [ 0, %294 ]\l  %310 = phi i64 [ %291, %254 ], [ 0, %252 ], [ %304, %294 ]\l  %311 = icmp ugt i32 %309, 7\l  br i1 %311, label %314, label %312\l|{<s0>T|<s1>F}}"];
	Node0x54fb680:s0 -> Node0x54fdf20;
	Node0x54fb680:s1 -> Node0x54fdf70;
	Node0x54fdf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%312:\l312:                                              \l  %313 = icmp eq i32 %309, 0\l  br i1 %313, label %367, label %354\l|{<s0>T|<s1>F}}"];
	Node0x54fdf70:s0 -> Node0x54fe100;
	Node0x54fdf70:s1 -> Node0x54fe150;
	Node0x54fdf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%314:\l314:                                              \l  %315 = load i8, i8 addrspace(4)* %308, align 1, !tbaa !18\l  %316 = zext i8 %315 to i64\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 1\l  %318 = load i8, i8 addrspace(4)* %317, align 1, !tbaa !18\l  %319 = zext i8 %318 to i64\l  %320 = shl nuw nsw i64 %319, 8\l  %321 = or i64 %320, %316\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 2\l  %323 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !18\l  %324 = zext i8 %323 to i64\l  %325 = shl nuw nsw i64 %324, 16\l  %326 = or i64 %321, %325\l  %327 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 3\l  %328 = load i8, i8 addrspace(4)* %327, align 1, !tbaa !18\l  %329 = zext i8 %328 to i64\l  %330 = shl nuw nsw i64 %329, 24\l  %331 = or i64 %326, %330\l  %332 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 4\l  %333 = load i8, i8 addrspace(4)* %332, align 1, !tbaa !18\l  %334 = zext i8 %333 to i64\l  %335 = shl nuw nsw i64 %334, 32\l  %336 = or i64 %331, %335\l  %337 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 5\l  %338 = load i8, i8 addrspace(4)* %337, align 1, !tbaa !18\l  %339 = zext i8 %338 to i64\l  %340 = shl nuw nsw i64 %339, 40\l  %341 = or i64 %336, %340\l  %342 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 6\l  %343 = load i8, i8 addrspace(4)* %342, align 1, !tbaa !18\l  %344 = zext i8 %343 to i64\l  %345 = shl nuw nsw i64 %344, 48\l  %346 = or i64 %341, %345\l  %347 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 7\l  %348 = load i8, i8 addrspace(4)* %347, align 1, !tbaa !18\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw i64 %349, 56\l  %351 = or i64 %346, %350\l  %352 = add nsw i32 %309, -8\l  %353 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 8\l  br label %367\l}"];
	Node0x54fdf20 -> Node0x54fe100;
	Node0x54fe150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%354:\l354:                                              \l  %355 = phi i32 [ %365, %354 ], [ 0, %312 ]\l  %356 = phi i64 [ %364, %354 ], [ 0, %312 ]\l  %357 = zext i32 %355 to i64\l  %358 = getelementptr inbounds i8, i8 addrspace(4)* %308, i64 %357\l  %359 = load i8, i8 addrspace(4)* %358, align 1, !tbaa !18\l  %360 = zext i8 %359 to i64\l  %361 = shl i32 %355, 3\l  %362 = zext i32 %361 to i64\l  %363 = shl nuw i64 %360, %362\l  %364 = or i64 %363, %356\l  %365 = add nuw nsw i32 %355, 1\l  %366 = icmp eq i32 %365, %309\l  br i1 %366, label %367, label %354\l|{<s0>T|<s1>F}}"];
	Node0x54fe150:s0 -> Node0x54fe100;
	Node0x54fe150:s1 -> Node0x54fe150;
	Node0x54fe100 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%367:\l367:                                              \l  %368 = phi i8 addrspace(4)* [ %353, %314 ], [ %308, %312 ], [ %308, %354 ]\l  %369 = phi i32 [ %352, %314 ], [ 0, %312 ], [ 0, %354 ]\l  %370 = phi i64 [ %351, %314 ], [ 0, %312 ], [ %364, %354 ]\l  %371 = icmp ugt i32 %369, 7\l  br i1 %371, label %374, label %372\l|{<s0>T|<s1>F}}"];
	Node0x54fe100:s0 -> Node0x5500b80;
	Node0x54fe100:s1 -> Node0x5500bd0;
	Node0x5500bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%372:\l372:                                              \l  %373 = icmp eq i32 %369, 0\l  br i1 %373, label %427, label %414\l|{<s0>T|<s1>F}}"];
	Node0x5500bd0:s0 -> Node0x5500d60;
	Node0x5500bd0:s1 -> Node0x5500db0;
	Node0x5500b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%374:\l374:                                              \l  %375 = load i8, i8 addrspace(4)* %368, align 1, !tbaa !18\l  %376 = zext i8 %375 to i64\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 1\l  %378 = load i8, i8 addrspace(4)* %377, align 1, !tbaa !18\l  %379 = zext i8 %378 to i64\l  %380 = shl nuw nsw i64 %379, 8\l  %381 = or i64 %380, %376\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 2\l  %383 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !18\l  %384 = zext i8 %383 to i64\l  %385 = shl nuw nsw i64 %384, 16\l  %386 = or i64 %381, %385\l  %387 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 3\l  %388 = load i8, i8 addrspace(4)* %387, align 1, !tbaa !18\l  %389 = zext i8 %388 to i64\l  %390 = shl nuw nsw i64 %389, 24\l  %391 = or i64 %386, %390\l  %392 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 4\l  %393 = load i8, i8 addrspace(4)* %392, align 1, !tbaa !18\l  %394 = zext i8 %393 to i64\l  %395 = shl nuw nsw i64 %394, 32\l  %396 = or i64 %391, %395\l  %397 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 5\l  %398 = load i8, i8 addrspace(4)* %397, align 1, !tbaa !18\l  %399 = zext i8 %398 to i64\l  %400 = shl nuw nsw i64 %399, 40\l  %401 = or i64 %396, %400\l  %402 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 6\l  %403 = load i8, i8 addrspace(4)* %402, align 1, !tbaa !18\l  %404 = zext i8 %403 to i64\l  %405 = shl nuw nsw i64 %404, 48\l  %406 = or i64 %401, %405\l  %407 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 7\l  %408 = load i8, i8 addrspace(4)* %407, align 1, !tbaa !18\l  %409 = zext i8 %408 to i64\l  %410 = shl nuw i64 %409, 56\l  %411 = or i64 %406, %410\l  %412 = add nsw i32 %369, -8\l  %413 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 8\l  br label %427\l}"];
	Node0x5500b80 -> Node0x5500d60;
	Node0x5500db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%414:\l414:                                              \l  %415 = phi i32 [ %425, %414 ], [ 0, %372 ]\l  %416 = phi i64 [ %424, %414 ], [ 0, %372 ]\l  %417 = zext i32 %415 to i64\l  %418 = getelementptr inbounds i8, i8 addrspace(4)* %368, i64 %417\l  %419 = load i8, i8 addrspace(4)* %418, align 1, !tbaa !18\l  %420 = zext i8 %419 to i64\l  %421 = shl i32 %415, 3\l  %422 = zext i32 %421 to i64\l  %423 = shl nuw i64 %420, %422\l  %424 = or i64 %423, %416\l  %425 = add nuw nsw i32 %415, 1\l  %426 = icmp eq i32 %425, %369\l  br i1 %426, label %427, label %414\l|{<s0>T|<s1>F}}"];
	Node0x5500db0:s0 -> Node0x5500d60;
	Node0x5500db0:s1 -> Node0x5500db0;
	Node0x5500d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%427:\l427:                                              \l  %428 = phi i8 addrspace(4)* [ %413, %374 ], [ %368, %372 ], [ %368, %414 ]\l  %429 = phi i32 [ %412, %374 ], [ 0, %372 ], [ 0, %414 ]\l  %430 = phi i64 [ %411, %374 ], [ 0, %372 ], [ %424, %414 ]\l  %431 = icmp ugt i32 %429, 7\l  br i1 %431, label %434, label %432\l|{<s0>T|<s1>F}}"];
	Node0x5500d60:s0 -> Node0x55033e0;
	Node0x5500d60:s1 -> Node0x5503430;
	Node0x5503430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%432:\l432:                                              \l  %433 = icmp eq i32 %429, 0\l  br i1 %433, label %485, label %472\l|{<s0>T|<s1>F}}"];
	Node0x5503430:s0 -> Node0x54f3090;
	Node0x5503430:s1 -> Node0x55035c0;
	Node0x55033e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%434:\l434:                                              \l  %435 = load i8, i8 addrspace(4)* %428, align 1, !tbaa !18\l  %436 = zext i8 %435 to i64\l  %437 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 1\l  %438 = load i8, i8 addrspace(4)* %437, align 1, !tbaa !18\l  %439 = zext i8 %438 to i64\l  %440 = shl nuw nsw i64 %439, 8\l  %441 = or i64 %440, %436\l  %442 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 2\l  %443 = load i8, i8 addrspace(4)* %442, align 1, !tbaa !18\l  %444 = zext i8 %443 to i64\l  %445 = shl nuw nsw i64 %444, 16\l  %446 = or i64 %441, %445\l  %447 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 3\l  %448 = load i8, i8 addrspace(4)* %447, align 1, !tbaa !18\l  %449 = zext i8 %448 to i64\l  %450 = shl nuw nsw i64 %449, 24\l  %451 = or i64 %446, %450\l  %452 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 4\l  %453 = load i8, i8 addrspace(4)* %452, align 1, !tbaa !18\l  %454 = zext i8 %453 to i64\l  %455 = shl nuw nsw i64 %454, 32\l  %456 = or i64 %451, %455\l  %457 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 5\l  %458 = load i8, i8 addrspace(4)* %457, align 1, !tbaa !18\l  %459 = zext i8 %458 to i64\l  %460 = shl nuw nsw i64 %459, 40\l  %461 = or i64 %456, %460\l  %462 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 6\l  %463 = load i8, i8 addrspace(4)* %462, align 1, !tbaa !18\l  %464 = zext i8 %463 to i64\l  %465 = shl nuw nsw i64 %464, 48\l  %466 = or i64 %461, %465\l  %467 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 7\l  %468 = load i8, i8 addrspace(4)* %467, align 1, !tbaa !18\l  %469 = zext i8 %468 to i64\l  %470 = shl nuw i64 %469, 56\l  %471 = or i64 %466, %470\l  br label %485\l}"];
	Node0x55033e0 -> Node0x54f3090;
	Node0x55035c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%472:\l472:                                              \l  %473 = phi i32 [ %483, %472 ], [ 0, %432 ]\l  %474 = phi i64 [ %482, %472 ], [ 0, %432 ]\l  %475 = zext i32 %473 to i64\l  %476 = getelementptr inbounds i8, i8 addrspace(4)* %428, i64 %475\l  %477 = load i8, i8 addrspace(4)* %476, align 1, !tbaa !18\l  %478 = zext i8 %477 to i64\l  %479 = shl i32 %473, 3\l  %480 = zext i32 %479 to i64\l  %481 = shl nuw i64 %478, %480\l  %482 = or i64 %481, %474\l  %483 = add nuw nsw i32 %473, 1\l  %484 = icmp eq i32 %483, %429\l  br i1 %484, label %485, label %472\l|{<s0>T|<s1>F}}"];
	Node0x55035c0:s0 -> Node0x54f3090;
	Node0x55035c0:s1 -> Node0x55035c0;
	Node0x54f3090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%485:\l485:                                              \l  %486 = phi i64 [ %471, %434 ], [ 0, %432 ], [ %482, %472 ]\l  %487 = shl nuw nsw i64 %68, 2\l  %488 = add nuw nsw i64 %487, 28\l  %489 = and i64 %488, 480\l  %490 = and i64 %70, -225\l  %491 = or i64 %490, %489\l  %492 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %49,\l... i64 noundef %491, i64 noundef %130, i64 noundef %190, i64 noundef %250, i64\l... noundef %310, i64 noundef %370, i64 noundef %430, i64 noundef %486) #10\l  %493 = sub i64 %60, %68\l  %494 = getelementptr inbounds i8, i8 addrspace(4)* %61, i64 %68\l  %495 = icmp eq i64 %493, 0\l  br i1 %495, label %518, label %59\l|{<s0>T|<s1>F}}"];
	Node0x54f3090:s0 -> Node0x54f2110;
	Node0x54f3090:s1 -> Node0x54f2c20;
	Node0x54f04a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%496:\l496:                                              \l  %497 = freeze i32 %41\l  %498 = freeze i32 %4\l  %499 = sdiv i32 %497, %498\l  %500 = mul i32 %499, %498\l  %501 = sub i32 %497, %500\l  %502 = freeze i32 %2\l  %503 = sdiv i32 %499, %502\l  %504 = mul i32 %503, %502\l  %505 = sub i32 %499, %504\l  %506 = sdiv i32 %3, 2\l  %507 = add nsw i32 %503, %506\l  %508 = srem i32 %507, %3\l  %509 = mul nsw i32 %508, %2\l  %510 = add i32 %509, %505\l  %511 = mul i32 %510, %4\l  %512 = add nsw i32 %511, %501\l  %513 = sext i32 %512 to i64\l  %514 = getelementptr inbounds float, float addrspace(1)* %0, i64 %513\l  %515 = load float, float addrspace(1)* %514, align 4, !tbaa !21,\l... !amdgpu.noclobber !14\l  %516 = sext i32 %41 to i64\l  %517 = getelementptr inbounds float, float addrspace(1)* %1, i64 %516\l  store float %515, float addrspace(1)* %517, align 4, !tbaa !21\l  br label %518\l}"];
	Node0x54f04a0 -> Node0x54f2110;
	Node0x54f2110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%518:\l518:                                              \l  ret void\l}"];
}
