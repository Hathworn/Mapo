digraph "CFG for '_ZL15FrequencyAdjustPiPfS0_S_iiii' function" {
	label="CFG for '_ZL15FrequencyAdjustPiPfS0_S_iiii' function";

	Node0x5665490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !4\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !13, !invariant.load\l... !14\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %9\l  %24 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 20\l  %25 = bitcast i8 addrspace(4)* %24 to i32 addrspace(4)*\l  %26 = load i32, i32 addrspace(4)* %25, align 4, !tbaa !15\l  %27 = getelementptr i8, i8 addrspace(4)* %10, i64 8\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !13, !invariant.load\l... !14\l  %30 = zext i16 %29 to i32\l  %31 = udiv i32 %26, %30\l  %32 = mul i32 %31, %30\l  %33 = icmp ugt i32 %26, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %37 = add i32 %23, %36\l  %38 = mul i32 %35, %37\l  %39 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %40 = add i32 %38, %39\l  %41 = mul i32 %40, %17\l  %42 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %43 = add i32 %41, %42\l  %44 = mul nsw i32 %6, %5\l  %45 = mul nsw i32 %44, %7\l  %46 = icmp slt i32 %43, %45\l  br i1 %46, label %500, label %47\l|{<s0>T|<s1>F}}"];
	Node0x5665490:s0 -> Node0x5669680;
	Node0x5665490:s1 -> Node0x5669710;
	Node0x5669710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%47:\l47:                                               \l  %48 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %48, i64 24\l  %50 = bitcast i8 addrspace(4)* %49 to i64 addrspace(4)*\l  %51 = load i64, i64 addrspace(4)* %50, align 8, !tbaa !17\l  %52 = inttoptr i64 %51 to i8 addrspace(1)*\l  %53 = addrspacecast i8 addrspace(1)* %52 to i8*\l  %54 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %55 = extractelement \<2 x i64\> %54, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([35 x i8], [35 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %56, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5669710:s0 -> Node0x566a640;
	Node0x5669710:s1 -> Node0x566b030;
	Node0x566a640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%56:\l56:                                               \l  %57 = and i64 %55, -227\l  %58 = or i64 %57, 34\l  %59 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %58, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %544\l}"];
	Node0x566a640 -> Node0x566b2f0;
	Node0x566b030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%60:\l60:                                               \l  %61 = and i64 %55, -3\l  %62 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %61, i64 0\l  br label %63\l}"];
	Node0x566b030 -> Node0x566be00;
	Node0x566be00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%63:\l63:                                               \l  %64 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([35 x i8], [35 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([35 x i8], [35 x i8] addrspace(4)*\l... @.str, i64 0, i64 34) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([35 x i8]* addrspacecast ([35 x i8] addrspace(4)* @.str to [35 x i8]*) to\l... i64)), i64 1))), %60 ], [ %497, %489 ]\l  %65 = phi i8 addrspace(4)* [ getelementptr inbounds ([35 x i8], [35 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %60 ], [ %498, %489 ]\l  %66 = phi \<2 x i64\> [ %62, %60 ], [ %496, %489 ]\l  %67 = icmp ugt i64 %64, 56\l  %68 = extractelement \<2 x i64\> %66, i64 0\l  %69 = or i64 %68, 2\l  %70 = insertelement \<2 x i64\> poison, i64 %69, i64 0\l  %71 = select i1 %67, \<2 x i64\> %66, \<2 x i64\> %70\l  %72 = tail call i64 @llvm.umin.i64(i64 %64, i64 56)\l  %73 = trunc i64 %72 to i32\l  %74 = extractelement \<2 x i64\> %71, i64 0\l  %75 = icmp ugt i32 %73, 7\l  br i1 %75, label %78, label %76\l|{<s0>T|<s1>F}}"];
	Node0x566be00:s0 -> Node0x566cf40;
	Node0x566be00:s1 -> Node0x566cfd0;
	Node0x566cfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%76:\l76:                                               \l  %77 = icmp eq i32 %73, 0\l  br i1 %77, label %131, label %118\l|{<s0>T|<s1>F}}"];
	Node0x566cfd0:s0 -> Node0x566d1d0;
	Node0x566cfd0:s1 -> Node0x566d220;
	Node0x566cf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%78:\l78:                                               \l  %79 = load i8, i8 addrspace(4)* %65, align 1, !tbaa !18\l  %80 = zext i8 %79 to i64\l  %81 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 1\l  %82 = load i8, i8 addrspace(4)* %81, align 1, !tbaa !18\l  %83 = zext i8 %82 to i64\l  %84 = shl nuw nsw i64 %83, 8\l  %85 = or i64 %84, %80\l  %86 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 2\l  %87 = load i8, i8 addrspace(4)* %86, align 1, !tbaa !18\l  %88 = zext i8 %87 to i64\l  %89 = shl nuw nsw i64 %88, 16\l  %90 = or i64 %85, %89\l  %91 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 3\l  %92 = load i8, i8 addrspace(4)* %91, align 1, !tbaa !18\l  %93 = zext i8 %92 to i64\l  %94 = shl nuw nsw i64 %93, 24\l  %95 = or i64 %90, %94\l  %96 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 4\l  %97 = load i8, i8 addrspace(4)* %96, align 1, !tbaa !18\l  %98 = zext i8 %97 to i64\l  %99 = shl nuw nsw i64 %98, 32\l  %100 = or i64 %95, %99\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 5\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !18\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 40\l  %105 = or i64 %100, %104\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 6\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !18\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 48\l  %110 = or i64 %105, %109\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 7\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !18\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw i64 %113, 56\l  %115 = or i64 %110, %114\l  %116 = add nsw i32 %73, -8\l  %117 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 8\l  br label %131\l}"];
	Node0x566cf40 -> Node0x566d1d0;
	Node0x566d220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%118:\l118:                                              \l  %119 = phi i32 [ %129, %118 ], [ 0, %76 ]\l  %120 = phi i64 [ %128, %118 ], [ 0, %76 ]\l  %121 = zext i32 %119 to i64\l  %122 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 %121\l  %123 = load i8, i8 addrspace(4)* %122, align 1, !tbaa !18\l  %124 = zext i8 %123 to i64\l  %125 = shl i32 %119, 3\l  %126 = zext i32 %125 to i64\l  %127 = shl nuw i64 %124, %126\l  %128 = or i64 %127, %120\l  %129 = add nuw nsw i32 %119, 1\l  %130 = icmp eq i32 %129, %73\l  br i1 %130, label %131, label %118, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x566d220:s0 -> Node0x566d1d0;
	Node0x566d220:s1 -> Node0x566d220;
	Node0x566d1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%131:\l131:                                              \l  %132 = phi i8 addrspace(4)* [ %117, %78 ], [ %65, %76 ], [ %65, %118 ]\l  %133 = phi i32 [ %116, %78 ], [ 0, %76 ], [ 0, %118 ]\l  %134 = phi i64 [ %115, %78 ], [ 0, %76 ], [ %128, %118 ]\l  %135 = icmp ugt i32 %133, 7\l  br i1 %135, label %138, label %136\l|{<s0>T|<s1>F}}"];
	Node0x566d1d0:s0 -> Node0x56700e0;
	Node0x566d1d0:s1 -> Node0x5670130;
	Node0x5670130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%136:\l136:                                              \l  %137 = icmp eq i32 %133, 0\l  br i1 %137, label %191, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5670130:s0 -> Node0x5670300;
	Node0x5670130:s1 -> Node0x5670350;
	Node0x56700e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%138:\l138:                                              \l  %139 = load i8, i8 addrspace(4)* %132, align 1, !tbaa !18\l  %140 = zext i8 %139 to i64\l  %141 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 1\l  %142 = load i8, i8 addrspace(4)* %141, align 1, !tbaa !18\l  %143 = zext i8 %142 to i64\l  %144 = shl nuw nsw i64 %143, 8\l  %145 = or i64 %144, %140\l  %146 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 2\l  %147 = load i8, i8 addrspace(4)* %146, align 1, !tbaa !18\l  %148 = zext i8 %147 to i64\l  %149 = shl nuw nsw i64 %148, 16\l  %150 = or i64 %145, %149\l  %151 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 3\l  %152 = load i8, i8 addrspace(4)* %151, align 1, !tbaa !18\l  %153 = zext i8 %152 to i64\l  %154 = shl nuw nsw i64 %153, 24\l  %155 = or i64 %150, %154\l  %156 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 4\l  %157 = load i8, i8 addrspace(4)* %156, align 1, !tbaa !18\l  %158 = zext i8 %157 to i64\l  %159 = shl nuw nsw i64 %158, 32\l  %160 = or i64 %155, %159\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 5\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !18\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 40\l  %165 = or i64 %160, %164\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 6\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !18\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 48\l  %170 = or i64 %165, %169\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 7\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !18\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw i64 %173, 56\l  %175 = or i64 %170, %174\l  %176 = add nsw i32 %133, -8\l  %177 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 8\l  br label %191\l}"];
	Node0x56700e0 -> Node0x5670300;
	Node0x5670350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%178:\l178:                                              \l  %179 = phi i32 [ %189, %178 ], [ 0, %136 ]\l  %180 = phi i64 [ %188, %178 ], [ 0, %136 ]\l  %181 = zext i32 %179 to i64\l  %182 = getelementptr inbounds i8, i8 addrspace(4)* %132, i64 %181\l  %183 = load i8, i8 addrspace(4)* %182, align 1, !tbaa !18\l  %184 = zext i8 %183 to i64\l  %185 = shl i32 %179, 3\l  %186 = zext i32 %185 to i64\l  %187 = shl nuw i64 %184, %186\l  %188 = or i64 %187, %180\l  %189 = add nuw nsw i32 %179, 1\l  %190 = icmp eq i32 %189, %133\l  br i1 %190, label %191, label %178\l|{<s0>T|<s1>F}}"];
	Node0x5670350:s0 -> Node0x5670300;
	Node0x5670350:s1 -> Node0x5670350;
	Node0x5670300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%191:\l191:                                              \l  %192 = phi i8 addrspace(4)* [ %177, %138 ], [ %132, %136 ], [ %132, %178 ]\l  %193 = phi i32 [ %176, %138 ], [ 0, %136 ], [ 0, %178 ]\l  %194 = phi i64 [ %175, %138 ], [ 0, %136 ], [ %188, %178 ]\l  %195 = icmp ugt i32 %193, 7\l  br i1 %195, label %198, label %196\l|{<s0>T|<s1>F}}"];
	Node0x5670300:s0 -> Node0x5672410;
	Node0x5670300:s1 -> Node0x5672460;
	Node0x5672460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%196:\l196:                                              \l  %197 = icmp eq i32 %193, 0\l  br i1 %197, label %251, label %238\l|{<s0>T|<s1>F}}"];
	Node0x5672460:s0 -> Node0x56725f0;
	Node0x5672460:s1 -> Node0x5672640;
	Node0x5672410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%198:\l198:                                              \l  %199 = load i8, i8 addrspace(4)* %192, align 1, !tbaa !18\l  %200 = zext i8 %199 to i64\l  %201 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 1\l  %202 = load i8, i8 addrspace(4)* %201, align 1, !tbaa !18\l  %203 = zext i8 %202 to i64\l  %204 = shl nuw nsw i64 %203, 8\l  %205 = or i64 %204, %200\l  %206 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 2\l  %207 = load i8, i8 addrspace(4)* %206, align 1, !tbaa !18\l  %208 = zext i8 %207 to i64\l  %209 = shl nuw nsw i64 %208, 16\l  %210 = or i64 %205, %209\l  %211 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 3\l  %212 = load i8, i8 addrspace(4)* %211, align 1, !tbaa !18\l  %213 = zext i8 %212 to i64\l  %214 = shl nuw nsw i64 %213, 24\l  %215 = or i64 %210, %214\l  %216 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 4\l  %217 = load i8, i8 addrspace(4)* %216, align 1, !tbaa !18\l  %218 = zext i8 %217 to i64\l  %219 = shl nuw nsw i64 %218, 32\l  %220 = or i64 %215, %219\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 5\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !18\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 40\l  %225 = or i64 %220, %224\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 6\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !18\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 48\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 7\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !18\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw i64 %233, 56\l  %235 = or i64 %230, %234\l  %236 = add nsw i32 %193, -8\l  %237 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 8\l  br label %251\l}"];
	Node0x5672410 -> Node0x56725f0;
	Node0x5672640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%238:\l238:                                              \l  %239 = phi i32 [ %249, %238 ], [ 0, %196 ]\l  %240 = phi i64 [ %248, %238 ], [ 0, %196 ]\l  %241 = zext i32 %239 to i64\l  %242 = getelementptr inbounds i8, i8 addrspace(4)* %192, i64 %241\l  %243 = load i8, i8 addrspace(4)* %242, align 1, !tbaa !18\l  %244 = zext i8 %243 to i64\l  %245 = shl i32 %239, 3\l  %246 = zext i32 %245 to i64\l  %247 = shl nuw i64 %244, %246\l  %248 = or i64 %247, %240\l  %249 = add nuw nsw i32 %239, 1\l  %250 = icmp eq i32 %249, %193\l  br i1 %250, label %251, label %238\l|{<s0>T|<s1>F}}"];
	Node0x5672640:s0 -> Node0x56725f0;
	Node0x5672640:s1 -> Node0x5672640;
	Node0x56725f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%251:\l251:                                              \l  %252 = phi i8 addrspace(4)* [ %237, %198 ], [ %192, %196 ], [ %192, %238 ]\l  %253 = phi i32 [ %236, %198 ], [ 0, %196 ], [ 0, %238 ]\l  %254 = phi i64 [ %235, %198 ], [ 0, %196 ], [ %248, %238 ]\l  %255 = icmp ugt i32 %253, 7\l  br i1 %255, label %258, label %256\l|{<s0>T|<s1>F}}"];
	Node0x56725f0:s0 -> Node0x5674660;
	Node0x56725f0:s1 -> Node0x56746b0;
	Node0x56746b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%256:\l256:                                              \l  %257 = icmp eq i32 %253, 0\l  br i1 %257, label %311, label %298\l|{<s0>T|<s1>F}}"];
	Node0x56746b0:s0 -> Node0x566f7d0;
	Node0x56746b0:s1 -> Node0x566f820;
	Node0x5674660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%258:\l258:                                              \l  %259 = load i8, i8 addrspace(4)* %252, align 1, !tbaa !18\l  %260 = zext i8 %259 to i64\l  %261 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 1\l  %262 = load i8, i8 addrspace(4)* %261, align 1, !tbaa !18\l  %263 = zext i8 %262 to i64\l  %264 = shl nuw nsw i64 %263, 8\l  %265 = or i64 %264, %260\l  %266 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 2\l  %267 = load i8, i8 addrspace(4)* %266, align 1, !tbaa !18\l  %268 = zext i8 %267 to i64\l  %269 = shl nuw nsw i64 %268, 16\l  %270 = or i64 %265, %269\l  %271 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 3\l  %272 = load i8, i8 addrspace(4)* %271, align 1, !tbaa !18\l  %273 = zext i8 %272 to i64\l  %274 = shl nuw nsw i64 %273, 24\l  %275 = or i64 %270, %274\l  %276 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 4\l  %277 = load i8, i8 addrspace(4)* %276, align 1, !tbaa !18\l  %278 = zext i8 %277 to i64\l  %279 = shl nuw nsw i64 %278, 32\l  %280 = or i64 %275, %279\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 5\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !18\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 40\l  %285 = or i64 %280, %284\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 6\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !18\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 48\l  %290 = or i64 %285, %289\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 7\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !18\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw i64 %293, 56\l  %295 = or i64 %290, %294\l  %296 = add nsw i32 %253, -8\l  %297 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 8\l  br label %311\l}"];
	Node0x5674660 -> Node0x566f7d0;
	Node0x566f820 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%298:\l298:                                              \l  %299 = phi i32 [ %309, %298 ], [ 0, %256 ]\l  %300 = phi i64 [ %308, %298 ], [ 0, %256 ]\l  %301 = zext i32 %299 to i64\l  %302 = getelementptr inbounds i8, i8 addrspace(4)* %252, i64 %301\l  %303 = load i8, i8 addrspace(4)* %302, align 1, !tbaa !18\l  %304 = zext i8 %303 to i64\l  %305 = shl i32 %299, 3\l  %306 = zext i32 %305 to i64\l  %307 = shl nuw i64 %304, %306\l  %308 = or i64 %307, %300\l  %309 = add nuw nsw i32 %299, 1\l  %310 = icmp eq i32 %309, %253\l  br i1 %310, label %311, label %298\l|{<s0>T|<s1>F}}"];
	Node0x566f820:s0 -> Node0x566f7d0;
	Node0x566f820:s1 -> Node0x566f820;
	Node0x566f7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%311:\l311:                                              \l  %312 = phi i8 addrspace(4)* [ %297, %258 ], [ %252, %256 ], [ %252, %298 ]\l  %313 = phi i32 [ %296, %258 ], [ 0, %256 ], [ 0, %298 ]\l  %314 = phi i64 [ %295, %258 ], [ 0, %256 ], [ %308, %298 ]\l  %315 = icmp ugt i32 %313, 7\l  br i1 %315, label %318, label %316\l|{<s0>T|<s1>F}}"];
	Node0x566f7d0:s0 -> Node0x56770c0;
	Node0x566f7d0:s1 -> Node0x5677110;
	Node0x5677110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%316:\l316:                                              \l  %317 = icmp eq i32 %313, 0\l  br i1 %317, label %371, label %358\l|{<s0>T|<s1>F}}"];
	Node0x5677110:s0 -> Node0x56772a0;
	Node0x5677110:s1 -> Node0x56772f0;
	Node0x56770c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%318:\l318:                                              \l  %319 = load i8, i8 addrspace(4)* %312, align 1, !tbaa !18\l  %320 = zext i8 %319 to i64\l  %321 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 1\l  %322 = load i8, i8 addrspace(4)* %321, align 1, !tbaa !18\l  %323 = zext i8 %322 to i64\l  %324 = shl nuw nsw i64 %323, 8\l  %325 = or i64 %324, %320\l  %326 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 2\l  %327 = load i8, i8 addrspace(4)* %326, align 1, !tbaa !18\l  %328 = zext i8 %327 to i64\l  %329 = shl nuw nsw i64 %328, 16\l  %330 = or i64 %325, %329\l  %331 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 3\l  %332 = load i8, i8 addrspace(4)* %331, align 1, !tbaa !18\l  %333 = zext i8 %332 to i64\l  %334 = shl nuw nsw i64 %333, 24\l  %335 = or i64 %330, %334\l  %336 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 4\l  %337 = load i8, i8 addrspace(4)* %336, align 1, !tbaa !18\l  %338 = zext i8 %337 to i64\l  %339 = shl nuw nsw i64 %338, 32\l  %340 = or i64 %335, %339\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 5\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !18\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 40\l  %345 = or i64 %340, %344\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 6\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !18\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 48\l  %350 = or i64 %345, %349\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 7\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !18\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw i64 %353, 56\l  %355 = or i64 %350, %354\l  %356 = add nsw i32 %313, -8\l  %357 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 8\l  br label %371\l}"];
	Node0x56770c0 -> Node0x56772a0;
	Node0x56772f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%358:\l358:                                              \l  %359 = phi i32 [ %369, %358 ], [ 0, %316 ]\l  %360 = phi i64 [ %368, %358 ], [ 0, %316 ]\l  %361 = zext i32 %359 to i64\l  %362 = getelementptr inbounds i8, i8 addrspace(4)* %312, i64 %361\l  %363 = load i8, i8 addrspace(4)* %362, align 1, !tbaa !18\l  %364 = zext i8 %363 to i64\l  %365 = shl i32 %359, 3\l  %366 = zext i32 %365 to i64\l  %367 = shl nuw i64 %364, %366\l  %368 = or i64 %367, %360\l  %369 = add nuw nsw i32 %359, 1\l  %370 = icmp eq i32 %369, %313\l  br i1 %370, label %371, label %358\l|{<s0>T|<s1>F}}"];
	Node0x56772f0:s0 -> Node0x56772a0;
	Node0x56772f0:s1 -> Node0x56772f0;
	Node0x56772a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%371:\l371:                                              \l  %372 = phi i8 addrspace(4)* [ %357, %318 ], [ %312, %316 ], [ %312, %358 ]\l  %373 = phi i32 [ %356, %318 ], [ 0, %316 ], [ 0, %358 ]\l  %374 = phi i64 [ %355, %318 ], [ 0, %316 ], [ %368, %358 ]\l  %375 = icmp ugt i32 %373, 7\l  br i1 %375, label %378, label %376\l|{<s0>T|<s1>F}}"];
	Node0x56772a0:s0 -> Node0x5679d20;
	Node0x56772a0:s1 -> Node0x5679d70;
	Node0x5679d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%376:\l376:                                              \l  %377 = icmp eq i32 %373, 0\l  br i1 %377, label %431, label %418\l|{<s0>T|<s1>F}}"];
	Node0x5679d70:s0 -> Node0x5679f00;
	Node0x5679d70:s1 -> Node0x5679f50;
	Node0x5679d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%378:\l378:                                              \l  %379 = load i8, i8 addrspace(4)* %372, align 1, !tbaa !18\l  %380 = zext i8 %379 to i64\l  %381 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 1\l  %382 = load i8, i8 addrspace(4)* %381, align 1, !tbaa !18\l  %383 = zext i8 %382 to i64\l  %384 = shl nuw nsw i64 %383, 8\l  %385 = or i64 %384, %380\l  %386 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 2\l  %387 = load i8, i8 addrspace(4)* %386, align 1, !tbaa !18\l  %388 = zext i8 %387 to i64\l  %389 = shl nuw nsw i64 %388, 16\l  %390 = or i64 %385, %389\l  %391 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 3\l  %392 = load i8, i8 addrspace(4)* %391, align 1, !tbaa !18\l  %393 = zext i8 %392 to i64\l  %394 = shl nuw nsw i64 %393, 24\l  %395 = or i64 %390, %394\l  %396 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 4\l  %397 = load i8, i8 addrspace(4)* %396, align 1, !tbaa !18\l  %398 = zext i8 %397 to i64\l  %399 = shl nuw nsw i64 %398, 32\l  %400 = or i64 %395, %399\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 5\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !18\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 40\l  %405 = or i64 %400, %404\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 6\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !18\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 48\l  %410 = or i64 %405, %409\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 7\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !18\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw i64 %413, 56\l  %415 = or i64 %410, %414\l  %416 = add nsw i32 %373, -8\l  %417 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 8\l  br label %431\l}"];
	Node0x5679d20 -> Node0x5679f00;
	Node0x5679f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%418:\l418:                                              \l  %419 = phi i32 [ %429, %418 ], [ 0, %376 ]\l  %420 = phi i64 [ %428, %418 ], [ 0, %376 ]\l  %421 = zext i32 %419 to i64\l  %422 = getelementptr inbounds i8, i8 addrspace(4)* %372, i64 %421\l  %423 = load i8, i8 addrspace(4)* %422, align 1, !tbaa !18\l  %424 = zext i8 %423 to i64\l  %425 = shl i32 %419, 3\l  %426 = zext i32 %425 to i64\l  %427 = shl nuw i64 %424, %426\l  %428 = or i64 %427, %420\l  %429 = add nuw nsw i32 %419, 1\l  %430 = icmp eq i32 %429, %373\l  br i1 %430, label %431, label %418\l|{<s0>T|<s1>F}}"];
	Node0x5679f50:s0 -> Node0x5679f00;
	Node0x5679f50:s1 -> Node0x5679f50;
	Node0x5679f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%431:\l431:                                              \l  %432 = phi i8 addrspace(4)* [ %417, %378 ], [ %372, %376 ], [ %372, %418 ]\l  %433 = phi i32 [ %416, %378 ], [ 0, %376 ], [ 0, %418 ]\l  %434 = phi i64 [ %415, %378 ], [ 0, %376 ], [ %428, %418 ]\l  %435 = icmp ugt i32 %433, 7\l  br i1 %435, label %438, label %436\l|{<s0>T|<s1>F}}"];
	Node0x5679f00:s0 -> Node0x567c580;
	Node0x5679f00:s1 -> Node0x567c5d0;
	Node0x567c5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%436:\l436:                                              \l  %437 = icmp eq i32 %433, 0\l  br i1 %437, label %489, label %476\l|{<s0>T|<s1>F}}"];
	Node0x567c5d0:s0 -> Node0x566c240;
	Node0x567c5d0:s1 -> Node0x567c760;
	Node0x567c580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%438:\l438:                                              \l  %439 = load i8, i8 addrspace(4)* %432, align 1, !tbaa !18\l  %440 = zext i8 %439 to i64\l  %441 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 1\l  %442 = load i8, i8 addrspace(4)* %441, align 1, !tbaa !18\l  %443 = zext i8 %442 to i64\l  %444 = shl nuw nsw i64 %443, 8\l  %445 = or i64 %444, %440\l  %446 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 2\l  %447 = load i8, i8 addrspace(4)* %446, align 1, !tbaa !18\l  %448 = zext i8 %447 to i64\l  %449 = shl nuw nsw i64 %448, 16\l  %450 = or i64 %445, %449\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 3\l  %452 = load i8, i8 addrspace(4)* %451, align 1, !tbaa !18\l  %453 = zext i8 %452 to i64\l  %454 = shl nuw nsw i64 %453, 24\l  %455 = or i64 %450, %454\l  %456 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 4\l  %457 = load i8, i8 addrspace(4)* %456, align 1, !tbaa !18\l  %458 = zext i8 %457 to i64\l  %459 = shl nuw nsw i64 %458, 32\l  %460 = or i64 %455, %459\l  %461 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 5\l  %462 = load i8, i8 addrspace(4)* %461, align 1, !tbaa !18\l  %463 = zext i8 %462 to i64\l  %464 = shl nuw nsw i64 %463, 40\l  %465 = or i64 %460, %464\l  %466 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 6\l  %467 = load i8, i8 addrspace(4)* %466, align 1, !tbaa !18\l  %468 = zext i8 %467 to i64\l  %469 = shl nuw nsw i64 %468, 48\l  %470 = or i64 %465, %469\l  %471 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 7\l  %472 = load i8, i8 addrspace(4)* %471, align 1, !tbaa !18\l  %473 = zext i8 %472 to i64\l  %474 = shl nuw i64 %473, 56\l  %475 = or i64 %470, %474\l  br label %489\l}"];
	Node0x567c580 -> Node0x566c240;
	Node0x567c760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%476:\l476:                                              \l  %477 = phi i32 [ %487, %476 ], [ 0, %436 ]\l  %478 = phi i64 [ %486, %476 ], [ 0, %436 ]\l  %479 = zext i32 %477 to i64\l  %480 = getelementptr inbounds i8, i8 addrspace(4)* %432, i64 %479\l  %481 = load i8, i8 addrspace(4)* %480, align 1, !tbaa !18\l  %482 = zext i8 %481 to i64\l  %483 = shl i32 %477, 3\l  %484 = zext i32 %483 to i64\l  %485 = shl nuw i64 %482, %484\l  %486 = or i64 %485, %478\l  %487 = add nuw nsw i32 %477, 1\l  %488 = icmp eq i32 %487, %433\l  br i1 %488, label %489, label %476\l|{<s0>T|<s1>F}}"];
	Node0x567c760:s0 -> Node0x566c240;
	Node0x567c760:s1 -> Node0x567c760;
	Node0x566c240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%489:\l489:                                              \l  %490 = phi i64 [ %475, %438 ], [ 0, %436 ], [ %486, %476 ]\l  %491 = shl nuw nsw i64 %72, 2\l  %492 = add nuw nsw i64 %491, 28\l  %493 = and i64 %492, 480\l  %494 = and i64 %74, -225\l  %495 = or i64 %494, %493\l  %496 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %53,\l... i64 noundef %495, i64 noundef %134, i64 noundef %194, i64 noundef %254, i64\l... noundef %314, i64 noundef %374, i64 noundef %434, i64 noundef %490) #10\l  %497 = sub i64 %64, %72\l  %498 = getelementptr inbounds i8, i8 addrspace(4)* %65, i64 %72\l  %499 = icmp eq i64 %497, 0\l  br i1 %499, label %544, label %63\l|{<s0>T|<s1>F}}"];
	Node0x566c240:s0 -> Node0x566b2f0;
	Node0x566c240:s1 -> Node0x566be00;
	Node0x5669680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%500:\l500:                                              \l  %501 = srem i32 %43, %7\l  %502 = sext i32 %501 to i64\l  %503 = getelementptr inbounds i32, i32 addrspace(1)* %3, i64 %502\l  %504 = load i32, i32 addrspace(1)* %503, align 4, !tbaa !21,\l... !amdgpu.noclobber !14\l  %505 = icmp eq i32 %504, -1\l  br i1 %505, label %510, label %506\l|{<s0>T|<s1>F}}"];
	Node0x5669680:s0 -> Node0x567f1c0;
	Node0x5669680:s1 -> Node0x567f210;
	Node0x567f210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%506:\l506:                                              \l  %507 = icmp sge i32 %501, %4\l  %508 = icmp eq i32 %501, 0\l  %509 = or i1 %507, %508\l  br i1 %509, label %510, label %513\l|{<s0>T|<s1>F}}"];
	Node0x567f210:s0 -> Node0x567f1c0;
	Node0x567f210:s1 -> Node0x567f500;
	Node0x567f1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%510:\l510:                                              \l  %511 = sext i32 %43 to i64\l  %512 = getelementptr inbounds float, float addrspace(1)* %1, i64 %511\l  store float 0.000000e+00, float addrspace(1)* %512, align 4, !tbaa !25\l  br label %544\l}"];
	Node0x567f1c0 -> Node0x566b2f0;
	Node0x567f500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%513:\l513:                                              \l  %514 = icmp slt i32 %504, 2\l  %515 = add nsw i32 %504, -1\l  %516 = select i1 %514, i32 0, i32 %515\l  %517 = zext i32 %516 to i64\l  %518 = sext i32 %43 to i64\l  %519 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %518\l  %520 = load i32, i32 addrspace(1)* %519, align 4, !tbaa !21,\l... !amdgpu.noclobber !14\l  %521 = add nsw i32 %43, -1\l  %522 = sext i32 %521 to i64\l  %523 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %522\l  %524 = load i32, i32 addrspace(1)* %523, align 4, !tbaa !21,\l... !amdgpu.noclobber !14\l  %525 = sub nsw i32 %520, %524\l  %526 = sitofp i32 %525 to double\l  %527 = sext i32 %504 to i64\l  %528 = getelementptr inbounds float, float addrspace(1)* %2, i64 %527\l  %529 = load float, float addrspace(1)* %528, align 4, !tbaa !25,\l... !amdgpu.noclobber !14\l  %530 = getelementptr inbounds float, float addrspace(1)* %2, i64 %517\l  %531 = load float, float addrspace(1)* %530, align 4, !tbaa !25,\l... !amdgpu.noclobber !14\l  %532 = fsub contract float %529, %531\l  %533 = fpext float %532 to double\l  %534 = fdiv contract double %526, %533\l  %535 = sitofp i32 %520 to double\l  %536 = fpext float %529 to double\l  %537 = fmul contract double %534, %536\l  %538 = fsub contract double %535, %537\l  %539 = sitofp i32 %501 to double\l  %540 = fmul contract double %534, %539\l  %541 = fadd contract double %540, %538\l  %542 = fptrunc double %541 to float\l  %543 = getelementptr inbounds float, float addrspace(1)* %1, i64 %518\l  store float %542, float addrspace(1)* %543, align 4, !tbaa !25\l  br label %544\l}"];
	Node0x567f500 -> Node0x566b2f0;
	Node0x566b2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%544:\l544:                                              \l  ret void\l}"];
}
