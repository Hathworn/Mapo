digraph "CFG for '_ZL19ReverseBackScanDataPiiii' function" {
	label="CFG for '_ZL19ReverseBackScanDataPiiii' function";

	Node0x611fba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = shl i32 %5, 1\l  %7 = add nuw nsw i32 %6, 1\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !4\l  %12 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !13, !invariant.load\l... !14\l  %15 = zext i16 %14 to i32\l  %16 = udiv i32 %11, %15\l  %17 = mul i32 %16, %15\l  %18 = icmp ugt i32 %11, %17\l  %19 = zext i1 %18 to i32\l  %20 = add i32 %16, %19\l  %21 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 20\l  %22 = bitcast i8 addrspace(4)* %21 to i32 addrspace(4)*\l  %23 = load i32, i32 addrspace(4)* %22, align 4, !tbaa !15\l  %24 = getelementptr i8, i8 addrspace(4)* %8, i64 8\l  %25 = bitcast i8 addrspace(4)* %24 to i16 addrspace(4)*\l  %26 = load i16, i16 addrspace(4)* %25, align 4, !range !13, !invariant.load\l... !14\l  %27 = zext i16 %26 to i32\l  %28 = udiv i32 %23, %27\l  %29 = mul i32 %28, %27\l  %30 = icmp ugt i32 %23, %29\l  %31 = zext i1 %30 to i32\l  %32 = add i32 %28, %31\l  %33 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %34 = mul i32 %32, %15\l  %35 = shl i32 %34, 1\l  %36 = mul i32 %35, %7\l  %37 = mul i32 %36, %20\l  %38 = mul i32 %34, %33\l  %39 = tail call i32 @llvm.amdgcn.workgroup.id.z()\l  %40 = mul i32 %39, %15\l  %41 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !16\l  %42 = add i32 %40, %41\l  %43 = add i32 %42, %38\l  %44 = add i32 %43, %37\l  %45 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 16\l  %46 = bitcast i8 addrspace(4)* %45 to i32 addrspace(4)*\l  %47 = load i32, i32 addrspace(4)* %46, align 8, !tbaa !17\l  %48 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %49 = bitcast i8 addrspace(4)* %48 to i16 addrspace(4)*\l  %50 = load i16, i16 addrspace(4)* %49, align 2, !range !13, !invariant.load\l... !14\l  %51 = zext i16 %50 to i32\l  %52 = udiv i32 %47, %51\l  %53 = mul i32 %52, %51\l  %54 = icmp ugt i32 %47, %53\l  %55 = zext i1 %54 to i32\l  %56 = add i32 %52, %55\l  %57 = shl i32 %56, 1\l  %58 = xor i32 %33, -1\l  %59 = add i32 %57, %58\l  %60 = mul i32 %34, %59\l  %61 = add i32 %42, %37\l  %62 = add i32 %61, %60\l  %63 = sext i32 %44 to i64\l  %64 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %63\l  %65 = load i32, i32 addrspace(1)* %64, align 4, !tbaa !18, !amdgpu.noclobber\l... !14\l  %66 = sext i32 %62 to i64\l  %67 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %66\l  %68 = load i32, i32 addrspace(1)* %67, align 4, !tbaa !18, !amdgpu.noclobber\l... !14\l  store i32 %68, i32 addrspace(1)* %64, align 4, !tbaa !18\l  store i32 %65, i32 addrspace(1)* %67, align 4, !tbaa !18\l  ret void\l}"];
}
