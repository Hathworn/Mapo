digraph "CFG for '_Z22matrixPolyderNewLayoutPKfPfiiim' function" {
	label="CFG for '_Z22matrixPolyderNewLayoutPKfPfiiim' function";

	Node0x4c3b970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %11 = bitcast i8 addrspace(4)* %10 to i16 addrspace(4)*\l  %12 = load i16, i16 addrspace(4)* %11, align 4, !range !5, !invariant.load !6\l  %13 = zext i16 %12 to i32\l  %14 = mul i32 %9, %13\l  %15 = add i32 %14, %7\l  %16 = zext i32 %15 to i64\l  %17 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %18 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %19 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %20 = bitcast i8 addrspace(4)* %19 to i16 addrspace(4)*\l  %21 = load i16, i16 addrspace(4)* %20, align 2, !range !5, !invariant.load !6\l  %22 = zext i16 %21 to i32\l  %23 = mul i32 %18, %22\l  %24 = add i32 %23, %17\l  %25 = zext i32 %24 to i64\l  %26 = sext i32 %2 to i64\l  %27 = icmp ult i64 %16, %26\l  %28 = sext i32 %3 to i64\l  %29 = icmp ult i64 %25, %28\l  %30 = select i1 %27, i1 %29, i1 false\l  br i1 %30, label %31, label %158\l|{<s0>T|<s1>F}}"];
	Node0x4c3b970:s0 -> Node0x4c3f5e0;
	Node0x4c3b970:s1 -> Node0x4c3f670;
	Node0x4c3f5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%31:\l31:                                               \l  %32 = add i32 %4, -1\l  %33 = icmp sgt i32 %4, 1\l  br i1 %33, label %34, label %158\l|{<s0>T|<s1>F}}"];
	Node0x4c3f5e0:s0 -> Node0x4c3d920;
	Node0x4c3f5e0:s1 -> Node0x4c3f670;
	Node0x4c3d920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%34:\l34:                                               \l  %35 = zext i32 %4 to i64\l  %36 = zext i32 %32 to i64\l  %37 = mul nsw i64 %25, %26\l  %38 = add nsw i64 %37, %16\l  %39 = mul i64 %38, %36\l  %40 = mul i64 %38, %35\l  %41 = add i32 %4, -2\l  %42 = and i32 %32, 7\l  %43 = icmp ult i32 %41, 7\l  br i1 %43, label %139, label %44\l|{<s0>T|<s1>F}}"];
	Node0x4c3d920:s0 -> Node0x4c40060;
	Node0x4c3d920:s1 -> Node0x4c400b0;
	Node0x4c400b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%44:\l44:                                               \l  %45 = and i32 %32, -8\l  br label %46\l}"];
	Node0x4c400b0 -> Node0x4c402b0;
	Node0x4c402b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %44 ], [ %136, %46 ]\l  %48 = phi i32 [ 0, %44 ], [ %137, %46 ]\l  %49 = zext i32 %47 to i64\l  %50 = add i64 %39, %49\l  %51 = add i64 %40, %49\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = xor i32 %47, -1\l  %55 = add i32 %54, %4\l  %56 = sitofp i32 %55 to float\l  %57 = fmul contract float %53, %56\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %50\l  store float %57, float addrspace(1)* %58, align 4, !tbaa !7\l  %59 = or i32 %47, 1\l  %60 = zext i32 %59 to i64\l  %61 = add i64 %39, %60\l  %62 = add i64 %40, %60\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %62\l  %64 = load float, float addrspace(1)* %63, align 4, !tbaa !7\l  %65 = sub i32 %4, %47\l  %66 = add i32 %65, -2\l  %67 = sitofp i32 %66 to float\l  %68 = fmul contract float %64, %67\l  %69 = getelementptr inbounds float, float addrspace(1)* %1, i64 %61\l  store float %68, float addrspace(1)* %69, align 4, !tbaa !7\l  %70 = or i32 %47, 2\l  %71 = zext i32 %70 to i64\l  %72 = add i64 %39, %71\l  %73 = add i64 %40, %71\l  %74 = getelementptr inbounds float, float addrspace(1)* %0, i64 %73\l  %75 = load float, float addrspace(1)* %74, align 4, !tbaa !7\l  %76 = sub i32 %4, %47\l  %77 = add i32 %76, -3\l  %78 = sitofp i32 %77 to float\l  %79 = fmul contract float %75, %78\l  %80 = getelementptr inbounds float, float addrspace(1)* %1, i64 %72\l  store float %79, float addrspace(1)* %80, align 4, !tbaa !7\l  %81 = or i32 %47, 3\l  %82 = zext i32 %81 to i64\l  %83 = add i64 %39, %82\l  %84 = add i64 %40, %82\l  %85 = getelementptr inbounds float, float addrspace(1)* %0, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !7\l  %87 = sub i32 %4, %47\l  %88 = add i32 %87, -4\l  %89 = sitofp i32 %88 to float\l  %90 = fmul contract float %86, %89\l  %91 = getelementptr inbounds float, float addrspace(1)* %1, i64 %83\l  store float %90, float addrspace(1)* %91, align 4, !tbaa !7\l  %92 = or i32 %47, 4\l  %93 = zext i32 %92 to i64\l  %94 = add i64 %39, %93\l  %95 = add i64 %40, %93\l  %96 = getelementptr inbounds float, float addrspace(1)* %0, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !7\l  %98 = sub i32 %4, %47\l  %99 = add i32 %98, -5\l  %100 = sitofp i32 %99 to float\l  %101 = fmul contract float %97, %100\l  %102 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  store float %101, float addrspace(1)* %102, align 4, !tbaa !7\l  %103 = or i32 %47, 5\l  %104 = zext i32 %103 to i64\l  %105 = add i64 %39, %104\l  %106 = add i64 %40, %104\l  %107 = getelementptr inbounds float, float addrspace(1)* %0, i64 %106\l  %108 = load float, float addrspace(1)* %107, align 4, !tbaa !7\l  %109 = sub i32 %4, %47\l  %110 = add i32 %109, -6\l  %111 = sitofp i32 %110 to float\l  %112 = fmul contract float %108, %111\l  %113 = getelementptr inbounds float, float addrspace(1)* %1, i64 %105\l  store float %112, float addrspace(1)* %113, align 4, !tbaa !7\l  %114 = or i32 %47, 6\l  %115 = zext i32 %114 to i64\l  %116 = add i64 %39, %115\l  %117 = add i64 %40, %115\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = sub i32 %4, %47\l  %121 = add i32 %120, -7\l  %122 = sitofp i32 %121 to float\l  %123 = fmul contract float %119, %122\l  %124 = getelementptr inbounds float, float addrspace(1)* %1, i64 %116\l  store float %123, float addrspace(1)* %124, align 4, !tbaa !7\l  %125 = or i32 %47, 7\l  %126 = zext i32 %125 to i64\l  %127 = add i64 %39, %126\l  %128 = add i64 %40, %126\l  %129 = getelementptr inbounds float, float addrspace(1)* %0, i64 %128\l  %130 = load float, float addrspace(1)* %129, align 4, !tbaa !7\l  %131 = sub i32 %4, %47\l  %132 = add i32 %131, -8\l  %133 = sitofp i32 %132 to float\l  %134 = fmul contract float %130, %133\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %127\l  store float %134, float addrspace(1)* %135, align 4, !tbaa !7\l  %136 = add nuw nsw i32 %47, 8\l  %137 = add i32 %48, 8\l  %138 = icmp eq i32 %137, %45\l  br i1 %138, label %139, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4c402b0:s0 -> Node0x4c40060;
	Node0x4c402b0:s1 -> Node0x4c402b0;
	Node0x4c40060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%139:\l139:                                              \l  %140 = phi i32 [ 0, %34 ], [ %136, %46 ]\l  %141 = icmp eq i32 %42, 0\l  br i1 %141, label %158, label %142\l|{<s0>T|<s1>F}}"];
	Node0x4c40060:s0 -> Node0x4c3f670;
	Node0x4c40060:s1 -> Node0x4c44ce0;
	Node0x4c44ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%142:\l142:                                              \l  %143 = phi i32 [ %155, %142 ], [ %140, %139 ]\l  %144 = phi i32 [ %156, %142 ], [ 0, %139 ]\l  %145 = zext i32 %143 to i64\l  %146 = add i64 %39, %145\l  %147 = add i64 %40, %145\l  %148 = getelementptr inbounds float, float addrspace(1)* %0, i64 %147\l  %149 = load float, float addrspace(1)* %148, align 4, !tbaa !7\l  %150 = xor i32 %143, -1\l  %151 = add i32 %150, %4\l  %152 = sitofp i32 %151 to float\l  %153 = fmul contract float %149, %152\l  %154 = getelementptr inbounds float, float addrspace(1)* %1, i64 %146\l  store float %153, float addrspace(1)* %154, align 4, !tbaa !7\l  %155 = add nuw nsw i32 %143, 1\l  %156 = add i32 %144, 1\l  %157 = icmp eq i32 %156, %42\l  br i1 %157, label %158, label %142, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4c44ce0:s0 -> Node0x4c3f670;
	Node0x4c44ce0:s1 -> Node0x4c44ce0;
	Node0x4c3f670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%158:\l158:                                              \l  ret void\l}"];
}
