digraph "CFG for '_Z17convolutionGlobalPfS_S_iiii' function" {
	label="CFG for '_Z17convolutionGlobalPfS_S_iiii' function";

	Node0x505ee30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%7:\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %9 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr i8, i8 addrspace(4)* %9, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !5, !invariant.load !6\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %10, %14\l  %16 = add i32 %15, %8\l  %17 = zext i32 %16 to i64\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %19 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %20 = getelementptr i8, i8 addrspace(4)* %9, i64 6\l  %21 = bitcast i8 addrspace(4)* %20 to i16 addrspace(4)*\l  %22 = load i16, i16 addrspace(4)* %21, align 2, !range !5, !invariant.load !6\l  %23 = zext i16 %22 to i32\l  %24 = mul i32 %19, %23\l  %25 = add i32 %24, %18\l  %26 = zext i32 %25 to i64\l  %27 = sext i32 %6 to i64\l  %28 = ashr i32 %6, 1\l  %29 = sext i32 %3 to i64\l  %30 = icmp ult i64 %17, %29\l  br i1 %30, label %31, label %95\l|{<s0>T|<s1>F}}"];
	Node0x505ee30:s0 -> Node0x50629c0;
	Node0x505ee30:s1 -> Node0x5062a50;
	Node0x50629c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%31:\l31:                                               \l  %32 = sext i32 %4 to i64\l  %33 = icmp ult i64 %26, %32\l  %34 = icmp ne i32 %5, 0\l  %35 = select i1 %33, i1 %34, i1 false\l  br i1 %35, label %36, label %95\l|{<s0>T|<s1>F}}"];
	Node0x50629c0:s0 -> Node0x5062f50;
	Node0x50629c0:s1 -> Node0x5062a50;
	Node0x5062f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%36:\l36:                                               \l  %37 = icmp eq i32 %6, 0\l  %38 = sext i32 %28 to i64\l  %39 = add nsw i64 %17, %38\l  %40 = add nsw i32 %3, -1\l  %41 = add nsw i64 %26, %38\l  %42 = add nsw i32 %4, -1\l  %43 = mul nsw i64 %26, %29\l  %44 = add nsw i64 %43, %17\l  %45 = mul i32 %4, %3\l  br label %46\l}"];
	Node0x5062f50 -> Node0x5063570;
	Node0x5063570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%46:\l46:                                               \l  %47 = phi i32 [ 0, %36 ], [ %56, %50 ]\l  br i1 %37, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x5063570:s0 -> Node0x5063660;
	Node0x5063570:s1 -> Node0x50637a0;
	Node0x50637a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%48:\l48:                                               \l  %49 = mul i32 %47, %4\l  br label %58\l}"];
	Node0x50637a0 -> Node0x5063970;
	Node0x5063660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%50:\l50:                                               \l  %51 = phi float [ 0.000000e+00, %46 ], [ %91, %67 ]\l  %52 = mul i32 %45, %47\l  %53 = zext i32 %52 to i64\l  %54 = add i64 %44, %53\l  %55 = getelementptr inbounds float, float addrspace(1)* %2, i64 %54\l  store float %51, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = add nuw i32 %47, 1\l  %57 = icmp eq i32 %56, %5\l  br i1 %57, label %95, label %46, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5063660:s0 -> Node0x5062a50;
	Node0x5063660:s1 -> Node0x5063570;
	Node0x5063970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%58:\l58:                                               \l  %59 = phi i64 [ 0, %48 ], [ %69, %67 ]\l  %60 = phi float [ 0.000000e+00, %48 ], [ %91, %67 ]\l  %61 = icmp ult i64 %39, %59\l  %62 = sub nsw i64 %39, %59\l  %63 = icmp ult i64 %62, %29\l  %64 = trunc i64 %62 to i32\l  %65 = select i1 %63, i32 %64, i32 %40\l  %66 = select i1 %61, i32 0, i32 %65\l  br label %71\l}"];
	Node0x5063970 -> Node0x5062d60;
	Node0x50644b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%67:\l67:                                               \l  %68 = add nuw nsw i64 %59, 1\l  %69 = and i64 %68, 4294967295\l  %70 = icmp ult i64 %69, %27\l  br i1 %70, label %58, label %50, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x50644b0:s0 -> Node0x5063970;
	Node0x50644b0:s1 -> Node0x5063660;
	Node0x5062d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i64 [ 0, %58 ], [ %93, %71 ]\l  %73 = phi float [ %60, %58 ], [ %91, %71 ]\l  %74 = icmp ult i64 %41, %72\l  %75 = sub nsw i64 %41, %72\l  %76 = icmp ult i64 %75, %32\l  %77 = trunc i64 %75 to i32\l  %78 = select i1 %76, i32 %77, i32 %42\l  %79 = select i1 %74, i32 0, i32 %78\l  %80 = mul nsw i64 %72, %27\l  %81 = add i64 %80, %59\l  %82 = getelementptr inbounds float, float addrspace(1)* %1, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !7\l  %84 = add i32 %79, %49\l  %85 = mul i32 %84, %3\l  %86 = add i32 %85, %66\l  %87 = zext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = fmul contract float %83, %89\l  %91 = fadd contract float %73, %90\l  %92 = add nuw nsw i64 %72, 1\l  %93 = and i64 %92, 4294967295\l  %94 = icmp ult i64 %93, %27\l  br i1 %94, label %71, label %67, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5062d60:s0 -> Node0x5062d60;
	Node0x5062d60:s1 -> Node0x50644b0;
	Node0x5062a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%95:\l95:                                               \l  ret void\l}"];
}
