digraph "CFG for '_Z21createLaplacianKernelPfS_ii' function" {
	label="CFG for '_Z21createLaplacianKernelPfS_ii' function";

	Node0x4f06200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !5, !invariant.load !6\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = mul i32 %11, %10\l  %13 = add i32 %12, %5\l  %14 = zext i32 %13 to i64\l  %15 = sext i32 %3 to i64\l  %16 = icmp ult i64 %14, %15\l  %17 = icmp sgt i32 %2, 0\l  %18 = select i1 %16, i1 %17, i1 false\l  br i1 %18, label %19, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4f06200:s0 -> Node0x4f083a0;
	Node0x4f06200:s1 -> Node0x4f08430;
	Node0x4f083a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%19:\l19:                                               \l  %20 = getelementptr inbounds float, float addrspace(1)* %1, i64 %14\l  %21 = getelementptr inbounds float, float addrspace(1)* %0, i64 %14\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7\l  store float %22, float addrspace(1)* %20, align 4, !tbaa !7\l  %23 = icmp eq i32 %2, 1\l  br i1 %23, label %110, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4f083a0:s0 -> Node0x4f08430;
	Node0x4f083a0:s1 -> Node0x4f08fb0;
	Node0x4f08fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%24:\l24:                                               \l  %25 = add i32 %2, -1\l  %26 = add i32 %2, -2\l  %27 = and i32 %25, 7\l  %28 = icmp ult i32 %26, 7\l  br i1 %28, label %93, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4f08fb0:s0 -> Node0x4f093c0;
	Node0x4f08fb0:s1 -> Node0x4f09410;
	Node0x4f09410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%29:\l29:                                               \l  %30 = and i32 %25, -8\l  br label %31\l}"];
	Node0x4f09410 -> Node0x4f09610;
	Node0x4f09610 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%31:\l31:                                               \l  %32 = phi float [ %22, %29 ], [ %89, %31 ]\l  %33 = phi i32 [ 1, %29 ], [ %90, %31 ]\l  %34 = phi i32 [ 0, %29 ], [ %91, %31 ]\l  %35 = mul nsw i32 %33, %3\l  %36 = sext i32 %35 to i64\l  %37 = add nsw i64 %36, %14\l  %38 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %40 = fadd contract float %39, %32\l  store float %40, float addrspace(1)* %20, align 4, !tbaa !7\l  %41 = add nuw nsw i32 %33, 1\l  %42 = mul nsw i32 %41, %3\l  %43 = sext i32 %42 to i64\l  %44 = add nsw i64 %43, %14\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !7\l  %47 = fadd contract float %46, %40\l  store float %47, float addrspace(1)* %20, align 4, !tbaa !7\l  %48 = add nuw nsw i32 %33, 2\l  %49 = mul nsw i32 %48, %3\l  %50 = sext i32 %49 to i64\l  %51 = add nsw i64 %50, %14\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !7\l  %54 = fadd contract float %53, %47\l  store float %54, float addrspace(1)* %20, align 4, !tbaa !7\l  %55 = add nuw nsw i32 %33, 3\l  %56 = mul nsw i32 %55, %3\l  %57 = sext i32 %56 to i64\l  %58 = add nsw i64 %57, %14\l  %59 = getelementptr inbounds float, float addrspace(1)* %0, i64 %58\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fadd contract float %60, %54\l  store float %61, float addrspace(1)* %20, align 4, !tbaa !7\l  %62 = add nuw nsw i32 %33, 4\l  %63 = mul nsw i32 %62, %3\l  %64 = sext i32 %63 to i64\l  %65 = add nsw i64 %64, %14\l  %66 = getelementptr inbounds float, float addrspace(1)* %0, i64 %65\l  %67 = load float, float addrspace(1)* %66, align 4, !tbaa !7\l  %68 = fadd contract float %67, %61\l  store float %68, float addrspace(1)* %20, align 4, !tbaa !7\l  %69 = add nuw nsw i32 %33, 5\l  %70 = mul nsw i32 %69, %3\l  %71 = sext i32 %70 to i64\l  %72 = add nsw i64 %71, %14\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = fadd contract float %74, %68\l  store float %75, float addrspace(1)* %20, align 4, !tbaa !7\l  %76 = add nuw nsw i32 %33, 6\l  %77 = mul nsw i32 %76, %3\l  %78 = sext i32 %77 to i64\l  %79 = add nsw i64 %78, %14\l  %80 = getelementptr inbounds float, float addrspace(1)* %0, i64 %79\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = fadd contract float %81, %75\l  store float %82, float addrspace(1)* %20, align 4, !tbaa !7\l  %83 = add nuw nsw i32 %33, 7\l  %84 = mul nsw i32 %83, %3\l  %85 = sext i32 %84 to i64\l  %86 = add nsw i64 %85, %14\l  %87 = getelementptr inbounds float, float addrspace(1)* %0, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fadd contract float %88, %82\l  store float %89, float addrspace(1)* %20, align 4, !tbaa !7\l  %90 = add nuw nsw i32 %33, 8\l  %91 = add i32 %34, 8\l  %92 = icmp eq i32 %91, %30\l  br i1 %92, label %93, label %31, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4f09610:s0 -> Node0x4f093c0;
	Node0x4f09610:s1 -> Node0x4f09610;
	Node0x4f093c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%93:\l93:                                               \l  %94 = phi float [ %22, %24 ], [ %89, %31 ]\l  %95 = phi i32 [ 1, %24 ], [ %90, %31 ]\l  %96 = icmp eq i32 %27, 0\l  br i1 %96, label %110, label %97\l|{<s0>T|<s1>F}}"];
	Node0x4f093c0:s0 -> Node0x4f08430;
	Node0x4f093c0:s1 -> Node0x4f0c530;
	Node0x4f0c530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi float [ %106, %97 ], [ %94, %93 ]\l  %99 = phi i32 [ %107, %97 ], [ %95, %93 ]\l  %100 = phi i32 [ %108, %97 ], [ 0, %93 ]\l  %101 = mul nsw i32 %99, %3\l  %102 = sext i32 %101 to i64\l  %103 = add nsw i64 %102, %14\l  %104 = getelementptr inbounds float, float addrspace(1)* %0, i64 %103\l  %105 = load float, float addrspace(1)* %104, align 4, !tbaa !7\l  %106 = fadd contract float %105, %98\l  store float %106, float addrspace(1)* %20, align 4, !tbaa !7\l  %107 = add nuw nsw i32 %99, 1\l  %108 = add i32 %100, 1\l  %109 = icmp eq i32 %108, %27\l  br i1 %109, label %110, label %97, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x4f0c530:s0 -> Node0x4f08430;
	Node0x4f0c530:s1 -> Node0x4f0c530;
	Node0x4f08430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%110:\l110:                                              \l  ret void\l}"];
}
