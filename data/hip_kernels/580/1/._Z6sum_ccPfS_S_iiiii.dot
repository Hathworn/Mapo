digraph "CFG for '_Z6sum_ccPfS_S_iiiii' function" {
	label="CFG for '_Z6sum_ccPfS_S_iiiii' function";

	Node0x4cd1650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*\l  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5\l  %14 = zext i16 %13 to i32\l  %15 = mul i32 %9, %14\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %17 = add i32 %15, %16\l  %18 = add nsw i32 %17, %6\l  %19 = icmp slt i32 %18, %5\l  %20 = icmp slt i32 %17, %7\l  %21 = and i1 %20, %19\l  br i1 %21, label %22, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4cd1650:s0 -> Node0x4cd3730;
	Node0x4cd1650:s1 -> Node0x4cd37c0;
	Node0x4cd3730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%22:\l22:                                               \l  %23 = mul i32 %4, %3\l  %24 = mul i32 %23, %17\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds float, float addrspace(1)* %0, i64 %25\l  %27 = icmp sgt i32 %23, 0\l  br i1 %27, label %28, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4cd3730:s0 -> Node0x4cd3bc0;
	Node0x4cd3730:s1 -> Node0x4cd37c0;
	Node0x4cd3bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%28:\l28:                                               \l  %29 = sext i32 %17 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %1, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %32 = and i32 %23, 7\l  %33 = icmp ult i32 %23, 8\l  br i1 %33, label %106, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4cd3bc0:s0 -> Node0x4cd34a0;
	Node0x4cd3bc0:s1 -> Node0x4cd4250;
	Node0x4cd4250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%34:\l34:                                               \l  %35 = and i32 %23, -8\l  br label %36\l}"];
	Node0x4cd4250 -> Node0x4cd4450;
	Node0x4cd4450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%36:\l36:                                               \l  %37 = phi float [ %31, %34 ], [ %102, %36 ]\l  %38 = phi i32 [ 0, %34 ], [ %103, %36 ]\l  %39 = phi i32 [ 0, %34 ], [ %104, %36 ]\l  %40 = zext i32 %38 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %26, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !7\l  %43 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !7\l  %45 = fmul contract float %42, %44\l  %46 = fadd contract float %37, %45\l  store float %46, float addrspace(1)* %30, align 4, !tbaa !7\l  %47 = or i32 %38, 1\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds float, float addrspace(1)* %26, i64 %48\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !7\l  %51 = getelementptr inbounds float, float addrspace(1)* %2, i64 %48\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = fmul contract float %50, %52\l  %54 = fadd contract float %46, %53\l  store float %54, float addrspace(1)* %30, align 4, !tbaa !7\l  %55 = or i32 %38, 2\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds float, float addrspace(1)* %26, i64 %56\l  %58 = load float, float addrspace(1)* %57, align 4, !tbaa !7\l  %59 = getelementptr inbounds float, float addrspace(1)* %2, i64 %56\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !7\l  %61 = fmul contract float %58, %60\l  %62 = fadd contract float %54, %61\l  store float %62, float addrspace(1)* %30, align 4, !tbaa !7\l  %63 = or i32 %38, 3\l  %64 = zext i32 %63 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %26, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !7\l  %67 = getelementptr inbounds float, float addrspace(1)* %2, i64 %64\l  %68 = load float, float addrspace(1)* %67, align 4, !tbaa !7\l  %69 = fmul contract float %66, %68\l  %70 = fadd contract float %62, %69\l  store float %70, float addrspace(1)* %30, align 4, !tbaa !7\l  %71 = or i32 %38, 4\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds float, float addrspace(1)* %26, i64 %72\l  %74 = load float, float addrspace(1)* %73, align 4, !tbaa !7\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %72\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fmul contract float %74, %76\l  %78 = fadd contract float %70, %77\l  store float %78, float addrspace(1)* %30, align 4, !tbaa !7\l  %79 = or i32 %38, 5\l  %80 = zext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %26, i64 %80\l  %82 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  %83 = getelementptr inbounds float, float addrspace(1)* %2, i64 %80\l  %84 = load float, float addrspace(1)* %83, align 4, !tbaa !7\l  %85 = fmul contract float %82, %84\l  %86 = fadd contract float %78, %85\l  store float %86, float addrspace(1)* %30, align 4, !tbaa !7\l  %87 = or i32 %38, 6\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds float, float addrspace(1)* %26, i64 %88\l  %90 = load float, float addrspace(1)* %89, align 4, !tbaa !7\l  %91 = getelementptr inbounds float, float addrspace(1)* %2, i64 %88\l  %92 = load float, float addrspace(1)* %91, align 4, !tbaa !7\l  %93 = fmul contract float %90, %92\l  %94 = fadd contract float %86, %93\l  store float %94, float addrspace(1)* %30, align 4, !tbaa !7\l  %95 = or i32 %38, 7\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %26, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = getelementptr inbounds float, float addrspace(1)* %2, i64 %96\l  %100 = load float, float addrspace(1)* %99, align 4, !tbaa !7\l  %101 = fmul contract float %98, %100\l  %102 = fadd contract float %94, %101\l  store float %102, float addrspace(1)* %30, align 4, !tbaa !7\l  %103 = add nuw nsw i32 %38, 8\l  %104 = add i32 %39, 8\l  %105 = icmp eq i32 %104, %35\l  br i1 %105, label %106, label %36, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x4cd4450:s0 -> Node0x4cd34a0;
	Node0x4cd4450:s1 -> Node0x4cd4450;
	Node0x4cd34a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%106:\l106:                                              \l  %107 = phi float [ %31, %28 ], [ %102, %36 ]\l  %108 = phi i32 [ 0, %28 ], [ %103, %36 ]\l  %109 = icmp eq i32 %32, 0\l  br i1 %109, label %124, label %110\l|{<s0>T|<s1>F}}"];
	Node0x4cd34a0:s0 -> Node0x4cd37c0;
	Node0x4cd34a0:s1 -> Node0x4cd7c50;
	Node0x4cd7c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi float [ %120, %110 ], [ %107, %106 ]\l  %112 = phi i32 [ %121, %110 ], [ %108, %106 ]\l  %113 = phi i32 [ %122, %110 ], [ 0, %106 ]\l  %114 = zext i32 %112 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %26, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !7\l  %117 = getelementptr inbounds float, float addrspace(1)* %2, i64 %114\l  %118 = load float, float addrspace(1)* %117, align 4, !tbaa !7\l  %119 = fmul contract float %116, %118\l  %120 = fadd contract float %111, %119\l  store float %120, float addrspace(1)* %30, align 4, !tbaa !7\l  %121 = add nuw nsw i32 %112, 1\l  %122 = add i32 %113, 1\l  %123 = icmp eq i32 %122, %32\l  br i1 %123, label %124, label %110, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cd7c50:s0 -> Node0x4cd37c0;
	Node0x4cd7c50:s1 -> Node0x4cd7c50;
	Node0x4cd37c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%124:\l124:                                              \l  ret void\l}"];
}
