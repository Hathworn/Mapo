digraph "CFG for '_Z12network_corrPfS_PiS_S_mmmmmiiS_' function" {
	label="CFG for '_Z12network_corrPfS_PiS_S_mmmmmiiS_' function";

	Node0x57a5570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%13:\l  %14 = shl i64 %6, 32\l  %15 = and i64 %14, -137438953472\l  %16 = add i64 %15, 137438953472\l  %17 = lshr exact i64 %16, 32\l  %18 = trunc i64 %17 to i32\l  %19 = or i32 %18, 4\l  %20 = getelementptr inbounds [0 x float], [0 x float] addrspace(3)* @shared,\l... i32 0, i32 %19\l  %21 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %22 = zext i32 %21 to i64\l  %23 = freeze i64 %22\l  %24 = freeze i64 %8\l  %25 = udiv i64 %23, %24\l  %26 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %27 = getelementptr i8, i8 addrspace(4)* %26, i64 4\l  %28 = bitcast i8 addrspace(4)* %27 to i16 addrspace(4)*\l  %29 = load i16, i16 addrspace(4)* %28, align 4, !range !4, !invariant.load !5\l  %30 = zext i16 %29 to i32\l  %31 = trunc i64 %25 to i32\l  %32 = mul i32 %30, %31\l  %33 = add i32 %32, %10\l  %34 = trunc i64 %5 to i32\l  %35 = mul i32 %33, %34\l  %36 = mul i64 %25, %24\l  %37 = sub i64 %23, %36\l  %38 = icmp eq i64 %9, 0\l  br i1 %38, label %273, label %39\l|{<s0>T|<s1>F}}"];
	Node0x57a5570:s0 -> Node0x57a8300;
	Node0x57a5570:s1 -> Node0x57a8390;
	Node0x57a8390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%39:\l39:                                               \l  %40 = zext i32 %10 to i64\l  %41 = shl nuw i64 %37, 32\l  %42 = ashr exact i64 %41, 32\l  %43 = mul i64 %42, %9\l  %44 = sext i32 %35 to i64\l  %45 = tail call i32 @llvm.amdgcn.workitem.id.x()\l  %46 = zext i32 %45 to i64\l  %47 = sub nsw i64 %46, %40\l  %48 = mul i64 %9, %8\l  %49 = mul i64 %37, %9\l  %50 = mul i64 %46, %5\l  %51 = add i64 %50, %6\l  %52 = icmp eq i32 %45, 0\l  %53 = sext i32 %45 to i64\l  %54 = icmp ult i64 %53, %6\l  %55 = zext i16 %29 to i64\l  %56 = mul i64 %55, %5\l  %57 = add i64 %56, %6\l  %58 = icmp eq i64 %6, 0\l  %59 = mul i32 %45, %34\l  %60 = sext i32 %11 to i64\l  %61 = mul i64 %48, %60\l  %62 = and i64 %6, 7\l  %63 = icmp ult i64 %6, 8\l  %64 = and i64 %6, -8\l  %65 = icmp eq i64 %62, 0\l  br label %66\l}"];
	Node0x57a8390 -> Node0x57a7f40;
	Node0x57a7f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%66:\l66:                                               \l  %67 = phi i64 [ 0, %39 ], [ %271, %269 ]\l  %68 = add i64 %67, %43\l  %69 = getelementptr inbounds float, float addrspace(1)* %4, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !6\l  %71 = fcmp contract une float %70, 0.000000e+00\l  br i1 %71, label %72, label %269\l|{<s0>T|<s1>F}}"];
	Node0x57a7f40:s0 -> Node0x57aa6e0;
	Node0x57a7f40:s1 -> Node0x57a8070;
	Node0x57aa6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%72:\l72:                                               \l  %73 = udiv i64 %44, %5\l  %74 = add i64 %47, %73\l  %75 = mul i64 %48, %74\l  %76 = add i64 %75, %43\l  %77 = add i64 %67, %76\l  %78 = add i64 %67, %49\l  %79 = mul i64 %78, %6\l  %80 = trunc i64 %79 to i32\l  %81 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %68\l  %82 = load i32, i32 addrspace(1)* %81, align 4, !tbaa !10\l  %83 = add nsw i32 %82, %35\l  %84 = zext i32 %83 to i64\l  %85 = add i64 %51, %84\l  %86 = mul i64 %78, %7\l  %87 = trunc i64 %86 to i32\l  %88 = add i32 %83, %87\l  br i1 %52, label %89, label %94\l|{<s0>T|<s1>F}}"];
	Node0x57aa6e0:s0 -> Node0x57ab1b0;
	Node0x57aa6e0:s1 -> Node0x57ab240;
	Node0x57ab1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%89:\l89:                                               \l  %90 = shl i64 %68, 32\l  %91 = ashr exact i64 %90, 32\l  %92 = getelementptr inbounds float, float addrspace(1)* %1, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !6\l  store float %93, float addrspace(3)* getelementptr inbounds ([0 x float], [0\l... x float] addrspace(3)* @shared, i32 0, i32 0), align 4, !tbaa !6\l  br label %94\l}"];
	Node0x57ab1b0 -> Node0x57ab240;
	Node0x57ab240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%94:\l94:                                               \l  br i1 %54, label %99, label %95\l|{<s0>T|<s1>F}}"];
	Node0x57ab240:s0 -> Node0x57abf60;
	Node0x57ab240:s1 -> Node0x57abfb0;
	Node0x57abfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%95:\l95:                                               \l  %96 = phi i64 [ %53, %94 ], [ %117, %115 ]\l  %97 = phi i32 [ %45, %94 ], [ %116, %115 ]\l  %98 = icmp ugt i64 %57, %96\l  br i1 %98, label %119, label %134\l|{<s0>T|<s1>F}}"];
	Node0x57abfb0:s0 -> Node0x57ac3a0;
	Node0x57abfb0:s1 -> Node0x57ac430;
	Node0x57abf60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%99:\l99:                                               \l  %100 = phi i32 [ %116, %115 ], [ %45, %94 ]\l  %101 = add nsw i32 %100, %80\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %102\l  %104 = load float, float addrspace(1)* %103, align 4, !tbaa !6\l  %105 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %100\l  store float %104, float addrspace(3)* %105, align 4, !tbaa !6\l  %106 = add nsw i32 %100, %83\l  %107 = sext i32 %106 to i64\l  %108 = icmp ult i64 %107, %7\l  br i1 %108, label %109, label %115\l|{<s0>T|<s1>F}}"];
	Node0x57abf60:s0 -> Node0x57acbb0;
	Node0x57abf60:s1 -> Node0x57ac0b0;
	Node0x57acbb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%109:\l109:                                              \l  %110 = add nsw i32 %100, %88\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %3, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !6\l  %114 = getelementptr inbounds float, float addrspace(3)* %20, i32 %100\l  store float %113, float addrspace(3)* %114, align 4, !tbaa !6\l  br label %115\l}"];
	Node0x57acbb0 -> Node0x57ac0b0;
	Node0x57ac0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%115:\l115:                                              \l  %116 = add i32 %100, %30\l  %117 = sext i32 %116 to i64\l  %118 = icmp ult i64 %117, %6\l  br i1 %118, label %99, label %95, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x57ac0b0:s0 -> Node0x57abf60;
	Node0x57ac0b0:s1 -> Node0x57abfb0;
	Node0x57ac3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%119:\l119:                                              \l  %120 = phi i32 [ %131, %130 ], [ %97, %95 ]\l  %121 = add nsw i32 %120, %83\l  %122 = sext i32 %121 to i64\l  %123 = icmp ult i64 %122, %7\l  br i1 %123, label %124, label %130\l|{<s0>T|<s1>F}}"];
	Node0x57ac3a0:s0 -> Node0x57ad5f0;
	Node0x57ac3a0:s1 -> Node0x57ad320;
	Node0x57ad5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%124:\l124:                                              \l  %125 = add nsw i32 %120, %88\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %3, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !6\l  %129 = getelementptr inbounds float, float addrspace(3)* %20, i32 %120\l  store float %128, float addrspace(3)* %129, align 4, !tbaa !6\l  br label %130\l}"];
	Node0x57ad5f0 -> Node0x57ad320;
	Node0x57ad320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%130:\l130:                                              \l  %131 = add i32 %120, %30\l  %132 = sext i32 %131 to i64\l  %133 = icmp ugt i64 %57, %132\l  br i1 %133, label %119, label %134, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x57ad320:s0 -> Node0x57ac3a0;
	Node0x57ad320:s1 -> Node0x57ac430;
	Node0x57ac430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%134:\l134:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %135 = shl i64 %85, 32\l  %136 = ashr exact i64 %135, 32\l  %137 = icmp ult i64 %136, %7\l  br i1 %137, label %138, label %269\l|{<s0>T|<s1>F}}"];
	Node0x57ac430:s0 -> Node0x57ae5d0;
	Node0x57ac430:s1 -> Node0x57a8070;
	Node0x57ae5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%138:\l138:                                              \l  br i1 %58, label %250, label %139\l|{<s0>T|<s1>F}}"];
	Node0x57ae5d0:s0 -> Node0x57ae6d0;
	Node0x57ae5d0:s1 -> Node0x57ae720;
	Node0x57ae720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%139:\l139:                                              \l  br i1 %63, label %227, label %140\l|{<s0>T|<s1>F}}"];
	Node0x57ae720:s0 -> Node0x57ae860;
	Node0x57ae720:s1 -> Node0x57ae8b0;
	Node0x57ae8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%140:\l140:                                              \l  %141 = phi i32 [ %224, %140 ], [ 0, %139 ]\l  %142 = phi float [ %221, %140 ], [ 0.000000e+00, %139 ]\l  %143 = phi float [ %223, %140 ], [ 0.000000e+00, %139 ]\l  %144 = phi i64 [ %225, %140 ], [ 0, %139 ]\l  %145 = add i32 %141, %59\l  %146 = getelementptr inbounds float, float addrspace(3)* %20, i32 %145\l  %147 = load float, float addrspace(3)* %146, align 4, !tbaa !6\l  %148 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %141\l  %149 = load float, float addrspace(3)* %148, align 4, !tbaa !6\l  %150 = fmul contract float %147, %149\l  %151 = fadd contract float %142, %150\l  %152 = fmul contract float %147, %147\l  %153 = fadd contract float %143, %152\l  %154 = or i32 %141, 1\l  %155 = add i32 %154, %59\l  %156 = getelementptr inbounds float, float addrspace(3)* %20, i32 %155\l  %157 = load float, float addrspace(3)* %156, align 4, !tbaa !6\l  %158 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %154\l  %159 = load float, float addrspace(3)* %158, align 4, !tbaa !6\l  %160 = fmul contract float %157, %159\l  %161 = fadd contract float %151, %160\l  %162 = fmul contract float %157, %157\l  %163 = fadd contract float %153, %162\l  %164 = or i32 %141, 2\l  %165 = add i32 %164, %59\l  %166 = getelementptr inbounds float, float addrspace(3)* %20, i32 %165\l  %167 = load float, float addrspace(3)* %166, align 4, !tbaa !6\l  %168 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %164\l  %169 = load float, float addrspace(3)* %168, align 4, !tbaa !6\l  %170 = fmul contract float %167, %169\l  %171 = fadd contract float %161, %170\l  %172 = fmul contract float %167, %167\l  %173 = fadd contract float %163, %172\l  %174 = or i32 %141, 3\l  %175 = add i32 %174, %59\l  %176 = getelementptr inbounds float, float addrspace(3)* %20, i32 %175\l  %177 = load float, float addrspace(3)* %176, align 4, !tbaa !6\l  %178 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %174\l  %179 = load float, float addrspace(3)* %178, align 4, !tbaa !6\l  %180 = fmul contract float %177, %179\l  %181 = fadd contract float %171, %180\l  %182 = fmul contract float %177, %177\l  %183 = fadd contract float %173, %182\l  %184 = or i32 %141, 4\l  %185 = add i32 %184, %59\l  %186 = getelementptr inbounds float, float addrspace(3)* %20, i32 %185\l  %187 = load float, float addrspace(3)* %186, align 4, !tbaa !6\l  %188 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %184\l  %189 = load float, float addrspace(3)* %188, align 4, !tbaa !6\l  %190 = fmul contract float %187, %189\l  %191 = fadd contract float %181, %190\l  %192 = fmul contract float %187, %187\l  %193 = fadd contract float %183, %192\l  %194 = or i32 %141, 5\l  %195 = add i32 %194, %59\l  %196 = getelementptr inbounds float, float addrspace(3)* %20, i32 %195\l  %197 = load float, float addrspace(3)* %196, align 4, !tbaa !6\l  %198 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %194\l  %199 = load float, float addrspace(3)* %198, align 4, !tbaa !6\l  %200 = fmul contract float %197, %199\l  %201 = fadd contract float %191, %200\l  %202 = fmul contract float %197, %197\l  %203 = fadd contract float %193, %202\l  %204 = or i32 %141, 6\l  %205 = add i32 %204, %59\l  %206 = getelementptr inbounds float, float addrspace(3)* %20, i32 %205\l  %207 = load float, float addrspace(3)* %206, align 4, !tbaa !6\l  %208 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %204\l  %209 = load float, float addrspace(3)* %208, align 4, !tbaa !6\l  %210 = fmul contract float %207, %209\l  %211 = fadd contract float %201, %210\l  %212 = fmul contract float %207, %207\l  %213 = fadd contract float %203, %212\l  %214 = or i32 %141, 7\l  %215 = add i32 %214, %59\l  %216 = getelementptr inbounds float, float addrspace(3)* %20, i32 %215\l  %217 = load float, float addrspace(3)* %216, align 4, !tbaa !6\l  %218 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %214\l  %219 = load float, float addrspace(3)* %218, align 4, !tbaa !6\l  %220 = fmul contract float %217, %219\l  %221 = fadd contract float %211, %220\l  %222 = fmul contract float %217, %217\l  %223 = fadd contract float %213, %222\l  %224 = add nuw nsw i32 %141, 8\l  %225 = add i64 %144, 8\l  %226 = icmp eq i64 %225, %64\l  br i1 %226, label %227, label %140, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x57ae8b0:s0 -> Node0x57ae860;
	Node0x57ae8b0:s1 -> Node0x57ae8b0;
	Node0x57ae860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%227:\l227:                                              \l  %228 = phi float [ undef, %139 ], [ %221, %140 ]\l  %229 = phi float [ undef, %139 ], [ %223, %140 ]\l  %230 = phi i32 [ 0, %139 ], [ %224, %140 ]\l  %231 = phi float [ 0.000000e+00, %139 ], [ %221, %140 ]\l  %232 = phi float [ 0.000000e+00, %139 ], [ %223, %140 ]\l  br i1 %65, label %250, label %233\l|{<s0>T|<s1>F}}"];
	Node0x57ae860:s0 -> Node0x57ae6d0;
	Node0x57ae860:s1 -> Node0x57b24f0;
	Node0x57b24f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%233:\l233:                                              \l  %234 = phi i32 [ %247, %233 ], [ %230, %227 ]\l  %235 = phi float [ %244, %233 ], [ %231, %227 ]\l  %236 = phi float [ %246, %233 ], [ %232, %227 ]\l  %237 = phi i64 [ %248, %233 ], [ 0, %227 ]\l  %238 = add i32 %234, %59\l  %239 = getelementptr inbounds float, float addrspace(3)* %20, i32 %238\l  %240 = load float, float addrspace(3)* %239, align 4, !tbaa !6\l  %241 = getelementptr inbounds float, float addrspace(3)* getelementptr\l... inbounds ([0 x float], [0 x float] addrspace(3)* @shared, i32 0, i32 4), i32\l... %234\l  %242 = load float, float addrspace(3)* %241, align 4, !tbaa !6\l  %243 = fmul contract float %240, %242\l  %244 = fadd contract float %235, %243\l  %245 = fmul contract float %240, %240\l  %246 = fadd contract float %236, %245\l  %247 = add nuw nsw i32 %234, 1\l  %248 = add i64 %237, 1\l  %249 = icmp eq i64 %248, %62\l  br i1 %249, label %250, label %233, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x57b24f0:s0 -> Node0x57ae6d0;
	Node0x57b24f0:s1 -> Node0x57b24f0;
	Node0x57ae6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%250:\l250:                                              \l  %251 = phi float [ 0.000000e+00, %138 ], [ %229, %227 ], [ %246, %233 ]\l  %252 = phi float [ 0.000000e+00, %138 ], [ %228, %227 ], [ %244, %233 ]\l  %253 = load float, float addrspace(3)* getelementptr inbounds ([0 x float],\l... [0 x float] addrspace(3)* @shared, i32 0, i32 0), align 4, !tbaa !6\l  %254 = fmul contract float %251, %253\l  %255 = shl i64 %77, 32\l  %256 = ashr exact i64 %255, 32\l  %257 = icmp ugt i64 %61, %256\l  %258 = fcmp contract ogt float %254, 0x3EB0C6F7A0000000\l  %259 = select i1 %257, i1 %258, i1 false\l  br i1 %259, label %260, label %269\l|{<s0>T|<s1>F}}"];
	Node0x57ae6d0:s0 -> Node0x57b2ad0;
	Node0x57ae6d0:s1 -> Node0x57a8070;
	Node0x57b2ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%260:\l260:                                              \l  %261 = fcmp olt float %254, 0x39B0000000000000\l  %262 = select i1 %261, float 0x4310000000000000, float 1.000000e+00\l  %263 = select i1 %261, float 0x4630000000000000, float 1.000000e+00\l  %264 = fmul float %254, %263\l  %265 = tail call float @llvm.amdgcn.rsq.f32(float %264)\l  %266 = fmul float %262, %265\l  %267 = fmul contract float %252, %266\l  %268 = getelementptr inbounds float, float addrspace(1)* %12, i64 %256\l  store float %267, float addrspace(1)* %268, align 4, !tbaa !6\l  br label %269\l}"];
	Node0x57b2ad0 -> Node0x57a8070;
	Node0x57a8070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%269:\l269:                                              \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %270 = add nuw nsw i64 %67, 1\l  %271 = and i64 %270, 4294967295\l  %272 = icmp ult i64 %271, %9\l  br i1 %272, label %66, label %273, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x57a8070:s0 -> Node0x57a7f40;
	Node0x57a8070:s1 -> Node0x57a8300;
	Node0x57a8300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%273:\l273:                                              \l  ret void\l}"];
}
