digraph "CFG for '_Z16matrixAddKernel3PfS_S_i' function" {
	label="CFG for '_Z16matrixAddKernel3PfS_S_i' function";

	Node0x5b23680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %3\l  %15 = icmp sgt i32 %3, 0\l  %16 = and i1 %14, %15\l  br i1 %16, label %17, label %125\l|{<s0>T|<s1>F}}"];
	Node0x5b23680:s0 -> Node0x5b24230;
	Node0x5b23680:s1 -> Node0x5b257c0;
	Node0x5b24230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%17:\l17:                                               \l  %18 = and i32 %3, 7\l  %19 = icmp ult i32 %3, 8\l  br i1 %19, label %107, label %20\l|{<s0>T|<s1>F}}"];
	Node0x5b24230:s0 -> Node0x5b25a80;
	Node0x5b24230:s1 -> Node0x5b25ad0;
	Node0x5b25ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%20:\l20:                                               \l  %21 = and i32 %3, -8\l  br label %22\l}"];
	Node0x5b25ad0 -> Node0x5b25cd0;
	Node0x5b25cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%22:\l22:                                               \l  %23 = phi i32 [ 0, %20 ], [ %104, %22 ]\l  %24 = phi i32 [ 0, %20 ], [ %105, %22 ]\l  %25 = mul nsw i32 %23, %3\l  %26 = add nsw i32 %25, %13\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %30 = getelementptr inbounds float, float addrspace(1)* %2, i64 %27\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7\l  %32 = fadd contract float %29, %31\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  store float %32, float addrspace(1)* %33, align 4, !tbaa !7\l  %34 = or i32 %23, 1\l  %35 = mul nsw i32 %34, %3\l  %36 = add nsw i32 %35, %13\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %40 = getelementptr inbounds float, float addrspace(1)* %2, i64 %37\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7\l  %42 = fadd contract float %39, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %0, i64 %37\l  store float %42, float addrspace(1)* %43, align 4, !tbaa !7\l  %44 = or i32 %23, 2\l  %45 = mul nsw i32 %44, %3\l  %46 = add nsw i32 %45, %13\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds float, float addrspace(1)* %1, i64 %47\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !7\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %47\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !7\l  %52 = fadd contract float %49, %51\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %47\l  store float %52, float addrspace(1)* %53, align 4, !tbaa !7\l  %54 = or i32 %23, 3\l  %55 = mul nsw i32 %54, %3\l  %56 = add nsw i32 %55, %13\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds float, float addrspace(1)* %1, i64 %57\l  %59 = load float, float addrspace(1)* %58, align 4, !tbaa !7\l  %60 = getelementptr inbounds float, float addrspace(1)* %2, i64 %57\l  %61 = load float, float addrspace(1)* %60, align 4, !tbaa !7\l  %62 = fadd contract float %59, %61\l  %63 = getelementptr inbounds float, float addrspace(1)* %0, i64 %57\l  store float %62, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = or i32 %23, 4\l  %65 = mul nsw i32 %64, %3\l  %66 = add nsw i32 %65, %13\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds float, float addrspace(1)* %1, i64 %67\l  %69 = load float, float addrspace(1)* %68, align 4, !tbaa !7\l  %70 = getelementptr inbounds float, float addrspace(1)* %2, i64 %67\l  %71 = load float, float addrspace(1)* %70, align 4, !tbaa !7\l  %72 = fadd contract float %69, %71\l  %73 = getelementptr inbounds float, float addrspace(1)* %0, i64 %67\l  store float %72, float addrspace(1)* %73, align 4, !tbaa !7\l  %74 = or i32 %23, 5\l  %75 = mul nsw i32 %74, %3\l  %76 = add nsw i32 %75, %13\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %1, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !7\l  %80 = getelementptr inbounds float, float addrspace(1)* %2, i64 %77\l  %81 = load float, float addrspace(1)* %80, align 4, !tbaa !7\l  %82 = fadd contract float %79, %81\l  %83 = getelementptr inbounds float, float addrspace(1)* %0, i64 %77\l  store float %82, float addrspace(1)* %83, align 4, !tbaa !7\l  %84 = or i32 %23, 6\l  %85 = mul nsw i32 %84, %3\l  %86 = add nsw i32 %85, %13\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds float, float addrspace(1)* %1, i64 %87\l  %89 = load float, float addrspace(1)* %88, align 4, !tbaa !7\l  %90 = getelementptr inbounds float, float addrspace(1)* %2, i64 %87\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !7\l  %92 = fadd contract float %89, %91\l  %93 = getelementptr inbounds float, float addrspace(1)* %0, i64 %87\l  store float %92, float addrspace(1)* %93, align 4, !tbaa !7\l  %94 = or i32 %23, 7\l  %95 = mul nsw i32 %94, %3\l  %96 = add nsw i32 %95, %13\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds float, float addrspace(1)* %1, i64 %97\l  %99 = load float, float addrspace(1)* %98, align 4, !tbaa !7\l  %100 = getelementptr inbounds float, float addrspace(1)* %2, i64 %97\l  %101 = load float, float addrspace(1)* %100, align 4, !tbaa !7\l  %102 = fadd contract float %99, %101\l  %103 = getelementptr inbounds float, float addrspace(1)* %0, i64 %97\l  store float %102, float addrspace(1)* %103, align 4, !tbaa !7\l  %104 = add nuw nsw i32 %23, 8\l  %105 = add i32 %24, 8\l  %106 = icmp eq i32 %105, %21\l  br i1 %106, label %107, label %22, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5b25cd0:s0 -> Node0x5b25a80;
	Node0x5b25cd0:s1 -> Node0x5b25cd0;
	Node0x5b25a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%107:\l107:                                              \l  %108 = phi i32 [ 0, %17 ], [ %104, %22 ]\l  %109 = icmp eq i32 %18, 0\l  br i1 %109, label %125, label %110\l|{<s0>T|<s1>F}}"];
	Node0x5b25a80:s0 -> Node0x5b257c0;
	Node0x5b25a80:s1 -> Node0x5b29f10;
	Node0x5b29f10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%110:\l110:                                              \l  %111 = phi i32 [ %122, %110 ], [ %108, %107 ]\l  %112 = phi i32 [ %123, %110 ], [ 0, %107 ]\l  %113 = mul nsw i32 %111, %3\l  %114 = add nsw i32 %113, %13\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds float, float addrspace(1)* %1, i64 %115\l  %117 = load float, float addrspace(1)* %116, align 4, !tbaa !7\l  %118 = getelementptr inbounds float, float addrspace(1)* %2, i64 %115\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !7\l  %120 = fadd contract float %117, %119\l  %121 = getelementptr inbounds float, float addrspace(1)* %0, i64 %115\l  store float %120, float addrspace(1)* %121, align 4, !tbaa !7\l  %122 = add nuw nsw i32 %111, 1\l  %123 = add i32 %112, 1\l  %124 = icmp eq i32 %123, %18\l  br i1 %124, label %125, label %110, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5b29f10:s0 -> Node0x5b257c0;
	Node0x5b29f10:s1 -> Node0x5b29f10;
	Node0x5b257c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%125:\l125:                                              \l  ret void\l}"];
}
