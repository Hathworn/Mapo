digraph "CFG for '_Z13matMulKernel4PfS_S_i' function" {
	label="CFG for '_Z13matMulKernel4PfS_S_i' function";

	Node0x5d9d9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = shl nsw i32 %6, 2\l  %10 = add nsw i32 %9, %8\l  %11 = shl nsw i32 %5, 2\l  %12 = add nsw i32 %11, %7\l  %13 = sdiv i32 %3, 4\l  %14 = icmp sgt i32 %3, 3\l  %15 = mul nsw i32 %10, %3\l  br i1 %14, label %16, label %28\l|{<s0>T|<s1>F}}"];
	Node0x5d9d9e0:s0 -> Node0x5d9fe90;
	Node0x5d9d9e0:s1 -> Node0x5d9ff20;
	Node0x5d9fe90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = add i32 %15, %7\l  %18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Mds4, i32 0, i32 %8, i32 %7\l  %19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Nds4, i32 0, i32 %8, i32 %7\l  %20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Mds4, i32 0, i32 %8, i32 0\l  %21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Nds4, i32 0, i32 0, i32 %7\l  %22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Mds4, i32 0, i32 %8, i32 1\l  %23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Nds4, i32 0, i32 1, i32 %7\l  %24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Mds4, i32 0, i32 %8, i32 2\l  %25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Nds4, i32 0, i32 2, i32 %7\l  %26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Mds4, i32 0, i32 %8, i32 3\l  %27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]\l... addrspace(3)* @_ZZ13matMulKernel4PfS_S_iE4Nds4, i32 0, i32 3, i32 %7\l  br label %33\l}"];
	Node0x5d9fe90 -> Node0x5da0170;
	Node0x5d9ff20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%28:\l28:                                               \l  %29 = phi float [ 0.000000e+00, %4 ], [ %62, %33 ]\l  %30 = add nsw i32 %15, %12\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  store float %29, float addrspace(1)* %32, align 4, !tbaa !5\l  ret void\l}"];
	Node0x5da0170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%33:\l33:                                               \l  %34 = phi i32 [ 0, %16 ], [ %63, %33 ]\l  %35 = phi float [ 0.000000e+00, %16 ], [ %62, %33 ]\l  %36 = shl nsw i32 %34, 2\l  %37 = add i32 %17, %36\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %40, float addrspace(3)* %18, align 4, !tbaa !5\l  %41 = add nuw nsw i32 %36, %8\l  %42 = mul nsw i32 %41, %3\l  %43 = add nsw i32 %42, %12\l  %44 = sext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %2, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %46, float addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = load float, float addrspace(3)* %20, align 16, !tbaa !5\l  %48 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %49 = fmul contract float %47, %48\l  %50 = fadd contract float %35, %49\l  %51 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %52 = load float, float addrspace(3)* %23, align 4, !tbaa !5\l  %53 = fmul contract float %51, %52\l  %54 = fadd contract float %50, %53\l  %55 = load float, float addrspace(3)* %24, align 8, !tbaa !5\l  %56 = load float, float addrspace(3)* %25, align 4, !tbaa !5\l  %57 = fmul contract float %55, %56\l  %58 = fadd contract float %54, %57\l  %59 = load float, float addrspace(3)* %26, align 4, !tbaa !5\l  %60 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %61 = fmul contract float %59, %60\l  %62 = fadd contract float %58, %61\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = add nuw nsw i32 %34, 1\l  %64 = icmp eq i32 %63, %13\l  br i1 %64, label %28, label %33, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5da0170:s0 -> Node0x5d9ff20;
	Node0x5da0170:s1 -> Node0x5da0170;
}
