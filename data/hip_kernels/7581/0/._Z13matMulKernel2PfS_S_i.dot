digraph "CFG for '_Z13matMulKernel2PfS_S_i' function" {
	label="CFG for '_Z13matMulKernel2PfS_S_i' function";

	Node0x607a630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %9 = shl nsw i32 %6, 1\l  %10 = add nsw i32 %9, %8\l  %11 = shl nsw i32 %5, 1\l  %12 = add nsw i32 %11, %7\l  %13 = sdiv i32 %3, 2\l  %14 = icmp sgt i32 %3, 1\l  %15 = mul nsw i32 %10, %3\l  br i1 %14, label %16, label %24\l|{<s0>T|<s1>F}}"];
	Node0x607a630:s0 -> Node0x607cab0;
	Node0x607a630:s1 -> Node0x607cb40;
	Node0x607cab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  %17 = add i32 %15, %7\l  %18 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Mds, i32 0, i32 %8, i32 %7\l  %19 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Nds, i32 0, i32 %8, i32 %7\l  %20 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Mds, i32 0, i32 %8, i32 0\l  %21 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Nds, i32 0, i32 0, i32 %7\l  %22 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Mds, i32 0, i32 %8, i32 1\l  %23 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]\l... addrspace(3)* @_ZZ13matMulKernel2PfS_S_iE3Nds, i32 0, i32 1, i32 %7\l  br label %29\l}"];
	Node0x607cab0 -> Node0x607d310;
	Node0x607cb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  %25 = phi float [ 0.000000e+00, %4 ], [ %50, %29 ]\l  %26 = add nsw i32 %15, %12\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %0, i64 %27\l  store float %25, float addrspace(1)* %28, align 4, !tbaa !5\l  ret void\l}"];
	Node0x607d310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ 0, %16 ], [ %51, %29 ]\l  %31 = phi float [ 0.000000e+00, %16 ], [ %50, %29 ]\l  %32 = shl nuw nsw i32 %30, 1\l  %33 = add i32 %17, %32\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds float, float addrspace(1)* %1, i64 %34\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %36, float addrspace(3)* %18, align 4, !tbaa !5\l  %37 = add nuw nsw i32 %32, %8\l  %38 = mul nsw i32 %37, %3\l  %39 = add nsw i32 %38, %12\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds float, float addrspace(1)* %2, i64 %40\l  %42 = load float, float addrspace(1)* %41, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %42, float addrspace(3)* %19, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %43 = load float, float addrspace(3)* %20, align 8, !tbaa !5\l  %44 = load float, float addrspace(3)* %21, align 4, !tbaa !5\l  %45 = fmul contract float %43, %44\l  %46 = fadd contract float %31, %45\l  %47 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %48 = load float, float addrspace(3)* %23, align 4, !tbaa !5\l  %49 = fmul contract float %47, %48\l  %50 = fadd contract float %46, %49\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %51 = add nuw nsw i32 %30, 1\l  %52 = icmp eq i32 %51, %13\l  br i1 %52, label %24, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x607d310:s0 -> Node0x607cb40;
	Node0x607d310:s1 -> Node0x607d310;
}
