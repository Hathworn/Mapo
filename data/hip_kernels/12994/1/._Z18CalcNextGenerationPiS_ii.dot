digraph "CFG for '_Z18CalcNextGenerationPiS_ii' function" {
	label="CFG for '_Z18CalcNextGenerationPiS_ii' function";

	Node0x4795180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = mul i32 %10, %9\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = mul nsw i32 %3, %2\l  %15 = icmp slt i32 %13, %14\l  br i1 %15, label %16, label %124\l|{<s0>T|<s1>F}}"];
	Node0x4795180:s0 -> Node0x4797110;
	Node0x4795180:s1 -> Node0x47971a0;
	Node0x4797110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%16:\l16:                                               \l  %17 = freeze i32 %13\l  %18 = freeze i32 %2\l  %19 = sdiv i32 %17, %18\l  %20 = sitofp i32 %19 to float\l  %21 = fptosi float %20 to i32\l  %22 = mul i32 %19, %18\l  %23 = sub i32 %17, %22\l  %24 = add nsw i32 %23, -1\l  %25 = srem i32 %24, %2\l  %26 = icmp slt i32 %25, 0\l  %27 = select i1 %26, i32 %2, i32 0\l  %28 = add nsw i32 %27, %25\l  %29 = add nsw i32 %21, -1\l  %30 = srem i32 %29, %3\l  %31 = icmp slt i32 %30, 0\l  %32 = select i1 %31, i32 %3, i32 0\l  %33 = add nsw i32 %32, %30\l  %34 = mul nsw i32 %33, %2\l  %35 = add nsw i32 %34, %28\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %36\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %39 = icmp eq i32 %38, 1\l  %40 = zext i1 %39 to i32\l  %41 = srem i32 %21, %3\l  %42 = icmp slt i32 %41, 0\l  %43 = select i1 %42, i32 %3, i32 0\l  %44 = add nsw i32 %43, %41\l  %45 = mul nsw i32 %44, %2\l  %46 = add nsw i32 %45, %28\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %47\l  %49 = load i32, i32 addrspace(1)* %48, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %50 = icmp eq i32 %49, 1\l  %51 = zext i1 %50 to i32\l  %52 = add nuw nsw i32 %51, %40\l  %53 = add nsw i32 %21, 1\l  %54 = srem i32 %53, %3\l  %55 = icmp slt i32 %54, 0\l  %56 = select i1 %55, i32 %3, i32 0\l  %57 = add nsw i32 %56, %54\l  %58 = mul nsw i32 %57, %2\l  %59 = add nsw i32 %58, %28\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %60\l  %62 = load i32, i32 addrspace(1)* %61, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %63 = icmp eq i32 %62, 1\l  %64 = zext i1 %63 to i32\l  %65 = add nuw nsw i32 %52, %64\l  %66 = icmp slt i32 %23, 0\l  %67 = select i1 %66, i32 %2, i32 0\l  %68 = add nsw i32 %67, %23\l  %69 = add nsw i32 %34, %68\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %70\l  %72 = load i32, i32 addrspace(1)* %71, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %73 = icmp eq i32 %72, 1\l  %74 = zext i1 %73 to i32\l  %75 = add nuw nsw i32 %65, %74\l  %76 = add nsw i32 %58, %68\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %77\l  %79 = load i32, i32 addrspace(1)* %78, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %80 = icmp eq i32 %79, 1\l  %81 = zext i1 %80 to i32\l  %82 = add nuw nsw i32 %75, %81\l  %83 = add nsw i32 %23, 1\l  %84 = srem i32 %83, %2\l  %85 = icmp slt i32 %84, 0\l  %86 = select i1 %85, i32 %2, i32 0\l  %87 = add nsw i32 %86, %84\l  %88 = add nsw i32 %87, %34\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %89\l  %91 = load i32, i32 addrspace(1)* %90, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %92 = icmp eq i32 %91, 1\l  %93 = zext i1 %92 to i32\l  %94 = add nuw nsw i32 %82, %93\l  %95 = add nsw i32 %87, %45\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %96\l  %98 = load i32, i32 addrspace(1)* %97, align 4, !tbaa !7, !amdgpu.noclobber\l... !5\l  %99 = icmp eq i32 %98, 1\l  %100 = zext i1 %99 to i32\l  %101 = add nuw nsw i32 %94, %100\l  %102 = add nsw i32 %87, %58\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %103\l  %105 = load i32, i32 addrspace(1)* %104, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %106 = icmp eq i32 %105, 1\l  %107 = zext i1 %106 to i32\l  %108 = add nuw nsw i32 %101, %107\l  switch i32 %108, label %109 [\l    i32 3, label %111\l    i32 2, label %113\l  ]\l|{<s0>def|<s1>3|<s2>2}}"];
	Node0x4797110:s0 -> Node0x479b800;
	Node0x4797110:s1 -> Node0x479b890;
	Node0x4797110:s2 -> Node0x479b950;
	Node0x479b800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%109:\l109:                                              \l  %110 = sext i32 %13 to i64\l  br label %118\l}"];
	Node0x479b800 -> Node0x479bb70;
	Node0x479b890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%111:\l111:                                              \l  %112 = sext i32 %13 to i64\l  br label %120\l}"];
	Node0x479b890 -> Node0x479bca0;
	Node0x479b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%113:\l113:                                              \l  %114 = sext i32 %13 to i64\l  %115 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %114\l  %116 = load i32, i32 addrspace(1)* %115, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %117 = icmp eq i32 %116, 1\l  br i1 %117, label %120, label %118\l|{<s0>T|<s1>F}}"];
	Node0x479b950:s0 -> Node0x479bca0;
	Node0x479b950:s1 -> Node0x479bb70;
	Node0x479bb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%118:\l118:                                              \l  %119 = phi i64 [ %110, %109 ], [ %114, %113 ]\l  br label %120\l}"];
	Node0x479bb70 -> Node0x479bca0;
	Node0x479bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%120:\l120:                                              \l  %121 = phi i64 [ %119, %118 ], [ %112, %111 ], [ %114, %113 ]\l  %122 = phi i32 [ 0, %118 ], [ 1, %111 ], [ 1, %113 ]\l  %123 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %121\l  store i32 %122, i32 addrspace(1)* %123, align 4, !tbaa !7\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  br label %124\l}"];
	Node0x479bca0 -> Node0x47971a0;
	Node0x47971a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%124:\l124:                                              \l  ret void\l}"];
}
