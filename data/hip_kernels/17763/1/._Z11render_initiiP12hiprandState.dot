digraph "CFG for '_Z11render_initiiP12hiprandState' function" {
	label="CFG for '_Z11render_initiiP12hiprandState' function";

	Node0x62d5a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%3:\l  %4 = alloca %\"class.rocrand_device::xorwow_engine\", align 8, addrspace(5)\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %15 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %16 = getelementptr i8, i8 addrspace(4)* %7, i64 6\l  %17 = bitcast i8 addrspace(4)* %16 to i16 addrspace(4)*\l  %18 = load i16, i16 addrspace(4)* %17, align 2, !range !5, !invariant.load !6\l  %19 = zext i16 %18 to i32\l  %20 = mul i32 %15, %19\l  %21 = add i32 %20, %14\l  %22 = icmp slt i32 %13, %0\l  %23 = icmp slt i32 %21, %1\l  %24 = select i1 %22, i1 %23, i1 false\l  br i1 %24, label %25, label %219\l|{<s0>T|<s1>F}}"];
	Node0x62d5a40:s0 -> Node0x62dc8b0;
	Node0x62d5a40:s1 -> Node0x62dc940;
	Node0x62dc8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%25:\l25:                                               \l  %26 = mul nsw i32 %21, %0\l  %27 = add nsw i32 %26, %13\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %2, i64 %28\l  %30 = bitcast %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4 to i8\l... addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 48, i8 addrspace(5)* %30) #4\l  %31 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 0\l  %32 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 1\l  %33 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 2\l  %34 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 3\l  %35 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 4\l  %36 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 0\l  store i32 -2089046988, i32 addrspace(5)* %31, align 8, !tbaa !7\l  store i32 1770359546, i32 addrspace(5)* %32, align 4, !tbaa !7\l  store i32 -1452303100, i32 addrspace(5)* %33, align 8, !tbaa !7\l  store i32 -1894485380, i32 addrspace(5)* %34, align 4, !tbaa !7\l  store i32 2088246840, i32 addrspace(5)* %35, align 8, !tbaa !7\l  store i32 115487031, i32 addrspace(5)* %36, align 8, !tbaa !11\l  %37 = icmp eq i32 %27, 0\l  br i1 %37, label %215, label %38\l|{<s0>T|<s1>F}}"];
	Node0x62dc8b0:s0 -> Node0x62de410;
	Node0x62dc8b0:s1 -> Node0x62de4a0;
	Node0x62de4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%38:\l38:                                               \l  %39 = phi i64 [ %48, %46 ], [ %28, %25 ]\l  %40 = phi i32 [ %47, %46 ], [ 0, %25 ]\l  %41 = trunc i64 %39 to i32\l  %42 = and i32 %41, 3\l  %43 = icmp eq i32 %42, 0\l  br i1 %43, label %46, label %44\l|{<s0>T|<s1>F}}"];
	Node0x62de4a0:s0 -> Node0x62de5e0;
	Node0x62de4a0:s1 -> Node0x62de9d0;
	Node0x62de9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%44:\l44:                                               \l  %45 = zext i32 %40 to i64\l  br label %50\l}"];
	Node0x62de9d0 -> Node0x62deb80;
	Node0x62de5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%46:\l46:                                               \l  %47 = add nuw nsw i32 %40, 1\l  %48 = lshr i64 %39, 2\l  %49 = icmp ult i64 %39, 4\l  br i1 %49, label %215, label %38, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x62de5e0:s0 -> Node0x62de410;
	Node0x62de5e0:s1 -> Node0x62de4a0;
	Node0x62deb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%50:\l50:                                               \l  %51 = phi i32 [ 0, %44 ], [ %213, %212 ]\l  br label %52\l}"];
	Node0x62deb80 -> Node0x62df060;
	Node0x62df060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ 0, %50 ], [ %185, %52 ]\l  %54 = phi i32 [ 0, %50 ], [ %191, %52 ]\l  %55 = phi i32 [ 0, %50 ], [ %197, %52 ]\l  %56 = phi i32 [ 0, %50 ], [ %203, %52 ]\l  %57 = phi i32 [ 0, %50 ], [ %209, %52 ]\l  %58 = phi i32 [ 0, %50 ], [ %210, %52 ]\l  %59 = lshr i32 %58, 5\l  %60 = and i32 %58, 28\l  %61 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %59\l  %62 = load i32, i32 addrspace(5)* %61, align 4, !tbaa !7\l  %63 = shl nuw i32 1, %60\l  %64 = and i32 %63, %62\l  %65 = icmp eq i32 %64, 0\l  %66 = mul nuw nsw i32 %58, 5\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %67\l  %69 = load i32, i32 addrspace(4)* %68, align 16, !tbaa !7\l  %70 = select i1 %65, i32 0, i32 %69\l  %71 = xor i32 %70, %53\l  %72 = or i32 %66, 1\l  %73 = zext i32 %72 to i64\l  %74 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %73\l  %75 = load i32, i32 addrspace(4)* %74, align 4, !tbaa !7\l  %76 = select i1 %65, i32 0, i32 %75\l  %77 = xor i32 %76, %54\l  %78 = or i32 %66, 2\l  %79 = zext i32 %78 to i64\l  %80 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %79\l  %81 = load i32, i32 addrspace(4)* %80, align 8, !tbaa !7\l  %82 = select i1 %65, i32 0, i32 %81\l  %83 = xor i32 %82, %55\l  %84 = or i32 %66, 3\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %85\l  %87 = load i32, i32 addrspace(4)* %86, align 4, !tbaa !7\l  %88 = select i1 %65, i32 0, i32 %87\l  %89 = xor i32 %88, %56\l  %90 = add nuw nsw i32 %66, 4\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %91\l  %93 = load i32, i32 addrspace(4)* %92, align 16, !tbaa !7\l  %94 = select i1 %65, i32 0, i32 %93\l  %95 = xor i32 %94, %57\l  %96 = or i32 %58, 1\l  %97 = lshr i32 %58, 5\l  %98 = and i32 %96, 29\l  %99 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %97\l  %100 = load i32, i32 addrspace(5)* %99, align 4, !tbaa !7\l  %101 = shl nuw i32 1, %98\l  %102 = and i32 %101, %100\l  %103 = icmp eq i32 %102, 0\l  %104 = mul nuw nsw i32 %96, 5\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %105\l  %107 = load i32, i32 addrspace(4)* %106, align 4, !tbaa !7\l  %108 = select i1 %103, i32 0, i32 %107\l  %109 = xor i32 %108, %71\l  %110 = add nuw nsw i32 %104, 1\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %111\l  %113 = load i32, i32 addrspace(4)* %112, align 8, !tbaa !7\l  %114 = select i1 %103, i32 0, i32 %113\l  %115 = xor i32 %114, %77\l  %116 = or i32 %104, 2\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %117\l  %119 = load i32, i32 addrspace(4)* %118, align 4, !tbaa !7\l  %120 = select i1 %103, i32 0, i32 %119\l  %121 = xor i32 %120, %83\l  %122 = add nuw nsw i32 %104, 3\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %123\l  %125 = load i32, i32 addrspace(4)* %124, align 16, !tbaa !7\l  %126 = select i1 %103, i32 0, i32 %125\l  %127 = xor i32 %126, %89\l  %128 = add nuw nsw i32 %104, 4\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %129\l  %131 = load i32, i32 addrspace(4)* %130, align 4, !tbaa !7\l  %132 = select i1 %103, i32 0, i32 %131\l  %133 = xor i32 %132, %95\l  %134 = or i32 %58, 2\l  %135 = lshr i32 %58, 5\l  %136 = and i32 %134, 30\l  %137 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %135\l  %138 = load i32, i32 addrspace(5)* %137, align 4, !tbaa !7\l  %139 = shl nuw i32 1, %136\l  %140 = and i32 %139, %138\l  %141 = icmp eq i32 %140, 0\l  %142 = mul nuw nsw i32 %134, 5\l  %143 = zext i32 %142 to i64\l  %144 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %143\l  %145 = load i32, i32 addrspace(4)* %144, align 8, !tbaa !7\l  %146 = select i1 %141, i32 0, i32 %145\l  %147 = xor i32 %146, %109\l  %148 = or i32 %142, 1\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %149\l  %151 = load i32, i32 addrspace(4)* %150, align 4, !tbaa !7\l  %152 = select i1 %141, i32 0, i32 %151\l  %153 = xor i32 %152, %115\l  %154 = add nuw nsw i32 %142, 2\l  %155 = zext i32 %154 to i64\l  %156 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %155\l  %157 = load i32, i32 addrspace(4)* %156, align 16, !tbaa !7\l  %158 = select i1 %141, i32 0, i32 %157\l  %159 = xor i32 %158, %121\l  %160 = add nuw nsw i32 %142, 3\l  %161 = zext i32 %160 to i64\l  %162 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %161\l  %163 = load i32, i32 addrspace(4)* %162, align 4, !tbaa !7\l  %164 = select i1 %141, i32 0, i32 %163\l  %165 = xor i32 %164, %127\l  %166 = add nuw nsw i32 %142, 4\l  %167 = zext i32 %166 to i64\l  %168 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %167\l  %169 = load i32, i32 addrspace(4)* %168, align 8, !tbaa !7\l  %170 = select i1 %141, i32 0, i32 %169\l  %171 = xor i32 %170, %133\l  %172 = or i32 %58, 3\l  %173 = lshr i32 %58, 5\l  %174 = and i32 %172, 31\l  %175 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 5,\l... i32 %173\l  %176 = load i32, i32 addrspace(5)* %175, align 4, !tbaa !7\l  %177 = shl nuw i32 1, %174\l  %178 = and i32 %177, %176\l  %179 = icmp eq i32 %178, 0\l  %180 = mul nuw nsw i32 %172, 5\l  %181 = zext i32 %180 to i64\l  %182 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %181\l  %183 = load i32, i32 addrspace(4)* %182, align 4, !tbaa !7\l  %184 = select i1 %179, i32 0, i32 %183\l  %185 = xor i32 %184, %147\l  %186 = add nuw nsw i32 %180, 1\l  %187 = zext i32 %186 to i64\l  %188 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %187\l  %189 = load i32, i32 addrspace(4)* %188, align 16, !tbaa !7\l  %190 = select i1 %179, i32 0, i32 %189\l  %191 = xor i32 %190, %153\l  %192 = add nuw nsw i32 %180, 2\l  %193 = zext i32 %192 to i64\l  %194 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %193\l  %195 = load i32, i32 addrspace(4)* %194, align 4, !tbaa !7\l  %196 = select i1 %179, i32 0, i32 %195\l  %197 = xor i32 %196, %159\l  %198 = add nuw nsw i32 %180, 3\l  %199 = zext i32 %198 to i64\l  %200 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %199\l  %201 = load i32, i32 addrspace(4)* %200, align 8, !tbaa !7\l  %202 = select i1 %179, i32 0, i32 %201\l  %203 = xor i32 %202, %165\l  %204 = add nuw nsw i32 %180, 4\l  %205 = zext i32 %204 to i64\l  %206 = getelementptr inbounds [32 x [800 x i32]], [32 x [800 x i32]]\l... addrspace(4)* @_ZL31d_xorwow_sequence_jump_matrices, i64 0, i64 %45, i64 %205\l  %207 = load i32, i32 addrspace(4)* %206, align 4, !tbaa !7\l  %208 = select i1 %179, i32 0, i32 %207\l  %209 = xor i32 %208, %171\l  %210 = add nuw nsw i32 %58, 4\l  %211 = icmp eq i32 %210, 160\l  br i1 %211, label %212, label %52, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x62df060:s0 -> Node0x62def20;
	Node0x62df060:s1 -> Node0x62df060;
	Node0x62def20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%212:\l212:                                              \l  store i32 %185, i32 addrspace(5)* %31, align 8, !tbaa !7\l  store i32 %191, i32 addrspace(5)* %32, align 4, !tbaa !7\l  store i32 %197, i32 addrspace(5)* %33, align 8, !tbaa !7\l  store i32 %203, i32 addrspace(5)* %34, align 4, !tbaa !7\l  store i32 %209, i32 addrspace(5)* %35, align 8, !tbaa !7\l  %213 = add nuw nsw i32 %51, 1\l  %214 = icmp eq i32 %213, %42\l  br i1 %214, label %46, label %50, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x62def20:s0 -> Node0x62de5e0;
	Node0x62def20:s1 -> Node0x62deb80;
	Node0x62de410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%215:\l215:                                              \l  %216 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 1\l  store i32 0, i32 addrspace(5)* %216, align 4, !tbaa !20\l  %217 = getelementptr inbounds %\"class.rocrand_device::xorwow_engine\",\l... %\"class.rocrand_device::xorwow_engine\" addrspace(5)* %4, i32 0, i32 0, i32 2\l  store i32 0, i32 addrspace(5)* %217, align 8, !tbaa !21\l  %218 = bitcast %struct.hiprandState addrspace(1)* %29 to i8 addrspace(1)*\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 8\l... dereferenceable(48) %218, i8 addrspace(5)* noundef align 8\l... dereferenceable(48) %30, i64 48, i1 false), !tbaa.struct !22\l  call void @llvm.lifetime.end.p5i8(i64 48, i8 addrspace(5)* %30) #4\l  br label %219\l}"];
	Node0x62de410 -> Node0x62dc940;
	Node0x62dc940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%219:\l219:                                              \l  ret void\l}"];
}
