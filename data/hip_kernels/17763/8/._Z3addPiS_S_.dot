digraph "CFG for '_Z3addPiS_S_' function" {
	label="CFG for '_Z3addPiS_S_' function";

	Node0x5a97180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%3:\l  %4 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %5 = load i32, i32 addrspace(1)* %1, align 4, !tbaa !4, !amdgpu.noclobber !8\l  %6 = add nsw i32 %5, %4\l  store i32 %6, i32 addrspace(1)* %2, align 4, !tbaa !4\l  %7 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %8 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 24\l  %9 = bitcast i8 addrspace(4)* %8 to i64 addrspace(4)*\l  %10 = load i64, i64 addrspace(4)* %9, align 8, !tbaa !9\l  %11 = inttoptr i64 %10 to i8 addrspace(1)*\l  %12 = addrspacecast i8 addrspace(1)* %11 to i8*\l  %13 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %12,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %14 = extractelement \<2 x i64\> %13, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([11 x i8], [11 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5a97180:s0 -> Node0x5a9a1f0;
	Node0x5a97180:s1 -> Node0x5a9abe0;
	Node0x5a9a1f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%15:\l15:                                               \l  %16 = and i64 %14, -225\l  %17 = or i64 %16, 32\l  %18 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %12,\l... i64 noundef %17, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %460\l}"];
	Node0x5a9a1f0 -> Node0x5a9af80;
	Node0x5a9abe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = and i64 %14, 2\l  %21 = and i64 %14, -3\l  %22 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %21, i64 0\l  br label %23\l}"];
	Node0x5a9abe0 -> Node0x5a9bae0;
	Node0x5a9bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%23:\l23:                                               \l  %24 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([11 x i8], [11 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([11 x i8], [11 x i8] addrspace(4)*\l... @.str, i64 0, i64 10) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([11 x i8]* addrspacecast ([11 x i8] addrspace(4)* @.str to [11 x i8]*) to\l... i64)), i64 1))), %19 ], [ %457, %449 ]\l  %25 = phi i8 addrspace(4)* [ getelementptr inbounds ([11 x i8], [11 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %19 ], [ %458, %449 ]\l  %26 = phi \<2 x i64\> [ %22, %19 ], [ %456, %449 ]\l  %27 = icmp ugt i64 %24, 56\l  %28 = extractelement \<2 x i64\> %26, i64 0\l  %29 = or i64 %28, %20\l  %30 = insertelement \<2 x i64\> poison, i64 %29, i64 0\l  %31 = select i1 %27, \<2 x i64\> %26, \<2 x i64\> %30\l  %32 = tail call i64 @llvm.umin.i64(i64 %24, i64 56)\l  %33 = trunc i64 %32 to i32\l  %34 = extractelement \<2 x i64\> %31, i64 0\l  %35 = icmp ugt i32 %33, 7\l  br i1 %35, label %38, label %36\l|{<s0>T|<s1>F}}"];
	Node0x5a9bae0:s0 -> Node0x5a9cb60;
	Node0x5a9bae0:s1 -> Node0x5a9cbf0;
	Node0x5a9cbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%36:\l36:                                               \l  %37 = icmp eq i32 %33, 0\l  br i1 %37, label %91, label %78\l|{<s0>T|<s1>F}}"];
	Node0x5a9cbf0:s0 -> Node0x5a9cdf0;
	Node0x5a9cbf0:s1 -> Node0x5a9ce40;
	Node0x5a9cb60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%38:\l38:                                               \l  %39 = load i8, i8 addrspace(4)* %25, align 1, !tbaa !13\l  %40 = zext i8 %39 to i64\l  %41 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 1\l  %42 = load i8, i8 addrspace(4)* %41, align 1, !tbaa !13\l  %43 = zext i8 %42 to i64\l  %44 = shl nuw nsw i64 %43, 8\l  %45 = or i64 %44, %40\l  %46 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 2\l  %47 = load i8, i8 addrspace(4)* %46, align 1, !tbaa !13\l  %48 = zext i8 %47 to i64\l  %49 = shl nuw nsw i64 %48, 16\l  %50 = or i64 %45, %49\l  %51 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 3\l  %52 = load i8, i8 addrspace(4)* %51, align 1, !tbaa !13\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 24\l  %55 = or i64 %50, %54\l  %56 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 4\l  %57 = load i8, i8 addrspace(4)* %56, align 1, !tbaa !13\l  %58 = zext i8 %57 to i64\l  %59 = shl nuw nsw i64 %58, 32\l  %60 = or i64 %55, %59\l  %61 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 5\l  %62 = load i8, i8 addrspace(4)* %61, align 1, !tbaa !13\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 40\l  %65 = or i64 %60, %64\l  %66 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 6\l  %67 = load i8, i8 addrspace(4)* %66, align 1, !tbaa !13\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw nsw i64 %68, 48\l  %70 = or i64 %65, %69\l  %71 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 7\l  %72 = load i8, i8 addrspace(4)* %71, align 1, !tbaa !13\l  %73 = zext i8 %72 to i64\l  %74 = shl nuw i64 %73, 56\l  %75 = or i64 %70, %74\l  %76 = add nsw i32 %33, -8\l  %77 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 8\l  br label %91\l}"];
	Node0x5a9cb60 -> Node0x5a9cdf0;
	Node0x5a9ce40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%78:\l78:                                               \l  %79 = phi i32 [ %89, %78 ], [ 0, %36 ]\l  %80 = phi i64 [ %88, %78 ], [ 0, %36 ]\l  %81 = zext i32 %79 to i64\l  %82 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 %81\l  %83 = load i8, i8 addrspace(4)* %82, align 1, !tbaa !13\l  %84 = zext i8 %83 to i64\l  %85 = shl i32 %79, 3\l  %86 = zext i32 %85 to i64\l  %87 = shl nuw i64 %84, %86\l  %88 = or i64 %87, %80\l  %89 = add nuw nsw i32 %79, 1\l  %90 = icmp eq i32 %89, %33\l  br i1 %90, label %91, label %78, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x5a9ce40:s0 -> Node0x5a9cdf0;
	Node0x5a9ce40:s1 -> Node0x5a9ce40;
	Node0x5a9cdf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%91:\l91:                                               \l  %92 = phi i8 addrspace(4)* [ %77, %38 ], [ %25, %36 ], [ %25, %78 ]\l  %93 = phi i32 [ %76, %38 ], [ 0, %36 ], [ 0, %78 ]\l  %94 = phi i64 [ %75, %38 ], [ 0, %36 ], [ %88, %78 ]\l  %95 = icmp ugt i32 %93, 7\l  br i1 %95, label %98, label %96\l|{<s0>T|<s1>F}}"];
	Node0x5a9cdf0:s0 -> Node0x5a9fb20;
	Node0x5a9cdf0:s1 -> Node0x5a9fb70;
	Node0x5a9fb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%96:\l96:                                               \l  %97 = icmp eq i32 %93, 0\l  br i1 %97, label %151, label %138\l|{<s0>T|<s1>F}}"];
	Node0x5a9fb70:s0 -> Node0x5a9fd40;
	Node0x5a9fb70:s1 -> Node0x5a9fd90;
	Node0x5a9fb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%98:\l98:                                               \l  %99 = load i8, i8 addrspace(4)* %92, align 1, !tbaa !13\l  %100 = zext i8 %99 to i64\l  %101 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 1\l  %102 = load i8, i8 addrspace(4)* %101, align 1, !tbaa !13\l  %103 = zext i8 %102 to i64\l  %104 = shl nuw nsw i64 %103, 8\l  %105 = or i64 %104, %100\l  %106 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 2\l  %107 = load i8, i8 addrspace(4)* %106, align 1, !tbaa !13\l  %108 = zext i8 %107 to i64\l  %109 = shl nuw nsw i64 %108, 16\l  %110 = or i64 %105, %109\l  %111 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 3\l  %112 = load i8, i8 addrspace(4)* %111, align 1, !tbaa !13\l  %113 = zext i8 %112 to i64\l  %114 = shl nuw nsw i64 %113, 24\l  %115 = or i64 %110, %114\l  %116 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 4\l  %117 = load i8, i8 addrspace(4)* %116, align 1, !tbaa !13\l  %118 = zext i8 %117 to i64\l  %119 = shl nuw nsw i64 %118, 32\l  %120 = or i64 %115, %119\l  %121 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 5\l  %122 = load i8, i8 addrspace(4)* %121, align 1, !tbaa !13\l  %123 = zext i8 %122 to i64\l  %124 = shl nuw nsw i64 %123, 40\l  %125 = or i64 %120, %124\l  %126 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 6\l  %127 = load i8, i8 addrspace(4)* %126, align 1, !tbaa !13\l  %128 = zext i8 %127 to i64\l  %129 = shl nuw nsw i64 %128, 48\l  %130 = or i64 %125, %129\l  %131 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 7\l  %132 = load i8, i8 addrspace(4)* %131, align 1, !tbaa !13\l  %133 = zext i8 %132 to i64\l  %134 = shl nuw i64 %133, 56\l  %135 = or i64 %130, %134\l  %136 = add nsw i32 %93, -8\l  %137 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 8\l  br label %151\l}"];
	Node0x5a9fb20 -> Node0x5a9fd40;
	Node0x5a9fd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%138:\l138:                                              \l  %139 = phi i32 [ %149, %138 ], [ 0, %96 ]\l  %140 = phi i64 [ %148, %138 ], [ 0, %96 ]\l  %141 = zext i32 %139 to i64\l  %142 = getelementptr inbounds i8, i8 addrspace(4)* %92, i64 %141\l  %143 = load i8, i8 addrspace(4)* %142, align 1, !tbaa !13\l  %144 = zext i8 %143 to i64\l  %145 = shl i32 %139, 3\l  %146 = zext i32 %145 to i64\l  %147 = shl nuw i64 %144, %146\l  %148 = or i64 %147, %140\l  %149 = add nuw nsw i32 %139, 1\l  %150 = icmp eq i32 %149, %93\l  br i1 %150, label %151, label %138\l|{<s0>T|<s1>F}}"];
	Node0x5a9fd90:s0 -> Node0x5a9fd40;
	Node0x5a9fd90:s1 -> Node0x5a9fd90;
	Node0x5a9fd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%151:\l151:                                              \l  %152 = phi i8 addrspace(4)* [ %137, %98 ], [ %92, %96 ], [ %92, %138 ]\l  %153 = phi i32 [ %136, %98 ], [ 0, %96 ], [ 0, %138 ]\l  %154 = phi i64 [ %135, %98 ], [ 0, %96 ], [ %148, %138 ]\l  %155 = icmp ugt i32 %153, 7\l  br i1 %155, label %158, label %156\l|{<s0>T|<s1>F}}"];
	Node0x5a9fd40:s0 -> Node0x5aa2260;
	Node0x5a9fd40:s1 -> Node0x5aa22b0;
	Node0x5aa22b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%156:\l156:                                              \l  %157 = icmp eq i32 %153, 0\l  br i1 %157, label %211, label %198\l|{<s0>T|<s1>F}}"];
	Node0x5aa22b0:s0 -> Node0x5aa2440;
	Node0x5aa22b0:s1 -> Node0x5aa2490;
	Node0x5aa2260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%158:\l158:                                              \l  %159 = load i8, i8 addrspace(4)* %152, align 1, !tbaa !13\l  %160 = zext i8 %159 to i64\l  %161 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 1\l  %162 = load i8, i8 addrspace(4)* %161, align 1, !tbaa !13\l  %163 = zext i8 %162 to i64\l  %164 = shl nuw nsw i64 %163, 8\l  %165 = or i64 %164, %160\l  %166 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 2\l  %167 = load i8, i8 addrspace(4)* %166, align 1, !tbaa !13\l  %168 = zext i8 %167 to i64\l  %169 = shl nuw nsw i64 %168, 16\l  %170 = or i64 %165, %169\l  %171 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 3\l  %172 = load i8, i8 addrspace(4)* %171, align 1, !tbaa !13\l  %173 = zext i8 %172 to i64\l  %174 = shl nuw nsw i64 %173, 24\l  %175 = or i64 %170, %174\l  %176 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 4\l  %177 = load i8, i8 addrspace(4)* %176, align 1, !tbaa !13\l  %178 = zext i8 %177 to i64\l  %179 = shl nuw nsw i64 %178, 32\l  %180 = or i64 %175, %179\l  %181 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 5\l  %182 = load i8, i8 addrspace(4)* %181, align 1, !tbaa !13\l  %183 = zext i8 %182 to i64\l  %184 = shl nuw nsw i64 %183, 40\l  %185 = or i64 %180, %184\l  %186 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 6\l  %187 = load i8, i8 addrspace(4)* %186, align 1, !tbaa !13\l  %188 = zext i8 %187 to i64\l  %189 = shl nuw nsw i64 %188, 48\l  %190 = or i64 %185, %189\l  %191 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 7\l  %192 = load i8, i8 addrspace(4)* %191, align 1, !tbaa !13\l  %193 = zext i8 %192 to i64\l  %194 = shl nuw i64 %193, 56\l  %195 = or i64 %190, %194\l  %196 = add nsw i32 %153, -8\l  %197 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 8\l  br label %211\l}"];
	Node0x5aa2260 -> Node0x5aa2440;
	Node0x5aa2490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%198:\l198:                                              \l  %199 = phi i32 [ %209, %198 ], [ 0, %156 ]\l  %200 = phi i64 [ %208, %198 ], [ 0, %156 ]\l  %201 = zext i32 %199 to i64\l  %202 = getelementptr inbounds i8, i8 addrspace(4)* %152, i64 %201\l  %203 = load i8, i8 addrspace(4)* %202, align 1, !tbaa !13\l  %204 = zext i8 %203 to i64\l  %205 = shl i32 %199, 3\l  %206 = zext i32 %205 to i64\l  %207 = shl nuw i64 %204, %206\l  %208 = or i64 %207, %200\l  %209 = add nuw nsw i32 %199, 1\l  %210 = icmp eq i32 %209, %153\l  br i1 %210, label %211, label %198\l|{<s0>T|<s1>F}}"];
	Node0x5aa2490:s0 -> Node0x5aa2440;
	Node0x5aa2490:s1 -> Node0x5aa2490;
	Node0x5aa2440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%211:\l211:                                              \l  %212 = phi i8 addrspace(4)* [ %197, %158 ], [ %152, %156 ], [ %152, %198 ]\l  %213 = phi i32 [ %196, %158 ], [ 0, %156 ], [ 0, %198 ]\l  %214 = phi i64 [ %195, %158 ], [ 0, %156 ], [ %208, %198 ]\l  %215 = icmp ugt i32 %213, 7\l  br i1 %215, label %218, label %216\l|{<s0>T|<s1>F}}"];
	Node0x5aa2440:s0 -> Node0x5aa44e0;
	Node0x5aa2440:s1 -> Node0x5aa4530;
	Node0x5aa4530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%216:\l216:                                              \l  %217 = icmp eq i32 %213, 0\l  br i1 %217, label %271, label %258\l|{<s0>T|<s1>F}}"];
	Node0x5aa4530:s0 -> Node0x5aa46c0;
	Node0x5aa4530:s1 -> Node0x5aa4710;
	Node0x5aa44e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%218:\l218:                                              \l  %219 = load i8, i8 addrspace(4)* %212, align 1, !tbaa !13\l  %220 = zext i8 %219 to i64\l  %221 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 1\l  %222 = load i8, i8 addrspace(4)* %221, align 1, !tbaa !13\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 8\l  %225 = or i64 %224, %220\l  %226 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 2\l  %227 = load i8, i8 addrspace(4)* %226, align 1, !tbaa !13\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 16\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 3\l  %232 = load i8, i8 addrspace(4)* %231, align 1, !tbaa !13\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 24\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 4\l  %237 = load i8, i8 addrspace(4)* %236, align 1, !tbaa !13\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 32\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 5\l  %242 = load i8, i8 addrspace(4)* %241, align 1, !tbaa !13\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 40\l  %245 = or i64 %240, %244\l  %246 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 6\l  %247 = load i8, i8 addrspace(4)* %246, align 1, !tbaa !13\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw nsw i64 %248, 48\l  %250 = or i64 %245, %249\l  %251 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 7\l  %252 = load i8, i8 addrspace(4)* %251, align 1, !tbaa !13\l  %253 = zext i8 %252 to i64\l  %254 = shl nuw i64 %253, 56\l  %255 = or i64 %250, %254\l  %256 = add nsw i32 %213, -8\l  %257 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 8\l  br label %271\l}"];
	Node0x5aa44e0 -> Node0x5aa46c0;
	Node0x5aa4710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%258:\l258:                                              \l  %259 = phi i32 [ %269, %258 ], [ 0, %216 ]\l  %260 = phi i64 [ %268, %258 ], [ 0, %216 ]\l  %261 = zext i32 %259 to i64\l  %262 = getelementptr inbounds i8, i8 addrspace(4)* %212, i64 %261\l  %263 = load i8, i8 addrspace(4)* %262, align 1, !tbaa !13\l  %264 = zext i8 %263 to i64\l  %265 = shl i32 %259, 3\l  %266 = zext i32 %265 to i64\l  %267 = shl nuw i64 %264, %266\l  %268 = or i64 %267, %260\l  %269 = add nuw nsw i32 %259, 1\l  %270 = icmp eq i32 %269, %213\l  br i1 %270, label %271, label %258\l|{<s0>T|<s1>F}}"];
	Node0x5aa4710:s0 -> Node0x5aa46c0;
	Node0x5aa4710:s1 -> Node0x5aa4710;
	Node0x5aa46c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%271:\l271:                                              \l  %272 = phi i8 addrspace(4)* [ %257, %218 ], [ %212, %216 ], [ %212, %258 ]\l  %273 = phi i32 [ %256, %218 ], [ 0, %216 ], [ 0, %258 ]\l  %274 = phi i64 [ %255, %218 ], [ 0, %216 ], [ %268, %258 ]\l  %275 = icmp ugt i32 %273, 7\l  br i1 %275, label %278, label %276\l|{<s0>T|<s1>F}}"];
	Node0x5aa46c0:s0 -> Node0x5aa6f50;
	Node0x5aa46c0:s1 -> Node0x5aa6fa0;
	Node0x5aa6fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%276:\l276:                                              \l  %277 = icmp eq i32 %273, 0\l  br i1 %277, label %331, label %318\l|{<s0>T|<s1>F}}"];
	Node0x5aa6fa0:s0 -> Node0x5aa7130;
	Node0x5aa6fa0:s1 -> Node0x5aa7180;
	Node0x5aa6f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%278:\l278:                                              \l  %279 = load i8, i8 addrspace(4)* %272, align 1, !tbaa !13\l  %280 = zext i8 %279 to i64\l  %281 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 1\l  %282 = load i8, i8 addrspace(4)* %281, align 1, !tbaa !13\l  %283 = zext i8 %282 to i64\l  %284 = shl nuw nsw i64 %283, 8\l  %285 = or i64 %284, %280\l  %286 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 2\l  %287 = load i8, i8 addrspace(4)* %286, align 1, !tbaa !13\l  %288 = zext i8 %287 to i64\l  %289 = shl nuw nsw i64 %288, 16\l  %290 = or i64 %285, %289\l  %291 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 3\l  %292 = load i8, i8 addrspace(4)* %291, align 1, !tbaa !13\l  %293 = zext i8 %292 to i64\l  %294 = shl nuw nsw i64 %293, 24\l  %295 = or i64 %290, %294\l  %296 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 4\l  %297 = load i8, i8 addrspace(4)* %296, align 1, !tbaa !13\l  %298 = zext i8 %297 to i64\l  %299 = shl nuw nsw i64 %298, 32\l  %300 = or i64 %295, %299\l  %301 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 5\l  %302 = load i8, i8 addrspace(4)* %301, align 1, !tbaa !13\l  %303 = zext i8 %302 to i64\l  %304 = shl nuw nsw i64 %303, 40\l  %305 = or i64 %300, %304\l  %306 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 6\l  %307 = load i8, i8 addrspace(4)* %306, align 1, !tbaa !13\l  %308 = zext i8 %307 to i64\l  %309 = shl nuw nsw i64 %308, 48\l  %310 = or i64 %305, %309\l  %311 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 7\l  %312 = load i8, i8 addrspace(4)* %311, align 1, !tbaa !13\l  %313 = zext i8 %312 to i64\l  %314 = shl nuw i64 %313, 56\l  %315 = or i64 %310, %314\l  %316 = add nsw i32 %273, -8\l  %317 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 8\l  br label %331\l}"];
	Node0x5aa6f50 -> Node0x5aa7130;
	Node0x5aa7180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%318:\l318:                                              \l  %319 = phi i32 [ %329, %318 ], [ 0, %276 ]\l  %320 = phi i64 [ %328, %318 ], [ 0, %276 ]\l  %321 = zext i32 %319 to i64\l  %322 = getelementptr inbounds i8, i8 addrspace(4)* %272, i64 %321\l  %323 = load i8, i8 addrspace(4)* %322, align 1, !tbaa !13\l  %324 = zext i8 %323 to i64\l  %325 = shl i32 %319, 3\l  %326 = zext i32 %325 to i64\l  %327 = shl nuw i64 %324, %326\l  %328 = or i64 %327, %320\l  %329 = add nuw nsw i32 %319, 1\l  %330 = icmp eq i32 %329, %273\l  br i1 %330, label %331, label %318\l|{<s0>T|<s1>F}}"];
	Node0x5aa7180:s0 -> Node0x5aa7130;
	Node0x5aa7180:s1 -> Node0x5aa7180;
	Node0x5aa7130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%331:\l331:                                              \l  %332 = phi i8 addrspace(4)* [ %317, %278 ], [ %272, %276 ], [ %272, %318 ]\l  %333 = phi i32 [ %316, %278 ], [ 0, %276 ], [ 0, %318 ]\l  %334 = phi i64 [ %315, %278 ], [ 0, %276 ], [ %328, %318 ]\l  %335 = icmp ugt i32 %333, 7\l  br i1 %335, label %338, label %336\l|{<s0>T|<s1>F}}"];
	Node0x5aa7130:s0 -> Node0x5aa9bb0;
	Node0x5aa7130:s1 -> Node0x5aa9c00;
	Node0x5aa9c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%336:\l336:                                              \l  %337 = icmp eq i32 %333, 0\l  br i1 %337, label %391, label %378\l|{<s0>T|<s1>F}}"];
	Node0x5aa9c00:s0 -> Node0x5aa9d90;
	Node0x5aa9c00:s1 -> Node0x5aa9de0;
	Node0x5aa9bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%338:\l338:                                              \l  %339 = load i8, i8 addrspace(4)* %332, align 1, !tbaa !13\l  %340 = zext i8 %339 to i64\l  %341 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 1\l  %342 = load i8, i8 addrspace(4)* %341, align 1, !tbaa !13\l  %343 = zext i8 %342 to i64\l  %344 = shl nuw nsw i64 %343, 8\l  %345 = or i64 %344, %340\l  %346 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 2\l  %347 = load i8, i8 addrspace(4)* %346, align 1, !tbaa !13\l  %348 = zext i8 %347 to i64\l  %349 = shl nuw nsw i64 %348, 16\l  %350 = or i64 %345, %349\l  %351 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 3\l  %352 = load i8, i8 addrspace(4)* %351, align 1, !tbaa !13\l  %353 = zext i8 %352 to i64\l  %354 = shl nuw nsw i64 %353, 24\l  %355 = or i64 %350, %354\l  %356 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 4\l  %357 = load i8, i8 addrspace(4)* %356, align 1, !tbaa !13\l  %358 = zext i8 %357 to i64\l  %359 = shl nuw nsw i64 %358, 32\l  %360 = or i64 %355, %359\l  %361 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 5\l  %362 = load i8, i8 addrspace(4)* %361, align 1, !tbaa !13\l  %363 = zext i8 %362 to i64\l  %364 = shl nuw nsw i64 %363, 40\l  %365 = or i64 %360, %364\l  %366 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 6\l  %367 = load i8, i8 addrspace(4)* %366, align 1, !tbaa !13\l  %368 = zext i8 %367 to i64\l  %369 = shl nuw nsw i64 %368, 48\l  %370 = or i64 %365, %369\l  %371 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 7\l  %372 = load i8, i8 addrspace(4)* %371, align 1, !tbaa !13\l  %373 = zext i8 %372 to i64\l  %374 = shl nuw i64 %373, 56\l  %375 = or i64 %370, %374\l  %376 = add nsw i32 %333, -8\l  %377 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 8\l  br label %391\l}"];
	Node0x5aa9bb0 -> Node0x5aa9d90;
	Node0x5aa9de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%378:\l378:                                              \l  %379 = phi i32 [ %389, %378 ], [ 0, %336 ]\l  %380 = phi i64 [ %388, %378 ], [ 0, %336 ]\l  %381 = zext i32 %379 to i64\l  %382 = getelementptr inbounds i8, i8 addrspace(4)* %332, i64 %381\l  %383 = load i8, i8 addrspace(4)* %382, align 1, !tbaa !13\l  %384 = zext i8 %383 to i64\l  %385 = shl i32 %379, 3\l  %386 = zext i32 %385 to i64\l  %387 = shl nuw i64 %384, %386\l  %388 = or i64 %387, %380\l  %389 = add nuw nsw i32 %379, 1\l  %390 = icmp eq i32 %389, %333\l  br i1 %390, label %391, label %378\l|{<s0>T|<s1>F}}"];
	Node0x5aa9de0:s0 -> Node0x5aa9d90;
	Node0x5aa9de0:s1 -> Node0x5aa9de0;
	Node0x5aa9d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%391:\l391:                                              \l  %392 = phi i8 addrspace(4)* [ %377, %338 ], [ %332, %336 ], [ %332, %378 ]\l  %393 = phi i32 [ %376, %338 ], [ 0, %336 ], [ 0, %378 ]\l  %394 = phi i64 [ %375, %338 ], [ 0, %336 ], [ %388, %378 ]\l  %395 = icmp ugt i32 %393, 7\l  br i1 %395, label %398, label %396\l|{<s0>T|<s1>F}}"];
	Node0x5aa9d90:s0 -> Node0x5aac410;
	Node0x5aa9d90:s1 -> Node0x5aac460;
	Node0x5aac460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%396:\l396:                                              \l  %397 = icmp eq i32 %393, 0\l  br i1 %397, label %449, label %436\l|{<s0>T|<s1>F}}"];
	Node0x5aac460:s0 -> Node0x5a9bf80;
	Node0x5aac460:s1 -> Node0x5aac5f0;
	Node0x5aac410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%398:\l398:                                              \l  %399 = load i8, i8 addrspace(4)* %392, align 1, !tbaa !13\l  %400 = zext i8 %399 to i64\l  %401 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 1\l  %402 = load i8, i8 addrspace(4)* %401, align 1, !tbaa !13\l  %403 = zext i8 %402 to i64\l  %404 = shl nuw nsw i64 %403, 8\l  %405 = or i64 %404, %400\l  %406 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 2\l  %407 = load i8, i8 addrspace(4)* %406, align 1, !tbaa !13\l  %408 = zext i8 %407 to i64\l  %409 = shl nuw nsw i64 %408, 16\l  %410 = or i64 %405, %409\l  %411 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 3\l  %412 = load i8, i8 addrspace(4)* %411, align 1, !tbaa !13\l  %413 = zext i8 %412 to i64\l  %414 = shl nuw nsw i64 %413, 24\l  %415 = or i64 %410, %414\l  %416 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 4\l  %417 = load i8, i8 addrspace(4)* %416, align 1, !tbaa !13\l  %418 = zext i8 %417 to i64\l  %419 = shl nuw nsw i64 %418, 32\l  %420 = or i64 %415, %419\l  %421 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 5\l  %422 = load i8, i8 addrspace(4)* %421, align 1, !tbaa !13\l  %423 = zext i8 %422 to i64\l  %424 = shl nuw nsw i64 %423, 40\l  %425 = or i64 %420, %424\l  %426 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 6\l  %427 = load i8, i8 addrspace(4)* %426, align 1, !tbaa !13\l  %428 = zext i8 %427 to i64\l  %429 = shl nuw nsw i64 %428, 48\l  %430 = or i64 %425, %429\l  %431 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 7\l  %432 = load i8, i8 addrspace(4)* %431, align 1, !tbaa !13\l  %433 = zext i8 %432 to i64\l  %434 = shl nuw i64 %433, 56\l  %435 = or i64 %430, %434\l  br label %449\l}"];
	Node0x5aac410 -> Node0x5a9bf80;
	Node0x5aac5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%436:\l436:                                              \l  %437 = phi i32 [ %447, %436 ], [ 0, %396 ]\l  %438 = phi i64 [ %446, %436 ], [ 0, %396 ]\l  %439 = zext i32 %437 to i64\l  %440 = getelementptr inbounds i8, i8 addrspace(4)* %392, i64 %439\l  %441 = load i8, i8 addrspace(4)* %440, align 1, !tbaa !13\l  %442 = zext i8 %441 to i64\l  %443 = shl i32 %437, 3\l  %444 = zext i32 %443 to i64\l  %445 = shl nuw i64 %442, %444\l  %446 = or i64 %445, %438\l  %447 = add nuw nsw i32 %437, 1\l  %448 = icmp eq i32 %447, %393\l  br i1 %448, label %449, label %436\l|{<s0>T|<s1>F}}"];
	Node0x5aac5f0:s0 -> Node0x5a9bf80;
	Node0x5aac5f0:s1 -> Node0x5aac5f0;
	Node0x5a9bf80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%449:\l449:                                              \l  %450 = phi i64 [ %435, %398 ], [ 0, %396 ], [ %446, %436 ]\l  %451 = shl nuw nsw i64 %32, 2\l  %452 = add nuw nsw i64 %451, 28\l  %453 = and i64 %452, 480\l  %454 = and i64 %34, -225\l  %455 = or i64 %454, %453\l  %456 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %12,\l... i64 noundef %455, i64 noundef %94, i64 noundef %154, i64 noundef %214, i64\l... noundef %274, i64 noundef %334, i64 noundef %394, i64 noundef %450) #10\l  %457 = sub i64 %24, %32\l  %458 = getelementptr inbounds i8, i8 addrspace(4)* %25, i64 %32\l  %459 = icmp eq i64 %457, 0\l  br i1 %459, label %460, label %23\l|{<s0>T|<s1>F}}"];
	Node0x5a9bf80:s0 -> Node0x5a9af80;
	Node0x5a9bf80:s1 -> Node0x5a9bae0;
	Node0x5a9af80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%460:\l460:                                              \l  %461 = phi \<2 x i64\> [ %18, %15 ], [ %456, %449 ]\l  %462 = extractelement \<2 x i64\> %461, i64 0\l  %463 = zext i32 %6 to i64\l  %464 = and i64 %462, -227\l  %465 = or i64 %464, 34\l  %466 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %12,\l... i64 noundef %465, i64 noundef %463, i64 noundef 0, i64 noundef 0, i64 noundef\l... 0, i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  ret void\l}"];
}
