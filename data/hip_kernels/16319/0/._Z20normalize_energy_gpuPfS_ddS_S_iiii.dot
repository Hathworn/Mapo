digraph "CFG for '_Z20normalize_energy_gpuPfS_ddS_S_iiii' function" {
	label="CFG for '_Z20normalize_energy_gpuPfS_ddS_S_iiii' function";

	Node0x6258140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %21 = getelementptr i8, i8 addrspace(4)* %12, i64 6\l  %22 = bitcast i8 addrspace(4)* %21 to i16 addrspace(4)*\l  %23 = load i16, i16 addrspace(4)* %22, align 2, !range !4, !invariant.load !5\l  %24 = zext i16 %23 to i32\l  %25 = mul i32 %20, %24\l  %26 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %27 = add i32 %25, %26\l  %28 = icmp slt i32 %19, %6\l  br i1 %28, label %29, label %80\l|{<s0>T|<s1>F}}"];
	Node0x6258140:s0 -> Node0x625c5b0;
	Node0x6258140:s1 -> Node0x625c640;
	Node0x625c5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%29:\l29:                                               \l  %30 = sext i32 %19 to i64\l  %31 = sub nsw i32 %7, %9\l  %32 = icmp slt i32 %27, %31\l  br i1 %32, label %33, label %80\l|{<s0>T|<s1>F}}"];
	Node0x625c5b0:s0 -> Node0x625a690;
	Node0x625c5b0:s1 -> Node0x625c640;
	Node0x625a690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = getelementptr inbounds float, float addrspace(1)* %1, i64 %30\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %30\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %38 = add nsw i32 %27, %9\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds float, float addrspace(1)* %0, i64 %39\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %42 = getelementptr inbounds float, float addrspace(1)* %1, i64 %39\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %44 = fsub contract float %41, %37\l  %45 = fpext float %44 to double\l  %46 = fsub contract double %2, %45\l  %47 = fadd contract double %45, %2\l  %48 = fmul contract double %46, %46\l  %49 = fmul contract double %3, %3\l  %50 = fadd contract double %49, %48\l  %51 = fdiv contract double %46, %50\l  %52 = fmul contract double %47, %47\l  %53 = fadd contract double %49, %52\l  %54 = fdiv contract double %47, %53\l  %55 = fsub contract double %51, %54\l  %56 = fdiv contract double %3, %53\l  %57 = fdiv double %3, %50\l  %58 = fsub contract double %56, %57\l  %59 = mul nsw i32 %19, %8\l  %60 = add nsw i32 %59, %27\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %4, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %64 = getelementptr inbounds float, float addrspace(1)* %5, i64 %61\l  %65 = load float, float addrspace(1)* %64, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %66 = fsub contract float %35, %43\l  %67 = fpext float %66 to double\l  %68 = fpext float %63 to double\l  %69 = fmul contract double %55, %68\l  %70 = fpext float %65 to double\l  %71 = fmul contract double %58, %70\l  %72 = fsub contract double %69, %71\l  %73 = fmul contract double %72, %67\l  %74 = fptrunc double %73 to float\l  store float %74, float addrspace(1)* %62, align 4, !tbaa !7\l  %75 = fmul contract double %58, %68\l  %76 = fmul contract double %55, %70\l  %77 = fadd contract double %75, %76\l  %78 = fmul contract double %77, %67\l  %79 = fptrunc double %78 to float\l  store float %79, float addrspace(1)* %64, align 4, !tbaa !7\l  br label %80\l}"];
	Node0x625a690 -> Node0x625c640;
	Node0x625c640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  ret void\l}"];
}
