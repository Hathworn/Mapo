digraph "CFG for '_Z44izhikevich_update_membrane_potentials_kernelPfS_S_S_S_fm' function" {
	label="CFG for '_Z44izhikevich_update_membrane_potentials_kernelPfS_S_S_S_fm' function";

	Node0x64a4c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%7:\l  %8 = fmul contract float %5, 1.000000e+03\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !7\l  %19 = mul i32 %10, %15\l  %20 = add i32 %19, %9\l  %21 = sext i32 %20 to i64\l  %22 = icmp ult i64 %21, %6\l  br i1 %22, label %23, label %61\l|{<s0>T|<s1>F}}"];
	Node0x64a4c40:s0 -> Node0x64a7990;
	Node0x64a4c40:s1 -> Node0x64a7a20;
	Node0x64a7990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%23:\l23:                                               \l  %24 = udiv i32 %18, %15\l  %25 = mul i32 %24, %15\l  %26 = icmp ugt i32 %18, %25\l  %27 = zext i1 %26 to i32\l  %28 = add i32 %24, %27\l  %29 = mul i32 %28, %15\l  br label %30\l}"];
	Node0x64a7990 -> Node0x64a7ea0;
	Node0x64a7ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%30:\l30:                                               \l  %31 = phi i64 [ %21, %23 ], [ %59, %30 ]\l  %32 = trunc i64 %31 to i32\l  %33 = getelementptr inbounds float, float addrspace(1)* %0, i64 %31\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !16\l  %35 = fmul contract float %34, 0x3FA47AE140000000\l  %36 = fmul contract float %34, %35\l  %37 = fmul contract float %34, 5.000000e+00\l  %38 = fadd contract float %37, %36\l  %39 = fadd contract float %38, 1.400000e+02\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fsub contract float %39, %41\l  %43 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  %44 = load float, float addrspace(1)* %43, align 4, !tbaa !16\l  %45 = fadd contract float %44, %42\l  %46 = fmul contract float %8, %45\l  %47 = fadd contract float %34, %46\l  store float %47, float addrspace(1)* %33, align 4, !tbaa !16\l  %48 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !16\l  %50 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %51 = load float, float addrspace(1)* %50, align 4, !tbaa !16\l  %52 = fmul contract float %51, %47\l  %53 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %54 = fsub contract float %52, %53\l  %55 = fmul contract float %49, %54\l  %56 = fmul contract float %8, %55\l  %57 = fadd contract float %53, %56\l  store float %57, float addrspace(1)* %40, align 4, !tbaa !16\l  %58 = add i32 %29, %32\l  %59 = sext i32 %58 to i64\l  %60 = icmp ult i64 %59, %6\l  br i1 %60, label %30, label %61, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x64a7ea0:s0 -> Node0x64a7ea0;
	Node0x64a7ea0:s1 -> Node0x64a7a20;
	Node0x64a7a20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%61:\l61:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
