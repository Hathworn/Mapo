digraph "CFG for '_Z44update_synaptic_efficacies_or_weights_kernelPfS_PiS_fS_S_Pbmf' function" {
	label="CFG for '_Z44update_synaptic_efficacies_or_weights_kernelPfS_PiS_fS_S_Pbmf' function";

	Node0x4da64a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !7\l  %21 = mul i32 %12, %17\l  %22 = add i32 %21, %11\l  %23 = sext i32 %22 to i64\l  %24 = icmp ult i64 %23, %8\l  br i1 %24, label %25, label %81\l|{<s0>T|<s1>F}}"];
	Node0x4da64a0:s0 -> Node0x4da9570;
	Node0x4da64a0:s1 -> Node0x4da9600;
	Node0x4da9570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = udiv i32 %20, %17\l  %27 = mul i32 %26, %17\l  %28 = icmp ugt i32 %20, %27\l  %29 = zext i1 %28 to i32\l  %30 = add i32 %26, %29\l  %31 = mul i32 %30, %17\l  br label %32\l}"];
	Node0x4da9570 -> Node0x4da9a80;
	Node0x4da9a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = phi i64 [ %23, %25 ], [ %79, %77 ]\l  %34 = trunc i64 %33 to i32\l  %35 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 %33\l  %36 = load i8, i8 addrspace(1)* %35, align 1, !tbaa !16, !range !20,\l... !amdgpu.noclobber !6\l  %37 = icmp eq i8 %36, 0\l  br i1 %37, label %77, label %38\l|{<s0>T|<s1>F}}"];
	Node0x4da9a80:s0 -> Node0x4da8f50;
	Node0x4da9a80:s1 -> Node0x4daa8d0;
	Node0x4daa8d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds float, float addrspace(1)* %3, i64 %33\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !21\l  %41 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 %33\l  %42 = load i32, i32 addrspace(1)* %41, align 4, !tbaa !23, !amdgpu.noclobber\l... !6\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds float, float addrspace(1)* %6, i64 %43\l  %45 = load float, float addrspace(1)* %44, align 4, !tbaa !21\l  %46 = fcmp contract oeq float %45, %4\l  br i1 %46, label %47, label %53\l|{<s0>T|<s1>F}}"];
	Node0x4daa8d0:s0 -> Node0x4dab700;
	Node0x4daa8d0:s1 -> Node0x4dab790;
	Node0x4dab700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%47:\l47:                                               \l  %48 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %49 = load float, float addrspace(1)* %48, align 4, !tbaa !21\l  %50 = fsub contract float 1.000000e+00, %40\l  %51 = fmul contract float %50, %49\l  %52 = fadd contract float %51, 0.000000e+00\l  br label %53\l}"];
	Node0x4dab700 -> Node0x4dab790;
	Node0x4dab790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%53:\l53:                                               \l  %54 = phi float [ %52, %47 ], [ 0.000000e+00, %38 ]\l  %55 = getelementptr inbounds float, float addrspace(1)* %5, i64 %33\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !21\l  %57 = fcmp contract oeq float %56, %4\l  br i1 %57, label %58, label %63\l|{<s0>T|<s1>F}}"];
	Node0x4dab790:s0 -> Node0x4dac8a0;
	Node0x4dab790:s1 -> Node0x4dac8f0;
	Node0x4dac8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%58:\l58:                                               \l  %59 = getelementptr inbounds float, float addrspace(1)* %1, i64 %43\l  %60 = load float, float addrspace(1)* %59, align 4, !tbaa !21\l  %61 = fmul contract float %40, %60\l  %62 = fsub contract float %54, %61\l  br label %63\l}"];
	Node0x4dac8a0 -> Node0x4dac8f0;
	Node0x4dac8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%63:\l63:                                               \l  %64 = phi float [ %62, %58 ], [ %54, %53 ]\l  %65 = fcmp contract une float %64, 0.000000e+00\l  %66 = fmul contract float %64, %9\l  %67 = select i1 %65, float %66, float -0.000000e+00\l  %68 = fadd contract float %40, %67\l  %69 = fcmp contract une float %40, %68\l  br i1 %69, label %70, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4dac8f0:s0 -> Node0x4dad2b0;
	Node0x4dac8f0:s1 -> Node0x4da8f50;
	Node0x4dad2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%70:\l70:                                               \l  %71 = fpext float %68 to double\l  %72 = tail call double @llvm.maxnum.f64(double %71, double 0.000000e+00)\l  %73 = fptrunc double %72 to float\l  %74 = fpext float %73 to double\l  %75 = tail call double @llvm.minnum.f64(double %74, double 1.000000e+00)\l  %76 = fptrunc double %75 to float\l  store float %76, float addrspace(1)* %39, align 4, !tbaa !21\l  br label %77\l}"];
	Node0x4dad2b0 -> Node0x4da8f50;
	Node0x4da8f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  %78 = add i32 %31, %34\l  %79 = sext i32 %78 to i64\l  %80 = icmp ult i64 %79, %8\l  br i1 %80, label %32, label %81, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x4da8f50:s0 -> Node0x4da9a80;
	Node0x4da8f50:s1 -> Node0x4da9600;
	Node0x4da9600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%81:\l81:                                               \l  ret void\l}"];
}
