digraph "CFG for '_Z47conductance_update_synaptic_conductances_kernelfPfS_S_S_ifS_' function" {
	label="CFG for '_Z47conductance_update_synaptic_conductances_kernelfPfS_S_S_ifS_' function";

	Node0x57a9cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%8:\l  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %12 = getelementptr i8, i8 addrspace(4)* %11, i64 4\l  %13 = bitcast i8 addrspace(4)* %12 to i16 addrspace(4)*\l  %14 = load i16, i16 addrspace(4)* %13, align 4, !range !5, !invariant.load !6\l  %15 = zext i16 %14 to i32\l  %16 = getelementptr inbounds i8, i8 addrspace(4)* %11, i64 12\l  %17 = bitcast i8 addrspace(4)* %16 to i32 addrspace(4)*\l  %18 = load i32, i32 addrspace(4)* %17, align 4, !tbaa !7\l  %19 = mul i32 %10, %15\l  %20 = add i32 %19, %9\l  %21 = icmp slt i32 %20, %5\l  br i1 %21, label %22, label %60\l|{<s0>T|<s1>F}}"];
	Node0x57a9cd0:s0 -> Node0x57abee0;
	Node0x57a9cd0:s1 -> Node0x57abf70;
	Node0x57abee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%22:\l22:                                               \l  %23 = udiv i32 %18, %15\l  %24 = mul i32 %23, %15\l  %25 = icmp ugt i32 %18, %24\l  %26 = zext i1 %25 to i32\l  %27 = add i32 %23, %26\l  %28 = mul i32 %27, %15\l  br label %29\l}"];
	Node0x57abee0 -> Node0x57ac3f0;
	Node0x57ac3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %20, %22 ], [ %58, %57 ]\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds float, float addrspace(1)* %1, i64 %31\l  %33 = load float, float addrspace(1)* %32, align 4, !tbaa !16\l  %34 = getelementptr inbounds float, float addrspace(1)* %7, i64 %31\l  %35 = load float, float addrspace(1)* %34, align 4, !tbaa !16\l  %36 = fdiv contract float %0, %35\l  %37 = fpext float %36 to double\l  %38 = fsub contract double 1.000000e+00, %37\l  %39 = fpext float %33 to double\l  %40 = fmul contract double %38, %39\l  %41 = fptrunc double %40 to float\l  %42 = getelementptr inbounds float, float addrspace(1)* %3, i64 %31\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16\l  %44 = fcmp contract oeq float %43, %6\l  br i1 %44, label %45, label %53\l|{<s0>T|<s1>F}}"];
	Node0x57ac3f0:s0 -> Node0x57ae020;
	Node0x57ac3f0:s1 -> Node0x57ae0b0;
	Node0x57ae020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds float, float addrspace(1)* %2, i64 %31\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !16\l  %48 = fmul contract float %47, %0\l  %49 = getelementptr inbounds float, float addrspace(1)* %4, i64 %31\l  %50 = load float, float addrspace(1)* %49, align 4, !tbaa !16\l  %51 = fmul contract float %48, %50\l  %52 = fadd contract float %51, %41\l  br label %53\l}"];
	Node0x57ae020 -> Node0x57ae0b0;
	Node0x57ae0b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%53:\l53:                                               \l  %54 = phi float [ %52, %45 ], [ %41, %29 ]\l  %55 = fcmp contract une float %33, %54\l  br i1 %55, label %56, label %57\l|{<s0>T|<s1>F}}"];
	Node0x57ae0b0:s0 -> Node0x57ae770;
	Node0x57ae0b0:s1 -> Node0x57ac4b0;
	Node0x57ae770 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%56:\l56:                                               \l  store float %54, float addrspace(1)* %32, align 4, !tbaa !16\l  br label %57\l}"];
	Node0x57ae770 -> Node0x57ac4b0;
	Node0x57ac4b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%57:\l57:                                               \l  %58 = add i32 %28, %30\l  %59 = icmp slt i32 %58, %5\l  br i1 %59, label %29, label %60, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x57ac4b0:s0 -> Node0x57ac3f0;
	Node0x57ac4b0:s1 -> Node0x57abf70;
	Node0x57abf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%60:\l60:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
