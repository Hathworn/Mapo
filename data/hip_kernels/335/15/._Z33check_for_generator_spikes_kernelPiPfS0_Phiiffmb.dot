digraph "CFG for '_Z33check_for_generator_spikes_kernelPiPfS0_Phiiffmb' function" {
	label="CFG for '_Z33check_for_generator_spikes_kernelPiPfS0_Phiiffmb' function";

	Node0x4775620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !5, !invariant.load !6\l  %17 = zext i16 %16 to i32\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %13, i64 12\l  %19 = bitcast i8 addrspace(4)* %18 to i32 addrspace(4)*\l  %20 = load i32, i32 addrspace(4)* %19, align 4, !tbaa !7\l  %21 = mul i32 %12, %17\l  %22 = add i32 %21, %11\l  %23 = sext i32 %22 to i64\l  %24 = icmp ult i64 %23, %8\l  br i1 %24, label %25, label %85\l|{<s0>T|<s1>F}}"];
	Node0x4775620:s0 -> Node0x47784c0;
	Node0x4775620:s1 -> Node0x4778550;
	Node0x47784c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = fpext float %7 to double\l  %27 = fmul contract double %26, 5.000000e-01\l  %28 = fdiv contract float %6, %7\l  %29 = tail call float @llvm.round.f32(float %28)\l  %30 = fptosi float %29 to i32\l  %31 = udiv i32 %20, %17\l  %32 = mul i32 %31, %17\l  %33 = icmp ugt i32 %20, %32\l  %34 = zext i1 %33 to i32\l  %35 = add i32 %31, %34\l  %36 = mul i32 %35, %17\l  br label %37\l}"];
	Node0x47784c0 -> Node0x47798b0;
	Node0x47798b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i64 [ %23, %25 ], [ %83, %81 ]\l  %39 = trunc i64 %38 to i32\l  %40 = getelementptr inbounds float, float addrspace(1)* %1, i64 %38\l  %41 = load float, float addrspace(1)* %40, align 4, !tbaa !16\l  %42 = fsub contract float %6, %41\l  %43 = tail call float @llvm.fabs.f32(float %42)\l  %44 = fpext float %43 to double\l  %45 = fcmp contract ogt double %27, %44\l  br i1 %45, label %46, label %64\l|{<s0>T|<s1>F}}"];
	Node0x47798b0:s0 -> Node0x477a190;
	Node0x47798b0:s1 -> Node0x477a220;
	Node0x477a190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%46:\l46:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %48 = load i32, i32 addrspace(1)* %47, align 4, !tbaa !20\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds float, float addrspace(1)* %2, i64 %49\l  store float %6, float addrspace(1)* %50, align 4, !tbaa !16\l  br i1 %9, label %51, label %81\l|{<s0>T|<s1>F}}"];
	Node0x477a190:s0 -> Node0x477b060;
	Node0x477a190:s1 -> Node0x47799e0;
	Node0x477b060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%51:\l51:                                               \l  %52 = mul nsw i32 %48, %4\l  %53 = srem i32 %30, %5\l  %54 = sdiv i32 %53, 8\l  %55 = shl nsw i32 %54, 3\l  %56 = sub nsw i32 %53, %55\l  %57 = add nsw i32 %54, %52\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %58\l  %60 = load i8, i8 addrspace(1)* %59, align 1, !tbaa !22\l  %61 = shl nuw i32 1, %56\l  %62 = trunc i32 %61 to i8\l  %63 = or i8 %60, %62\l  store i8 %63, i8 addrspace(1)* %59, align 1, !tbaa !22\l  br label %81\l}"];
	Node0x477b060 -> Node0x47799e0;
	Node0x477a220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%64:\l64:                                               \l  br i1 %9, label %65, label %81\l|{<s0>T|<s1>F}}"];
	Node0x477a220:s0 -> Node0x4779580;
	Node0x477a220:s1 -> Node0x47799e0;
	Node0x4779580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %38\l  %67 = load i32, i32 addrspace(1)* %66, align 4, !tbaa !20\l  %68 = mul nsw i32 %67, %4\l  %69 = srem i32 %30, %5\l  %70 = sdiv i32 %69, 8\l  %71 = shl nsw i32 %70, 3\l  %72 = sub nsw i32 %69, %71\l  %73 = add nsw i32 %70, %68\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 %74\l  %76 = load i8, i8 addrspace(1)* %75, align 1, !tbaa !22\l  %77 = shl nuw i32 1, %72\l  %78 = trunc i32 %77 to i8\l  %79 = xor i8 %78, -1\l  %80 = and i8 %76, %79\l  store i8 %80, i8 addrspace(1)* %75, align 1, !tbaa !22\l  br label %81\l}"];
	Node0x4779580 -> Node0x47799e0;
	Node0x47799e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%81:\l81:                                               \l  %82 = add i32 %36, %39\l  %83 = sext i32 %82 to i64\l  %84 = icmp ult i64 %83, %8\l  br i1 %84, label %37, label %85, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x47799e0:s0 -> Node0x47798b0;
	Node0x47799e0:s1 -> Node0x4778550;
	Node0x4778550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%85:\l85:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
