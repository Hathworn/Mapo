digraph "CFG for '_Z9initArrayPjPdS_i' function" {
	label="CFG for '_Z9initArrayPjPdS_i' function";

	Node0x4d34040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !5, !invariant.load !6\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = add i32 %12, %5\l  %14 = icmp slt i32 %13, %3\l  br i1 %14, label %15, label %69\l|{<s0>T|<s1>F}}"];
	Node0x4d34040:s0 -> Node0x4d34090;
	Node0x4d34040:s1 -> Node0x4d35fd0;
	Node0x4d34090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%15:\l15:                                               \l  %16 = load double, double addrspace(1)* %1, align 8, !tbaa !7\l  %17 = fadd contract double %16, 1.000000e+00\l  store double %17, double addrspace(1)* %1, align 8, !tbaa !7\l  %18 = load i32, i32 addrspace(1)* %0, align 4, !tbaa !11\l  %19 = add i32 %18, 1\l  store i32 %19, i32 addrspace(1)* %0, align 4, !tbaa !11\l  store i32 %18, i32 addrspace(1)* %2, align 4, !tbaa !11\l  %20 = getelementptr inbounds double, double addrspace(1)* %1, i64 1\l  %21 = load double, double addrspace(1)* %20, align 8, !tbaa !7\l  %22 = fadd contract double %21, 1.000000e+00\l  store double %22, double addrspace(1)* %20, align 8, !tbaa !7\l  %23 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 1\l  %24 = load i32, i32 addrspace(1)* %23, align 4, !tbaa !11\l  %25 = add i32 %24, 1\l  store i32 %25, i32 addrspace(1)* %23, align 4, !tbaa !11\l  %26 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 1\l  store i32 %24, i32 addrspace(1)* %26, align 4, !tbaa !11\l  %27 = getelementptr inbounds double, double addrspace(1)* %1, i64 2\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7\l  %29 = fadd contract double %28, 1.000000e+00\l  store double %29, double addrspace(1)* %27, align 8, !tbaa !7\l  %30 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 2\l  %31 = load i32, i32 addrspace(1)* %30, align 4, !tbaa !11\l  %32 = add i32 %31, 1\l  store i32 %32, i32 addrspace(1)* %30, align 4, !tbaa !11\l  %33 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 2\l  store i32 %31, i32 addrspace(1)* %33, align 4, !tbaa !11\l  %34 = getelementptr inbounds double, double addrspace(1)* %1, i64 3\l  %35 = load double, double addrspace(1)* %34, align 8, !tbaa !7\l  %36 = fadd contract double %35, 1.000000e+00\l  store double %36, double addrspace(1)* %34, align 8, !tbaa !7\l  %37 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 3\l  %38 = load i32, i32 addrspace(1)* %37, align 4, !tbaa !11\l  %39 = add i32 %38, 1\l  store i32 %39, i32 addrspace(1)* %37, align 4, !tbaa !11\l  %40 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 3\l  store i32 %38, i32 addrspace(1)* %40, align 4, !tbaa !11\l  %41 = getelementptr inbounds double, double addrspace(1)* %1, i64 4\l  %42 = load double, double addrspace(1)* %41, align 8, !tbaa !7\l  %43 = fadd contract double %42, 1.000000e+00\l  store double %43, double addrspace(1)* %41, align 8, !tbaa !7\l  %44 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 4\l  %45 = load i32, i32 addrspace(1)* %44, align 4, !tbaa !11\l  %46 = add i32 %45, 1\l  store i32 %46, i32 addrspace(1)* %44, align 4, !tbaa !11\l  %47 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 4\l  store i32 %45, i32 addrspace(1)* %47, align 4, !tbaa !11\l  %48 = getelementptr inbounds double, double addrspace(1)* %1, i64 5\l  %49 = load double, double addrspace(1)* %48, align 8, !tbaa !7\l  %50 = fadd contract double %49, 1.000000e+00\l  store double %50, double addrspace(1)* %48, align 8, !tbaa !7\l  %51 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 5\l  %52 = load i32, i32 addrspace(1)* %51, align 4, !tbaa !11\l  %53 = add i32 %52, 1\l  store i32 %53, i32 addrspace(1)* %51, align 4, !tbaa !11\l  %54 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 5\l  store i32 %52, i32 addrspace(1)* %54, align 4, !tbaa !11\l  %55 = getelementptr inbounds double, double addrspace(1)* %1, i64 6\l  %56 = load double, double addrspace(1)* %55, align 8, !tbaa !7\l  %57 = fadd contract double %56, 1.000000e+00\l  store double %57, double addrspace(1)* %55, align 8, !tbaa !7\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 6\l  %59 = load i32, i32 addrspace(1)* %58, align 4, !tbaa !11\l  %60 = add i32 %59, 1\l  store i32 %60, i32 addrspace(1)* %58, align 4, !tbaa !11\l  %61 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 6\l  store i32 %59, i32 addrspace(1)* %61, align 4, !tbaa !11\l  %62 = getelementptr inbounds double, double addrspace(1)* %1, i64 7\l  %63 = load double, double addrspace(1)* %62, align 8, !tbaa !7\l  %64 = fadd contract double %63, 1.000000e+00\l  store double %64, double addrspace(1)* %62, align 8, !tbaa !7\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 7\l  %66 = load i32, i32 addrspace(1)* %65, align 4, !tbaa !11\l  %67 = add i32 %66, 1\l  store i32 %67, i32 addrspace(1)* %65, align 4, !tbaa !11\l  %68 = getelementptr inbounds i32, i32 addrspace(1)* %2, i64 7\l  store i32 %66, i32 addrspace(1)* %68, align 4, !tbaa !11\l  br label %69\l}"];
	Node0x4d34090 -> Node0x4d35fd0;
	Node0x4d35fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%69:\l69:                                               \l  ret void\l}"];
}
