digraph "CFG for '_Z21kernel_generatePointsP12hiprandStatePii' function" {
	label="CFG for '_Z21kernel_generatePointsP12hiprandStatePii' function";

	Node0x47ef050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = alloca [20 x i8], align 4, addrspace(5)\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %2\l  br i1 %14, label %15, label %175\l|{<s0>T|<s1>F}}"];
	Node0x47ef050:s0 -> Node0x47f0fe0;
	Node0x47ef050:s1 -> Node0x47f1070;
	Node0x47f0fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  %16 = getelementptr inbounds [20 x i8], [20 x i8] addrspace(5)* %4, i32 0,\l... i32 0\l  call void @llvm.lifetime.start.p5i8(i64 20, i8 addrspace(5)* %16)\l  %17 = sext i32 %13 to i64\l  %18 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 0\l  %19 = load i32, i32 addrspace(1)* %18, align 8\l  %20 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 1\l  %21 = bitcast i32 addrspace(1)* %20 to i8 addrspace(1)*\l  call void @llvm.memcpy.p5i8.p1i8.i64(i8 addrspace(5)* noundef align 4\l... dereferenceable(20) %16, i8 addrspace(1)* noundef align 4 dereferenceable(20)\l... %21, i64 20, i1 false)\l  %22 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 0\l  %23 = load i32, i32 addrspace(1)* %22, align 8\l  %24 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 1\l  %25 = load i32, i32 addrspace(1)* %24, align 4\l  %26 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 2\l  %27 = load i32, i32 addrspace(1)* %26, align 8\l  %28 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 3\l  %29 = load i32, i32 addrspace(1)* %28, align 4\l  %30 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 4\l  %31 = load i32, i32 addrspace(1)* %30, align 8\l  %32 = getelementptr inbounds %struct.hiprandState, %struct.hiprandState\l... addrspace(1)* %0, i64 %17, i32 0, i32 0, i32 5, i64 5\l  %33 = load i32, i32 addrspace(1)* %32, align 4\l  %34 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %17\l  br label %37\l}"];
	Node0x47f0fe0 -> Node0x47f26a0;
	Node0x47f27a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = add i32 %19, 724874000\l  store i32 %36, i32 addrspace(1)* %18, align 8\l  call void @llvm.memcpy.p1i8.p5i8.i64(i8 addrspace(1)* noundef align 4\l... dereferenceable(20) %21, i8 addrspace(5)* noundef align 4 dereferenceable(20)\l... %16, i64 20, i1 false)\l  store i32 %95, i32 addrspace(1)* %22, align 8\l  store i32 %115, i32 addrspace(1)* %24, align 4\l  store i32 %127, i32 addrspace(1)* %26, align 8\l  store i32 %147, i32 addrspace(1)* %28, align 4\l  store i32 %159, i32 addrspace(1)* %30, align 8\l  store i32 %33, i32 addrspace(1)* %32, align 4\l  call void @llvm.lifetime.end.p5i8(i64 20, i8 addrspace(5)* %16)\l  br label %175\l}"];
	Node0x47f27a0 -> Node0x47f1070;
	Node0x47f26a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %15 ], [ %173, %172 ]\l  %39 = phi i32 [ %19, %15 ], [ %160, %172 ]\l  %40 = phi i32 [ %23, %15 ], [ %95, %172 ]\l  %41 = phi i32 [ %25, %15 ], [ %115, %172 ]\l  %42 = phi i32 [ %27, %15 ], [ %127, %172 ]\l  %43 = phi i32 [ %29, %15 ], [ %147, %172 ]\l  %44 = phi i32 [ %31, %15 ], [ %159, %172 ]\l  %45 = lshr i32 %40, 2\l  %46 = xor i32 %45, %40\l  %47 = shl i32 %44, 4\l  %48 = shl i32 %46, 1\l  %49 = xor i32 %47, %48\l  %50 = xor i32 %49, %44\l  %51 = xor i32 %50, %46\l  %52 = add i32 %39, 362437\l  %53 = add i32 %52, %51\l  %54 = uitofp i32 %53 to float\l  %55 = fmul contract float %54, 0x3DF0000000000000\l  %56 = fadd contract float %55, 0x3DF0000000000000\l  %57 = lshr i32 %41, 2\l  %58 = xor i32 %57, %41\l  %59 = shl i32 %51, 4\l  %60 = shl i32 %58, 1\l  %61 = xor i32 %60, %59\l  %62 = xor i32 %61, %58\l  %63 = xor i32 %62, %51\l  %64 = add i32 %39, 724874\l  %65 = add i32 %63, %64\l  %66 = uitofp i32 %65 to float\l  %67 = fmul contract float %66, 0x3DF0000000000000\l  %68 = fadd contract float %67, 0x3DF0000000000000\l  %69 = fmul contract float %56, %56\l  %70 = fmul contract float %68, %68\l  %71 = fadd contract float %69, %70\l  %72 = fcmp contract ugt float %71, 1.000000e+00\l  br i1 %72, label %76, label %73\l|{<s0>T|<s1>F}}"];
	Node0x47f26a0:s0 -> Node0x47f5600;
	Node0x47f26a0:s1 -> Node0x47f5650;
	Node0x47f5650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%73:\l73:                                               \l  %74 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %75 = add nsw i32 %74, 1\l  store i32 %75, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %76\l}"];
	Node0x47f5650 -> Node0x47f5600;
	Node0x47f5600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = lshr i32 %42, 2\l  %78 = xor i32 %77, %42\l  %79 = shl i32 %63, 4\l  %80 = shl i32 %78, 1\l  %81 = xor i32 %79, %80\l  %82 = xor i32 %81, %63\l  %83 = xor i32 %82, %78\l  %84 = add i32 %39, 1087311\l  %85 = add i32 %84, %83\l  %86 = uitofp i32 %85 to float\l  %87 = fmul contract float %86, 0x3DF0000000000000\l  %88 = fadd contract float %87, 0x3DF0000000000000\l  %89 = lshr i32 %43, 2\l  %90 = xor i32 %89, %43\l  %91 = shl i32 %83, 4\l  %92 = shl i32 %90, 1\l  %93 = xor i32 %92, %91\l  %94 = xor i32 %93, %90\l  %95 = xor i32 %94, %83\l  %96 = add i32 %39, 1449748\l  %97 = add i32 %95, %96\l  %98 = uitofp i32 %97 to float\l  %99 = fmul contract float %98, 0x3DF0000000000000\l  %100 = fadd contract float %99, 0x3DF0000000000000\l  %101 = fmul contract float %88, %88\l  %102 = fmul contract float %100, %100\l  %103 = fadd contract float %101, %102\l  %104 = fcmp contract ugt float %103, 1.000000e+00\l  br i1 %104, label %108, label %105\l|{<s0>T|<s1>F}}"];
	Node0x47f5600:s0 -> Node0x47f7050;
	Node0x47f5600:s1 -> Node0x47f70a0;
	Node0x47f70a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%105:\l105:                                              \l  %106 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %107 = add nsw i32 %106, 1\l  store i32 %107, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %108\l}"];
	Node0x47f70a0 -> Node0x47f7050;
	Node0x47f7050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%108:\l108:                                              \l  %109 = lshr i32 %44, 2\l  %110 = xor i32 %109, %44\l  %111 = shl i32 %95, 4\l  %112 = shl i32 %110, 1\l  %113 = xor i32 %111, %112\l  %114 = xor i32 %113, %95\l  %115 = xor i32 %114, %110\l  %116 = add i32 %39, 1812185\l  %117 = add i32 %116, %115\l  %118 = uitofp i32 %117 to float\l  %119 = fmul contract float %118, 0x3DF0000000000000\l  %120 = fadd contract float %119, 0x3DF0000000000000\l  %121 = lshr i32 %51, 2\l  %122 = xor i32 %121, %51\l  %123 = shl i32 %115, 4\l  %124 = shl i32 %122, 1\l  %125 = xor i32 %124, %123\l  %126 = xor i32 %125, %122\l  %127 = xor i32 %126, %115\l  %128 = add i32 %39, 2174622\l  %129 = add i32 %127, %128\l  %130 = uitofp i32 %129 to float\l  %131 = fmul contract float %130, 0x3DF0000000000000\l  %132 = fadd contract float %131, 0x3DF0000000000000\l  %133 = fmul contract float %120, %120\l  %134 = fmul contract float %132, %132\l  %135 = fadd contract float %133, %134\l  %136 = fcmp contract ugt float %135, 1.000000e+00\l  br i1 %136, label %140, label %137\l|{<s0>T|<s1>F}}"];
	Node0x47f7050:s0 -> Node0x47f8790;
	Node0x47f7050:s1 -> Node0x47f87e0;
	Node0x47f87e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%137:\l137:                                              \l  %138 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %139 = add nsw i32 %138, 1\l  store i32 %139, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %140\l}"];
	Node0x47f87e0 -> Node0x47f8790;
	Node0x47f8790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%140:\l140:                                              \l  %141 = lshr i32 %63, 2\l  %142 = xor i32 %141, %63\l  %143 = shl i32 %127, 4\l  %144 = shl i32 %142, 1\l  %145 = xor i32 %143, %144\l  %146 = xor i32 %145, %127\l  %147 = xor i32 %146, %142\l  %148 = add i32 %39, 2537059\l  %149 = add i32 %148, %147\l  %150 = uitofp i32 %149 to float\l  %151 = fmul contract float %150, 0x3DF0000000000000\l  %152 = fadd contract float %151, 0x3DF0000000000000\l  %153 = lshr i32 %83, 2\l  %154 = xor i32 %153, %83\l  %155 = shl i32 %147, 4\l  %156 = shl i32 %154, 1\l  %157 = xor i32 %156, %155\l  %158 = xor i32 %157, %154\l  %159 = xor i32 %158, %147\l  %160 = add i32 %39, 2899496\l  %161 = add i32 %159, %160\l  %162 = uitofp i32 %161 to float\l  %163 = fmul contract float %162, 0x3DF0000000000000\l  %164 = fadd contract float %163, 0x3DF0000000000000\l  %165 = fmul contract float %152, %152\l  %166 = fmul contract float %164, %164\l  %167 = fadd contract float %165, %166\l  %168 = fcmp contract ugt float %167, 1.000000e+00\l  br i1 %168, label %172, label %169\l|{<s0>T|<s1>F}}"];
	Node0x47f8790:s0 -> Node0x47f3360;
	Node0x47f8790:s1 -> Node0x47f9a60;
	Node0x47f9a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%169:\l169:                                              \l  %170 = load i32, i32 addrspace(1)* %34, align 4, !tbaa !7\l  %171 = add nsw i32 %170, 1\l  store i32 %171, i32 addrspace(1)* %34, align 4, !tbaa !7\l  br label %172\l}"];
	Node0x47f9a60 -> Node0x47f3360;
	Node0x47f3360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%172:\l172:                                              \l  %173 = add nuw nsw i32 %38, 4\l  %174 = icmp eq i32 %173, 1000\l  br i1 %174, label %35, label %37, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x47f3360:s0 -> Node0x47f27a0;
	Node0x47f3360:s1 -> Node0x47f26a0;
	Node0x47f1070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%175:\l175:                                              \l  ret void\l}"];
}
