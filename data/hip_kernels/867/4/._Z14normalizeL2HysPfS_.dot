digraph "CFG for '_Z14normalizeL2HysPfS_' function" {
	label="CFG for '_Z14normalizeL2HysPfS_' function";

	Node0x4a4a450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %5 = mul nsw i32 %3, 30\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds float, float addrspace(1)* %0, i64 %6\l  %8 = getelementptr inbounds float, float addrspace(1)* %1, i64 %6\l  %9 = zext i32 %4 to i64\l  %10 = getelementptr inbounds float, float addrspace(1)* %7, i64 %9\l  %11 = load float, float addrspace(1)* %10, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %12 = fmul contract float %11, %11\l  %13 = fadd contract float %12, 0.000000e+00\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %14 = fpext float %13 to double\l  %15 = tail call double @llvm.amdgcn.rsq.f64(double %14)\l  %16 = fneg double %14\l  %17 = fmul double %15, %16\l  %18 = tail call double @llvm.fma.f64(double %17, double %15, double\l... 1.000000e+00)\l  %19 = fmul double %15, %18\l  %20 = tail call double @llvm.fma.f64(double %18, double 3.750000e-01, double\l... 5.000000e-01)\l  %21 = tail call double @llvm.fma.f64(double %19, double %20, double %15)\l  %22 = tail call i1 @llvm.amdgcn.class.f64(double %15, i32 384)\l  %23 = select i1 %22, double %21, double %15\l  %24 = fadd contract double %23, 3.000000e+01\l  %25 = fdiv contract double 1.000000e+00, %24\l  %26 = fptrunc double %25 to float\l  %27 = load float, float addrspace(1)* %10, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %28 = fmul contract float %27, %26\l  %29 = getelementptr inbounds float, float addrspace(1)* %8, i64 %9\l  store float %28, float addrspace(1)* %29, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  ret void\l}"];
}
