digraph "CFG for '_Z12myhistKernelPhPj' function" {
	label="CFG for '_Z12myhistKernelPhPj' function";

	Node0x5b3d380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2:\l  %3 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %4 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %5 = getelementptr i8, i8 addrspace(4)* %4, i64 4\l  %6 = bitcast i8 addrspace(4)* %5 to i16 addrspace(4)*\l  %7 = load i16, i16 addrspace(4)* %6, align 4, !range !4, !invariant.load !5\l  %8 = zext i16 %7 to i32\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %4, i64 12\l  %10 = bitcast i8 addrspace(4)* %9 to i32 addrspace(4)*\l  %11 = load i32, i32 addrspace(4)* %10, align 4, !tbaa !6\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %14 = getelementptr i8, i8 addrspace(4)* %4, i64 6\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 2, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %13, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !15\l  %20 = add i32 %18, %19\l  %21 = udiv i32 %11, %8\l  %22 = mul i32 %21, %8\l  %23 = icmp ugt i32 %11, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %20\l  %27 = add i32 %26, %3\l  %28 = mul i32 %27, %8\l  %29 = add i32 %28, %12\l  %30 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ12myhistKernelPhPjE4temp, i32 0, i32 %12\l  store i32 0, i32 addrspace(3)* %30, align 4, !tbaa !16\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %31 = sext i32 %29 to i64\l  %32 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %31\l  %33 = load i8, i8 addrspace(1)* %32, align 1, !tbaa !20, !amdgpu.noclobber !5\l  %34 = zext i8 %33 to i32\l  %35 = getelementptr inbounds [256 x i32], [256 x i32] addrspace(3)*\l... @_ZZ12myhistKernelPhPjE4temp, i32 0, i32 %34\l  %36 = atomicrmw add i32 addrspace(3)* %35, i32 1 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %37 = zext i32 %12 to i64\l  %38 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %37\l  %39 = load i32, i32 addrspace(3)* %30, align 4, !tbaa !16\l  %40 = atomicrmw add i32 addrspace(1)* %38, i32 %39 syncscope(\"agent-one-as\")\l... monotonic, align 4\l  ret void\l}"];
}
