digraph "CFG for '_Z10blurKernelPhS_jj' function" {
	label="CFG for '_Z10blurKernelPhS_jj' function";

	Node0x55bbe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 6\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 2, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %13 = add i32 %11, %12\l  %14 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %15 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = mul i32 %14, %18\l  %20 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %21 = add i32 %19, %20\l  %22 = mul i32 %13, %2\l  %23 = add i32 %22, %21\l  %24 = mul i32 %3, %2\l  %25 = icmp ult i32 %23, %24\l  br i1 %25, label %26, label %98\l|{<s0>T|<s1>F}}"];
	Node0x55bbe30:s0 -> Node0x55bf940;
	Node0x55bbe30:s1 -> Node0x55bf9d0;
	Node0x55bf940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%26:\l26:                                               \l  %27 = icmp ult i32 %21, %2\l  br i1 %27, label %28, label %78\l|{<s0>T|<s1>F}}"];
	Node0x55bf940:s0 -> Node0x55bfba0;
	Node0x55bf940:s1 -> Node0x55bfbf0;
	Node0x55bfba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%28:\l28:                                               \l  %29 = icmp ult i32 %13, %3\l  %30 = add nsw i32 %13, 9\l  %31 = add nsw i32 %21, 9\l  br label %32\l}"];
	Node0x55bfba0 -> Node0x55bfee0;
	Node0x55bfee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%32:\l32:                                               \l  %33 = phi i32 [ %21, %28 ], [ %74, %69 ]\l  %34 = phi i32 [ 0, %28 ], [ %73, %69 ]\l  %35 = phi i32 [ 0, %28 ], [ %72, %69 ]\l  %36 = phi i32 [ 0, %28 ], [ %71, %69 ]\l  %37 = phi i32 [ 0, %28 ], [ %70, %69 ]\l  br i1 %29, label %38, label %69\l|{<s0>T|<s1>F}}"];
	Node0x55bfee0:s0 -> Node0x55c06c0;
	Node0x55bfee0:s1 -> Node0x55bdfd0;
	Node0x55c06c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  %39 = phi i32 [ %65, %38 ], [ %13, %32 ]\l  %40 = phi i32 [ %64, %38 ], [ %34, %32 ]\l  %41 = phi i32 [ %63, %38 ], [ %35, %32 ]\l  %42 = phi i32 [ %57, %38 ], [ %36, %32 ]\l  %43 = phi i32 [ %51, %38 ], [ %37, %32 ]\l  %44 = mul i32 %39, %2\l  %45 = add i32 %44, %33\l  %46 = mul i32 %45, 3\l  %47 = zext i32 %46 to i64\l  %48 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %47\l  %49 = load i8, i8 addrspace(1)* %48, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %50 = zext i8 %49 to i32\l  %51 = add nsw i32 %43, %50\l  %52 = add i32 %46, 1\l  %53 = zext i32 %52 to i64\l  %54 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %53\l  %55 = load i8, i8 addrspace(1)* %54, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %56 = zext i8 %55 to i32\l  %57 = add nsw i32 %42, %56\l  %58 = add i32 %46, 2\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %59\l  %61 = load i8, i8 addrspace(1)* %60, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %62 = zext i8 %61 to i32\l  %63 = add nsw i32 %41, %62\l  %64 = add nsw i32 %40, 1\l  %65 = add nuw nsw i32 %39, 1\l  %66 = icmp ult i32 %65, %3\l  %67 = icmp slt i32 %39, %30\l  %68 = select i1 %66, i1 %67, i1 false\l  br i1 %68, label %38, label %69, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x55c06c0:s0 -> Node0x55c06c0;
	Node0x55c06c0:s1 -> Node0x55bdfd0;
	Node0x55bdfd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%69:\l69:                                               \l  %70 = phi i32 [ %37, %32 ], [ %51, %38 ]\l  %71 = phi i32 [ %36, %32 ], [ %57, %38 ]\l  %72 = phi i32 [ %35, %32 ], [ %63, %38 ]\l  %73 = phi i32 [ %34, %32 ], [ %64, %38 ]\l  %74 = add nuw nsw i32 %33, 1\l  %75 = icmp ult i32 %74, %2\l  %76 = icmp slt i32 %33, %31\l  %77 = select i1 %75, i1 %76, i1 false\l  br i1 %77, label %32, label %78, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x55bdfd0:s0 -> Node0x55bfee0;
	Node0x55bdfd0:s1 -> Node0x55bfbf0;
	Node0x55bfbf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{%78:\l78:                                               \l  %79 = phi i32 [ 0, %26 ], [ %70, %69 ]\l  %80 = phi i32 [ 0, %26 ], [ %71, %69 ]\l  %81 = phi i32 [ 0, %26 ], [ %72, %69 ]\l  %82 = phi i32 [ 0, %26 ], [ %73, %69 ]\l  %83 = sdiv i32 %79, %82\l  %84 = sdiv i32 %80, %82\l  %85 = sdiv i32 %81, %82\l  %86 = trunc i32 %83 to i8\l  %87 = mul i32 %23, 3\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %88\l  store i8 %86, i8 addrspace(1)* %89, align 1, !tbaa !7\l  %90 = trunc i32 %84 to i8\l  %91 = add i32 %87, 1\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %92\l  store i8 %90, i8 addrspace(1)* %93, align 1, !tbaa !7\l  %94 = trunc i32 %85 to i8\l  %95 = add i32 %87, 2\l  %96 = zext i32 %95 to i64\l  %97 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %96\l  store i8 %94, i8 addrspace(1)* %97, align 1, !tbaa !7\l  br label %98\l}"];
	Node0x55bfbf0 -> Node0x55bf9d0;
	Node0x55bf9d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%98:\l98:                                               \l  ret void\l}"];
}
