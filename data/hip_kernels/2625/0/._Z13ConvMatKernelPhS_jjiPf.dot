digraph "CFG for '_Z13ConvMatKernelPhS_jjiPf' function" {
	label="CFG for '_Z13ConvMatKernelPhS_jjiPf' function";

	Node0x51ed220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%6:\l  %7 = tail call i32 @llvm.amdgcn.workgroup.id.y()\l  %8 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %9 = getelementptr i8, i8 addrspace(4)* %8, i64 6\l  %10 = bitcast i8 addrspace(4)* %9 to i16 addrspace(4)*\l  %11 = load i16, i16 addrspace(4)* %10, align 2, !range !4, !invariant.load !5\l  %12 = zext i16 %11 to i32\l  %13 = mul i32 %7, %12\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !6\l  %15 = add i32 %13, %14\l  %16 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %17 = getelementptr i8, i8 addrspace(4)* %8, i64 4\l  %18 = bitcast i8 addrspace(4)* %17 to i16 addrspace(4)*\l  %19 = load i16, i16 addrspace(4)* %18, align 4, !range !4, !invariant.load !5\l  %20 = zext i16 %19 to i32\l  %21 = mul i32 %16, %20\l  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %23 = add i32 %21, %22\l  %24 = mul i32 %15, %2\l  %25 = add i32 %24, %23\l  %26 = mul i32 %3, %2\l  %27 = icmp ult i32 %25, %26\l  br i1 %27, label %28, label %113\l|{<s0>T|<s1>F}}"];
	Node0x51ed220:s0 -> Node0x51f0ce0;
	Node0x51ed220:s1 -> Node0x51f0d70;
	Node0x51f0ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%28:\l28:                                               \l  %29 = icmp eq i32 %15, 0\l  %30 = add i32 %3, -1\l  %31 = icmp eq i32 %15, %30\l  %32 = icmp eq i32 %23, 0\l  %33 = add i32 %2, -1\l  %34 = icmp eq i32 %23, %33\l  br label %35\l}"];
	Node0x51f0ce0 -> Node0x51ef2d0;
	Node0x51ef2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%35:\l35:                                               \l  %36 = phi i32 [ -1, %28 ], [ %95, %91 ]\l  %37 = phi float [ 0.000000e+00, %28 ], [ %94, %91 ]\l  %38 = phi float [ 0.000000e+00, %28 ], [ %93, %91 ]\l  %39 = phi float [ 0.000000e+00, %28 ], [ %92, %91 ]\l  %40 = icmp eq i32 %36, -1\l  %41 = select i1 %29, i1 %40, i1 false\l  br i1 %41, label %45, label %42\l|{<s0>T|<s1>F}}"];
	Node0x51ef2d0:s0 -> Node0x51f24c0;
	Node0x51ef2d0:s1 -> Node0x51f2550;
	Node0x51f2550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%42:\l42:                                               \l  %43 = icmp sgt i32 %36, 0\l  %44 = select i1 %31, i1 %43, i1 false\l  br i1 %44, label %97, label %45\l|{<s0>T|<s1>F}}"];
	Node0x51f2550:s0 -> Node0x51f27d0;
	Node0x51f2550:s1 -> Node0x51f24c0;
	Node0x51f24c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%45:\l45:                                               \l  %46 = phi i32 [ %36, %42 ], [ 0, %35 ]\l  %47 = add nsw i32 %46, %15\l  %48 = mul i32 %47, %2\l  %49 = add i32 %48, %23\l  %50 = mul i32 %46, 3\l  %51 = add i32 %50, 4\l  br label %52\l}"];
	Node0x51f24c0 -> Node0x51f2cb0;
	Node0x51f2cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%52:\l52:                                               \l  %53 = phi i32 [ -1, %45 ], [ %89, %62 ]\l  %54 = phi float [ %37, %45 ], [ %88, %62 ]\l  %55 = phi float [ %38, %45 ], [ %81, %62 ]\l  %56 = phi float [ %39, %45 ], [ %74, %62 ]\l  %57 = icmp eq i32 %53, -1\l  %58 = select i1 %32, i1 %57, i1 false\l  %59 = select i1 %58, i32 0, i32 %53\l  %60 = icmp eq i32 %59, 1\l  %61 = select i1 %34, i1 %60, i1 false\l  br i1 %61, label %91, label %62\l|{<s0>T|<s1>F}}"];
	Node0x51f2cb0:s0 -> Node0x51f1460;
	Node0x51f2cb0:s1 -> Node0x51f2da0;
	Node0x51f2da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%62:\l62:                                               \l  %63 = add i32 %49, %59\l  %64 = mul i32 %63, 3\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %65\l  %67 = load i8, i8 addrspace(1)* %66, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %68 = uitofp i8 %67 to float\l  %69 = add i32 %51, %59\l  %70 = zext i32 %69 to i64\l  %71 = getelementptr inbounds float, float addrspace(1)* %5, i64 %70\l  %72 = load float, float addrspace(1)* %71, align 4, !tbaa !10,\l... !amdgpu.noclobber !5\l  %73 = fmul contract float %72, %68\l  %74 = fadd contract float %56, %73\l  %75 = add i32 %64, 1\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %76\l  %78 = load i8, i8 addrspace(1)* %77, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %79 = uitofp i8 %78 to float\l  %80 = fmul contract float %72, %79\l  %81 = fadd contract float %55, %80\l  %82 = add i32 %64, 2\l  %83 = zext i32 %82 to i64\l  %84 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 %83\l  %85 = load i8, i8 addrspace(1)* %84, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %86 = uitofp i8 %85 to float\l  %87 = fmul contract float %72, %86\l  %88 = fadd contract float %54, %87\l  %89 = add nsw i32 %59, 1\l  %90 = icmp slt i32 %59, 1\l  br i1 %90, label %52, label %91, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x51f2da0:s0 -> Node0x51f2cb0;
	Node0x51f2da0:s1 -> Node0x51f1460;
	Node0x51f1460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%91:\l91:                                               \l  %92 = phi float [ %74, %62 ], [ %56, %52 ]\l  %93 = phi float [ %81, %62 ], [ %55, %52 ]\l  %94 = phi float [ %88, %62 ], [ %54, %52 ]\l  %95 = add nsw i32 %46, 1\l  %96 = icmp slt i32 %46, 1\l  br i1 %96, label %35, label %97, !llvm.loop !14\l|{<s0>T|<s1>F}}"];
	Node0x51f1460:s0 -> Node0x51ef2d0;
	Node0x51f1460:s1 -> Node0x51f27d0;
	Node0x51f27d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%97:\l97:                                               \l  %98 = phi float [ %39, %42 ], [ %92, %91 ]\l  %99 = phi float [ %38, %42 ], [ %93, %91 ]\l  %100 = phi float [ %37, %42 ], [ %94, %91 ]\l  %101 = fptoui float %98 to i8\l  %102 = mul i32 %25, 3\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %103\l  store i8 %101, i8 addrspace(1)* %104, align 1, !tbaa !7\l  %105 = fptoui float %99 to i8\l  %106 = add i32 %102, 1\l  %107 = zext i32 %106 to i64\l  %108 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %107\l  store i8 %105, i8 addrspace(1)* %108, align 1, !tbaa !7\l  %109 = fptoui float %100 to i8\l  %110 = add i32 %102, 2\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 %111\l  store i8 %109, i8 addrspace(1)* %112, align 1, !tbaa !7\l  br label %113\l}"];
	Node0x51f27d0 -> Node0x51f0d70;
	Node0x51f0d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%113:\l113:                                              \l  ret void\l}"];
}
