digraph "CFG for '_Z4multPfS_iii' function" {
	label="CFG for '_Z4multPfS_iii' function";

	Node0x5605480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = tail call i32 @llvm.amdgcn.workitem.id.y(), !range !4\l  %8 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %9 = shl i32 %8, 3\l  %10 = add i32 %9, %7\l  %11 = add i32 %10, %4\l  %12 = icmp slt i32 %11, %4\l  %13 = icmp sgt i32 %11, %3\l  %14 = select i1 %12, i1 true, i1 %13\l  br i1 %14, label %102, label %15\l|{<s0>T|<s1>F}}"];
	Node0x5605480:s0 -> Node0x5607650;
	Node0x5605480:s1 -> Node0x56076e0;
	Node0x56076e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%15:\l15:                                               \l  %16 = icmp slt i32 %6, %2\l  br i1 %16, label %17, label %25\l|{<s0>T|<s1>F}}"];
	Node0x56076e0:s0 -> Node0x5606c00;
	Node0x56076e0:s1 -> Node0x56079c0;
	Node0x5606c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%17:\l17:                                               \l  %18 = add nuw nsw i32 %6, 1\l  %19 = icmp eq i32 %6, 0\l  %20 = add nsw i32 %4, -1\l  %21 = mul nsw i32 %20, %2\l  %22 = getelementptr inbounds [8 x float], [8 x float] addrspace(3)*\l... @_ZZ4multPfS_iiiE2QK, i32 0, i32 %7\l  %23 = add nsw i32 %11, -1\l  %24 = mul nsw i32 %23, %2\l  br label %29\l}"];
	Node0x5606c00 -> Node0x5607fb0;
	Node0x56079c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%25:\l25:                                               \l  %26 = phi float [ 0.000000e+00, %15 ], [ %45, %38 ]\l  %27 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %6\l  store float %26, float addrspace(3)* %27, align 4, !tbaa !5\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %28 = icmp ult i32 %6, 32\l  br i1 %28, label %48, label %54\l|{<s0>T|<s1>F}}"];
	Node0x56079c0:s0 -> Node0x5609280;
	Node0x56079c0:s1 -> Node0x5609310;
	Node0x5607fb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%29:\l29:                                               \l  %30 = phi i32 [ %18, %17 ], [ %46, %38 ]\l  %31 = phi float [ 0.000000e+00, %17 ], [ %45, %38 ]\l  %32 = add nsw i32 %30, -1\l  br i1 %19, label %33, label %38\l|{<s0>T|<s1>F}}"];
	Node0x5607fb0:s0 -> Node0x56078b0;
	Node0x5607fb0:s1 -> Node0x5608af0;
	Node0x56078b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%33:\l33:                                               \l  %34 = add nsw i32 %32, %21\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds float, float addrspace(1)* %0, i64 %35\l  %37 = load float, float addrspace(1)* %36, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  store float %37, float addrspace(3)* %22, align 4, !tbaa !5\l  br label %38\l}"];
	Node0x56078b0 -> Node0x5608af0;
	Node0x5608af0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%38:\l38:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %39 = load float, float addrspace(3)* %22, align 4, !tbaa !5\l  %40 = add nsw i32 %32, %24\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !5,\l... !amdgpu.noclobber !9\l  %44 = fmul contract float %39, %43\l  %45 = fadd contract float %31, %44\l  %46 = add nuw nsw i32 %30, 64\l  %47 = icmp sgt i32 %46, %2\l  br i1 %47, label %25, label %29, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5608af0:s0 -> Node0x56079c0;
	Node0x5608af0:s1 -> Node0x5607fb0;
	Node0x5609280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%48:\l48:                                               \l  %49 = add nuw nsw i32 %6, 32\l  %50 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %49\l  %51 = load float, float addrspace(3)* %50, align 4, !tbaa !5\l  %52 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %53 = fadd contract float %51, %52\l  store float %53, float addrspace(3)* %27, align 4, !tbaa !5\l  br label %54\l}"];
	Node0x5609280 -> Node0x5609310;
	Node0x5609310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%54:\l54:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %55 = icmp ult i32 %6, 16\l  br i1 %55, label %56, label %62\l|{<s0>T|<s1>F}}"];
	Node0x5609310:s0 -> Node0x560b730;
	Node0x5609310:s1 -> Node0x560b780;
	Node0x560b730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%56:\l56:                                               \l  %57 = add nuw nsw i32 %6, 16\l  %58 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %57\l  %59 = load float, float addrspace(3)* %58, align 4, !tbaa !5\l  %60 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %61 = fadd contract float %59, %60\l  store float %61, float addrspace(3)* %27, align 4, !tbaa !5\l  br label %62\l}"];
	Node0x560b730 -> Node0x560b780;
	Node0x560b780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%62:\l62:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %63 = icmp ult i32 %6, 8\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x560b780:s0 -> Node0x560be60;
	Node0x560b780:s1 -> Node0x560beb0;
	Node0x560be60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%64:\l64:                                               \l  %65 = add nuw nsw i32 %6, 8\l  %66 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %65\l  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !5\l  %68 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %69 = fadd contract float %67, %68\l  store float %69, float addrspace(3)* %27, align 4, !tbaa !5\l  br label %70\l}"];
	Node0x560be60 -> Node0x560beb0;
	Node0x560beb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%70:\l70:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %71 = icmp ult i32 %6, 4\l  br i1 %71, label %72, label %78\l|{<s0>T|<s1>F}}"];
	Node0x560beb0:s0 -> Node0x560c7c0;
	Node0x560beb0:s1 -> Node0x560c810;
	Node0x560c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%72:\l72:                                               \l  %73 = add nuw nsw i32 %6, 4\l  %74 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %73\l  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !5\l  %76 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %77 = fadd contract float %75, %76\l  store float %77, float addrspace(3)* %27, align 4, !tbaa !5\l  br label %78\l}"];
	Node0x560c7c0 -> Node0x560c810;
	Node0x560c810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%78:\l78:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %79 = icmp ult i32 %6, 2\l  br i1 %79, label %80, label %86\l|{<s0>T|<s1>F}}"];
	Node0x560c810:s0 -> Node0x560cf20;
	Node0x560c810:s1 -> Node0x560cf70;
	Node0x560cf20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%80:\l80:                                               \l  %81 = add nuw nsw i32 %6, 2\l  %82 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %81\l  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !5\l  %84 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %85 = fadd contract float %83, %84\l  store float %85, float addrspace(3)* %27, align 4, !tbaa !5\l  br label %86\l}"];
	Node0x560cf20 -> Node0x560cf70;
	Node0x560cf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%86:\l86:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %87 = icmp eq i32 %6, 0\l  br i1 %87, label %88, label %102\l|{<s0>T|<s1>F}}"];
	Node0x560cf70:s0 -> Node0x560d680;
	Node0x560cf70:s1 -> Node0x5607650;
	Node0x560d680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%88:\l88:                                               \l  %89 = add nuw nsw i32 %6, 1\l  %90 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 %89\l  %91 = load float, float addrspace(3)* %90, align 4, !tbaa !5\l  %92 = load float, float addrspace(3)* %27, align 4, !tbaa !5\l  %93 = fadd contract float %91, %92\l  store float %93, float addrspace(3)* %27, align 4, !tbaa !5\l  %94 = getelementptr inbounds [8 x [64 x float]], [8 x [64 x float]]\l... addrspace(3)* @_ZZ4multPfS_iiiE2RS, i32 0, i32 %7, i32 0\l  %95 = load float, float addrspace(3)* %94, align 16, !tbaa !5\l  %96 = add nsw i32 %11, -1\l  %97 = mul nsw i32 %96, %3\l  %98 = add nsw i32 %4, -1\l  %99 = add nsw i32 %98, %97\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds float, float addrspace(1)* %1, i64 %100\l  store float %95, float addrspace(1)* %101, align 4, !tbaa !5\l  br label %102\l}"];
	Node0x560d680 -> Node0x5607650;
	Node0x5607650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%102:\l102:                                              \l  ret void\l}"];
}
