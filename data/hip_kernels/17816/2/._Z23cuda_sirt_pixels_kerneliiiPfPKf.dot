digraph "CFG for '_Z23cuda_sirt_pixels_kerneliiiPfPKf' function" {
	label="CFG for '_Z23cuda_sirt_pixels_kerneliiiPfPKf' function";

	Node0x49d72c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = udiv i32 %14, %11\l  %19 = mul i32 %18, %11\l  %20 = icmp ugt i32 %14, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = mul i32 %22, %11\l  %24 = icmp slt i32 %17, %2\l  br i1 %24, label %25, label %40\l|{<s0>T|<s1>F}}"];
	Node0x49d72c0:s0 -> Node0x49d9870;
	Node0x49d72c0:s1 -> Node0x49d9900;
	Node0x49d9870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%25:\l25:                                               \l  %26 = icmp sgt i32 %1, 0\l  %27 = mul nsw i32 %2, %0\l  %28 = and i32 %1, 7\l  %29 = icmp ult i32 %1, 8\l  %30 = and i32 %1, -8\l  %31 = icmp eq i32 %28, 0\l  %32 = and i32 %1, 7\l  %33 = icmp ult i32 %1, 8\l  %34 = and i32 %1, -8\l  %35 = icmp eq i32 %32, 0\l  br label %36\l}"];
	Node0x49d9870 -> Node0x49d9420;
	Node0x49d9420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%36:\l36:                                               \l  %37 = phi i32 [ %17, %25 ], [ %134, %133 ]\l  br i1 %26, label %38, label %57\l|{<s0>T|<s1>F}}"];
	Node0x49d9420:s0 -> Node0x49da3a0;
	Node0x49d9420:s1 -> Node0x49da430;
	Node0x49da3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%38:\l38:                                               \l  %39 = mul nsw i32 %37, %1\l  br i1 %29, label %41, label %66\l|{<s0>T|<s1>F}}"];
	Node0x49da3a0:s0 -> Node0x49da600;
	Node0x49da3a0:s1 -> Node0x49da650;
	Node0x49d9900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%40:\l40:                                               \l  ret void\l}"];
	Node0x49da600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%41:\l41:                                               \l  %42 = phi float [ undef, %38 ], [ %116, %66 ]\l  %43 = phi i32 [ 0, %38 ], [ %117, %66 ]\l  %44 = phi float [ 0.000000e+00, %38 ], [ %116, %66 ]\l  br i1 %31, label %57, label %45\l|{<s0>T|<s1>F}}"];
	Node0x49da600:s0 -> Node0x49da430;
	Node0x49da600:s1 -> Node0x49db8c0;
	Node0x49db8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%45:\l45:                                               \l  %46 = phi i32 [ %54, %45 ], [ %43, %41 ]\l  %47 = phi float [ %53, %45 ], [ %44, %41 ]\l  %48 = phi i32 [ %55, %45 ], [ 0, %41 ]\l  %49 = add nsw i32 %46, %39\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %3, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !16\l  %53 = fadd contract float %47, %52\l  %54 = add nuw nsw i32 %46, 1\l  %55 = add i32 %48, 1\l  %56 = icmp eq i32 %55, %28\l  br i1 %56, label %57, label %45, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x49db8c0:s0 -> Node0x49da430;
	Node0x49db8c0:s1 -> Node0x49db8c0;
	Node0x49da430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%57:\l57:                                               \l  %58 = phi float [ 0.000000e+00, %36 ], [ %42, %41 ], [ %53, %45 ]\l  %59 = add nsw i32 %37, %27\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %4, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %63 = fsub contract float %62, %58\l  br i1 %26, label %64, label %133\l|{<s0>T|<s1>F}}"];
	Node0x49da430:s0 -> Node0x49dcd90;
	Node0x49da430:s1 -> Node0x49da260;
	Node0x49dcd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%64:\l64:                                               \l  %65 = mul nsw i32 %37, %1\l  br i1 %33, label %120, label %136\l|{<s0>T|<s1>F}}"];
	Node0x49dcd90:s0 -> Node0x49d9f50;
	Node0x49dcd90:s1 -> Node0x49d9fa0;
	Node0x49da650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%66:\l66:                                               \l  %67 = phi i32 [ %117, %66 ], [ 0, %38 ]\l  %68 = phi float [ %116, %66 ], [ 0.000000e+00, %38 ]\l  %69 = phi i32 [ %118, %66 ], [ 0, %38 ]\l  %70 = add nsw i32 %67, %39\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %3, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = fadd contract float %68, %73\l  %75 = or i32 %67, 1\l  %76 = add nsw i32 %75, %39\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds float, float addrspace(1)* %3, i64 %77\l  %79 = load float, float addrspace(1)* %78, align 4, !tbaa !16\l  %80 = fadd contract float %74, %79\l  %81 = or i32 %67, 2\l  %82 = add nsw i32 %81, %39\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds float, float addrspace(1)* %3, i64 %83\l  %85 = load float, float addrspace(1)* %84, align 4, !tbaa !16\l  %86 = fadd contract float %80, %85\l  %87 = or i32 %67, 3\l  %88 = add nsw i32 %87, %39\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds float, float addrspace(1)* %3, i64 %89\l  %91 = load float, float addrspace(1)* %90, align 4, !tbaa !16\l  %92 = fadd contract float %86, %91\l  %93 = or i32 %67, 4\l  %94 = add nsw i32 %93, %39\l  %95 = sext i32 %94 to i64\l  %96 = getelementptr inbounds float, float addrspace(1)* %3, i64 %95\l  %97 = load float, float addrspace(1)* %96, align 4, !tbaa !16\l  %98 = fadd contract float %92, %97\l  %99 = or i32 %67, 5\l  %100 = add nsw i32 %99, %39\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %3, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = fadd contract float %98, %103\l  %105 = or i32 %67, 6\l  %106 = add nsw i32 %105, %39\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds float, float addrspace(1)* %3, i64 %107\l  %109 = load float, float addrspace(1)* %108, align 4, !tbaa !16\l  %110 = fadd contract float %104, %109\l  %111 = or i32 %67, 7\l  %112 = add nsw i32 %111, %39\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds float, float addrspace(1)* %3, i64 %113\l  %115 = load float, float addrspace(1)* %114, align 4, !tbaa !16\l  %116 = fadd contract float %110, %115\l  %117 = add nuw nsw i32 %67, 8\l  %118 = add i32 %69, 8\l  %119 = icmp eq i32 %118, %30\l  br i1 %119, label %41, label %66, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x49da650:s0 -> Node0x49da600;
	Node0x49da650:s1 -> Node0x49da650;
	Node0x49d9f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%120:\l120:                                              \l  %121 = phi i32 [ 0, %64 ], [ %186, %136 ]\l  br i1 %35, label %133, label %122\l|{<s0>T|<s1>F}}"];
	Node0x49d9f50:s0 -> Node0x49da260;
	Node0x49d9f50:s1 -> Node0x49df200;
	Node0x49df200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%122:\l122:                                              \l  %123 = phi i32 [ %130, %122 ], [ %121, %120 ]\l  %124 = phi i32 [ %131, %122 ], [ 0, %120 ]\l  %125 = add nsw i32 %123, %65\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds float, float addrspace(1)* %3, i64 %126\l  %128 = load float, float addrspace(1)* %127, align 4, !tbaa !16\l  %129 = fadd contract float %63, %128\l  store float %129, float addrspace(1)* %127, align 4, !tbaa !16\l  %130 = add nuw nsw i32 %123, 1\l  %131 = add i32 %124, 1\l  %132 = icmp eq i32 %131, %32\l  br i1 %132, label %133, label %122, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x49df200:s0 -> Node0x49da260;
	Node0x49df200:s1 -> Node0x49df200;
	Node0x49da260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%133:\l133:                                              \l  %134 = add nsw i32 %37, %23\l  %135 = icmp slt i32 %134, %2\l  br i1 %135, label %36, label %40, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x49da260:s0 -> Node0x49d9420;
	Node0x49da260:s1 -> Node0x49d9900;
	Node0x49d9fa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%136:\l136:                                              \l  %137 = phi i32 [ %186, %136 ], [ 0, %64 ]\l  %138 = phi i32 [ %187, %136 ], [ 0, %64 ]\l  %139 = add nsw i32 %137, %65\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds float, float addrspace(1)* %3, i64 %140\l  %142 = load float, float addrspace(1)* %141, align 4, !tbaa !16\l  %143 = fadd contract float %63, %142\l  store float %143, float addrspace(1)* %141, align 4, !tbaa !16\l  %144 = or i32 %137, 1\l  %145 = add nsw i32 %144, %65\l  %146 = sext i32 %145 to i64\l  %147 = getelementptr inbounds float, float addrspace(1)* %3, i64 %146\l  %148 = load float, float addrspace(1)* %147, align 4, !tbaa !16\l  %149 = fadd contract float %63, %148\l  store float %149, float addrspace(1)* %147, align 4, !tbaa !16\l  %150 = or i32 %137, 2\l  %151 = add nsw i32 %150, %65\l  %152 = sext i32 %151 to i64\l  %153 = getelementptr inbounds float, float addrspace(1)* %3, i64 %152\l  %154 = load float, float addrspace(1)* %153, align 4, !tbaa !16\l  %155 = fadd contract float %63, %154\l  store float %155, float addrspace(1)* %153, align 4, !tbaa !16\l  %156 = or i32 %137, 3\l  %157 = add nsw i32 %156, %65\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds float, float addrspace(1)* %3, i64 %158\l  %160 = load float, float addrspace(1)* %159, align 4, !tbaa !16\l  %161 = fadd contract float %63, %160\l  store float %161, float addrspace(1)* %159, align 4, !tbaa !16\l  %162 = or i32 %137, 4\l  %163 = add nsw i32 %162, %65\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %3, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !16\l  %167 = fadd contract float %63, %166\l  store float %167, float addrspace(1)* %165, align 4, !tbaa !16\l  %168 = or i32 %137, 5\l  %169 = add nsw i32 %168, %65\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds float, float addrspace(1)* %3, i64 %170\l  %172 = load float, float addrspace(1)* %171, align 4, !tbaa !16\l  %173 = fadd contract float %63, %172\l  store float %173, float addrspace(1)* %171, align 4, !tbaa !16\l  %174 = or i32 %137, 6\l  %175 = add nsw i32 %174, %65\l  %176 = sext i32 %175 to i64\l  %177 = getelementptr inbounds float, float addrspace(1)* %3, i64 %176\l  %178 = load float, float addrspace(1)* %177, align 4, !tbaa !16\l  %179 = fadd contract float %63, %178\l  store float %179, float addrspace(1)* %177, align 4, !tbaa !16\l  %180 = or i32 %137, 7\l  %181 = add nsw i32 %180, %65\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds float, float addrspace(1)* %3, i64 %182\l  %184 = load float, float addrspace(1)* %183, align 4, !tbaa !16\l  %185 = fadd contract float %63, %184\l  store float %185, float addrspace(1)* %183, align 4, !tbaa !16\l  %186 = add nuw nsw i32 %137, 8\l  %187 = add i32 %138, 8\l  %188 = icmp eq i32 %187, %34\l  br i1 %188, label %120, label %136, !llvm.loop !26\l|{<s0>T|<s1>F}}"];
	Node0x49d9fa0:s0 -> Node0x49d9f50;
	Node0x49d9fa0:s1 -> Node0x49d9fa0;
}
