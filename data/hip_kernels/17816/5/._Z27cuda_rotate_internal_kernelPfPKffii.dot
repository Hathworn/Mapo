digraph "CFG for '_Z27cuda_rotate_internal_kernelPfPKffii' function" {
	label="CFG for '_Z27cuda_rotate_internal_kernelPfPKffii' function";

	Node0x6052480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%5:\l  %6 = mul nsw i32 %4, %3\l  %7 = sitofp i32 %3 to float\l  %8 = fmul contract float %7, 5.000000e-01\l  %9 = fadd contract float %8, -5.000000e-01\l  %10 = sitofp i32 %4 to float\l  %11 = fmul contract float %10, 5.000000e-01\l  %12 = fadd contract float %11, -5.000000e-01\l  %13 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %14 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %15 = getelementptr i8, i8 addrspace(4)* %14, i64 4\l  %16 = bitcast i8 addrspace(4)* %15 to i16 addrspace(4)*\l  %17 = load i16, i16 addrspace(4)* %16, align 4, !range !4, !invariant.load !5\l  %18 = zext i16 %17 to i32\l  %19 = getelementptr inbounds i8, i8 addrspace(4)* %14, i64 12\l  %20 = bitcast i8 addrspace(4)* %19 to i32 addrspace(4)*\l  %21 = load i32, i32 addrspace(4)* %20, align 4, !tbaa !6\l  %22 = mul i32 %13, %18\l  %23 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %24 = add i32 %22, %23\l  %25 = udiv i32 %21, %18\l  %26 = mul i32 %25, %18\l  %27 = icmp ugt i32 %21, %26\l  %28 = zext i1 %27 to i32\l  %29 = add i32 %25, %28\l  %30 = mul i32 %29, %18\l  %31 = icmp slt i32 %24, %4\l  br i1 %31, label %32, label %226\l|{<s0>T|<s1>F}}"];
	Node0x6052480:s0 -> Node0x6055850;
	Node0x6052480:s1 -> Node0x60558e0;
	Node0x6055850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%32:\l32:                                               \l  %33 = icmp sgt i32 %3, 0\l  %34 = tail call float @llvm.fabs.f32(float %2)\l  %35 = fcmp olt float %34, 1.310720e+05\l  %36 = bitcast float %34 to i32\l  %37 = lshr i32 %36, 23\l  %38 = and i32 %36, 8388607\l  %39 = or i32 %38, 8388608\l  %40 = zext i32 %39 to i64\l  %41 = mul nuw nsw i64 %40, 4266746795\l  %42 = trunc i64 %41 to i32\l  %43 = lshr i64 %41, 32\l  %44 = mul nuw nsw i64 %40, 1011060801\l  %45 = add nuw nsw i64 %43, %44\l  %46 = trunc i64 %45 to i32\l  %47 = lshr i64 %45, 32\l  %48 = mul nuw nsw i64 %40, 3680671129\l  %49 = add nuw nsw i64 %47, %48\l  %50 = trunc i64 %49 to i32\l  %51 = lshr i64 %49, 32\l  %52 = mul nuw nsw i64 %40, 4113882560\l  %53 = add nuw nsw i64 %51, %52\l  %54 = trunc i64 %53 to i32\l  %55 = lshr i64 %53, 32\l  %56 = mul nuw nsw i64 %40, 4230436817\l  %57 = add nuw nsw i64 %55, %56\l  %58 = trunc i64 %57 to i32\l  %59 = lshr i64 %57, 32\l  %60 = mul nuw nsw i64 %40, 1313084713\l  %61 = add nuw nsw i64 %59, %60\l  %62 = trunc i64 %61 to i32\l  %63 = lshr i64 %61, 32\l  %64 = mul nuw nsw i64 %40, 2734261102\l  %65 = add nuw nsw i64 %63, %64\l  %66 = trunc i64 %65 to i32\l  %67 = lshr i64 %65, 32\l  %68 = trunc i64 %67 to i32\l  %69 = add nsw i32 %37, -120\l  %70 = icmp ugt i32 %69, 63\l  %71 = select i1 %70, i32 %62, i32 %68\l  %72 = select i1 %70, i32 %58, i32 %66\l  %73 = select i1 %70, i32 %54, i32 %62\l  %74 = select i1 %70, i32 %50, i32 %58\l  %75 = select i1 %70, i32 %46, i32 %54\l  %76 = select i1 %70, i32 %42, i32 %50\l  %77 = select i1 %70, i32 -64, i32 0\l  %78 = add nsw i32 %77, %69\l  %79 = icmp ugt i32 %78, 31\l  %80 = select i1 %79, i32 %72, i32 %71\l  %81 = select i1 %79, i32 %73, i32 %72\l  %82 = select i1 %79, i32 %74, i32 %73\l  %83 = select i1 %79, i32 %75, i32 %74\l  %84 = select i1 %79, i32 %76, i32 %75\l  %85 = select i1 %79, i32 -32, i32 0\l  %86 = add nsw i32 %85, %78\l  %87 = icmp ugt i32 %86, 31\l  %88 = select i1 %87, i32 %81, i32 %80\l  %89 = select i1 %87, i32 %82, i32 %81\l  %90 = select i1 %87, i32 %83, i32 %82\l  %91 = select i1 %87, i32 %84, i32 %83\l  %92 = select i1 %87, i32 -32, i32 0\l  %93 = add nsw i32 %92, %86\l  %94 = icmp eq i32 %93, 0\l  %95 = sub nsw i32 32, %93\l  %96 = tail call i32 @llvm.fshr.i32(i32 %88, i32 %89, i32 %95)\l  %97 = tail call i32 @llvm.fshr.i32(i32 %89, i32 %90, i32 %95)\l  %98 = tail call i32 @llvm.fshr.i32(i32 %90, i32 %91, i32 %95)\l  %99 = select i1 %94, i32 %88, i32 %96\l  %100 = select i1 %94, i32 %89, i32 %97\l  %101 = select i1 %94, i32 %90, i32 %98\l  %102 = lshr i32 %99, 29\l  %103 = tail call i32 @llvm.fshl.i32(i32 %99, i32 %100, i32 2)\l  %104 = tail call i32 @llvm.fshl.i32(i32 %100, i32 %101, i32 2)\l  %105 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %91, i32 2)\l  %106 = and i32 %102, 1\l  %107 = sub nsw i32 0, %106\l  %108 = shl i32 %102, 31\l  %109 = xor i32 %103, %107\l  %110 = xor i32 %104, %107\l  %111 = xor i32 %105, %107\l  %112 = tail call i32 @llvm.ctlz.i32(i32 %109, i1 false), !range !16\l  %113 = sub nsw i32 31, %112\l  %114 = tail call i32 @llvm.fshr.i32(i32 %109, i32 %110, i32 %113)\l  %115 = tail call i32 @llvm.fshr.i32(i32 %110, i32 %111, i32 %113)\l  %116 = shl nuw nsw i32 %112, 23\l  %117 = sub nuw nsw i32 1056964608, %116\l  %118 = lshr i32 %114, 9\l  %119 = or i32 %118, %117\l  %120 = or i32 %119, %108\l  %121 = bitcast i32 %120 to float\l  %122 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %115, i32 23)\l  %123 = tail call i32 @llvm.ctlz.i32(i32 %122, i1 false), !range !16\l  %124 = fmul float %121, 0x3FF921FB40000000\l  %125 = add nuw nsw i32 %123, %112\l  %126 = shl nuw nsw i32 %125, 23\l  %127 = sub nuw nsw i32 855638016, %126\l  %128 = sub nsw i32 31, %123\l  %129 = tail call i32 @llvm.fshr.i32(i32 %122, i32 %115, i32 %128)\l  %130 = lshr i32 %129, 9\l  %131 = or i32 %127, %130\l  %132 = or i32 %131, %108\l  %133 = bitcast i32 %132 to float\l  %134 = fneg float %124\l  %135 = tail call float @llvm.fma.f32(float %121, float 0x3FF921FB40000000,\l... float %134)\l  %136 = tail call float @llvm.fma.f32(float %121, float 0x3E74442D00000000,\l... float %135)\l  %137 = tail call float @llvm.fma.f32(float %133, float 0x3FF921FB40000000,\l... float %136)\l  %138 = fadd float %124, %137\l  %139 = lshr i32 %99, 30\l  %140 = add nuw nsw i32 %106, %139\l  %141 = fmul float %34, 0x3FE45F3060000000\l  %142 = tail call float @llvm.rint.f32(float %141)\l  %143 = tail call float @llvm.fma.f32(float %142, float 0xBFF921FB40000000,\l... float %34)\l  %144 = tail call float @llvm.fma.f32(float %142, float 0xBE74442D00000000,\l... float %143)\l  %145 = tail call float @llvm.fma.f32(float %142, float 0xBCF8469880000000,\l... float %144)\l  %146 = fptosi float %142 to i32\l  %147 = tail call i1 @llvm.amdgcn.class.f32(float %34, i32 504)\l  %148 = bitcast float %2 to i32\l  %149 = fmul float %138, %138\l  %150 = tail call float @llvm.fmuladd.f32(float %149, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %151 = tail call float @llvm.fmuladd.f32(float %149, float %150, float\l... 0xBFC55553A0000000)\l  %152 = fmul float %149, %151\l  %153 = tail call float @llvm.fmuladd.f32(float %138, float %152, float %138)\l  %154 = tail call float @llvm.fmuladd.f32(float %149, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %155 = tail call float @llvm.fmuladd.f32(float %149, float %154, float\l... 0x3FA5557EE0000000)\l  %156 = tail call float @llvm.fmuladd.f32(float %149, float %155, float\l... 0xBFE0000080000000)\l  %157 = tail call float @llvm.fmuladd.f32(float %149, float %156, float\l... 1.000000e+00)\l  %158 = and i32 %140, 1\l  %159 = icmp eq i32 %158, 0\l  %160 = select i1 %159, float %153, float %157\l  %161 = bitcast float %160 to i32\l  %162 = shl i32 %140, 30\l  %163 = and i32 %162, -2147483648\l  %164 = xor i32 %36, %148\l  %165 = xor i32 %164, %163\l  %166 = xor i32 %165, %161\l  %167 = bitcast i32 %166 to float\l  %168 = select i1 %147, float %167, float 0x7FF8000000000000\l  %169 = fmul float %145, %145\l  %170 = tail call float @llvm.fmuladd.f32(float %169, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %171 = tail call float @llvm.fmuladd.f32(float %169, float %170, float\l... 0xBFC55553A0000000)\l  %172 = fmul float %169, %171\l  %173 = tail call float @llvm.fmuladd.f32(float %145, float %172, float %145)\l  %174 = tail call float @llvm.fmuladd.f32(float %169, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %175 = tail call float @llvm.fmuladd.f32(float %169, float %174, float\l... 0x3FA5557EE0000000)\l  %176 = tail call float @llvm.fmuladd.f32(float %169, float %175, float\l... 0xBFE0000080000000)\l  %177 = tail call float @llvm.fmuladd.f32(float %169, float %176, float\l... 1.000000e+00)\l  %178 = and i32 %146, 1\l  %179 = icmp eq i32 %178, 0\l  %180 = select i1 %179, float %173, float %177\l  %181 = bitcast float %180 to i32\l  %182 = shl i32 %146, 30\l  %183 = and i32 %182, -2147483648\l  %184 = xor i32 %183, %181\l  %185 = xor i32 %184, %36\l  %186 = xor i32 %185, %148\l  %187 = bitcast i32 %186 to float\l  %188 = select i1 %147, float %187, float 0x7FF8000000000000\l  %189 = select i1 %35, float %145, float %138\l  %190 = select i1 %35, i32 %146, i32 %140\l  %191 = fmul float %189, %189\l  %192 = tail call float @llvm.fmuladd.f32(float %191, float\l... 0xBF29833040000000, float 0x3F81103880000000)\l  %193 = tail call float @llvm.fmuladd.f32(float %191, float %192, float\l... 0xBFC55553A0000000)\l  %194 = fmul float %191, %193\l  %195 = tail call float @llvm.fmuladd.f32(float %189, float %194, float %189)\l  %196 = tail call float @llvm.fmuladd.f32(float %191, float\l... 0x3EFAEA6680000000, float 0xBF56C9E760000000)\l  %197 = tail call float @llvm.fmuladd.f32(float %191, float %196, float\l... 0x3FA5557EE0000000)\l  %198 = tail call float @llvm.fmuladd.f32(float %191, float %197, float\l... 0xBFE0000080000000)\l  %199 = tail call float @llvm.fmuladd.f32(float %191, float %198, float\l... 1.000000e+00)\l  %200 = fneg float %195\l  %201 = and i32 %190, 1\l  %202 = icmp eq i32 %201, 0\l  %203 = select i1 %202, float %199, float %200\l  %204 = bitcast float %203 to i32\l  %205 = shl i32 %190, 30\l  %206 = and i32 %205, -2147483648\l  %207 = xor i32 %206, %204\l  %208 = bitcast i32 %207 to float\l  %209 = select i1 %147, float %208, float 0x7FF8000000000000\l  %210 = select i1 %202, float %195, float %199\l  %211 = bitcast float %210 to i32\l  %212 = xor i32 %206, %36\l  %213 = xor i32 %212, %211\l  %214 = xor i32 %213, %148\l  %215 = bitcast i32 %214 to float\l  %216 = select i1 %147, float %215, float 0x7FF8000000000000\l  %217 = select i1 %35, float %188, float %168\l  br label %218\l}"];
	Node0x6055850 -> Node0x605fe30;
	Node0x605fe30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%218:\l218:                                              \l  %219 = phi i32 [ %24, %32 ], [ %228, %227 ]\l  br i1 %33, label %220, label %227\l|{<s0>T|<s1>F}}"];
	Node0x605fe30:s0 -> Node0x6060030;
	Node0x605fe30:s1 -> Node0x605fef0;
	Node0x6060030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%220:\l220:                                              \l  %221 = sitofp i32 %219 to float\l  %222 = fsub contract float %221, %12\l  %223 = mul nsw i32 %219, %3\l  %224 = fmul contract float %222, %216\l  %225 = fmul contract float %222, %209\l  br label %230\l}"];
	Node0x6060030 -> Node0x6060420;
	Node0x60558e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%226:\l226:                                              \l  ret void\l}"];
	Node0x605fef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%227:\l227:                                              \l  %228 = add nsw i32 %219, %30\l  %229 = icmp slt i32 %228, %4\l  br i1 %229, label %218, label %226, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x605fef0:s0 -> Node0x605fe30;
	Node0x605fef0:s1 -> Node0x60558e0;
	Node0x6060420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%230:\l230:                                              \l  %231 = phi i32 [ 0, %220 ], [ %316, %303 ]\l  %232 = sitofp i32 %231 to float\l  %233 = fsub contract float %232, %9\l  %234 = fmul contract float %233, %209\l  %235 = fsub contract float %234, %224\l  %236 = fmul contract float %233, %217\l  %237 = fadd contract float %236, %225\l  %238 = fadd contract float %9, %235\l  %239 = fadd contract float %12, %237\l  %240 = add nsw i32 %231, %223\l  %241 = tail call float @llvm.floor.f32(float %238)\l  %242 = fptosi float %241 to i32\l  %243 = tail call float @llvm.floor.f32(float %239)\l  %244 = fptosi float %243 to i32\l  %245 = add nsw i32 %242, 1\l  %246 = add nsw i32 %244, 1\l  %247 = mul nsw i32 %244, %3\l  %248 = add nsw i32 %247, %242\l  %249 = add nsw i32 %247, %245\l  %250 = mul nsw i32 %246, %3\l  %251 = add nsw i32 %250, %242\l  %252 = add nsw i32 %250, %245\l  %253 = icmp sgt i32 %248, -1\l  %254 = icmp slt i32 %248, %6\l  %255 = select i1 %253, i1 %254, i1 false\l  br i1 %255, label %256, label %264\l|{<s0>T|<s1>F}}"];
	Node0x6060420:s0 -> Node0x6061820;
	Node0x6060420:s1 -> Node0x60618b0;
	Node0x6061820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%256:\l256:                                              \l  %257 = sitofp i32 %245 to float\l  %258 = fsub contract float %257, %238\l  %259 = zext i32 %248 to i64\l  %260 = getelementptr inbounds float, float addrspace(1)* %1, i64 %259\l  %261 = load float, float addrspace(1)* %260, align 4, !tbaa !19\l  %262 = fmul contract float %258, %261\l  %263 = fadd contract float %262, 0.000000e+00\l  br label %264\l}"];
	Node0x6061820 -> Node0x60618b0;
	Node0x60618b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%264:\l264:                                              \l  %265 = phi float [ %263, %256 ], [ 0.000000e+00, %230 ]\l  %266 = icmp sgt i32 %249, -1\l  %267 = icmp slt i32 %249, %6\l  %268 = select i1 %266, i1 %267, i1 false\l  br i1 %268, label %269, label %277\l|{<s0>T|<s1>F}}"];
	Node0x60618b0:s0 -> Node0x6062a00;
	Node0x60618b0:s1 -> Node0x6062a50;
	Node0x6062a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%269:\l269:                                              \l  %270 = sitofp i32 %242 to float\l  %271 = fsub contract float %238, %270\l  %272 = zext i32 %249 to i64\l  %273 = getelementptr inbounds float, float addrspace(1)* %1, i64 %272\l  %274 = load float, float addrspace(1)* %273, align 4, !tbaa !19\l  %275 = fmul contract float %271, %274\l  %276 = fadd contract float %265, %275\l  br label %277\l}"];
	Node0x6062a00 -> Node0x6062a50;
	Node0x6062a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%277:\l277:                                              \l  %278 = phi float [ %276, %269 ], [ %265, %264 ]\l  %279 = icmp sgt i32 %251, -1\l  %280 = icmp slt i32 %251, %6\l  %281 = select i1 %279, i1 %280, i1 false\l  br i1 %281, label %282, label %290\l|{<s0>T|<s1>F}}"];
	Node0x6062a50:s0 -> Node0x6063830;
	Node0x6062a50:s1 -> Node0x6063880;
	Node0x6063830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%282:\l282:                                              \l  %283 = sitofp i32 %245 to float\l  %284 = fsub contract float %283, %238\l  %285 = zext i32 %251 to i64\l  %286 = getelementptr inbounds float, float addrspace(1)* %1, i64 %285\l  %287 = load float, float addrspace(1)* %286, align 4, !tbaa !19\l  %288 = fmul contract float %284, %287\l  %289 = fadd contract float %288, 0.000000e+00\l  br label %290\l}"];
	Node0x6063830 -> Node0x6063880;
	Node0x6063880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%290:\l290:                                              \l  %291 = phi float [ %289, %282 ], [ 0.000000e+00, %277 ]\l  %292 = icmp sgt i32 %252, -1\l  %293 = icmp slt i32 %252, %6\l  %294 = select i1 %292, i1 %293, i1 false\l  br i1 %294, label %295, label %303\l|{<s0>T|<s1>F}}"];
	Node0x6063880:s0 -> Node0x6064010;
	Node0x6063880:s1 -> Node0x6060780;
	Node0x6064010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%295:\l295:                                              \l  %296 = sitofp i32 %242 to float\l  %297 = fsub contract float %238, %296\l  %298 = zext i32 %252 to i64\l  %299 = getelementptr inbounds float, float addrspace(1)* %1, i64 %298\l  %300 = load float, float addrspace(1)* %299, align 4, !tbaa !19\l  %301 = fmul contract float %297, %300\l  %302 = fadd contract float %291, %301\l  br label %303\l}"];
	Node0x6064010 -> Node0x6060780;
	Node0x6060780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%303:\l303:                                              \l  %304 = phi float [ %302, %295 ], [ %291, %290 ]\l  %305 = sitofp i32 %246 to float\l  %306 = fsub contract float %305, %239\l  %307 = fmul contract float %306, %278\l  %308 = sitofp i32 %244 to float\l  %309 = fsub contract float %239, %308\l  %310 = fmul contract float %309, %304\l  %311 = fadd contract float %307, %310\l  %312 = sext i32 %240 to i64\l  %313 = getelementptr inbounds float, float addrspace(1)* %0, i64 %312\l  %314 = load float, float addrspace(1)* %313, align 4, !tbaa !19\l  %315 = fadd contract float %314, %311\l  store float %315, float addrspace(1)* %313, align 4, !tbaa !19\l  %316 = add nuw nsw i32 %231, 1\l  %317 = icmp eq i32 %316, %3\l  br i1 %317, label %227, label %230, !llvm.loop !23\l|{<s0>T|<s1>F}}"];
	Node0x6060780:s0 -> Node0x605fef0;
	Node0x6060780:s1 -> Node0x6060420;
}
