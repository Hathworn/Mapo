digraph "CFG for '_Z11test_kernelv' function" {
	label="CFG for '_Z11test_kernelv' function";

	Node0x4b08070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%0:\l  %1 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr()\l  %2 = getelementptr inbounds i8, i8 addrspace(4)* %1, i64 24\l  %3 = bitcast i8 addrspace(4)* %2 to i64 addrspace(4)*\l  %4 = load i64, i64 addrspace(4)* %3, align 8, !tbaa !4\l  %5 = inttoptr i64 %4 to i8 addrspace(1)*\l  %6 = addrspacecast i8 addrspace(1)* %5 to i8*\l  %7 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %6,\l... i64 noundef 33, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  %8 = extractelement \<2 x i64\> %7, i64 0\l  br i1 icmp eq (i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds\l... ([15 x i8], [15 x i8] addrspace(4)* @.str, i64 0, i64 0) to i8*), i8* null),\l... label %9, label %13\l|{<s0>T|<s1>F}}"];
	Node0x4b08070:s0 -> Node0x4b09610;
	Node0x4b08070:s1 -> Node0x4b0a9b0;
	Node0x4b09610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%9:\l9:                                                \l  %10 = and i64 %8, -227\l  %11 = or i64 %10, 34\l  %12 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %6,\l... i64 noundef %11, i64 noundef 0, i64 noundef 0, i64 noundef 0, i64 noundef 0,\l... i64 noundef 0, i64 noundef 0, i64 noundef 0) #10\l  br label %453\l}"];
	Node0x4b09610 -> Node0x4b0ac60;
	Node0x4b0a9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%13:\l13:                                               \l  %14 = and i64 %8, -3\l  %15 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %14, i64 0\l  br label %16\l}"];
	Node0x4b0a9b0 -> Node0x4b0b770;
	Node0x4b0b770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%16:\l16:                                               \l  %17 = phi i64 [ select (i1 icmp eq (i8* addrspacecast (i8 addrspace(4)*\l... getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)* @.str, i64 0, i64\l... 0) to i8*), i8* null), i64 0, i64 add (i64 ptrtoint (i8* addrspacecast (i8\l... addrspace(4)* getelementptr inbounds ([15 x i8], [15 x i8] addrspace(4)*\l... @.str, i64 0, i64 14) to i8*) to i64), i64 add (i64 sub (i64 0, i64 ptrtoint\l... ([15 x i8]* addrspacecast ([15 x i8] addrspace(4)* @.str to [15 x i8]*) to\l... i64)), i64 1))), %13 ], [ %450, %442 ]\l  %18 = phi i8 addrspace(4)* [ getelementptr inbounds ([15 x i8], [15 x i8]\l... addrspace(4)* @.str, i64 0, i64 0), %13 ], [ %451, %442 ]\l  %19 = phi \<2 x i64\> [ %15, %13 ], [ %449, %442 ]\l  %20 = icmp ugt i64 %17, 56\l  %21 = extractelement \<2 x i64\> %19, i64 0\l  %22 = or i64 %21, 2\l  %23 = insertelement \<2 x i64\> poison, i64 %22, i64 0\l  %24 = select i1 %20, \<2 x i64\> %19, \<2 x i64\> %23\l  %25 = tail call i64 @llvm.umin.i64(i64 %17, i64 56)\l  %26 = trunc i64 %25 to i32\l  %27 = extractelement \<2 x i64\> %24, i64 0\l  %28 = icmp ugt i32 %26, 7\l  br i1 %28, label %31, label %29\l|{<s0>T|<s1>F}}"];
	Node0x4b0b770:s0 -> Node0x4b0c760;
	Node0x4b0b770:s1 -> Node0x4b0c7f0;
	Node0x4b0c7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%29:\l29:                                               \l  %30 = icmp eq i32 %26, 0\l  br i1 %30, label %84, label %71\l|{<s0>T|<s1>F}}"];
	Node0x4b0c7f0:s0 -> Node0x4b0c9f0;
	Node0x4b0c7f0:s1 -> Node0x4b0ca40;
	Node0x4b0c760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%31:\l31:                                               \l  %32 = load i8, i8 addrspace(4)* %18, align 1, !tbaa !8\l  %33 = zext i8 %32 to i64\l  %34 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 1\l  %35 = load i8, i8 addrspace(4)* %34, align 1, !tbaa !8\l  %36 = zext i8 %35 to i64\l  %37 = shl nuw nsw i64 %36, 8\l  %38 = or i64 %37, %33\l  %39 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 2\l  %40 = load i8, i8 addrspace(4)* %39, align 1, !tbaa !8\l  %41 = zext i8 %40 to i64\l  %42 = shl nuw nsw i64 %41, 16\l  %43 = or i64 %38, %42\l  %44 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 3\l  %45 = load i8, i8 addrspace(4)* %44, align 1, !tbaa !8\l  %46 = zext i8 %45 to i64\l  %47 = shl nuw nsw i64 %46, 24\l  %48 = or i64 %43, %47\l  %49 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 4\l  %50 = load i8, i8 addrspace(4)* %49, align 1, !tbaa !8\l  %51 = zext i8 %50 to i64\l  %52 = shl nuw nsw i64 %51, 32\l  %53 = or i64 %48, %52\l  %54 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 5\l  %55 = load i8, i8 addrspace(4)* %54, align 1, !tbaa !8\l  %56 = zext i8 %55 to i64\l  %57 = shl nuw nsw i64 %56, 40\l  %58 = or i64 %53, %57\l  %59 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 6\l  %60 = load i8, i8 addrspace(4)* %59, align 1, !tbaa !8\l  %61 = zext i8 %60 to i64\l  %62 = shl nuw nsw i64 %61, 48\l  %63 = or i64 %58, %62\l  %64 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 7\l  %65 = load i8, i8 addrspace(4)* %64, align 1, !tbaa !8\l  %66 = zext i8 %65 to i64\l  %67 = shl nuw i64 %66, 56\l  %68 = or i64 %63, %67\l  %69 = add nsw i32 %26, -8\l  %70 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 8\l  br label %84\l}"];
	Node0x4b0c760 -> Node0x4b0c9f0;
	Node0x4b0ca40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = phi i32 [ %82, %71 ], [ 0, %29 ]\l  %73 = phi i64 [ %81, %71 ], [ 0, %29 ]\l  %74 = zext i32 %72 to i64\l  %75 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 %74\l  %76 = load i8, i8 addrspace(4)* %75, align 1, !tbaa !8\l  %77 = zext i8 %76 to i64\l  %78 = shl i32 %72, 3\l  %79 = zext i32 %78 to i64\l  %80 = shl nuw i64 %77, %79\l  %81 = or i64 %80, %73\l  %82 = add nuw nsw i32 %72, 1\l  %83 = icmp eq i32 %82, %26\l  br i1 %83, label %84, label %71, !llvm.loop !9\l|{<s0>T|<s1>F}}"];
	Node0x4b0ca40:s0 -> Node0x4b0c9f0;
	Node0x4b0ca40:s1 -> Node0x4b0ca40;
	Node0x4b0c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%84:\l84:                                               \l  %85 = phi i8 addrspace(4)* [ %70, %31 ], [ %18, %29 ], [ %18, %71 ]\l  %86 = phi i32 [ %69, %31 ], [ 0, %29 ], [ 0, %71 ]\l  %87 = phi i64 [ %68, %31 ], [ 0, %29 ], [ %81, %71 ]\l  %88 = icmp ugt i32 %86, 7\l  br i1 %88, label %91, label %89\l|{<s0>T|<s1>F}}"];
	Node0x4b0c9f0:s0 -> Node0x4b0f840;
	Node0x4b0c9f0:s1 -> Node0x4b0f890;
	Node0x4b0f890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%89:\l89:                                               \l  %90 = icmp eq i32 %86, 0\l  br i1 %90, label %144, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4b0f890:s0 -> Node0x4b0fa60;
	Node0x4b0f890:s1 -> Node0x4b0fab0;
	Node0x4b0f840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%91:\l91:                                               \l  %92 = load i8, i8 addrspace(4)* %85, align 1, !tbaa !8\l  %93 = zext i8 %92 to i64\l  %94 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 1\l  %95 = load i8, i8 addrspace(4)* %94, align 1, !tbaa !8\l  %96 = zext i8 %95 to i64\l  %97 = shl nuw nsw i64 %96, 8\l  %98 = or i64 %97, %93\l  %99 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 2\l  %100 = load i8, i8 addrspace(4)* %99, align 1, !tbaa !8\l  %101 = zext i8 %100 to i64\l  %102 = shl nuw nsw i64 %101, 16\l  %103 = or i64 %98, %102\l  %104 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 3\l  %105 = load i8, i8 addrspace(4)* %104, align 1, !tbaa !8\l  %106 = zext i8 %105 to i64\l  %107 = shl nuw nsw i64 %106, 24\l  %108 = or i64 %103, %107\l  %109 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 4\l  %110 = load i8, i8 addrspace(4)* %109, align 1, !tbaa !8\l  %111 = zext i8 %110 to i64\l  %112 = shl nuw nsw i64 %111, 32\l  %113 = or i64 %108, %112\l  %114 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 5\l  %115 = load i8, i8 addrspace(4)* %114, align 1, !tbaa !8\l  %116 = zext i8 %115 to i64\l  %117 = shl nuw nsw i64 %116, 40\l  %118 = or i64 %113, %117\l  %119 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 6\l  %120 = load i8, i8 addrspace(4)* %119, align 1, !tbaa !8\l  %121 = zext i8 %120 to i64\l  %122 = shl nuw nsw i64 %121, 48\l  %123 = or i64 %118, %122\l  %124 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 7\l  %125 = load i8, i8 addrspace(4)* %124, align 1, !tbaa !8\l  %126 = zext i8 %125 to i64\l  %127 = shl nuw i64 %126, 56\l  %128 = or i64 %123, %127\l  %129 = add nsw i32 %86, -8\l  %130 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 8\l  br label %144\l}"];
	Node0x4b0f840 -> Node0x4b0fa60;
	Node0x4b0fab0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi i32 [ %142, %131 ], [ 0, %89 ]\l  %133 = phi i64 [ %141, %131 ], [ 0, %89 ]\l  %134 = zext i32 %132 to i64\l  %135 = getelementptr inbounds i8, i8 addrspace(4)* %85, i64 %134\l  %136 = load i8, i8 addrspace(4)* %135, align 1, !tbaa !8\l  %137 = zext i8 %136 to i64\l  %138 = shl i32 %132, 3\l  %139 = zext i32 %138 to i64\l  %140 = shl nuw i64 %137, %139\l  %141 = or i64 %140, %133\l  %142 = add nuw nsw i32 %132, 1\l  %143 = icmp eq i32 %142, %86\l  br i1 %143, label %144, label %131\l|{<s0>T|<s1>F}}"];
	Node0x4b0fab0:s0 -> Node0x4b0fa60;
	Node0x4b0fab0:s1 -> Node0x4b0fab0;
	Node0x4b0fa60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%144:\l144:                                              \l  %145 = phi i8 addrspace(4)* [ %130, %91 ], [ %85, %89 ], [ %85, %131 ]\l  %146 = phi i32 [ %129, %91 ], [ 0, %89 ], [ 0, %131 ]\l  %147 = phi i64 [ %128, %91 ], [ 0, %89 ], [ %141, %131 ]\l  %148 = icmp ugt i32 %146, 7\l  br i1 %148, label %151, label %149\l|{<s0>T|<s1>F}}"];
	Node0x4b0fa60:s0 -> Node0x4b11f70;
	Node0x4b0fa60:s1 -> Node0x4b11fc0;
	Node0x4b11fc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%149:\l149:                                              \l  %150 = icmp eq i32 %146, 0\l  br i1 %150, label %204, label %191\l|{<s0>T|<s1>F}}"];
	Node0x4b11fc0:s0 -> Node0x4b12150;
	Node0x4b11fc0:s1 -> Node0x4b121a0;
	Node0x4b11f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%151:\l151:                                              \l  %152 = load i8, i8 addrspace(4)* %145, align 1, !tbaa !8\l  %153 = zext i8 %152 to i64\l  %154 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 1\l  %155 = load i8, i8 addrspace(4)* %154, align 1, !tbaa !8\l  %156 = zext i8 %155 to i64\l  %157 = shl nuw nsw i64 %156, 8\l  %158 = or i64 %157, %153\l  %159 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 2\l  %160 = load i8, i8 addrspace(4)* %159, align 1, !tbaa !8\l  %161 = zext i8 %160 to i64\l  %162 = shl nuw nsw i64 %161, 16\l  %163 = or i64 %158, %162\l  %164 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 3\l  %165 = load i8, i8 addrspace(4)* %164, align 1, !tbaa !8\l  %166 = zext i8 %165 to i64\l  %167 = shl nuw nsw i64 %166, 24\l  %168 = or i64 %163, %167\l  %169 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 4\l  %170 = load i8, i8 addrspace(4)* %169, align 1, !tbaa !8\l  %171 = zext i8 %170 to i64\l  %172 = shl nuw nsw i64 %171, 32\l  %173 = or i64 %168, %172\l  %174 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 5\l  %175 = load i8, i8 addrspace(4)* %174, align 1, !tbaa !8\l  %176 = zext i8 %175 to i64\l  %177 = shl nuw nsw i64 %176, 40\l  %178 = or i64 %173, %177\l  %179 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 6\l  %180 = load i8, i8 addrspace(4)* %179, align 1, !tbaa !8\l  %181 = zext i8 %180 to i64\l  %182 = shl nuw nsw i64 %181, 48\l  %183 = or i64 %178, %182\l  %184 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 7\l  %185 = load i8, i8 addrspace(4)* %184, align 1, !tbaa !8\l  %186 = zext i8 %185 to i64\l  %187 = shl nuw i64 %186, 56\l  %188 = or i64 %183, %187\l  %189 = add nsw i32 %146, -8\l  %190 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 8\l  br label %204\l}"];
	Node0x4b11f70 -> Node0x4b12150;
	Node0x4b121a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%191:\l191:                                              \l  %192 = phi i32 [ %202, %191 ], [ 0, %149 ]\l  %193 = phi i64 [ %201, %191 ], [ 0, %149 ]\l  %194 = zext i32 %192 to i64\l  %195 = getelementptr inbounds i8, i8 addrspace(4)* %145, i64 %194\l  %196 = load i8, i8 addrspace(4)* %195, align 1, !tbaa !8\l  %197 = zext i8 %196 to i64\l  %198 = shl i32 %192, 3\l  %199 = zext i32 %198 to i64\l  %200 = shl nuw i64 %197, %199\l  %201 = or i64 %200, %193\l  %202 = add nuw nsw i32 %192, 1\l  %203 = icmp eq i32 %202, %146\l  br i1 %203, label %204, label %191\l|{<s0>T|<s1>F}}"];
	Node0x4b121a0:s0 -> Node0x4b12150;
	Node0x4b121a0:s1 -> Node0x4b121a0;
	Node0x4b12150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%204:\l204:                                              \l  %205 = phi i8 addrspace(4)* [ %190, %151 ], [ %145, %149 ], [ %145, %191 ]\l  %206 = phi i32 [ %189, %151 ], [ 0, %149 ], [ 0, %191 ]\l  %207 = phi i64 [ %188, %151 ], [ 0, %149 ], [ %201, %191 ]\l  %208 = icmp ugt i32 %206, 7\l  br i1 %208, label %211, label %209\l|{<s0>T|<s1>F}}"];
	Node0x4b12150:s0 -> Node0x4b141c0;
	Node0x4b12150:s1 -> Node0x4b14210;
	Node0x4b14210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%209:\l209:                                              \l  %210 = icmp eq i32 %206, 0\l  br i1 %210, label %264, label %251\l|{<s0>T|<s1>F}}"];
	Node0x4b14210:s0 -> Node0x4b143a0;
	Node0x4b14210:s1 -> Node0x4b143f0;
	Node0x4b141c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%211:\l211:                                              \l  %212 = load i8, i8 addrspace(4)* %205, align 1, !tbaa !8\l  %213 = zext i8 %212 to i64\l  %214 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 1\l  %215 = load i8, i8 addrspace(4)* %214, align 1, !tbaa !8\l  %216 = zext i8 %215 to i64\l  %217 = shl nuw nsw i64 %216, 8\l  %218 = or i64 %217, %213\l  %219 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 2\l  %220 = load i8, i8 addrspace(4)* %219, align 1, !tbaa !8\l  %221 = zext i8 %220 to i64\l  %222 = shl nuw nsw i64 %221, 16\l  %223 = or i64 %218, %222\l  %224 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 3\l  %225 = load i8, i8 addrspace(4)* %224, align 1, !tbaa !8\l  %226 = zext i8 %225 to i64\l  %227 = shl nuw nsw i64 %226, 24\l  %228 = or i64 %223, %227\l  %229 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 4\l  %230 = load i8, i8 addrspace(4)* %229, align 1, !tbaa !8\l  %231 = zext i8 %230 to i64\l  %232 = shl nuw nsw i64 %231, 32\l  %233 = or i64 %228, %232\l  %234 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 5\l  %235 = load i8, i8 addrspace(4)* %234, align 1, !tbaa !8\l  %236 = zext i8 %235 to i64\l  %237 = shl nuw nsw i64 %236, 40\l  %238 = or i64 %233, %237\l  %239 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 6\l  %240 = load i8, i8 addrspace(4)* %239, align 1, !tbaa !8\l  %241 = zext i8 %240 to i64\l  %242 = shl nuw nsw i64 %241, 48\l  %243 = or i64 %238, %242\l  %244 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 7\l  %245 = load i8, i8 addrspace(4)* %244, align 1, !tbaa !8\l  %246 = zext i8 %245 to i64\l  %247 = shl nuw i64 %246, 56\l  %248 = or i64 %243, %247\l  %249 = add nsw i32 %206, -8\l  %250 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 8\l  br label %264\l}"];
	Node0x4b141c0 -> Node0x4b143a0;
	Node0x4b143f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%251:\l251:                                              \l  %252 = phi i32 [ %262, %251 ], [ 0, %209 ]\l  %253 = phi i64 [ %261, %251 ], [ 0, %209 ]\l  %254 = zext i32 %252 to i64\l  %255 = getelementptr inbounds i8, i8 addrspace(4)* %205, i64 %254\l  %256 = load i8, i8 addrspace(4)* %255, align 1, !tbaa !8\l  %257 = zext i8 %256 to i64\l  %258 = shl i32 %252, 3\l  %259 = zext i32 %258 to i64\l  %260 = shl nuw i64 %257, %259\l  %261 = or i64 %260, %253\l  %262 = add nuw nsw i32 %252, 1\l  %263 = icmp eq i32 %262, %206\l  br i1 %263, label %264, label %251\l|{<s0>T|<s1>F}}"];
	Node0x4b143f0:s0 -> Node0x4b143a0;
	Node0x4b143f0:s1 -> Node0x4b143f0;
	Node0x4b143a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%264:\l264:                                              \l  %265 = phi i8 addrspace(4)* [ %250, %211 ], [ %205, %209 ], [ %205, %251 ]\l  %266 = phi i32 [ %249, %211 ], [ 0, %209 ], [ 0, %251 ]\l  %267 = phi i64 [ %248, %211 ], [ 0, %209 ], [ %261, %251 ]\l  %268 = icmp ugt i32 %266, 7\l  br i1 %268, label %271, label %269\l|{<s0>T|<s1>F}}"];
	Node0x4b143a0:s0 -> Node0x4b11690;
	Node0x4b143a0:s1 -> Node0x4b116e0;
	Node0x4b116e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%269:\l269:                                              \l  %270 = icmp eq i32 %266, 0\l  br i1 %270, label %324, label %311\l|{<s0>T|<s1>F}}"];
	Node0x4b116e0:s0 -> Node0x4b16e00;
	Node0x4b116e0:s1 -> Node0x4b16e50;
	Node0x4b11690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%271:\l271:                                              \l  %272 = load i8, i8 addrspace(4)* %265, align 1, !tbaa !8\l  %273 = zext i8 %272 to i64\l  %274 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 1\l  %275 = load i8, i8 addrspace(4)* %274, align 1, !tbaa !8\l  %276 = zext i8 %275 to i64\l  %277 = shl nuw nsw i64 %276, 8\l  %278 = or i64 %277, %273\l  %279 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 2\l  %280 = load i8, i8 addrspace(4)* %279, align 1, !tbaa !8\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw nsw i64 %281, 16\l  %283 = or i64 %278, %282\l  %284 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 3\l  %285 = load i8, i8 addrspace(4)* %284, align 1, !tbaa !8\l  %286 = zext i8 %285 to i64\l  %287 = shl nuw nsw i64 %286, 24\l  %288 = or i64 %283, %287\l  %289 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 4\l  %290 = load i8, i8 addrspace(4)* %289, align 1, !tbaa !8\l  %291 = zext i8 %290 to i64\l  %292 = shl nuw nsw i64 %291, 32\l  %293 = or i64 %288, %292\l  %294 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 5\l  %295 = load i8, i8 addrspace(4)* %294, align 1, !tbaa !8\l  %296 = zext i8 %295 to i64\l  %297 = shl nuw nsw i64 %296, 40\l  %298 = or i64 %293, %297\l  %299 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 6\l  %300 = load i8, i8 addrspace(4)* %299, align 1, !tbaa !8\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 48\l  %303 = or i64 %298, %302\l  %304 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 7\l  %305 = load i8, i8 addrspace(4)* %304, align 1, !tbaa !8\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw i64 %306, 56\l  %308 = or i64 %303, %307\l  %309 = add nsw i32 %266, -8\l  %310 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 8\l  br label %324\l}"];
	Node0x4b11690 -> Node0x4b16e00;
	Node0x4b16e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%311:\l311:                                              \l  %312 = phi i32 [ %322, %311 ], [ 0, %269 ]\l  %313 = phi i64 [ %321, %311 ], [ 0, %269 ]\l  %314 = zext i32 %312 to i64\l  %315 = getelementptr inbounds i8, i8 addrspace(4)* %265, i64 %314\l  %316 = load i8, i8 addrspace(4)* %315, align 1, !tbaa !8\l  %317 = zext i8 %316 to i64\l  %318 = shl i32 %312, 3\l  %319 = zext i32 %318 to i64\l  %320 = shl nuw i64 %317, %319\l  %321 = or i64 %320, %313\l  %322 = add nuw nsw i32 %312, 1\l  %323 = icmp eq i32 %322, %266\l  br i1 %323, label %324, label %311\l|{<s0>T|<s1>F}}"];
	Node0x4b16e50:s0 -> Node0x4b16e00;
	Node0x4b16e50:s1 -> Node0x4b16e50;
	Node0x4b16e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%324:\l324:                                              \l  %325 = phi i8 addrspace(4)* [ %310, %271 ], [ %265, %269 ], [ %265, %311 ]\l  %326 = phi i32 [ %309, %271 ], [ 0, %269 ], [ 0, %311 ]\l  %327 = phi i64 [ %308, %271 ], [ 0, %269 ], [ %321, %311 ]\l  %328 = icmp ugt i32 %326, 7\l  br i1 %328, label %331, label %329\l|{<s0>T|<s1>F}}"];
	Node0x4b16e00:s0 -> Node0x4b18e70;
	Node0x4b16e00:s1 -> Node0x4b18ec0;
	Node0x4b18ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%329:\l329:                                              \l  %330 = icmp eq i32 %326, 0\l  br i1 %330, label %384, label %371\l|{<s0>T|<s1>F}}"];
	Node0x4b18ec0:s0 -> Node0x4b19050;
	Node0x4b18ec0:s1 -> Node0x4b190a0;
	Node0x4b18e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%331:\l331:                                              \l  %332 = load i8, i8 addrspace(4)* %325, align 1, !tbaa !8\l  %333 = zext i8 %332 to i64\l  %334 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 1\l  %335 = load i8, i8 addrspace(4)* %334, align 1, !tbaa !8\l  %336 = zext i8 %335 to i64\l  %337 = shl nuw nsw i64 %336, 8\l  %338 = or i64 %337, %333\l  %339 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 2\l  %340 = load i8, i8 addrspace(4)* %339, align 1, !tbaa !8\l  %341 = zext i8 %340 to i64\l  %342 = shl nuw nsw i64 %341, 16\l  %343 = or i64 %338, %342\l  %344 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 3\l  %345 = load i8, i8 addrspace(4)* %344, align 1, !tbaa !8\l  %346 = zext i8 %345 to i64\l  %347 = shl nuw nsw i64 %346, 24\l  %348 = or i64 %343, %347\l  %349 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 4\l  %350 = load i8, i8 addrspace(4)* %349, align 1, !tbaa !8\l  %351 = zext i8 %350 to i64\l  %352 = shl nuw nsw i64 %351, 32\l  %353 = or i64 %348, %352\l  %354 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 5\l  %355 = load i8, i8 addrspace(4)* %354, align 1, !tbaa !8\l  %356 = zext i8 %355 to i64\l  %357 = shl nuw nsw i64 %356, 40\l  %358 = or i64 %353, %357\l  %359 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 6\l  %360 = load i8, i8 addrspace(4)* %359, align 1, !tbaa !8\l  %361 = zext i8 %360 to i64\l  %362 = shl nuw nsw i64 %361, 48\l  %363 = or i64 %358, %362\l  %364 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 7\l  %365 = load i8, i8 addrspace(4)* %364, align 1, !tbaa !8\l  %366 = zext i8 %365 to i64\l  %367 = shl nuw i64 %366, 56\l  %368 = or i64 %363, %367\l  %369 = add nsw i32 %326, -8\l  %370 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 8\l  br label %384\l}"];
	Node0x4b18e70 -> Node0x4b19050;
	Node0x4b190a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%371:\l371:                                              \l  %372 = phi i32 [ %382, %371 ], [ 0, %329 ]\l  %373 = phi i64 [ %381, %371 ], [ 0, %329 ]\l  %374 = zext i32 %372 to i64\l  %375 = getelementptr inbounds i8, i8 addrspace(4)* %325, i64 %374\l  %376 = load i8, i8 addrspace(4)* %375, align 1, !tbaa !8\l  %377 = zext i8 %376 to i64\l  %378 = shl i32 %372, 3\l  %379 = zext i32 %378 to i64\l  %380 = shl nuw i64 %377, %379\l  %381 = or i64 %380, %373\l  %382 = add nuw nsw i32 %372, 1\l  %383 = icmp eq i32 %382, %326\l  br i1 %383, label %384, label %371\l|{<s0>T|<s1>F}}"];
	Node0x4b190a0:s0 -> Node0x4b19050;
	Node0x4b190a0:s1 -> Node0x4b190a0;
	Node0x4b19050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%384:\l384:                                              \l  %385 = phi i8 addrspace(4)* [ %370, %331 ], [ %325, %329 ], [ %325, %371 ]\l  %386 = phi i32 [ %369, %331 ], [ 0, %329 ], [ 0, %371 ]\l  %387 = phi i64 [ %368, %331 ], [ 0, %329 ], [ %381, %371 ]\l  %388 = icmp ugt i32 %386, 7\l  br i1 %388, label %391, label %389\l|{<s0>T|<s1>F}}"];
	Node0x4b19050:s0 -> Node0x4b1c120;
	Node0x4b19050:s1 -> Node0x4b1c170;
	Node0x4b1c170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%389:\l389:                                              \l  %390 = icmp eq i32 %386, 0\l  br i1 %390, label %442, label %429\l|{<s0>T|<s1>F}}"];
	Node0x4b1c170:s0 -> Node0x4b0bc60;
	Node0x4b1c170:s1 -> Node0x4b1c300;
	Node0x4b1c120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%391:\l391:                                              \l  %392 = load i8, i8 addrspace(4)* %385, align 1, !tbaa !8\l  %393 = zext i8 %392 to i64\l  %394 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 1\l  %395 = load i8, i8 addrspace(4)* %394, align 1, !tbaa !8\l  %396 = zext i8 %395 to i64\l  %397 = shl nuw nsw i64 %396, 8\l  %398 = or i64 %397, %393\l  %399 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 2\l  %400 = load i8, i8 addrspace(4)* %399, align 1, !tbaa !8\l  %401 = zext i8 %400 to i64\l  %402 = shl nuw nsw i64 %401, 16\l  %403 = or i64 %398, %402\l  %404 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 3\l  %405 = load i8, i8 addrspace(4)* %404, align 1, !tbaa !8\l  %406 = zext i8 %405 to i64\l  %407 = shl nuw nsw i64 %406, 24\l  %408 = or i64 %403, %407\l  %409 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 4\l  %410 = load i8, i8 addrspace(4)* %409, align 1, !tbaa !8\l  %411 = zext i8 %410 to i64\l  %412 = shl nuw nsw i64 %411, 32\l  %413 = or i64 %408, %412\l  %414 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 5\l  %415 = load i8, i8 addrspace(4)* %414, align 1, !tbaa !8\l  %416 = zext i8 %415 to i64\l  %417 = shl nuw nsw i64 %416, 40\l  %418 = or i64 %413, %417\l  %419 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 6\l  %420 = load i8, i8 addrspace(4)* %419, align 1, !tbaa !8\l  %421 = zext i8 %420 to i64\l  %422 = shl nuw nsw i64 %421, 48\l  %423 = or i64 %418, %422\l  %424 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 7\l  %425 = load i8, i8 addrspace(4)* %424, align 1, !tbaa !8\l  %426 = zext i8 %425 to i64\l  %427 = shl nuw i64 %426, 56\l  %428 = or i64 %423, %427\l  br label %442\l}"];
	Node0x4b1c120 -> Node0x4b0bc60;
	Node0x4b1c300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%429:\l429:                                              \l  %430 = phi i32 [ %440, %429 ], [ 0, %389 ]\l  %431 = phi i64 [ %439, %429 ], [ 0, %389 ]\l  %432 = zext i32 %430 to i64\l  %433 = getelementptr inbounds i8, i8 addrspace(4)* %385, i64 %432\l  %434 = load i8, i8 addrspace(4)* %433, align 1, !tbaa !8\l  %435 = zext i8 %434 to i64\l  %436 = shl i32 %430, 3\l  %437 = zext i32 %436 to i64\l  %438 = shl nuw i64 %435, %437\l  %439 = or i64 %438, %431\l  %440 = add nuw nsw i32 %430, 1\l  %441 = icmp eq i32 %440, %386\l  br i1 %441, label %442, label %429\l|{<s0>T|<s1>F}}"];
	Node0x4b1c300:s0 -> Node0x4b0bc60;
	Node0x4b1c300:s1 -> Node0x4b1c300;
	Node0x4b0bc60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%442:\l442:                                              \l  %443 = phi i64 [ %428, %391 ], [ 0, %389 ], [ %439, %429 ]\l  %444 = shl nuw nsw i64 %25, 2\l  %445 = add nuw nsw i64 %444, 28\l  %446 = and i64 %445, 480\l  %447 = and i64 %27, -225\l  %448 = or i64 %447, %446\l  %449 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* noundef %6,\l... i64 noundef %448, i64 noundef %87, i64 noundef %147, i64 noundef %207, i64\l... noundef %267, i64 noundef %327, i64 noundef %387, i64 noundef %443) #10\l  %450 = sub i64 %17, %25\l  %451 = getelementptr inbounds i8, i8 addrspace(4)* %18, i64 %25\l  %452 = icmp eq i64 %450, 0\l  br i1 %452, label %453, label %16\l|{<s0>T|<s1>F}}"];
	Node0x4b0bc60:s0 -> Node0x4b0ac60;
	Node0x4b0bc60:s1 -> Node0x4b0b770;
	Node0x4b0ac60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%453:\l453:                                              \l  ret void\l}"];
}
