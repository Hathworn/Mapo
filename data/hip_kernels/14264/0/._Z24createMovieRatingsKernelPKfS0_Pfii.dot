digraph "CFG for '_Z24createMovieRatingsKernelPKfS0_Pfii' function" {
	label="CFG for '_Z24createMovieRatingsKernelPKfS0_Pfii' function";

	Node0x4bdba00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = mul nsw i32 %3, 5\l  %19 = icmp ult i32 %17, %18\l  br i1 %19, label %20, label %148\l|{<s0>T|<s1>F}}"];
	Node0x4bdba00:s0 -> Node0x4bddd00;
	Node0x4bdba00:s1 -> Node0x4bddd90;
	Node0x4bddd00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%20:\l20:                                               \l  %21 = icmp eq i32 %4, 0\l  %22 = udiv i32 %14, %11\l  %23 = mul i32 %22, %11\l  %24 = icmp ugt i32 %14, %23\l  %25 = zext i1 %24 to i32\l  %26 = add i32 %22, %25\l  %27 = mul i32 %26, %11\l  %28 = and i32 %4, 7\l  %29 = icmp ult i32 %4, 8\l  %30 = and i32 %4, -8\l  %31 = icmp eq i32 %28, 0\l  br label %32\l}"];
	Node0x4bddd00 -> Node0x4bde5a0;
	Node0x4bde5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%32:\l32:                                               \l  %33 = phi i32 [ %17, %20 ], [ %146, %142 ]\l  br i1 %21, label %142, label %34\l|{<s0>T|<s1>F}}"];
	Node0x4bde5a0:s0 -> Node0x4bddb00;
	Node0x4bde5a0:s1 -> Node0x4bde8d0;
	Node0x4bde8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%34:\l34:                                               \l  %35 = mul i32 %33, %4\l  br i1 %29, label %122, label %36\l|{<s0>T|<s1>F}}"];
	Node0x4bde8d0:s0 -> Node0x4bdeaa0;
	Node0x4bde8d0:s1 -> Node0x4bdeaf0;
	Node0x4bdeaf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%36:\l36:                                               \l  %37 = phi float [ %118, %36 ], [ 0.000000e+00, %34 ]\l  %38 = phi i32 [ %119, %36 ], [ 0, %34 ]\l  %39 = phi i32 [ %120, %36 ], [ 0, %34 ]\l  %40 = add i32 %38, %35\l  %41 = zext i32 %40 to i64\l  %42 = getelementptr inbounds float, float addrspace(1)* %0, i64 %41\l  %43 = load float, float addrspace(1)* %42, align 4, !tbaa !16\l  %44 = zext i32 %38 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %1, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16\l  %47 = fmul contract float %43, %46\l  %48 = fadd contract float %37, %47\l  %49 = or i32 %38, 1\l  %50 = add i32 %49, %35\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds float, float addrspace(1)* %0, i64 %51\l  %53 = load float, float addrspace(1)* %52, align 4, !tbaa !16\l  %54 = zext i32 %49 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %1, i64 %54\l  %56 = load float, float addrspace(1)* %55, align 4, !tbaa !16\l  %57 = fmul contract float %53, %56\l  %58 = fadd contract float %48, %57\l  %59 = or i32 %38, 2\l  %60 = add i32 %59, %35\l  %61 = zext i32 %60 to i64\l  %62 = getelementptr inbounds float, float addrspace(1)* %0, i64 %61\l  %63 = load float, float addrspace(1)* %62, align 4, !tbaa !16\l  %64 = zext i32 %59 to i64\l  %65 = getelementptr inbounds float, float addrspace(1)* %1, i64 %64\l  %66 = load float, float addrspace(1)* %65, align 4, !tbaa !16\l  %67 = fmul contract float %63, %66\l  %68 = fadd contract float %58, %67\l  %69 = or i32 %38, 3\l  %70 = add i32 %69, %35\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds float, float addrspace(1)* %0, i64 %71\l  %73 = load float, float addrspace(1)* %72, align 4, !tbaa !16\l  %74 = zext i32 %69 to i64\l  %75 = getelementptr inbounds float, float addrspace(1)* %1, i64 %74\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !16\l  %77 = fmul contract float %73, %76\l  %78 = fadd contract float %68, %77\l  %79 = or i32 %38, 4\l  %80 = add i32 %79, %35\l  %81 = zext i32 %80 to i64\l  %82 = getelementptr inbounds float, float addrspace(1)* %0, i64 %81\l  %83 = load float, float addrspace(1)* %82, align 4, !tbaa !16\l  %84 = zext i32 %79 to i64\l  %85 = getelementptr inbounds float, float addrspace(1)* %1, i64 %84\l  %86 = load float, float addrspace(1)* %85, align 4, !tbaa !16\l  %87 = fmul contract float %83, %86\l  %88 = fadd contract float %78, %87\l  %89 = or i32 %38, 5\l  %90 = add i32 %89, %35\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds float, float addrspace(1)* %0, i64 %91\l  %93 = load float, float addrspace(1)* %92, align 4, !tbaa !16\l  %94 = zext i32 %89 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %1, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !16\l  %97 = fmul contract float %93, %96\l  %98 = fadd contract float %88, %97\l  %99 = or i32 %38, 6\l  %100 = add i32 %99, %35\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = zext i32 %99 to i64\l  %105 = getelementptr inbounds float, float addrspace(1)* %1, i64 %104\l  %106 = load float, float addrspace(1)* %105, align 4, !tbaa !16\l  %107 = fmul contract float %103, %106\l  %108 = fadd contract float %98, %107\l  %109 = or i32 %38, 7\l  %110 = add i32 %109, %35\l  %111 = zext i32 %110 to i64\l  %112 = getelementptr inbounds float, float addrspace(1)* %0, i64 %111\l  %113 = load float, float addrspace(1)* %112, align 4, !tbaa !16\l  %114 = zext i32 %109 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %1, i64 %114\l  %116 = load float, float addrspace(1)* %115, align 4, !tbaa !16\l  %117 = fmul contract float %113, %116\l  %118 = fadd contract float %108, %117\l  %119 = add nuw i32 %38, 8\l  %120 = add i32 %39, 8\l  %121 = icmp eq i32 %120, %30\l  br i1 %121, label %122, label %36, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x4bdeaf0:s0 -> Node0x4bdeaa0;
	Node0x4bdeaf0:s1 -> Node0x4bdeaf0;
	Node0x4bdeaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%122:\l122:                                              \l  %123 = phi float [ undef, %34 ], [ %118, %36 ]\l  %124 = phi float [ 0.000000e+00, %34 ], [ %118, %36 ]\l  %125 = phi i32 [ 0, %34 ], [ %119, %36 ]\l  br i1 %31, label %142, label %126\l|{<s0>T|<s1>F}}"];
	Node0x4bdeaa0:s0 -> Node0x4bddb00;
	Node0x4bdeaa0:s1 -> Node0x4be3680;
	Node0x4be3680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%126:\l126:                                              \l  %127 = phi float [ %138, %126 ], [ %124, %122 ]\l  %128 = phi i32 [ %139, %126 ], [ %125, %122 ]\l  %129 = phi i32 [ %140, %126 ], [ 0, %122 ]\l  %130 = add i32 %128, %35\l  %131 = zext i32 %130 to i64\l  %132 = getelementptr inbounds float, float addrspace(1)* %0, i64 %131\l  %133 = load float, float addrspace(1)* %132, align 4, !tbaa !16\l  %134 = zext i32 %128 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %1, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !16\l  %137 = fmul contract float %133, %136\l  %138 = fadd contract float %127, %137\l  %139 = add nuw i32 %128, 1\l  %140 = add i32 %129, 1\l  %141 = icmp eq i32 %140, %28\l  br i1 %141, label %142, label %126, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x4be3680:s0 -> Node0x4bddb00;
	Node0x4be3680:s1 -> Node0x4be3680;
	Node0x4bddb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%142:\l142:                                              \l  %143 = phi float [ 0.000000e+00, %32 ], [ %123, %122 ], [ %138, %126 ]\l  %144 = zext i32 %33 to i64\l  %145 = getelementptr inbounds float, float addrspace(1)* %2, i64 %144\l  store float %143, float addrspace(1)* %145, align 4, !tbaa !16\l  %146 = add i32 %27, %33\l  %147 = icmp ult i32 %146, %18\l  br i1 %147, label %32, label %148, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x4bddb00:s0 -> Node0x4bde5a0;
	Node0x4bddb00:s1 -> Node0x4bddd90;
	Node0x4bddd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%148:\l148:                                              \l  ret void\l}"];
}
