digraph "CFG for '_Z31createFinalHiddenFeaturesKernelPKfS0_Pfii' function" {
	label="CFG for '_Z31createFinalHiddenFeaturesKernelPKfS0_Pfii' function";

	Node0x56bfc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = getelementptr inbounds i8, i8 addrspace(4)* %7, i64 12\l  %13 = bitcast i8 addrspace(4)* %12 to i32 addrspace(4)*\l  %14 = load i32, i32 addrspace(4)* %13, align 4, !tbaa !6\l  %15 = mul i32 %6, %11\l  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %17 = add i32 %15, %16\l  %18 = icmp ult i32 %17, %4\l  br i1 %18, label %19, label %175\l|{<s0>T|<s1>F}}"];
	Node0x56bfc50:s0 -> Node0x56c1ec0;
	Node0x56bfc50:s1 -> Node0x56c1f50;
	Node0x56c1ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%19:\l19:                                               \l  %20 = icmp eq i32 %3, 0\l  %21 = udiv i32 %14, %11\l  %22 = mul i32 %21, %11\l  %23 = icmp ugt i32 %14, %22\l  %24 = zext i1 %23 to i32\l  %25 = add i32 %21, %24\l  %26 = mul i32 %25, %11\l  %27 = and i32 %3, 1\l  %28 = icmp eq i32 %3, 1\l  %29 = and i32 %3, -2\l  %30 = icmp eq i32 %27, 0\l  br label %31\l}"];
	Node0x56c1ec0 -> Node0x56c2700;
	Node0x56c2700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%31:\l31:                                               \l  %32 = phi i32 [ %17, %19 ], [ %173, %170 ]\l  %33 = zext i32 %32 to i64\l  br i1 %20, label %170, label %34\l|{<s0>T|<s1>F}}"];
	Node0x56c2700:s0 -> Node0x56c27f0;
	Node0x56c2700:s1 -> Node0x56c1d90;
	Node0x56c1d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%34:\l34:                                               \l  %35 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  %36 = load float, float addrspace(1)* %35, align 4, !tbaa !16\l  br i1 %28, label %125, label %37\l|{<s0>T|<s1>F}}"];
	Node0x56c1d90:s0 -> Node0x56c1de0;
	Node0x56c1d90:s1 -> Node0x56c2eb0;
	Node0x56c2eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%37:\l37:                                               \l  %38 = phi float [ %121, %37 ], [ 0.000000e+00, %34 ]\l  %39 = phi i32 [ %122, %37 ], [ 0, %34 ]\l  %40 = phi i32 [ %123, %37 ], [ 0, %34 ]\l  %41 = mul i32 %39, 5\l  %42 = mul i32 %41, %4\l  %43 = add i32 %42, %32\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds float, float addrspace(1)* %0, i64 %44\l  %46 = load float, float addrspace(1)* %45, align 4, !tbaa !16\l  %47 = fmul contract float %46, %36\l  %48 = fadd contract float %38, %47\l  %49 = or i32 %41, 1\l  %50 = mul i32 %49, %4\l  %51 = add i32 %50, %32\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds float, float addrspace(1)* %0, i64 %52\l  %54 = load float, float addrspace(1)* %53, align 4, !tbaa !16\l  %55 = fmul contract float %54, %36\l  %56 = fadd contract float %48, %55\l  %57 = add i32 %41, 2\l  %58 = mul i32 %57, %4\l  %59 = add i32 %58, %32\l  %60 = zext i32 %59 to i64\l  %61 = getelementptr inbounds float, float addrspace(1)* %0, i64 %60\l  %62 = load float, float addrspace(1)* %61, align 4, !tbaa !16\l  %63 = fmul contract float %62, %36\l  %64 = fadd contract float %56, %63\l  %65 = add i32 %41, 3\l  %66 = mul i32 %65, %4\l  %67 = add i32 %66, %32\l  %68 = zext i32 %67 to i64\l  %69 = getelementptr inbounds float, float addrspace(1)* %0, i64 %68\l  %70 = load float, float addrspace(1)* %69, align 4, !tbaa !16\l  %71 = fmul contract float %70, %36\l  %72 = fadd contract float %64, %71\l  %73 = add i32 %41, 4\l  %74 = mul i32 %73, %4\l  %75 = add i32 %74, %32\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds float, float addrspace(1)* %0, i64 %76\l  %78 = load float, float addrspace(1)* %77, align 4, !tbaa !16\l  %79 = fmul contract float %78, %36\l  %80 = fadd contract float %72, %79\l  %81 = mul i32 %39, 5\l  %82 = add i32 %81, 5\l  %83 = mul i32 %82, %4\l  %84 = add i32 %83, %32\l  %85 = zext i32 %84 to i64\l  %86 = getelementptr inbounds float, float addrspace(1)* %0, i64 %85\l  %87 = load float, float addrspace(1)* %86, align 4, !tbaa !16\l  %88 = fmul contract float %87, %36\l  %89 = fadd contract float %80, %88\l  %90 = add i32 %81, 6\l  %91 = mul i32 %90, %4\l  %92 = add i32 %91, %32\l  %93 = zext i32 %92 to i64\l  %94 = getelementptr inbounds float, float addrspace(1)* %0, i64 %93\l  %95 = load float, float addrspace(1)* %94, align 4, !tbaa !16\l  %96 = fmul contract float %95, %36\l  %97 = fadd contract float %89, %96\l  %98 = add i32 %81, 7\l  %99 = mul i32 %98, %4\l  %100 = add i32 %99, %32\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds float, float addrspace(1)* %0, i64 %101\l  %103 = load float, float addrspace(1)* %102, align 4, !tbaa !16\l  %104 = fmul contract float %103, %36\l  %105 = fadd contract float %97, %104\l  %106 = add i32 %81, 8\l  %107 = mul i32 %106, %4\l  %108 = add i32 %107, %32\l  %109 = zext i32 %108 to i64\l  %110 = getelementptr inbounds float, float addrspace(1)* %0, i64 %109\l  %111 = load float, float addrspace(1)* %110, align 4, !tbaa !16\l  %112 = fmul contract float %111, %36\l  %113 = fadd contract float %105, %112\l  %114 = add i32 %81, 9\l  %115 = mul i32 %114, %4\l  %116 = add i32 %115, %32\l  %117 = zext i32 %116 to i64\l  %118 = getelementptr inbounds float, float addrspace(1)* %0, i64 %117\l  %119 = load float, float addrspace(1)* %118, align 4, !tbaa !16\l  %120 = fmul contract float %119, %36\l  %121 = fadd contract float %113, %120\l  %122 = add nuw i32 %39, 2\l  %123 = add i32 %40, 2\l  %124 = icmp eq i32 %123, %29\l  br i1 %124, label %125, label %37, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x56c2eb0:s0 -> Node0x56c1de0;
	Node0x56c2eb0:s1 -> Node0x56c2eb0;
	Node0x56c1de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%125:\l125:                                              \l  %126 = phi float [ undef, %34 ], [ %121, %37 ]\l  %127 = phi float [ 0.000000e+00, %34 ], [ %121, %37 ]\l  %128 = phi i32 [ 0, %34 ], [ %122, %37 ]\l  br i1 %30, label %170, label %129\l|{<s0>T|<s1>F}}"];
	Node0x56c1de0:s0 -> Node0x56c27f0;
	Node0x56c1de0:s1 -> Node0x56c50c0;
	Node0x56c50c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%129:\l129:                                              \l  %130 = mul i32 %128, 5\l  %131 = mul i32 %130, %4\l  %132 = add i32 %131, %32\l  %133 = zext i32 %132 to i64\l  %134 = getelementptr inbounds float, float addrspace(1)* %0, i64 %133\l  %135 = load float, float addrspace(1)* %134, align 4, !tbaa !16\l  %136 = fmul contract float %135, %36\l  %137 = fadd contract float %127, %136\l  %138 = add i32 %130, 1\l  %139 = mul i32 %138, %4\l  %140 = add i32 %139, %32\l  %141 = zext i32 %140 to i64\l  %142 = getelementptr inbounds float, float addrspace(1)* %0, i64 %141\l  %143 = load float, float addrspace(1)* %142, align 4, !tbaa !16\l  %144 = fmul contract float %143, %36\l  %145 = fadd contract float %137, %144\l  %146 = add i32 %130, 2\l  %147 = mul i32 %146, %4\l  %148 = add i32 %147, %32\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %0, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !16\l  %152 = fmul contract float %151, %36\l  %153 = fadd contract float %145, %152\l  %154 = add i32 %130, 3\l  %155 = mul i32 %154, %4\l  %156 = add i32 %155, %32\l  %157 = zext i32 %156 to i64\l  %158 = getelementptr inbounds float, float addrspace(1)* %0, i64 %157\l  %159 = load float, float addrspace(1)* %158, align 4, !tbaa !16\l  %160 = fmul contract float %159, %36\l  %161 = fadd contract float %153, %160\l  %162 = add i32 %130, 4\l  %163 = mul i32 %162, %4\l  %164 = add i32 %163, %32\l  %165 = zext i32 %164 to i64\l  %166 = getelementptr inbounds float, float addrspace(1)* %0, i64 %165\l  %167 = load float, float addrspace(1)* %166, align 4, !tbaa !16\l  %168 = fmul contract float %167, %36\l  %169 = fadd contract float %161, %168\l  br label %170\l}"];
	Node0x56c50c0 -> Node0x56c27f0;
	Node0x56c27f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%170:\l170:                                              \l  %171 = phi float [ 0.000000e+00, %31 ], [ %126, %125 ], [ %169, %129 ]\l  %172 = getelementptr inbounds float, float addrspace(1)* %2, i64 %33\l  store float %171, float addrspace(1)* %172, align 4, !tbaa !16\l  %173 = add i32 %26, %32\l  %174 = icmp ult i32 %173, %4\l  br i1 %174, label %31, label %175, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x56c27f0:s0 -> Node0x56c2700;
	Node0x56c27f0:s1 -> Node0x56c1f50;
	Node0x56c1f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%175:\l175:                                              \l  ret void\l}"];
}
