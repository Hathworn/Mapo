; ModuleID = '../data/hip_kernels/17159/1/main.cu'
source_filename = "../data/hip_kernels/17159/1/main.cu"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind
define protected amdgpu_kernel void @_Z19simOBEcudaCoPolTestPdPKddddddd(double addrspace(1)* nocapture writeonly %0, double addrspace(1)* nocapture readonly %1, double %2, double %3, double %4, double %5, double %6, double %7) local_unnamed_addr #0 {
  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x()
  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr()
  %11 = getelementptr i8, i8 addrspace(4)* %10, i64 4
  %12 = bitcast i8 addrspace(4)* %11 to i16 addrspace(4)*
  %13 = load i16, i16 addrspace(4)* %12, align 4, !range !4, !invariant.load !5
  %14 = zext i16 %13 to i32
  %15 = mul i32 %9, %14
  %16 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6
  %17 = add i32 %15, %16
  %18 = fadd contract double %4, %5
  %19 = fadd contract double %4, %6
  %20 = fadd contract double %5, %6
  %21 = fmul contract double %5, 2.000000e+00
  %22 = fmul contract double %2, 2.000000e+00
  %23 = fmul contract double %7, 2.000000e+00
  %24 = fdiv contract double %23, 1.000000e-01
  %25 = tail call double @llvm.round.f64(double %24)
  %26 = fptosi double %25 to i32
  %27 = sitofp i32 %26 to double
  %28 = fdiv contract double %23, %27
  %29 = sext i32 %17 to i64
  %30 = getelementptr inbounds double, double addrspace(1)* %1, i64 %29
  %31 = load double, double addrspace(1)* %30, align 8, !tbaa !7, !amdgpu.noclobber !5
  %32 = fmul contract double %28, 5.000000e-01
  %33 = icmp sgt i32 %26, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %8
  %35 = fdiv contract double %28, 6.000000e+00
  br label %39

36:                                               ; preds = %1517, %8
  %37 = phi double [ 0.000000e+00, %8 ], [ %1977, %1517 ]
  %38 = getelementptr inbounds double, double addrspace(1)* %0, i64 %29
  store double %37, double addrspace(1)* %38, align 8, !tbaa !7
  ret void

39:                                               ; preds = %34, %1517
  %40 = phi double [ 0.000000e+00, %34 ], [ %1929, %1517 ]
  %41 = phi double [ 0.000000e+00, %34 ], [ %1935, %1517 ]
  %42 = phi double [ 0.000000e+00, %34 ], [ %1941, %1517 ]
  %43 = phi double [ 0.000000e+00, %34 ], [ %1947, %1517 ]
  %44 = phi double [ 0.000000e+00, %34 ], [ %1953, %1517 ]
  %45 = phi double [ 0.000000e+00, %34 ], [ %1959, %1517 ]
  %46 = phi double [ 1.000000e+00, %34 ], [ %1965, %1517 ]
  %47 = phi double [ 0.000000e+00, %34 ], [ %1971, %1517 ]
  %48 = phi double [ 0.000000e+00, %34 ], [ %1977, %1517 ]
  %49 = phi i32 [ 0, %34 ], [ %1978, %1517 ]
  %50 = sitofp i32 %49 to double
  %51 = fmul contract double %28, %50
  %52 = fsub contract double %51, %7
  %53 = fmul contract double %52, %2
  %54 = tail call double @llvm.fabs.f64(double %53)
  %55 = fcmp olt double %54, 0x41D0000000000000
  br i1 %55, label %56, label %75

56:                                               ; preds = %39
  %57 = fmul double %54, 0x3FE45F306DC9C883
  %58 = tail call double @llvm.rint.f64(double %57)
  %59 = tail call double @llvm.fma.f64(double %58, double 0xBFF921FB54442D18, double %54)
  %60 = tail call double @llvm.fma.f64(double %58, double 0xBC91A62633145C00, double %59)
  %61 = fmul double %58, 0x3C91A62633145C00
  %62 = fneg double %61
  %63 = tail call double @llvm.fma.f64(double %58, double 0x3C91A62633145C00, double %62)
  %64 = fsub double %59, %61
  %65 = fsub double %59, %64
  %66 = fsub double %65, %61
  %67 = fsub double %64, %60
  %68 = fadd double %67, %66
  %69 = fsub double %68, %63
  %70 = tail call double @llvm.fma.f64(double %58, double 0xB97B839A252049C0, double %69)
  %71 = fadd double %60, %70
  %72 = fsub double %71, %60
  %73 = fsub double %70, %72
  %74 = fptosi double %58 to i32
  br label %151

75:                                               ; preds = %39
  %76 = tail call double @llvm.amdgcn.trig.preop.f64(double %54, i32 0)
  %77 = tail call double @llvm.amdgcn.trig.preop.f64(double %54, i32 1)
  %78 = tail call double @llvm.amdgcn.trig.preop.f64(double %54, i32 2)
  %79 = fcmp oge double %54, 0x7B00000000000000
  %80 = tail call double @llvm.amdgcn.ldexp.f64(double %54, i32 -128)
  %81 = select i1 %79, double %80, double %54
  %82 = fmul double %78, %81
  %83 = fneg double %82
  %84 = tail call double @llvm.fma.f64(double %78, double %81, double %83)
  %85 = fmul double %77, %81
  %86 = fneg double %85
  %87 = tail call double @llvm.fma.f64(double %77, double %81, double %86)
  %88 = fmul double %76, %81
  %89 = fneg double %88
  %90 = tail call double @llvm.fma.f64(double %76, double %81, double %89)
  %91 = fadd double %85, %90
  %92 = fsub double %91, %85
  %93 = fsub double %91, %92
  %94 = fsub double %90, %92
  %95 = fsub double %85, %93
  %96 = fadd double %94, %95
  %97 = fadd double %82, %87
  %98 = fsub double %97, %82
  %99 = fsub double %97, %98
  %100 = fsub double %87, %98
  %101 = fsub double %82, %99
  %102 = fadd double %100, %101
  %103 = fadd double %97, %96
  %104 = fsub double %103, %97
  %105 = fsub double %103, %104
  %106 = fsub double %96, %104
  %107 = fsub double %97, %105
  %108 = fadd double %106, %107
  %109 = fadd double %102, %108
  %110 = fadd double %84, %109
  %111 = fadd double %88, %91
  %112 = fsub double %111, %88
  %113 = fsub double %91, %112
  %114 = fadd double %113, %103
  %115 = fsub double %114, %113
  %116 = fsub double %103, %115
  %117 = fadd double %116, %110
  %118 = tail call double @llvm.amdgcn.ldexp.f64(double %111, i32 -2)
  %119 = tail call double @llvm.amdgcn.fract.f64(double %118)
  %120 = tail call i1 @llvm.amdgcn.class.f64(double %118, i32 516)
  %121 = select i1 %120, double 0.000000e+00, double %119
  %122 = tail call double @llvm.amdgcn.ldexp.f64(double %121, i32 2)
  %123 = fadd double %122, %114
  %124 = fcmp olt double %123, 0.000000e+00
  %125 = select i1 %124, double 4.000000e+00, double 0.000000e+00
  %126 = fadd double %122, %125
  %127 = fadd double %114, %126
  %128 = fptosi double %127 to i32
  %129 = sitofp i32 %128 to double
  %130 = fsub double %126, %129
  %131 = fadd double %114, %130
  %132 = fsub double %131, %130
  %133 = fsub double %114, %132
  %134 = fadd double %117, %133
  %135 = fcmp oge double %131, 5.000000e-01
  %136 = zext i1 %135 to i32
  %137 = add nsw i32 %136, %128
  %138 = select i1 %135, double 1.000000e+00, double 0.000000e+00
  %139 = fsub double %131, %138
  %140 = fadd double %139, %134
  %141 = fsub double %140, %139
  %142 = fsub double %134, %141
  %143 = fmul double %140, 0x3FF921FB54442D18
  %144 = fneg double %143
  %145 = tail call double @llvm.fma.f64(double %140, double 0x3FF921FB54442D18, double %144)
  %146 = tail call double @llvm.fma.f64(double %140, double 0x3C91A62633145C07, double %145)
  %147 = tail call double @llvm.fma.f64(double %142, double 0x3FF921FB54442D18, double %146)
  %148 = fadd double %143, %147
  %149 = fsub double %148, %143
  %150 = fsub double %147, %149
  br label %151

151:                                              ; preds = %56, %75
  %152 = phi double [ %73, %56 ], [ %150, %75 ]
  %153 = phi double [ %71, %56 ], [ %148, %75 ]
  %154 = phi i32 [ %74, %56 ], [ %137, %75 ]
  %155 = fmul double %153, %153
  %156 = fmul double %155, 5.000000e-01
  %157 = fsub double 1.000000e+00, %156
  %158 = fsub double 1.000000e+00, %157
  %159 = fsub double %158, %156
  %160 = fmul double %155, %155
  %161 = tail call double @llvm.fma.f64(double %155, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %162 = tail call double @llvm.fma.f64(double %155, double %161, double 0xBE927E4FA17F65F6)
  %163 = tail call double @llvm.fma.f64(double %155, double %162, double 0x3EFA01A019F4EC90)
  %164 = tail call double @llvm.fma.f64(double %155, double %163, double 0xBF56C16C16C16967)
  %165 = tail call double @llvm.fma.f64(double %155, double %164, double 0x3FA5555555555555)
  %166 = fneg double %152
  %167 = tail call double @llvm.fma.f64(double %153, double %166, double %159)
  %168 = tail call double @llvm.fma.f64(double %160, double %165, double %167)
  %169 = fadd double %157, %168
  %170 = tail call double @llvm.fma.f64(double %155, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %171 = tail call double @llvm.fma.f64(double %155, double %170, double 0x3EC71DE3796CDE01)
  %172 = tail call double @llvm.fma.f64(double %155, double %171, double 0xBF2A01A019E83E5C)
  %173 = tail call double @llvm.fma.f64(double %155, double %172, double 0x3F81111111110BB3)
  %174 = fneg double %155
  %175 = fmul double %153, %174
  %176 = fmul double %152, 5.000000e-01
  %177 = tail call double @llvm.fma.f64(double %175, double %173, double %176)
  %178 = tail call double @llvm.fma.f64(double %155, double %177, double %166)
  %179 = tail call double @llvm.fma.f64(double %175, double 0xBFC5555555555555, double %178)
  %180 = fsub double %153, %179
  %181 = fneg double %180
  %182 = and i32 %154, 1
  %183 = icmp eq i32 %182, 0
  %184 = select i1 %183, double %169, double %181
  %185 = bitcast double %184 to <2 x i32>
  %186 = shl i32 %154, 30
  %187 = and i32 %186, -2147483648
  %188 = extractelement <2 x i32> %185, i64 1
  %189 = xor i32 %188, %187
  %190 = insertelement <2 x i32> %185, i32 %189, i64 1
  %191 = tail call i1 @llvm.amdgcn.class.f64(double %54, i32 504)
  %192 = select i1 %191, <2 x i32> %190, <2 x i32> <i32 0, i32 2146959360>
  %193 = bitcast <2 x i32> %192 to double
  %194 = fneg contract double %52
  %195 = fdiv contract double %194, %3
  %196 = tail call double @llvm.fabs.f64(double %195)
  %197 = fadd double %196, 0xBFE62E42FEFA39EF
  %198 = fsub double %197, %196
  %199 = fsub double %198, %197
  %200 = fadd double %196, %199
  %201 = fadd double %198, 0x3FE62E42FEFA39EF
  %202 = fsub double %200, %201
  %203 = fadd double %202, 0xBC7ABC9E3B39803F
  %204 = fadd double %197, %203
  %205 = fsub double %204, %197
  %206 = fsub double %203, %205
  %207 = fmul double %204, 0x3FF71547652B82FE
  %208 = tail call double @llvm.rint.f64(double %207)
  %209 = tail call double @llvm.fma.f64(double %208, double 0xBFE62E42FEFA3000, double %204)
  %210 = fadd double %206, %209
  %211 = fsub double %210, %209
  %212 = fsub double %206, %211
  %213 = fmul double %208, 0x3D53DE6AF278E000
  %214 = fsub double %210, %213
  %215 = fsub double %210, %214
  %216 = fsub double %215, %213
  %217 = fadd double %212, %216
  %218 = fadd double %214, %217
  %219 = fsub double %218, %214
  %220 = fsub double %217, %219
  %221 = fmul double %208, 0x3AC9CC01F97B57A0
  %222 = fsub double %218, %221
  %223 = fsub double %218, %222
  %224 = fsub double %223, %221
  %225 = fadd double %220, %224
  %226 = fadd double %222, %225
  %227 = fsub double %226, %222
  %228 = fsub double %225, %227
  %229 = tail call double @llvm.fma.f64(double %226, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %230 = tail call double @llvm.fma.f64(double %226, double %229, double 0x3EC71DEE623FDE64)
  %231 = tail call double @llvm.fma.f64(double %226, double %230, double 0x3EFA01997C89E6B0)
  %232 = tail call double @llvm.fma.f64(double %226, double %231, double 0x3F2A01A014761F6E)
  %233 = tail call double @llvm.fma.f64(double %226, double %232, double 0x3F56C16C1852B7B0)
  %234 = tail call double @llvm.fma.f64(double %226, double %233, double 0x3F81111111122322)
  %235 = tail call double @llvm.fma.f64(double %226, double %234, double 0x3FA55555555502A1)
  %236 = tail call double @llvm.fma.f64(double %226, double %235, double 0x3FC5555555555511)
  %237 = tail call double @llvm.fma.f64(double %226, double %236, double 0x3FE000000000000B)
  %238 = fmul double %226, %226
  %239 = fneg double %238
  %240 = tail call double @llvm.fma.f64(double %226, double %226, double %239)
  %241 = fmul double %228, 2.000000e+00
  %242 = tail call double @llvm.fma.f64(double %226, double %241, double %240)
  %243 = fadd double %238, %242
  %244 = fsub double %243, %238
  %245 = fsub double %242, %244
  %246 = fmul double %243, %237
  %247 = fneg double %246
  %248 = tail call double @llvm.fma.f64(double %243, double %237, double %247)
  %249 = tail call double @llvm.fma.f64(double %245, double %237, double %248)
  %250 = fadd double %246, %249
  %251 = fsub double %250, %246
  %252 = fsub double %249, %251
  %253 = fadd double %226, %250
  %254 = fsub double %253, %226
  %255 = fsub double %250, %254
  %256 = fadd double %228, %252
  %257 = fadd double %256, %255
  %258 = fadd double %253, %257
  %259 = fsub double %258, %253
  %260 = fsub double %257, %259
  %261 = fadd double %258, 1.000000e+00
  %262 = fadd double %261, -1.000000e+00
  %263 = fsub double %258, %262
  %264 = fadd double %260, %263
  %265 = fadd double %261, %264
  %266 = fsub double %265, %261
  %267 = fsub double %264, %266
  %268 = fptosi double %208 to i32
  %269 = tail call double @llvm.amdgcn.ldexp.f64(double %265, i32 %268)
  %270 = tail call double @llvm.amdgcn.ldexp.f64(double %267, i32 %268)
  %271 = tail call double @llvm.amdgcn.rcp.f64(double %269)
  %272 = fneg double %269
  %273 = tail call double @llvm.fma.f64(double %272, double %271, double 1.000000e+00)
  %274 = tail call double @llvm.fma.f64(double %273, double %271, double %271)
  %275 = tail call double @llvm.fma.f64(double %272, double %274, double 1.000000e+00)
  %276 = tail call double @llvm.fma.f64(double %275, double %274, double %274)
  %277 = fmul double %269, %276
  %278 = fneg double %277
  %279 = tail call double @llvm.fma.f64(double %276, double %269, double %278)
  %280 = tail call double @llvm.fma.f64(double %276, double %270, double %279)
  %281 = fadd double %277, %280
  %282 = fsub double %281, %277
  %283 = fsub double %280, %282
  %284 = fsub double 1.000000e+00, %281
  %285 = fsub double 1.000000e+00, %284
  %286 = fsub double %285, %281
  %287 = fsub double %286, %283
  %288 = fadd double %284, %287
  %289 = fsub double %288, %284
  %290 = fsub double %287, %289
  %291 = fmul double %276, %288
  %292 = fmul double %269, %291
  %293 = fneg double %292
  %294 = tail call double @llvm.fma.f64(double %291, double %269, double %293)
  %295 = tail call double @llvm.fma.f64(double %291, double %270, double %294)
  %296 = fadd double %292, %295
  %297 = fsub double %296, %292
  %298 = fsub double %295, %297
  %299 = fsub double %288, %296
  %300 = fsub double %288, %299
  %301 = fsub double %300, %296
  %302 = fadd double %290, %301
  %303 = fsub double %302, %298
  %304 = fadd double %299, %303
  %305 = fmul double %276, %304
  %306 = fadd double %276, %291
  %307 = fsub double %306, %276
  %308 = fsub double %291, %307
  %309 = fadd double %308, %305
  %310 = fadd double %306, %309
  %311 = fsub double %310, %306
  %312 = fsub double %309, %311
  %313 = tail call double @llvm.amdgcn.ldexp.f64(double %310, i32 -2)
  %314 = tail call double @llvm.amdgcn.ldexp.f64(double %312, i32 -2)
  %315 = fadd double %269, %313
  %316 = fsub double %315, %269
  %317 = fsub double %313, %316
  %318 = fadd double %270, %314
  %319 = fadd double %318, %317
  %320 = fadd double %315, %319
  %321 = fcmp oge double %196, 0x408633CE8FB9F87E
  %322 = select i1 %321, double 0x7FF0000000000000, double %320
  %323 = fdiv contract double %193, %322
  %324 = fadd contract double %31, %52
  %325 = fmul contract double %324, %2
  %326 = tail call double @llvm.fabs.f64(double %325)
  %327 = fcmp olt double %326, 0x41D0000000000000
  br i1 %327, label %328, label %347

328:                                              ; preds = %151
  %329 = fmul double %326, 0x3FE45F306DC9C883
  %330 = tail call double @llvm.rint.f64(double %329)
  %331 = tail call double @llvm.fma.f64(double %330, double 0xBFF921FB54442D18, double %326)
  %332 = tail call double @llvm.fma.f64(double %330, double 0xBC91A62633145C00, double %331)
  %333 = fmul double %330, 0x3C91A62633145C00
  %334 = fneg double %333
  %335 = tail call double @llvm.fma.f64(double %330, double 0x3C91A62633145C00, double %334)
  %336 = fsub double %331, %333
  %337 = fsub double %331, %336
  %338 = fsub double %337, %333
  %339 = fsub double %336, %332
  %340 = fadd double %339, %338
  %341 = fsub double %340, %335
  %342 = tail call double @llvm.fma.f64(double %330, double 0xB97B839A252049C0, double %341)
  %343 = fadd double %332, %342
  %344 = fsub double %343, %332
  %345 = fsub double %342, %344
  %346 = fptosi double %330 to i32
  br label %423

347:                                              ; preds = %151
  %348 = tail call double @llvm.amdgcn.trig.preop.f64(double %326, i32 0)
  %349 = tail call double @llvm.amdgcn.trig.preop.f64(double %326, i32 1)
  %350 = tail call double @llvm.amdgcn.trig.preop.f64(double %326, i32 2)
  %351 = fcmp oge double %326, 0x7B00000000000000
  %352 = tail call double @llvm.amdgcn.ldexp.f64(double %326, i32 -128)
  %353 = select i1 %351, double %352, double %326
  %354 = fmul double %350, %353
  %355 = fneg double %354
  %356 = tail call double @llvm.fma.f64(double %350, double %353, double %355)
  %357 = fmul double %349, %353
  %358 = fneg double %357
  %359 = tail call double @llvm.fma.f64(double %349, double %353, double %358)
  %360 = fmul double %348, %353
  %361 = fneg double %360
  %362 = tail call double @llvm.fma.f64(double %348, double %353, double %361)
  %363 = fadd double %357, %362
  %364 = fsub double %363, %357
  %365 = fsub double %363, %364
  %366 = fsub double %362, %364
  %367 = fsub double %357, %365
  %368 = fadd double %366, %367
  %369 = fadd double %354, %359
  %370 = fsub double %369, %354
  %371 = fsub double %369, %370
  %372 = fsub double %359, %370
  %373 = fsub double %354, %371
  %374 = fadd double %372, %373
  %375 = fadd double %369, %368
  %376 = fsub double %375, %369
  %377 = fsub double %375, %376
  %378 = fsub double %368, %376
  %379 = fsub double %369, %377
  %380 = fadd double %378, %379
  %381 = fadd double %374, %380
  %382 = fadd double %356, %381
  %383 = fadd double %360, %363
  %384 = fsub double %383, %360
  %385 = fsub double %363, %384
  %386 = fadd double %385, %375
  %387 = fsub double %386, %385
  %388 = fsub double %375, %387
  %389 = fadd double %388, %382
  %390 = tail call double @llvm.amdgcn.ldexp.f64(double %383, i32 -2)
  %391 = tail call double @llvm.amdgcn.fract.f64(double %390)
  %392 = tail call i1 @llvm.amdgcn.class.f64(double %390, i32 516)
  %393 = select i1 %392, double 0.000000e+00, double %391
  %394 = tail call double @llvm.amdgcn.ldexp.f64(double %393, i32 2)
  %395 = fadd double %394, %386
  %396 = fcmp olt double %395, 0.000000e+00
  %397 = select i1 %396, double 4.000000e+00, double 0.000000e+00
  %398 = fadd double %394, %397
  %399 = fadd double %386, %398
  %400 = fptosi double %399 to i32
  %401 = sitofp i32 %400 to double
  %402 = fsub double %398, %401
  %403 = fadd double %386, %402
  %404 = fsub double %403, %402
  %405 = fsub double %386, %404
  %406 = fadd double %389, %405
  %407 = fcmp oge double %403, 5.000000e-01
  %408 = zext i1 %407 to i32
  %409 = add nsw i32 %408, %400
  %410 = select i1 %407, double 1.000000e+00, double 0.000000e+00
  %411 = fsub double %403, %410
  %412 = fadd double %411, %406
  %413 = fsub double %412, %411
  %414 = fsub double %406, %413
  %415 = fmul double %412, 0x3FF921FB54442D18
  %416 = fneg double %415
  %417 = tail call double @llvm.fma.f64(double %412, double 0x3FF921FB54442D18, double %416)
  %418 = tail call double @llvm.fma.f64(double %412, double 0x3C91A62633145C07, double %417)
  %419 = tail call double @llvm.fma.f64(double %414, double 0x3FF921FB54442D18, double %418)
  %420 = fadd double %415, %419
  %421 = fsub double %420, %415
  %422 = fsub double %419, %421
  br label %423

423:                                              ; preds = %328, %347
  %424 = phi double [ %345, %328 ], [ %422, %347 ]
  %425 = phi double [ %343, %328 ], [ %420, %347 ]
  %426 = phi i32 [ %346, %328 ], [ %409, %347 ]
  %427 = fmul double %425, %425
  %428 = fmul double %427, 5.000000e-01
  %429 = fsub double 1.000000e+00, %428
  %430 = fsub double 1.000000e+00, %429
  %431 = fsub double %430, %428
  %432 = fmul double %427, %427
  %433 = tail call double @llvm.fma.f64(double %427, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %434 = tail call double @llvm.fma.f64(double %427, double %433, double 0xBE927E4FA17F65F6)
  %435 = tail call double @llvm.fma.f64(double %427, double %434, double 0x3EFA01A019F4EC90)
  %436 = tail call double @llvm.fma.f64(double %427, double %435, double 0xBF56C16C16C16967)
  %437 = tail call double @llvm.fma.f64(double %427, double %436, double 0x3FA5555555555555)
  %438 = fneg double %424
  %439 = tail call double @llvm.fma.f64(double %425, double %438, double %431)
  %440 = tail call double @llvm.fma.f64(double %432, double %437, double %439)
  %441 = fadd double %429, %440
  %442 = tail call double @llvm.fma.f64(double %427, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %443 = tail call double @llvm.fma.f64(double %427, double %442, double 0x3EC71DE3796CDE01)
  %444 = tail call double @llvm.fma.f64(double %427, double %443, double 0xBF2A01A019E83E5C)
  %445 = tail call double @llvm.fma.f64(double %427, double %444, double 0x3F81111111110BB3)
  %446 = fneg double %427
  %447 = fmul double %425, %446
  %448 = fmul double %424, 5.000000e-01
  %449 = tail call double @llvm.fma.f64(double %447, double %445, double %448)
  %450 = tail call double @llvm.fma.f64(double %427, double %449, double %438)
  %451 = tail call double @llvm.fma.f64(double %447, double 0xBFC5555555555555, double %450)
  %452 = fsub double %425, %451
  %453 = fneg double %452
  %454 = and i32 %426, 1
  %455 = icmp eq i32 %454, 0
  %456 = select i1 %455, double %441, double %453
  %457 = bitcast double %456 to <2 x i32>
  %458 = shl i32 %426, 30
  %459 = and i32 %458, -2147483648
  %460 = extractelement <2 x i32> %457, i64 1
  %461 = xor i32 %460, %459
  %462 = insertelement <2 x i32> %457, i32 %461, i64 1
  %463 = tail call i1 @llvm.amdgcn.class.f64(double %326, i32 504)
  %464 = select i1 %463, <2 x i32> %462, <2 x i32> <i32 0, i32 2146959360>
  %465 = bitcast <2 x i32> %464 to double
  %466 = fneg contract double %324
  %467 = fdiv contract double %466, %3
  %468 = tail call double @llvm.fabs.f64(double %467)
  %469 = fadd double %468, 0xBFE62E42FEFA39EF
  %470 = fsub double %469, %468
  %471 = fsub double %470, %469
  %472 = fadd double %468, %471
  %473 = fadd double %470, 0x3FE62E42FEFA39EF
  %474 = fsub double %472, %473
  %475 = fadd double %474, 0xBC7ABC9E3B39803F
  %476 = fadd double %469, %475
  %477 = fsub double %476, %469
  %478 = fsub double %475, %477
  %479 = fmul double %476, 0x3FF71547652B82FE
  %480 = tail call double @llvm.rint.f64(double %479)
  %481 = tail call double @llvm.fma.f64(double %480, double 0xBFE62E42FEFA3000, double %476)
  %482 = fadd double %478, %481
  %483 = fsub double %482, %481
  %484 = fsub double %478, %483
  %485 = fmul double %480, 0x3D53DE6AF278E000
  %486 = fsub double %482, %485
  %487 = fsub double %482, %486
  %488 = fsub double %487, %485
  %489 = fadd double %484, %488
  %490 = fadd double %486, %489
  %491 = fsub double %490, %486
  %492 = fsub double %489, %491
  %493 = fmul double %480, 0x3AC9CC01F97B57A0
  %494 = fsub double %490, %493
  %495 = fsub double %490, %494
  %496 = fsub double %495, %493
  %497 = fadd double %492, %496
  %498 = fadd double %494, %497
  %499 = fsub double %498, %494
  %500 = fsub double %497, %499
  %501 = tail call double @llvm.fma.f64(double %498, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %502 = tail call double @llvm.fma.f64(double %498, double %501, double 0x3EC71DEE623FDE64)
  %503 = tail call double @llvm.fma.f64(double %498, double %502, double 0x3EFA01997C89E6B0)
  %504 = tail call double @llvm.fma.f64(double %498, double %503, double 0x3F2A01A014761F6E)
  %505 = tail call double @llvm.fma.f64(double %498, double %504, double 0x3F56C16C1852B7B0)
  %506 = tail call double @llvm.fma.f64(double %498, double %505, double 0x3F81111111122322)
  %507 = tail call double @llvm.fma.f64(double %498, double %506, double 0x3FA55555555502A1)
  %508 = tail call double @llvm.fma.f64(double %498, double %507, double 0x3FC5555555555511)
  %509 = tail call double @llvm.fma.f64(double %498, double %508, double 0x3FE000000000000B)
  %510 = fmul double %498, %498
  %511 = fneg double %510
  %512 = tail call double @llvm.fma.f64(double %498, double %498, double %511)
  %513 = fmul double %500, 2.000000e+00
  %514 = tail call double @llvm.fma.f64(double %498, double %513, double %512)
  %515 = fadd double %510, %514
  %516 = fsub double %515, %510
  %517 = fsub double %514, %516
  %518 = fmul double %515, %509
  %519 = fneg double %518
  %520 = tail call double @llvm.fma.f64(double %515, double %509, double %519)
  %521 = tail call double @llvm.fma.f64(double %517, double %509, double %520)
  %522 = fadd double %518, %521
  %523 = fsub double %522, %518
  %524 = fsub double %521, %523
  %525 = fadd double %498, %522
  %526 = fsub double %525, %498
  %527 = fsub double %522, %526
  %528 = fadd double %500, %524
  %529 = fadd double %528, %527
  %530 = fadd double %525, %529
  %531 = fsub double %530, %525
  %532 = fsub double %529, %531
  %533 = fadd double %530, 1.000000e+00
  %534 = fadd double %533, -1.000000e+00
  %535 = fsub double %530, %534
  %536 = fadd double %532, %535
  %537 = fadd double %533, %536
  %538 = fsub double %537, %533
  %539 = fsub double %536, %538
  %540 = fptosi double %480 to i32
  %541 = tail call double @llvm.amdgcn.ldexp.f64(double %537, i32 %540)
  %542 = tail call double @llvm.amdgcn.ldexp.f64(double %539, i32 %540)
  %543 = tail call double @llvm.amdgcn.rcp.f64(double %541)
  %544 = fneg double %541
  %545 = tail call double @llvm.fma.f64(double %544, double %543, double 1.000000e+00)
  %546 = tail call double @llvm.fma.f64(double %545, double %543, double %543)
  %547 = tail call double @llvm.fma.f64(double %544, double %546, double 1.000000e+00)
  %548 = tail call double @llvm.fma.f64(double %547, double %546, double %546)
  %549 = fmul double %541, %548
  %550 = fneg double %549
  %551 = tail call double @llvm.fma.f64(double %548, double %541, double %550)
  %552 = tail call double @llvm.fma.f64(double %548, double %542, double %551)
  %553 = fadd double %549, %552
  %554 = fsub double %553, %549
  %555 = fsub double %552, %554
  %556 = fsub double 1.000000e+00, %553
  %557 = fsub double 1.000000e+00, %556
  %558 = fsub double %557, %553
  %559 = fsub double %558, %555
  %560 = fadd double %556, %559
  %561 = fsub double %560, %556
  %562 = fsub double %559, %561
  %563 = fmul double %548, %560
  %564 = fmul double %541, %563
  %565 = fneg double %564
  %566 = tail call double @llvm.fma.f64(double %563, double %541, double %565)
  %567 = tail call double @llvm.fma.f64(double %563, double %542, double %566)
  %568 = fadd double %564, %567
  %569 = fsub double %568, %564
  %570 = fsub double %567, %569
  %571 = fsub double %560, %568
  %572 = fsub double %560, %571
  %573 = fsub double %572, %568
  %574 = fadd double %562, %573
  %575 = fsub double %574, %570
  %576 = fadd double %571, %575
  %577 = fmul double %548, %576
  %578 = fadd double %548, %563
  %579 = fsub double %578, %548
  %580 = fsub double %563, %579
  %581 = fadd double %580, %577
  %582 = fadd double %578, %581
  %583 = fsub double %582, %578
  %584 = fsub double %581, %583
  %585 = tail call double @llvm.amdgcn.ldexp.f64(double %582, i32 -2)
  %586 = tail call double @llvm.amdgcn.ldexp.f64(double %584, i32 -2)
  %587 = fadd double %541, %585
  %588 = fsub double %587, %541
  %589 = fsub double %585, %588
  %590 = fadd double %542, %586
  %591 = fadd double %590, %589
  %592 = fadd double %587, %591
  %593 = fcmp oge double %468, 0x408633CE8FB9F87E
  %594 = select i1 %593, double 0x7FF0000000000000, double %592
  %595 = fdiv contract double %465, %594
  %596 = fadd contract double %323, %595
  %597 = fmul contract double %596, 0x3F39086C9DA08871
  %598 = fadd contract double %32, %51
  %599 = fsub contract double %598, %7
  %600 = fmul contract double %599, %2
  %601 = tail call double @llvm.fabs.f64(double %600)
  %602 = fcmp olt double %601, 0x41D0000000000000
  br i1 %602, label %603, label %622

603:                                              ; preds = %423
  %604 = fmul double %601, 0x3FE45F306DC9C883
  %605 = tail call double @llvm.rint.f64(double %604)
  %606 = tail call double @llvm.fma.f64(double %605, double 0xBFF921FB54442D18, double %601)
  %607 = tail call double @llvm.fma.f64(double %605, double 0xBC91A62633145C00, double %606)
  %608 = fmul double %605, 0x3C91A62633145C00
  %609 = fneg double %608
  %610 = tail call double @llvm.fma.f64(double %605, double 0x3C91A62633145C00, double %609)
  %611 = fsub double %606, %608
  %612 = fsub double %606, %611
  %613 = fsub double %612, %608
  %614 = fsub double %611, %607
  %615 = fadd double %614, %613
  %616 = fsub double %615, %610
  %617 = tail call double @llvm.fma.f64(double %605, double 0xB97B839A252049C0, double %616)
  %618 = fadd double %607, %617
  %619 = fsub double %618, %607
  %620 = fsub double %617, %619
  %621 = fptosi double %605 to i32
  br label %698

622:                                              ; preds = %423
  %623 = tail call double @llvm.amdgcn.trig.preop.f64(double %601, i32 0)
  %624 = tail call double @llvm.amdgcn.trig.preop.f64(double %601, i32 1)
  %625 = tail call double @llvm.amdgcn.trig.preop.f64(double %601, i32 2)
  %626 = fcmp oge double %601, 0x7B00000000000000
  %627 = tail call double @llvm.amdgcn.ldexp.f64(double %601, i32 -128)
  %628 = select i1 %626, double %627, double %601
  %629 = fmul double %625, %628
  %630 = fneg double %629
  %631 = tail call double @llvm.fma.f64(double %625, double %628, double %630)
  %632 = fmul double %624, %628
  %633 = fneg double %632
  %634 = tail call double @llvm.fma.f64(double %624, double %628, double %633)
  %635 = fmul double %623, %628
  %636 = fneg double %635
  %637 = tail call double @llvm.fma.f64(double %623, double %628, double %636)
  %638 = fadd double %632, %637
  %639 = fsub double %638, %632
  %640 = fsub double %638, %639
  %641 = fsub double %637, %639
  %642 = fsub double %632, %640
  %643 = fadd double %641, %642
  %644 = fadd double %629, %634
  %645 = fsub double %644, %629
  %646 = fsub double %644, %645
  %647 = fsub double %634, %645
  %648 = fsub double %629, %646
  %649 = fadd double %647, %648
  %650 = fadd double %644, %643
  %651 = fsub double %650, %644
  %652 = fsub double %650, %651
  %653 = fsub double %643, %651
  %654 = fsub double %644, %652
  %655 = fadd double %653, %654
  %656 = fadd double %649, %655
  %657 = fadd double %631, %656
  %658 = fadd double %635, %638
  %659 = fsub double %658, %635
  %660 = fsub double %638, %659
  %661 = fadd double %660, %650
  %662 = fsub double %661, %660
  %663 = fsub double %650, %662
  %664 = fadd double %663, %657
  %665 = tail call double @llvm.amdgcn.ldexp.f64(double %658, i32 -2)
  %666 = tail call double @llvm.amdgcn.fract.f64(double %665)
  %667 = tail call i1 @llvm.amdgcn.class.f64(double %665, i32 516)
  %668 = select i1 %667, double 0.000000e+00, double %666
  %669 = tail call double @llvm.amdgcn.ldexp.f64(double %668, i32 2)
  %670 = fadd double %669, %661
  %671 = fcmp olt double %670, 0.000000e+00
  %672 = select i1 %671, double 4.000000e+00, double 0.000000e+00
  %673 = fadd double %669, %672
  %674 = fadd double %661, %673
  %675 = fptosi double %674 to i32
  %676 = sitofp i32 %675 to double
  %677 = fsub double %673, %676
  %678 = fadd double %661, %677
  %679 = fsub double %678, %677
  %680 = fsub double %661, %679
  %681 = fadd double %664, %680
  %682 = fcmp oge double %678, 5.000000e-01
  %683 = zext i1 %682 to i32
  %684 = add nsw i32 %683, %675
  %685 = select i1 %682, double 1.000000e+00, double 0.000000e+00
  %686 = fsub double %678, %685
  %687 = fadd double %686, %681
  %688 = fsub double %687, %686
  %689 = fsub double %681, %688
  %690 = fmul double %687, 0x3FF921FB54442D18
  %691 = fneg double %690
  %692 = tail call double @llvm.fma.f64(double %687, double 0x3FF921FB54442D18, double %691)
  %693 = tail call double @llvm.fma.f64(double %687, double 0x3C91A62633145C07, double %692)
  %694 = tail call double @llvm.fma.f64(double %689, double 0x3FF921FB54442D18, double %693)
  %695 = fadd double %690, %694
  %696 = fsub double %695, %690
  %697 = fsub double %694, %696
  br label %698

698:                                              ; preds = %603, %622
  %699 = phi double [ %620, %603 ], [ %697, %622 ]
  %700 = phi double [ %618, %603 ], [ %695, %622 ]
  %701 = phi i32 [ %621, %603 ], [ %684, %622 ]
  %702 = fmul double %700, %700
  %703 = fmul double %702, 5.000000e-01
  %704 = fsub double 1.000000e+00, %703
  %705 = fsub double 1.000000e+00, %704
  %706 = fsub double %705, %703
  %707 = fmul double %702, %702
  %708 = tail call double @llvm.fma.f64(double %702, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %709 = tail call double @llvm.fma.f64(double %702, double %708, double 0xBE927E4FA17F65F6)
  %710 = tail call double @llvm.fma.f64(double %702, double %709, double 0x3EFA01A019F4EC90)
  %711 = tail call double @llvm.fma.f64(double %702, double %710, double 0xBF56C16C16C16967)
  %712 = tail call double @llvm.fma.f64(double %702, double %711, double 0x3FA5555555555555)
  %713 = fneg double %699
  %714 = tail call double @llvm.fma.f64(double %700, double %713, double %706)
  %715 = tail call double @llvm.fma.f64(double %707, double %712, double %714)
  %716 = fadd double %704, %715
  %717 = tail call double @llvm.fma.f64(double %702, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %718 = tail call double @llvm.fma.f64(double %702, double %717, double 0x3EC71DE3796CDE01)
  %719 = tail call double @llvm.fma.f64(double %702, double %718, double 0xBF2A01A019E83E5C)
  %720 = tail call double @llvm.fma.f64(double %702, double %719, double 0x3F81111111110BB3)
  %721 = fneg double %702
  %722 = fmul double %700, %721
  %723 = fmul double %699, 5.000000e-01
  %724 = tail call double @llvm.fma.f64(double %722, double %720, double %723)
  %725 = tail call double @llvm.fma.f64(double %702, double %724, double %713)
  %726 = tail call double @llvm.fma.f64(double %722, double 0xBFC5555555555555, double %725)
  %727 = fsub double %700, %726
  %728 = fneg double %727
  %729 = and i32 %701, 1
  %730 = icmp eq i32 %729, 0
  %731 = select i1 %730, double %716, double %728
  %732 = bitcast double %731 to <2 x i32>
  %733 = shl i32 %701, 30
  %734 = and i32 %733, -2147483648
  %735 = extractelement <2 x i32> %732, i64 1
  %736 = xor i32 %735, %734
  %737 = insertelement <2 x i32> %732, i32 %736, i64 1
  %738 = tail call i1 @llvm.amdgcn.class.f64(double %601, i32 504)
  %739 = select i1 %738, <2 x i32> %737, <2 x i32> <i32 0, i32 2146959360>
  %740 = bitcast <2 x i32> %739 to double
  %741 = fneg contract double %599
  %742 = fdiv contract double %741, %3
  %743 = tail call double @llvm.fabs.f64(double %742)
  %744 = fadd double %743, 0xBFE62E42FEFA39EF
  %745 = fsub double %744, %743
  %746 = fsub double %745, %744
  %747 = fadd double %743, %746
  %748 = fadd double %745, 0x3FE62E42FEFA39EF
  %749 = fsub double %747, %748
  %750 = fadd double %749, 0xBC7ABC9E3B39803F
  %751 = fadd double %744, %750
  %752 = fsub double %751, %744
  %753 = fsub double %750, %752
  %754 = fmul double %751, 0x3FF71547652B82FE
  %755 = tail call double @llvm.rint.f64(double %754)
  %756 = tail call double @llvm.fma.f64(double %755, double 0xBFE62E42FEFA3000, double %751)
  %757 = fadd double %753, %756
  %758 = fsub double %757, %756
  %759 = fsub double %753, %758
  %760 = fmul double %755, 0x3D53DE6AF278E000
  %761 = fsub double %757, %760
  %762 = fsub double %757, %761
  %763 = fsub double %762, %760
  %764 = fadd double %759, %763
  %765 = fadd double %761, %764
  %766 = fsub double %765, %761
  %767 = fsub double %764, %766
  %768 = fmul double %755, 0x3AC9CC01F97B57A0
  %769 = fsub double %765, %768
  %770 = fsub double %765, %769
  %771 = fsub double %770, %768
  %772 = fadd double %767, %771
  %773 = fadd double %769, %772
  %774 = fsub double %773, %769
  %775 = fsub double %772, %774
  %776 = tail call double @llvm.fma.f64(double %773, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %777 = tail call double @llvm.fma.f64(double %773, double %776, double 0x3EC71DEE623FDE64)
  %778 = tail call double @llvm.fma.f64(double %773, double %777, double 0x3EFA01997C89E6B0)
  %779 = tail call double @llvm.fma.f64(double %773, double %778, double 0x3F2A01A014761F6E)
  %780 = tail call double @llvm.fma.f64(double %773, double %779, double 0x3F56C16C1852B7B0)
  %781 = tail call double @llvm.fma.f64(double %773, double %780, double 0x3F81111111122322)
  %782 = tail call double @llvm.fma.f64(double %773, double %781, double 0x3FA55555555502A1)
  %783 = tail call double @llvm.fma.f64(double %773, double %782, double 0x3FC5555555555511)
  %784 = tail call double @llvm.fma.f64(double %773, double %783, double 0x3FE000000000000B)
  %785 = fmul double %773, %773
  %786 = fneg double %785
  %787 = tail call double @llvm.fma.f64(double %773, double %773, double %786)
  %788 = fmul double %775, 2.000000e+00
  %789 = tail call double @llvm.fma.f64(double %773, double %788, double %787)
  %790 = fadd double %785, %789
  %791 = fsub double %790, %785
  %792 = fsub double %789, %791
  %793 = fmul double %790, %784
  %794 = fneg double %793
  %795 = tail call double @llvm.fma.f64(double %790, double %784, double %794)
  %796 = tail call double @llvm.fma.f64(double %792, double %784, double %795)
  %797 = fadd double %793, %796
  %798 = fsub double %797, %793
  %799 = fsub double %796, %798
  %800 = fadd double %773, %797
  %801 = fsub double %800, %773
  %802 = fsub double %797, %801
  %803 = fadd double %775, %799
  %804 = fadd double %803, %802
  %805 = fadd double %800, %804
  %806 = fsub double %805, %800
  %807 = fsub double %804, %806
  %808 = fadd double %805, 1.000000e+00
  %809 = fadd double %808, -1.000000e+00
  %810 = fsub double %805, %809
  %811 = fadd double %807, %810
  %812 = fadd double %808, %811
  %813 = fsub double %812, %808
  %814 = fsub double %811, %813
  %815 = fptosi double %755 to i32
  %816 = tail call double @llvm.amdgcn.ldexp.f64(double %812, i32 %815)
  %817 = tail call double @llvm.amdgcn.ldexp.f64(double %814, i32 %815)
  %818 = tail call double @llvm.amdgcn.rcp.f64(double %816)
  %819 = fneg double %816
  %820 = tail call double @llvm.fma.f64(double %819, double %818, double 1.000000e+00)
  %821 = tail call double @llvm.fma.f64(double %820, double %818, double %818)
  %822 = tail call double @llvm.fma.f64(double %819, double %821, double 1.000000e+00)
  %823 = tail call double @llvm.fma.f64(double %822, double %821, double %821)
  %824 = fmul double %816, %823
  %825 = fneg double %824
  %826 = tail call double @llvm.fma.f64(double %823, double %816, double %825)
  %827 = tail call double @llvm.fma.f64(double %823, double %817, double %826)
  %828 = fadd double %824, %827
  %829 = fsub double %828, %824
  %830 = fsub double %827, %829
  %831 = fsub double 1.000000e+00, %828
  %832 = fsub double 1.000000e+00, %831
  %833 = fsub double %832, %828
  %834 = fsub double %833, %830
  %835 = fadd double %831, %834
  %836 = fsub double %835, %831
  %837 = fsub double %834, %836
  %838 = fmul double %823, %835
  %839 = fmul double %816, %838
  %840 = fneg double %839
  %841 = tail call double @llvm.fma.f64(double %838, double %816, double %840)
  %842 = tail call double @llvm.fma.f64(double %838, double %817, double %841)
  %843 = fadd double %839, %842
  %844 = fsub double %843, %839
  %845 = fsub double %842, %844
  %846 = fsub double %835, %843
  %847 = fsub double %835, %846
  %848 = fsub double %847, %843
  %849 = fadd double %837, %848
  %850 = fsub double %849, %845
  %851 = fadd double %846, %850
  %852 = fmul double %823, %851
  %853 = fadd double %823, %838
  %854 = fsub double %853, %823
  %855 = fsub double %838, %854
  %856 = fadd double %855, %852
  %857 = fadd double %853, %856
  %858 = fsub double %857, %853
  %859 = fsub double %856, %858
  %860 = tail call double @llvm.amdgcn.ldexp.f64(double %857, i32 -2)
  %861 = tail call double @llvm.amdgcn.ldexp.f64(double %859, i32 -2)
  %862 = fadd double %816, %860
  %863 = fsub double %862, %816
  %864 = fsub double %860, %863
  %865 = fadd double %817, %861
  %866 = fadd double %865, %864
  %867 = fadd double %862, %866
  %868 = fcmp oge double %743, 0x408633CE8FB9F87E
  %869 = select i1 %868, double 0x7FF0000000000000, double %867
  %870 = fdiv contract double %740, %869
  %871 = fadd contract double %31, %599
  %872 = fmul contract double %871, %2
  %873 = tail call double @llvm.fabs.f64(double %872)
  %874 = fcmp olt double %873, 0x41D0000000000000
  br i1 %874, label %875, label %894

875:                                              ; preds = %698
  %876 = fmul double %873, 0x3FE45F306DC9C883
  %877 = tail call double @llvm.rint.f64(double %876)
  %878 = tail call double @llvm.fma.f64(double %877, double 0xBFF921FB54442D18, double %873)
  %879 = tail call double @llvm.fma.f64(double %877, double 0xBC91A62633145C00, double %878)
  %880 = fmul double %877, 0x3C91A62633145C00
  %881 = fneg double %880
  %882 = tail call double @llvm.fma.f64(double %877, double 0x3C91A62633145C00, double %881)
  %883 = fsub double %878, %880
  %884 = fsub double %878, %883
  %885 = fsub double %884, %880
  %886 = fsub double %883, %879
  %887 = fadd double %886, %885
  %888 = fsub double %887, %882
  %889 = tail call double @llvm.fma.f64(double %877, double 0xB97B839A252049C0, double %888)
  %890 = fadd double %879, %889
  %891 = fsub double %890, %879
  %892 = fsub double %889, %891
  %893 = fptosi double %877 to i32
  br label %970

894:                                              ; preds = %698
  %895 = tail call double @llvm.amdgcn.trig.preop.f64(double %873, i32 0)
  %896 = tail call double @llvm.amdgcn.trig.preop.f64(double %873, i32 1)
  %897 = tail call double @llvm.amdgcn.trig.preop.f64(double %873, i32 2)
  %898 = fcmp oge double %873, 0x7B00000000000000
  %899 = tail call double @llvm.amdgcn.ldexp.f64(double %873, i32 -128)
  %900 = select i1 %898, double %899, double %873
  %901 = fmul double %897, %900
  %902 = fneg double %901
  %903 = tail call double @llvm.fma.f64(double %897, double %900, double %902)
  %904 = fmul double %896, %900
  %905 = fneg double %904
  %906 = tail call double @llvm.fma.f64(double %896, double %900, double %905)
  %907 = fmul double %895, %900
  %908 = fneg double %907
  %909 = tail call double @llvm.fma.f64(double %895, double %900, double %908)
  %910 = fadd double %904, %909
  %911 = fsub double %910, %904
  %912 = fsub double %910, %911
  %913 = fsub double %909, %911
  %914 = fsub double %904, %912
  %915 = fadd double %913, %914
  %916 = fadd double %901, %906
  %917 = fsub double %916, %901
  %918 = fsub double %916, %917
  %919 = fsub double %906, %917
  %920 = fsub double %901, %918
  %921 = fadd double %919, %920
  %922 = fadd double %916, %915
  %923 = fsub double %922, %916
  %924 = fsub double %922, %923
  %925 = fsub double %915, %923
  %926 = fsub double %916, %924
  %927 = fadd double %925, %926
  %928 = fadd double %921, %927
  %929 = fadd double %903, %928
  %930 = fadd double %907, %910
  %931 = fsub double %930, %907
  %932 = fsub double %910, %931
  %933 = fadd double %932, %922
  %934 = fsub double %933, %932
  %935 = fsub double %922, %934
  %936 = fadd double %935, %929
  %937 = tail call double @llvm.amdgcn.ldexp.f64(double %930, i32 -2)
  %938 = tail call double @llvm.amdgcn.fract.f64(double %937)
  %939 = tail call i1 @llvm.amdgcn.class.f64(double %937, i32 516)
  %940 = select i1 %939, double 0.000000e+00, double %938
  %941 = tail call double @llvm.amdgcn.ldexp.f64(double %940, i32 2)
  %942 = fadd double %941, %933
  %943 = fcmp olt double %942, 0.000000e+00
  %944 = select i1 %943, double 4.000000e+00, double 0.000000e+00
  %945 = fadd double %941, %944
  %946 = fadd double %933, %945
  %947 = fptosi double %946 to i32
  %948 = sitofp i32 %947 to double
  %949 = fsub double %945, %948
  %950 = fadd double %933, %949
  %951 = fsub double %950, %949
  %952 = fsub double %933, %951
  %953 = fadd double %936, %952
  %954 = fcmp oge double %950, 5.000000e-01
  %955 = zext i1 %954 to i32
  %956 = add nsw i32 %955, %947
  %957 = select i1 %954, double 1.000000e+00, double 0.000000e+00
  %958 = fsub double %950, %957
  %959 = fadd double %958, %953
  %960 = fsub double %959, %958
  %961 = fsub double %953, %960
  %962 = fmul double %959, 0x3FF921FB54442D18
  %963 = fneg double %962
  %964 = tail call double @llvm.fma.f64(double %959, double 0x3FF921FB54442D18, double %963)
  %965 = tail call double @llvm.fma.f64(double %959, double 0x3C91A62633145C07, double %964)
  %966 = tail call double @llvm.fma.f64(double %961, double 0x3FF921FB54442D18, double %965)
  %967 = fadd double %962, %966
  %968 = fsub double %967, %962
  %969 = fsub double %966, %968
  br label %970

970:                                              ; preds = %875, %894
  %971 = phi double [ %892, %875 ], [ %969, %894 ]
  %972 = phi double [ %890, %875 ], [ %967, %894 ]
  %973 = phi i32 [ %893, %875 ], [ %956, %894 ]
  %974 = fmul double %972, %972
  %975 = fmul double %974, 5.000000e-01
  %976 = fsub double 1.000000e+00, %975
  %977 = fsub double 1.000000e+00, %976
  %978 = fsub double %977, %975
  %979 = fmul double %974, %974
  %980 = tail call double @llvm.fma.f64(double %974, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %981 = tail call double @llvm.fma.f64(double %974, double %980, double 0xBE927E4FA17F65F6)
  %982 = tail call double @llvm.fma.f64(double %974, double %981, double 0x3EFA01A019F4EC90)
  %983 = tail call double @llvm.fma.f64(double %974, double %982, double 0xBF56C16C16C16967)
  %984 = tail call double @llvm.fma.f64(double %974, double %983, double 0x3FA5555555555555)
  %985 = fneg double %971
  %986 = tail call double @llvm.fma.f64(double %972, double %985, double %978)
  %987 = tail call double @llvm.fma.f64(double %979, double %984, double %986)
  %988 = fadd double %976, %987
  %989 = tail call double @llvm.fma.f64(double %974, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %990 = tail call double @llvm.fma.f64(double %974, double %989, double 0x3EC71DE3796CDE01)
  %991 = tail call double @llvm.fma.f64(double %974, double %990, double 0xBF2A01A019E83E5C)
  %992 = tail call double @llvm.fma.f64(double %974, double %991, double 0x3F81111111110BB3)
  %993 = fneg double %974
  %994 = fmul double %972, %993
  %995 = fmul double %971, 5.000000e-01
  %996 = tail call double @llvm.fma.f64(double %994, double %992, double %995)
  %997 = tail call double @llvm.fma.f64(double %974, double %996, double %985)
  %998 = tail call double @llvm.fma.f64(double %994, double 0xBFC5555555555555, double %997)
  %999 = fsub double %972, %998
  %1000 = fneg double %999
  %1001 = and i32 %973, 1
  %1002 = icmp eq i32 %1001, 0
  %1003 = select i1 %1002, double %988, double %1000
  %1004 = bitcast double %1003 to <2 x i32>
  %1005 = shl i32 %973, 30
  %1006 = and i32 %1005, -2147483648
  %1007 = extractelement <2 x i32> %1004, i64 1
  %1008 = xor i32 %1007, %1006
  %1009 = insertelement <2 x i32> %1004, i32 %1008, i64 1
  %1010 = tail call i1 @llvm.amdgcn.class.f64(double %873, i32 504)
  %1011 = select i1 %1010, <2 x i32> %1009, <2 x i32> <i32 0, i32 2146959360>
  %1012 = bitcast <2 x i32> %1011 to double
  %1013 = fneg contract double %871
  %1014 = fdiv contract double %1013, %3
  %1015 = tail call double @llvm.fabs.f64(double %1014)
  %1016 = fadd double %1015, 0xBFE62E42FEFA39EF
  %1017 = fsub double %1016, %1015
  %1018 = fsub double %1017, %1016
  %1019 = fadd double %1015, %1018
  %1020 = fadd double %1017, 0x3FE62E42FEFA39EF
  %1021 = fsub double %1019, %1020
  %1022 = fadd double %1021, 0xBC7ABC9E3B39803F
  %1023 = fadd double %1016, %1022
  %1024 = fsub double %1023, %1016
  %1025 = fsub double %1022, %1024
  %1026 = fmul double %1023, 0x3FF71547652B82FE
  %1027 = tail call double @llvm.rint.f64(double %1026)
  %1028 = tail call double @llvm.fma.f64(double %1027, double 0xBFE62E42FEFA3000, double %1023)
  %1029 = fadd double %1025, %1028
  %1030 = fsub double %1029, %1028
  %1031 = fsub double %1025, %1030
  %1032 = fmul double %1027, 0x3D53DE6AF278E000
  %1033 = fsub double %1029, %1032
  %1034 = fsub double %1029, %1033
  %1035 = fsub double %1034, %1032
  %1036 = fadd double %1031, %1035
  %1037 = fadd double %1033, %1036
  %1038 = fsub double %1037, %1033
  %1039 = fsub double %1036, %1038
  %1040 = fmul double %1027, 0x3AC9CC01F97B57A0
  %1041 = fsub double %1037, %1040
  %1042 = fsub double %1037, %1041
  %1043 = fsub double %1042, %1040
  %1044 = fadd double %1039, %1043
  %1045 = fadd double %1041, %1044
  %1046 = fsub double %1045, %1041
  %1047 = fsub double %1044, %1046
  %1048 = tail call double @llvm.fma.f64(double %1045, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1049 = tail call double @llvm.fma.f64(double %1045, double %1048, double 0x3EC71DEE623FDE64)
  %1050 = tail call double @llvm.fma.f64(double %1045, double %1049, double 0x3EFA01997C89E6B0)
  %1051 = tail call double @llvm.fma.f64(double %1045, double %1050, double 0x3F2A01A014761F6E)
  %1052 = tail call double @llvm.fma.f64(double %1045, double %1051, double 0x3F56C16C1852B7B0)
  %1053 = tail call double @llvm.fma.f64(double %1045, double %1052, double 0x3F81111111122322)
  %1054 = tail call double @llvm.fma.f64(double %1045, double %1053, double 0x3FA55555555502A1)
  %1055 = tail call double @llvm.fma.f64(double %1045, double %1054, double 0x3FC5555555555511)
  %1056 = tail call double @llvm.fma.f64(double %1045, double %1055, double 0x3FE000000000000B)
  %1057 = fmul double %1045, %1045
  %1058 = fneg double %1057
  %1059 = tail call double @llvm.fma.f64(double %1045, double %1045, double %1058)
  %1060 = fmul double %1047, 2.000000e+00
  %1061 = tail call double @llvm.fma.f64(double %1045, double %1060, double %1059)
  %1062 = fadd double %1057, %1061
  %1063 = fsub double %1062, %1057
  %1064 = fsub double %1061, %1063
  %1065 = fmul double %1062, %1056
  %1066 = fneg double %1065
  %1067 = tail call double @llvm.fma.f64(double %1062, double %1056, double %1066)
  %1068 = tail call double @llvm.fma.f64(double %1064, double %1056, double %1067)
  %1069 = fadd double %1065, %1068
  %1070 = fsub double %1069, %1065
  %1071 = fsub double %1068, %1070
  %1072 = fadd double %1045, %1069
  %1073 = fsub double %1072, %1045
  %1074 = fsub double %1069, %1073
  %1075 = fadd double %1047, %1071
  %1076 = fadd double %1075, %1074
  %1077 = fadd double %1072, %1076
  %1078 = fsub double %1077, %1072
  %1079 = fsub double %1076, %1078
  %1080 = fadd double %1077, 1.000000e+00
  %1081 = fadd double %1080, -1.000000e+00
  %1082 = fsub double %1077, %1081
  %1083 = fadd double %1079, %1082
  %1084 = fadd double %1080, %1083
  %1085 = fsub double %1084, %1080
  %1086 = fsub double %1083, %1085
  %1087 = fptosi double %1027 to i32
  %1088 = tail call double @llvm.amdgcn.ldexp.f64(double %1084, i32 %1087)
  %1089 = tail call double @llvm.amdgcn.ldexp.f64(double %1086, i32 %1087)
  %1090 = tail call double @llvm.amdgcn.rcp.f64(double %1088)
  %1091 = fneg double %1088
  %1092 = tail call double @llvm.fma.f64(double %1091, double %1090, double 1.000000e+00)
  %1093 = tail call double @llvm.fma.f64(double %1092, double %1090, double %1090)
  %1094 = tail call double @llvm.fma.f64(double %1091, double %1093, double 1.000000e+00)
  %1095 = tail call double @llvm.fma.f64(double %1094, double %1093, double %1093)
  %1096 = fmul double %1088, %1095
  %1097 = fneg double %1096
  %1098 = tail call double @llvm.fma.f64(double %1095, double %1088, double %1097)
  %1099 = tail call double @llvm.fma.f64(double %1095, double %1089, double %1098)
  %1100 = fadd double %1096, %1099
  %1101 = fsub double %1100, %1096
  %1102 = fsub double %1099, %1101
  %1103 = fsub double 1.000000e+00, %1100
  %1104 = fsub double 1.000000e+00, %1103
  %1105 = fsub double %1104, %1100
  %1106 = fsub double %1105, %1102
  %1107 = fadd double %1103, %1106
  %1108 = fsub double %1107, %1103
  %1109 = fsub double %1106, %1108
  %1110 = fmul double %1095, %1107
  %1111 = fmul double %1088, %1110
  %1112 = fneg double %1111
  %1113 = tail call double @llvm.fma.f64(double %1110, double %1088, double %1112)
  %1114 = tail call double @llvm.fma.f64(double %1110, double %1089, double %1113)
  %1115 = fadd double %1111, %1114
  %1116 = fsub double %1115, %1111
  %1117 = fsub double %1114, %1116
  %1118 = fsub double %1107, %1115
  %1119 = fsub double %1107, %1118
  %1120 = fsub double %1119, %1115
  %1121 = fadd double %1109, %1120
  %1122 = fsub double %1121, %1117
  %1123 = fadd double %1118, %1122
  %1124 = fmul double %1095, %1123
  %1125 = fadd double %1095, %1110
  %1126 = fsub double %1125, %1095
  %1127 = fsub double %1110, %1126
  %1128 = fadd double %1127, %1124
  %1129 = fadd double %1125, %1128
  %1130 = fsub double %1129, %1125
  %1131 = fsub double %1128, %1130
  %1132 = tail call double @llvm.amdgcn.ldexp.f64(double %1129, i32 -2)
  %1133 = tail call double @llvm.amdgcn.ldexp.f64(double %1131, i32 -2)
  %1134 = fadd double %1088, %1132
  %1135 = fsub double %1134, %1088
  %1136 = fsub double %1132, %1135
  %1137 = fadd double %1089, %1133
  %1138 = fadd double %1137, %1136
  %1139 = fadd double %1134, %1138
  %1140 = fcmp oge double %1015, 0x408633CE8FB9F87E
  %1141 = select i1 %1140, double 0x7FF0000000000000, double %1139
  %1142 = fdiv contract double %1012, %1141
  %1143 = fadd contract double %870, %1142
  %1144 = fmul contract double %1143, 0x3F39086C9DA08871
  %1145 = fadd contract double %28, %51
  %1146 = fsub contract double %1145, %7
  %1147 = fmul contract double %1146, %2
  %1148 = tail call double @llvm.fabs.f64(double %1147)
  %1149 = fcmp olt double %1148, 0x41D0000000000000
  br i1 %1149, label %1150, label %1169

1150:                                             ; preds = %970
  %1151 = fmul double %1148, 0x3FE45F306DC9C883
  %1152 = tail call double @llvm.rint.f64(double %1151)
  %1153 = tail call double @llvm.fma.f64(double %1152, double 0xBFF921FB54442D18, double %1148)
  %1154 = tail call double @llvm.fma.f64(double %1152, double 0xBC91A62633145C00, double %1153)
  %1155 = fmul double %1152, 0x3C91A62633145C00
  %1156 = fneg double %1155
  %1157 = tail call double @llvm.fma.f64(double %1152, double 0x3C91A62633145C00, double %1156)
  %1158 = fsub double %1153, %1155
  %1159 = fsub double %1153, %1158
  %1160 = fsub double %1159, %1155
  %1161 = fsub double %1158, %1154
  %1162 = fadd double %1161, %1160
  %1163 = fsub double %1162, %1157
  %1164 = tail call double @llvm.fma.f64(double %1152, double 0xB97B839A252049C0, double %1163)
  %1165 = fadd double %1154, %1164
  %1166 = fsub double %1165, %1154
  %1167 = fsub double %1164, %1166
  %1168 = fptosi double %1152 to i32
  br label %1245

1169:                                             ; preds = %970
  %1170 = tail call double @llvm.amdgcn.trig.preop.f64(double %1148, i32 0)
  %1171 = tail call double @llvm.amdgcn.trig.preop.f64(double %1148, i32 1)
  %1172 = tail call double @llvm.amdgcn.trig.preop.f64(double %1148, i32 2)
  %1173 = fcmp oge double %1148, 0x7B00000000000000
  %1174 = tail call double @llvm.amdgcn.ldexp.f64(double %1148, i32 -128)
  %1175 = select i1 %1173, double %1174, double %1148
  %1176 = fmul double %1172, %1175
  %1177 = fneg double %1176
  %1178 = tail call double @llvm.fma.f64(double %1172, double %1175, double %1177)
  %1179 = fmul double %1171, %1175
  %1180 = fneg double %1179
  %1181 = tail call double @llvm.fma.f64(double %1171, double %1175, double %1180)
  %1182 = fmul double %1170, %1175
  %1183 = fneg double %1182
  %1184 = tail call double @llvm.fma.f64(double %1170, double %1175, double %1183)
  %1185 = fadd double %1179, %1184
  %1186 = fsub double %1185, %1179
  %1187 = fsub double %1185, %1186
  %1188 = fsub double %1184, %1186
  %1189 = fsub double %1179, %1187
  %1190 = fadd double %1188, %1189
  %1191 = fadd double %1176, %1181
  %1192 = fsub double %1191, %1176
  %1193 = fsub double %1191, %1192
  %1194 = fsub double %1181, %1192
  %1195 = fsub double %1176, %1193
  %1196 = fadd double %1194, %1195
  %1197 = fadd double %1191, %1190
  %1198 = fsub double %1197, %1191
  %1199 = fsub double %1197, %1198
  %1200 = fsub double %1190, %1198
  %1201 = fsub double %1191, %1199
  %1202 = fadd double %1200, %1201
  %1203 = fadd double %1196, %1202
  %1204 = fadd double %1178, %1203
  %1205 = fadd double %1182, %1185
  %1206 = fsub double %1205, %1182
  %1207 = fsub double %1185, %1206
  %1208 = fadd double %1207, %1197
  %1209 = fsub double %1208, %1207
  %1210 = fsub double %1197, %1209
  %1211 = fadd double %1210, %1204
  %1212 = tail call double @llvm.amdgcn.ldexp.f64(double %1205, i32 -2)
  %1213 = tail call double @llvm.amdgcn.fract.f64(double %1212)
  %1214 = tail call i1 @llvm.amdgcn.class.f64(double %1212, i32 516)
  %1215 = select i1 %1214, double 0.000000e+00, double %1213
  %1216 = tail call double @llvm.amdgcn.ldexp.f64(double %1215, i32 2)
  %1217 = fadd double %1216, %1208
  %1218 = fcmp olt double %1217, 0.000000e+00
  %1219 = select i1 %1218, double 4.000000e+00, double 0.000000e+00
  %1220 = fadd double %1216, %1219
  %1221 = fadd double %1208, %1220
  %1222 = fptosi double %1221 to i32
  %1223 = sitofp i32 %1222 to double
  %1224 = fsub double %1220, %1223
  %1225 = fadd double %1208, %1224
  %1226 = fsub double %1225, %1224
  %1227 = fsub double %1208, %1226
  %1228 = fadd double %1211, %1227
  %1229 = fcmp oge double %1225, 5.000000e-01
  %1230 = zext i1 %1229 to i32
  %1231 = add nsw i32 %1230, %1222
  %1232 = select i1 %1229, double 1.000000e+00, double 0.000000e+00
  %1233 = fsub double %1225, %1232
  %1234 = fadd double %1233, %1228
  %1235 = fsub double %1234, %1233
  %1236 = fsub double %1228, %1235
  %1237 = fmul double %1234, 0x3FF921FB54442D18
  %1238 = fneg double %1237
  %1239 = tail call double @llvm.fma.f64(double %1234, double 0x3FF921FB54442D18, double %1238)
  %1240 = tail call double @llvm.fma.f64(double %1234, double 0x3C91A62633145C07, double %1239)
  %1241 = tail call double @llvm.fma.f64(double %1236, double 0x3FF921FB54442D18, double %1240)
  %1242 = fadd double %1237, %1241
  %1243 = fsub double %1242, %1237
  %1244 = fsub double %1241, %1243
  br label %1245

1245:                                             ; preds = %1150, %1169
  %1246 = phi double [ %1167, %1150 ], [ %1244, %1169 ]
  %1247 = phi double [ %1165, %1150 ], [ %1242, %1169 ]
  %1248 = phi i32 [ %1168, %1150 ], [ %1231, %1169 ]
  %1249 = fmul double %1247, %1247
  %1250 = fmul double %1249, 5.000000e-01
  %1251 = fsub double 1.000000e+00, %1250
  %1252 = fsub double 1.000000e+00, %1251
  %1253 = fsub double %1252, %1250
  %1254 = fmul double %1249, %1249
  %1255 = tail call double @llvm.fma.f64(double %1249, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %1256 = tail call double @llvm.fma.f64(double %1249, double %1255, double 0xBE927E4FA17F65F6)
  %1257 = tail call double @llvm.fma.f64(double %1249, double %1256, double 0x3EFA01A019F4EC90)
  %1258 = tail call double @llvm.fma.f64(double %1249, double %1257, double 0xBF56C16C16C16967)
  %1259 = tail call double @llvm.fma.f64(double %1249, double %1258, double 0x3FA5555555555555)
  %1260 = fneg double %1246
  %1261 = tail call double @llvm.fma.f64(double %1247, double %1260, double %1253)
  %1262 = tail call double @llvm.fma.f64(double %1254, double %1259, double %1261)
  %1263 = fadd double %1251, %1262
  %1264 = tail call double @llvm.fma.f64(double %1249, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %1265 = tail call double @llvm.fma.f64(double %1249, double %1264, double 0x3EC71DE3796CDE01)
  %1266 = tail call double @llvm.fma.f64(double %1249, double %1265, double 0xBF2A01A019E83E5C)
  %1267 = tail call double @llvm.fma.f64(double %1249, double %1266, double 0x3F81111111110BB3)
  %1268 = fneg double %1249
  %1269 = fmul double %1247, %1268
  %1270 = fmul double %1246, 5.000000e-01
  %1271 = tail call double @llvm.fma.f64(double %1269, double %1267, double %1270)
  %1272 = tail call double @llvm.fma.f64(double %1249, double %1271, double %1260)
  %1273 = tail call double @llvm.fma.f64(double %1269, double 0xBFC5555555555555, double %1272)
  %1274 = fsub double %1247, %1273
  %1275 = fneg double %1274
  %1276 = and i32 %1248, 1
  %1277 = icmp eq i32 %1276, 0
  %1278 = select i1 %1277, double %1263, double %1275
  %1279 = bitcast double %1278 to <2 x i32>
  %1280 = shl i32 %1248, 30
  %1281 = and i32 %1280, -2147483648
  %1282 = extractelement <2 x i32> %1279, i64 1
  %1283 = xor i32 %1282, %1281
  %1284 = insertelement <2 x i32> %1279, i32 %1283, i64 1
  %1285 = tail call i1 @llvm.amdgcn.class.f64(double %1148, i32 504)
  %1286 = select i1 %1285, <2 x i32> %1284, <2 x i32> <i32 0, i32 2146959360>
  %1287 = bitcast <2 x i32> %1286 to double
  %1288 = fneg contract double %1146
  %1289 = fdiv contract double %1288, %3
  %1290 = tail call double @llvm.fabs.f64(double %1289)
  %1291 = fadd double %1290, 0xBFE62E42FEFA39EF
  %1292 = fsub double %1291, %1290
  %1293 = fsub double %1292, %1291
  %1294 = fadd double %1290, %1293
  %1295 = fadd double %1292, 0x3FE62E42FEFA39EF
  %1296 = fsub double %1294, %1295
  %1297 = fadd double %1296, 0xBC7ABC9E3B39803F
  %1298 = fadd double %1291, %1297
  %1299 = fsub double %1298, %1291
  %1300 = fsub double %1297, %1299
  %1301 = fmul double %1298, 0x3FF71547652B82FE
  %1302 = tail call double @llvm.rint.f64(double %1301)
  %1303 = tail call double @llvm.fma.f64(double %1302, double 0xBFE62E42FEFA3000, double %1298)
  %1304 = fadd double %1300, %1303
  %1305 = fsub double %1304, %1303
  %1306 = fsub double %1300, %1305
  %1307 = fmul double %1302, 0x3D53DE6AF278E000
  %1308 = fsub double %1304, %1307
  %1309 = fsub double %1304, %1308
  %1310 = fsub double %1309, %1307
  %1311 = fadd double %1306, %1310
  %1312 = fadd double %1308, %1311
  %1313 = fsub double %1312, %1308
  %1314 = fsub double %1311, %1313
  %1315 = fmul double %1302, 0x3AC9CC01F97B57A0
  %1316 = fsub double %1312, %1315
  %1317 = fsub double %1312, %1316
  %1318 = fsub double %1317, %1315
  %1319 = fadd double %1314, %1318
  %1320 = fadd double %1316, %1319
  %1321 = fsub double %1320, %1316
  %1322 = fsub double %1319, %1321
  %1323 = tail call double @llvm.fma.f64(double %1320, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1324 = tail call double @llvm.fma.f64(double %1320, double %1323, double 0x3EC71DEE623FDE64)
  %1325 = tail call double @llvm.fma.f64(double %1320, double %1324, double 0x3EFA01997C89E6B0)
  %1326 = tail call double @llvm.fma.f64(double %1320, double %1325, double 0x3F2A01A014761F6E)
  %1327 = tail call double @llvm.fma.f64(double %1320, double %1326, double 0x3F56C16C1852B7B0)
  %1328 = tail call double @llvm.fma.f64(double %1320, double %1327, double 0x3F81111111122322)
  %1329 = tail call double @llvm.fma.f64(double %1320, double %1328, double 0x3FA55555555502A1)
  %1330 = tail call double @llvm.fma.f64(double %1320, double %1329, double 0x3FC5555555555511)
  %1331 = tail call double @llvm.fma.f64(double %1320, double %1330, double 0x3FE000000000000B)
  %1332 = fmul double %1320, %1320
  %1333 = fneg double %1332
  %1334 = tail call double @llvm.fma.f64(double %1320, double %1320, double %1333)
  %1335 = fmul double %1322, 2.000000e+00
  %1336 = tail call double @llvm.fma.f64(double %1320, double %1335, double %1334)
  %1337 = fadd double %1332, %1336
  %1338 = fsub double %1337, %1332
  %1339 = fsub double %1336, %1338
  %1340 = fmul double %1337, %1331
  %1341 = fneg double %1340
  %1342 = tail call double @llvm.fma.f64(double %1337, double %1331, double %1341)
  %1343 = tail call double @llvm.fma.f64(double %1339, double %1331, double %1342)
  %1344 = fadd double %1340, %1343
  %1345 = fsub double %1344, %1340
  %1346 = fsub double %1343, %1345
  %1347 = fadd double %1320, %1344
  %1348 = fsub double %1347, %1320
  %1349 = fsub double %1344, %1348
  %1350 = fadd double %1322, %1346
  %1351 = fadd double %1350, %1349
  %1352 = fadd double %1347, %1351
  %1353 = fsub double %1352, %1347
  %1354 = fsub double %1351, %1353
  %1355 = fadd double %1352, 1.000000e+00
  %1356 = fadd double %1355, -1.000000e+00
  %1357 = fsub double %1352, %1356
  %1358 = fadd double %1354, %1357
  %1359 = fadd double %1355, %1358
  %1360 = fsub double %1359, %1355
  %1361 = fsub double %1358, %1360
  %1362 = fptosi double %1302 to i32
  %1363 = tail call double @llvm.amdgcn.ldexp.f64(double %1359, i32 %1362)
  %1364 = tail call double @llvm.amdgcn.ldexp.f64(double %1361, i32 %1362)
  %1365 = tail call double @llvm.amdgcn.rcp.f64(double %1363)
  %1366 = fneg double %1363
  %1367 = tail call double @llvm.fma.f64(double %1366, double %1365, double 1.000000e+00)
  %1368 = tail call double @llvm.fma.f64(double %1367, double %1365, double %1365)
  %1369 = tail call double @llvm.fma.f64(double %1366, double %1368, double 1.000000e+00)
  %1370 = tail call double @llvm.fma.f64(double %1369, double %1368, double %1368)
  %1371 = fmul double %1363, %1370
  %1372 = fneg double %1371
  %1373 = tail call double @llvm.fma.f64(double %1370, double %1363, double %1372)
  %1374 = tail call double @llvm.fma.f64(double %1370, double %1364, double %1373)
  %1375 = fadd double %1371, %1374
  %1376 = fsub double %1375, %1371
  %1377 = fsub double %1374, %1376
  %1378 = fsub double 1.000000e+00, %1375
  %1379 = fsub double 1.000000e+00, %1378
  %1380 = fsub double %1379, %1375
  %1381 = fsub double %1380, %1377
  %1382 = fadd double %1378, %1381
  %1383 = fsub double %1382, %1378
  %1384 = fsub double %1381, %1383
  %1385 = fmul double %1370, %1382
  %1386 = fmul double %1363, %1385
  %1387 = fneg double %1386
  %1388 = tail call double @llvm.fma.f64(double %1385, double %1363, double %1387)
  %1389 = tail call double @llvm.fma.f64(double %1385, double %1364, double %1388)
  %1390 = fadd double %1386, %1389
  %1391 = fsub double %1390, %1386
  %1392 = fsub double %1389, %1391
  %1393 = fsub double %1382, %1390
  %1394 = fsub double %1382, %1393
  %1395 = fsub double %1394, %1390
  %1396 = fadd double %1384, %1395
  %1397 = fsub double %1396, %1392
  %1398 = fadd double %1393, %1397
  %1399 = fmul double %1370, %1398
  %1400 = fadd double %1370, %1385
  %1401 = fsub double %1400, %1370
  %1402 = fsub double %1385, %1401
  %1403 = fadd double %1402, %1399
  %1404 = fadd double %1400, %1403
  %1405 = fsub double %1404, %1400
  %1406 = fsub double %1403, %1405
  %1407 = tail call double @llvm.amdgcn.ldexp.f64(double %1404, i32 -2)
  %1408 = tail call double @llvm.amdgcn.ldexp.f64(double %1406, i32 -2)
  %1409 = fadd double %1363, %1407
  %1410 = fsub double %1409, %1363
  %1411 = fsub double %1407, %1410
  %1412 = fadd double %1364, %1408
  %1413 = fadd double %1412, %1411
  %1414 = fadd double %1409, %1413
  %1415 = fcmp oge double %1290, 0x408633CE8FB9F87E
  %1416 = select i1 %1415, double 0x7FF0000000000000, double %1414
  %1417 = fdiv contract double %1287, %1416
  %1418 = fadd contract double %31, %1146
  %1419 = fmul contract double %1418, %2
  %1420 = tail call double @llvm.fabs.f64(double %1419)
  %1421 = fcmp olt double %1420, 0x41D0000000000000
  br i1 %1421, label %1422, label %1441

1422:                                             ; preds = %1245
  %1423 = fmul double %1420, 0x3FE45F306DC9C883
  %1424 = tail call double @llvm.rint.f64(double %1423)
  %1425 = tail call double @llvm.fma.f64(double %1424, double 0xBFF921FB54442D18, double %1420)
  %1426 = tail call double @llvm.fma.f64(double %1424, double 0xBC91A62633145C00, double %1425)
  %1427 = fmul double %1424, 0x3C91A62633145C00
  %1428 = fneg double %1427
  %1429 = tail call double @llvm.fma.f64(double %1424, double 0x3C91A62633145C00, double %1428)
  %1430 = fsub double %1425, %1427
  %1431 = fsub double %1425, %1430
  %1432 = fsub double %1431, %1427
  %1433 = fsub double %1430, %1426
  %1434 = fadd double %1433, %1432
  %1435 = fsub double %1434, %1429
  %1436 = tail call double @llvm.fma.f64(double %1424, double 0xB97B839A252049C0, double %1435)
  %1437 = fadd double %1426, %1436
  %1438 = fsub double %1437, %1426
  %1439 = fsub double %1436, %1438
  %1440 = fptosi double %1424 to i32
  br label %1517

1441:                                             ; preds = %1245
  %1442 = tail call double @llvm.amdgcn.trig.preop.f64(double %1420, i32 0)
  %1443 = tail call double @llvm.amdgcn.trig.preop.f64(double %1420, i32 1)
  %1444 = tail call double @llvm.amdgcn.trig.preop.f64(double %1420, i32 2)
  %1445 = fcmp oge double %1420, 0x7B00000000000000
  %1446 = tail call double @llvm.amdgcn.ldexp.f64(double %1420, i32 -128)
  %1447 = select i1 %1445, double %1446, double %1420
  %1448 = fmul double %1444, %1447
  %1449 = fneg double %1448
  %1450 = tail call double @llvm.fma.f64(double %1444, double %1447, double %1449)
  %1451 = fmul double %1443, %1447
  %1452 = fneg double %1451
  %1453 = tail call double @llvm.fma.f64(double %1443, double %1447, double %1452)
  %1454 = fmul double %1442, %1447
  %1455 = fneg double %1454
  %1456 = tail call double @llvm.fma.f64(double %1442, double %1447, double %1455)
  %1457 = fadd double %1451, %1456
  %1458 = fsub double %1457, %1451
  %1459 = fsub double %1457, %1458
  %1460 = fsub double %1456, %1458
  %1461 = fsub double %1451, %1459
  %1462 = fadd double %1460, %1461
  %1463 = fadd double %1448, %1453
  %1464 = fsub double %1463, %1448
  %1465 = fsub double %1463, %1464
  %1466 = fsub double %1453, %1464
  %1467 = fsub double %1448, %1465
  %1468 = fadd double %1466, %1467
  %1469 = fadd double %1463, %1462
  %1470 = fsub double %1469, %1463
  %1471 = fsub double %1469, %1470
  %1472 = fsub double %1462, %1470
  %1473 = fsub double %1463, %1471
  %1474 = fadd double %1472, %1473
  %1475 = fadd double %1468, %1474
  %1476 = fadd double %1450, %1475
  %1477 = fadd double %1454, %1457
  %1478 = fsub double %1477, %1454
  %1479 = fsub double %1457, %1478
  %1480 = fadd double %1479, %1469
  %1481 = fsub double %1480, %1479
  %1482 = fsub double %1469, %1481
  %1483 = fadd double %1482, %1476
  %1484 = tail call double @llvm.amdgcn.ldexp.f64(double %1477, i32 -2)
  %1485 = tail call double @llvm.amdgcn.fract.f64(double %1484)
  %1486 = tail call i1 @llvm.amdgcn.class.f64(double %1484, i32 516)
  %1487 = select i1 %1486, double 0.000000e+00, double %1485
  %1488 = tail call double @llvm.amdgcn.ldexp.f64(double %1487, i32 2)
  %1489 = fadd double %1488, %1480
  %1490 = fcmp olt double %1489, 0.000000e+00
  %1491 = select i1 %1490, double 4.000000e+00, double 0.000000e+00
  %1492 = fadd double %1488, %1491
  %1493 = fadd double %1480, %1492
  %1494 = fptosi double %1493 to i32
  %1495 = sitofp i32 %1494 to double
  %1496 = fsub double %1492, %1495
  %1497 = fadd double %1480, %1496
  %1498 = fsub double %1497, %1496
  %1499 = fsub double %1480, %1498
  %1500 = fadd double %1483, %1499
  %1501 = fcmp oge double %1497, 5.000000e-01
  %1502 = zext i1 %1501 to i32
  %1503 = add nsw i32 %1502, %1494
  %1504 = select i1 %1501, double 1.000000e+00, double 0.000000e+00
  %1505 = fsub double %1497, %1504
  %1506 = fadd double %1505, %1500
  %1507 = fsub double %1506, %1505
  %1508 = fsub double %1500, %1507
  %1509 = fmul double %1506, 0x3FF921FB54442D18
  %1510 = fneg double %1509
  %1511 = tail call double @llvm.fma.f64(double %1506, double 0x3FF921FB54442D18, double %1510)
  %1512 = tail call double @llvm.fma.f64(double %1506, double 0x3C91A62633145C07, double %1511)
  %1513 = tail call double @llvm.fma.f64(double %1508, double 0x3FF921FB54442D18, double %1512)
  %1514 = fadd double %1509, %1513
  %1515 = fsub double %1514, %1509
  %1516 = fsub double %1513, %1515
  br label %1517

1517:                                             ; preds = %1422, %1441
  %1518 = phi double [ %1439, %1422 ], [ %1516, %1441 ]
  %1519 = phi double [ %1437, %1422 ], [ %1514, %1441 ]
  %1520 = phi i32 [ %1440, %1422 ], [ %1503, %1441 ]
  %1521 = fmul double %1519, %1519
  %1522 = fmul double %1521, 5.000000e-01
  %1523 = fsub double 1.000000e+00, %1522
  %1524 = fsub double 1.000000e+00, %1523
  %1525 = fsub double %1524, %1522
  %1526 = fmul double %1521, %1521
  %1527 = tail call double @llvm.fma.f64(double %1521, double 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)
  %1528 = tail call double @llvm.fma.f64(double %1521, double %1527, double 0xBE927E4FA17F65F6)
  %1529 = tail call double @llvm.fma.f64(double %1521, double %1528, double 0x3EFA01A019F4EC90)
  %1530 = tail call double @llvm.fma.f64(double %1521, double %1529, double 0xBF56C16C16C16967)
  %1531 = tail call double @llvm.fma.f64(double %1521, double %1530, double 0x3FA5555555555555)
  %1532 = fneg double %1518
  %1533 = tail call double @llvm.fma.f64(double %1519, double %1532, double %1525)
  %1534 = tail call double @llvm.fma.f64(double %1526, double %1531, double %1533)
  %1535 = fadd double %1523, %1534
  %1536 = tail call double @llvm.fma.f64(double %1521, double 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)
  %1537 = tail call double @llvm.fma.f64(double %1521, double %1536, double 0x3EC71DE3796CDE01)
  %1538 = tail call double @llvm.fma.f64(double %1521, double %1537, double 0xBF2A01A019E83E5C)
  %1539 = tail call double @llvm.fma.f64(double %1521, double %1538, double 0x3F81111111110BB3)
  %1540 = fneg double %1521
  %1541 = fmul double %1519, %1540
  %1542 = fmul double %1518, 5.000000e-01
  %1543 = tail call double @llvm.fma.f64(double %1541, double %1539, double %1542)
  %1544 = tail call double @llvm.fma.f64(double %1521, double %1543, double %1532)
  %1545 = tail call double @llvm.fma.f64(double %1541, double 0xBFC5555555555555, double %1544)
  %1546 = fsub double %1519, %1545
  %1547 = fneg double %1546
  %1548 = and i32 %1520, 1
  %1549 = icmp eq i32 %1548, 0
  %1550 = select i1 %1549, double %1535, double %1547
  %1551 = bitcast double %1550 to <2 x i32>
  %1552 = shl i32 %1520, 30
  %1553 = and i32 %1552, -2147483648
  %1554 = extractelement <2 x i32> %1551, i64 1
  %1555 = xor i32 %1554, %1553
  %1556 = insertelement <2 x i32> %1551, i32 %1555, i64 1
  %1557 = tail call i1 @llvm.amdgcn.class.f64(double %1420, i32 504)
  %1558 = select i1 %1557, <2 x i32> %1556, <2 x i32> <i32 0, i32 2146959360>
  %1559 = bitcast <2 x i32> %1558 to double
  %1560 = fneg contract double %1418
  %1561 = fdiv contract double %1560, %3
  %1562 = tail call double @llvm.fabs.f64(double %1561)
  %1563 = fadd double %1562, 0xBFE62E42FEFA39EF
  %1564 = fsub double %1563, %1562
  %1565 = fsub double %1564, %1563
  %1566 = fadd double %1562, %1565
  %1567 = fadd double %1564, 0x3FE62E42FEFA39EF
  %1568 = fsub double %1566, %1567
  %1569 = fadd double %1568, 0xBC7ABC9E3B39803F
  %1570 = fadd double %1563, %1569
  %1571 = fsub double %1570, %1563
  %1572 = fsub double %1569, %1571
  %1573 = fmul double %1570, 0x3FF71547652B82FE
  %1574 = tail call double @llvm.rint.f64(double %1573)
  %1575 = tail call double @llvm.fma.f64(double %1574, double 0xBFE62E42FEFA3000, double %1570)
  %1576 = fadd double %1572, %1575
  %1577 = fsub double %1576, %1575
  %1578 = fsub double %1572, %1577
  %1579 = fmul double %1574, 0x3D53DE6AF278E000
  %1580 = fsub double %1576, %1579
  %1581 = fsub double %1576, %1580
  %1582 = fsub double %1581, %1579
  %1583 = fadd double %1578, %1582
  %1584 = fadd double %1580, %1583
  %1585 = fsub double %1584, %1580
  %1586 = fsub double %1583, %1585
  %1587 = fmul double %1574, 0x3AC9CC01F97B57A0
  %1588 = fsub double %1584, %1587
  %1589 = fsub double %1584, %1588
  %1590 = fsub double %1589, %1587
  %1591 = fadd double %1586, %1590
  %1592 = fadd double %1588, %1591
  %1593 = fsub double %1592, %1588
  %1594 = fsub double %1591, %1593
  %1595 = tail call double @llvm.fma.f64(double %1592, double 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)
  %1596 = tail call double @llvm.fma.f64(double %1592, double %1595, double 0x3EC71DEE623FDE64)
  %1597 = tail call double @llvm.fma.f64(double %1592, double %1596, double 0x3EFA01997C89E6B0)
  %1598 = tail call double @llvm.fma.f64(double %1592, double %1597, double 0x3F2A01A014761F6E)
  %1599 = tail call double @llvm.fma.f64(double %1592, double %1598, double 0x3F56C16C1852B7B0)
  %1600 = tail call double @llvm.fma.f64(double %1592, double %1599, double 0x3F81111111122322)
  %1601 = tail call double @llvm.fma.f64(double %1592, double %1600, double 0x3FA55555555502A1)
  %1602 = tail call double @llvm.fma.f64(double %1592, double %1601, double 0x3FC5555555555511)
  %1603 = tail call double @llvm.fma.f64(double %1592, double %1602, double 0x3FE000000000000B)
  %1604 = fmul double %1592, %1592
  %1605 = fneg double %1604
  %1606 = tail call double @llvm.fma.f64(double %1592, double %1592, double %1605)
  %1607 = fmul double %1594, 2.000000e+00
  %1608 = tail call double @llvm.fma.f64(double %1592, double %1607, double %1606)
  %1609 = fadd double %1604, %1608
  %1610 = fsub double %1609, %1604
  %1611 = fsub double %1608, %1610
  %1612 = fmul double %1609, %1603
  %1613 = fneg double %1612
  %1614 = tail call double @llvm.fma.f64(double %1609, double %1603, double %1613)
  %1615 = tail call double @llvm.fma.f64(double %1611, double %1603, double %1614)
  %1616 = fadd double %1612, %1615
  %1617 = fsub double %1616, %1612
  %1618 = fsub double %1615, %1617
  %1619 = fadd double %1592, %1616
  %1620 = fsub double %1619, %1592
  %1621 = fsub double %1616, %1620
  %1622 = fadd double %1594, %1618
  %1623 = fadd double %1622, %1621
  %1624 = fadd double %1619, %1623
  %1625 = fsub double %1624, %1619
  %1626 = fsub double %1623, %1625
  %1627 = fadd double %1624, 1.000000e+00
  %1628 = fadd double %1627, -1.000000e+00
  %1629 = fsub double %1624, %1628
  %1630 = fadd double %1626, %1629
  %1631 = fadd double %1627, %1630
  %1632 = fsub double %1631, %1627
  %1633 = fsub double %1630, %1632
  %1634 = fptosi double %1574 to i32
  %1635 = tail call double @llvm.amdgcn.ldexp.f64(double %1631, i32 %1634)
  %1636 = tail call double @llvm.amdgcn.ldexp.f64(double %1633, i32 %1634)
  %1637 = tail call double @llvm.amdgcn.rcp.f64(double %1635)
  %1638 = fneg double %1635
  %1639 = tail call double @llvm.fma.f64(double %1638, double %1637, double 1.000000e+00)
  %1640 = tail call double @llvm.fma.f64(double %1639, double %1637, double %1637)
  %1641 = tail call double @llvm.fma.f64(double %1638, double %1640, double 1.000000e+00)
  %1642 = tail call double @llvm.fma.f64(double %1641, double %1640, double %1640)
  %1643 = fmul double %1635, %1642
  %1644 = fneg double %1643
  %1645 = tail call double @llvm.fma.f64(double %1642, double %1635, double %1644)
  %1646 = tail call double @llvm.fma.f64(double %1642, double %1636, double %1645)
  %1647 = fadd double %1643, %1646
  %1648 = fsub double %1647, %1643
  %1649 = fsub double %1646, %1648
  %1650 = fsub double 1.000000e+00, %1647
  %1651 = fsub double 1.000000e+00, %1650
  %1652 = fsub double %1651, %1647
  %1653 = fsub double %1652, %1649
  %1654 = fadd double %1650, %1653
  %1655 = fsub double %1654, %1650
  %1656 = fsub double %1653, %1655
  %1657 = fmul double %1642, %1654
  %1658 = fmul double %1635, %1657
  %1659 = fneg double %1658
  %1660 = tail call double @llvm.fma.f64(double %1657, double %1635, double %1659)
  %1661 = tail call double @llvm.fma.f64(double %1657, double %1636, double %1660)
  %1662 = fadd double %1658, %1661
  %1663 = fsub double %1662, %1658
  %1664 = fsub double %1661, %1663
  %1665 = fsub double %1654, %1662
  %1666 = fsub double %1654, %1665
  %1667 = fsub double %1666, %1662
  %1668 = fadd double %1656, %1667
  %1669 = fsub double %1668, %1664
  %1670 = fadd double %1665, %1669
  %1671 = fmul double %1642, %1670
  %1672 = fadd double %1642, %1657
  %1673 = fsub double %1672, %1642
  %1674 = fsub double %1657, %1673
  %1675 = fadd double %1674, %1671
  %1676 = fadd double %1672, %1675
  %1677 = fsub double %1676, %1672
  %1678 = fsub double %1675, %1677
  %1679 = tail call double @llvm.amdgcn.ldexp.f64(double %1676, i32 -2)
  %1680 = tail call double @llvm.amdgcn.ldexp.f64(double %1678, i32 -2)
  %1681 = fadd double %1635, %1679
  %1682 = fsub double %1681, %1635
  %1683 = fsub double %1679, %1682
  %1684 = fadd double %1636, %1680
  %1685 = fadd double %1684, %1683
  %1686 = fadd double %1681, %1685
  %1687 = fcmp oge double %1562, 0x408633CE8FB9F87E
  %1688 = select i1 %1687, double 0x7FF0000000000000, double %1686
  %1689 = fdiv contract double %1559, %1688
  %1690 = fadd contract double %1417, %1689
  %1691 = fneg contract double %597
  %1692 = fmul contract double %43, %1691
  %1693 = fmul contract double %41, %2
  %1694 = fsub contract double %1692, %1693
  %1695 = fmul contract double %18, %40
  %1696 = fsub contract double %1694, %1695
  %1697 = fsub contract double %46, %47
  %1698 = fadd contract double %1697, %42
  %1699 = fmul contract double %597, %1698
  %1700 = fmul contract double %40, %2
  %1701 = fadd contract double %1700, %1699
  %1702 = fmul contract double %18, %41
  %1703 = fsub contract double %1701, %1702
  %1704 = fsub contract double %45, %41
  %1705 = fmul contract double %597, %1704
  %1706 = fmul contract double %22, %43
  %1707 = fsub contract double %1705, %1706
  %1708 = fmul contract double %19, %42
  %1709 = fsub contract double %1707, %1708
  %1710 = fsub contract double %40, %44
  %1711 = fmul contract double %597, %1710
  %1712 = fmul contract double %22, %42
  %1713 = fadd contract double %1712, %1711
  %1714 = fmul contract double %19, %43
  %1715 = fsub contract double %1713, %1714
  %1716 = fmul contract double %597, %43
  %1717 = fmul contract double %45, %2
  %1718 = fsub contract double %1716, %1717
  %1719 = fmul contract double %20, %44
  %1720 = fsub contract double %1718, %1719
  %1721 = fsub contract double %47, %48
  %1722 = fsub contract double %1721, %42
  %1723 = fmul contract double %597, %1722
  %1724 = fmul contract double %44, %2
  %1725 = fadd contract double %1724, %1723
  %1726 = fmul contract double %20, %45
  %1727 = fsub contract double %1725, %1726
  %1728 = fmul contract double %597, 2.000000e+00
  %1729 = fmul contract double %1728, %41
  %1730 = fmul contract double %21, %47
  %1731 = fsub contract double %1730, %1729
  %1732 = fsub contract double %41, %45
  %1733 = fmul contract double %1728, %1732
  %1734 = fsub contract double %1733, %1730
  %1735 = fmul contract double %1728, %45
  %1736 = fmul contract double %32, %1696
  %1737 = fadd contract double %40, %1736
  %1738 = fmul contract double %32, %1703
  %1739 = fadd contract double %41, %1738
  %1740 = fmul contract double %32, %1709
  %1741 = fadd contract double %42, %1740
  %1742 = fmul contract double %32, %1715
  %1743 = fadd contract double %43, %1742
  %1744 = fmul contract double %32, %1720
  %1745 = fadd contract double %44, %1744
  %1746 = fmul contract double %32, %1727
  %1747 = fadd contract double %45, %1746
  %1748 = fmul contract double %32, %1731
  %1749 = fadd contract double %46, %1748
  %1750 = fmul contract double %32, %1734
  %1751 = fadd contract double %47, %1750
  %1752 = fmul contract double %32, %1735
  %1753 = fadd contract double %48, %1752
  %1754 = fneg contract double %1144
  %1755 = fmul contract double %1743, %1754
  %1756 = fmul contract double %1739, %2
  %1757 = fsub contract double %1755, %1756
  %1758 = fmul contract double %18, %1737
  %1759 = fsub contract double %1757, %1758
  %1760 = fsub contract double %1749, %1751
  %1761 = fadd contract double %1760, %1741
  %1762 = fmul contract double %1144, %1761
  %1763 = fmul contract double %1737, %2
  %1764 = fadd contract double %1763, %1762
  %1765 = fmul contract double %18, %1739
  %1766 = fsub contract double %1764, %1765
  %1767 = fsub contract double %1747, %1739
  %1768 = fmul contract double %1144, %1767
  %1769 = fmul contract double %22, %1743
  %1770 = fsub contract double %1768, %1769
  %1771 = fmul contract double %19, %1741
  %1772 = fsub contract double %1770, %1771
  %1773 = fsub contract double %1737, %1745
  %1774 = fmul contract double %1144, %1773
  %1775 = fmul contract double %22, %1741
  %1776 = fadd contract double %1775, %1774
  %1777 = fmul contract double %19, %1743
  %1778 = fsub contract double %1776, %1777
  %1779 = fmul contract double %1144, %1743
  %1780 = fmul contract double %1747, %2
  %1781 = fsub contract double %1779, %1780
  %1782 = fmul contract double %20, %1745
  %1783 = fsub contract double %1781, %1782
  %1784 = fsub contract double %1751, %1753
  %1785 = fsub contract double %1784, %1741
  %1786 = fmul contract double %1144, %1785
  %1787 = fmul contract double %1745, %2
  %1788 = fadd contract double %1787, %1786
  %1789 = fmul contract double %20, %1747
  %1790 = fsub contract double %1788, %1789
  %1791 = fmul contract double %1144, 2.000000e+00
  %1792 = fmul contract double %1791, %1739
  %1793 = fmul contract double %21, %1751
  %1794 = fsub contract double %1793, %1792
  %1795 = fsub contract double %1739, %1747
  %1796 = fmul contract double %1791, %1795
  %1797 = fsub contract double %1796, %1793
  %1798 = fmul contract double %1791, %1747
  %1799 = fmul contract double %32, %1759
  %1800 = fadd contract double %40, %1799
  %1801 = fmul contract double %32, %1766
  %1802 = fadd contract double %41, %1801
  %1803 = fmul contract double %32, %1772
  %1804 = fadd contract double %42, %1803
  %1805 = fmul contract double %32, %1778
  %1806 = fadd contract double %43, %1805
  %1807 = fmul contract double %32, %1783
  %1808 = fadd contract double %44, %1807
  %1809 = fmul contract double %32, %1790
  %1810 = fadd contract double %45, %1809
  %1811 = fmul contract double %32, %1794
  %1812 = fadd contract double %46, %1811
  %1813 = fmul contract double %32, %1797
  %1814 = fadd contract double %47, %1813
  %1815 = fmul contract double %32, %1798
  %1816 = fadd contract double %48, %1815
  %1817 = fmul contract double %1806, %1754
  %1818 = fmul contract double %1802, %2
  %1819 = fsub contract double %1817, %1818
  %1820 = fmul contract double %18, %1800
  %1821 = fsub contract double %1819, %1820
  %1822 = fsub contract double %1812, %1814
  %1823 = fadd contract double %1822, %1804
  %1824 = fmul contract double %1144, %1823
  %1825 = fmul contract double %1800, %2
  %1826 = fadd contract double %1825, %1824
  %1827 = fmul contract double %18, %1802
  %1828 = fsub contract double %1826, %1827
  %1829 = fsub contract double %1810, %1802
  %1830 = fmul contract double %1144, %1829
  %1831 = fmul contract double %22, %1806
  %1832 = fsub contract double %1830, %1831
  %1833 = fmul contract double %19, %1804
  %1834 = fsub contract double %1832, %1833
  %1835 = fsub contract double %1800, %1808
  %1836 = fmul contract double %1144, %1835
  %1837 = fmul contract double %22, %1804
  %1838 = fadd contract double %1837, %1836
  %1839 = fmul contract double %19, %1806
  %1840 = fsub contract double %1838, %1839
  %1841 = fmul contract double %1144, %1806
  %1842 = fmul contract double %1810, %2
  %1843 = fsub contract double %1841, %1842
  %1844 = fmul contract double %20, %1808
  %1845 = fsub contract double %1843, %1844
  %1846 = fsub contract double %1814, %1816
  %1847 = fsub contract double %1846, %1804
  %1848 = fmul contract double %1144, %1847
  %1849 = fmul contract double %1808, %2
  %1850 = fadd contract double %1849, %1848
  %1851 = fmul contract double %20, %1810
  %1852 = fsub contract double %1850, %1851
  %1853 = fmul contract double %1791, %1802
  %1854 = fmul contract double %21, %1814
  %1855 = fsub contract double %1854, %1853
  %1856 = fsub contract double %1802, %1810
  %1857 = fmul contract double %1791, %1856
  %1858 = fsub contract double %1857, %1854
  %1859 = fmul contract double %1791, %1810
  %1860 = fmul contract double %28, %1821
  %1861 = fadd contract double %40, %1860
  %1862 = fmul contract double %28, %1828
  %1863 = fadd contract double %41, %1862
  %1864 = fmul contract double %28, %1834
  %1865 = fadd contract double %42, %1864
  %1866 = fmul contract double %28, %1840
  %1867 = fadd contract double %43, %1866
  %1868 = fmul contract double %28, %1845
  %1869 = fadd contract double %44, %1868
  %1870 = fmul contract double %28, %1852
  %1871 = fadd contract double %45, %1870
  %1872 = fmul contract double %28, %1855
  %1873 = fadd contract double %46, %1872
  %1874 = fmul contract double %28, %1858
  %1875 = fadd contract double %47, %1874
  %1876 = fmul contract double %28, %1859
  %1877 = fadd contract double %48, %1876
  %1878 = fmul contract double %1690, 0x3F39086C9DA08871
  %1879 = fneg contract double %1878
  %1880 = fmul contract double %1867, %1879
  %1881 = fmul contract double %1863, %2
  %1882 = fsub contract double %1880, %1881
  %1883 = fmul contract double %18, %1861
  %1884 = fsub contract double %1882, %1883
  %1885 = fsub contract double %1873, %1875
  %1886 = fadd contract double %1885, %1865
  %1887 = fmul contract double %1878, %1886
  %1888 = fmul contract double %1861, %2
  %1889 = fadd contract double %1888, %1887
  %1890 = fmul contract double %18, %1863
  %1891 = fsub contract double %1889, %1890
  %1892 = fsub contract double %1871, %1863
  %1893 = fmul contract double %1878, %1892
  %1894 = fmul contract double %22, %1867
  %1895 = fsub contract double %1893, %1894
  %1896 = fmul contract double %19, %1865
  %1897 = fsub contract double %1895, %1896
  %1898 = fsub contract double %1861, %1869
  %1899 = fmul contract double %1878, %1898
  %1900 = fmul contract double %22, %1865
  %1901 = fadd contract double %1900, %1899
  %1902 = fmul contract double %19, %1867
  %1903 = fsub contract double %1901, %1902
  %1904 = fmul contract double %1878, %1867
  %1905 = fmul contract double %1871, %2
  %1906 = fsub contract double %1904, %1905
  %1907 = fmul contract double %20, %1869
  %1908 = fsub contract double %1906, %1907
  %1909 = fsub contract double %1875, %1877
  %1910 = fsub contract double %1909, %1865
  %1911 = fmul contract double %1878, %1910
  %1912 = fmul contract double %1869, %2
  %1913 = fadd contract double %1912, %1911
  %1914 = fmul contract double %20, %1871
  %1915 = fsub contract double %1913, %1914
  %1916 = fmul contract double %1878, 2.000000e+00
  %1917 = fmul contract double %1916, %1863
  %1918 = fmul contract double %21, %1875
  %1919 = fsub contract double %1918, %1917
  %1920 = fsub contract double %1863, %1871
  %1921 = fmul contract double %1916, %1920
  %1922 = fsub contract double %1921, %1918
  %1923 = fmul contract double %1916, %1871
  %1924 = fadd contract double %1696, %1884
  %1925 = fadd contract double %1759, %1821
  %1926 = fmul contract double %1925, 2.000000e+00
  %1927 = fadd contract double %1924, %1926
  %1928 = fmul contract double %35, %1927
  %1929 = fadd contract double %40, %1928
  %1930 = fadd contract double %1703, %1891
  %1931 = fadd contract double %1766, %1828
  %1932 = fmul contract double %1931, 2.000000e+00
  %1933 = fadd contract double %1930, %1932
  %1934 = fmul contract double %35, %1933
  %1935 = fadd contract double %41, %1934
  %1936 = fadd contract double %1709, %1897
  %1937 = fadd contract double %1772, %1834
  %1938 = fmul contract double %1937, 2.000000e+00
  %1939 = fadd contract double %1936, %1938
  %1940 = fmul contract double %35, %1939
  %1941 = fadd contract double %42, %1940
  %1942 = fadd contract double %1715, %1903
  %1943 = fadd contract double %1778, %1840
  %1944 = fmul contract double %1943, 2.000000e+00
  %1945 = fadd contract double %1942, %1944
  %1946 = fmul contract double %35, %1945
  %1947 = fadd contract double %43, %1946
  %1948 = fadd contract double %1720, %1908
  %1949 = fadd contract double %1783, %1845
  %1950 = fmul contract double %1949, 2.000000e+00
  %1951 = fadd contract double %1948, %1950
  %1952 = fmul contract double %35, %1951
  %1953 = fadd contract double %44, %1952
  %1954 = fadd contract double %1727, %1915
  %1955 = fadd contract double %1790, %1852
  %1956 = fmul contract double %1955, 2.000000e+00
  %1957 = fadd contract double %1954, %1956
  %1958 = fmul contract double %35, %1957
  %1959 = fadd contract double %45, %1958
  %1960 = fadd contract double %1731, %1919
  %1961 = fadd contract double %1794, %1855
  %1962 = fmul contract double %1961, 2.000000e+00
  %1963 = fadd contract double %1960, %1962
  %1964 = fmul contract double %35, %1963
  %1965 = fadd contract double %46, %1964
  %1966 = fadd contract double %1734, %1922
  %1967 = fadd contract double %1797, %1858
  %1968 = fmul contract double %1967, 2.000000e+00
  %1969 = fadd contract double %1966, %1968
  %1970 = fmul contract double %35, %1969
  %1971 = fadd contract double %47, %1970
  %1972 = fadd contract double %1735, %1923
  %1973 = fadd contract double %1798, %1859
  %1974 = fmul contract double %1973, 2.000000e+00
  %1975 = fadd contract double %1972, %1974
  %1976 = fmul contract double %35, %1975
  %1977 = fadd contract double %48, %1976
  %1978 = add nuw nsw i32 %49, 1
  %1979 = icmp eq i32 %1978, %26
  br i1 %1979, label %36, label %39, !llvm.loop !11
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i1 @llvm.amdgcn.class.f64(double, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fma.f64(double, double, double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.trig.preop.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.ldexp.f64(double, i32) #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.fract.f64(double) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.amdgcn.rcp.f64(double) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.round.f64(double) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare align 4 i8 addrspace(4)* @llvm.amdgcn.dispatch.ptr() #2

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workgroup.id.x() #2

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind "amdgpu-flat-work-group-size"="1,256" "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot7-insts,+dpp,+flat-address-space,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+sramecc" "uniform-work-group-size"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"clang version 15.0.0 (http://10.15.3.7/dcutoolkit/driverruntime/llvm-project.git 340750feeda88c9c2ce8ad481b11d9aa7f033d39)"}
!4 = !{i16 1, i16 1025}
!5 = !{}
!6 = !{i32 0, i32 1024}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
