digraph "CFG for '_Z22simOBEcudaCrossPoltestPdPKdS1_S1_dddddd' function" {
	label="CFG for '_Z22simOBEcudaCrossPoltestPdPKdS1_S1_dddddd' function";

	Node0x57109f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = mul i32 %11, %16\l  %18 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %19 = add i32 %17, %18\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds double, double addrspace(1)* %1, i64 %20\l  %22 = load double, double addrspace(1)* %21, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = getelementptr inbounds double, double addrspace(1)* %2, i64 %20\l  %24 = load double, double addrspace(1)* %23, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %25 = fmul contract double %24, 0x400921FB60000000\l  %26 = fdiv contract double %25, 1.800000e+02\l  %27 = getelementptr inbounds double, double addrspace(1)* %3, i64 %20\l  %28 = load double, double addrspace(1)* %27, align 8, !tbaa !7,\l... !amdgpu.noclobber !5\l  %29 = fmul contract double %28, 0x400921FB60000000\l  %30 = fdiv contract double %29, 1.800000e+02\l  %31 = fmul contract double %9, 2.000000e+00\l  %32 = fdiv contract double %31, 1.000000e-01\l  %33 = tail call double @llvm.round.f64(double %32)\l  %34 = fptosi double %33 to i32\l  %35 = sitofp i32 %34 to double\l  %36 = fdiv contract double %31, %35\l  %37 = fmul contract double %36, 5.000000e-01\l  %38 = icmp sgt i32 %34, 0\l  br i1 %38, label %39, label %470\l|{<s0>T|<s1>F}}"];
	Node0x57109f0:s0 -> Node0x5715a60;
	Node0x57109f0:s1 -> Node0x5715af0;
	Node0x5715a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%39:\l39:                                               \l  %40 = fadd contract double %6, %8\l  %41 = fsub contract double %40, %7\l  %42 = tail call double @llvm.fabs.f64(double %26)\l  %43 = fcmp olt double %42, 0x41D0000000000000\l  %44 = tail call double @llvm.amdgcn.trig.preop.f64(double %42, i32 0)\l  %45 = tail call double @llvm.amdgcn.trig.preop.f64(double %42, i32 1)\l  %46 = tail call double @llvm.amdgcn.trig.preop.f64(double %42, i32 2)\l  %47 = fcmp oge double %42, 0x7B00000000000000\l  %48 = tail call double @llvm.amdgcn.ldexp.f64(double %42, i32 -128)\l  %49 = select i1 %47, double %48, double %42\l  %50 = fmul double %46, %49\l  %51 = fneg double %50\l  %52 = tail call double @llvm.fma.f64(double %46, double %49, double %51)\l  %53 = fmul double %45, %49\l  %54 = fneg double %53\l  %55 = tail call double @llvm.fma.f64(double %45, double %49, double %54)\l  %56 = fmul double %44, %49\l  %57 = fneg double %56\l  %58 = tail call double @llvm.fma.f64(double %44, double %49, double %57)\l  %59 = fadd double %53, %58\l  %60 = fsub double %59, %53\l  %61 = fsub double %59, %60\l  %62 = fsub double %58, %60\l  %63 = fsub double %53, %61\l  %64 = fadd double %62, %63\l  %65 = fadd double %50, %55\l  %66 = fsub double %65, %50\l  %67 = fsub double %65, %66\l  %68 = fsub double %55, %66\l  %69 = fsub double %50, %67\l  %70 = fadd double %68, %69\l  %71 = fadd double %65, %64\l  %72 = fsub double %71, %65\l  %73 = fsub double %71, %72\l  %74 = fsub double %64, %72\l  %75 = fsub double %65, %73\l  %76 = fadd double %74, %75\l  %77 = fadd double %70, %76\l  %78 = fadd double %52, %77\l  %79 = fadd double %56, %59\l  %80 = fsub double %79, %56\l  %81 = fsub double %59, %80\l  %82 = fadd double %81, %71\l  %83 = fsub double %82, %81\l  %84 = fsub double %71, %83\l  %85 = fadd double %84, %78\l  %86 = tail call double @llvm.amdgcn.ldexp.f64(double %79, i32 -2)\l  %87 = tail call double @llvm.amdgcn.fract.f64(double %86)\l  %88 = tail call i1 @llvm.amdgcn.class.f64(double %86, i32 516)\l  %89 = select i1 %88, double 0.000000e+00, double %87\l  %90 = tail call double @llvm.amdgcn.ldexp.f64(double %89, i32 2)\l  %91 = fadd double %90, %82\l  %92 = fcmp olt double %91, 0.000000e+00\l  %93 = select i1 %92, double 4.000000e+00, double 0.000000e+00\l  %94 = fadd double %90, %93\l  %95 = fadd double %82, %94\l  %96 = fptosi double %95 to i32\l  %97 = sitofp i32 %96 to double\l  %98 = fsub double %94, %97\l  %99 = fadd double %82, %98\l  %100 = fsub double %99, %98\l  %101 = fsub double %82, %100\l  %102 = fadd double %85, %101\l  %103 = fcmp oge double %99, 5.000000e-01\l  %104 = zext i1 %103 to i32\l  %105 = add nsw i32 %104, %96\l  %106 = select i1 %103, double 1.000000e+00, double 0.000000e+00\l  %107 = fsub double %99, %106\l  %108 = fadd double %107, %102\l  %109 = fsub double %108, %107\l  %110 = fsub double %102, %109\l  %111 = fmul double %108, 0x3FF921FB54442D18\l  %112 = fneg double %111\l  %113 = tail call double @llvm.fma.f64(double %108, double\l... 0x3FF921FB54442D18, double %112)\l  %114 = tail call double @llvm.fma.f64(double %108, double\l... 0x3C91A62633145C07, double %113)\l  %115 = tail call double @llvm.fma.f64(double %110, double\l... 0x3FF921FB54442D18, double %114)\l  %116 = fadd double %111, %115\l  %117 = fsub double %116, %111\l  %118 = fsub double %115, %117\l  %119 = fmul double %116, %116\l  %120 = fmul double %119, 5.000000e-01\l  %121 = fsub double 1.000000e+00, %120\l  %122 = fsub double 1.000000e+00, %121\l  %123 = fsub double %122, %120\l  %124 = fmul double %119, %119\l  %125 = tail call double @llvm.fma.f64(double %119, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %126 = tail call double @llvm.fma.f64(double %119, double %125, double\l... 0xBE927E4FA17F65F6)\l  %127 = tail call double @llvm.fma.f64(double %119, double %126, double\l... 0x3EFA01A019F4EC90)\l  %128 = tail call double @llvm.fma.f64(double %119, double %127, double\l... 0xBF56C16C16C16967)\l  %129 = tail call double @llvm.fma.f64(double %119, double %128, double\l... 0x3FA5555555555555)\l  %130 = fneg double %118\l  %131 = tail call double @llvm.fma.f64(double %116, double %130, double %123)\l  %132 = tail call double @llvm.fma.f64(double %124, double %129, double %131)\l  %133 = fadd double %121, %132\l  %134 = tail call double @llvm.fma.f64(double %119, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %135 = tail call double @llvm.fma.f64(double %119, double %134, double\l... 0x3EC71DE3796CDE01)\l  %136 = tail call double @llvm.fma.f64(double %119, double %135, double\l... 0xBF2A01A019E83E5C)\l  %137 = tail call double @llvm.fma.f64(double %119, double %136, double\l... 0x3F81111111110BB3)\l  %138 = fneg double %119\l  %139 = fmul double %116, %138\l  %140 = fmul double %118, 5.000000e-01\l  %141 = tail call double @llvm.fma.f64(double %139, double %137, double %140)\l  %142 = tail call double @llvm.fma.f64(double %119, double %141, double %130)\l  %143 = tail call double @llvm.fma.f64(double %139, double\l... 0xBFC5555555555555, double %142)\l  %144 = fsub double %116, %143\l  %145 = fneg double %144\l  %146 = and i32 %105, 1\l  %147 = icmp eq i32 %146, 0\l  %148 = select i1 %147, double %133, double %145\l  %149 = bitcast double %148 to \<2 x i32\>\l  %150 = shl i32 %105, 30\l  %151 = and i32 %150, -2147483648\l  %152 = extractelement \<2 x i32\> %149, i64 1\l  %153 = xor i32 %152, %151\l  %154 = insertelement \<2 x i32\> %149, i32 %153, i64 1\l  %155 = tail call i1 @llvm.amdgcn.class.f64(double %42, i32 504)\l  %156 = select i1 %155, \<2 x i32\> %154, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %157 = fmul double %42, 0x3FE45F306DC9C883\l  %158 = tail call double @llvm.rint.f64(double %157)\l  %159 = tail call double @llvm.fma.f64(double %158, double\l... 0xBFF921FB54442D18, double %42)\l  %160 = tail call double @llvm.fma.f64(double %158, double\l... 0xBC91A62633145C00, double %159)\l  %161 = fmul double %158, 0x3C91A62633145C00\l  %162 = fneg double %161\l  %163 = tail call double @llvm.fma.f64(double %158, double\l... 0x3C91A62633145C00, double %162)\l  %164 = fsub double %159, %161\l  %165 = fsub double %159, %164\l  %166 = fsub double %165, %161\l  %167 = fsub double %164, %160\l  %168 = fadd double %167, %166\l  %169 = fsub double %168, %163\l  %170 = tail call double @llvm.fma.f64(double %158, double\l... 0xB97B839A252049C0, double %169)\l  %171 = fadd double %160, %170\l  %172 = fsub double %171, %160\l  %173 = fsub double %170, %172\l  %174 = fptosi double %158 to i32\l  %175 = fmul double %171, %171\l  %176 = fmul double %175, 5.000000e-01\l  %177 = fsub double 1.000000e+00, %176\l  %178 = fsub double 1.000000e+00, %177\l  %179 = fsub double %178, %176\l  %180 = fmul double %175, %175\l  %181 = tail call double @llvm.fma.f64(double %175, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %182 = tail call double @llvm.fma.f64(double %175, double %181, double\l... 0xBE927E4FA17F65F6)\l  %183 = tail call double @llvm.fma.f64(double %175, double %182, double\l... 0x3EFA01A019F4EC90)\l  %184 = tail call double @llvm.fma.f64(double %175, double %183, double\l... 0xBF56C16C16C16967)\l  %185 = tail call double @llvm.fma.f64(double %175, double %184, double\l... 0x3FA5555555555555)\l  %186 = fneg double %173\l  %187 = tail call double @llvm.fma.f64(double %171, double %186, double %179)\l  %188 = tail call double @llvm.fma.f64(double %180, double %185, double %187)\l  %189 = fadd double %177, %188\l  %190 = tail call double @llvm.fma.f64(double %175, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %191 = tail call double @llvm.fma.f64(double %175, double %190, double\l... 0x3EC71DE3796CDE01)\l  %192 = tail call double @llvm.fma.f64(double %175, double %191, double\l... 0xBF2A01A019E83E5C)\l  %193 = tail call double @llvm.fma.f64(double %175, double %192, double\l... 0x3F81111111110BB3)\l  %194 = fneg double %175\l  %195 = fmul double %171, %194\l  %196 = fmul double %173, 5.000000e-01\l  %197 = tail call double @llvm.fma.f64(double %195, double %193, double %196)\l  %198 = tail call double @llvm.fma.f64(double %175, double %197, double %186)\l  %199 = tail call double @llvm.fma.f64(double %195, double\l... 0xBFC5555555555555, double %198)\l  %200 = fsub double %171, %199\l  %201 = fneg double %200\l  %202 = and i32 %174, 1\l  %203 = icmp eq i32 %202, 0\l  %204 = select i1 %203, double %189, double %201\l  %205 = bitcast double %204 to \<2 x i32\>\l  %206 = shl i32 %174, 30\l  %207 = and i32 %206, -2147483648\l  %208 = extractelement \<2 x i32\> %205, i64 1\l  %209 = xor i32 %208, %207\l  %210 = insertelement \<2 x i32\> %205, i32 %209, i64 1\l  %211 = select i1 %155, \<2 x i32\> %210, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %212 = bitcast double %26 to \<2 x i32\>\l  %213 = extractelement \<2 x i32\> %212, i64 1\l  %214 = tail call double @llvm.fabs.f64(double %30)\l  %215 = fcmp olt double %214, 0x41D0000000000000\l  %216 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 0)\l  %217 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 1)\l  %218 = tail call double @llvm.amdgcn.trig.preop.f64(double %214, i32 2)\l  %219 = fcmp oge double %214, 0x7B00000000000000\l  %220 = tail call double @llvm.amdgcn.ldexp.f64(double %214, i32 -128)\l  %221 = select i1 %219, double %220, double %214\l  %222 = fmul double %218, %221\l  %223 = fneg double %222\l  %224 = tail call double @llvm.fma.f64(double %218, double %221, double %223)\l  %225 = fmul double %217, %221\l  %226 = fneg double %225\l  %227 = tail call double @llvm.fma.f64(double %217, double %221, double %226)\l  %228 = fmul double %216, %221\l  %229 = fneg double %228\l  %230 = tail call double @llvm.fma.f64(double %216, double %221, double %229)\l  %231 = fadd double %225, %230\l  %232 = fsub double %231, %225\l  %233 = fsub double %231, %232\l  %234 = fsub double %230, %232\l  %235 = fsub double %225, %233\l  %236 = fadd double %234, %235\l  %237 = fadd double %222, %227\l  %238 = fsub double %237, %222\l  %239 = fsub double %237, %238\l  %240 = fsub double %227, %238\l  %241 = fsub double %222, %239\l  %242 = fadd double %240, %241\l  %243 = fadd double %237, %236\l  %244 = fsub double %243, %237\l  %245 = fsub double %243, %244\l  %246 = fsub double %236, %244\l  %247 = fsub double %237, %245\l  %248 = fadd double %246, %247\l  %249 = fadd double %242, %248\l  %250 = fadd double %224, %249\l  %251 = fadd double %228, %231\l  %252 = fsub double %251, %228\l  %253 = fsub double %231, %252\l  %254 = fadd double %253, %243\l  %255 = fsub double %254, %253\l  %256 = fsub double %243, %255\l  %257 = fadd double %256, %250\l  %258 = tail call double @llvm.amdgcn.ldexp.f64(double %251, i32 -2)\l  %259 = tail call double @llvm.amdgcn.fract.f64(double %258)\l  %260 = tail call i1 @llvm.amdgcn.class.f64(double %258, i32 516)\l  %261 = select i1 %260, double 0.000000e+00, double %259\l  %262 = tail call double @llvm.amdgcn.ldexp.f64(double %261, i32 2)\l  %263 = fadd double %262, %254\l  %264 = fcmp olt double %263, 0.000000e+00\l  %265 = select i1 %264, double 4.000000e+00, double 0.000000e+00\l  %266 = fadd double %262, %265\l  %267 = fadd double %254, %266\l  %268 = fptosi double %267 to i32\l  %269 = sitofp i32 %268 to double\l  %270 = fsub double %266, %269\l  %271 = fadd double %254, %270\l  %272 = fsub double %271, %270\l  %273 = fsub double %254, %272\l  %274 = fadd double %257, %273\l  %275 = fcmp oge double %271, 5.000000e-01\l  %276 = zext i1 %275 to i32\l  %277 = add nsw i32 %276, %268\l  %278 = select i1 %275, double 1.000000e+00, double 0.000000e+00\l  %279 = fsub double %271, %278\l  %280 = fadd double %279, %274\l  %281 = fsub double %280, %279\l  %282 = fsub double %274, %281\l  %283 = fmul double %280, 0x3FF921FB54442D18\l  %284 = fneg double %283\l  %285 = tail call double @llvm.fma.f64(double %280, double\l... 0x3FF921FB54442D18, double %284)\l  %286 = tail call double @llvm.fma.f64(double %280, double\l... 0x3C91A62633145C07, double %285)\l  %287 = tail call double @llvm.fma.f64(double %282, double\l... 0x3FF921FB54442D18, double %286)\l  %288 = fadd double %283, %287\l  %289 = fsub double %288, %283\l  %290 = fsub double %287, %289\l  %291 = fmul double %288, %288\l  %292 = fmul double %291, 5.000000e-01\l  %293 = fsub double 1.000000e+00, %292\l  %294 = fsub double 1.000000e+00, %293\l  %295 = fsub double %294, %292\l  %296 = fmul double %291, %291\l  %297 = tail call double @llvm.fma.f64(double %291, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %298 = tail call double @llvm.fma.f64(double %291, double %297, double\l... 0xBE927E4FA17F65F6)\l  %299 = tail call double @llvm.fma.f64(double %291, double %298, double\l... 0x3EFA01A019F4EC90)\l  %300 = tail call double @llvm.fma.f64(double %291, double %299, double\l... 0xBF56C16C16C16967)\l  %301 = tail call double @llvm.fma.f64(double %291, double %300, double\l... 0x3FA5555555555555)\l  %302 = fneg double %290\l  %303 = tail call double @llvm.fma.f64(double %288, double %302, double %295)\l  %304 = tail call double @llvm.fma.f64(double %296, double %301, double %303)\l  %305 = fadd double %293, %304\l  %306 = tail call double @llvm.fma.f64(double %291, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %307 = tail call double @llvm.fma.f64(double %291, double %306, double\l... 0x3EC71DE3796CDE01)\l  %308 = tail call double @llvm.fma.f64(double %291, double %307, double\l... 0xBF2A01A019E83E5C)\l  %309 = tail call double @llvm.fma.f64(double %291, double %308, double\l... 0x3F81111111110BB3)\l  %310 = fneg double %291\l  %311 = fmul double %288, %310\l  %312 = fmul double %290, 5.000000e-01\l  %313 = tail call double @llvm.fma.f64(double %311, double %309, double %312)\l  %314 = tail call double @llvm.fma.f64(double %291, double %313, double %302)\l  %315 = tail call double @llvm.fma.f64(double %311, double\l... 0xBFC5555555555555, double %314)\l  %316 = fsub double %288, %315\l  %317 = fneg double %316\l  %318 = and i32 %277, 1\l  %319 = icmp eq i32 %318, 0\l  %320 = select i1 %319, double %305, double %317\l  %321 = bitcast double %320 to \<2 x i32\>\l  %322 = shl i32 %277, 30\l  %323 = and i32 %322, -2147483648\l  %324 = extractelement \<2 x i32\> %321, i64 1\l  %325 = xor i32 %324, %323\l  %326 = insertelement \<2 x i32\> %321, i32 %325, i64 1\l  %327 = tail call i1 @llvm.amdgcn.class.f64(double %214, i32 504)\l  %328 = select i1 %327, \<2 x i32\> %326, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %329 = fmul double %214, 0x3FE45F306DC9C883\l  %330 = tail call double @llvm.rint.f64(double %329)\l  %331 = tail call double @llvm.fma.f64(double %330, double\l... 0xBFF921FB54442D18, double %214)\l  %332 = tail call double @llvm.fma.f64(double %330, double\l... 0xBC91A62633145C00, double %331)\l  %333 = fmul double %330, 0x3C91A62633145C00\l  %334 = fneg double %333\l  %335 = tail call double @llvm.fma.f64(double %330, double\l... 0x3C91A62633145C00, double %334)\l  %336 = fsub double %331, %333\l  %337 = fsub double %331, %336\l  %338 = fsub double %337, %333\l  %339 = fsub double %336, %332\l  %340 = fadd double %339, %338\l  %341 = fsub double %340, %335\l  %342 = tail call double @llvm.fma.f64(double %330, double\l... 0xB97B839A252049C0, double %341)\l  %343 = fadd double %332, %342\l  %344 = fsub double %343, %332\l  %345 = fsub double %342, %344\l  %346 = fptosi double %330 to i32\l  %347 = fmul double %343, %343\l  %348 = fmul double %347, 5.000000e-01\l  %349 = fsub double 1.000000e+00, %348\l  %350 = fsub double 1.000000e+00, %349\l  %351 = fsub double %350, %348\l  %352 = fmul double %347, %347\l  %353 = tail call double @llvm.fma.f64(double %347, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %354 = tail call double @llvm.fma.f64(double %347, double %353, double\l... 0xBE927E4FA17F65F6)\l  %355 = tail call double @llvm.fma.f64(double %347, double %354, double\l... 0x3EFA01A019F4EC90)\l  %356 = tail call double @llvm.fma.f64(double %347, double %355, double\l... 0xBF56C16C16C16967)\l  %357 = tail call double @llvm.fma.f64(double %347, double %356, double\l... 0x3FA5555555555555)\l  %358 = fneg double %345\l  %359 = tail call double @llvm.fma.f64(double %343, double %358, double %351)\l  %360 = tail call double @llvm.fma.f64(double %352, double %357, double %359)\l  %361 = fadd double %349, %360\l  %362 = tail call double @llvm.fma.f64(double %347, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %363 = tail call double @llvm.fma.f64(double %347, double %362, double\l... 0x3EC71DE3796CDE01)\l  %364 = tail call double @llvm.fma.f64(double %347, double %363, double\l... 0xBF2A01A019E83E5C)\l  %365 = tail call double @llvm.fma.f64(double %347, double %364, double\l... 0x3F81111111110BB3)\l  %366 = fneg double %347\l  %367 = fmul double %343, %366\l  %368 = fmul double %345, 5.000000e-01\l  %369 = tail call double @llvm.fma.f64(double %367, double %365, double %368)\l  %370 = tail call double @llvm.fma.f64(double %347, double %369, double %358)\l  %371 = tail call double @llvm.fma.f64(double %367, double\l... 0xBFC5555555555555, double %370)\l  %372 = fsub double %343, %371\l  %373 = fneg double %372\l  %374 = and i32 %346, 1\l  %375 = icmp eq i32 %374, 0\l  %376 = select i1 %375, double %361, double %373\l  %377 = bitcast double %376 to \<2 x i32\>\l  %378 = shl i32 %346, 30\l  %379 = and i32 %378, -2147483648\l  %380 = extractelement \<2 x i32\> %377, i64 1\l  %381 = xor i32 %380, %379\l  %382 = insertelement \<2 x i32\> %377, i32 %381, i64 1\l  %383 = select i1 %327, \<2 x i32\> %382, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %384 = bitcast double %30 to \<2 x i32\>\l  %385 = extractelement \<2 x i32\> %384, i64 1\l  %386 = fadd contract double %4, %4\l  %387 = fdiv contract double %36, 6.000000e+00\l  %388 = select i1 %43, i32 %206, i32 %150\l  %389 = select i1 %43, i32 %202, i32 %146\l  %390 = select i1 %43, double %200, double %144\l  %391 = select i1 %43, double %189, double %133\l  %392 = select i1 %43, \<2 x i32\> %211, \<2 x i32\> %156\l  %393 = bitcast \<2 x i32\> %392 to double\l  %394 = icmp eq i32 %389, 0\l  %395 = select i1 %394, double %390, double %391\l  %396 = bitcast double %395 to \<2 x i32\>\l  %397 = xor i32 %388, %213\l  %398 = and i32 %397, -2147483648\l  %399 = extractelement \<2 x i32\> %396, i64 1\l  %400 = xor i32 %399, %398\l  %401 = insertelement \<2 x i32\> %396, i32 %400, i64 1\l  %402 = select i1 %155, \<2 x i32\> %401, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %403 = bitcast \<2 x i32\> %402 to double\l  %404 = bitcast \<2 x i32\> %328 to double\l  %405 = icmp eq i32 %318, 0\l  %406 = select i1 %405, double %316, double %305\l  %407 = bitcast double %406 to \<2 x i32\>\l  %408 = xor i32 %322, %385\l  %409 = and i32 %408, -2147483648\l  %410 = extractelement \<2 x i32\> %407, i64 1\l  %411 = xor i32 %410, %409\l  %412 = insertelement \<2 x i32\> %407, i32 %411, i64 1\l  %413 = select i1 %327, \<2 x i32\> %412, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %414 = bitcast \<2 x i32\> %413 to double\l  %415 = bitcast \<2 x i32\> %328 to double\l  %416 = icmp eq i32 %318, 0\l  %417 = select i1 %416, double %316, double %305\l  %418 = bitcast double %417 to \<2 x i32\>\l  %419 = xor i32 %322, %385\l  %420 = and i32 %419, -2147483648\l  %421 = extractelement \<2 x i32\> %418, i64 1\l  %422 = xor i32 %421, %420\l  %423 = insertelement \<2 x i32\> %418, i32 %422, i64 1\l  %424 = select i1 %327, \<2 x i32\> %423, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %425 = bitcast \<2 x i32\> %424 to double\l  %426 = bitcast \<2 x i32\> %328 to double\l  %427 = icmp eq i32 %318, 0\l  %428 = select i1 %427, double %316, double %305\l  %429 = bitcast double %428 to \<2 x i32\>\l  %430 = xor i32 %322, %385\l  %431 = and i32 %430, -2147483648\l  %432 = extractelement \<2 x i32\> %429, i64 1\l  %433 = xor i32 %432, %431\l  %434 = insertelement \<2 x i32\> %429, i32 %433, i64 1\l  %435 = select i1 %327, \<2 x i32\> %434, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %436 = bitcast \<2 x i32\> %435 to double\l  %437 = bitcast \<2 x i32\> %383 to double\l  %438 = icmp eq i32 %374, 0\l  %439 = select i1 %438, double %372, double %361\l  %440 = bitcast double %439 to \<2 x i32\>\l  %441 = xor i32 %378, %385\l  %442 = and i32 %441, -2147483648\l  %443 = extractelement \<2 x i32\> %440, i64 1\l  %444 = xor i32 %443, %442\l  %445 = insertelement \<2 x i32\> %440, i32 %444, i64 1\l  %446 = select i1 %327, \<2 x i32\> %445, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %447 = bitcast \<2 x i32\> %446 to double\l  %448 = bitcast \<2 x i32\> %383 to double\l  %449 = icmp eq i32 %374, 0\l  %450 = select i1 %449, double %372, double %361\l  %451 = bitcast double %450 to \<2 x i32\>\l  %452 = xor i32 %378, %385\l  %453 = and i32 %452, -2147483648\l  %454 = extractelement \<2 x i32\> %451, i64 1\l  %455 = xor i32 %454, %453\l  %456 = insertelement \<2 x i32\> %451, i32 %455, i64 1\l  %457 = select i1 %327, \<2 x i32\> %456, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %458 = bitcast \<2 x i32\> %457 to double\l  %459 = bitcast \<2 x i32\> %383 to double\l  %460 = icmp eq i32 %374, 0\l  %461 = select i1 %460, double %372, double %361\l  %462 = bitcast double %461 to \<2 x i32\>\l  %463 = xor i32 %378, %385\l  %464 = and i32 %463, -2147483648\l  %465 = extractelement \<2 x i32\> %462, i64 1\l  %466 = xor i32 %465, %464\l  %467 = insertelement \<2 x i32\> %462, i32 %466, i64 1\l  %468 = select i1 %327, \<2 x i32\> %467, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %469 = bitcast \<2 x i32\> %468 to double\l  br label %473\l}"];
	Node0x5715a60 -> Node0x572ad70;
	Node0x5715af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%470:\l470:                                              \l  %471 = phi double [ 0.000000e+00, %10 ], [ %2693, %2525 ]\l  %472 = getelementptr inbounds double, double addrspace(1)* %0, i64 %20\l  store double %471, double addrspace(1)* %472, align 8, !tbaa !7\l  ret void\l}"];
	Node0x572ad70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%473:\l473:                                              \l  %474 = phi double [ 0.000000e+00, %39 ], [ %2645, %2525 ]\l  %475 = phi double [ 0.000000e+00, %39 ], [ %2651, %2525 ]\l  %476 = phi double [ 0.000000e+00, %39 ], [ %2657, %2525 ]\l  %477 = phi double [ 0.000000e+00, %39 ], [ %2663, %2525 ]\l  %478 = phi double [ 0.000000e+00, %39 ], [ %2669, %2525 ]\l  %479 = phi double [ 0.000000e+00, %39 ], [ %2675, %2525 ]\l  %480 = phi double [ 1.000000e+00, %39 ], [ %2681, %2525 ]\l  %481 = phi double [ 0.000000e+00, %39 ], [ %2687, %2525 ]\l  %482 = phi double [ 0.000000e+00, %39 ], [ %2693, %2525 ]\l  %483 = phi i32 [ 0, %39 ], [ %2694, %2525 ]\l  %484 = sitofp i32 %483 to double\l  %485 = fmul contract double %36, %484\l  %486 = fsub contract double %485, %9\l  %487 = fmul contract double %486, %4\l  %488 = tail call double @llvm.fabs.f64(double %487)\l  %489 = fcmp olt double %488, 0x41D0000000000000\l  br i1 %489, label %490, label %509\l|{<s0>T|<s1>F}}"];
	Node0x572ad70:s0 -> Node0x572bf60;
	Node0x572ad70:s1 -> Node0x572bff0;
	Node0x572bf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%490:\l490:                                              \l  %491 = fmul double %488, 0x3FE45F306DC9C883\l  %492 = tail call double @llvm.rint.f64(double %491)\l  %493 = tail call double @llvm.fma.f64(double %492, double\l... 0xBFF921FB54442D18, double %488)\l  %494 = tail call double @llvm.fma.f64(double %492, double\l... 0xBC91A62633145C00, double %493)\l  %495 = fmul double %492, 0x3C91A62633145C00\l  %496 = fneg double %495\l  %497 = tail call double @llvm.fma.f64(double %492, double\l... 0x3C91A62633145C00, double %496)\l  %498 = fsub double %493, %495\l  %499 = fsub double %493, %498\l  %500 = fsub double %499, %495\l  %501 = fsub double %498, %494\l  %502 = fadd double %501, %500\l  %503 = fsub double %502, %497\l  %504 = tail call double @llvm.fma.f64(double %492, double\l... 0xB97B839A252049C0, double %503)\l  %505 = fadd double %494, %504\l  %506 = fsub double %505, %494\l  %507 = fsub double %504, %506\l  %508 = fptosi double %492 to i32\l  br label %585\l}"];
	Node0x572bf60 -> Node0x572cdf0;
	Node0x572bff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%509:\l509:                                              \l  %510 = tail call double @llvm.amdgcn.trig.preop.f64(double %488, i32 0)\l  %511 = tail call double @llvm.amdgcn.trig.preop.f64(double %488, i32 1)\l  %512 = tail call double @llvm.amdgcn.trig.preop.f64(double %488, i32 2)\l  %513 = fcmp oge double %488, 0x7B00000000000000\l  %514 = tail call double @llvm.amdgcn.ldexp.f64(double %488, i32 -128)\l  %515 = select i1 %513, double %514, double %488\l  %516 = fmul double %512, %515\l  %517 = fneg double %516\l  %518 = tail call double @llvm.fma.f64(double %512, double %515, double %517)\l  %519 = fmul double %511, %515\l  %520 = fneg double %519\l  %521 = tail call double @llvm.fma.f64(double %511, double %515, double %520)\l  %522 = fmul double %510, %515\l  %523 = fneg double %522\l  %524 = tail call double @llvm.fma.f64(double %510, double %515, double %523)\l  %525 = fadd double %519, %524\l  %526 = fsub double %525, %519\l  %527 = fsub double %525, %526\l  %528 = fsub double %524, %526\l  %529 = fsub double %519, %527\l  %530 = fadd double %528, %529\l  %531 = fadd double %516, %521\l  %532 = fsub double %531, %516\l  %533 = fsub double %531, %532\l  %534 = fsub double %521, %532\l  %535 = fsub double %516, %533\l  %536 = fadd double %534, %535\l  %537 = fadd double %531, %530\l  %538 = fsub double %537, %531\l  %539 = fsub double %537, %538\l  %540 = fsub double %530, %538\l  %541 = fsub double %531, %539\l  %542 = fadd double %540, %541\l  %543 = fadd double %536, %542\l  %544 = fadd double %518, %543\l  %545 = fadd double %522, %525\l  %546 = fsub double %545, %522\l  %547 = fsub double %525, %546\l  %548 = fadd double %547, %537\l  %549 = fsub double %548, %547\l  %550 = fsub double %537, %549\l  %551 = fadd double %550, %544\l  %552 = tail call double @llvm.amdgcn.ldexp.f64(double %545, i32 -2)\l  %553 = tail call double @llvm.amdgcn.fract.f64(double %552)\l  %554 = tail call i1 @llvm.amdgcn.class.f64(double %552, i32 516)\l  %555 = select i1 %554, double 0.000000e+00, double %553\l  %556 = tail call double @llvm.amdgcn.ldexp.f64(double %555, i32 2)\l  %557 = fadd double %556, %548\l  %558 = fcmp olt double %557, 0.000000e+00\l  %559 = select i1 %558, double 4.000000e+00, double 0.000000e+00\l  %560 = fadd double %556, %559\l  %561 = fadd double %548, %560\l  %562 = fptosi double %561 to i32\l  %563 = sitofp i32 %562 to double\l  %564 = fsub double %560, %563\l  %565 = fadd double %548, %564\l  %566 = fsub double %565, %564\l  %567 = fsub double %548, %566\l  %568 = fadd double %551, %567\l  %569 = fcmp oge double %565, 5.000000e-01\l  %570 = zext i1 %569 to i32\l  %571 = add nsw i32 %570, %562\l  %572 = select i1 %569, double 1.000000e+00, double 0.000000e+00\l  %573 = fsub double %565, %572\l  %574 = fadd double %573, %568\l  %575 = fsub double %574, %573\l  %576 = fsub double %568, %575\l  %577 = fmul double %574, 0x3FF921FB54442D18\l  %578 = fneg double %577\l  %579 = tail call double @llvm.fma.f64(double %574, double\l... 0x3FF921FB54442D18, double %578)\l  %580 = tail call double @llvm.fma.f64(double %574, double\l... 0x3C91A62633145C07, double %579)\l  %581 = tail call double @llvm.fma.f64(double %576, double\l... 0x3FF921FB54442D18, double %580)\l  %582 = fadd double %577, %581\l  %583 = fsub double %582, %577\l  %584 = fsub double %581, %583\l  br label %585\l}"];
	Node0x572bff0 -> Node0x572cdf0;
	Node0x572cdf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%585:\l585:                                              \l  %586 = phi double [ %507, %490 ], [ %584, %509 ]\l  %587 = phi double [ %505, %490 ], [ %582, %509 ]\l  %588 = phi i32 [ %508, %490 ], [ %571, %509 ]\l  %589 = fmul double %587, %587\l  %590 = fmul double %589, 5.000000e-01\l  %591 = fsub double 1.000000e+00, %590\l  %592 = fsub double 1.000000e+00, %591\l  %593 = fsub double %592, %590\l  %594 = fmul double %589, %589\l  %595 = tail call double @llvm.fma.f64(double %589, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %596 = tail call double @llvm.fma.f64(double %589, double %595, double\l... 0xBE927E4FA17F65F6)\l  %597 = tail call double @llvm.fma.f64(double %589, double %596, double\l... 0x3EFA01A019F4EC90)\l  %598 = tail call double @llvm.fma.f64(double %589, double %597, double\l... 0xBF56C16C16C16967)\l  %599 = tail call double @llvm.fma.f64(double %589, double %598, double\l... 0x3FA5555555555555)\l  %600 = fneg double %586\l  %601 = tail call double @llvm.fma.f64(double %587, double %600, double %593)\l  %602 = tail call double @llvm.fma.f64(double %594, double %599, double %601)\l  %603 = fadd double %591, %602\l  %604 = tail call double @llvm.fma.f64(double %589, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %605 = tail call double @llvm.fma.f64(double %589, double %604, double\l... 0x3EC71DE3796CDE01)\l  %606 = tail call double @llvm.fma.f64(double %589, double %605, double\l... 0xBF2A01A019E83E5C)\l  %607 = tail call double @llvm.fma.f64(double %589, double %606, double\l... 0x3F81111111110BB3)\l  %608 = fneg double %589\l  %609 = fmul double %587, %608\l  %610 = fmul double %586, 5.000000e-01\l  %611 = tail call double @llvm.fma.f64(double %609, double %607, double %610)\l  %612 = tail call double @llvm.fma.f64(double %589, double %611, double %600)\l  %613 = tail call double @llvm.fma.f64(double %609, double\l... 0xBFC5555555555555, double %612)\l  %614 = fsub double %587, %613\l  %615 = fneg double %614\l  %616 = and i32 %588, 1\l  %617 = icmp eq i32 %616, 0\l  %618 = select i1 %617, double %603, double %615\l  %619 = bitcast double %618 to \<2 x i32\>\l  %620 = shl i32 %588, 30\l  %621 = and i32 %620, -2147483648\l  %622 = extractelement \<2 x i32\> %619, i64 1\l  %623 = xor i32 %622, %621\l  %624 = insertelement \<2 x i32\> %619, i32 %623, i64 1\l  %625 = tail call i1 @llvm.amdgcn.class.f64(double %488, i32 504)\l  %626 = select i1 %625, \<2 x i32\> %624, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %627 = bitcast \<2 x i32\> %626 to double\l  %628 = fneg contract double %486\l  %629 = fdiv contract double %628, %5\l  %630 = tail call double @llvm.fabs.f64(double %629)\l  %631 = fadd double %630, 0xBFE62E42FEFA39EF\l  %632 = fsub double %631, %630\l  %633 = fsub double %632, %631\l  %634 = fadd double %630, %633\l  %635 = fadd double %632, 0x3FE62E42FEFA39EF\l  %636 = fsub double %634, %635\l  %637 = fadd double %636, 0xBC7ABC9E3B39803F\l  %638 = fadd double %631, %637\l  %639 = fsub double %638, %631\l  %640 = fsub double %637, %639\l  %641 = fmul double %638, 0x3FF71547652B82FE\l  %642 = tail call double @llvm.rint.f64(double %641)\l  %643 = tail call double @llvm.fma.f64(double %642, double\l... 0xBFE62E42FEFA3000, double %638)\l  %644 = fadd double %640, %643\l  %645 = fsub double %644, %643\l  %646 = fsub double %640, %645\l  %647 = fmul double %642, 0x3D53DE6AF278E000\l  %648 = fsub double %644, %647\l  %649 = fsub double %644, %648\l  %650 = fsub double %649, %647\l  %651 = fadd double %646, %650\l  %652 = fadd double %648, %651\l  %653 = fsub double %652, %648\l  %654 = fsub double %651, %653\l  %655 = fmul double %642, 0x3AC9CC01F97B57A0\l  %656 = fsub double %652, %655\l  %657 = fsub double %652, %656\l  %658 = fsub double %657, %655\l  %659 = fadd double %654, %658\l  %660 = fadd double %656, %659\l  %661 = fsub double %660, %656\l  %662 = fsub double %659, %661\l  %663 = tail call double @llvm.fma.f64(double %660, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %664 = tail call double @llvm.fma.f64(double %660, double %663, double\l... 0x3EC71DEE623FDE64)\l  %665 = tail call double @llvm.fma.f64(double %660, double %664, double\l... 0x3EFA01997C89E6B0)\l  %666 = tail call double @llvm.fma.f64(double %660, double %665, double\l... 0x3F2A01A014761F6E)\l  %667 = tail call double @llvm.fma.f64(double %660, double %666, double\l... 0x3F56C16C1852B7B0)\l  %668 = tail call double @llvm.fma.f64(double %660, double %667, double\l... 0x3F81111111122322)\l  %669 = tail call double @llvm.fma.f64(double %660, double %668, double\l... 0x3FA55555555502A1)\l  %670 = tail call double @llvm.fma.f64(double %660, double %669, double\l... 0x3FC5555555555511)\l  %671 = tail call double @llvm.fma.f64(double %660, double %670, double\l... 0x3FE000000000000B)\l  %672 = fmul double %660, %660\l  %673 = fneg double %672\l  %674 = tail call double @llvm.fma.f64(double %660, double %660, double %673)\l  %675 = fmul double %662, 2.000000e+00\l  %676 = tail call double @llvm.fma.f64(double %660, double %675, double %674)\l  %677 = fadd double %672, %676\l  %678 = fsub double %677, %672\l  %679 = fsub double %676, %678\l  %680 = fmul double %677, %671\l  %681 = fneg double %680\l  %682 = tail call double @llvm.fma.f64(double %677, double %671, double %681)\l  %683 = tail call double @llvm.fma.f64(double %679, double %671, double %682)\l  %684 = fadd double %680, %683\l  %685 = fsub double %684, %680\l  %686 = fsub double %683, %685\l  %687 = fadd double %660, %684\l  %688 = fsub double %687, %660\l  %689 = fsub double %684, %688\l  %690 = fadd double %662, %686\l  %691 = fadd double %690, %689\l  %692 = fadd double %687, %691\l  %693 = fsub double %692, %687\l  %694 = fsub double %691, %693\l  %695 = fadd double %692, 1.000000e+00\l  %696 = fadd double %695, -1.000000e+00\l  %697 = fsub double %692, %696\l  %698 = fadd double %694, %697\l  %699 = fadd double %695, %698\l  %700 = fsub double %699, %695\l  %701 = fsub double %698, %700\l  %702 = fptosi double %642 to i32\l  %703 = tail call double @llvm.amdgcn.ldexp.f64(double %699, i32 %702)\l  %704 = tail call double @llvm.amdgcn.ldexp.f64(double %701, i32 %702)\l  %705 = tail call double @llvm.amdgcn.rcp.f64(double %703)\l  %706 = fneg double %703\l  %707 = tail call double @llvm.fma.f64(double %706, double %705, double\l... 1.000000e+00)\l  %708 = tail call double @llvm.fma.f64(double %707, double %705, double %705)\l  %709 = tail call double @llvm.fma.f64(double %706, double %708, double\l... 1.000000e+00)\l  %710 = tail call double @llvm.fma.f64(double %709, double %708, double %708)\l  %711 = fmul double %703, %710\l  %712 = fneg double %711\l  %713 = tail call double @llvm.fma.f64(double %710, double %703, double %712)\l  %714 = tail call double @llvm.fma.f64(double %710, double %704, double %713)\l  %715 = fadd double %711, %714\l  %716 = fsub double %715, %711\l  %717 = fsub double %714, %716\l  %718 = fsub double 1.000000e+00, %715\l  %719 = fsub double 1.000000e+00, %718\l  %720 = fsub double %719, %715\l  %721 = fsub double %720, %717\l  %722 = fadd double %718, %721\l  %723 = fsub double %722, %718\l  %724 = fsub double %721, %723\l  %725 = fmul double %710, %722\l  %726 = fmul double %703, %725\l  %727 = fneg double %726\l  %728 = tail call double @llvm.fma.f64(double %725, double %703, double %727)\l  %729 = tail call double @llvm.fma.f64(double %725, double %704, double %728)\l  %730 = fadd double %726, %729\l  %731 = fsub double %730, %726\l  %732 = fsub double %729, %731\l  %733 = fsub double %722, %730\l  %734 = fsub double %722, %733\l  %735 = fsub double %734, %730\l  %736 = fadd double %724, %735\l  %737 = fsub double %736, %732\l  %738 = fadd double %733, %737\l  %739 = fmul double %710, %738\l  %740 = fadd double %710, %725\l  %741 = fsub double %740, %710\l  %742 = fsub double %725, %741\l  %743 = fadd double %742, %739\l  %744 = fadd double %740, %743\l  %745 = fsub double %744, %740\l  %746 = fsub double %743, %745\l  %747 = tail call double @llvm.amdgcn.ldexp.f64(double %744, i32 -2)\l  %748 = tail call double @llvm.amdgcn.ldexp.f64(double %746, i32 -2)\l  %749 = fadd double %703, %747\l  %750 = fsub double %749, %703\l  %751 = fsub double %747, %750\l  %752 = fadd double %704, %748\l  %753 = fadd double %752, %751\l  %754 = fadd double %749, %753\l  %755 = fcmp oge double %630, 0x408633CE8FB9F87E\l  %756 = select i1 %755, double 0x7FF0000000000000, double %754\l  %757 = fdiv contract double %627, %756\l  %758 = fmul contract double %757, 0x3F3FEABDAF5FE12A\l  %759 = fadd contract double %37, %485\l  %760 = fsub contract double %759, %9\l  %761 = fmul contract double %760, %4\l  %762 = tail call double @llvm.fabs.f64(double %761)\l  %763 = fcmp olt double %762, 0x41D0000000000000\l  br i1 %763, label %764, label %783\l|{<s0>T|<s1>F}}"];
	Node0x572cdf0:s0 -> Node0x5739f00;
	Node0x572cdf0:s1 -> Node0x5739f90;
	Node0x5739f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%764:\l764:                                              \l  %765 = fmul double %762, 0x3FE45F306DC9C883\l  %766 = tail call double @llvm.rint.f64(double %765)\l  %767 = tail call double @llvm.fma.f64(double %766, double\l... 0xBFF921FB54442D18, double %762)\l  %768 = tail call double @llvm.fma.f64(double %766, double\l... 0xBC91A62633145C00, double %767)\l  %769 = fmul double %766, 0x3C91A62633145C00\l  %770 = fneg double %769\l  %771 = tail call double @llvm.fma.f64(double %766, double\l... 0x3C91A62633145C00, double %770)\l  %772 = fsub double %767, %769\l  %773 = fsub double %767, %772\l  %774 = fsub double %773, %769\l  %775 = fsub double %772, %768\l  %776 = fadd double %775, %774\l  %777 = fsub double %776, %771\l  %778 = tail call double @llvm.fma.f64(double %766, double\l... 0xB97B839A252049C0, double %777)\l  %779 = fadd double %768, %778\l  %780 = fsub double %779, %768\l  %781 = fsub double %778, %780\l  %782 = fptosi double %766 to i32\l  br label %859\l}"];
	Node0x5739f00 -> Node0x573ad90;
	Node0x5739f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%783:\l783:                                              \l  %784 = tail call double @llvm.amdgcn.trig.preop.f64(double %762, i32 0)\l  %785 = tail call double @llvm.amdgcn.trig.preop.f64(double %762, i32 1)\l  %786 = tail call double @llvm.amdgcn.trig.preop.f64(double %762, i32 2)\l  %787 = fcmp oge double %762, 0x7B00000000000000\l  %788 = tail call double @llvm.amdgcn.ldexp.f64(double %762, i32 -128)\l  %789 = select i1 %787, double %788, double %762\l  %790 = fmul double %786, %789\l  %791 = fneg double %790\l  %792 = tail call double @llvm.fma.f64(double %786, double %789, double %791)\l  %793 = fmul double %785, %789\l  %794 = fneg double %793\l  %795 = tail call double @llvm.fma.f64(double %785, double %789, double %794)\l  %796 = fmul double %784, %789\l  %797 = fneg double %796\l  %798 = tail call double @llvm.fma.f64(double %784, double %789, double %797)\l  %799 = fadd double %793, %798\l  %800 = fsub double %799, %793\l  %801 = fsub double %799, %800\l  %802 = fsub double %798, %800\l  %803 = fsub double %793, %801\l  %804 = fadd double %802, %803\l  %805 = fadd double %790, %795\l  %806 = fsub double %805, %790\l  %807 = fsub double %805, %806\l  %808 = fsub double %795, %806\l  %809 = fsub double %790, %807\l  %810 = fadd double %808, %809\l  %811 = fadd double %805, %804\l  %812 = fsub double %811, %805\l  %813 = fsub double %811, %812\l  %814 = fsub double %804, %812\l  %815 = fsub double %805, %813\l  %816 = fadd double %814, %815\l  %817 = fadd double %810, %816\l  %818 = fadd double %792, %817\l  %819 = fadd double %796, %799\l  %820 = fsub double %819, %796\l  %821 = fsub double %799, %820\l  %822 = fadd double %821, %811\l  %823 = fsub double %822, %821\l  %824 = fsub double %811, %823\l  %825 = fadd double %824, %818\l  %826 = tail call double @llvm.amdgcn.ldexp.f64(double %819, i32 -2)\l  %827 = tail call double @llvm.amdgcn.fract.f64(double %826)\l  %828 = tail call i1 @llvm.amdgcn.class.f64(double %826, i32 516)\l  %829 = select i1 %828, double 0.000000e+00, double %827\l  %830 = tail call double @llvm.amdgcn.ldexp.f64(double %829, i32 2)\l  %831 = fadd double %830, %822\l  %832 = fcmp olt double %831, 0.000000e+00\l  %833 = select i1 %832, double 4.000000e+00, double 0.000000e+00\l  %834 = fadd double %830, %833\l  %835 = fadd double %822, %834\l  %836 = fptosi double %835 to i32\l  %837 = sitofp i32 %836 to double\l  %838 = fsub double %834, %837\l  %839 = fadd double %822, %838\l  %840 = fsub double %839, %838\l  %841 = fsub double %822, %840\l  %842 = fadd double %825, %841\l  %843 = fcmp oge double %839, 5.000000e-01\l  %844 = zext i1 %843 to i32\l  %845 = add nsw i32 %844, %836\l  %846 = select i1 %843, double 1.000000e+00, double 0.000000e+00\l  %847 = fsub double %839, %846\l  %848 = fadd double %847, %842\l  %849 = fsub double %848, %847\l  %850 = fsub double %842, %849\l  %851 = fmul double %848, 0x3FF921FB54442D18\l  %852 = fneg double %851\l  %853 = tail call double @llvm.fma.f64(double %848, double\l... 0x3FF921FB54442D18, double %852)\l  %854 = tail call double @llvm.fma.f64(double %848, double\l... 0x3C91A62633145C07, double %853)\l  %855 = tail call double @llvm.fma.f64(double %850, double\l... 0x3FF921FB54442D18, double %854)\l  %856 = fadd double %851, %855\l  %857 = fsub double %856, %851\l  %858 = fsub double %855, %857\l  br label %859\l}"];
	Node0x5739f90 -> Node0x573ad90;
	Node0x573ad90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%859:\l859:                                              \l  %860 = phi double [ %781, %764 ], [ %858, %783 ]\l  %861 = phi double [ %779, %764 ], [ %856, %783 ]\l  %862 = phi i32 [ %782, %764 ], [ %845, %783 ]\l  %863 = fmul double %861, %861\l  %864 = fmul double %863, 5.000000e-01\l  %865 = fsub double 1.000000e+00, %864\l  %866 = fsub double 1.000000e+00, %865\l  %867 = fsub double %866, %864\l  %868 = fmul double %863, %863\l  %869 = tail call double @llvm.fma.f64(double %863, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %870 = tail call double @llvm.fma.f64(double %863, double %869, double\l... 0xBE927E4FA17F65F6)\l  %871 = tail call double @llvm.fma.f64(double %863, double %870, double\l... 0x3EFA01A019F4EC90)\l  %872 = tail call double @llvm.fma.f64(double %863, double %871, double\l... 0xBF56C16C16C16967)\l  %873 = tail call double @llvm.fma.f64(double %863, double %872, double\l... 0x3FA5555555555555)\l  %874 = fneg double %860\l  %875 = tail call double @llvm.fma.f64(double %861, double %874, double %867)\l  %876 = tail call double @llvm.fma.f64(double %868, double %873, double %875)\l  %877 = fadd double %865, %876\l  %878 = tail call double @llvm.fma.f64(double %863, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %879 = tail call double @llvm.fma.f64(double %863, double %878, double\l... 0x3EC71DE3796CDE01)\l  %880 = tail call double @llvm.fma.f64(double %863, double %879, double\l... 0xBF2A01A019E83E5C)\l  %881 = tail call double @llvm.fma.f64(double %863, double %880, double\l... 0x3F81111111110BB3)\l  %882 = fneg double %863\l  %883 = fmul double %861, %882\l  %884 = fmul double %860, 5.000000e-01\l  %885 = tail call double @llvm.fma.f64(double %883, double %881, double %884)\l  %886 = tail call double @llvm.fma.f64(double %863, double %885, double %874)\l  %887 = tail call double @llvm.fma.f64(double %883, double\l... 0xBFC5555555555555, double %886)\l  %888 = fsub double %861, %887\l  %889 = fneg double %888\l  %890 = and i32 %862, 1\l  %891 = icmp eq i32 %890, 0\l  %892 = select i1 %891, double %877, double %889\l  %893 = bitcast double %892 to \<2 x i32\>\l  %894 = shl i32 %862, 30\l  %895 = and i32 %894, -2147483648\l  %896 = extractelement \<2 x i32\> %893, i64 1\l  %897 = xor i32 %896, %895\l  %898 = insertelement \<2 x i32\> %893, i32 %897, i64 1\l  %899 = tail call i1 @llvm.amdgcn.class.f64(double %762, i32 504)\l  %900 = select i1 %899, \<2 x i32\> %898, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %901 = bitcast \<2 x i32\> %900 to double\l  %902 = fneg contract double %760\l  %903 = fdiv contract double %902, %5\l  %904 = tail call double @llvm.fabs.f64(double %903)\l  %905 = fadd double %904, 0xBFE62E42FEFA39EF\l  %906 = fsub double %905, %904\l  %907 = fsub double %906, %905\l  %908 = fadd double %904, %907\l  %909 = fadd double %906, 0x3FE62E42FEFA39EF\l  %910 = fsub double %908, %909\l  %911 = fadd double %910, 0xBC7ABC9E3B39803F\l  %912 = fadd double %905, %911\l  %913 = fsub double %912, %905\l  %914 = fsub double %911, %913\l  %915 = fmul double %912, 0x3FF71547652B82FE\l  %916 = tail call double @llvm.rint.f64(double %915)\l  %917 = tail call double @llvm.fma.f64(double %916, double\l... 0xBFE62E42FEFA3000, double %912)\l  %918 = fadd double %914, %917\l  %919 = fsub double %918, %917\l  %920 = fsub double %914, %919\l  %921 = fmul double %916, 0x3D53DE6AF278E000\l  %922 = fsub double %918, %921\l  %923 = fsub double %918, %922\l  %924 = fsub double %923, %921\l  %925 = fadd double %920, %924\l  %926 = fadd double %922, %925\l  %927 = fsub double %926, %922\l  %928 = fsub double %925, %927\l  %929 = fmul double %916, 0x3AC9CC01F97B57A0\l  %930 = fsub double %926, %929\l  %931 = fsub double %926, %930\l  %932 = fsub double %931, %929\l  %933 = fadd double %928, %932\l  %934 = fadd double %930, %933\l  %935 = fsub double %934, %930\l  %936 = fsub double %933, %935\l  %937 = tail call double @llvm.fma.f64(double %934, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %938 = tail call double @llvm.fma.f64(double %934, double %937, double\l... 0x3EC71DEE623FDE64)\l  %939 = tail call double @llvm.fma.f64(double %934, double %938, double\l... 0x3EFA01997C89E6B0)\l  %940 = tail call double @llvm.fma.f64(double %934, double %939, double\l... 0x3F2A01A014761F6E)\l  %941 = tail call double @llvm.fma.f64(double %934, double %940, double\l... 0x3F56C16C1852B7B0)\l  %942 = tail call double @llvm.fma.f64(double %934, double %941, double\l... 0x3F81111111122322)\l  %943 = tail call double @llvm.fma.f64(double %934, double %942, double\l... 0x3FA55555555502A1)\l  %944 = tail call double @llvm.fma.f64(double %934, double %943, double\l... 0x3FC5555555555511)\l  %945 = tail call double @llvm.fma.f64(double %934, double %944, double\l... 0x3FE000000000000B)\l  %946 = fmul double %934, %934\l  %947 = fneg double %946\l  %948 = tail call double @llvm.fma.f64(double %934, double %934, double %947)\l  %949 = fmul double %936, 2.000000e+00\l  %950 = tail call double @llvm.fma.f64(double %934, double %949, double %948)\l  %951 = fadd double %946, %950\l  %952 = fsub double %951, %946\l  %953 = fsub double %950, %952\l  %954 = fmul double %951, %945\l  %955 = fneg double %954\l  %956 = tail call double @llvm.fma.f64(double %951, double %945, double %955)\l  %957 = tail call double @llvm.fma.f64(double %953, double %945, double %956)\l  %958 = fadd double %954, %957\l  %959 = fsub double %958, %954\l  %960 = fsub double %957, %959\l  %961 = fadd double %934, %958\l  %962 = fsub double %961, %934\l  %963 = fsub double %958, %962\l  %964 = fadd double %936, %960\l  %965 = fadd double %964, %963\l  %966 = fadd double %961, %965\l  %967 = fsub double %966, %961\l  %968 = fsub double %965, %967\l  %969 = fadd double %966, 1.000000e+00\l  %970 = fadd double %969, -1.000000e+00\l  %971 = fsub double %966, %970\l  %972 = fadd double %968, %971\l  %973 = fadd double %969, %972\l  %974 = fsub double %973, %969\l  %975 = fsub double %972, %974\l  %976 = fptosi double %916 to i32\l  %977 = tail call double @llvm.amdgcn.ldexp.f64(double %973, i32 %976)\l  %978 = tail call double @llvm.amdgcn.ldexp.f64(double %975, i32 %976)\l  %979 = tail call double @llvm.amdgcn.rcp.f64(double %977)\l  %980 = fneg double %977\l  %981 = tail call double @llvm.fma.f64(double %980, double %979, double\l... 1.000000e+00)\l  %982 = tail call double @llvm.fma.f64(double %981, double %979, double %979)\l  %983 = tail call double @llvm.fma.f64(double %980, double %982, double\l... 1.000000e+00)\l  %984 = tail call double @llvm.fma.f64(double %983, double %982, double %982)\l  %985 = fmul double %977, %984\l  %986 = fneg double %985\l  %987 = tail call double @llvm.fma.f64(double %984, double %977, double %986)\l  %988 = tail call double @llvm.fma.f64(double %984, double %978, double %987)\l  %989 = fadd double %985, %988\l  %990 = fsub double %989, %985\l  %991 = fsub double %988, %990\l  %992 = fsub double 1.000000e+00, %989\l  %993 = fsub double 1.000000e+00, %992\l  %994 = fsub double %993, %989\l  %995 = fsub double %994, %991\l  %996 = fadd double %992, %995\l  %997 = fsub double %996, %992\l  %998 = fsub double %995, %997\l  %999 = fmul double %984, %996\l  %1000 = fmul double %977, %999\l  %1001 = fneg double %1000\l  %1002 = tail call double @llvm.fma.f64(double %999, double %977, double\l... %1001)\l  %1003 = tail call double @llvm.fma.f64(double %999, double %978, double\l... %1002)\l  %1004 = fadd double %1000, %1003\l  %1005 = fsub double %1004, %1000\l  %1006 = fsub double %1003, %1005\l  %1007 = fsub double %996, %1004\l  %1008 = fsub double %996, %1007\l  %1009 = fsub double %1008, %1004\l  %1010 = fadd double %998, %1009\l  %1011 = fsub double %1010, %1006\l  %1012 = fadd double %1007, %1011\l  %1013 = fmul double %984, %1012\l  %1014 = fadd double %984, %999\l  %1015 = fsub double %1014, %984\l  %1016 = fsub double %999, %1015\l  %1017 = fadd double %1016, %1013\l  %1018 = fadd double %1014, %1017\l  %1019 = fsub double %1018, %1014\l  %1020 = fsub double %1017, %1019\l  %1021 = tail call double @llvm.amdgcn.ldexp.f64(double %1018, i32 -2)\l  %1022 = tail call double @llvm.amdgcn.ldexp.f64(double %1020, i32 -2)\l  %1023 = fadd double %977, %1021\l  %1024 = fsub double %1023, %977\l  %1025 = fsub double %1021, %1024\l  %1026 = fadd double %978, %1022\l  %1027 = fadd double %1026, %1025\l  %1028 = fadd double %1023, %1027\l  %1029 = fcmp oge double %904, 0x408633CE8FB9F87E\l  %1030 = select i1 %1029, double 0x7FF0000000000000, double %1028\l  %1031 = fdiv contract double %901, %1030\l  %1032 = fmul contract double %1031, 0x3F3FEABDAF5FE12A\l  %1033 = fadd contract double %36, %485\l  %1034 = fsub contract double %1033, %9\l  %1035 = fmul contract double %1034, %4\l  %1036 = tail call double @llvm.fabs.f64(double %1035)\l  %1037 = fcmp olt double %1036, 0x41D0000000000000\l  br i1 %1037, label %1038, label %1057\l|{<s0>T|<s1>F}}"];
	Node0x573ad90:s0 -> Node0x572d9e0;
	Node0x573ad90:s1 -> Node0x572da30;
	Node0x572d9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1038:\l1038:                                             \l  %1039 = fmul double %1036, 0x3FE45F306DC9C883\l  %1040 = tail call double @llvm.rint.f64(double %1039)\l  %1041 = tail call double @llvm.fma.f64(double %1040, double\l... 0xBFF921FB54442D18, double %1036)\l  %1042 = tail call double @llvm.fma.f64(double %1040, double\l... 0xBC91A62633145C00, double %1041)\l  %1043 = fmul double %1040, 0x3C91A62633145C00\l  %1044 = fneg double %1043\l  %1045 = tail call double @llvm.fma.f64(double %1040, double\l... 0x3C91A62633145C00, double %1044)\l  %1046 = fsub double %1041, %1043\l  %1047 = fsub double %1041, %1046\l  %1048 = fsub double %1047, %1043\l  %1049 = fsub double %1046, %1042\l  %1050 = fadd double %1049, %1048\l  %1051 = fsub double %1050, %1045\l  %1052 = tail call double @llvm.fma.f64(double %1040, double\l... 0xB97B839A252049C0, double %1051)\l  %1053 = fadd double %1042, %1052\l  %1054 = fsub double %1053, %1042\l  %1055 = fsub double %1052, %1054\l  %1056 = fptosi double %1040 to i32\l  br label %1133\l}"];
	Node0x572d9e0 -> Node0x572e7f0;
	Node0x572da30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1057:\l1057:                                             \l  %1058 = tail call double @llvm.amdgcn.trig.preop.f64(double %1036, i32 0)\l  %1059 = tail call double @llvm.amdgcn.trig.preop.f64(double %1036, i32 1)\l  %1060 = tail call double @llvm.amdgcn.trig.preop.f64(double %1036, i32 2)\l  %1061 = fcmp oge double %1036, 0x7B00000000000000\l  %1062 = tail call double @llvm.amdgcn.ldexp.f64(double %1036, i32 -128)\l  %1063 = select i1 %1061, double %1062, double %1036\l  %1064 = fmul double %1060, %1063\l  %1065 = fneg double %1064\l  %1066 = tail call double @llvm.fma.f64(double %1060, double %1063, double\l... %1065)\l  %1067 = fmul double %1059, %1063\l  %1068 = fneg double %1067\l  %1069 = tail call double @llvm.fma.f64(double %1059, double %1063, double\l... %1068)\l  %1070 = fmul double %1058, %1063\l  %1071 = fneg double %1070\l  %1072 = tail call double @llvm.fma.f64(double %1058, double %1063, double\l... %1071)\l  %1073 = fadd double %1067, %1072\l  %1074 = fsub double %1073, %1067\l  %1075 = fsub double %1073, %1074\l  %1076 = fsub double %1072, %1074\l  %1077 = fsub double %1067, %1075\l  %1078 = fadd double %1076, %1077\l  %1079 = fadd double %1064, %1069\l  %1080 = fsub double %1079, %1064\l  %1081 = fsub double %1079, %1080\l  %1082 = fsub double %1069, %1080\l  %1083 = fsub double %1064, %1081\l  %1084 = fadd double %1082, %1083\l  %1085 = fadd double %1079, %1078\l  %1086 = fsub double %1085, %1079\l  %1087 = fsub double %1085, %1086\l  %1088 = fsub double %1078, %1086\l  %1089 = fsub double %1079, %1087\l  %1090 = fadd double %1088, %1089\l  %1091 = fadd double %1084, %1090\l  %1092 = fadd double %1066, %1091\l  %1093 = fadd double %1070, %1073\l  %1094 = fsub double %1093, %1070\l  %1095 = fsub double %1073, %1094\l  %1096 = fadd double %1095, %1085\l  %1097 = fsub double %1096, %1095\l  %1098 = fsub double %1085, %1097\l  %1099 = fadd double %1098, %1092\l  %1100 = tail call double @llvm.amdgcn.ldexp.f64(double %1093, i32 -2)\l  %1101 = tail call double @llvm.amdgcn.fract.f64(double %1100)\l  %1102 = tail call i1 @llvm.amdgcn.class.f64(double %1100, i32 516)\l  %1103 = select i1 %1102, double 0.000000e+00, double %1101\l  %1104 = tail call double @llvm.amdgcn.ldexp.f64(double %1103, i32 2)\l  %1105 = fadd double %1104, %1096\l  %1106 = fcmp olt double %1105, 0.000000e+00\l  %1107 = select i1 %1106, double 4.000000e+00, double 0.000000e+00\l  %1108 = fadd double %1104, %1107\l  %1109 = fadd double %1096, %1108\l  %1110 = fptosi double %1109 to i32\l  %1111 = sitofp i32 %1110 to double\l  %1112 = fsub double %1108, %1111\l  %1113 = fadd double %1096, %1112\l  %1114 = fsub double %1113, %1112\l  %1115 = fsub double %1096, %1114\l  %1116 = fadd double %1099, %1115\l  %1117 = fcmp oge double %1113, 5.000000e-01\l  %1118 = zext i1 %1117 to i32\l  %1119 = add nsw i32 %1118, %1110\l  %1120 = select i1 %1117, double 1.000000e+00, double 0.000000e+00\l  %1121 = fsub double %1113, %1120\l  %1122 = fadd double %1121, %1116\l  %1123 = fsub double %1122, %1121\l  %1124 = fsub double %1116, %1123\l  %1125 = fmul double %1122, 0x3FF921FB54442D18\l  %1126 = fneg double %1125\l  %1127 = tail call double @llvm.fma.f64(double %1122, double\l... 0x3FF921FB54442D18, double %1126)\l  %1128 = tail call double @llvm.fma.f64(double %1122, double\l... 0x3C91A62633145C07, double %1127)\l  %1129 = tail call double @llvm.fma.f64(double %1124, double\l... 0x3FF921FB54442D18, double %1128)\l  %1130 = fadd double %1125, %1129\l  %1131 = fsub double %1130, %1125\l  %1132 = fsub double %1129, %1131\l  br label %1133\l}"];
	Node0x572da30 -> Node0x572e7f0;
	Node0x572e7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1133:\l1133:                                             \l  %1134 = phi double [ %1055, %1038 ], [ %1132, %1057 ]\l  %1135 = phi double [ %1053, %1038 ], [ %1130, %1057 ]\l  %1136 = phi i32 [ %1056, %1038 ], [ %1119, %1057 ]\l  %1137 = fmul double %1135, %1135\l  %1138 = fmul double %1137, 5.000000e-01\l  %1139 = fsub double 1.000000e+00, %1138\l  %1140 = fsub double 1.000000e+00, %1139\l  %1141 = fsub double %1140, %1138\l  %1142 = fmul double %1137, %1137\l  %1143 = tail call double @llvm.fma.f64(double %1137, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1144 = tail call double @llvm.fma.f64(double %1137, double %1143, double\l... 0xBE927E4FA17F65F6)\l  %1145 = tail call double @llvm.fma.f64(double %1137, double %1144, double\l... 0x3EFA01A019F4EC90)\l  %1146 = tail call double @llvm.fma.f64(double %1137, double %1145, double\l... 0xBF56C16C16C16967)\l  %1147 = tail call double @llvm.fma.f64(double %1137, double %1146, double\l... 0x3FA5555555555555)\l  %1148 = fneg double %1134\l  %1149 = tail call double @llvm.fma.f64(double %1135, double %1148, double\l... %1141)\l  %1150 = tail call double @llvm.fma.f64(double %1142, double %1147, double\l... %1149)\l  %1151 = fadd double %1139, %1150\l  %1152 = tail call double @llvm.fma.f64(double %1137, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1153 = tail call double @llvm.fma.f64(double %1137, double %1152, double\l... 0x3EC71DE3796CDE01)\l  %1154 = tail call double @llvm.fma.f64(double %1137, double %1153, double\l... 0xBF2A01A019E83E5C)\l  %1155 = tail call double @llvm.fma.f64(double %1137, double %1154, double\l... 0x3F81111111110BB3)\l  %1156 = fneg double %1137\l  %1157 = fmul double %1135, %1156\l  %1158 = fmul double %1134, 5.000000e-01\l  %1159 = tail call double @llvm.fma.f64(double %1157, double %1155, double\l... %1158)\l  %1160 = tail call double @llvm.fma.f64(double %1137, double %1159, double\l... %1148)\l  %1161 = tail call double @llvm.fma.f64(double %1157, double\l... 0xBFC5555555555555, double %1160)\l  %1162 = fsub double %1135, %1161\l  %1163 = fneg double %1162\l  %1164 = and i32 %1136, 1\l  %1165 = icmp eq i32 %1164, 0\l  %1166 = select i1 %1165, double %1151, double %1163\l  %1167 = bitcast double %1166 to \<2 x i32\>\l  %1168 = shl i32 %1136, 30\l  %1169 = and i32 %1168, -2147483648\l  %1170 = extractelement \<2 x i32\> %1167, i64 1\l  %1171 = xor i32 %1170, %1169\l  %1172 = insertelement \<2 x i32\> %1167, i32 %1171, i64 1\l  %1173 = tail call i1 @llvm.amdgcn.class.f64(double %1036, i32 504)\l  %1174 = select i1 %1173, \<2 x i32\> %1172, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1175 = bitcast \<2 x i32\> %1174 to double\l  %1176 = fneg contract double %1034\l  %1177 = fdiv contract double %1176, %5\l  %1178 = tail call double @llvm.fabs.f64(double %1177)\l  %1179 = fadd double %1178, 0xBFE62E42FEFA39EF\l  %1180 = fsub double %1179, %1178\l  %1181 = fsub double %1180, %1179\l  %1182 = fadd double %1178, %1181\l  %1183 = fadd double %1180, 0x3FE62E42FEFA39EF\l  %1184 = fsub double %1182, %1183\l  %1185 = fadd double %1184, 0xBC7ABC9E3B39803F\l  %1186 = fadd double %1179, %1185\l  %1187 = fsub double %1186, %1179\l  %1188 = fsub double %1185, %1187\l  %1189 = fmul double %1186, 0x3FF71547652B82FE\l  %1190 = tail call double @llvm.rint.f64(double %1189)\l  %1191 = tail call double @llvm.fma.f64(double %1190, double\l... 0xBFE62E42FEFA3000, double %1186)\l  %1192 = fadd double %1188, %1191\l  %1193 = fsub double %1192, %1191\l  %1194 = fsub double %1188, %1193\l  %1195 = fmul double %1190, 0x3D53DE6AF278E000\l  %1196 = fsub double %1192, %1195\l  %1197 = fsub double %1192, %1196\l  %1198 = fsub double %1197, %1195\l  %1199 = fadd double %1194, %1198\l  %1200 = fadd double %1196, %1199\l  %1201 = fsub double %1200, %1196\l  %1202 = fsub double %1199, %1201\l  %1203 = fmul double %1190, 0x3AC9CC01F97B57A0\l  %1204 = fsub double %1200, %1203\l  %1205 = fsub double %1200, %1204\l  %1206 = fsub double %1205, %1203\l  %1207 = fadd double %1202, %1206\l  %1208 = fadd double %1204, %1207\l  %1209 = fsub double %1208, %1204\l  %1210 = fsub double %1207, %1209\l  %1211 = tail call double @llvm.fma.f64(double %1208, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %1212 = tail call double @llvm.fma.f64(double %1208, double %1211, double\l... 0x3EC71DEE623FDE64)\l  %1213 = tail call double @llvm.fma.f64(double %1208, double %1212, double\l... 0x3EFA01997C89E6B0)\l  %1214 = tail call double @llvm.fma.f64(double %1208, double %1213, double\l... 0x3F2A01A014761F6E)\l  %1215 = tail call double @llvm.fma.f64(double %1208, double %1214, double\l... 0x3F56C16C1852B7B0)\l  %1216 = tail call double @llvm.fma.f64(double %1208, double %1215, double\l... 0x3F81111111122322)\l  %1217 = tail call double @llvm.fma.f64(double %1208, double %1216, double\l... 0x3FA55555555502A1)\l  %1218 = tail call double @llvm.fma.f64(double %1208, double %1217, double\l... 0x3FC5555555555511)\l  %1219 = tail call double @llvm.fma.f64(double %1208, double %1218, double\l... 0x3FE000000000000B)\l  %1220 = fmul double %1208, %1208\l  %1221 = fneg double %1220\l  %1222 = tail call double @llvm.fma.f64(double %1208, double %1208, double\l... %1221)\l  %1223 = fmul double %1210, 2.000000e+00\l  %1224 = tail call double @llvm.fma.f64(double %1208, double %1223, double\l... %1222)\l  %1225 = fadd double %1220, %1224\l  %1226 = fsub double %1225, %1220\l  %1227 = fsub double %1224, %1226\l  %1228 = fmul double %1225, %1219\l  %1229 = fneg double %1228\l  %1230 = tail call double @llvm.fma.f64(double %1225, double %1219, double\l... %1229)\l  %1231 = tail call double @llvm.fma.f64(double %1227, double %1219, double\l... %1230)\l  %1232 = fadd double %1228, %1231\l  %1233 = fsub double %1232, %1228\l  %1234 = fsub double %1231, %1233\l  %1235 = fadd double %1208, %1232\l  %1236 = fsub double %1235, %1208\l  %1237 = fsub double %1232, %1236\l  %1238 = fadd double %1210, %1234\l  %1239 = fadd double %1238, %1237\l  %1240 = fadd double %1235, %1239\l  %1241 = fsub double %1240, %1235\l  %1242 = fsub double %1239, %1241\l  %1243 = fadd double %1240, 1.000000e+00\l  %1244 = fadd double %1243, -1.000000e+00\l  %1245 = fsub double %1240, %1244\l  %1246 = fadd double %1242, %1245\l  %1247 = fadd double %1243, %1246\l  %1248 = fsub double %1247, %1243\l  %1249 = fsub double %1246, %1248\l  %1250 = fptosi double %1190 to i32\l  %1251 = tail call double @llvm.amdgcn.ldexp.f64(double %1247, i32 %1250)\l  %1252 = tail call double @llvm.amdgcn.ldexp.f64(double %1249, i32 %1250)\l  %1253 = tail call double @llvm.amdgcn.rcp.f64(double %1251)\l  %1254 = fneg double %1251\l  %1255 = tail call double @llvm.fma.f64(double %1254, double %1253, double\l... 1.000000e+00)\l  %1256 = tail call double @llvm.fma.f64(double %1255, double %1253, double\l... %1253)\l  %1257 = tail call double @llvm.fma.f64(double %1254, double %1256, double\l... 1.000000e+00)\l  %1258 = tail call double @llvm.fma.f64(double %1257, double %1256, double\l... %1256)\l  %1259 = fmul double %1251, %1258\l  %1260 = fneg double %1259\l  %1261 = tail call double @llvm.fma.f64(double %1258, double %1251, double\l... %1260)\l  %1262 = tail call double @llvm.fma.f64(double %1258, double %1252, double\l... %1261)\l  %1263 = fadd double %1259, %1262\l  %1264 = fsub double %1263, %1259\l  %1265 = fsub double %1262, %1264\l  %1266 = fsub double 1.000000e+00, %1263\l  %1267 = fsub double 1.000000e+00, %1266\l  %1268 = fsub double %1267, %1263\l  %1269 = fsub double %1268, %1265\l  %1270 = fadd double %1266, %1269\l  %1271 = fsub double %1270, %1266\l  %1272 = fsub double %1269, %1271\l  %1273 = fmul double %1258, %1270\l  %1274 = fmul double %1251, %1273\l  %1275 = fneg double %1274\l  %1276 = tail call double @llvm.fma.f64(double %1273, double %1251, double\l... %1275)\l  %1277 = tail call double @llvm.fma.f64(double %1273, double %1252, double\l... %1276)\l  %1278 = fadd double %1274, %1277\l  %1279 = fsub double %1278, %1274\l  %1280 = fsub double %1277, %1279\l  %1281 = fsub double %1270, %1278\l  %1282 = fsub double %1270, %1281\l  %1283 = fsub double %1282, %1278\l  %1284 = fadd double %1272, %1283\l  %1285 = fsub double %1284, %1280\l  %1286 = fadd double %1281, %1285\l  %1287 = fmul double %1258, %1286\l  %1288 = fadd double %1258, %1273\l  %1289 = fsub double %1288, %1258\l  %1290 = fsub double %1273, %1289\l  %1291 = fadd double %1290, %1287\l  %1292 = fadd double %1288, %1291\l  %1293 = fsub double %1292, %1288\l  %1294 = fsub double %1291, %1293\l  %1295 = tail call double @llvm.amdgcn.ldexp.f64(double %1292, i32 -2)\l  %1296 = tail call double @llvm.amdgcn.ldexp.f64(double %1294, i32 -2)\l  %1297 = fadd double %1251, %1295\l  %1298 = fsub double %1297, %1251\l  %1299 = fsub double %1295, %1298\l  %1300 = fadd double %1252, %1296\l  %1301 = fadd double %1300, %1299\l  %1302 = fadd double %1297, %1301\l  %1303 = fcmp oge double %1178, 0x408633CE8FB9F87E\l  %1304 = select i1 %1303, double 0x7FF0000000000000, double %1302\l  %1305 = fdiv contract double %1175, %1304\l  %1306 = fmul contract double %1305, 0x3F3FEABDAF5FE12A\l  %1307 = fadd contract double %22, %486\l  %1308 = fmul contract double %1307, %4\l  %1309 = tail call double @llvm.fabs.f64(double %1308)\l  %1310 = fcmp olt double %1309, 0x41D0000000000000\l  br i1 %1310, label %1311, label %1330\l|{<s0>T|<s1>F}}"];
	Node0x572e7f0:s0 -> Node0x5753c90;
	Node0x572e7f0:s1 -> Node0x5753ce0;
	Node0x5753c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1311:\l1311:                                             \l  %1312 = fmul double %1309, 0x3FE45F306DC9C883\l  %1313 = tail call double @llvm.rint.f64(double %1312)\l  %1314 = tail call double @llvm.fma.f64(double %1313, double\l... 0xBFF921FB54442D18, double %1309)\l  %1315 = tail call double @llvm.fma.f64(double %1313, double\l... 0xBC91A62633145C00, double %1314)\l  %1316 = fmul double %1313, 0x3C91A62633145C00\l  %1317 = fneg double %1316\l  %1318 = tail call double @llvm.fma.f64(double %1313, double\l... 0x3C91A62633145C00, double %1317)\l  %1319 = fsub double %1314, %1316\l  %1320 = fsub double %1314, %1319\l  %1321 = fsub double %1320, %1316\l  %1322 = fsub double %1319, %1315\l  %1323 = fadd double %1322, %1321\l  %1324 = fsub double %1323, %1318\l  %1325 = tail call double @llvm.fma.f64(double %1313, double\l... 0xB97B839A252049C0, double %1324)\l  %1326 = fadd double %1315, %1325\l  %1327 = fsub double %1326, %1315\l  %1328 = fsub double %1325, %1327\l  %1329 = fptosi double %1313 to i32\l  br label %1406\l}"];
	Node0x5753c90 -> Node0x5754aa0;
	Node0x5753ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1330:\l1330:                                             \l  %1331 = tail call double @llvm.amdgcn.trig.preop.f64(double %1309, i32 0)\l  %1332 = tail call double @llvm.amdgcn.trig.preop.f64(double %1309, i32 1)\l  %1333 = tail call double @llvm.amdgcn.trig.preop.f64(double %1309, i32 2)\l  %1334 = fcmp oge double %1309, 0x7B00000000000000\l  %1335 = tail call double @llvm.amdgcn.ldexp.f64(double %1309, i32 -128)\l  %1336 = select i1 %1334, double %1335, double %1309\l  %1337 = fmul double %1333, %1336\l  %1338 = fneg double %1337\l  %1339 = tail call double @llvm.fma.f64(double %1333, double %1336, double\l... %1338)\l  %1340 = fmul double %1332, %1336\l  %1341 = fneg double %1340\l  %1342 = tail call double @llvm.fma.f64(double %1332, double %1336, double\l... %1341)\l  %1343 = fmul double %1331, %1336\l  %1344 = fneg double %1343\l  %1345 = tail call double @llvm.fma.f64(double %1331, double %1336, double\l... %1344)\l  %1346 = fadd double %1340, %1345\l  %1347 = fsub double %1346, %1340\l  %1348 = fsub double %1346, %1347\l  %1349 = fsub double %1345, %1347\l  %1350 = fsub double %1340, %1348\l  %1351 = fadd double %1349, %1350\l  %1352 = fadd double %1337, %1342\l  %1353 = fsub double %1352, %1337\l  %1354 = fsub double %1352, %1353\l  %1355 = fsub double %1342, %1353\l  %1356 = fsub double %1337, %1354\l  %1357 = fadd double %1355, %1356\l  %1358 = fadd double %1352, %1351\l  %1359 = fsub double %1358, %1352\l  %1360 = fsub double %1358, %1359\l  %1361 = fsub double %1351, %1359\l  %1362 = fsub double %1352, %1360\l  %1363 = fadd double %1361, %1362\l  %1364 = fadd double %1357, %1363\l  %1365 = fadd double %1339, %1364\l  %1366 = fadd double %1343, %1346\l  %1367 = fsub double %1366, %1343\l  %1368 = fsub double %1346, %1367\l  %1369 = fadd double %1368, %1358\l  %1370 = fsub double %1369, %1368\l  %1371 = fsub double %1358, %1370\l  %1372 = fadd double %1371, %1365\l  %1373 = tail call double @llvm.amdgcn.ldexp.f64(double %1366, i32 -2)\l  %1374 = tail call double @llvm.amdgcn.fract.f64(double %1373)\l  %1375 = tail call i1 @llvm.amdgcn.class.f64(double %1373, i32 516)\l  %1376 = select i1 %1375, double 0.000000e+00, double %1374\l  %1377 = tail call double @llvm.amdgcn.ldexp.f64(double %1376, i32 2)\l  %1378 = fadd double %1377, %1369\l  %1379 = fcmp olt double %1378, 0.000000e+00\l  %1380 = select i1 %1379, double 4.000000e+00, double 0.000000e+00\l  %1381 = fadd double %1377, %1380\l  %1382 = fadd double %1369, %1381\l  %1383 = fptosi double %1382 to i32\l  %1384 = sitofp i32 %1383 to double\l  %1385 = fsub double %1381, %1384\l  %1386 = fadd double %1369, %1385\l  %1387 = fsub double %1386, %1385\l  %1388 = fsub double %1369, %1387\l  %1389 = fadd double %1372, %1388\l  %1390 = fcmp oge double %1386, 5.000000e-01\l  %1391 = zext i1 %1390 to i32\l  %1392 = add nsw i32 %1391, %1383\l  %1393 = select i1 %1390, double 1.000000e+00, double 0.000000e+00\l  %1394 = fsub double %1386, %1393\l  %1395 = fadd double %1394, %1389\l  %1396 = fsub double %1395, %1394\l  %1397 = fsub double %1389, %1396\l  %1398 = fmul double %1395, 0x3FF921FB54442D18\l  %1399 = fneg double %1398\l  %1400 = tail call double @llvm.fma.f64(double %1395, double\l... 0x3FF921FB54442D18, double %1399)\l  %1401 = tail call double @llvm.fma.f64(double %1395, double\l... 0x3C91A62633145C07, double %1400)\l  %1402 = tail call double @llvm.fma.f64(double %1397, double\l... 0x3FF921FB54442D18, double %1401)\l  %1403 = fadd double %1398, %1402\l  %1404 = fsub double %1403, %1398\l  %1405 = fsub double %1402, %1404\l  br label %1406\l}"];
	Node0x5753ce0 -> Node0x5754aa0;
	Node0x5754aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1406:\l1406:                                             \l  %1407 = phi double [ %1328, %1311 ], [ %1405, %1330 ]\l  %1408 = phi double [ %1326, %1311 ], [ %1403, %1330 ]\l  %1409 = phi i32 [ %1329, %1311 ], [ %1392, %1330 ]\l  %1410 = fmul double %1408, %1408\l  %1411 = fmul double %1410, 5.000000e-01\l  %1412 = fsub double 1.000000e+00, %1411\l  %1413 = fsub double 1.000000e+00, %1412\l  %1414 = fsub double %1413, %1411\l  %1415 = fmul double %1410, %1410\l  %1416 = tail call double @llvm.fma.f64(double %1410, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1417 = tail call double @llvm.fma.f64(double %1410, double %1416, double\l... 0xBE927E4FA17F65F6)\l  %1418 = tail call double @llvm.fma.f64(double %1410, double %1417, double\l... 0x3EFA01A019F4EC90)\l  %1419 = tail call double @llvm.fma.f64(double %1410, double %1418, double\l... 0xBF56C16C16C16967)\l  %1420 = tail call double @llvm.fma.f64(double %1410, double %1419, double\l... 0x3FA5555555555555)\l  %1421 = fneg double %1407\l  %1422 = tail call double @llvm.fma.f64(double %1408, double %1421, double\l... %1414)\l  %1423 = tail call double @llvm.fma.f64(double %1415, double %1420, double\l... %1422)\l  %1424 = fadd double %1412, %1423\l  %1425 = tail call double @llvm.fma.f64(double %1410, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1426 = tail call double @llvm.fma.f64(double %1410, double %1425, double\l... 0x3EC71DE3796CDE01)\l  %1427 = tail call double @llvm.fma.f64(double %1410, double %1426, double\l... 0xBF2A01A019E83E5C)\l  %1428 = tail call double @llvm.fma.f64(double %1410, double %1427, double\l... 0x3F81111111110BB3)\l  %1429 = fneg double %1410\l  %1430 = fmul double %1408, %1429\l  %1431 = fmul double %1407, 5.000000e-01\l  %1432 = tail call double @llvm.fma.f64(double %1430, double %1428, double\l... %1431)\l  %1433 = tail call double @llvm.fma.f64(double %1410, double %1432, double\l... %1421)\l  %1434 = tail call double @llvm.fma.f64(double %1430, double\l... 0xBFC5555555555555, double %1433)\l  %1435 = fsub double %1408, %1434\l  %1436 = fneg double %1435\l  %1437 = and i32 %1409, 1\l  %1438 = icmp eq i32 %1437, 0\l  %1439 = select i1 %1438, double %1424, double %1436\l  %1440 = bitcast double %1439 to \<2 x i32\>\l  %1441 = shl i32 %1409, 30\l  %1442 = and i32 %1441, -2147483648\l  %1443 = extractelement \<2 x i32\> %1440, i64 1\l  %1444 = xor i32 %1443, %1442\l  %1445 = insertelement \<2 x i32\> %1440, i32 %1444, i64 1\l  %1446 = tail call i1 @llvm.amdgcn.class.f64(double %1309, i32 504)\l  %1447 = select i1 %1446, \<2 x i32\> %1445, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1448 = bitcast \<2 x i32\> %1447 to double\l  %1449 = fneg contract double %1307\l  %1450 = fdiv contract double %1449, %5\l  %1451 = tail call double @llvm.fabs.f64(double %1450)\l  %1452 = fadd double %1451, 0xBFE62E42FEFA39EF\l  %1453 = fsub double %1452, %1451\l  %1454 = fsub double %1453, %1452\l  %1455 = fadd double %1451, %1454\l  %1456 = fadd double %1453, 0x3FE62E42FEFA39EF\l  %1457 = fsub double %1455, %1456\l  %1458 = fadd double %1457, 0xBC7ABC9E3B39803F\l  %1459 = fadd double %1452, %1458\l  %1460 = fsub double %1459, %1452\l  %1461 = fsub double %1458, %1460\l  %1462 = fmul double %1459, 0x3FF71547652B82FE\l  %1463 = tail call double @llvm.rint.f64(double %1462)\l  %1464 = tail call double @llvm.fma.f64(double %1463, double\l... 0xBFE62E42FEFA3000, double %1459)\l  %1465 = fadd double %1461, %1464\l  %1466 = fsub double %1465, %1464\l  %1467 = fsub double %1461, %1466\l  %1468 = fmul double %1463, 0x3D53DE6AF278E000\l  %1469 = fsub double %1465, %1468\l  %1470 = fsub double %1465, %1469\l  %1471 = fsub double %1470, %1468\l  %1472 = fadd double %1467, %1471\l  %1473 = fadd double %1469, %1472\l  %1474 = fsub double %1473, %1469\l  %1475 = fsub double %1472, %1474\l  %1476 = fmul double %1463, 0x3AC9CC01F97B57A0\l  %1477 = fsub double %1473, %1476\l  %1478 = fsub double %1473, %1477\l  %1479 = fsub double %1478, %1476\l  %1480 = fadd double %1475, %1479\l  %1481 = fadd double %1477, %1480\l  %1482 = fsub double %1481, %1477\l  %1483 = fsub double %1480, %1482\l  %1484 = tail call double @llvm.fma.f64(double %1481, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %1485 = tail call double @llvm.fma.f64(double %1481, double %1484, double\l... 0x3EC71DEE623FDE64)\l  %1486 = tail call double @llvm.fma.f64(double %1481, double %1485, double\l... 0x3EFA01997C89E6B0)\l  %1487 = tail call double @llvm.fma.f64(double %1481, double %1486, double\l... 0x3F2A01A014761F6E)\l  %1488 = tail call double @llvm.fma.f64(double %1481, double %1487, double\l... 0x3F56C16C1852B7B0)\l  %1489 = tail call double @llvm.fma.f64(double %1481, double %1488, double\l... 0x3F81111111122322)\l  %1490 = tail call double @llvm.fma.f64(double %1481, double %1489, double\l... 0x3FA55555555502A1)\l  %1491 = tail call double @llvm.fma.f64(double %1481, double %1490, double\l... 0x3FC5555555555511)\l  %1492 = tail call double @llvm.fma.f64(double %1481, double %1491, double\l... 0x3FE000000000000B)\l  %1493 = fmul double %1481, %1481\l  %1494 = fneg double %1493\l  %1495 = tail call double @llvm.fma.f64(double %1481, double %1481, double\l... %1494)\l  %1496 = fmul double %1483, 2.000000e+00\l  %1497 = tail call double @llvm.fma.f64(double %1481, double %1496, double\l... %1495)\l  %1498 = fadd double %1493, %1497\l  %1499 = fsub double %1498, %1493\l  %1500 = fsub double %1497, %1499\l  %1501 = fmul double %1498, %1492\l  %1502 = fneg double %1501\l  %1503 = tail call double @llvm.fma.f64(double %1498, double %1492, double\l... %1502)\l  %1504 = tail call double @llvm.fma.f64(double %1500, double %1492, double\l... %1503)\l  %1505 = fadd double %1501, %1504\l  %1506 = fsub double %1505, %1501\l  %1507 = fsub double %1504, %1506\l  %1508 = fadd double %1481, %1505\l  %1509 = fsub double %1508, %1481\l  %1510 = fsub double %1505, %1509\l  %1511 = fadd double %1483, %1507\l  %1512 = fadd double %1511, %1510\l  %1513 = fadd double %1508, %1512\l  %1514 = fsub double %1513, %1508\l  %1515 = fsub double %1512, %1514\l  %1516 = fadd double %1513, 1.000000e+00\l  %1517 = fadd double %1516, -1.000000e+00\l  %1518 = fsub double %1513, %1517\l  %1519 = fadd double %1515, %1518\l  %1520 = fadd double %1516, %1519\l  %1521 = fsub double %1520, %1516\l  %1522 = fsub double %1519, %1521\l  %1523 = fptosi double %1463 to i32\l  %1524 = tail call double @llvm.amdgcn.ldexp.f64(double %1520, i32 %1523)\l  %1525 = tail call double @llvm.amdgcn.ldexp.f64(double %1522, i32 %1523)\l  %1526 = tail call double @llvm.amdgcn.rcp.f64(double %1524)\l  %1527 = fneg double %1524\l  %1528 = tail call double @llvm.fma.f64(double %1527, double %1526, double\l... 1.000000e+00)\l  %1529 = tail call double @llvm.fma.f64(double %1528, double %1526, double\l... %1526)\l  %1530 = tail call double @llvm.fma.f64(double %1527, double %1529, double\l... 1.000000e+00)\l  %1531 = tail call double @llvm.fma.f64(double %1530, double %1529, double\l... %1529)\l  %1532 = fmul double %1524, %1531\l  %1533 = fneg double %1532\l  %1534 = tail call double @llvm.fma.f64(double %1531, double %1524, double\l... %1533)\l  %1535 = tail call double @llvm.fma.f64(double %1531, double %1525, double\l... %1534)\l  %1536 = fadd double %1532, %1535\l  %1537 = fsub double %1536, %1532\l  %1538 = fsub double %1535, %1537\l  %1539 = fsub double 1.000000e+00, %1536\l  %1540 = fsub double 1.000000e+00, %1539\l  %1541 = fsub double %1540, %1536\l  %1542 = fsub double %1541, %1538\l  %1543 = fadd double %1539, %1542\l  %1544 = fsub double %1543, %1539\l  %1545 = fsub double %1542, %1544\l  %1546 = fmul double %1531, %1543\l  %1547 = fmul double %1524, %1546\l  %1548 = fneg double %1547\l  %1549 = tail call double @llvm.fma.f64(double %1546, double %1524, double\l... %1548)\l  %1550 = tail call double @llvm.fma.f64(double %1546, double %1525, double\l... %1549)\l  %1551 = fadd double %1547, %1550\l  %1552 = fsub double %1551, %1547\l  %1553 = fsub double %1550, %1552\l  %1554 = fsub double %1543, %1551\l  %1555 = fsub double %1543, %1554\l  %1556 = fsub double %1555, %1551\l  %1557 = fadd double %1545, %1556\l  %1558 = fsub double %1557, %1553\l  %1559 = fadd double %1554, %1558\l  %1560 = fmul double %1531, %1559\l  %1561 = fadd double %1531, %1546\l  %1562 = fsub double %1561, %1531\l  %1563 = fsub double %1546, %1562\l  %1564 = fadd double %1563, %1560\l  %1565 = fadd double %1561, %1564\l  %1566 = fsub double %1565, %1561\l  %1567 = fsub double %1564, %1566\l  %1568 = tail call double @llvm.amdgcn.ldexp.f64(double %1565, i32 -2)\l  %1569 = tail call double @llvm.amdgcn.ldexp.f64(double %1567, i32 -2)\l  %1570 = fadd double %1524, %1568\l  %1571 = fsub double %1570, %1524\l  %1572 = fsub double %1568, %1571\l  %1573 = fadd double %1525, %1569\l  %1574 = fadd double %1573, %1572\l  %1575 = fadd double %1570, %1574\l  %1576 = fcmp oge double %1451, 0x408633CE8FB9F87E\l  %1577 = select i1 %1576, double 0x7FF0000000000000, double %1575\l  %1578 = fdiv contract double %1448, %1577\l  %1579 = fmul contract double %1578, 0x3F3FEABDAF5FE12A\l  %1580 = fadd contract double %22, %760\l  %1581 = fmul contract double %1580, %4\l  %1582 = tail call double @llvm.fabs.f64(double %1581)\l  %1583 = fcmp olt double %1582, 0x41D0000000000000\l  br i1 %1583, label %1584, label %1603\l|{<s0>T|<s1>F}}"];
	Node0x5754aa0:s0 -> Node0x575fab0;
	Node0x5754aa0:s1 -> Node0x575fb00;
	Node0x575fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1584:\l1584:                                             \l  %1585 = fmul double %1582, 0x3FE45F306DC9C883\l  %1586 = tail call double @llvm.rint.f64(double %1585)\l  %1587 = tail call double @llvm.fma.f64(double %1586, double\l... 0xBFF921FB54442D18, double %1582)\l  %1588 = tail call double @llvm.fma.f64(double %1586, double\l... 0xBC91A62633145C00, double %1587)\l  %1589 = fmul double %1586, 0x3C91A62633145C00\l  %1590 = fneg double %1589\l  %1591 = tail call double @llvm.fma.f64(double %1586, double\l... 0x3C91A62633145C00, double %1590)\l  %1592 = fsub double %1587, %1589\l  %1593 = fsub double %1587, %1592\l  %1594 = fsub double %1593, %1589\l  %1595 = fsub double %1592, %1588\l  %1596 = fadd double %1595, %1594\l  %1597 = fsub double %1596, %1591\l  %1598 = tail call double @llvm.fma.f64(double %1586, double\l... 0xB97B839A252049C0, double %1597)\l  %1599 = fadd double %1588, %1598\l  %1600 = fsub double %1599, %1588\l  %1601 = fsub double %1598, %1600\l  %1602 = fptosi double %1586 to i32\l  br label %1679\l}"];
	Node0x575fab0 -> Node0x57608c0;
	Node0x575fb00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1603:\l1603:                                             \l  %1604 = tail call double @llvm.amdgcn.trig.preop.f64(double %1582, i32 0)\l  %1605 = tail call double @llvm.amdgcn.trig.preop.f64(double %1582, i32 1)\l  %1606 = tail call double @llvm.amdgcn.trig.preop.f64(double %1582, i32 2)\l  %1607 = fcmp oge double %1582, 0x7B00000000000000\l  %1608 = tail call double @llvm.amdgcn.ldexp.f64(double %1582, i32 -128)\l  %1609 = select i1 %1607, double %1608, double %1582\l  %1610 = fmul double %1606, %1609\l  %1611 = fneg double %1610\l  %1612 = tail call double @llvm.fma.f64(double %1606, double %1609, double\l... %1611)\l  %1613 = fmul double %1605, %1609\l  %1614 = fneg double %1613\l  %1615 = tail call double @llvm.fma.f64(double %1605, double %1609, double\l... %1614)\l  %1616 = fmul double %1604, %1609\l  %1617 = fneg double %1616\l  %1618 = tail call double @llvm.fma.f64(double %1604, double %1609, double\l... %1617)\l  %1619 = fadd double %1613, %1618\l  %1620 = fsub double %1619, %1613\l  %1621 = fsub double %1619, %1620\l  %1622 = fsub double %1618, %1620\l  %1623 = fsub double %1613, %1621\l  %1624 = fadd double %1622, %1623\l  %1625 = fadd double %1610, %1615\l  %1626 = fsub double %1625, %1610\l  %1627 = fsub double %1625, %1626\l  %1628 = fsub double %1615, %1626\l  %1629 = fsub double %1610, %1627\l  %1630 = fadd double %1628, %1629\l  %1631 = fadd double %1625, %1624\l  %1632 = fsub double %1631, %1625\l  %1633 = fsub double %1631, %1632\l  %1634 = fsub double %1624, %1632\l  %1635 = fsub double %1625, %1633\l  %1636 = fadd double %1634, %1635\l  %1637 = fadd double %1630, %1636\l  %1638 = fadd double %1612, %1637\l  %1639 = fadd double %1616, %1619\l  %1640 = fsub double %1639, %1616\l  %1641 = fsub double %1619, %1640\l  %1642 = fadd double %1641, %1631\l  %1643 = fsub double %1642, %1641\l  %1644 = fsub double %1631, %1643\l  %1645 = fadd double %1644, %1638\l  %1646 = tail call double @llvm.amdgcn.ldexp.f64(double %1639, i32 -2)\l  %1647 = tail call double @llvm.amdgcn.fract.f64(double %1646)\l  %1648 = tail call i1 @llvm.amdgcn.class.f64(double %1646, i32 516)\l  %1649 = select i1 %1648, double 0.000000e+00, double %1647\l  %1650 = tail call double @llvm.amdgcn.ldexp.f64(double %1649, i32 2)\l  %1651 = fadd double %1650, %1642\l  %1652 = fcmp olt double %1651, 0.000000e+00\l  %1653 = select i1 %1652, double 4.000000e+00, double 0.000000e+00\l  %1654 = fadd double %1650, %1653\l  %1655 = fadd double %1642, %1654\l  %1656 = fptosi double %1655 to i32\l  %1657 = sitofp i32 %1656 to double\l  %1658 = fsub double %1654, %1657\l  %1659 = fadd double %1642, %1658\l  %1660 = fsub double %1659, %1658\l  %1661 = fsub double %1642, %1660\l  %1662 = fadd double %1645, %1661\l  %1663 = fcmp oge double %1659, 5.000000e-01\l  %1664 = zext i1 %1663 to i32\l  %1665 = add nsw i32 %1664, %1656\l  %1666 = select i1 %1663, double 1.000000e+00, double 0.000000e+00\l  %1667 = fsub double %1659, %1666\l  %1668 = fadd double %1667, %1662\l  %1669 = fsub double %1668, %1667\l  %1670 = fsub double %1662, %1669\l  %1671 = fmul double %1668, 0x3FF921FB54442D18\l  %1672 = fneg double %1671\l  %1673 = tail call double @llvm.fma.f64(double %1668, double\l... 0x3FF921FB54442D18, double %1672)\l  %1674 = tail call double @llvm.fma.f64(double %1668, double\l... 0x3C91A62633145C07, double %1673)\l  %1675 = tail call double @llvm.fma.f64(double %1670, double\l... 0x3FF921FB54442D18, double %1674)\l  %1676 = fadd double %1671, %1675\l  %1677 = fsub double %1676, %1671\l  %1678 = fsub double %1675, %1677\l  br label %1679\l}"];
	Node0x575fb00 -> Node0x57608c0;
	Node0x57608c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1679:\l1679:                                             \l  %1680 = phi double [ %1601, %1584 ], [ %1678, %1603 ]\l  %1681 = phi double [ %1599, %1584 ], [ %1676, %1603 ]\l  %1682 = phi i32 [ %1602, %1584 ], [ %1665, %1603 ]\l  %1683 = fmul double %1681, %1681\l  %1684 = fmul double %1683, 5.000000e-01\l  %1685 = fsub double 1.000000e+00, %1684\l  %1686 = fsub double 1.000000e+00, %1685\l  %1687 = fsub double %1686, %1684\l  %1688 = fmul double %1683, %1683\l  %1689 = tail call double @llvm.fma.f64(double %1683, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1690 = tail call double @llvm.fma.f64(double %1683, double %1689, double\l... 0xBE927E4FA17F65F6)\l  %1691 = tail call double @llvm.fma.f64(double %1683, double %1690, double\l... 0x3EFA01A019F4EC90)\l  %1692 = tail call double @llvm.fma.f64(double %1683, double %1691, double\l... 0xBF56C16C16C16967)\l  %1693 = tail call double @llvm.fma.f64(double %1683, double %1692, double\l... 0x3FA5555555555555)\l  %1694 = fneg double %1680\l  %1695 = tail call double @llvm.fma.f64(double %1681, double %1694, double\l... %1687)\l  %1696 = tail call double @llvm.fma.f64(double %1688, double %1693, double\l... %1695)\l  %1697 = fadd double %1685, %1696\l  %1698 = tail call double @llvm.fma.f64(double %1683, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1699 = tail call double @llvm.fma.f64(double %1683, double %1698, double\l... 0x3EC71DE3796CDE01)\l  %1700 = tail call double @llvm.fma.f64(double %1683, double %1699, double\l... 0xBF2A01A019E83E5C)\l  %1701 = tail call double @llvm.fma.f64(double %1683, double %1700, double\l... 0x3F81111111110BB3)\l  %1702 = fneg double %1683\l  %1703 = fmul double %1681, %1702\l  %1704 = fmul double %1680, 5.000000e-01\l  %1705 = tail call double @llvm.fma.f64(double %1703, double %1701, double\l... %1704)\l  %1706 = tail call double @llvm.fma.f64(double %1683, double %1705, double\l... %1694)\l  %1707 = tail call double @llvm.fma.f64(double %1703, double\l... 0xBFC5555555555555, double %1706)\l  %1708 = fsub double %1681, %1707\l  %1709 = fneg double %1708\l  %1710 = and i32 %1682, 1\l  %1711 = icmp eq i32 %1710, 0\l  %1712 = select i1 %1711, double %1697, double %1709\l  %1713 = bitcast double %1712 to \<2 x i32\>\l  %1714 = shl i32 %1682, 30\l  %1715 = and i32 %1714, -2147483648\l  %1716 = extractelement \<2 x i32\> %1713, i64 1\l  %1717 = xor i32 %1716, %1715\l  %1718 = insertelement \<2 x i32\> %1713, i32 %1717, i64 1\l  %1719 = tail call i1 @llvm.amdgcn.class.f64(double %1582, i32 504)\l  %1720 = select i1 %1719, \<2 x i32\> %1718, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1721 = bitcast \<2 x i32\> %1720 to double\l  %1722 = fneg contract double %1580\l  %1723 = fdiv contract double %1722, %5\l  %1724 = tail call double @llvm.fabs.f64(double %1723)\l  %1725 = fadd double %1724, 0xBFE62E42FEFA39EF\l  %1726 = fsub double %1725, %1724\l  %1727 = fsub double %1726, %1725\l  %1728 = fadd double %1724, %1727\l  %1729 = fadd double %1726, 0x3FE62E42FEFA39EF\l  %1730 = fsub double %1728, %1729\l  %1731 = fadd double %1730, 0xBC7ABC9E3B39803F\l  %1732 = fadd double %1725, %1731\l  %1733 = fsub double %1732, %1725\l  %1734 = fsub double %1731, %1733\l  %1735 = fmul double %1732, 0x3FF71547652B82FE\l  %1736 = tail call double @llvm.rint.f64(double %1735)\l  %1737 = tail call double @llvm.fma.f64(double %1736, double\l... 0xBFE62E42FEFA3000, double %1732)\l  %1738 = fadd double %1734, %1737\l  %1739 = fsub double %1738, %1737\l  %1740 = fsub double %1734, %1739\l  %1741 = fmul double %1736, 0x3D53DE6AF278E000\l  %1742 = fsub double %1738, %1741\l  %1743 = fsub double %1738, %1742\l  %1744 = fsub double %1743, %1741\l  %1745 = fadd double %1740, %1744\l  %1746 = fadd double %1742, %1745\l  %1747 = fsub double %1746, %1742\l  %1748 = fsub double %1745, %1747\l  %1749 = fmul double %1736, 0x3AC9CC01F97B57A0\l  %1750 = fsub double %1746, %1749\l  %1751 = fsub double %1746, %1750\l  %1752 = fsub double %1751, %1749\l  %1753 = fadd double %1748, %1752\l  %1754 = fadd double %1750, %1753\l  %1755 = fsub double %1754, %1750\l  %1756 = fsub double %1753, %1755\l  %1757 = tail call double @llvm.fma.f64(double %1754, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %1758 = tail call double @llvm.fma.f64(double %1754, double %1757, double\l... 0x3EC71DEE623FDE64)\l  %1759 = tail call double @llvm.fma.f64(double %1754, double %1758, double\l... 0x3EFA01997C89E6B0)\l  %1760 = tail call double @llvm.fma.f64(double %1754, double %1759, double\l... 0x3F2A01A014761F6E)\l  %1761 = tail call double @llvm.fma.f64(double %1754, double %1760, double\l... 0x3F56C16C1852B7B0)\l  %1762 = tail call double @llvm.fma.f64(double %1754, double %1761, double\l... 0x3F81111111122322)\l  %1763 = tail call double @llvm.fma.f64(double %1754, double %1762, double\l... 0x3FA55555555502A1)\l  %1764 = tail call double @llvm.fma.f64(double %1754, double %1763, double\l... 0x3FC5555555555511)\l  %1765 = tail call double @llvm.fma.f64(double %1754, double %1764, double\l... 0x3FE000000000000B)\l  %1766 = fmul double %1754, %1754\l  %1767 = fneg double %1766\l  %1768 = tail call double @llvm.fma.f64(double %1754, double %1754, double\l... %1767)\l  %1769 = fmul double %1756, 2.000000e+00\l  %1770 = tail call double @llvm.fma.f64(double %1754, double %1769, double\l... %1768)\l  %1771 = fadd double %1766, %1770\l  %1772 = fsub double %1771, %1766\l  %1773 = fsub double %1770, %1772\l  %1774 = fmul double %1771, %1765\l  %1775 = fneg double %1774\l  %1776 = tail call double @llvm.fma.f64(double %1771, double %1765, double\l... %1775)\l  %1777 = tail call double @llvm.fma.f64(double %1773, double %1765, double\l... %1776)\l  %1778 = fadd double %1774, %1777\l  %1779 = fsub double %1778, %1774\l  %1780 = fsub double %1777, %1779\l  %1781 = fadd double %1754, %1778\l  %1782 = fsub double %1781, %1754\l  %1783 = fsub double %1778, %1782\l  %1784 = fadd double %1756, %1780\l  %1785 = fadd double %1784, %1783\l  %1786 = fadd double %1781, %1785\l  %1787 = fsub double %1786, %1781\l  %1788 = fsub double %1785, %1787\l  %1789 = fadd double %1786, 1.000000e+00\l  %1790 = fadd double %1789, -1.000000e+00\l  %1791 = fsub double %1786, %1790\l  %1792 = fadd double %1788, %1791\l  %1793 = fadd double %1789, %1792\l  %1794 = fsub double %1793, %1789\l  %1795 = fsub double %1792, %1794\l  %1796 = fptosi double %1736 to i32\l  %1797 = tail call double @llvm.amdgcn.ldexp.f64(double %1793, i32 %1796)\l  %1798 = tail call double @llvm.amdgcn.ldexp.f64(double %1795, i32 %1796)\l  %1799 = tail call double @llvm.amdgcn.rcp.f64(double %1797)\l  %1800 = fneg double %1797\l  %1801 = tail call double @llvm.fma.f64(double %1800, double %1799, double\l... 1.000000e+00)\l  %1802 = tail call double @llvm.fma.f64(double %1801, double %1799, double\l... %1799)\l  %1803 = tail call double @llvm.fma.f64(double %1800, double %1802, double\l... 1.000000e+00)\l  %1804 = tail call double @llvm.fma.f64(double %1803, double %1802, double\l... %1802)\l  %1805 = fmul double %1797, %1804\l  %1806 = fneg double %1805\l  %1807 = tail call double @llvm.fma.f64(double %1804, double %1797, double\l... %1806)\l  %1808 = tail call double @llvm.fma.f64(double %1804, double %1798, double\l... %1807)\l  %1809 = fadd double %1805, %1808\l  %1810 = fsub double %1809, %1805\l  %1811 = fsub double %1808, %1810\l  %1812 = fsub double 1.000000e+00, %1809\l  %1813 = fsub double 1.000000e+00, %1812\l  %1814 = fsub double %1813, %1809\l  %1815 = fsub double %1814, %1811\l  %1816 = fadd double %1812, %1815\l  %1817 = fsub double %1816, %1812\l  %1818 = fsub double %1815, %1817\l  %1819 = fmul double %1804, %1816\l  %1820 = fmul double %1797, %1819\l  %1821 = fneg double %1820\l  %1822 = tail call double @llvm.fma.f64(double %1819, double %1797, double\l... %1821)\l  %1823 = tail call double @llvm.fma.f64(double %1819, double %1798, double\l... %1822)\l  %1824 = fadd double %1820, %1823\l  %1825 = fsub double %1824, %1820\l  %1826 = fsub double %1823, %1825\l  %1827 = fsub double %1816, %1824\l  %1828 = fsub double %1816, %1827\l  %1829 = fsub double %1828, %1824\l  %1830 = fadd double %1818, %1829\l  %1831 = fsub double %1830, %1826\l  %1832 = fadd double %1827, %1831\l  %1833 = fmul double %1804, %1832\l  %1834 = fadd double %1804, %1819\l  %1835 = fsub double %1834, %1804\l  %1836 = fsub double %1819, %1835\l  %1837 = fadd double %1836, %1833\l  %1838 = fadd double %1834, %1837\l  %1839 = fsub double %1838, %1834\l  %1840 = fsub double %1837, %1839\l  %1841 = tail call double @llvm.amdgcn.ldexp.f64(double %1838, i32 -2)\l  %1842 = tail call double @llvm.amdgcn.ldexp.f64(double %1840, i32 -2)\l  %1843 = fadd double %1797, %1841\l  %1844 = fsub double %1843, %1797\l  %1845 = fsub double %1841, %1844\l  %1846 = fadd double %1798, %1842\l  %1847 = fadd double %1846, %1845\l  %1848 = fadd double %1843, %1847\l  %1849 = fcmp oge double %1724, 0x408633CE8FB9F87E\l  %1850 = select i1 %1849, double 0x7FF0000000000000, double %1848\l  %1851 = fdiv contract double %1721, %1850\l  %1852 = fmul contract double %1851, 0x3F3FEABDAF5FE12A\l  %1853 = fadd contract double %22, %1034\l  %1854 = fmul contract double %1853, %4\l  %1855 = tail call double @llvm.fabs.f64(double %1854)\l  %1856 = fcmp olt double %1855, 0x41D0000000000000\l  br i1 %1856, label %1857, label %1876\l|{<s0>T|<s1>F}}"];
	Node0x57608c0:s0 -> Node0x576b8d0;
	Node0x57608c0:s1 -> Node0x576b920;
	Node0x576b8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1857:\l1857:                                             \l  %1858 = fmul double %1855, 0x3FE45F306DC9C883\l  %1859 = tail call double @llvm.rint.f64(double %1858)\l  %1860 = tail call double @llvm.fma.f64(double %1859, double\l... 0xBFF921FB54442D18, double %1855)\l  %1861 = tail call double @llvm.fma.f64(double %1859, double\l... 0xBC91A62633145C00, double %1860)\l  %1862 = fmul double %1859, 0x3C91A62633145C00\l  %1863 = fneg double %1862\l  %1864 = tail call double @llvm.fma.f64(double %1859, double\l... 0x3C91A62633145C00, double %1863)\l  %1865 = fsub double %1860, %1862\l  %1866 = fsub double %1860, %1865\l  %1867 = fsub double %1866, %1862\l  %1868 = fsub double %1865, %1861\l  %1869 = fadd double %1868, %1867\l  %1870 = fsub double %1869, %1864\l  %1871 = tail call double @llvm.fma.f64(double %1859, double\l... 0xB97B839A252049C0, double %1870)\l  %1872 = fadd double %1861, %1871\l  %1873 = fsub double %1872, %1861\l  %1874 = fsub double %1871, %1873\l  %1875 = fptosi double %1859 to i32\l  br label %1952\l}"];
	Node0x576b8d0 -> Node0x576c6e0;
	Node0x576b920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%1876:\l1876:                                             \l  %1877 = tail call double @llvm.amdgcn.trig.preop.f64(double %1855, i32 0)\l  %1878 = tail call double @llvm.amdgcn.trig.preop.f64(double %1855, i32 1)\l  %1879 = tail call double @llvm.amdgcn.trig.preop.f64(double %1855, i32 2)\l  %1880 = fcmp oge double %1855, 0x7B00000000000000\l  %1881 = tail call double @llvm.amdgcn.ldexp.f64(double %1855, i32 -128)\l  %1882 = select i1 %1880, double %1881, double %1855\l  %1883 = fmul double %1879, %1882\l  %1884 = fneg double %1883\l  %1885 = tail call double @llvm.fma.f64(double %1879, double %1882, double\l... %1884)\l  %1886 = fmul double %1878, %1882\l  %1887 = fneg double %1886\l  %1888 = tail call double @llvm.fma.f64(double %1878, double %1882, double\l... %1887)\l  %1889 = fmul double %1877, %1882\l  %1890 = fneg double %1889\l  %1891 = tail call double @llvm.fma.f64(double %1877, double %1882, double\l... %1890)\l  %1892 = fadd double %1886, %1891\l  %1893 = fsub double %1892, %1886\l  %1894 = fsub double %1892, %1893\l  %1895 = fsub double %1891, %1893\l  %1896 = fsub double %1886, %1894\l  %1897 = fadd double %1895, %1896\l  %1898 = fadd double %1883, %1888\l  %1899 = fsub double %1898, %1883\l  %1900 = fsub double %1898, %1899\l  %1901 = fsub double %1888, %1899\l  %1902 = fsub double %1883, %1900\l  %1903 = fadd double %1901, %1902\l  %1904 = fadd double %1898, %1897\l  %1905 = fsub double %1904, %1898\l  %1906 = fsub double %1904, %1905\l  %1907 = fsub double %1897, %1905\l  %1908 = fsub double %1898, %1906\l  %1909 = fadd double %1907, %1908\l  %1910 = fadd double %1903, %1909\l  %1911 = fadd double %1885, %1910\l  %1912 = fadd double %1889, %1892\l  %1913 = fsub double %1912, %1889\l  %1914 = fsub double %1892, %1913\l  %1915 = fadd double %1914, %1904\l  %1916 = fsub double %1915, %1914\l  %1917 = fsub double %1904, %1916\l  %1918 = fadd double %1917, %1911\l  %1919 = tail call double @llvm.amdgcn.ldexp.f64(double %1912, i32 -2)\l  %1920 = tail call double @llvm.amdgcn.fract.f64(double %1919)\l  %1921 = tail call i1 @llvm.amdgcn.class.f64(double %1919, i32 516)\l  %1922 = select i1 %1921, double 0.000000e+00, double %1920\l  %1923 = tail call double @llvm.amdgcn.ldexp.f64(double %1922, i32 2)\l  %1924 = fadd double %1923, %1915\l  %1925 = fcmp olt double %1924, 0.000000e+00\l  %1926 = select i1 %1925, double 4.000000e+00, double 0.000000e+00\l  %1927 = fadd double %1923, %1926\l  %1928 = fadd double %1915, %1927\l  %1929 = fptosi double %1928 to i32\l  %1930 = sitofp i32 %1929 to double\l  %1931 = fsub double %1927, %1930\l  %1932 = fadd double %1915, %1931\l  %1933 = fsub double %1932, %1931\l  %1934 = fsub double %1915, %1933\l  %1935 = fadd double %1918, %1934\l  %1936 = fcmp oge double %1932, 5.000000e-01\l  %1937 = zext i1 %1936 to i32\l  %1938 = add nsw i32 %1937, %1929\l  %1939 = select i1 %1936, double 1.000000e+00, double 0.000000e+00\l  %1940 = fsub double %1932, %1939\l  %1941 = fadd double %1940, %1935\l  %1942 = fsub double %1941, %1940\l  %1943 = fsub double %1935, %1942\l  %1944 = fmul double %1941, 0x3FF921FB54442D18\l  %1945 = fneg double %1944\l  %1946 = tail call double @llvm.fma.f64(double %1941, double\l... 0x3FF921FB54442D18, double %1945)\l  %1947 = tail call double @llvm.fma.f64(double %1941, double\l... 0x3C91A62633145C07, double %1946)\l  %1948 = tail call double @llvm.fma.f64(double %1943, double\l... 0x3FF921FB54442D18, double %1947)\l  %1949 = fadd double %1944, %1948\l  %1950 = fsub double %1949, %1944\l  %1951 = fsub double %1948, %1950\l  br label %1952\l}"];
	Node0x576b920 -> Node0x576c6e0;
	Node0x576c6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1952:\l1952:                                             \l  %1953 = phi double [ %1874, %1857 ], [ %1951, %1876 ]\l  %1954 = phi double [ %1872, %1857 ], [ %1949, %1876 ]\l  %1955 = phi i32 [ %1875, %1857 ], [ %1938, %1876 ]\l  %1956 = fmul double %1954, %1954\l  %1957 = fmul double %1956, 5.000000e-01\l  %1958 = fsub double 1.000000e+00, %1957\l  %1959 = fsub double 1.000000e+00, %1958\l  %1960 = fsub double %1959, %1957\l  %1961 = fmul double %1956, %1956\l  %1962 = tail call double @llvm.fma.f64(double %1956, double\l... 0xBDA907DB46CC5E42, double 0x3E21EEB69037AB78)\l  %1963 = tail call double @llvm.fma.f64(double %1956, double %1962, double\l... 0xBE927E4FA17F65F6)\l  %1964 = tail call double @llvm.fma.f64(double %1956, double %1963, double\l... 0x3EFA01A019F4EC90)\l  %1965 = tail call double @llvm.fma.f64(double %1956, double %1964, double\l... 0xBF56C16C16C16967)\l  %1966 = tail call double @llvm.fma.f64(double %1956, double %1965, double\l... 0x3FA5555555555555)\l  %1967 = fneg double %1953\l  %1968 = tail call double @llvm.fma.f64(double %1954, double %1967, double\l... %1960)\l  %1969 = tail call double @llvm.fma.f64(double %1961, double %1966, double\l... %1968)\l  %1970 = fadd double %1958, %1969\l  %1971 = tail call double @llvm.fma.f64(double %1956, double\l... 0x3DE5E0B2F9A43BB8, double 0xBE5AE600B42FDFA7)\l  %1972 = tail call double @llvm.fma.f64(double %1956, double %1971, double\l... 0x3EC71DE3796CDE01)\l  %1973 = tail call double @llvm.fma.f64(double %1956, double %1972, double\l... 0xBF2A01A019E83E5C)\l  %1974 = tail call double @llvm.fma.f64(double %1956, double %1973, double\l... 0x3F81111111110BB3)\l  %1975 = fneg double %1956\l  %1976 = fmul double %1954, %1975\l  %1977 = fmul double %1953, 5.000000e-01\l  %1978 = tail call double @llvm.fma.f64(double %1976, double %1974, double\l... %1977)\l  %1979 = tail call double @llvm.fma.f64(double %1956, double %1978, double\l... %1967)\l  %1980 = tail call double @llvm.fma.f64(double %1976, double\l... 0xBFC5555555555555, double %1979)\l  %1981 = fsub double %1954, %1980\l  %1982 = fneg double %1981\l  %1983 = and i32 %1955, 1\l  %1984 = icmp eq i32 %1983, 0\l  %1985 = select i1 %1984, double %1970, double %1982\l  %1986 = bitcast double %1985 to \<2 x i32\>\l  %1987 = shl i32 %1955, 30\l  %1988 = and i32 %1987, -2147483648\l  %1989 = extractelement \<2 x i32\> %1986, i64 1\l  %1990 = xor i32 %1989, %1988\l  %1991 = insertelement \<2 x i32\> %1986, i32 %1990, i64 1\l  %1992 = tail call i1 @llvm.amdgcn.class.f64(double %1855, i32 504)\l  %1993 = select i1 %1992, \<2 x i32\> %1991, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %1994 = bitcast \<2 x i32\> %1993 to double\l  %1995 = fneg contract double %1853\l  %1996 = fdiv contract double %1995, %5\l  %1997 = tail call double @llvm.fabs.f64(double %1996)\l  %1998 = fadd double %1997, 0xBFE62E42FEFA39EF\l  %1999 = fsub double %1998, %1997\l  %2000 = fsub double %1999, %1998\l  %2001 = fadd double %1997, %2000\l  %2002 = fadd double %1999, 0x3FE62E42FEFA39EF\l  %2003 = fsub double %2001, %2002\l  %2004 = fadd double %2003, 0xBC7ABC9E3B39803F\l  %2005 = fadd double %1998, %2004\l  %2006 = fsub double %2005, %1998\l  %2007 = fsub double %2004, %2006\l  %2008 = fmul double %2005, 0x3FF71547652B82FE\l  %2009 = tail call double @llvm.rint.f64(double %2008)\l  %2010 = tail call double @llvm.fma.f64(double %2009, double\l... 0xBFE62E42FEFA3000, double %2005)\l  %2011 = fadd double %2007, %2010\l  %2012 = fsub double %2011, %2010\l  %2013 = fsub double %2007, %2012\l  %2014 = fmul double %2009, 0x3D53DE6AF278E000\l  %2015 = fsub double %2011, %2014\l  %2016 = fsub double %2011, %2015\l  %2017 = fsub double %2016, %2014\l  %2018 = fadd double %2013, %2017\l  %2019 = fadd double %2015, %2018\l  %2020 = fsub double %2019, %2015\l  %2021 = fsub double %2018, %2020\l  %2022 = fmul double %2009, 0x3AC9CC01F97B57A0\l  %2023 = fsub double %2019, %2022\l  %2024 = fsub double %2019, %2023\l  %2025 = fsub double %2024, %2022\l  %2026 = fadd double %2021, %2025\l  %2027 = fadd double %2023, %2026\l  %2028 = fsub double %2027, %2023\l  %2029 = fsub double %2026, %2028\l  %2030 = tail call double @llvm.fma.f64(double %2027, double\l... 0x3E5ADE156A5DCB37, double 0x3E928AF3FCA7AB0C)\l  %2031 = tail call double @llvm.fma.f64(double %2027, double %2030, double\l... 0x3EC71DEE623FDE64)\l  %2032 = tail call double @llvm.fma.f64(double %2027, double %2031, double\l... 0x3EFA01997C89E6B0)\l  %2033 = tail call double @llvm.fma.f64(double %2027, double %2032, double\l... 0x3F2A01A014761F6E)\l  %2034 = tail call double @llvm.fma.f64(double %2027, double %2033, double\l... 0x3F56C16C1852B7B0)\l  %2035 = tail call double @llvm.fma.f64(double %2027, double %2034, double\l... 0x3F81111111122322)\l  %2036 = tail call double @llvm.fma.f64(double %2027, double %2035, double\l... 0x3FA55555555502A1)\l  %2037 = tail call double @llvm.fma.f64(double %2027, double %2036, double\l... 0x3FC5555555555511)\l  %2038 = tail call double @llvm.fma.f64(double %2027, double %2037, double\l... 0x3FE000000000000B)\l  %2039 = fmul double %2027, %2027\l  %2040 = fneg double %2039\l  %2041 = tail call double @llvm.fma.f64(double %2027, double %2027, double\l... %2040)\l  %2042 = fmul double %2029, 2.000000e+00\l  %2043 = tail call double @llvm.fma.f64(double %2027, double %2042, double\l... %2041)\l  %2044 = fadd double %2039, %2043\l  %2045 = fsub double %2044, %2039\l  %2046 = fsub double %2043, %2045\l  %2047 = fmul double %2044, %2038\l  %2048 = fneg double %2047\l  %2049 = tail call double @llvm.fma.f64(double %2044, double %2038, double\l... %2048)\l  %2050 = tail call double @llvm.fma.f64(double %2046, double %2038, double\l... %2049)\l  %2051 = fadd double %2047, %2050\l  %2052 = fsub double %2051, %2047\l  %2053 = fsub double %2050, %2052\l  %2054 = fadd double %2027, %2051\l  %2055 = fsub double %2054, %2027\l  %2056 = fsub double %2051, %2055\l  %2057 = fadd double %2029, %2053\l  %2058 = fadd double %2057, %2056\l  %2059 = fadd double %2054, %2058\l  %2060 = fsub double %2059, %2054\l  %2061 = fsub double %2058, %2060\l  %2062 = fadd double %2059, 1.000000e+00\l  %2063 = fadd double %2062, -1.000000e+00\l  %2064 = fsub double %2059, %2063\l  %2065 = fadd double %2061, %2064\l  %2066 = fadd double %2062, %2065\l  %2067 = fsub double %2066, %2062\l  %2068 = fsub double %2065, %2067\l  %2069 = fptosi double %2009 to i32\l  %2070 = tail call double @llvm.amdgcn.ldexp.f64(double %2066, i32 %2069)\l  %2071 = tail call double @llvm.amdgcn.ldexp.f64(double %2068, i32 %2069)\l  %2072 = tail call double @llvm.amdgcn.rcp.f64(double %2070)\l  %2073 = fneg double %2070\l  %2074 = tail call double @llvm.fma.f64(double %2073, double %2072, double\l... 1.000000e+00)\l  %2075 = tail call double @llvm.fma.f64(double %2074, double %2072, double\l... %2072)\l  %2076 = tail call double @llvm.fma.f64(double %2073, double %2075, double\l... 1.000000e+00)\l  %2077 = tail call double @llvm.fma.f64(double %2076, double %2075, double\l... %2075)\l  %2078 = fmul double %2070, %2077\l  %2079 = fneg double %2078\l  %2080 = tail call double @llvm.fma.f64(double %2077, double %2070, double\l... %2079)\l  %2081 = tail call double @llvm.fma.f64(double %2077, double %2071, double\l... %2080)\l  %2082 = fadd double %2078, %2081\l  %2083 = fsub double %2082, %2078\l  %2084 = fsub double %2081, %2083\l  %2085 = fsub double 1.000000e+00, %2082\l  %2086 = fsub double 1.000000e+00, %2085\l  %2087 = fsub double %2086, %2082\l  %2088 = fsub double %2087, %2084\l  %2089 = fadd double %2085, %2088\l  %2090 = fsub double %2089, %2085\l  %2091 = fsub double %2088, %2090\l  %2092 = fmul double %2077, %2089\l  %2093 = fmul double %2070, %2092\l  %2094 = fneg double %2093\l  %2095 = tail call double @llvm.fma.f64(double %2092, double %2070, double\l... %2094)\l  %2096 = tail call double @llvm.fma.f64(double %2092, double %2071, double\l... %2095)\l  %2097 = fadd double %2093, %2096\l  %2098 = fsub double %2097, %2093\l  %2099 = fsub double %2096, %2098\l  %2100 = fsub double %2089, %2097\l  %2101 = fsub double %2089, %2100\l  %2102 = fsub double %2101, %2097\l  %2103 = fadd double %2091, %2102\l  %2104 = fsub double %2103, %2099\l  %2105 = fadd double %2100, %2104\l  %2106 = fmul double %2077, %2105\l  %2107 = fadd double %2077, %2092\l  %2108 = fsub double %2107, %2077\l  %2109 = fsub double %2092, %2108\l  %2110 = fadd double %2109, %2106\l  %2111 = fadd double %2107, %2110\l  %2112 = fsub double %2111, %2107\l  %2113 = fsub double %2110, %2112\l  %2114 = tail call double @llvm.amdgcn.ldexp.f64(double %2111, i32 -2)\l  %2115 = tail call double @llvm.amdgcn.ldexp.f64(double %2113, i32 -2)\l  %2116 = fadd double %2070, %2114\l  %2117 = fsub double %2116, %2070\l  %2118 = fsub double %2114, %2117\l  %2119 = fadd double %2071, %2115\l  %2120 = fadd double %2119, %2118\l  %2121 = fadd double %2116, %2120\l  %2122 = fcmp oge double %1997, 0x408633CE8FB9F87E\l  %2123 = select i1 %2122, double 0x7FF0000000000000, double %2121\l  %2124 = fdiv contract double %1994, %2123\l  %2125 = fmul contract double %2124, 0x3F3FEABDAF5FE12A\l  %2126 = fmul contract double %758, %393\l  %2127 = fmul contract double %1579, %403\l  %2128 = fsub contract double %2126, %2127\l  br i1 %215, label %2327, label %2129\l|{<s0>T|<s1>F}}"];
	Node0x576c6e0:s0 -> Node0x5748c00;
	Node0x576c6e0:s1 -> Node0x5748c50;
	Node0x5748c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%2129:\l2129:                                             \l  %2130 = fmul contract double %758, %404\l  %2131 = fmul contract double %1579, %414\l  %2132 = fsub contract double %2130, %2131\l  %2133 = fneg contract double %2132\l  %2134 = fmul contract double %477, %2133\l  %2135 = fmul contract double %475, %4\l  %2136 = fsub contract double %2134, %2135\l  %2137 = fmul contract double %474, %6\l  %2138 = fsub contract double %2136, %2137\l  %2139 = fsub contract double %480, %481\l  %2140 = fmul contract double %2128, %2139\l  %2141 = fmul contract double %476, %2132\l  %2142 = fadd contract double %2140, %2141\l  %2143 = fmul contract double %474, %4\l  %2144 = fadd contract double %2143, %2142\l  %2145 = fmul contract double %475, %6\l  %2146 = fsub contract double %2144, %2145\l  %2147 = fmul contract double %2128, %479\l  %2148 = fmul contract double %475, %2132\l  %2149 = fsub contract double %2147, %2148\l  %2150 = fmul contract double %386, %477\l  %2151 = fsub contract double %2149, %2150\l  %2152 = fmul contract double %476, %7\l  %2153 = fsub contract double %2151, %2152\l  %2154 = fmul contract double %474, %2132\l  %2155 = fmul contract double %2128, %478\l  %2156 = fsub contract double %2154, %2155\l  %2157 = fmul contract double %386, %476\l  %2158 = fadd contract double %2157, %2156\l  %2159 = fmul contract double %477, %7\l  %2160 = fsub contract double %2158, %2159\l  %2161 = fmul contract double %2128, %477\l  %2162 = fmul contract double %479, %4\l  %2163 = fsub contract double %2161, %2162\l  %2164 = fmul contract double %478, %8\l  %2165 = fsub contract double %2163, %2164\l  %2166 = fsub contract double %481, %482\l  %2167 = fmul contract double %2132, %2166\l  %2168 = fmul contract double %2128, %476\l  %2169 = fsub contract double %2167, %2168\l  %2170 = fmul contract double %478, %4\l  %2171 = fadd contract double %2170, %2169\l  %2172 = fmul contract double %479, %8\l  %2173 = fsub contract double %2171, %2172\l  %2174 = fmul contract double %2128, 2.000000e+00\l  %2175 = fmul contract double %2174, %475\l  %2176 = fmul contract double %41, %481\l  %2177 = fsub contract double %2176, %2175\l  %2178 = fmul contract double %2132, 2.000000e+00\l  %2179 = fmul contract double %2178, %479\l  %2180 = fsub contract double %2175, %2179\l  %2181 = fsub contract double %2180, %2176\l  %2182 = fmul contract double %37, %2138\l  %2183 = fadd contract double %474, %2182\l  %2184 = fmul contract double %37, %2146\l  %2185 = fadd contract double %475, %2184\l  %2186 = fmul contract double %37, %2153\l  %2187 = fadd contract double %476, %2186\l  %2188 = fmul contract double %37, %2160\l  %2189 = fadd contract double %477, %2188\l  %2190 = fmul contract double %37, %2165\l  %2191 = fadd contract double %478, %2190\l  %2192 = fmul contract double %37, %2173\l  %2193 = fadd contract double %479, %2192\l  %2194 = fmul contract double %37, %2177\l  %2195 = fadd contract double %480, %2194\l  %2196 = fmul contract double %37, %2181\l  %2197 = fadd contract double %481, %2196\l  %2198 = fmul contract double %37, %2179\l  %2199 = fadd contract double %482, %2198\l  %2200 = fmul contract double %1032, %393\l  %2201 = fmul contract double %1852, %403\l  %2202 = fsub contract double %2200, %2201\l  %2203 = fmul contract double %1032, %415\l  %2204 = fmul contract double %1852, %425\l  %2205 = fsub contract double %2203, %2204\l  %2206 = fneg contract double %2205\l  %2207 = fmul contract double %2189, %2206\l  %2208 = fmul contract double %2185, %4\l  %2209 = fsub contract double %2207, %2208\l  %2210 = fmul contract double %2183, %6\l  %2211 = fsub contract double %2209, %2210\l  %2212 = fsub contract double %2195, %2197\l  %2213 = fmul contract double %2202, %2212\l  %2214 = fmul contract double %2187, %2205\l  %2215 = fadd contract double %2213, %2214\l  %2216 = fmul contract double %2183, %4\l  %2217 = fadd contract double %2216, %2215\l  %2218 = fmul contract double %2185, %6\l  %2219 = fsub contract double %2217, %2218\l  %2220 = fmul contract double %2202, %2193\l  %2221 = fmul contract double %2185, %2205\l  %2222 = fsub contract double %2220, %2221\l  %2223 = fmul contract double %386, %2189\l  %2224 = fsub contract double %2222, %2223\l  %2225 = fmul contract double %2187, %7\l  %2226 = fsub contract double %2224, %2225\l  %2227 = fmul contract double %2183, %2205\l  %2228 = fmul contract double %2202, %2191\l  %2229 = fsub contract double %2227, %2228\l  %2230 = fmul contract double %386, %2187\l  %2231 = fadd contract double %2230, %2229\l  %2232 = fmul contract double %2189, %7\l  %2233 = fsub contract double %2231, %2232\l  %2234 = fmul contract double %2202, %2189\l  %2235 = fmul contract double %2193, %4\l  %2236 = fsub contract double %2234, %2235\l  %2237 = fmul contract double %2191, %8\l  %2238 = fsub contract double %2236, %2237\l  %2239 = fsub contract double %2197, %2199\l  %2240 = fmul contract double %2205, %2239\l  %2241 = fmul contract double %2202, %2187\l  %2242 = fsub contract double %2240, %2241\l  %2243 = fmul contract double %2191, %4\l  %2244 = fadd contract double %2243, %2242\l  %2245 = fmul contract double %2193, %8\l  %2246 = fsub contract double %2244, %2245\l  %2247 = fmul contract double %2202, 2.000000e+00\l  %2248 = fmul contract double %2247, %2185\l  %2249 = fmul contract double %41, %2197\l  %2250 = fsub contract double %2249, %2248\l  %2251 = fmul contract double %2205, 2.000000e+00\l  %2252 = fmul contract double %2251, %2193\l  %2253 = fsub contract double %2248, %2252\l  %2254 = fsub contract double %2253, %2249\l  %2255 = fmul contract double %37, %2211\l  %2256 = fadd contract double %474, %2255\l  %2257 = fmul contract double %37, %2219\l  %2258 = fadd contract double %475, %2257\l  %2259 = fmul contract double %37, %2226\l  %2260 = fadd contract double %476, %2259\l  %2261 = fmul contract double %37, %2233\l  %2262 = fadd contract double %477, %2261\l  %2263 = fmul contract double %37, %2238\l  %2264 = fadd contract double %478, %2263\l  %2265 = fmul contract double %37, %2246\l  %2266 = fadd contract double %479, %2265\l  %2267 = fmul contract double %37, %2250\l  %2268 = fadd contract double %480, %2267\l  %2269 = fmul contract double %37, %2254\l  %2270 = fadd contract double %481, %2269\l  %2271 = fmul contract double %37, %2252\l  %2272 = fadd contract double %482, %2271\l  %2273 = fmul contract double %1032, %426\l  %2274 = fmul contract double %1852, %436\l  %2275 = fsub contract double %2273, %2274\l  %2276 = fneg contract double %2275\l  %2277 = fmul contract double %2262, %2276\l  %2278 = fmul contract double %2258, %4\l  %2279 = fsub contract double %2277, %2278\l  %2280 = fmul contract double %2256, %6\l  %2281 = fsub contract double %2279, %2280\l  %2282 = fsub contract double %2268, %2270\l  %2283 = fmul contract double %2202, %2282\l  %2284 = fmul contract double %2260, %2275\l  %2285 = fadd contract double %2283, %2284\l  %2286 = fmul contract double %2256, %4\l  %2287 = fadd contract double %2286, %2285\l  %2288 = fmul contract double %2258, %6\l  %2289 = fsub contract double %2287, %2288\l  %2290 = fmul contract double %2202, %2266\l  %2291 = fmul contract double %2258, %2275\l  %2292 = fsub contract double %2290, %2291\l  %2293 = fmul contract double %386, %2262\l  %2294 = fsub contract double %2292, %2293\l  %2295 = fmul contract double %2260, %7\l  %2296 = fsub contract double %2294, %2295\l  %2297 = fmul contract double %2256, %2275\l  %2298 = fmul contract double %2202, %2264\l  %2299 = fsub contract double %2297, %2298\l  %2300 = fmul contract double %386, %2260\l  %2301 = fadd contract double %2300, %2299\l  %2302 = fmul contract double %2262, %7\l  %2303 = fsub contract double %2301, %2302\l  %2304 = fmul contract double %2202, %2262\l  %2305 = fmul contract double %2266, %4\l  %2306 = fsub contract double %2304, %2305\l  %2307 = fmul contract double %2264, %8\l  %2308 = fsub contract double %2306, %2307\l  %2309 = fsub contract double %2270, %2272\l  %2310 = fmul contract double %2275, %2309\l  %2311 = fmul contract double %2202, %2260\l  %2312 = fsub contract double %2310, %2311\l  %2313 = fmul contract double %2264, %4\l  %2314 = fadd contract double %2313, %2312\l  %2315 = fmul contract double %2266, %8\l  %2316 = fsub contract double %2314, %2315\l  %2317 = fmul contract double %2247, %2258\l  %2318 = fmul contract double %41, %2270\l  %2319 = fsub contract double %2318, %2317\l  %2320 = fmul contract double %2275, 2.000000e+00\l  %2321 = fmul contract double %2320, %2266\l  %2322 = fsub contract double %2317, %2321\l  %2323 = fsub contract double %2322, %2318\l  %2324 = fmul contract double %1306, %393\l  %2325 = fmul contract double %2125, %403\l  %2326 = fsub contract double %2324, %2325\l  br label %2525\l}"];
	Node0x5748c50 -> Node0x572ae70;
	Node0x5748c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%2327:\l2327:                                             \l  %2328 = fmul contract double %758, %437\l  %2329 = fmul contract double %1579, %447\l  %2330 = fsub contract double %2328, %2329\l  %2331 = fneg contract double %2330\l  %2332 = fmul contract double %477, %2331\l  %2333 = fmul contract double %475, %4\l  %2334 = fsub contract double %2332, %2333\l  %2335 = fmul contract double %474, %6\l  %2336 = fsub contract double %2334, %2335\l  %2337 = fsub contract double %480, %481\l  %2338 = fmul contract double %2128, %2337\l  %2339 = fmul contract double %476, %2330\l  %2340 = fadd contract double %2338, %2339\l  %2341 = fmul contract double %474, %4\l  %2342 = fadd contract double %2341, %2340\l  %2343 = fmul contract double %475, %6\l  %2344 = fsub contract double %2342, %2343\l  %2345 = fmul contract double %2128, %479\l  %2346 = fmul contract double %475, %2330\l  %2347 = fsub contract double %2345, %2346\l  %2348 = fmul contract double %386, %477\l  %2349 = fsub contract double %2347, %2348\l  %2350 = fmul contract double %476, %7\l  %2351 = fsub contract double %2349, %2350\l  %2352 = fmul contract double %474, %2330\l  %2353 = fmul contract double %2128, %478\l  %2354 = fsub contract double %2352, %2353\l  %2355 = fmul contract double %386, %476\l  %2356 = fadd contract double %2355, %2354\l  %2357 = fmul contract double %477, %7\l  %2358 = fsub contract double %2356, %2357\l  %2359 = fmul contract double %2128, %477\l  %2360 = fmul contract double %479, %4\l  %2361 = fsub contract double %2359, %2360\l  %2362 = fmul contract double %478, %8\l  %2363 = fsub contract double %2361, %2362\l  %2364 = fsub contract double %481, %482\l  %2365 = fmul contract double %2330, %2364\l  %2366 = fmul contract double %2128, %476\l  %2367 = fsub contract double %2365, %2366\l  %2368 = fmul contract double %478, %4\l  %2369 = fadd contract double %2368, %2367\l  %2370 = fmul contract double %479, %8\l  %2371 = fsub contract double %2369, %2370\l  %2372 = fmul contract double %2128, 2.000000e+00\l  %2373 = fmul contract double %2372, %475\l  %2374 = fmul contract double %41, %481\l  %2375 = fsub contract double %2374, %2373\l  %2376 = fmul contract double %2330, 2.000000e+00\l  %2377 = fmul contract double %2376, %479\l  %2378 = fsub contract double %2373, %2377\l  %2379 = fsub contract double %2378, %2374\l  %2380 = fmul contract double %37, %2336\l  %2381 = fadd contract double %474, %2380\l  %2382 = fmul contract double %37, %2344\l  %2383 = fadd contract double %475, %2382\l  %2384 = fmul contract double %37, %2351\l  %2385 = fadd contract double %476, %2384\l  %2386 = fmul contract double %37, %2358\l  %2387 = fadd contract double %477, %2386\l  %2388 = fmul contract double %37, %2363\l  %2389 = fadd contract double %478, %2388\l  %2390 = fmul contract double %37, %2371\l  %2391 = fadd contract double %479, %2390\l  %2392 = fmul contract double %37, %2375\l  %2393 = fadd contract double %480, %2392\l  %2394 = fmul contract double %37, %2379\l  %2395 = fadd contract double %481, %2394\l  %2396 = fmul contract double %37, %2377\l  %2397 = fadd contract double %482, %2396\l  %2398 = fmul contract double %1032, %393\l  %2399 = fmul contract double %1852, %403\l  %2400 = fsub contract double %2398, %2399\l  %2401 = fmul contract double %1032, %448\l  %2402 = fmul contract double %1852, %458\l  %2403 = fsub contract double %2401, %2402\l  %2404 = fneg contract double %2403\l  %2405 = fmul contract double %2387, %2404\l  %2406 = fmul contract double %2383, %4\l  %2407 = fsub contract double %2405, %2406\l  %2408 = fmul contract double %2381, %6\l  %2409 = fsub contract double %2407, %2408\l  %2410 = fsub contract double %2393, %2395\l  %2411 = fmul contract double %2400, %2410\l  %2412 = fmul contract double %2385, %2403\l  %2413 = fadd contract double %2411, %2412\l  %2414 = fmul contract double %2381, %4\l  %2415 = fadd contract double %2414, %2413\l  %2416 = fmul contract double %2383, %6\l  %2417 = fsub contract double %2415, %2416\l  %2418 = fmul contract double %2400, %2391\l  %2419 = fmul contract double %2383, %2403\l  %2420 = fsub contract double %2418, %2419\l  %2421 = fmul contract double %386, %2387\l  %2422 = fsub contract double %2420, %2421\l  %2423 = fmul contract double %2385, %7\l  %2424 = fsub contract double %2422, %2423\l  %2425 = fmul contract double %2381, %2403\l  %2426 = fmul contract double %2400, %2389\l  %2427 = fsub contract double %2425, %2426\l  %2428 = fmul contract double %386, %2385\l  %2429 = fadd contract double %2428, %2427\l  %2430 = fmul contract double %2387, %7\l  %2431 = fsub contract double %2429, %2430\l  %2432 = fmul contract double %2400, %2387\l  %2433 = fmul contract double %2391, %4\l  %2434 = fsub contract double %2432, %2433\l  %2435 = fmul contract double %2389, %8\l  %2436 = fsub contract double %2434, %2435\l  %2437 = fsub contract double %2395, %2397\l  %2438 = fmul contract double %2403, %2437\l  %2439 = fmul contract double %2400, %2385\l  %2440 = fsub contract double %2438, %2439\l  %2441 = fmul contract double %2389, %4\l  %2442 = fadd contract double %2441, %2440\l  %2443 = fmul contract double %2391, %8\l  %2444 = fsub contract double %2442, %2443\l  %2445 = fmul contract double %2400, 2.000000e+00\l  %2446 = fmul contract double %2445, %2383\l  %2447 = fmul contract double %41, %2395\l  %2448 = fsub contract double %2447, %2446\l  %2449 = fmul contract double %2403, 2.000000e+00\l  %2450 = fmul contract double %2449, %2391\l  %2451 = fsub contract double %2446, %2450\l  %2452 = fsub contract double %2451, %2447\l  %2453 = fmul contract double %37, %2409\l  %2454 = fadd contract double %474, %2453\l  %2455 = fmul contract double %37, %2417\l  %2456 = fadd contract double %475, %2455\l  %2457 = fmul contract double %37, %2424\l  %2458 = fadd contract double %476, %2457\l  %2459 = fmul contract double %37, %2431\l  %2460 = fadd contract double %477, %2459\l  %2461 = fmul contract double %37, %2436\l  %2462 = fadd contract double %478, %2461\l  %2463 = fmul contract double %37, %2444\l  %2464 = fadd contract double %479, %2463\l  %2465 = fmul contract double %37, %2448\l  %2466 = fadd contract double %480, %2465\l  %2467 = fmul contract double %37, %2452\l  %2468 = fadd contract double %481, %2467\l  %2469 = fmul contract double %37, %2450\l  %2470 = fadd contract double %482, %2469\l  %2471 = fmul contract double %1032, %459\l  %2472 = fmul contract double %1852, %469\l  %2473 = fsub contract double %2471, %2472\l  %2474 = fneg contract double %2473\l  %2475 = fmul contract double %2460, %2474\l  %2476 = fmul contract double %2456, %4\l  %2477 = fsub contract double %2475, %2476\l  %2478 = fmul contract double %2454, %6\l  %2479 = fsub contract double %2477, %2478\l  %2480 = fsub contract double %2466, %2468\l  %2481 = fmul contract double %2400, %2480\l  %2482 = fmul contract double %2458, %2473\l  %2483 = fadd contract double %2481, %2482\l  %2484 = fmul contract double %2454, %4\l  %2485 = fadd contract double %2484, %2483\l  %2486 = fmul contract double %2456, %6\l  %2487 = fsub contract double %2485, %2486\l  %2488 = fmul contract double %2400, %2464\l  %2489 = fmul contract double %2456, %2473\l  %2490 = fsub contract double %2488, %2489\l  %2491 = fmul contract double %386, %2460\l  %2492 = fsub contract double %2490, %2491\l  %2493 = fmul contract double %2458, %7\l  %2494 = fsub contract double %2492, %2493\l  %2495 = fmul contract double %2454, %2473\l  %2496 = fmul contract double %2400, %2462\l  %2497 = fsub contract double %2495, %2496\l  %2498 = fmul contract double %386, %2458\l  %2499 = fadd contract double %2498, %2497\l  %2500 = fmul contract double %2460, %7\l  %2501 = fsub contract double %2499, %2500\l  %2502 = fmul contract double %2400, %2460\l  %2503 = fmul contract double %2464, %4\l  %2504 = fsub contract double %2502, %2503\l  %2505 = fmul contract double %2462, %8\l  %2506 = fsub contract double %2504, %2505\l  %2507 = fsub contract double %2468, %2470\l  %2508 = fmul contract double %2473, %2507\l  %2509 = fmul contract double %2400, %2458\l  %2510 = fsub contract double %2508, %2509\l  %2511 = fmul contract double %2462, %4\l  %2512 = fadd contract double %2511, %2510\l  %2513 = fmul contract double %2464, %8\l  %2514 = fsub contract double %2512, %2513\l  %2515 = fmul contract double %2445, %2456\l  %2516 = fmul contract double %41, %2468\l  %2517 = fsub contract double %2516, %2515\l  %2518 = fmul contract double %2473, 2.000000e+00\l  %2519 = fmul contract double %2518, %2464\l  %2520 = fsub contract double %2515, %2519\l  %2521 = fsub contract double %2520, %2516\l  %2522 = fmul contract double %1306, %393\l  %2523 = fmul contract double %2125, %403\l  %2524 = fsub contract double %2522, %2523\l  br label %2525\l}"];
	Node0x5748c00 -> Node0x572ae70;
	Node0x572ae70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%2525:\l2525:                                             \l  %2526 = phi double [ %2379, %2327 ], [ %2181, %2129 ]\l  %2527 = phi double [ %2377, %2327 ], [ %2179, %2129 ]\l  %2528 = phi double [ %2375, %2327 ], [ %2177, %2129 ]\l  %2529 = phi double [ %2371, %2327 ], [ %2173, %2129 ]\l  %2530 = phi double [ %2363, %2327 ], [ %2165, %2129 ]\l  %2531 = phi double [ %2358, %2327 ], [ %2160, %2129 ]\l  %2532 = phi double [ %2351, %2327 ], [ %2153, %2129 ]\l  %2533 = phi double [ %2344, %2327 ], [ %2146, %2129 ]\l  %2534 = phi double [ %2336, %2327 ], [ %2138, %2129 ]\l  %2535 = phi double [ %2452, %2327 ], [ %2254, %2129 ]\l  %2536 = phi double [ %2450, %2327 ], [ %2252, %2129 ]\l  %2537 = phi double [ %2448, %2327 ], [ %2250, %2129 ]\l  %2538 = phi double [ %2444, %2327 ], [ %2246, %2129 ]\l  %2539 = phi double [ %2436, %2327 ], [ %2238, %2129 ]\l  %2540 = phi double [ %2431, %2327 ], [ %2233, %2129 ]\l  %2541 = phi double [ %2424, %2327 ], [ %2226, %2129 ]\l  %2542 = phi double [ %2417, %2327 ], [ %2219, %2129 ]\l  %2543 = phi double [ %2409, %2327 ], [ %2211, %2129 ]\l  %2544 = phi double [ %2524, %2327 ], [ %2326, %2129 ]\l  %2545 = phi double [ %2521, %2327 ], [ %2323, %2129 ]\l  %2546 = phi double [ %2519, %2327 ], [ %2321, %2129 ]\l  %2547 = phi double [ %2517, %2327 ], [ %2319, %2129 ]\l  %2548 = phi double [ %2514, %2327 ], [ %2316, %2129 ]\l  %2549 = phi double [ %2506, %2327 ], [ %2308, %2129 ]\l  %2550 = phi double [ %2501, %2327 ], [ %2303, %2129 ]\l  %2551 = phi double [ %2494, %2327 ], [ %2296, %2129 ]\l  %2552 = phi double [ %2487, %2327 ], [ %2289, %2129 ]\l  %2553 = phi double [ %2479, %2327 ], [ %2281, %2129 ]\l  %2554 = phi i32 [ %378, %2327 ], [ %322, %2129 ]\l  %2555 = phi i32 [ %374, %2327 ], [ %318, %2129 ]\l  %2556 = phi double [ %372, %2327 ], [ %316, %2129 ]\l  %2557 = phi double [ %361, %2327 ], [ %305, %2129 ]\l  %2558 = phi \<2 x i32\> [ %383, %2327 ], [ %328, %2129 ]\l  %2559 = fmul contract double %36, %2553\l  %2560 = fadd contract double %474, %2559\l  %2561 = fmul contract double %36, %2552\l  %2562 = fadd contract double %475, %2561\l  %2563 = fmul contract double %36, %2551\l  %2564 = fadd contract double %476, %2563\l  %2565 = fmul contract double %36, %2550\l  %2566 = fadd contract double %477, %2565\l  %2567 = fmul contract double %36, %2549\l  %2568 = fadd contract double %478, %2567\l  %2569 = fmul contract double %36, %2548\l  %2570 = fadd contract double %479, %2569\l  %2571 = fmul contract double %36, %2547\l  %2572 = fadd contract double %480, %2571\l  %2573 = fmul contract double %36, %2545\l  %2574 = fadd contract double %481, %2573\l  %2575 = fmul contract double %36, %2546\l  %2576 = fadd contract double %482, %2575\l  %2577 = bitcast \<2 x i32\> %2558 to double\l  %2578 = fmul contract double %1306, %2577\l  %2579 = icmp eq i32 %2555, 0\l  %2580 = select i1 %2579, double %2556, double %2557\l  %2581 = bitcast double %2580 to \<2 x i32\>\l  %2582 = xor i32 %2554, %385\l  %2583 = and i32 %2582, -2147483648\l  %2584 = extractelement \<2 x i32\> %2581, i64 1\l  %2585 = xor i32 %2584, %2583\l  %2586 = insertelement \<2 x i32\> %2581, i32 %2585, i64 1\l  %2587 = select i1 %327, \<2 x i32\> %2586, \<2 x i32\> \<i32 0, i32 2146959360\>\l  %2588 = bitcast \<2 x i32\> %2587 to double\l  %2589 = fmul contract double %2125, %2588\l  %2590 = fsub contract double %2578, %2589\l  %2591 = fneg contract double %2590\l  %2592 = fmul contract double %2566, %2591\l  %2593 = fmul contract double %2562, %4\l  %2594 = fsub contract double %2592, %2593\l  %2595 = fmul contract double %2560, %6\l  %2596 = fsub contract double %2594, %2595\l  %2597 = fsub contract double %2572, %2574\l  %2598 = fmul contract double %2544, %2597\l  %2599 = fmul contract double %2564, %2590\l  %2600 = fadd contract double %2598, %2599\l  %2601 = fmul contract double %2560, %4\l  %2602 = fadd contract double %2601, %2600\l  %2603 = fmul contract double %2562, %6\l  %2604 = fsub contract double %2602, %2603\l  %2605 = fmul contract double %2544, %2570\l  %2606 = fmul contract double %2562, %2590\l  %2607 = fsub contract double %2605, %2606\l  %2608 = fmul contract double %386, %2566\l  %2609 = fsub contract double %2607, %2608\l  %2610 = fmul contract double %2564, %7\l  %2611 = fsub contract double %2609, %2610\l  %2612 = fmul contract double %2560, %2590\l  %2613 = fmul contract double %2544, %2568\l  %2614 = fsub contract double %2612, %2613\l  %2615 = fmul contract double %386, %2564\l  %2616 = fadd contract double %2615, %2614\l  %2617 = fmul contract double %2566, %7\l  %2618 = fsub contract double %2616, %2617\l  %2619 = fmul contract double %2544, %2566\l  %2620 = fmul contract double %2570, %4\l  %2621 = fsub contract double %2619, %2620\l  %2622 = fmul contract double %2568, %8\l  %2623 = fsub contract double %2621, %2622\l  %2624 = fsub contract double %2574, %2576\l  %2625 = fmul contract double %2590, %2624\l  %2626 = fmul contract double %2544, %2564\l  %2627 = fsub contract double %2625, %2626\l  %2628 = fmul contract double %2568, %4\l  %2629 = fadd contract double %2628, %2627\l  %2630 = fmul contract double %2570, %8\l  %2631 = fsub contract double %2629, %2630\l  %2632 = fmul contract double %2544, 2.000000e+00\l  %2633 = fmul contract double %2632, %2562\l  %2634 = fmul contract double %41, %2574\l  %2635 = fsub contract double %2634, %2633\l  %2636 = fmul contract double %2590, 2.000000e+00\l  %2637 = fmul contract double %2636, %2570\l  %2638 = fsub contract double %2633, %2637\l  %2639 = fsub contract double %2638, %2634\l  %2640 = fadd contract double %2534, %2596\l  %2641 = fadd contract double %2543, %2553\l  %2642 = fmul contract double %2641, 2.000000e+00\l  %2643 = fadd contract double %2640, %2642\l  %2644 = fmul contract double %387, %2643\l  %2645 = fadd contract double %474, %2644\l  %2646 = fadd contract double %2533, %2604\l  %2647 = fadd contract double %2542, %2552\l  %2648 = fmul contract double %2647, 2.000000e+00\l  %2649 = fadd contract double %2646, %2648\l  %2650 = fmul contract double %387, %2649\l  %2651 = fadd contract double %475, %2650\l  %2652 = fadd contract double %2532, %2611\l  %2653 = fadd contract double %2541, %2551\l  %2654 = fmul contract double %2653, 2.000000e+00\l  %2655 = fadd contract double %2652, %2654\l  %2656 = fmul contract double %387, %2655\l  %2657 = fadd contract double %476, %2656\l  %2658 = fadd contract double %2531, %2618\l  %2659 = fadd contract double %2540, %2550\l  %2660 = fmul contract double %2659, 2.000000e+00\l  %2661 = fadd contract double %2658, %2660\l  %2662 = fmul contract double %387, %2661\l  %2663 = fadd contract double %477, %2662\l  %2664 = fadd contract double %2530, %2623\l  %2665 = fadd contract double %2539, %2549\l  %2666 = fmul contract double %2665, 2.000000e+00\l  %2667 = fadd contract double %2664, %2666\l  %2668 = fmul contract double %387, %2667\l  %2669 = fadd contract double %478, %2668\l  %2670 = fadd contract double %2529, %2631\l  %2671 = fadd contract double %2538, %2548\l  %2672 = fmul contract double %2671, 2.000000e+00\l  %2673 = fadd contract double %2670, %2672\l  %2674 = fmul contract double %387, %2673\l  %2675 = fadd contract double %479, %2674\l  %2676 = fadd contract double %2528, %2635\l  %2677 = fadd contract double %2537, %2547\l  %2678 = fmul contract double %2677, 2.000000e+00\l  %2679 = fadd contract double %2676, %2678\l  %2680 = fmul contract double %387, %2679\l  %2681 = fadd contract double %480, %2680\l  %2682 = fadd contract double %2526, %2639\l  %2683 = fadd contract double %2535, %2545\l  %2684 = fmul contract double %2683, 2.000000e+00\l  %2685 = fadd contract double %2682, %2684\l  %2686 = fmul contract double %387, %2685\l  %2687 = fadd contract double %481, %2686\l  %2688 = fadd contract double %2527, %2637\l  %2689 = fadd contract double %2536, %2546\l  %2690 = fmul contract double %2689, 2.000000e+00\l  %2691 = fadd contract double %2688, %2690\l  %2692 = fmul contract double %387, %2691\l  %2693 = fadd contract double %482, %2692\l  %2694 = add nuw nsw i32 %483, 1\l  %2695 = icmp eq i32 %2694, %34\l  br i1 %2695, label %470, label %473, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x572ae70:s0 -> Node0x5715af0;
	Node0x572ae70:s1 -> Node0x572ad70;
}
