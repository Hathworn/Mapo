digraph "CFG for 'cuPow' function" {
	label="CFG for 'cuPow' function";

	Node0x62f5740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = mul i32 %5, %10\l  %12 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %13 = add i32 %11, %12\l  %14 = icmp slt i32 %13, %0\l  br i1 %14, label %15, label %211\l|{<s0>T|<s1>F}}"];
	Node0x62f5740:s0 -> Node0x62f7660;
	Node0x62f5740:s1 -> Node0x62f76f0;
	Node0x62f7660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%15:\l15:                                               \l  %16 = sext i32 %13 to i64\l  %17 = getelementptr inbounds float, float addrspace(1)* %1, i64 %16\l  %18 = load float, float addrspace(1)* %17, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %19 = tail call float @llvm.fabs.f32(float %18)\l  %20 = tail call float @llvm.amdgcn.frexp.mant.f32(float %19)\l  %21 = fcmp olt float %20, 0x3FE5555560000000\l  %22 = zext i1 %21 to i32\l  %23 = tail call float @llvm.amdgcn.ldexp.f32(float %20, i32 %22)\l  %24 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f32(float %19)\l  %25 = sub nsw i32 %24, %22\l  %26 = fadd float %23, -1.000000e+00\l  %27 = fadd float %23, 1.000000e+00\l  %28 = fadd float %27, -1.000000e+00\l  %29 = fsub float %23, %28\l  %30 = tail call float @llvm.amdgcn.rcp.f32(float %27)\l  %31 = fmul float %26, %30\l  %32 = fmul float %27, %31\l  %33 = fneg float %32\l  %34 = tail call float @llvm.fma.f32(float %31, float %27, float %33)\l  %35 = tail call float @llvm.fma.f32(float %31, float %29, float %34)\l  %36 = fadd float %32, %35\l  %37 = fsub float %36, %32\l  %38 = fsub float %35, %37\l  %39 = fsub float %26, %36\l  %40 = fsub float %26, %39\l  %41 = fsub float %40, %36\l  %42 = fsub float %41, %38\l  %43 = fadd float %39, %42\l  %44 = fmul float %30, %43\l  %45 = fadd float %31, %44\l  %46 = fsub float %45, %31\l  %47 = fsub float %44, %46\l  %48 = fmul float %45, %45\l  %49 = fneg float %48\l  %50 = tail call float @llvm.fma.f32(float %45, float %45, float %49)\l  %51 = fmul float %47, 2.000000e+00\l  %52 = tail call float @llvm.fma.f32(float %45, float %51, float %50)\l  %53 = fadd float %48, %52\l  %54 = fsub float %53, %48\l  %55 = fsub float %52, %54\l  %56 = tail call float @llvm.fmuladd.f32(float %53, float 0x3FCED89C20000000,\l... float 0x3FD23E9880000000)\l  %57 = tail call float @llvm.fmuladd.f32(float %53, float %56, float\l... 0x3FD999BDE0000000)\l  %58 = sitofp i32 %25 to float\l  %59 = fmul float %58, 0x3FE62E4300000000\l  %60 = fneg float %59\l  %61 = tail call float @llvm.fma.f32(float %58, float 0x3FE62E4300000000,\l... float %60)\l  %62 = tail call float @llvm.fma.f32(float %58, float 0xBE205C6100000000,\l... float %61)\l  %63 = fadd float %59, %62\l  %64 = fsub float %63, %59\l  %65 = fsub float %62, %64\l  %66 = tail call float @llvm.amdgcn.ldexp.f32(float %45, i32 1)\l  %67 = fmul float %45, %53\l  %68 = fneg float %67\l  %69 = tail call float @llvm.fma.f32(float %53, float %45, float %68)\l  %70 = tail call float @llvm.fma.f32(float %53, float %47, float %69)\l  %71 = tail call float @llvm.fma.f32(float %55, float %45, float %70)\l  %72 = fadd float %67, %71\l  %73 = fsub float %72, %67\l  %74 = fsub float %71, %73\l  %75 = fmul float %53, %57\l  %76 = fneg float %75\l  %77 = tail call float @llvm.fma.f32(float %53, float %57, float %76)\l  %78 = tail call float @llvm.fma.f32(float %55, float %57, float %77)\l  %79 = fadd float %75, %78\l  %80 = fsub float %79, %75\l  %81 = fsub float %78, %80\l  %82 = fadd float %79, 0x3FE5555540000000\l  %83 = fadd float %82, 0xBFE5555540000000\l  %84 = fsub float %79, %83\l  %85 = fadd float %81, 0x3E2E720200000000\l  %86 = fadd float %85, %84\l  %87 = fadd float %82, %86\l  %88 = fsub float %87, %82\l  %89 = fsub float %86, %88\l  %90 = fmul float %72, %87\l  %91 = fneg float %90\l  %92 = tail call float @llvm.fma.f32(float %72, float %87, float %91)\l  %93 = tail call float @llvm.fma.f32(float %72, float %89, float %92)\l  %94 = tail call float @llvm.fma.f32(float %74, float %87, float %93)\l  %95 = tail call float @llvm.amdgcn.ldexp.f32(float %47, i32 1)\l  %96 = fadd float %90, %94\l  %97 = fsub float %96, %90\l  %98 = fsub float %94, %97\l  %99 = fadd float %66, %96\l  %100 = fsub float %99, %66\l  %101 = fsub float %96, %100\l  %102 = fadd float %95, %98\l  %103 = fadd float %102, %101\l  %104 = fadd float %99, %103\l  %105 = fsub float %104, %99\l  %106 = fsub float %103, %105\l  %107 = fadd float %63, %104\l  %108 = fsub float %107, %63\l  %109 = fsub float %107, %108\l  %110 = fsub float %63, %109\l  %111 = fsub float %104, %108\l  %112 = fadd float %111, %110\l  %113 = fadd float %65, %106\l  %114 = fsub float %113, %65\l  %115 = fsub float %113, %114\l  %116 = fsub float %65, %115\l  %117 = fsub float %106, %114\l  %118 = fadd float %117, %116\l  %119 = fadd float %113, %112\l  %120 = fadd float %107, %119\l  %121 = fsub float %120, %107\l  %122 = fsub float %119, %121\l  %123 = fadd float %118, %122\l  %124 = fadd float %120, %123\l  %125 = fsub float %124, %120\l  %126 = fsub float %123, %125\l  %127 = fmul float %124, %2\l  %128 = fneg float %127\l  %129 = tail call float @llvm.fma.f32(float %2, float %124, float %128)\l  %130 = tail call float @llvm.fma.f32(float %2, float %126, float %129)\l  %131 = fadd float %127, %130\l  %132 = fsub float %131, %127\l  %133 = fsub float %130, %132\l  %134 = tail call float @llvm.fabs.f32(float %127) #3\l  %135 = fcmp oeq float %134, 0x7FF0000000000000\l  %136 = select i1 %135, float %127, float %131\l  %137 = tail call float @llvm.fabs.f32(float %136) #3\l  %138 = fcmp oeq float %137, 0x7FF0000000000000\l  %139 = select i1 %138, float 0.000000e+00, float %133\l  %140 = fcmp oeq float %136, 0x40562E4300000000\l  %141 = select i1 %140, float 0x3EE0000000000000, float 0.000000e+00\l  %142 = fsub float %136, %141\l  %143 = fadd float %141, %139\l  %144 = fmul float %142, 0x3FF7154760000000\l  %145 = tail call float @llvm.rint.f32(float %144)\l  %146 = fcmp ogt float %142, 0x40562E4300000000\l  %147 = fcmp olt float %142, 0xC059D1DA00000000\l  %148 = fneg float %144\l  %149 = tail call float @llvm.fma.f32(float %142, float 0x3FF7154760000000,\l... float %148)\l  %150 = tail call float @llvm.fma.f32(float %142, float 0x3E54AE0BE0000000,\l... float %149)\l  %151 = fsub float %144, %145\l  %152 = fadd float %150, %151\l  %153 = tail call float @llvm.exp2.f32(float %152)\l  %154 = fptosi float %145 to i32\l  %155 = tail call float @llvm.amdgcn.ldexp.f32(float %153, i32 %154)\l  %156 = select i1 %147, float 0.000000e+00, float %155\l  %157 = select i1 %146, float 0x7FF0000000000000, float %156\l  %158 = tail call float @llvm.fma.f32(float %157, float %143, float %157)\l  %159 = tail call float @llvm.fabs.f32(float %157) #3\l  %160 = fcmp oeq float %159, 0x7FF0000000000000\l  %161 = select i1 %160, float %157, float %158\l  %162 = tail call float @llvm.fabs.f32(float %2)\l  %163 = tail call float @llvm.trunc.f32(float %162)\l  %164 = fcmp oeq float %162, %163\l  %165 = zext i1 %164 to i32\l  %166 = fmul float %163, 5.000000e-01\l  %167 = tail call float @llvm.amdgcn.fract.f32(float %166)\l  %168 = tail call i1 @llvm.amdgcn.class.f32(float %166, i32 516)\l  %169 = select i1 %168, float 0.000000e+00, float %167\l  %170 = fcmp oeq float %169, 0.000000e+00\l  %171 = and i1 %164, %170\l  %172 = zext i1 %171 to i32\l  %173 = add nuw nsw i32 %172, %165\l  %174 = icmp eq i32 %173, 1\l  %175 = fcmp olt float %18, 0.000000e+00\l  %176 = and i1 %174, %175\l  %177 = select i1 %176, float -0.000000e+00, float 0.000000e+00\l  %178 = tail call float @llvm.copysign.f32(float %161, float %177)\l  %179 = fcmp uge float %18, 0.000000e+00\l  %180 = icmp ne i32 %173, 0\l  %181 = select i1 %179, i1 true, i1 %180\l  %182 = select i1 %181, float %178, float 0x7FF8000000000000\l  %183 = fcmp oeq float %162, 0x7FF0000000000000\l  br i1 %183, label %184, label %193\l|{<s0>T|<s1>F}}"];
	Node0x62f7660:s0 -> Node0x6301a70;
	Node0x62f7660:s1 -> Node0x6301b00;
	Node0x6301a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%184:\l184:                                              \l  %185 = fcmp oeq float %19, 1.000000e+00\l  %186 = fadd float %19, -1.000000e+00\l  %187 = bitcast float %2 to i32\l  %188 = bitcast float %186 to i32\l  %189 = xor i32 %188, %187\l  %190 = icmp sgt i32 %189, -1\l  %191 = select i1 %190, float 0x7FF0000000000000, float 0.000000e+00\l  %192 = select i1 %185, float %19, float %191\l  br label %193\l}"];
	Node0x6301a70 -> Node0x6301b00;
	Node0x6301b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%193:\l193:                                              \l  %194 = phi float [ %182, %15 ], [ %192, %184 ]\l  %195 = fcmp oeq float %19, 0x7FF0000000000000\l  %196 = fcmp oeq float %18, 0.000000e+00\l  %197 = or i1 %196, %195\l  %198 = fcmp olt float %2, 0.000000e+00\l  %199 = xor i1 %198, %196\l  %200 = select i1 %199, float 0.000000e+00, float 0x7FF0000000000000\l  %201 = select i1 %174, float %18, float 0.000000e+00\l  %202 = tail call float @llvm.copysign.f32(float %200, float %201)\l  %203 = select i1 %197, float %202, float %194\l  %204 = fcmp uno float %18, %2\l  %205 = select i1 %204, float 0x7FF8000000000000, float %203\l  %206 = fcmp oeq float %18, 1.000000e+00\l  %207 = fcmp oeq float %2, 0.000000e+00\l  %208 = or i1 %207, %206\l  %209 = select i1 %208, float 1.000000e+00, float %205\l  %210 = getelementptr inbounds float, float addrspace(1)* %3, i64 %16\l  store float %209, float addrspace(1)* %210, align 4, !tbaa !7\l  br label %211\l}"];
	Node0x6301b00 -> Node0x62f76f0;
	Node0x62f76f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%211:\l211:                                              \l  ret void\l}"];
}
