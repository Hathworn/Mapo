digraph "CFG for 'cuLog' function" {
	label="CFG for 'cuLog' function";

	Node0x4c8c1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = mul i32 %4, %9\l  %11 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %12 = add i32 %10, %11\l  %13 = icmp slt i32 %12, %0\l  br i1 %13, label %14, label %105\l|{<s0>T|<s1>F}}"];
	Node0x4c8c1d0:s0 -> Node0x4c8e0e0;
	Node0x4c8c1d0:s1 -> Node0x4c8e170;
	Node0x4c8e0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sext i32 %12 to i64\l  %16 = getelementptr inbounds float, float addrspace(1)* %1, i64 %15\l  %17 = load float, float addrspace(1)* %16, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %18 = fpext float %17 to double\l  %19 = tail call double @llvm.amdgcn.frexp.mant.f64(double %18)\l  %20 = fcmp olt double %19, 0x3FE5555555555555\l  %21 = zext i1 %20 to i32\l  %22 = tail call double @llvm.amdgcn.ldexp.f64(double %19, i32 %21)\l  %23 = tail call i32 @llvm.amdgcn.frexp.exp.i32.f64(double %18)\l  %24 = sub nsw i32 %23, %21\l  %25 = fadd double %22, -1.000000e+00\l  %26 = fadd double %22, 1.000000e+00\l  %27 = fadd double %26, -1.000000e+00\l  %28 = fsub double %22, %27\l  %29 = tail call double @llvm.amdgcn.rcp.f64(double %26)\l  %30 = fneg double %26\l  %31 = tail call double @llvm.fma.f64(double %30, double %29, double\l... 1.000000e+00)\l  %32 = tail call double @llvm.fma.f64(double %31, double %29, double %29)\l  %33 = tail call double @llvm.fma.f64(double %30, double %32, double\l... 1.000000e+00)\l  %34 = tail call double @llvm.fma.f64(double %33, double %32, double %32)\l  %35 = fmul double %25, %34\l  %36 = fmul double %26, %35\l  %37 = fneg double %36\l  %38 = tail call double @llvm.fma.f64(double %35, double %26, double %37)\l  %39 = tail call double @llvm.fma.f64(double %35, double %28, double %38)\l  %40 = fadd double %36, %39\l  %41 = fsub double %40, %36\l  %42 = fsub double %39, %41\l  %43 = fsub double %25, %40\l  %44 = fsub double %25, %43\l  %45 = fsub double %44, %40\l  %46 = fsub double %45, %42\l  %47 = fadd double %43, %46\l  %48 = fmul double %34, %47\l  %49 = fadd double %35, %48\l  %50 = fsub double %49, %35\l  %51 = fsub double %48, %50\l  %52 = fmul double %49, %49\l  %53 = tail call double @llvm.fma.f64(double %52, double 0x3FC3AB76BF559E2B,\l... double 0x3FC385386B47B09A)\l  %54 = tail call double @llvm.fma.f64(double %52, double %53, double\l... 0x3FC7474DD7F4DF2E)\l  %55 = tail call double @llvm.fma.f64(double %52, double %54, double\l... 0x3FCC71C016291751)\l  %56 = tail call double @llvm.fma.f64(double %52, double %55, double\l... 0x3FD249249B27ACF1)\l  %57 = tail call double @llvm.fma.f64(double %52, double %56, double\l... 0x3FD99999998EF7B6)\l  %58 = tail call double @llvm.fma.f64(double %52, double %57, double\l... 0x3FE5555555555780)\l  %59 = tail call double @llvm.amdgcn.ldexp.f64(double %49, i32 1)\l  %60 = tail call double @llvm.amdgcn.ldexp.f64(double %51, i32 1)\l  %61 = fmul double %49, %52\l  %62 = fmul double %61, %58\l  %63 = fadd double %59, %62\l  %64 = fsub double %63, %59\l  %65 = fsub double %62, %64\l  %66 = fadd double %60, %65\l  %67 = fadd double %63, %66\l  %68 = fsub double %67, %63\l  %69 = fsub double %66, %68\l  %70 = sitofp i32 %24 to double\l  %71 = fmul double %70, 0x3FE62E42FEFA39EF\l  %72 = fneg double %71\l  %73 = tail call double @llvm.fma.f64(double %70, double 0x3FE62E42FEFA39EF,\l... double %72)\l  %74 = tail call double @llvm.fma.f64(double %70, double 0x3C7ABC9E3B39803F,\l... double %73)\l  %75 = fadd double %71, %74\l  %76 = fsub double %75, %71\l  %77 = fsub double %74, %76\l  %78 = fadd double %75, %67\l  %79 = fsub double %78, %75\l  %80 = fsub double %78, %79\l  %81 = fsub double %75, %80\l  %82 = fsub double %67, %79\l  %83 = fadd double %82, %81\l  %84 = fadd double %77, %69\l  %85 = fsub double %84, %77\l  %86 = fsub double %84, %85\l  %87 = fsub double %77, %86\l  %88 = fsub double %69, %85\l  %89 = fadd double %88, %87\l  %90 = fadd double %84, %83\l  %91 = fadd double %78, %90\l  %92 = fsub double %91, %78\l  %93 = fsub double %90, %92\l  %94 = fadd double %89, %93\l  %95 = fadd double %91, %94\l  %96 = tail call double @llvm.fabs.f64(double %18) #3\l  %97 = fcmp oeq double %96, 0x7FF0000000000000\l  %98 = fcmp olt float %17, 0.000000e+00\l  %99 = fcmp oeq float %17, 0.000000e+00\l  %100 = fptrunc double %95 to float\l  %101 = select i1 %97, float %17, float %100\l  %102 = select i1 %98, float 0x7FF8000000000000, float %101\l  %103 = select i1 %99, float 0xFFF0000000000000, float %102\l  %104 = getelementptr inbounds float, float addrspace(1)* %2, i64 %15\l  store float %103, float addrspace(1)* %104, align 4, !tbaa !7\l  br label %105\l}"];
	Node0x4c8e0e0 -> Node0x4c8e170;
	Node0x4c8e170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%105:\l105:                                              \l  ret void\l}"];
}
