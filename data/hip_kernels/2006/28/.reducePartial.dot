digraph "CFG for 'reducePartial' function" {
	label="CFG for 'reducePartial' function";

	Node0x4cd4990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = bitcast i8 addrspace(1)* %1 to float addrspace(1)*\l  %5 = bitcast i8 addrspace(1)* %2 to float addrspace(1)*\l  %6 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %7 = getelementptr i8, i8 addrspace(4)* %6, i64 4\l  %8 = bitcast i8 addrspace(4)* %7 to i16 addrspace(4)*\l  %9 = load i16, i16 addrspace(4)* %8, align 4, !range !4, !invariant.load !5\l  %10 = zext i16 %9 to i32\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %10\l  %13 = getelementptr inbounds double, double addrspace(3)* %12, i32 %10\l  %14 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %15 = shl i32 %11, 1\l  %16 = mul i32 %15, %10\l  %17 = add i32 %16, %14\l  %18 = icmp ult i32 %17, %0\l  br i1 %18, label %19, label %24\l|{<s0>T|<s1>F}}"];
	Node0x4cd4990:s0 -> Node0x4cd6c30;
	Node0x4cd4990:s1 -> Node0x4cd6cc0;
	Node0x4cd6c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%19:\l19:                                               \l  %20 = zext i32 %17 to i64\l  %21 = getelementptr inbounds float, float addrspace(1)* %4, i64 %20\l  %22 = load float, float addrspace(1)* %21, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %23 = fpext float %22 to double\l  br label %24\l}"];
	Node0x4cd6c30 -> Node0x4cd6cc0;
	Node0x4cd6cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%24:\l24:                                               \l  %25 = phi double [ %23, %19 ], [ 0.000000e+00, %3 ]\l  %26 = add i32 %17, %10\l  %27 = icmp ult i32 %26, %0\l  br i1 %27, label %28, label %33\l|{<s0>T|<s1>F}}"];
	Node0x4cd6cc0:s0 -> Node0x4cd8400;
	Node0x4cd6cc0:s1 -> Node0x4cd8490;
	Node0x4cd8400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%28:\l28:                                               \l  %29 = zext i32 %26 to i64\l  %30 = getelementptr inbounds float, float addrspace(1)* %4, i64 %29\l  %31 = load float, float addrspace(1)* %30, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %32 = fpext float %31 to double\l  br label %33\l}"];
	Node0x4cd8400 -> Node0x4cd8490;
	Node0x4cd8490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%33:\l33:                                               \l  %34 = phi double [ %32, %28 ], [ 0.000000e+00, %24 ]\l  %35 = fadd contract double %25, %34\l  %36 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %14\l  store double %35, double addrspace(3)* %36, align 8, !tbaa !11\l  br i1 %18, label %37, label %42\l|{<s0>T|<s1>F}}"];
	Node0x4cd8490:s0 -> Node0x4cd92e0;
	Node0x4cd8490:s1 -> Node0x4cd9370;
	Node0x4cd92e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%37:\l37:                                               \l  %38 = zext i32 %17 to i64\l  %39 = getelementptr inbounds float, float addrspace(1)* %4, i64 %38\l  %40 = load float, float addrspace(1)* %39, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %41 = fpext float %40 to double\l  br label %42\l}"];
	Node0x4cd92e0 -> Node0x4cd9370;
	Node0x4cd9370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%42:\l42:                                               \l  %43 = phi double [ %41, %37 ], [ 0.000000e+00, %33 ]\l  %44 = fsub contract double %35, %43\l  br i1 %27, label %45, label %50\l|{<s0>T|<s1>F}}"];
	Node0x4cd9370:s0 -> Node0x4cd9850;
	Node0x4cd9370:s1 -> Node0x4cd98a0;
	Node0x4cd9850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%45:\l45:                                               \l  %46 = zext i32 %26 to i64\l  %47 = getelementptr inbounds float, float addrspace(1)* %4, i64 %46\l  %48 = load float, float addrspace(1)* %47, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %49 = fpext float %48 to double\l  br label %50\l}"];
	Node0x4cd9850 -> Node0x4cd98a0;
	Node0x4cd98a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%50:\l50:                                               \l  %51 = phi double [ %49, %45 ], [ 0.000000e+00, %42 ]\l  %52 = fsub contract double %44, %51\l  %53 = getelementptr inbounds double, double addrspace(3)* %13, i32 %14\l  store double %52, double addrspace(3)* %53, align 8, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %54 = icmp ult i16 %9, 2\l  br i1 %54, label %57, label %55\l|{<s0>T|<s1>F}}"];
	Node0x4cd98a0:s0 -> Node0x4cda800;
	Node0x4cd98a0:s1 -> Node0x4cda890;
	Node0x4cda890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%55:\l55:                                               \l  %56 = getelementptr inbounds double, double addrspace(3)* %12, i32 %14\l  br label %59\l}"];
	Node0x4cda890 -> Node0x4cdaa70;
	Node0x4cda800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%57:\l57:                                               \l  %58 = icmp eq i32 %14, 0\l  br i1 %58, label %79, label %84\l|{<s0>T|<s1>F}}"];
	Node0x4cda800:s0 -> Node0x4cdabc0;
	Node0x4cda800:s1 -> Node0x4cdac10;
	Node0x4cdaa70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%59:\l59:                                               \l  %60 = phi i32 [ %10, %55 ], [ %61, %77 ]\l  %61 = lshr i32 %60, 1\l  %62 = icmp ult i32 %14, %61\l  br i1 %62, label %63, label %77\l|{<s0>T|<s1>F}}"];
	Node0x4cdaa70:s0 -> Node0x4cdafe0;
	Node0x4cdaa70:s1 -> Node0x4cdad80;
	Node0x4cdafe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%63:\l63:                                               \l  %64 = load double, double addrspace(3)* %36, align 8, !tbaa !11\l  %65 = add nuw nsw i32 %61, %14\l  %66 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %65\l  %67 = load double, double addrspace(3)* %66, align 8, !tbaa !11\l  %68 = fadd contract double %64, %67\l  %69 = load double, double addrspace(3)* %53, align 8, !tbaa !11\l  %70 = fsub contract double %68, %69\l  %71 = getelementptr inbounds double, double addrspace(3)* %13, i32 %65\l  %72 = load double, double addrspace(3)* %71, align 8, !tbaa !11\l  %73 = fsub contract double %70, %72\l  store double %73, double addrspace(3)* %56, align 8, !tbaa !11\l  %74 = fsub contract double %73, %64\l  %75 = load double, double addrspace(3)* %66, align 8, !tbaa !11\l  %76 = fsub contract double %74, %75\l  store double %76, double addrspace(3)* %53, align 8, !tbaa !11\l  store double %73, double addrspace(3)* %36, align 8, !tbaa !11\l  br label %77\l}"];
	Node0x4cdafe0 -> Node0x4cdad80;
	Node0x4cdad80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%77:\l77:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %78 = icmp ult i32 %60, 4\l  br i1 %78, label %57, label %59, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x4cdad80:s0 -> Node0x4cda800;
	Node0x4cdad80:s1 -> Node0x4cdaa70;
	Node0x4cdabc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%79:\l79:                                               \l  %80 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @sdata, i32 0, i32 0), align 8, !tbaa !11\l  %81 = fptrunc double %80 to float\l  %82 = zext i32 %11 to i64\l  %83 = getelementptr inbounds float, float addrspace(1)* %5, i64 %82\l  store float %81, float addrspace(1)* %83, align 4, !tbaa !7\l  br label %84\l}"];
	Node0x4cdabc0 -> Node0x4cdac10;
	Node0x4cdac10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%84:\l84:                                               \l  ret void\l}"];
}
