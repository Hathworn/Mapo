digraph "CFG for 'reduceFloatVectorToDoubleScalar' function" {
	label="CFG for 'reduceFloatVectorToDoubleScalar' function";

	Node0x6383980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%3:\l  %4 = bitcast i8 addrspace(1)* %1 to float addrspace(1)*\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = zext i16 %8 to i32\l  %10 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %11 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %9\l  %12 = getelementptr inbounds double, double addrspace(3)* %11, i32 %9\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = shl i32 %10, 1\l  %15 = mul i32 %14, %9\l  %16 = add i32 %15, %13\l  %17 = icmp ult i32 %16, %0\l  br i1 %17, label %18, label %23\l|{<s0>T|<s1>F}}"];
	Node0x6383980:s0 -> Node0x6385b90;
	Node0x6383980:s1 -> Node0x6385c20;
	Node0x6385b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%18:\l18:                                               \l  %19 = zext i32 %16 to i64\l  %20 = getelementptr inbounds float, float addrspace(1)* %4, i64 %19\l  %21 = load float, float addrspace(1)* %20, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %22 = fpext float %21 to double\l  br label %23\l}"];
	Node0x6385b90 -> Node0x6385c20;
	Node0x6385c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%23:\l23:                                               \l  %24 = phi double [ %22, %18 ], [ 0.000000e+00, %3 ]\l  %25 = add i32 %16, %9\l  %26 = icmp ult i32 %25, %0\l  br i1 %26, label %27, label %32\l|{<s0>T|<s1>F}}"];
	Node0x6385c20:s0 -> Node0x6387360;
	Node0x6385c20:s1 -> Node0x63873f0;
	Node0x6387360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%27:\l27:                                               \l  %28 = zext i32 %25 to i64\l  %29 = getelementptr inbounds float, float addrspace(1)* %4, i64 %28\l  %30 = load float, float addrspace(1)* %29, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %31 = fpext float %30 to double\l  br label %32\l}"];
	Node0x6387360 -> Node0x63873f0;
	Node0x63873f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%32:\l32:                                               \l  %33 = phi double [ %31, %27 ], [ 0.000000e+00, %23 ]\l  %34 = fadd contract double %24, %33\l  %35 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %13\l  store double %34, double addrspace(3)* %35, align 8, !tbaa !11\l  br i1 %17, label %36, label %41\l|{<s0>T|<s1>F}}"];
	Node0x63873f0:s0 -> Node0x6388250;
	Node0x63873f0:s1 -> Node0x63882e0;
	Node0x6388250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%36:\l36:                                               \l  %37 = zext i32 %16 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %4, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %40 = fpext float %39 to double\l  br label %41\l}"];
	Node0x6388250 -> Node0x63882e0;
	Node0x63882e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%41:\l41:                                               \l  %42 = phi double [ %40, %36 ], [ 0.000000e+00, %32 ]\l  %43 = fsub contract double %34, %42\l  br i1 %26, label %44, label %49\l|{<s0>T|<s1>F}}"];
	Node0x63882e0:s0 -> Node0x63887c0;
	Node0x63882e0:s1 -> Node0x6388810;
	Node0x63887c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%44:\l44:                                               \l  %45 = zext i32 %25 to i64\l  %46 = getelementptr inbounds float, float addrspace(1)* %4, i64 %45\l  %47 = load float, float addrspace(1)* %46, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  %48 = fpext float %47 to double\l  br label %49\l}"];
	Node0x63887c0 -> Node0x6388810;
	Node0x6388810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%49:\l49:                                               \l  %50 = phi double [ %48, %44 ], [ 0.000000e+00, %41 ]\l  %51 = fsub contract double %43, %50\l  %52 = getelementptr inbounds double, double addrspace(3)* %12, i32 %13\l  store double %51, double addrspace(3)* %52, align 8, !tbaa !11\l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %53 = icmp ult i16 %8, 2\l  br i1 %53, label %56, label %54\l|{<s0>T|<s1>F}}"];
	Node0x6388810:s0 -> Node0x6389770;
	Node0x6388810:s1 -> Node0x6389800;
	Node0x6389800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bfd3f670",label="{%54:\l54:                                               \l  %55 = getelementptr inbounds double, double addrspace(3)* %11, i32 %13\l  br label %58\l}"];
	Node0x6389800 -> Node0x63899e0;
	Node0x6389770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%56:\l56:                                               \l  %57 = icmp eq i32 %13, 0\l  br i1 %57, label %78, label %82\l|{<s0>T|<s1>F}}"];
	Node0x6389770:s0 -> Node0x6389b30;
	Node0x6389770:s1 -> Node0x6389b80;
	Node0x63899e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32 [ %9, %54 ], [ %60, %76 ]\l  %60 = lshr i32 %59, 1\l  %61 = icmp ult i32 %13, %60\l  br i1 %61, label %62, label %76\l|{<s0>T|<s1>F}}"];
	Node0x63899e0:s0 -> Node0x6389f50;
	Node0x63899e0:s1 -> Node0x6389cf0;
	Node0x6389f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%62:\l62:                                               \l  %63 = load double, double addrspace(3)* %35, align 8, !tbaa !11\l  %64 = add nuw nsw i32 %60, %13\l  %65 = getelementptr inbounds [0 x double], [0 x double] addrspace(3)*\l... @sdata, i32 0, i32 %64\l  %66 = load double, double addrspace(3)* %65, align 8, !tbaa !11\l  %67 = fadd contract double %63, %66\l  %68 = load double, double addrspace(3)* %52, align 8, !tbaa !11\l  %69 = fsub contract double %67, %68\l  %70 = getelementptr inbounds double, double addrspace(3)* %12, i32 %64\l  %71 = load double, double addrspace(3)* %70, align 8, !tbaa !11\l  %72 = fsub contract double %69, %71\l  store double %72, double addrspace(3)* %55, align 8, !tbaa !11\l  %73 = fsub contract double %72, %63\l  %74 = load double, double addrspace(3)* %65, align 8, !tbaa !11\l  %75 = fsub contract double %73, %74\l  store double %75, double addrspace(3)* %52, align 8, !tbaa !11\l  store double %72, double addrspace(3)* %35, align 8, !tbaa !11\l  br label %76\l}"];
	Node0x6389f50 -> Node0x6389cf0;
	Node0x6389cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  fence syncscope(\"workgroup\") release\l  tail call void @llvm.amdgcn.s.barrier()\l  fence syncscope(\"workgroup\") acquire\l  %77 = icmp ult i32 %59, 4\l  br i1 %77, label %56, label %58, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x6389cf0:s0 -> Node0x6389770;
	Node0x6389cf0:s1 -> Node0x63899e0;
	Node0x6389b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b2ccfb70",label="{%78:\l78:                                               \l  %79 = load double, double addrspace(3)* getelementptr inbounds ([0 x\l... double], [0 x double] addrspace(3)* @sdata, i32 0, i32 0), align 8, !tbaa !11\l  %80 = zext i32 %10 to i64\l  %81 = getelementptr inbounds double, double addrspace(1)* %2, i64 %80\l  store double %79, double addrspace(1)* %81, align 8, !tbaa !11\l  br label %82\l}"];
	Node0x6389b30 -> Node0x6389b80;
	Node0x6389b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%82:\l82:                                               \l  ret void\l}"];
}
