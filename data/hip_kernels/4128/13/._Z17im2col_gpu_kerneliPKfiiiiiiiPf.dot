digraph "CFG for '_Z17im2col_gpu_kerneliPKfiiiiiiiPf' function" {
	label="CFG for '_Z17im2col_gpu_kerneliPKfiiiiiiiPf' function";

	Node0x6354440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%10:\l  %11 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %12 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %13 = getelementptr i8, i8 addrspace(4)* %12, i64 4\l  %14 = bitcast i8 addrspace(4)* %13 to i16 addrspace(4)*\l  %15 = load i16, i16 addrspace(4)* %14, align 4, !range !4, !invariant.load !5\l  %16 = zext i16 %15 to i32\l  %17 = getelementptr inbounds i8, i8 addrspace(4)* %12, i64 12\l  %18 = bitcast i8 addrspace(4)* %17 to i32 addrspace(4)*\l  %19 = load i32, i32 addrspace(4)* %18, align 4, !tbaa !6\l  %20 = mul i32 %11, %16\l  %21 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !15\l  %22 = add i32 %20, %21\l  %23 = icmp slt i32 %22, %0\l  br i1 %23, label %24, label %173\l|{<s0>T|<s1>F}}"];
	Node0x6354440:s0 -> Node0x6357230;
	Node0x6354440:s1 -> Node0x63572c0;
	Node0x6357230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%24:\l24:                                               \l  %25 = mul i32 %4, %4\l  %26 = mul i32 %25, %7\l  %27 = icmp sgt i32 %4, 0\l  %28 = mul nsw i32 %8, %7\l  %29 = sext i32 %28 to i64\l  %30 = udiv i32 %19, %16\l  %31 = mul i32 %30, %16\l  %32 = icmp ugt i32 %19, %31\l  %33 = zext i1 %32 to i32\l  %34 = add i32 %30, %33\l  %35 = mul i32 %34, %16\l  %36 = and i32 %4, 3\l  %37 = icmp ult i32 %4, 4\l  %38 = and i32 %4, -4\l  %39 = icmp eq i32 %36, 0\l  br label %40\l}"];
	Node0x6357230 -> Node0x6357dd0;
	Node0x6357dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = phi i32 [ %22, %24 ], [ %76, %75 ]\l  %42 = freeze i32 %41\l  %43 = freeze i32 %8\l  %44 = sdiv i32 %42, %43\l  %45 = mul i32 %44, %43\l  %46 = sub i32 %42, %45\l  %47 = freeze i32 %7\l  %48 = sdiv i32 %44, %47\l  %49 = mul i32 %48, %47\l  %50 = sub i32 %44, %49\l  %51 = mul nsw i32 %50, %6\l  %52 = sub nsw i32 %51, %5\l  %53 = mul nsw i32 %46, %6\l  %54 = sub nsw i32 %53, %5\l  %55 = mul nsw i32 %48, %2\l  %56 = add nsw i32 %55, %52\l  %57 = mul nsw i32 %56, %3\l  %58 = add nsw i32 %57, %54\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds float, float addrspace(1)* %1, i64 %59\l  br i1 %27, label %61, label %75\l|{<s0>T|<s1>F}}"];
	Node0x6357dd0:s0 -> Node0x6358a40;
	Node0x6357dd0:s1 -> Node0x6357ec0;
	Node0x6358a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%61:\l61:                                               \l  %62 = mul i32 %26, %48\l  %63 = add nsw i32 %62, %50\l  %64 = mul nsw i32 %63, %8\l  %65 = add nsw i32 %64, %46\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds float, float addrspace(1)* %9, i64 %66\l  br label %68\l}"];
	Node0x6358a40 -> Node0x6357a00;
	Node0x6357a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%68:\l68:                                               \l  %69 = phi float addrspace(1)* [ %104, %103 ], [ %67, %61 ]\l  %70 = phi i32 [ %105, %103 ], [ 0, %61 ]\l  %71 = add nsw i32 %70, %52\l  %72 = icmp sgt i32 %71, -1\l  %73 = icmp slt i32 %71, %2\l  %74 = mul nsw i32 %70, %3\l  br i1 %37, label %78, label %107\l|{<s0>T|<s1>F}}"];
	Node0x6357a00:s0 -> Node0x63596b0;
	Node0x6357a00:s1 -> Node0x6359740;
	Node0x6357ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%75:\l75:                                               \l  %76 = add i32 %35, %41\l  %77 = icmp slt i32 %76, %0\l  br i1 %77, label %40, label %173, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x6357ec0:s0 -> Node0x6357dd0;
	Node0x6357ec0:s1 -> Node0x63572c0;
	Node0x63596b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%78:\l78:                                               \l  %79 = phi float addrspace(1)* [ undef, %68 ], [ %169, %167 ]\l  %80 = phi float addrspace(1)* [ %69, %68 ], [ %169, %167 ]\l  %81 = phi i32 [ 0, %68 ], [ %170, %167 ]\l  br i1 %39, label %103, label %82\l|{<s0>T|<s1>F}}"];
	Node0x63596b0:s0 -> Node0x63591e0;
	Node0x63596b0:s1 -> Node0x635a230;
	Node0x635a230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%82:\l82:                                               \l  %83 = phi float addrspace(1)* [ %99, %97 ], [ %80, %78 ]\l  %84 = phi i32 [ %100, %97 ], [ %81, %78 ]\l  %85 = phi i32 [ %101, %97 ], [ 0, %78 ]\l  %86 = add nsw i32 %84, %54\l  %87 = icmp sgt i32 %86, -1\l  %88 = select i1 %72, i1 %87, i1 false\l  %89 = select i1 %88, i1 %73, i1 false\l  %90 = icmp slt i32 %86, %3\l  %91 = select i1 %89, i1 %90, i1 false\l  br i1 %91, label %92, label %97\l|{<s0>T|<s1>F}}"];
	Node0x635a230:s0 -> Node0x635ab10;
	Node0x635a230:s1 -> Node0x635a3a0;
	Node0x635ab10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%92:\l92:                                               \l  %93 = add nsw i32 %84, %74\l  %94 = sext i32 %93 to i64\l  %95 = getelementptr inbounds float, float addrspace(1)* %60, i64 %94\l  %96 = load float, float addrspace(1)* %95, align 4, !tbaa !18\l  br label %97\l}"];
	Node0x635ab10 -> Node0x635a3a0;
	Node0x635a3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi contract float [ %96, %92 ], [ 0.000000e+00, %82 ]\l  store float %98, float addrspace(1)* %83, align 4, !tbaa !18\l  %99 = getelementptr inbounds float, float addrspace(1)* %83, i64 %29\l  %100 = add nuw nsw i32 %84, 1\l  %101 = add i32 %85, 1\l  %102 = icmp eq i32 %101, %36\l  br i1 %102, label %103, label %82, !llvm.loop !22\l|{<s0>T|<s1>F}}"];
	Node0x635a3a0:s0 -> Node0x63591e0;
	Node0x635a3a0:s1 -> Node0x635a230;
	Node0x63591e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%103:\l103:                                              \l  %104 = phi float addrspace(1)* [ %79, %78 ], [ %99, %97 ]\l  %105 = add nuw nsw i32 %70, 1\l  %106 = icmp eq i32 %105, %4\l  br i1 %106, label %75, label %68, !llvm.loop !24\l|{<s0>T|<s1>F}}"];
	Node0x63591e0:s0 -> Node0x6357ec0;
	Node0x63591e0:s1 -> Node0x6357a00;
	Node0x6359740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%107:\l107:                                              \l  %108 = phi float addrspace(1)* [ %169, %167 ], [ %69, %68 ]\l  %109 = phi i32 [ %170, %167 ], [ 0, %68 ]\l  %110 = phi i32 [ %171, %167 ], [ 0, %68 ]\l  %111 = add nsw i32 %109, %54\l  %112 = icmp sgt i32 %111, -1\l  %113 = select i1 %72, i1 %112, i1 false\l  %114 = select i1 %113, i1 %73, i1 false\l  %115 = icmp slt i32 %111, %3\l  %116 = select i1 %114, i1 %115, i1 false\l  br i1 %116, label %117, label %122\l|{<s0>T|<s1>F}}"];
	Node0x6359740:s0 -> Node0x635cdb0;
	Node0x6359740:s1 -> Node0x635ce40;
	Node0x635cdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%117:\l117:                                              \l  %118 = add nsw i32 %109, %74\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds float, float addrspace(1)* %60, i64 %119\l  %121 = load float, float addrspace(1)* %120, align 4, !tbaa !18\l  br label %122\l}"];
	Node0x635cdb0 -> Node0x635ce40;
	Node0x635ce40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%122:\l122:                                              \l  %123 = phi contract float [ %121, %117 ], [ 0.000000e+00, %107 ]\l  store float %123, float addrspace(1)* %108, align 4, !tbaa !18\l  %124 = getelementptr inbounds float, float addrspace(1)* %108, i64 %29\l  %125 = or i32 %109, 1\l  %126 = add nsw i32 %125, %54\l  %127 = icmp sgt i32 %126, -1\l  %128 = select i1 %72, i1 %127, i1 false\l  %129 = select i1 %128, i1 %73, i1 false\l  %130 = icmp slt i32 %126, %3\l  %131 = select i1 %129, i1 %130, i1 false\l  br i1 %131, label %132, label %137\l|{<s0>T|<s1>F}}"];
	Node0x635ce40:s0 -> Node0x6358f20;
	Node0x635ce40:s1 -> Node0x6358f70;
	Node0x6358f20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%132:\l132:                                              \l  %133 = add nsw i32 %125, %74\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds float, float addrspace(1)* %60, i64 %134\l  %136 = load float, float addrspace(1)* %135, align 4, !tbaa !18\l  br label %137\l}"];
	Node0x6358f20 -> Node0x6358f70;
	Node0x6358f70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%137:\l137:                                              \l  %138 = phi contract float [ %136, %132 ], [ 0.000000e+00, %122 ]\l  store float %138, float addrspace(1)* %124, align 4, !tbaa !18\l  %139 = getelementptr inbounds float, float addrspace(1)* %124, i64 %29\l  %140 = or i32 %109, 2\l  %141 = add nsw i32 %140, %54\l  %142 = icmp sgt i32 %141, -1\l  %143 = select i1 %72, i1 %142, i1 false\l  %144 = select i1 %143, i1 %73, i1 false\l  %145 = icmp slt i32 %141, %3\l  %146 = select i1 %144, i1 %145, i1 false\l  br i1 %146, label %147, label %152\l|{<s0>T|<s1>F}}"];
	Node0x6358f70:s0 -> Node0x635e670;
	Node0x6358f70:s1 -> Node0x635e6c0;
	Node0x635e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%147:\l147:                                              \l  %148 = add nsw i32 %140, %74\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds float, float addrspace(1)* %60, i64 %149\l  %151 = load float, float addrspace(1)* %150, align 4, !tbaa !18\l  br label %152\l}"];
	Node0x635e670 -> Node0x635e6c0;
	Node0x635e6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%152:\l152:                                              \l  %153 = phi contract float [ %151, %147 ], [ 0.000000e+00, %137 ]\l  store float %153, float addrspace(1)* %139, align 4, !tbaa !18\l  %154 = getelementptr inbounds float, float addrspace(1)* %139, i64 %29\l  %155 = or i32 %109, 3\l  %156 = add nsw i32 %155, %54\l  %157 = icmp sgt i32 %156, -1\l  %158 = select i1 %72, i1 %157, i1 false\l  %159 = select i1 %158, i1 %73, i1 false\l  %160 = icmp slt i32 %156, %3\l  %161 = select i1 %159, i1 %160, i1 false\l  br i1 %161, label %162, label %167\l|{<s0>T|<s1>F}}"];
	Node0x635e6c0:s0 -> Node0x635f070;
	Node0x635e6c0:s1 -> Node0x6359f20;
	Node0x635f070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%162:\l162:                                              \l  %163 = add nsw i32 %155, %74\l  %164 = sext i32 %163 to i64\l  %165 = getelementptr inbounds float, float addrspace(1)* %60, i64 %164\l  %166 = load float, float addrspace(1)* %165, align 4, !tbaa !18\l  br label %167\l}"];
	Node0x635f070 -> Node0x6359f20;
	Node0x6359f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{%167:\l167:                                              \l  %168 = phi contract float [ %166, %162 ], [ 0.000000e+00, %152 ]\l  store float %168, float addrspace(1)* %154, align 4, !tbaa !18\l  %169 = getelementptr inbounds float, float addrspace(1)* %154, i64 %29\l  %170 = add nuw nsw i32 %109, 4\l  %171 = add i32 %110, 4\l  %172 = icmp eq i32 %171, %38\l  br i1 %172, label %78, label %107, !llvm.loop !25\l|{<s0>T|<s1>F}}"];
	Node0x6359f20:s0 -> Node0x63596b0;
	Node0x6359f20:s1 -> Node0x6359740;
	Node0x63572c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%173:\l173:                                              \l  ret void\l}"];
}
