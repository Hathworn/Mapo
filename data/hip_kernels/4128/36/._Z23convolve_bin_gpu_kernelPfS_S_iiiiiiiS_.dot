digraph "CFG for '_Z23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_' function" {
	label="CFG for '_Z23convolve_bin_gpu_kernelPfS_S_iiiiiiiS_' function";

	Node0x6407300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%11:\l  %12 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %13 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %14 = getelementptr i8, i8 addrspace(4)* %13, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !4, !invariant.load !5\l  %17 = zext i16 %16 to i32\l  %18 = mul i32 %12, %17\l  %19 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %20 = add i32 %18, %19\l  %21 = freeze i32 %20\l  %22 = freeze i32 %3\l  %23 = sdiv i32 %21, %22\l  %24 = mul i32 %23, %22\l  %25 = sub i32 %21, %24\l  %26 = freeze i32 %4\l  %27 = sdiv i32 %23, %26\l  %28 = mul i32 %27, %26\l  %29 = sub i32 %23, %28\l  %30 = icmp slt i32 %27, %6\l  br i1 %30, label %31, label %203\l|{<s0>T|<s1>F}}"];
	Node0x6407300:s0 -> Node0x640a2c0;
	Node0x6407300:s1 -> Node0x640a350;
	Node0x640a2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%31:\l31:                                               \l  %32 = mul i32 %27, %4\l  %33 = add i32 %32, %29\l  %34 = mul i32 %33, %3\l  %35 = add i32 %34, %25\l  %36 = icmp sgt i32 %5, 0\l  br i1 %36, label %37, label %191\l|{<s0>T|<s1>F}}"];
	Node0x640a2c0:s0 -> Node0x6409890;
	Node0x640a2c0:s1 -> Node0x640a8e0;
	Node0x6409890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#779af770",label="{%37:\l37:                                               \l  %38 = mul nsw i32 %27, %9\l  %39 = icmp sgt i32 %7, 0\l  %40 = sub i32 %29, %8\l  %41 = sub i32 %25, %8\l  %42 = bitcast float addrspace(1)* %0 to i8 addrspace(1)*\l  %43 = bitcast float addrspace(1)* %1 to i8 addrspace(1)*\l  %44 = and i32 %7, 1\l  %45 = icmp eq i32 %7, 1\l  %46 = and i32 %7, -2\l  %47 = icmp eq i32 %44, 0\l  br label %48\l}"];
	Node0x6409890 -> Node0x640afb0;
	Node0x640afb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%48:\l48:                                               \l  %49 = phi i32 [ 0, %37 ], [ %189, %186 ]\l  %50 = phi i32 [ 0, %37 ], [ %188, %186 ]\l  %51 = phi i32 [ 0, %37 ], [ %187, %186 ]\l  %52 = mul i32 %49, %7\l  %53 = mul i32 %49, %4\l  br i1 %39, label %54, label %186\l|{<s0>T|<s1>F}}"];
	Node0x640afb0:s0 -> Node0x640b540;
	Node0x640afb0:s1 -> Node0x640b0a0;
	Node0x640b540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%54:\l54:                                               \l  %55 = phi i32 [ %184, %181 ], [ 0, %48 ]\l  %56 = phi i32 [ %183, %181 ], [ %50, %48 ]\l  %57 = phi i32 [ %182, %181 ], [ %51, %48 ]\l  %58 = add i32 %40, %55\l  %59 = icmp sgt i32 %58, -1\l  %60 = icmp slt i32 %58, %4\l  %61 = add i32 %58, %53\l  %62 = mul i32 %61, %3\l  %63 = add i32 %55, %52\l  %64 = mul i32 %63, %7\l  %65 = add i32 %64, %38\l  br i1 %45, label %143, label %66\l|{<s0>T|<s1>F}}"];
	Node0x640b540:s0 -> Node0x640a5b0;
	Node0x640b540:s1 -> Node0x640a640;
	Node0x640a640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i32 [ %140, %137 ], [ 0, %54 ]\l  %68 = phi i32 [ %139, %137 ], [ %56, %54 ]\l  %69 = phi i32 [ %138, %137 ], [ %57, %54 ]\l  %70 = phi i32 [ %141, %137 ], [ 0, %54 ]\l  %71 = add i32 %41, %67\l  %72 = icmp sgt i32 %71, -1\l  %73 = select i1 %59, i1 %72, i1 false\l  %74 = select i1 %73, i1 %60, i1 false\l  %75 = icmp slt i32 %71, %3\l  %76 = select i1 %74, i1 %75, i1 false\l  br i1 %76, label %77, label %102\l|{<s0>T|<s1>F}}"];
	Node0x640a640:s0 -> Node0x640cb70;
	Node0x640a640:s1 -> Node0x640cc00;
	Node0x640cb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%77:\l77:                                               \l  %78 = add i32 %71, %62\l  %79 = add i32 %65, %67\l  %80 = sext i32 %78 to i64\l  %81 = lshr i64 %80, 3\l  %82 = and i32 %78, 7\l  %83 = getelementptr inbounds i8, i8 addrspace(1)* %42, i64 %81\l  %84 = load i8, i8 addrspace(1)* %83, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %85 = zext i8 %84 to i32\l  %86 = shl nuw nsw i32 1, %82\l  %87 = and i32 %86, %85\l  %88 = icmp ne i32 %87, 0\l  %89 = sext i32 %79 to i64\l  %90 = lshr i64 %89, 3\l  %91 = and i32 %79, 7\l  %92 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 %90\l  %93 = load i8, i8 addrspace(1)* %92, align 1, !tbaa !7, !amdgpu.noclobber !5\l  %94 = zext i8 %93 to i32\l  %95 = shl nuw nsw i32 1, %91\l  %96 = and i32 %95, %94\l  %97 = icmp eq i32 %96, 0\l  %98 = xor i1 %88, %97\l  %99 = zext i1 %98 to i32\l  %100 = add nsw i32 %68, %99\l  %101 = add nsw i32 %69, 1\l  br label %102\l}"];
	Node0x640cb70 -> Node0x640cc00;
	Node0x640cc00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%102:\l102:                                              \l  %103 = phi i32 [ %101, %77 ], [ %69, %66 ]\l  %104 = phi i32 [ %100, %77 ], [ %68, %66 ]\l  %105 = or i32 %67, 1\l  %106 = add i32 %41, %105\l  %107 = icmp sgt i32 %106, -1\l  %108 = select i1 %59, i1 %107, i1 false\l  %109 = select i1 %108, i1 %60, i1 false\l  %110 = icmp slt i32 %106, %3\l  %111 = select i1 %109, i1 %110, i1 false\l  br i1 %111, label %112, label %137\l|{<s0>T|<s1>F}}"];
	Node0x640cc00:s0 -> Node0x640ee90;
	Node0x640cc00:s1 -> Node0x640c310;
	Node0x640ee90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{%112:\l112:                                              \l  %113 = add i32 %106, %62\l  %114 = add i32 %65, %105\l  %115 = sext i32 %113 to i64\l  %116 = lshr i64 %115, 3\l  %117 = and i32 %113, 7\l  %118 = getelementptr inbounds i8, i8 addrspace(1)* %42, i64 %116\l  %119 = load i8, i8 addrspace(1)* %118, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %120 = zext i8 %119 to i32\l  %121 = shl nuw nsw i32 1, %117\l  %122 = and i32 %121, %120\l  %123 = icmp ne i32 %122, 0\l  %124 = sext i32 %114 to i64\l  %125 = lshr i64 %124, 3\l  %126 = and i32 %114, 7\l  %127 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 %125\l  %128 = load i8, i8 addrspace(1)* %127, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %129 = zext i8 %128 to i32\l  %130 = shl nuw nsw i32 1, %126\l  %131 = and i32 %130, %129\l  %132 = icmp eq i32 %131, 0\l  %133 = xor i1 %123, %132\l  %134 = zext i1 %133 to i32\l  %135 = add nsw i32 %104, %134\l  %136 = add nsw i32 %103, 1\l  br label %137\l}"];
	Node0x640ee90 -> Node0x640c310;
	Node0x640c310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%137:\l137:                                              \l  %138 = phi i32 [ %136, %112 ], [ %103, %102 ]\l  %139 = phi i32 [ %135, %112 ], [ %104, %102 ]\l  %140 = add nuw nsw i32 %67, 2\l  %141 = add i32 %70, 2\l  %142 = icmp eq i32 %141, %46\l  br i1 %142, label %143, label %66, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x640c310:s0 -> Node0x640a5b0;
	Node0x640c310:s1 -> Node0x640a640;
	Node0x640a5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%143:\l143:                                              \l  %144 = phi i32 [ undef, %54 ], [ %138, %137 ]\l  %145 = phi i32 [ undef, %54 ], [ %139, %137 ]\l  %146 = phi i32 [ 0, %54 ], [ %140, %137 ]\l  %147 = phi i32 [ %56, %54 ], [ %139, %137 ]\l  %148 = phi i32 [ %57, %54 ], [ %138, %137 ]\l  br i1 %47, label %181, label %149\l|{<s0>T|<s1>F}}"];
	Node0x640a5b0:s0 -> Node0x640b6b0;
	Node0x640a5b0:s1 -> Node0x6410c80;
	Node0x6410c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%149:\l149:                                              \l  %150 = add i32 %41, %146\l  %151 = icmp sgt i32 %150, -1\l  %152 = select i1 %59, i1 %151, i1 false\l  %153 = select i1 %152, i1 %60, i1 false\l  %154 = icmp slt i32 %150, %3\l  %155 = select i1 %153, i1 %154, i1 false\l  br i1 %155, label %156, label %181\l|{<s0>T|<s1>F}}"];
	Node0x6410c80:s0 -> Node0x6411140;
	Node0x6410c80:s1 -> Node0x640b6b0;
	Node0x6411140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%156:\l156:                                              \l  %157 = add i32 %150, %62\l  %158 = add i32 %65, %146\l  %159 = sext i32 %157 to i64\l  %160 = lshr i64 %159, 3\l  %161 = and i32 %157, 7\l  %162 = getelementptr inbounds i8, i8 addrspace(1)* %42, i64 %160\l  %163 = load i8, i8 addrspace(1)* %162, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %164 = zext i8 %163 to i32\l  %165 = shl nuw nsw i32 1, %161\l  %166 = and i32 %165, %164\l  %167 = icmp ne i32 %166, 0\l  %168 = sext i32 %158 to i64\l  %169 = lshr i64 %168, 3\l  %170 = and i32 %158, 7\l  %171 = getelementptr inbounds i8, i8 addrspace(1)* %43, i64 %169\l  %172 = load i8, i8 addrspace(1)* %171, align 1, !tbaa !7, !amdgpu.noclobber\l... !5\l  %173 = zext i8 %172 to i32\l  %174 = shl nuw nsw i32 1, %170\l  %175 = and i32 %174, %173\l  %176 = icmp eq i32 %175, 0\l  %177 = xor i1 %167, %176\l  %178 = zext i1 %177 to i32\l  %179 = add nsw i32 %147, %178\l  %180 = add nsw i32 %148, 1\l  br label %181\l}"];
	Node0x6411140 -> Node0x640b6b0;
	Node0x640b6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%181:\l181:                                              \l  %182 = phi i32 [ %144, %143 ], [ %180, %156 ], [ %148, %149 ]\l  %183 = phi i32 [ %145, %143 ], [ %179, %156 ], [ %147, %149 ]\l  %184 = add nuw nsw i32 %55, 1\l  %185 = icmp eq i32 %184, %7\l  br i1 %185, label %186, label %54, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x640b6b0:s0 -> Node0x640b0a0;
	Node0x640b6b0:s1 -> Node0x640b540;
	Node0x640b0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%186:\l186:                                              \l  %187 = phi i32 [ %51, %48 ], [ %182, %181 ]\l  %188 = phi i32 [ %50, %48 ], [ %183, %181 ]\l  %189 = add nuw nsw i32 %49, 1\l  %190 = icmp eq i32 %189, %5\l  br i1 %190, label %191, label %48, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x640b0a0:s0 -> Node0x640a8e0;
	Node0x640b0a0:s1 -> Node0x640afb0;
	Node0x640a8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%191:\l191:                                              \l  %192 = phi i32 [ 0, %31 ], [ %187, %186 ]\l  %193 = phi i32 [ 0, %31 ], [ %188, %186 ]\l  %194 = shl i32 %193, 1\l  %195 = sub i32 %194, %192\l  %196 = sitofp i32 %195 to float\l  %197 = sext i32 %27 to i64\l  %198 = getelementptr inbounds float, float addrspace(1)* %10, i64 %197\l  %199 = load float, float addrspace(1)* %198, align 4, !tbaa !14,\l... !amdgpu.noclobber !5\l  %200 = fmul contract float %199, %196\l  %201 = sext i32 %35 to i64\l  %202 = getelementptr inbounds float, float addrspace(1)* %2, i64 %201\l  store float %200, float addrspace(1)* %202, align 4, !tbaa !14\l  br label %203\l}"];
	Node0x640a8e0 -> Node0x640a350;
	Node0x640a350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%203:\l203:                                              \l  ret void\l}"];
}
