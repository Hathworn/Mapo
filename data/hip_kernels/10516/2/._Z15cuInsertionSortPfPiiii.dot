digraph "CFG for '_Z15cuInsertionSortPfPiiii' function" {
	label="CFG for '_Z15cuInsertionSortPfPiiii' function";

	Node0x5bc6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%5:\l  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %7 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %8 = getelementptr i8, i8 addrspace(4)* %7, i64 4\l  %9 = bitcast i8 addrspace(4)* %8 to i16 addrspace(4)*\l  %10 = load i16, i16 addrspace(4)* %9, align 4, !range !4, !invariant.load !5\l  %11 = zext i16 %10 to i32\l  %12 = mul i32 %6, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !6\l  %14 = add i32 %12, %13\l  %15 = icmp ult i32 %14, %2\l  br i1 %15, label %16, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5bc6b20:s0 -> Node0x5bc89b0;
	Node0x5bc6b20:s1 -> Node0x5bc8a40;
	Node0x5bc89b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%16:\l16:                                               \l  %17 = zext i32 %14 to i64\l  %18 = getelementptr inbounds float, float addrspace(1)* %0, i64 %17\l  %19 = getelementptr inbounds i32, i32 addrspace(1)* %1, i64 %17\l  %20 = load float, float addrspace(1)* %18, align 4, !tbaa !7,\l... !amdgpu.noclobber !5\l  store i32 1, i32 addrspace(1)* %19, align 4, !tbaa !11\l  %21 = icmp sgt i32 %4, 1\l  br i1 %21, label %22, label %74\l|{<s0>T|<s1>F}}"];
	Node0x5bc89b0:s0 -> Node0x5bc9860;
	Node0x5bc89b0:s1 -> Node0x5bc98f0;
	Node0x5bc9860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%22:\l22:                                               \l  %23 = phi i32 [ %71, %70 ], [ 1, %16 ]\l  %24 = phi float [ %72, %70 ], [ %20, %16 ]\l  %25 = mul nsw i32 %23, %2\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds float, float addrspace(1)* %18, i64 %26\l  %28 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  %29 = fcmp contract olt float %28, %24\l  br i1 %29, label %30, label %67\l|{<s0>T|<s1>F}}"];
	Node0x5bc9860:s0 -> Node0x5bca540;
	Node0x5bc9860:s1 -> Node0x5bca5d0;
	Node0x5bca540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%30:\l30:                                               \l  %31 = add nsw i32 %23, -1\l  %32 = icmp ugt i32 %23, 1\l  br i1 %32, label %33, label %43\l|{<s0>T|<s1>F}}"];
	Node0x5bca540:s0 -> Node0x5bc8b80;
	Node0x5bca540:s1 -> Node0x5bc8bd0;
	Node0x5bc8b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%33:\l33:                                               \l  %34 = phi i32 [ %41, %40 ], [ 0, %30 ]\l  %35 = mul nsw i32 %34, %2\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds float, float addrspace(1)* %18, i64 %36\l  %38 = load float, float addrspace(1)* %37, align 4, !tbaa !7\l  %39 = fcmp contract ogt float %38, %28\l  br i1 %39, label %43, label %40\l|{<s0>T|<s1>F}}"];
	Node0x5bc8b80:s0 -> Node0x5bc8bd0;
	Node0x5bc8b80:s1 -> Node0x5bcab20;
	Node0x5bcab20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%40:\l40:                                               \l  %41 = add nuw nsw i32 %34, 1\l  %42 = icmp ult i32 %41, %31\l  br i1 %42, label %33, label %43, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5bcab20:s0 -> Node0x5bc8b80;
	Node0x5bcab20:s1 -> Node0x5bc8bd0;
	Node0x5bc8bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%43:\l43:                                               \l  %44 = phi i32 [ %31, %30 ], [ %31, %40 ], [ %34, %33 ]\l  %45 = icmp ugt i32 %23, %44\l  br i1 %45, label %46, label %60\l|{<s0>T|<s1>F}}"];
	Node0x5bc8bd0:s0 -> Node0x5bcb400;
	Node0x5bc8bd0:s1 -> Node0x5bcb450;
	Node0x5bcb400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = phi i32 [ %48, %46 ], [ %23, %43 ]\l  %48 = add nsw i32 %47, -1\l  %49 = mul nsw i32 %48, %2\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds float, float addrspace(1)* %18, i64 %50\l  %52 = load float, float addrspace(1)* %51, align 4, !tbaa !7\l  %53 = mul nsw i32 %47, %2\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds float, float addrspace(1)* %18, i64 %54\l  store float %52, float addrspace(1)* %55, align 4, !tbaa !7\l  %56 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %50\l  %57 = load i32, i32 addrspace(1)* %56, align 4, !tbaa !11\l  %58 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %54\l  store i32 %57, i32 addrspace(1)* %58, align 4, !tbaa !11\l  %59 = icmp sgt i32 %48, %44\l  br i1 %59, label %46, label %60, !llvm.loop !15\l|{<s0>T|<s1>F}}"];
	Node0x5bcb400:s0 -> Node0x5bcb400;
	Node0x5bcb400:s1 -> Node0x5bcb450;
	Node0x5bcb450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%60:\l60:                                               \l  %61 = mul nsw i32 %44, %2\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds float, float addrspace(1)* %18, i64 %62\l  store float %28, float addrspace(1)* %63, align 4, !tbaa !7\l  %64 = add nuw nsw i32 %23, 1\l  %65 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %62\l  store i32 %64, i32 addrspace(1)* %65, align 4, !tbaa !11\l  %66 = load float, float addrspace(1)* %27, align 4, !tbaa !7\l  br label %70\l}"];
	Node0x5bcb450 -> Node0x5bc9a30;
	Node0x5bca5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%67:\l67:                                               \l  %68 = add nuw nsw i32 %23, 1\l  %69 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %26\l  store i32 %68, i32 addrspace(1)* %69, align 4, !tbaa !11\l  br label %70\l}"];
	Node0x5bca5d0 -> Node0x5bc9a30;
	Node0x5bc9a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%70:\l70:                                               \l  %71 = phi i32 [ %68, %67 ], [ %64, %60 ]\l  %72 = phi float [ %28, %67 ], [ %66, %60 ]\l  %73 = icmp eq i32 %71, %4\l  br i1 %73, label %74, label %22, !llvm.loop !16\l|{<s0>T|<s1>F}}"];
	Node0x5bc9a30:s0 -> Node0x5bc98f0;
	Node0x5bc9a30:s1 -> Node0x5bc9860;
	Node0x5bc98f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%74:\l74:                                               \l  %75 = phi float [ %20, %16 ], [ %72, %70 ]\l  %76 = add i32 %4, -1\l  %77 = icmp slt i32 %4, %3\l  br i1 %77, label %78, label %131\l|{<s0>T|<s1>F}}"];
	Node0x5bc98f0:s0 -> Node0x5bcd390;
	Node0x5bc98f0:s1 -> Node0x5bc8a40;
	Node0x5bcd390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{%78:\l78:                                               \l  %79 = mul nsw i32 %76, %2\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds float, float addrspace(1)* %18, i64 %80\l  br label %82\l}"];
	Node0x5bcd390 -> Node0x5bcd630;
	Node0x5bcd630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%82:\l82:                                               \l  %83 = phi i32 [ %4, %78 ], [ %128, %127 ]\l  %84 = phi float [ %75, %78 ], [ %129, %127 ]\l  %85 = mul nsw i32 %83, %2\l  %86 = sext i32 %85 to i64\l  %87 = getelementptr inbounds float, float addrspace(1)* %18, i64 %86\l  %88 = load float, float addrspace(1)* %87, align 4, !tbaa !7\l  %89 = fcmp contract olt float %88, %84\l  br i1 %89, label %92, label %90\l|{<s0>T|<s1>F}}"];
	Node0x5bcd630:s0 -> Node0x5bcdb40;
	Node0x5bcd630:s1 -> Node0x5bcdbd0;
	Node0x5bcdbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%90:\l90:                                               \l  %91 = add nsw i32 %83, 1\l  br label %127\l}"];
	Node0x5bcdbd0 -> Node0x5bcd6f0;
	Node0x5bcdb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%92:\l92:                                               \l  br i1 %21, label %93, label %103\l|{<s0>T|<s1>F}}"];
	Node0x5bcdb40:s0 -> Node0x5bcde10;
	Node0x5bcdb40:s1 -> Node0x5bcde60;
	Node0x5bcde10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d6524470",label="{%93:\l93:                                               \l  %94 = phi i32 [ %101, %100 ], [ 0, %92 ]\l  %95 = mul nsw i32 %94, %2\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds float, float addrspace(1)* %18, i64 %96\l  %98 = load float, float addrspace(1)* %97, align 4, !tbaa !7\l  %99 = fcmp contract ogt float %98, %88\l  br i1 %99, label %103, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5bcde10:s0 -> Node0x5bcde60;
	Node0x5bcde10:s1 -> Node0x5bcdf60;
	Node0x5bcdf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%100:\l100:                                              \l  %101 = add nuw nsw i32 %94, 1\l  %102 = icmp eq i32 %101, %76\l  br i1 %102, label %103, label %93, !llvm.loop !17\l|{<s0>T|<s1>F}}"];
	Node0x5bcdf60:s0 -> Node0x5bcde60;
	Node0x5bcdf60:s1 -> Node0x5bcde10;
	Node0x5bcde60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%103:\l103:                                              \l  %104 = phi i32 [ %76, %92 ], [ %76, %100 ], [ %94, %93 ]\l  %105 = icmp sgt i32 %76, %104\l  br i1 %105, label %106, label %120\l|{<s0>T|<s1>F}}"];
	Node0x5bcde60:s0 -> Node0x5bce7e0;
	Node0x5bcde60:s1 -> Node0x5bce830;
	Node0x5bce7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i32 [ %108, %106 ], [ %76, %103 ]\l  %108 = add nsw i32 %107, -1\l  %109 = mul nsw i32 %108, %2\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds float, float addrspace(1)* %18, i64 %110\l  %112 = load float, float addrspace(1)* %111, align 4, !tbaa !7\l  %113 = mul nsw i32 %107, %2\l  %114 = sext i32 %113 to i64\l  %115 = getelementptr inbounds float, float addrspace(1)* %18, i64 %114\l  store float %112, float addrspace(1)* %115, align 4, !tbaa !7\l  %116 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %110\l  %117 = load i32, i32 addrspace(1)* %116, align 4, !tbaa !11\l  %118 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %114\l  store i32 %117, i32 addrspace(1)* %118, align 4, !tbaa !11\l  %119 = icmp sgt i32 %108, %104\l  br i1 %119, label %106, label %120, !llvm.loop !18\l|{<s0>T|<s1>F}}"];
	Node0x5bce7e0:s0 -> Node0x5bce7e0;
	Node0x5bce7e0:s1 -> Node0x5bce830;
	Node0x5bce830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%120:\l120:                                              \l  %121 = mul nsw i32 %104, %2\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds float, float addrspace(1)* %18, i64 %122\l  store float %88, float addrspace(1)* %123, align 4, !tbaa !7\l  %124 = add nsw i32 %83, 1\l  %125 = getelementptr inbounds i32, i32 addrspace(1)* %19, i64 %122\l  store i32 %124, i32 addrspace(1)* %125, align 4, !tbaa !11\l  %126 = load float, float addrspace(1)* %81, align 4, !tbaa !7\l  br label %127\l}"];
	Node0x5bce830 -> Node0x5bcd6f0;
	Node0x5bcd6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%127:\l127:                                              \l  %128 = phi i32 [ %91, %90 ], [ %124, %120 ]\l  %129 = phi float [ %84, %90 ], [ %126, %120 ]\l  %130 = icmp slt i32 %128, %3\l  br i1 %130, label %82, label %131, !llvm.loop !19\l|{<s0>T|<s1>F}}"];
	Node0x5bcd6f0:s0 -> Node0x5bcd630;
	Node0x5bcd6f0:s1 -> Node0x5bc8a40;
	Node0x5bc8a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%131:\l131:                                              \l  ret void\l}"];
}
