digraph "CFG for '_Z19kInitIdentityMatrixPfii' function" {
	label="CFG for '_Z19kInitIdentityMatrixPfii' function";

	Node0x5918430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%3:\l  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x()\l  %5 = shl i32 %4, 7\l  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4\l  %7 = add i32 %5, %6\l  %8 = icmp slt i32 %7, %2\l  br i1 %8, label %9, label %24\l|{<s0>T|<s1>F}}"];
	Node0x5918430:s0 -> Node0x59185e0;
	Node0x5918430:s1 -> Node0x5919c80;
	Node0x59185e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%9:\l9:                                                \l  %10 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr()\l  %11 = getelementptr inbounds i8, i8 addrspace(4)* %10, i64 12\l  %12 = bitcast i8 addrspace(4)* %11 to i32 addrspace(4)*\l  %13 = load i32, i32 addrspace(4)* %12, align 4, !tbaa !5\l  %14 = getelementptr i8, i8 addrspace(4)* %10, i64 4\l  %15 = bitcast i8 addrspace(4)* %14 to i16 addrspace(4)*\l  %16 = load i16, i16 addrspace(4)* %15, align 4, !range !14, !invariant.load\l... !15\l  %17 = zext i16 %16 to i32\l  %18 = udiv i32 %13, %17\l  %19 = mul i32 %18, %17\l  %20 = icmp ugt i32 %13, %19\l  %21 = zext i1 %20 to i32\l  %22 = add i32 %18, %21\l  %23 = shl i32 %22, 7\l  br label %25\l}"];
	Node0x59185e0 -> Node0x591abd0;
	Node0x5919c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%24:\l24:                                               \l  ret void\l}"];
	Node0x591abd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i32 [ %7, %9 ], [ %36, %25 ]\l  %27 = freeze i32 %26\l  %28 = freeze i32 %1\l  %29 = sdiv i32 %27, %28\l  %30 = mul i32 %29, %28\l  %31 = sub i32 %27, %30\l  %32 = icmp eq i32 %31, %29\l  %33 = sext i32 %26 to i64\l  %34 = getelementptr inbounds float, float addrspace(1)* %0, i64 %33\l  %35 = select i1 %32, float 1.000000e+00, float 0.000000e+00\l  store float %35, float addrspace(1)* %34, align 4, !tbaa !16\l  %36 = add i32 %23, %26\l  %37 = icmp slt i32 %36, %2\l  br i1 %37, label %25, label %24, !llvm.loop !20\l|{<s0>T|<s1>F}}"];
	Node0x591abd0:s0 -> Node0x591abd0;
	Node0x591abd0:s1 -> Node0x5919c80;
}
